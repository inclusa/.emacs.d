#    -*- mode: org -*-


Archived entries from file c:/Users/70340930/.emacs.d/org-init.d/init.org

* 外部プログラムが必要そうなライブラリ
** matlab.el
:PROPERTIES:
:ARCHIVE_TIME: 2014-05-29 Thu 18:21
:ARCHIVE_FILE: ~/.emacs.d/org-init.d/init.org
:ARCHIVE_OLPATH: 外部プログラムが必要そうなライブラリ
:ARCHIVE_CATEGORY: init
:END:
- [[http://d.hatena.ne.jp/uhiaha888/20100815/1281888552][emacsでmatlab - uhiaha888の日記]]
#+BEGIN_SRC emacs-lisp
(autoload 'matlab-mode "matlab" "Enter MATLAB mode." t)
(autoload 'matlab-shell "matlab" "Interactive MATLAB mode." t)
(setq auto-mode-alist (delete '("\\.m\\'" . objc-mode) auto-mode-alist)) ; .m ファイルが object-c に解釈されないようにする
(add-to-list 'auto-mode-alist '("\\.m\\'" . matlab-mode))
(setq matlab-shell-command "/usr/local/bin/matlab"
      matlab-shell-command-swithes '("-nodesktop -v=glnx86")
      matlab-indent-level 4
      matlab-indent-function-body nil
      matlab-highlight-cross-function-variables t
      matlab-return-add-semicolon t
      matlab-show-mlint-warnings t
      mlint-programs '("/usr/local/matlab75/bin/glnx86/mlint")
      matlab-mode-install-path (list (expand-file-name "/usr/local/matlab75/")))
(autoload 'mlint-minor-mode "mlint" nil t)
(add-hook 'matlab-mode-hook (lambda ()
                              (mlint-minor-mode 1)
                              ;; config about face for mlint
                              (set-face-background 'linemark-go-face "gray40")
                              (set-face-background 'linemark-funny-face "red")
                              ))
;; mlint しようとすると， linemark.el が必要らしいが，require したらしたで
;; おかしいので使わないようにしよう．
;; cedet から linemark.el だけコピーしてロードしたら何とか動くようだ．
(add-hook 'matlab-mode-hook (lambda () (auto-fill-mode 0)))
(add-hook 'matlab-shell-mode-hook 'ansi-color-for-comint-mode-on)
(add-hook 'matlab-shell-mode-hook
           (lambda () (setenv "LANG" "C")))
(eval-after-load "shell"
  '(define-key shell-mode-map [down] 'comint-next-matching-input-from-input))
(eval-after-load "shell"
  '(define-key shell-mode-map [up] 'comint-previous-matching-input-from-input))
(eval-after-load "matlab"
  '(progn
     (define-key matlab-mode-map (kbd "M-;") 'nil))) ; matlab-mode で dwim-comment をつかう
     ;; (define-key matlab-shell-mode-map (kbd "<tab>") 'ac-complete)
     ;; (define-key matlab-shell-mode-map (kbd "C-<tab>") 'matlab-shell-tab)))

(defface ac-matlab-candidate-face
  '((t (:background "PaleGreen" :foreground "black")))
  "Face for matlab candidate."
  :group 'auto-complete)

(defface ac-matlab-selection-face
  '((t (:background "DarkGreen" :foreground "white")))
  "Face for matlab selected candidate."
  :group 'auto-complete)

(defun matlab-complete-symbol-list (&optional arg)
  (interactive "P")
  ;(matlab-navigation-syntax
    (let* ((prefix (if (and (not (eq last-command 'matlab-complete-symbol))
                            (member (preceding-char) '(?  ?\t ?\n ?, ?\( ?\[ ?\')))
                       ""
                     (buffer-substring-no-properties
                      (save-excursion (forward-word -1) (point))
                      (point))))
           (sem (matlab-lattr-semantics prefix)))
      (if (not (eq last-command 'matlab-complete-symbol))
          (setq matlab-last-prefix prefix
                matlab-last-semantic sem
                matlab-completion-search-state
                (cond ((eq sem 'solo)
                       '(matlab-solo-completions

                         matlab-find-user-functions
                         matlab-find-recent-variable))
                      ((eq sem 'boolean)
                       '(matlab-find-recent-variable
                         matlab-boolean-completions
                         matlab-find-user-functions
                         matlab-value-completions))
                      ((eq sem 'value)
                       '(matlab-find-recent-variable
                         matlab-find-user-functions
                         matlab-value-completions
                         matlab-boolean-completions))
                      ((eq sem 'property)
                       '(matlab-property-completions
                         matlab-find-user-functions
                         matlab-find-recent-variable
                         matlab-value-completions))
                      (t '(matlab-find-recent-variable
                           matlab-find-user-functions
                           matlab-value-completions
                           matlab-boolean-completions)))))

      (let ((allsyms (apply 'append
                            (mapcar (lambda (f) (funcall f prefix))
                                    matlab-completion-search-state))))
        (matlab-uniquafy-list allsyms))))

(defvar ac-source-matlab
  '((candidates
     . (lambda ()
         (matlab-complete-symbol-list)))
    (candidate-face . ac-matlab-candidate-face)
    (selection-face . ac-matlab-selection-face)
    ))

(defvar ac-source-matlab-functions nil
  "Souce for matlab functions.")
(setq ac-source-matlab-functions
      '((candidates . (list "zeros" "ones" "eye" "mean" "exp" "length" "save" "normpdf" "plot"
                            "size" "print" "sum" "prod" "inv" "diag" "rand" "randn" "linspace"
                            "logspace" "length" "any" "all" "find" "reshape" "meshgrid" "char"
                            "deblank" "double" "strcmp" "strncmp" "isletter" "isspace" "findstr"
                            "strrep" "int2str" "num2str" "str2num" "dec2hex" "dec2bin" "hex2dec"
                            "bin2dec" "mat2str" "eval" "tic" "toc" "figure" "hold" "subplot"
                            "fplot" "title" "xlabel" "ylabel" "text" "gtext" "grid" "axis"
                            "legend" "set" "get" "bar" "barh" "area" "pie" "hist" "stem"
                            "staris" "compass" "feather" "quiver" "contour" "ginput" "drawnow"
                            "image" "imagesc" "image" "imread" "fill" "fprintf" "fopen"
                            "fclose" "fgetl" "feof" "fwrite" "fread"))
        (document . ac-matlab-function-documentation)
        (symbol . "f")))

(defun ac-matlab-function-documentation (fnc)
  "Show document of matlab function."
  (condition-case nil
      (matlab-shell-collect-command-output (concat "help " fnc))
    (error "You need to run the command `matlab-shell' to read help!")))


(add-hook 'matlab-mode-hook
          (lambda ()
            (add-to-list 'ac-sources 'ac-source-matlab)
            (add-to-list 'ac-sources 'ac-source-matlab-functions)
            (dolist (source '(ac-source-features ac-source-functions
                                                 ac-source-variables ac-source-symbols))
              (setq ac-sources (delq source ac-sources)))
            (key-chord-define matlab-mode-map "df" 'matlab-shell-describe-command)
            (key-chord-define matlab-mode-map "dv" 'matlab-shell-describe-variable)
            (key-chord-define matlab-mode-map "AA" 'matlab-shell-apropos)
            ))

(add-hook 'matlab-shell-mode-hook
          (lambda ()
            (add-to-list 'ac-sources 'ac-source-matlab)
            (add-to-list 'ac-sources 'ac-source-matlab-functions)
            (dolist (source '(ac-source-features ac-source-functions
                                                 ac-source-variables ac-source-symbols))
              (setq ac-sources (delq source ac-sources)))
            (key-chord-define matlab-shell-mode-map "df" 'matlab-shell-describe-command)
            (key-chord-define matlab-shell-mode-map "dv" 'matlab-shell-describe-variable)
            (key-chord-define matlab-shell-mode-map "AA" 'matlab-shell-apropos)
            ))




;;; プロンプトじゃない場所から comint-previous-input を
;;; 実行したとき，プロンプトに移動する
;;; 2011-06-30 (Thu)
(defadvice comint-previous-input
  (before comint-previous-input-anywhere activate)
  (if (not (comint-after-pmark-p))
      (end-of-buffer)))
#+END_SRC

** wl.el                                                           :noexport:
:PROPERTIES:
:ARCHIVE_TIME: 2014-05-29 Thu 18:31
:ARCHIVE_FILE: ~/.emacs.d/org-init.d/init.org
:ARCHIVE_OLPATH: 外部プログラムが必要そうなライブラリ
:ARCHIVE_CATEGORY: init
:END:
Wanderlust メーラー．設定は .wl, .folders でする．
#+BEGIN_SRC emacs-lisp
;; SSL/TLS 用証明書ストアのパス
;(setq ssl-certificate-directory (concat dropbox-directory "/certs"))
(setq ssl-certificate-verification-policy 1)

(autoload 'wl "wl" "Wanderlust" t)
(autoload 'wl-other-frame "wl" "Wanderlust on new frame." t)
(autoload 'wl-draft "wl-draft" "Write draft with Wanderlust." t)
(setq wl-init-file (concat user-emacs-directory ".wl"))
(setq wl-folders-file (concat user-emacs-directory ".folders"))
#+END_SRC
