# -*- coding: utf-8 -*-
(find-rurima "= class Proc < Object" "refm/api/src/_builtin/Proc")
(find-rurima "== Class Methods" "= class Proc < Object" "refm/api/src/_builtin/Proc")
(find-rurima "--- new -> Proc" "== Class Methods" "= class Proc < Object" "refm/api/src/_builtin/Proc")
(find-rurima "--- new { ... } -> Proc" "== Class Methods" "= class Proc < Object" "refm/api/src/_builtin/Proc")
(find-rurima "== Instance Methods" "= class Proc < Object" "refm/api/src/_builtin/Proc")
(find-rurima "--- [](*arg) -> ()" "== Instance Methods" "= class Proc < Object" "refm/api/src/_builtin/Proc")
(find-rurima "--- call(*arg) -> ()" "== Instance Methods" "= class Proc < Object" "refm/api/src/_builtin/Proc")
(find-rurima "--- ===(*arg) -> ()" "== Instance Methods" "= class Proc < Object" "refm/api/src/_builtin/Proc")
(find-rurima "--- yield(*arg) -> ()" "== Instance Methods" "= class Proc < Object" "refm/api/src/_builtin/Proc")
(find-rurima "--- arity -> Fixnum" "== Instance Methods" "= class Proc < Object" "refm/api/src/_builtin/Proc")
(find-rurima "--- binding -> Binding" "== Instance Methods" "= class Proc < Object" "refm/api/src/_builtin/Proc")
(find-rurima "--- to_proc -> self" "== Instance Methods" "= class Proc < Object" "refm/api/src/_builtin/Proc")
(find-rurima "--- to_s -> String" "== Instance Methods" "= class Proc < Object" "refm/api/src/_builtin/Proc")
(find-rurima "--- curry         -> Proc" "== Instance Methods" "= class Proc < Object" "refm/api/src/_builtin/Proc")
(find-rurima "--- curry(arity)  -> Proc" "== Instance Methods" "= class Proc < Object" "refm/api/src/_builtin/Proc")
(find-rurima "--- lambda? -> bool" "== Instance Methods" "= class Proc < Object" "refm/api/src/_builtin/Proc")
(find-rurima "--- source_location -> [String, Fixnum] | nil" "== Instance Methods" "= class Proc < Object" "refm/api/src/_builtin/Proc")
(find-rurima "--- parameters -> [object]" "== Instance Methods" "= class Proc < Object" "refm/api/src/_builtin/Proc")
(find-rurima "= class Fixnum < Integer" "refm/api/src/_builtin/Fixnum")
(find-rurima "=== 破壊的な変更" "= class Fixnum < Integer" "refm/api/src/_builtin/Fixnum")
(find-rurima "== Instance Methods" "= class Fixnum < Integer" "refm/api/src/_builtin/Fixnum")
(find-rurima "--- [](nth) -> Fixnum" "== Instance Methods" "= class Fixnum < Integer" "refm/api/src/_builtin/Fixnum")
(find-rurima "--- +(other) -> Fixnum | Bignum | Float" "== Instance Methods" "= class Fixnum < Integer" "refm/api/src/_builtin/Fixnum")
(find-rurima "--- -(other) -> Fixnum | Bignum | Float" "== Instance Methods" "= class Fixnum < Integer" "refm/api/src/_builtin/Fixnum")
(find-rurima "--- *(other) -> Fixnum | Bignum | Float" "== Instance Methods" "= class Fixnum < Integer" "refm/api/src/_builtin/Fixnum")
(find-rurima "--- /(other) -> Fixnum | Bignum | Float" "== Instance Methods" "= class Fixnum < Integer" "refm/api/src/_builtin/Fixnum")
(find-rurima "--- %(other) -> Fixnum | Bignum | Float" "== Instance Methods" "= class Fixnum < Integer" "refm/api/src/_builtin/Fixnum")
(find-rurima "--- **(other) -> Fixnum | Bignum | Float" "== Instance Methods" "= class Fixnum < Integer" "refm/api/src/_builtin/Fixnum")
(find-rurima "--- <=>(other) -> Fixnum" "== Instance Methods" "= class Fixnum < Integer" "refm/api/src/_builtin/Fixnum")
(find-rurima "--- ==(other) -> bool" "== Instance Methods" "= class Fixnum < Integer" "refm/api/src/_builtin/Fixnum")
(find-rurima "--- <(other)  -> bool" "== Instance Methods" "= class Fixnum < Integer" "refm/api/src/_builtin/Fixnum")
(find-rurima "--- <=(other) -> bool" "== Instance Methods" "= class Fixnum < Integer" "refm/api/src/_builtin/Fixnum")
(find-rurima "--- >(other)  -> bool" "== Instance Methods" "= class Fixnum < Integer" "refm/api/src/_builtin/Fixnum")
(find-rurima "--- >=(other) -> bool" "== Instance Methods" "= class Fixnum < Integer" "refm/api/src/_builtin/Fixnum")
(find-rurima "--- ~        -> Fixnum | Bignum" "== Instance Methods" "= class Fixnum < Integer" "refm/api/src/_builtin/Fixnum")
(find-rurima "--- |(other) -> Fixnum | Bignum" "== Instance Methods" "= class Fixnum < Integer" "refm/api/src/_builtin/Fixnum")
(find-rurima "--- &(other) -> Fixnum | Bignum" "== Instance Methods" "= class Fixnum < Integer" "refm/api/src/_builtin/Fixnum")
(find-rurima "--- ^(other) -> Fixnum | Bignum" "== Instance Methods" "= class Fixnum < Integer" "refm/api/src/_builtin/Fixnum")
(find-rurima "--- <<(bits) -> Fixnum | Bignum" "== Instance Methods" "= class Fixnum < Integer" "refm/api/src/_builtin/Fixnum")
(find-rurima "--- >>(bits) -> Fixnum | Bignum" "== Instance Methods" "= class Fixnum < Integer" "refm/api/src/_builtin/Fixnum")
(find-rurima "--- id2name -> String | nil" "== Instance Methods" "= class Fixnum < Integer" "refm/api/src/_builtin/Fixnum")
(find-rurima "--- size -> Fixnum" "== Instance Methods" "= class Fixnum < Integer" "refm/api/src/_builtin/Fixnum")
(find-rurima "--- to_f -> Float" "== Instance Methods" "= class Fixnum < Integer" "refm/api/src/_builtin/Fixnum")
(find-rurima "--- to_sym -> Symbol | nil" "== Instance Methods" "= class Fixnum < Integer" "refm/api/src/_builtin/Fixnum")
(find-rurima "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "== Class Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- abort_on_exception             -> bool" "== Class Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- abort_on_exception=(newstate)" "== Class Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- critical             -> nil" "== Class Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- critical             -> bool" "== Class Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- critical=(newstate)" "== Class Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- current    -> Thread" "== Class Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- exit    -> ()" "== Class Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- kill(thread)    -> Thread" "== Class Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- list    -> [Thread]" "== Class Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- main    -> Thread" "== Class Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- start(*arg) {|*arg| ... }       -> Thread" "== Class Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- fork(*arg) {|*arg| ... }        -> Thread" "== Class Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- new(*arg) {|*arg| ... }         -> Thread" "== Class Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- pass    -> nil" "== Class Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- stop     -> nil" "== Class Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- exclusive { ... }  -> object" "== Class Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "== Instance Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- [](name)    -> object | nil" "== Instance Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- []=(name,val)" "== Instance Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- abort_on_exception               -> bool" "== Instance Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- abort_on_exception=(newstate)" "== Instance Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- alive?     -> bool" "== Instance Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- exit         -> self" "== Instance Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- kill         -> self" "== Instance Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- terminate    -> self" "== Instance Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- exit!         -> self" "== Instance Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- kill!         -> self" "== Instance Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- terminate!    -> self" "== Instance Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- group    -> ThreadGroup | nil" "== Instance Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- join           -> self" "== Instance Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- join(limit)    -> self | nil" "== Instance Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- key?(name)     -> bool" "== Instance Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- keys    -> [Symbol]" "== Instance Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- priority    -> Integer" "== Instance Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- priority=(val)" "== Instance Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- raise(error_type, message, traceback)     -> ()" "== Instance Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- run    -> self" "== Instance Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- safe_level    -> Integer" "== Instance Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- status    -> String | false | nil" "== Instance Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- stop?    -> bool" "== Instance Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- value    -> object " "== Instance Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- wakeup    -> self" "== Instance Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- add_trace_func(pr) -> Proc" "== Instance Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- set_trace_func(pr) -> Proc | nil" "== Instance Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- backtrace    -> [String] | nil" "== Instance Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "== Constants" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- MUTEX_FOR_THREAD_EXCLUSIVE" "== Constants" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "= module GC::Profiler" "refm/api/src/_builtin/GC__Profiler")
(find-rurima "== Singleton Methods " "= module GC::Profiler" "refm/api/src/_builtin/GC__Profiler")
(find-rurima "--- enabled? -> bool" "== Singleton Methods " "= module GC::Profiler" "refm/api/src/_builtin/GC__Profiler")
(find-rurima "--- enable -> nil" "== Singleton Methods " "= module GC::Profiler" "refm/api/src/_builtin/GC__Profiler")
(find-rurima "--- disable -> nil" "== Singleton Methods " "= module GC::Profiler" "refm/api/src/_builtin/GC__Profiler")
(find-rurima "--- clear -> nil" "== Singleton Methods " "= module GC::Profiler" "refm/api/src/_builtin/GC__Profiler")
(find-rurima "--- result -> String" "== Singleton Methods " "= module GC::Profiler" "refm/api/src/_builtin/GC__Profiler")
(find-rurima "--- report(out = $stdout) -> nil" "== Singleton Methods " "= module GC::Profiler" "refm/api/src/_builtin/GC__Profiler")
(find-rurima "--- total_time -> Float" "== Singleton Methods " "= module GC::Profiler" "refm/api/src/_builtin/GC__Profiler")
(find-rurima "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- *(other) -> Complex" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- **(other) -> Complex" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- +(other) -> Complex" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- -(other) -> Complex" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- -@ -> Complex" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- /(other)   -> Complex" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- quo(other) -> Complex" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- ==(other) -> bool" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- abs       -> Float" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- magnitude -> Float" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- abs2 -> Numeric" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- arg   -> Float" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- angle -> Float" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- phase -> Float" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- coerce(other) -> [Complex, Complex]" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- conjugate -> Complex" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- conj      -> Complex" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- denominator -> Integer" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- eql?(other) -> bool" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- fdiv(other) -> Complex" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- hash -> Integer" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- imag      -> Numeric" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- imaginary -> Numeric" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- inspect -> String" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- marshal_dump -> Array" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- marshal_load -> Complex" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- numerator -> Complex" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- polar -> [Numeric, Numeric]" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- real -> Numeric" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- real? -> false" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- rect        -> [Numeric, Numeric]" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- rectangular -> [Numeric, Numeric]" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- to_f -> Float" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- to_i -> Integer" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- to_r             -> Rational" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- rationalize      -> Rational" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- rationalize(eps) -> Rational" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- to_s -> String" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "== Class Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- rect(r, i = 0)        -> Complex" "== Class Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- rectangular(r, i = 0) -> Complex" "== Class Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- polar(r, theta = 0) -> Complex" "== Class Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "== Constants" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- I -> Complex" "== Constants" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "= module ObjectSpace " "refm/api/src/_builtin/ObjectSpace")
(find-rurima "== Module Functions" "= module ObjectSpace " "refm/api/src/_builtin/ObjectSpace")
(find-rurima "--- _id2ref(id)    -> object" "== Module Functions" "= module ObjectSpace " "refm/api/src/_builtin/ObjectSpace")
(find-rurima "--- define_finalizer(obj, proc)         -> Array" "== Module Functions" "= module ObjectSpace " "refm/api/src/_builtin/ObjectSpace")
(find-rurima "--- define_finalizer(obj) {|id| ...}    -> Array" "== Module Functions" "= module ObjectSpace " "refm/api/src/_builtin/ObjectSpace")
(find-rurima "==== 使い方の注意" "== Module Functions" "= module ObjectSpace " "refm/api/src/_builtin/ObjectSpace")
(find-rurima "--- each_object        {|object| ...}    -> Integer" "==== 使い方の注意" "== Module Functions" "= module ObjectSpace " "refm/api/src/_builtin/ObjectSpace")
(find-rurima "--- each_object(klass) {|object| ...}    -> Integer" "==== 使い方の注意" "== Module Functions" "= module ObjectSpace " "refm/api/src/_builtin/ObjectSpace")
(find-rurima "--- each_object                          -> Enumerator" "==== 使い方の注意" "== Module Functions" "= module ObjectSpace " "refm/api/src/_builtin/ObjectSpace")
(find-rurima "--- each_object(klass)                   -> Enumerator" "==== 使い方の注意" "== Module Functions" "= module ObjectSpace " "refm/api/src/_builtin/ObjectSpace")
(find-rurima "--- each_object                          -> Enumerable::Enumerator" "==== 使い方の注意" "== Module Functions" "= module ObjectSpace " "refm/api/src/_builtin/ObjectSpace")
(find-rurima "--- each_object(klass)                   -> Enumerable::Enumerator" "==== 使い方の注意" "== Module Functions" "= module ObjectSpace " "refm/api/src/_builtin/ObjectSpace")
(find-rurima "--- garbage_collect    -> nil" "==== 使い方の注意" "== Module Functions" "= module ObjectSpace " "refm/api/src/_builtin/ObjectSpace")
(find-rurima "--- undefine_finalizer(obj)    -> object" "==== 使い方の注意" "== Module Functions" "= module ObjectSpace " "refm/api/src/_builtin/ObjectSpace")
(find-rurima "--- add_finalizer(proc)    -> Proc" "==== 使い方の注意" "== Module Functions" "= module ObjectSpace " "refm/api/src/_builtin/ObjectSpace")
(find-rurima "--- call_finalizer(obj)    -> object" "==== 使い方の注意" "== Module Functions" "= module ObjectSpace " "refm/api/src/_builtin/ObjectSpace")
(find-rurima "--- finalizers     -> [Proc]" "==== 使い方の注意" "== Module Functions" "= module ObjectSpace " "refm/api/src/_builtin/ObjectSpace")
(find-rurima "--- remove_finalizer(proc)    -> Proc" "==== 使い方の注意" "== Module Functions" "= module ObjectSpace " "refm/api/src/_builtin/ObjectSpace")
(find-rurima "==== 整数のテンプレート文字のシステム依存性" "refm/api/src/_builtin/pack-template")
(find-rurima "==== 各テンプレート文字の説明" "refm/api/src/_builtin/pack-template")
(find-rurima "==== 使用例" "refm/api/src/_builtin/pack-template")
(find-rurima "= class LocalJumpError < StandardError" "refm/api/src/_builtin/LocalJumpError")
(find-rurima "== Instance Methods" "= class LocalJumpError < StandardError" "refm/api/src/_builtin/LocalJumpError")
(find-rurima "--- exit_value -> object" "== Instance Methods" "= class LocalJumpError < StandardError" "refm/api/src/_builtin/LocalJumpError")
(find-rurima "--- reason -> Symbol" "== Instance Methods" "= class LocalJumpError < StandardError" "refm/api/src/_builtin/LocalJumpError")
(find-rurima "= class Bignum < Integer" "refm/api/src/_builtin/Bignum")
(find-rurima "=== 破壊的な変更" "= class Bignum < Integer" "refm/api/src/_builtin/Bignum")
(find-rurima "== Instance Methods" "= class Bignum < Integer" "refm/api/src/_builtin/Bignum")
(find-rurima "--- [](nth) -> Fixnum" "== Instance Methods" "= class Bignum < Integer" "refm/api/src/_builtin/Bignum")
(find-rurima "--- +(other) -> Fixnum | Bignum | Float" "== Instance Methods" "= class Bignum < Integer" "refm/api/src/_builtin/Bignum")
(find-rurima "--- -(other) -> Fixnum | Bignum | Float" "== Instance Methods" "= class Bignum < Integer" "refm/api/src/_builtin/Bignum")
(find-rurima "--- *(other) -> Fixnum | Bignum | Float" "== Instance Methods" "= class Bignum < Integer" "refm/api/src/_builtin/Bignum")
(find-rurima "--- /(other) -> Fixnum | Bignum | Float" "== Instance Methods" "= class Bignum < Integer" "refm/api/src/_builtin/Bignum")
(find-rurima "--- %(other) -> Fixnum | Bignum | Float" "== Instance Methods" "= class Bignum < Integer" "refm/api/src/_builtin/Bignum")
(find-rurima "--- **(other) -> Fixnum | Bignum | Float" "== Instance Methods" "= class Bignum < Integer" "refm/api/src/_builtin/Bignum")
(find-rurima "--- <=>(other) -> Fixnum | nil" "== Instance Methods" "= class Bignum < Integer" "refm/api/src/_builtin/Bignum")
(find-rurima "--- ==(other) -> bool" "== Instance Methods" "= class Bignum < Integer" "refm/api/src/_builtin/Bignum")
(find-rurima "--- ~        -> Fixnum | Bignum" "== Instance Methods" "= class Bignum < Integer" "refm/api/src/_builtin/Bignum")
(find-rurima "--- |(other) -> Fixnum | Bignum" "== Instance Methods" "= class Bignum < Integer" "refm/api/src/_builtin/Bignum")
(find-rurima "--- &(other) -> Fixnum | Bignum" "== Instance Methods" "= class Bignum < Integer" "refm/api/src/_builtin/Bignum")
(find-rurima "--- ^(other) -> Fixnum | Bignum" "== Instance Methods" "= class Bignum < Integer" "refm/api/src/_builtin/Bignum")
(find-rurima "--- <<(bits) -> Fixnum | Bignum" "== Instance Methods" "= class Bignum < Integer" "refm/api/src/_builtin/Bignum")
(find-rurima "--- >>(bits) -> Fixnum | Bignum" "== Instance Methods" "= class Bignum < Integer" "refm/api/src/_builtin/Bignum")
(find-rurima "--- size -> Fixnum" "== Instance Methods" "= class Bignum < Integer" "refm/api/src/_builtin/Bignum")
(find-rurima "--- to_f -> Float" "== Instance Methods" "= class Bignum < Integer" "refm/api/src/_builtin/Bignum")
(find-rurima "= module Comparable" "refm/api/src/_builtin/Comparable")
(find-rurima "== Instance Methods" "= module Comparable" "refm/api/src/_builtin/Comparable")
(find-rurima "--- ==(other)    -> bool | nil" "== Instance Methods" "= module Comparable" "refm/api/src/_builtin/Comparable")
(find-rurima "--- >(other)    -> bool" "== Instance Methods" "= module Comparable" "refm/api/src/_builtin/Comparable")
(find-rurima "--- >=(other)    -> bool" "== Instance Methods" "= module Comparable" "refm/api/src/_builtin/Comparable")
(find-rurima "--- <(other)    -> bool" "== Instance Methods" "= module Comparable" "refm/api/src/_builtin/Comparable")
(find-rurima "--- <=(other)    -> bool" "== Instance Methods" "= module Comparable" "refm/api/src/_builtin/Comparable")
(find-rurima "--- between?(min, max)    -> bool" "== Instance Methods" "= module Comparable" "refm/api/src/_builtin/Comparable")
(find-rurima "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- [](key) -> String" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- []=(key, value)" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- store(key, value) -> String" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- clear  -> self" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- delete(key) -> String | nil" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- delete(key) {|key| ... } -> String | nil" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- reject                     -> Enumerator" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- reject                     -> Enumerable::Enumerator" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- reject {|key, value| ... } -> Hash" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- delete_if {|key, value| ... } -> ENV" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- reject! {|key, value| ... }   -> ENV | nil" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- delete_if  -> Enumerator" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- reject!    -> Enumerator" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- delete_if  -> Enumerable::Enumerator" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- reject!    -> Enumerable::Enumerator" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- each                          -> Enumerator" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- each_pair                     -> Enumerator" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- each                          -> Enumerable::Enumerator" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- each_pair                     -> Enumerable::Enumerator" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- each {|key, value| ... }      -> self" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- each_pair {|key, value| ... } -> self" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- each_key              -> Enumerator" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- each_key              -> Enumerable::Enumerator" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- each_key {|key| ... } -> self" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- each_value                -> Enumerator" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- each_value                -> Enumerable::Enumerator" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- each_value {|value| ... } -> self" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- empty? -> bool" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- fetch(key) -> String" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- fetch(key, default) -> String" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- fetch(key) {|key| ... } -> String" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- has_key?(key) -> bool" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- include?(key) -> bool" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- key?(key)     -> bool" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- member?(key)  -> bool" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- has_value?(val) -> bool" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- value?(val)     -> bool" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- key(val)   -> String | nil" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- index(val) -> String | nil" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- indexes(*key) -> [String]" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- indices(*key) -> [String]" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- inspect -> String" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- invert -> Hash" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- keys -> [String]" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- length -> Fixnum" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- size   -> Fixnum" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- rehash -> nil" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- replace(hash) -> ENV" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- select                      -> Enumerator" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- select                      -> Enumerable::Enumerator" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- select {|key, value| ... }  -> [[String, String]]" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- shift -> [String, String]" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- to_a -> [[String, String]]" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- to_hash -> Hash" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- to_s -> String" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- update(other) -> ENV" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- values -> [String]" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- values_at(*key) -> [String]" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- assoc(key) -> Array | nil" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- rassoc(value) -> Array | nil" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- keep_if {|key, value| ... } -> ENV" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- select! {|key, value| ... } -> ENV | nil" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- keep_if -> Enumerator" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- select! -> Enumerator" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- filename -> String" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- path -> String" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- to_s -> String" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- filename -> String" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- to_s -> String" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- file -> IO" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- lineno -> Integer" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- lineno=(number)" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- skip -> self" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- binmode -> self" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- close -> self" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- closed? -> bool" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- each(rs = $/) {|line| ... } -> self" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- each_line(rs = $/) {|line| ... } -> self" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- each(rs = $/)       -> Enumerable::Enumerator" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- each_line(rs = $/)  -> Enumerable::Enumerator" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- each(rs = $/)       -> Enumerator" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- each_line(rs = $/)  -> Enumerator" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- each_byte{|char| ...} -> self" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- each_byte -> Enumerable::Enumerator" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- each_byte -> Enumerator" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- each_char{|c| ... }     -> self" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- chars{|c| ... }         -> self" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- each_char               -> Enumerable::Enumerator" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- chars                   -> Enumerable::Enumerator" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- each_char               -> Enumerator" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- chars                   -> Enumerator" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- eof -> bool" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- eof? -> bool" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- fileno -> Integer" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- to_i -> Integer" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- getc -> Integer | nil" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- gets -> String | nil" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- pos -> Integer" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- tell -> Integer" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- pos=(n)" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- read(length = nil, str = nil) -> String" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- readchar -> Integer" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- readline -> String" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- readlines(rs = $/) -> [String]" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- to_a(rs = $/) -> [String]" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- rewind -> 0" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- seek(offset, whence = IO::SEEK_SET) -> 0" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- to_io -> IO" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- bytes    -> Enumerator" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- bytes    -> Enumerable::Enumerator" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- lines(rs = $/)    -> Enumerator" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- lines(rs = $/)    -> Enumerable::Enumerator" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- getbyte   -> Integer | nil" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- readbyte   -> Integer" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- readpartial(length, str = nil)" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "== Class Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- try_convert(obj) -> Array | nil" "== Class Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- [](*item)    -> Array" "== Class Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- new(size = 0, val = nil)    -> Array" "== Class Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- new(ary)    -> Array" "== Class Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- new(size) {|index| ... }    -> Array" "== Class Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- [](nth)    -> object | nil" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- [](range)    -> Array | nil" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- [](start, length)    ->  Array | nil" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- []=(nth, val)" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- []=(range, val)" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- []=(start, length, val)" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- +(other)    -> Array" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- *(times)    -> Array" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- *(sep)    -> String" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- -(other)    -> Array" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- &(other)    -> Array" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- |(other)    -> Array" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- <<(obj)    -> self" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- <=>(other)    -> -1 | 0 | 1" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- <=>(other)    -> -1 | 0 | 1 | nil" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- ==(other)    -> bool" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- assoc(key)    -> Array | nil" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- at(pos)    -> object" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- clear    -> self" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- clone    -> Array" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- dup      -> Array" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- collect! {|item| ..}    -> self" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- map! {|item| ..}        -> self" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- collect!                -> Enumerator" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- map!                    -> Enumerator" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- collect!                -> Enumerable::Enumerator" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- map!                    -> Enumerable::Enumerator" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- compact     -> Array" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- compact!    -> self | nil" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- concat(other)    -> self" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- delete(val)           -> object | nil" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- delete(val) { ... }   -> object" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- delete_at(pos)    -> object | nil" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- delete_if {|x| ... }    -> self" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- reject! {|x| ... }      -> self | nil" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- delete_if               -> Enumerator" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- reject!                 -> Enumerator" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- delete_if               -> Enumerable::Enumerator" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- reject!                 -> Enumerable::Enumerator" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- each {|item| .... }    -> self" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- each                   -> Enumerator" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- each                   -> Enumerable::Enumerator" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- each_index {|index| .... }    -> self" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- each_index                    -> Enumerator" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- each_index                    -> Enumerable::Enumerator" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- empty?    -> bool" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- eql?(other)    -> bool" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- fetch(nth)               -> object    " "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- fetch(nth, ifnone)       -> object" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- fetch(nth) {|nth| ... }  -> object" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- fill(val)            -> self" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- fill {|index| ... }  -> self" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- fill(val, start, length = nil)             -> self" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- fill(val, range)                     -> self" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- fill(start, length = nil) {|index| ... }    -> self" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- fill(range) {|index| ... }            -> self" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- first       -> object | nil" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- first(n)    -> Array" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- flatten(lv = nil)     -> Array" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- flatten!(lv = nil)    -> self | nil" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- flatten               -> Array" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- flatten!              -> self | nil" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- hash    -> Integer" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- include?(val)    -> bool" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- index(val)           -> Integer | nil" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- index {|item| ...}   -> Integer | nil" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- indexes(*index)     " "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- indices(*index)     " "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- insert(nth, *val)    -> self" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- join(sep = $,)    -> String" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- last    -> object | nil" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- last(n)    -> Array" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- length    -> Integer" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- size      -> Integer" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- nitems    -> Integer" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- nitems{|obj| ... } -> Integer" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- pack(template)    -> String" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- pop(n = 1)    -> Array | nil" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- pop    -> object | nil" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- push(*obj)        -> self" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- push(obj, *rest)  -> self" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- rassoc(obj)    -> Array | nil" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- replace(another)    -> self" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- reverse     -> Array" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- reverse!    -> self" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- reverse_each {|item| ... }    -> self" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- reverse_each                  -> Enumerator" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- reverse_each                  -> Enumerable::Enumerator" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- rindex(val)           -> Integer | nil" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- rindex {|item| ... }  -> Integer | nil" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- shift(n = 1) -> Array  | nil" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- shift        -> object | nil" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- slice(nth)       -> object | nil" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- slice(pos, len)  -> Array | nil" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- slice(range)     -> Array | nil" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- slice!(nth)       -> object | nil" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- slice!(start, len)  -> Array | nil" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- slice!(range)     -> Array | nil" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- sort                -> Array" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- sort!               -> self" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- sort {|a, b| ... }  -> Array" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- sort! {|a, b| ... } -> self" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- sort_by!               -> Enumerator" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- sort_by! {|item| ... } -> self" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- to_a       -> Array" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- to_ary  -> self" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- to_s    -> String" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- inspect -> String" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- to_s    -> String" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- inspect -> String" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- transpose    -> Array" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- uniq     -> Array" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- uniq!    -> self | nil" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- uniq {|item| ... } -> Array" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- uniq! {|item| ... } -> self | nil" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- unshift(*obj)        -> self" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- unshift(obj, *rest)  -> self" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- values_at(*selectors)    -> Array | nil" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- zip(*lists)  -> [[object]]" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- zip(*lists) {|v1, v2, ...| ...} -> nil" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- choice        -> object" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- sample        -> object" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- sample(n)     -> Array" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- cycle {|obj| block }" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- shuffle -> Array" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- shuffle(random: rng) -> Array" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- shuffle!        -> self" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- shuffle!(random: rng) -> self" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- combination(n) {|c| block }    -> Array" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- combination(n)                 -> Enumerator" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- combination(n)                 -> Enumerable::Enumerator" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- permutation(n) { |p| block }       -> Array" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- permutation(n)                     -> Enumerator" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- permutation(n)                     -> Enumerable::Enumerator" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- product(*lists)    -> Array" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- product(*lists) { |e| ... }   -> self" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- repeated_combination(n) { |c| ... } -> Array" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- repeated_combination(n)             -> Enumerator" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- repeated_permutation(n) { |p| ... } -> Array" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- repeated_permutation(n)             -> Enumerator" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- keep_if {|item| ... } -> self" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- keep_if -> Enumerator" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- select! {|item| block } -> self | nil" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- select! -> Enumerator" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- rotate(cnt = 1) -> Array" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- rotate!(cnt = 1) -> self" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "= class ThreadGroup < Object" "refm/api/src/_builtin/ThreadGroup")
(find-rurima "=== ThreadGroup#freeze と ThreadGroup#enclose の違い" "= class ThreadGroup < Object" "refm/api/src/_builtin/ThreadGroup")
(find-rurima "== Class Methods" "= class ThreadGroup < Object" "refm/api/src/_builtin/ThreadGroup")
(find-rurima "--- new    -> ThreadGroup" "== Class Methods" "= class ThreadGroup < Object" "refm/api/src/_builtin/ThreadGroup")
(find-rurima "== Instance Methods" "= class ThreadGroup < Object" "refm/api/src/_builtin/ThreadGroup")
(find-rurima "--- add(thread)    -> self" "== Instance Methods" "= class ThreadGroup < Object" "refm/api/src/_builtin/ThreadGroup")
(find-rurima "--- enclose    -> self" "== Instance Methods" "= class ThreadGroup < Object" "refm/api/src/_builtin/ThreadGroup")
(find-rurima "--- enclosed?    -> bool" "== Instance Methods" "= class ThreadGroup < Object" "refm/api/src/_builtin/ThreadGroup")
(find-rurima "--- list    -> [Thread] " "== Instance Methods" "= class ThreadGroup < Object" "refm/api/src/_builtin/ThreadGroup")
(find-rurima "== Constants" "= class ThreadGroup < Object" "refm/api/src/_builtin/ThreadGroup")
(find-rurima "--- Default -> ThreadGroup" "== Constants" "= class ThreadGroup < Object" "refm/api/src/_builtin/ThreadGroup")
(find-rurima "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "== Class Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- [](*pattern)                        -> [String]" "== Class Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- glob(pattern, flags = 0)                -> [String]" "== Class Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- glob(pattern, flags = 0) {|file| ...}   -> nil" "== Class Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- glob(pattern)                       -> [String]" "== Class Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- glob(pattern) {|file| ...}          -> nil" "== Class Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- chdir           -> 0" "== Class Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- chdir(path)     -> 0" "== Class Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- chdir {|path| ... }          -> object" "== Class Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- chdir(path) {|path| ... }    -> object" "== Class Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- chroot(path)    -> 0" "== Class Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- delete(path)    -> 0" "== Class Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- rmdir(path)     -> 0" "== Class Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- unlink(path)    -> 0" "== Class Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- entries(path)    -> [String]" "== Class Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- foreach(path) {|file| ...}    -> nil" "== Class Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- foreach                       -> Enumerator" "== Class Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- foreach                       -> Enumerable::Enumerator" "== Class Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- getwd    -> String" "== Class Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- pwd      -> String" "== Class Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- mkdir(path, mode = 0777)    -> 0" "== Class Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- new(path)               -> Dir" "== Class Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- open(path)              -> Dir" "== Class Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- open(path) {|dir| ...}  -> object" "== Class Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- open(path) {|dir| ...}  -> nil" "== Class Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- exist?(file_name)    -> bool" "== Class Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- exists?(file_name)    -> bool" "== Class Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- home          -> String | nil" "== Class Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- home(user)    -> String | nil" "== Class Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "== Instance Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- close    -> nil" "== Instance Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- each {|item| ... }    -> self" "== Instance Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- each                  -> Enumerator" "== Instance Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- each                  -> Enumerable::Enumerator" "== Instance Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- path    -> String" "== Instance Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- pos     -> Integer" "== Instance Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- tell    -> Integer" "== Instance Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- pos=(pos)" "== Instance Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- seek(pos)    -> self" "== Instance Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- read    -> String | nil" "== Instance Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- rewind    -> self" "== Instance Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "= class FiberError < StandardError" "refm/api/src/_builtin/Fiber")
(find-rurima "= class Fiber" "refm/api/src/_builtin/Fiber")
(find-rurima "=== 例外" "= class Fiber" "refm/api/src/_builtin/Fiber")
(find-rurima "=== ショートチュートリアル" "= class Fiber" "refm/api/src/_builtin/Fiber")
(find-rurima "=== 注意" "= class Fiber" "refm/api/src/_builtin/Fiber")
(find-rurima "== Class Methods" "= class Fiber" "refm/api/src/_builtin/Fiber")
(find-rurima "--- new{|obj| ... } -> Fiber" "== Class Methods" "= class Fiber" "refm/api/src/_builtin/Fiber")
(find-rurima "--- yield(*arg = nil)   -> object" "== Class Methods" "= class Fiber" "refm/api/src/_builtin/Fiber")
(find-rurima "== Instance Methods" "= class Fiber" "refm/api/src/_builtin/Fiber")
(find-rurima "--- resume(*arg = nil)   -> object" "== Instance Methods" "= class Fiber" "refm/api/src/_builtin/Fiber")
(find-rurima "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "== Singleton Methods" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- abort(message = \"\")   -> ()" "== Singleton Methods" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- daemon(nochdir = nil, noclose = nil)    -> 0" "== Singleton Methods" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- detach(pid)    -> Thread" "== Singleton Methods" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- exec(command, *args) -> ()" "== Singleton Methods" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "==== 引数の解釈" "== Singleton Methods" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- exit(status = true)    -> ()" "==== 引数の解釈" "== Singleton Methods" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- exit!(status = false)    -> ()" "==== 引数の解釈" "== Singleton Methods" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- fork            -> Integer | nil" "==== 引数の解釈" "== Singleton Methods" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- fork { ... }    -> Integer | nil" "==== 引数の解釈" "== Singleton Methods" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- spawn(cmd, *arg)    -> Integer" "==== 引数の解釈" "== Singleton Methods" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- getrlimit(resource)    -> [Integer]" "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- setrlimit(resource, cur_limit, max_limit)    -> nil" "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- setrlimit(resource, limit)                   -> nil" "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- egid    -> Integer" "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- egid=(gid)" "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- euid        -> Integer" "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- euid=(uid)" "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- gid        -> Integer" "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- gid=(gid)" "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- groups     -> [Integer]" "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- groups=(gids)" "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- maxgroups        -> Integer" "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- maxgroups=(num)" "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- pid    -> Integer" "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- ppid    -> Integer" "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- uid        -> Integer" "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- uid=(id)" "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- getpgid(pid = 0)   -> Integer" "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- getpgrp            -> Integer" "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- getpriority(which, who)    -> Integer" "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- initgroups(user, group)    -> [Integer]" "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- kill(signal, pid, *rest)    -> Integer" "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- setpgrp(pid, pgrp)    -> 0" "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- setpgid(pid, pgrp)    -> 0" "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- setpgrp    -> 0" "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- setpriority(which, who, prio)    -> 0" "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- setsid    -> Integer" "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- times    -> Struct::Tms" "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- wait    -> Integer" "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- wait2   -> Array" "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- waitall    -> Array" "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- waitpid(pid, flags = 0)    -> Integer | nil" "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- waitpid2(pid, flags = 0)   -> Array | nil" "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "== Constants" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- PRIO_PROCESS" "== Constants" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- PRIO_PGRP" "== Constants" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- PRIO_USER" "== Constants" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- RLIMIT_AS" "== Constants" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- RLIMIT_CORE" "== Constants" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- RLIMIT_CPU" "== Constants" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- RLIMIT_DATA" "== Constants" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- RLIMIT_FSIZE" "== Constants" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- RLIMIT_MEMLOCK" "== Constants" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- RLIMIT_NOFILE" "== Constants" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- RLIMIT_NPROC" "== Constants" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- RLIMIT_RSS" "== Constants" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- RLIMIT_SBSIZE" "== Constants" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- RLIMIT_STACK" "== Constants" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- RLIM_INFINITY" "== Constants" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- RLIM_SAVED_CUR" "== Constants" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- RLIM_SAVED_MAX" "== Constants" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- WNOHANG" "== Constants" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- WUNTRACED" "== Constants" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "== Class Methods" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "--- compile(string, option = nil, code = nil) -> Regexp" "== Class Methods" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "--- new(string, option = nil, code = nil) -> Regexp" "== Class Methods" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "--- escape(string) -> String" "== Class Methods" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "--- quote(string) -> String" "== Class Methods" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "--- escape(string, kcode = $KCODE) -> String" "== Class Methods" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "--- quote(string, kcode = $KCODE) -> String" "== Class Methods" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "--- last_match -> MatchData" "== Class Methods" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "--- last_match(nth) -> String | nil" "== Class Methods" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "--- union(*pattern) -> Regexp" "== Class Methods" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "--- try_convert(obj) -> Regexp | nil" "== Class Methods" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "== Instance Methods" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "--- =~(string) -> Fixnum | nil" "== Instance Methods" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "--- ===(string) -> bool" "== Instance Methods" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "--- ~ -> Fixnum | nil" "== Instance Methods" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "--- casefold? -> bool" "== Instance Methods" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "--- fixed_encoding? -> bool" "== Instance Methods" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "--- kcode -> String | nil" "== Instance Methods" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "--- match(str, pos = 0) -> MatchData | nil" "== Instance Methods" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "--- match(str) -> MatchData | nil" "== Instance Methods" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "==== 便利な使いかた" "== Instance Methods" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "--- options -> Integer" "==== 便利な使いかた" "== Instance Methods" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "--- source -> String" "==== 便利な使いかた" "== Instance Methods" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "--- to_s -> String" "==== 便利な使いかた" "== Instance Methods" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "--- ==(other) -> bool" "==== 便利な使いかた" "== Instance Methods" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "--- eql?(other) -> bool" "==== 便利な使いかた" "== Instance Methods" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "--- hash -> Fixnum" "==== 便利な使いかた" "== Instance Methods" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "--- inspect -> String" "==== 便利な使いかた" "== Instance Methods" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "--- encoding   -> Encoding" "==== 便利な使いかた" "== Instance Methods" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "--- named_captures -> { String => [Integer] }" "==== 便利な使いかた" "== Instance Methods" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "--- names -> [String]" "==== 便利な使いかた" "== Instance Methods" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "== Constants" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "--- EXTENDED -> Fixnum" "== Constants" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "--- IGNORECASE -> Fixnum" "== Constants" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "--- MULTILINE -> Fixnum" "== Constants" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "--- FIXEDENCODING -> Fixnum" "== Constants" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "--- NOENCODING -> Fixnum" "== Constants" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "= class LoadError < ScriptError" "refm/api/src/_builtin/LoadError")
(find-rurima "= module Process::UID" "refm/api/src/_builtin/Process__UID")
(find-rurima "== Module Functions" "= module Process::UID" "refm/api/src/_builtin/Process__UID")
(find-rurima "--- rid    -> Integer" "== Module Functions" "= module Process::UID" "refm/api/src/_builtin/Process__UID")
(find-rurima "--- eid    -> Integer" "== Module Functions" "= module Process::UID" "refm/api/src/_builtin/Process__UID")
(find-rurima "--- change_privilege(id)    -> Integer" "== Module Functions" "= module Process::UID" "refm/api/src/_builtin/Process__UID")
(find-rurima "--- grant_privilege(id)    -> Integer" "== Module Functions" "= module Process::UID" "refm/api/src/_builtin/Process__UID")
(find-rurima "--- eid=(id)              " "== Module Functions" "= module Process::UID" "refm/api/src/_builtin/Process__UID")
(find-rurima "--- re_exchange    -> Integer" "== Module Functions" "= module Process::UID" "refm/api/src/_builtin/Process__UID")
(find-rurima "--- re_exchangeable?    -> bool" "== Module Functions" "= module Process::UID" "refm/api/src/_builtin/Process__UID")
(find-rurima "--- sid_available?    -> bool" "== Module Functions" "= module Process::UID" "refm/api/src/_builtin/Process__UID")
(find-rurima "--- switch          -> Integer" "== Module Functions" "= module Process::UID" "refm/api/src/_builtin/Process__UID")
(find-rurima "--- switch { .... } -> object" "== Module Functions" "= module Process::UID" "refm/api/src/_builtin/Process__UID")
(find-rurima "= class SystemStackError < Exception" "refm/api/src/_builtin/SystemStackError")
(find-rurima "= class SystemStackError < StandardError" "refm/api/src/_builtin/SystemStackError")
(find-rurima "== Constants" "refm/api/src/_builtin/constants")
(find-rurima "--- TRUE -> TrueClass" "== Constants" "refm/api/src/_builtin/constants")
(find-rurima "--- FALSE -> FalseClass" "== Constants" "refm/api/src/_builtin/constants")
(find-rurima "--- NIL -> NilClass" "== Constants" "refm/api/src/_builtin/constants")
(find-rurima "--- STDIN -> IO" "== Constants" "refm/api/src/_builtin/constants")
(find-rurima "==== 注意" "== Constants" "refm/api/src/_builtin/constants")
(find-rurima "--- STDOUT -> IO" "==== 注意" "== Constants" "refm/api/src/_builtin/constants")
(find-rurima "==== 注意" "== Constants" "refm/api/src/_builtin/constants")
(find-rurima "--- STDERR -> IO" "==== 注意" "== Constants" "refm/api/src/_builtin/constants")
(find-rurima "==== 注意" "== Constants" "refm/api/src/_builtin/constants")
(find-rurima "--- ENV -> Object" "==== 注意" "== Constants" "refm/api/src/_builtin/constants")
(find-rurima "--- ARGF -> Object" "==== 注意" "== Constants" "refm/api/src/_builtin/constants")
(find-rurima "--- ARGV -> Array" "==== 注意" "== Constants" "refm/api/src/_builtin/constants")
(find-rurima "--- DATA -> File" "==== 注意" "== Constants" "refm/api/src/_builtin/constants")
(find-rurima "==== 注意" "== Constants" "refm/api/src/_builtin/constants")
(find-rurima "==== 例1" "== Constants" "refm/api/src/_builtin/constants")
(find-rurima "==== 例2" "== Constants" "refm/api/src/_builtin/constants")
(find-rurima "==== 例3" "== Constants" "refm/api/src/_builtin/constants")
(find-rurima "==== 例4" "== Constants" "refm/api/src/_builtin/constants")
(find-rurima "--- TOPLEVEL_BINDING -> Binding" "==== 例4" "== Constants" "refm/api/src/_builtin/constants")
(find-rurima "--- RUBY_VERSION -> String" "==== 例4" "== Constants" "refm/api/src/_builtin/constants")
(find-rurima "--- RUBY_RELEASE_DATE -> String" "==== 例4" "== Constants" "refm/api/src/_builtin/constants")
(find-rurima "--- RUBY_PLATFORM -> String" "==== 例4" "== Constants" "refm/api/src/_builtin/constants")
(find-rurima "--- RUBY_COPYRIGHT -> String" "==== 例4" "== Constants" "refm/api/src/_builtin/constants")
(find-rurima "--- RUBY_DESCRIPTION -> String" "==== 例4" "== Constants" "refm/api/src/_builtin/constants")
(find-rurima "--- RUBY_PATCHLEVEL -> Fixnum" "==== 例4" "== Constants" "refm/api/src/_builtin/constants")
(find-rurima "--- RUBY_ENGINE -> String" "==== 例4" "== Constants" "refm/api/src/_builtin/constants")
(find-rurima "--- VERSION -> String" "==== 例4" "== Constants" "refm/api/src/_builtin/constants")
(find-rurima "--- RELEASE_DATE -> String" "==== 例4" "== Constants" "refm/api/src/_builtin/constants")
(find-rurima "--- PLATFORM -> String" "==== 例4" "== Constants" "refm/api/src/_builtin/constants")
(find-rurima "--- SCRIPT_LINES__ -> Hash" "==== 例4" "== Constants" "refm/api/src/_builtin/constants")
(find-rurima "=== 注意" "refm/api/src/_builtin/Enumerator.inside")
(find-rurima "== Class Methods" "refm/api/src/_builtin/Enumerator.inside")
(find-rurima "--- new(obj, method = :each, *args) -> Enumerator" "== Class Methods" "refm/api/src/_builtin/Enumerator.inside")
(find-rurima "--- new(obj, method = :each, *args) -> Enumerable::Enumerator" "== Class Methods" "refm/api/src/_builtin/Enumerator.inside")
(find-rurima "--- new{|y| ... }                   -> Enumerator" "== Class Methods" "refm/api/src/_builtin/Enumerator.inside")
(find-rurima "== Methods" "refm/api/src/_builtin/Enumerator.inside")
(find-rurima "--- each {...} -> object" "== Methods" "refm/api/src/_builtin/Enumerator.inside")
(find-rurima "--- next -> object" "== Methods" "refm/api/src/_builtin/Enumerator.inside")
(find-rurima "--- feed(obj) -> nil" "== Methods" "refm/api/src/_builtin/Enumerator.inside")
(find-rurima "--- next_values -> Array" "== Methods" "refm/api/src/_builtin/Enumerator.inside")
(find-rurima "--- peek -> object" "== Methods" "refm/api/src/_builtin/Enumerator.inside")
(find-rurima "--- peek_values -> Array" "== Methods" "refm/api/src/_builtin/Enumerator.inside")
(find-rurima "--- rewind -> self" "== Methods" "refm/api/src/_builtin/Enumerator.inside")
(find-rurima "--- with_index(offset = 0) {|(*args), idx| ... } -> object" "== Methods" "refm/api/src/_builtin/Enumerator.inside")
(find-rurima "--- with_index(offset = 0) -> Enumerator" "== Methods" "refm/api/src/_builtin/Enumerator.inside")
(find-rurima "--- with_index {|(*args), idx| ... } -> object" "== Methods" "refm/api/src/_builtin/Enumerator.inside")
(find-rurima "--- with_index -> Enumerator" "== Methods" "refm/api/src/_builtin/Enumerator.inside")
(find-rurima "--- with_object(obj) -> Enumerator" "== Methods" "refm/api/src/_builtin/Enumerator.inside")
(find-rurima "--- with_object(obj) {|(*args), memo_obj| ... } -> object" "== Methods" "refm/api/src/_builtin/Enumerator.inside")
(find-rurima "==== 例" "== Methods" "refm/api/src/_builtin/Enumerator.inside")
(find-rurima "= class Class < Module" "refm/api/src/_builtin/Class")
(find-rurima "== Class Methods" "= class Class < Module" "refm/api/src/_builtin/Class")
(find-rurima "--- new(superclass = Object)                -> Class" "== Class Methods" "= class Class < Module" "refm/api/src/_builtin/Class")
(find-rurima "--- new(superclass = Object) {|klass| ... } -> Class" "== Class Methods" "= class Class < Module" "refm/api/src/_builtin/Class")
(find-rurima "== Instance Methods" "= class Class < Module" "refm/api/src/_builtin/Class")
(find-rurima "--- allocate    -> object" "== Instance Methods" "= class Class < Module" "refm/api/src/_builtin/Class")
(find-rurima "--- new(*args, &block)    -> object" "== Instance Methods" "= class Class < Module" "refm/api/src/_builtin/Class")
(find-rurima "--- superclass    -> Class | nil" "== Instance Methods" "= class Class < Module" "refm/api/src/_builtin/Class")
(find-rurima "--- _load(str)    -> Class" "== Instance Methods" "= class Class < Module" "refm/api/src/_builtin/Class")
(find-rurima "== Private Instance Methods" "= class Class < Module" "refm/api/src/_builtin/Class")
(find-rurima "--- inherited(subclass)     -> ()" "== Private Instance Methods" "= class Class < Module" "refm/api/src/_builtin/Class")
(find-rurima "= class Struct::Tms < Struct" "refm/api/src/_builtin/Struct__Tms")
(find-rurima "== Instance Methods" "= class Struct::Tms < Struct" "refm/api/src/_builtin/Struct__Tms")
(find-rurima "--- cstime -> Float" "== Instance Methods" "= class Struct::Tms < Struct" "refm/api/src/_builtin/Struct__Tms")
(find-rurima "--- cstime=(n)" "== Instance Methods" "= class Struct::Tms < Struct" "refm/api/src/_builtin/Struct__Tms")
(find-rurima "--- cutime -> Float" "== Instance Methods" "= class Struct::Tms < Struct" "refm/api/src/_builtin/Struct__Tms")
(find-rurima "--- cutime=(n)" "== Instance Methods" "= class Struct::Tms < Struct" "refm/api/src/_builtin/Struct__Tms")
(find-rurima "--- stime -> Float" "== Instance Methods" "= class Struct::Tms < Struct" "refm/api/src/_builtin/Struct__Tms")
(find-rurima "--- stime=(n)" "== Instance Methods" "= class Struct::Tms < Struct" "refm/api/src/_builtin/Struct__Tms")
(find-rurima "--- utime -> Float" "== Instance Methods" "= class Struct::Tms < Struct" "refm/api/src/_builtin/Struct__Tms")
(find-rurima "--- utime=(n)" "== Instance Methods" "= class Struct::Tms < Struct" "refm/api/src/_builtin/Struct__Tms")
(find-rurima "=== 実装" "refm/api/src/_builtin/thread.inc")
(find-rurima "=== スケジューリング" "refm/api/src/_builtin/thread.inc")
(find-rurima "=== メインスレッド" "refm/api/src/_builtin/thread.inc")
(find-rurima "=== スレッドの終了" "refm/api/src/_builtin/thread.inc")
(find-rurima "===[a:exception] 例外発生時のスレッドの振る舞い" "refm/api/src/_builtin/thread.inc")
(find-rurima "=== スレッド終了時の ensure 節の実行" "refm/api/src/_builtin/thread.inc")
(find-rurima "=== スレッドの状態" "refm/api/src/_builtin/thread.inc")
(find-rurima "=== デッドロックの検出" "refm/api/src/_builtin/thread.inc")
(find-rurima "= module Process::GID" "refm/api/src/_builtin/Process__GID")
(find-rurima "== Module Functions" "= module Process::GID" "refm/api/src/_builtin/Process__GID")
(find-rurima "--- change_privilege(id)    -> Integer" "== Module Functions" "= module Process::GID" "refm/api/src/_builtin/Process__GID")
(find-rurima "--- eid    -> Integer" "== Module Functions" "= module Process::GID" "refm/api/src/_builtin/Process__GID")
(find-rurima "--- grant_privilege(id)    -> Integer" "== Module Functions" "= module Process::GID" "refm/api/src/_builtin/Process__GID")
(find-rurima "--- eid=(id)" "== Module Functions" "= module Process::GID" "refm/api/src/_builtin/Process__GID")
(find-rurima "--- re_exchange    -> Integer" "== Module Functions" "= module Process::GID" "refm/api/src/_builtin/Process__GID")
(find-rurima "--- re_exchangeable?    -> bool" "== Module Functions" "= module Process::GID" "refm/api/src/_builtin/Process__GID")
(find-rurima "--- rid    -> Integer" "== Module Functions" "= module Process::GID" "refm/api/src/_builtin/Process__GID")
(find-rurima "--- sid_available?    -> bool" "== Module Functions" "= module Process::GID" "refm/api/src/_builtin/Process__GID")
(find-rurima "--- switch               -> Integer" "== Module Functions" "= module Process::GID" "refm/api/src/_builtin/Process__GID")
(find-rurima "--- switch {...}    -> object" "== Module Functions" "= module Process::GID" "refm/api/src/_builtin/Process__GID")
(find-rurima "==== sprintf フォーマット" "refm/api/src/_builtin/printf-format")
(find-rurima "==== フラグ" "refm/api/src/_builtin/printf-format")
(find-rurima "==== 幅" "refm/api/src/_builtin/printf-format")
(find-rurima "==== 精度" "refm/api/src/_builtin/printf-format")
(find-rurima "==== 指示子" "refm/api/src/_builtin/printf-format")
(find-rurima "==== 引数指定" "refm/api/src/_builtin/printf-format")
(find-rurima "= class NilClass < Object" "refm/api/src/_builtin/NilClass")
(find-rurima "== Instance Methods" "= class NilClass < Object" "refm/api/src/_builtin/NilClass")
(find-rurima "--- &(other) -> false" "== Instance Methods" "= class NilClass < Object" "refm/api/src/_builtin/NilClass")
(find-rurima "--- |(other) -> bool" "== Instance Methods" "= class NilClass < Object" "refm/api/src/_builtin/NilClass")
(find-rurima "--- ^(other) -> bool" "== Instance Methods" "= class NilClass < Object" "refm/api/src/_builtin/NilClass")
(find-rurima "--- nil? -> bool" "== Instance Methods" "= class NilClass < Object" "refm/api/src/_builtin/NilClass")
(find-rurima "--- to_a -> Array" "== Instance Methods" "= class NilClass < Object" "refm/api/src/_builtin/NilClass")
(find-rurima "--- to_f -> Float" "== Instance Methods" "= class NilClass < Object" "refm/api/src/_builtin/NilClass")
(find-rurima "--- to_i -> Fixnum" "== Instance Methods" "= class NilClass < Object" "refm/api/src/_builtin/NilClass")
(find-rurima "--- to_s -> String" "== Instance Methods" "= class NilClass < Object" "refm/api/src/_builtin/NilClass")
(find-rurima "--- to_c -> Complex" "== Instance Methods" "= class NilClass < Object" "refm/api/src/_builtin/NilClass")
(find-rurima "--- to_r -> Rational" "== Instance Methods" "= class NilClass < Object" "refm/api/src/_builtin/NilClass")
(find-rurima "--- rationalize      -> Rational" "== Instance Methods" "= class NilClass < Object" "refm/api/src/_builtin/NilClass")
(find-rurima "--- rationalize(eps) -> Rational" "== Instance Methods" "= class NilClass < Object" "refm/api/src/_builtin/NilClass")
(find-rurima "= class Method < Object" "refm/api/src/_builtin/Method")
(find-rurima "=== Proc との差" "= class Method < Object" "refm/api/src/_builtin/Method")
(find-rurima "== Instance Methods" "= class Method < Object" "refm/api/src/_builtin/Method")
(find-rurima "--- [](*args) -> object" "== Instance Methods" "= class Method < Object" "refm/api/src/_builtin/Method")
(find-rurima "--- call(*args) -> object" "== Instance Methods" "= class Method < Object" "refm/api/src/_builtin/Method")
(find-rurima "--- call(*args) { ... } -> object" "== Instance Methods" "= class Method < Object" "refm/api/src/_builtin/Method")
(find-rurima "--- arity -> Fixnum" "== Instance Methods" "= class Method < Object" "refm/api/src/_builtin/Method")
(find-rurima "--- inspect -> String" "== Instance Methods" "= class Method < Object" "refm/api/src/_builtin/Method")
(find-rurima "--- to_proc -> Proc" "== Instance Methods" "= class Method < Object" "refm/api/src/_builtin/Method")
(find-rurima "--- unbind -> UnboundMethod" "== Instance Methods" "= class Method < Object" "refm/api/src/_builtin/Method")
(find-rurima "--- ==(other)     -> bool" "== Instance Methods" "= class Method < Object" "refm/api/src/_builtin/Method")
(find-rurima "--- ===(other)    -> bool" "== Instance Methods" "= class Method < Object" "refm/api/src/_builtin/Method")
(find-rurima "--- eql?(other)     -> bool" "== Instance Methods" "= class Method < Object" "refm/api/src/_builtin/Method")
(find-rurima "--- equal?(other)   -> bool" "== Instance Methods" "= class Method < Object" "refm/api/src/_builtin/Method")
(find-rurima "--- hash    -> Integer" "== Instance Methods" "= class Method < Object" "refm/api/src/_builtin/Method")
(find-rurima "--- name    -> Symbol" "== Instance Methods" "= class Method < Object" "refm/api/src/_builtin/Method")
(find-rurima "--- name    -> String" "== Instance Methods" "= class Method < Object" "refm/api/src/_builtin/Method")
(find-rurima "--- owner    -> Class | Module" "== Instance Methods" "= class Method < Object" "refm/api/src/_builtin/Method")
(find-rurima "--- receiver    -> object" "== Instance Methods" "= class Method < Object" "refm/api/src/_builtin/Method")
(find-rurima "--- source_location -> [String, Fixnum] | nil" "== Instance Methods" "= class Method < Object" "refm/api/src/_builtin/Method")
(find-rurima "--- parameters -> [object]" "== Instance Methods" "= class Method < Object" "refm/api/src/_builtin/Method")
(find-rurima "= class MatchData < Object" "refm/api/src/_builtin/MatchData")
(find-rurima "== Instance Methods" "= class MatchData < Object" "refm/api/src/_builtin/MatchData")
(find-rurima "--- [](n) -> String | nil" "== Instance Methods" "= class MatchData < Object" "refm/api/src/_builtin/MatchData")
(find-rurima "--- [](range) -> [String]" "== Instance Methods" "= class MatchData < Object" "refm/api/src/_builtin/MatchData")
(find-rurima "--- [](start, length) -> [String]" "== Instance Methods" "= class MatchData < Object" "refm/api/src/_builtin/MatchData")
(find-rurima "--- begin(n) -> Fixnum | nil" "== Instance Methods" "= class MatchData < Object" "refm/api/src/_builtin/MatchData")
(find-rurima "--- end(n) -> Fixnum | nil" "== Instance Methods" "= class MatchData < Object" "refm/api/src/_builtin/MatchData")
(find-rurima "--- captures -> [String]" "== Instance Methods" "= class MatchData < Object" "refm/api/src/_builtin/MatchData")
(find-rurima "--- length -> Fixnum" "== Instance Methods" "= class MatchData < Object" "refm/api/src/_builtin/MatchData")
(find-rurima "--- size -> Fixnum" "== Instance Methods" "= class MatchData < Object" "refm/api/src/_builtin/MatchData")
(find-rurima "--- offset(n) -> [Fixnum]" "== Instance Methods" "= class MatchData < Object" "refm/api/src/_builtin/MatchData")
(find-rurima "--- post_match -> String" "== Instance Methods" "= class MatchData < Object" "refm/api/src/_builtin/MatchData")
(find-rurima "--- pre_match -> String" "== Instance Methods" "= class MatchData < Object" "refm/api/src/_builtin/MatchData")
(find-rurima "--- select(*index)    -> [String]" "== Instance Methods" "= class MatchData < Object" "refm/api/src/_builtin/MatchData")
(find-rurima "--- select {|s| ... } -> [String]" "== Instance Methods" "= class MatchData < Object" "refm/api/src/_builtin/MatchData")
(find-rurima "--- string -> String" "== Instance Methods" "= class MatchData < Object" "refm/api/src/_builtin/MatchData")
(find-rurima "--- to_a -> [String]" "== Instance Methods" "= class MatchData < Object" "refm/api/src/_builtin/MatchData")
(find-rurima "--- to_s -> String" "== Instance Methods" "= class MatchData < Object" "refm/api/src/_builtin/MatchData")
(find-rurima "--- values_at(*index) -> [String]" "== Instance Methods" "= class MatchData < Object" "refm/api/src/_builtin/MatchData")
(find-rurima "--- names -> [Array]" "== Instance Methods" "= class MatchData < Object" "refm/api/src/_builtin/MatchData")
(find-rurima "--- regexp -> Regexp" "== Instance Methods" "= class MatchData < Object" "refm/api/src/_builtin/MatchData")
(find-rurima "= class TypeError < StandardError" "refm/api/src/_builtin/TypeError")
(find-rurima "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $_ -> String | nil" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $& -> String | nil" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $~ -> MatchData | nil" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $` -> String | nil" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $' -> String | nil" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $+ -> String | nil" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $1 -> String | nil" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $2 -> String | nil" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $3 -> String | nil" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $4 -> String | nil" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $5 -> String | nil" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $6 -> String | nil" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $7 -> String | nil" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $8 -> String | nil" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $9 -> String | nil" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $10 -> String | nil" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $11 -> String | nil" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $? -> Process::Status | nil" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $! -> Exception | nil" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $@ -> [String] | nil" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $SAFE -> Fixnum" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $= -> bool" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $/  -> String | nil" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $-0 -> String | nil" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $\\ -> String | nil" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $, -> String | nil" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $;  -> Regexp | String | nil" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $-F -> Regexp | String | nil" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $. -> Fixnum" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $< -> IO" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $0 -> String" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $PROGRAM_NAME -> String" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $* -> [String]" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $$ -> Fixnum" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $:         -> [String]" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $LOAD_PATH -> [String]" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $-I        -> [String]" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $\"               -> [String]" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $LOADED_FEATURES -> [String]" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $DEBUG -> bool" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $-d    -> bool" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $FILENAME -> String" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $stdin -> object" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $>      -> object" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $stdout -> object" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $defout  -> object" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $stderr -> object" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $deferr -> object" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $VERBOSE -> bool | nil" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $-v      -> bool | nil" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $-w      -> bool | nil" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $KCODE -> nil" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $-K    -> nil" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $KCODE -> String" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $-K    -> String" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $-a -> bool" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $-i -> bool" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $-l -> bool" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $-p -> bool" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $-W -> 0 | 1 | 2" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "= module Precision" "refm/api/src/_builtin/Precision")
(find-rurima "== Singleton Methods" "= module Precision" "refm/api/src/_builtin/Precision")
(find-rurima "--- included(module_or_class) -> Precision" "== Singleton Methods" "= module Precision" "refm/api/src/_builtin/Precision")
(find-rurima "--- induced_from(number) -> object" "== Singleton Methods" "= module Precision" "refm/api/src/_builtin/Precision")
(find-rurima "== Instance Methods" "= module Precision" "refm/api/src/_builtin/Precision")
(find-rurima "--- prec(klass) -> object" "== Instance Methods" "= module Precision" "refm/api/src/_builtin/Precision")
(find-rurima "--- prec_i -> Fixnum" "== Instance Methods" "= module Precision" "refm/api/src/_builtin/Precision")
(find-rurima "--- prec_f -> Float" "== Instance Methods" "= module Precision" "refm/api/src/_builtin/Precision")
(find-rurima "= class ZeroDivisionError < StandardError" "refm/api/src/_builtin/ZeroDivisionError")
(find-rurima "= class KeyError < IndexError" "refm/api/src/_builtin/KeyError")
(find-rurima "= class NoMemoryError < Exception" "refm/api/src/_builtin/NoMemoryError")
(find-rurima "= class FalseClass < Object" "refm/api/src/_builtin/FalseClass")
(find-rurima "== Instance Methods" "= class FalseClass < Object" "refm/api/src/_builtin/FalseClass")
(find-rurima "--- &(other)    -> false" "== Instance Methods" "= class FalseClass < Object" "refm/api/src/_builtin/FalseClass")
(find-rurima "--- |(other)    -> bool" "== Instance Methods" "= class FalseClass < Object" "refm/api/src/_builtin/FalseClass")
(find-rurima "--- ^(other)    -> bool" "== Instance Methods" "= class FalseClass < Object" "refm/api/src/_builtin/FalseClass")
(find-rurima "--- to_s    -> String" "== Instance Methods" "= class FalseClass < Object" "refm/api/src/_builtin/FalseClass")
(find-rurima "= class Data < Object" "refm/api/src/_builtin/Data")
(find-rurima "= module GC" "refm/api/src/_builtin/GC")
(find-rurima "== Singleton Methods" "= module GC" "refm/api/src/_builtin/GC")
(find-rurima "--- disable -> bool" "== Singleton Methods" "= module GC" "refm/api/src/_builtin/GC")
(find-rurima "--- enable -> bool" "== Singleton Methods" "= module GC" "refm/api/src/_builtin/GC")
(find-rurima "--- start -> nil" "== Singleton Methods" "= module GC" "refm/api/src/_builtin/GC")
(find-rurima "--- stress -> bool" "== Singleton Methods" "= module GC" "refm/api/src/_builtin/GC")
(find-rurima "--- stress=(value)" "== Singleton Methods" "= module GC" "refm/api/src/_builtin/GC")
(find-rurima "== Instance Methods" "= module GC" "refm/api/src/_builtin/GC")
(find-rurima "--- garbage_collect -> nil" "== Instance Methods" "= module GC" "refm/api/src/_builtin/GC")
(find-rurima "= class ThreadError < StandardError" "refm/api/src/_builtin/ThreadError")
(find-rurima "= class Enumerable::Enumerator < Object" "refm/api/src/_builtin/Enumerable__Enumerator")
(find-rurima "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "== Class Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "--- induced_from(num) -> Integer" "== Class Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "== Instance Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "--- chr -> String" "== Instance Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "--- chr -> String" "== Instance Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "--- chr(encoding) -> String" "== Instance Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "--- downto(min) {|n| ... } -> self" "== Instance Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "--- downto(min) -> Enumerator" "== Instance Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "--- downto(min) -> Enumerable::Enumerator" "== Instance Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "--- next -> Fixnum | Bignum" "== Instance Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "--- succ -> Fixnum | Bignum" "== Instance Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "--- times {|n| ... } -> self" "== Instance Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "--- times -> Enumerator" "== Instance Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "--- times -> Enumerable::Enumerator" "== Instance Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "--- to_i   -> self" "== Instance Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "--- to_int -> self" "== Instance Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "--- to_s -> String" "== Instance Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "--- to_s(base) -> String" "== Instance Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "--- upto(max) {|n| ... } -> Fixnum | Bignum" "== Instance Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "--- upto(max) -> Enumerator" "== Instance Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "--- upto(max) -> Enumerable::Enumerator" "== Instance Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "--- integer? -> true" "== Instance Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "--- even? -> bool" "== Instance Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "--- odd? -> bool" "== Instance Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "--- ord    -> Integer" "== Instance Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "--- pred    -> Integer" "== Instance Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "--- denominator -> Integer" "== Instance Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "--- gcd(n) -> Integer" "== Instance Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "--- gcdlcm(n) -> [Integer]" "== Instance Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "--- lcm(n) -> Integer" "== Instance Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "--- numerator -> Integer" "== Instance Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "--- to_r -> Rational" "== Instance Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "--- rationalize      -> Rational" "== Instance Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "--- rationalize(eps) -> Rational" "== Instance Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "===[a:should_use_next] 手続きを中断して値を返す" "refm/api/src/_builtin/lambda_proc")
(find-rurima "===[a:block] Proc オブジェクトをブロック付きメソッド呼び出しに使う" "refm/api/src/_builtin/lambda_proc")
(find-rurima "===[a:lambda_proc] lambda と proc と Proc.new とイテレータの違い" "refm/api/src/_builtin/lambda_proc")
(find-rurima "==== 引数の扱い" "===[a:lambda_proc] lambda と proc と Proc.new とイテレータの違い" "refm/api/src/_builtin/lambda_proc")
(find-rurima "==== ジャンプ構文の挙動の違い" "===[a:lambda_proc] lambda と proc と Proc.new とイテレータの違い" "refm/api/src/_builtin/lambda_proc")
(find-rurima "===[a:orphan] orphan な手続きオブジェクトの挙動" "refm/api/src/_builtin/lambda_proc")
(find-rurima "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "== Class Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- constants -> [Symbol]" "== Class Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- constants -> [String]" "== Class Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- nesting -> [Class, Module]" "== Class Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- new -> Module" "== Class Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- new {|mod| ... } -> Module" "== Class Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- <=>(other) -> Integer | nil" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- <(other)  -> bool | nil" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- <=(other) -> bool | nil" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- >(other)  -> bool | nil" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- >=(other) -> bool | nil" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- ===(obj) -> bool" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- ancestors -> [Class, Module]" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- autoload(const_name, feature) -> nil" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- autoload?(const_name) -> String | nil" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- class_variables -> [Symbol]" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- class_variables -> [String]" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- const_defined?(name, inherit = true) -> bool" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- const_defined?(name) -> bool" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- const_get(name, inherit = true) -> object" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- const_get(name) -> object" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- const_missing(name)" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- const_set(name, value) -> object" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- constants(inherit = true) -> [Symbol]" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- constants -> [String]" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- include?(mod) -> bool" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- included_modules -> [Module]" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- instance_method(name) -> UnboundMethod" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- method_defined?(name) -> bool" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- module_eval(expr, fname = \"(eval)\", lineno = 1) -> object" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- module_eval{|mod| ... }                         -> object" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- class_eval(expr, fname = \"(eval)\", lineno = 1)  -> object" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- class_eval{|mod| ... }                          -> object" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "==== 注意" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- name -> String" "==== 注意" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- to_s -> String" "==== 注意" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- instance_methods(inherited_too = true) -> [Symbol]" "==== 注意" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- instance_methods(inherited_too = true) -> [String]" "==== 注意" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- public_instance_methods(inherited_too = true) -> [Symbol]" "==== 注意" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- public_instance_methods(inherited_too = true) -> [String]" "==== 注意" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- private_instance_methods(inherited_too = true) -> [Symbol]" "==== 注意" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- private_instance_methods(inherited_too = true) -> [String]" "==== 注意" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- protected_instance_methods(inherited_too = true) -> [Symbol]" "==== 注意" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- protected_instance_methods(inherited_too = true) -> [String]" "==== 注意" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- private_class_method(*name) -> self" "==== 注意" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- public_class_method(*name) -> self" "==== 注意" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- private_method_defined?(name) -> bool" "==== 注意" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- protected_method_defined?(name) -> bool" "==== 注意" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- public_method_defined?(name) -> bool" "==== 注意" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- class_variable_defined?(name) -> bool" "==== 注意" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "== Private Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- alias_method(new, original) -> self" "== Private Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- append_features(module_or_class) -> self" "== Private Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- attr(name, assignable = false) -> nil" "== Private Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- attr_accessor(*name) -> nil" "== Private Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- attr_reader(*name) -> nil" "== Private Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- attr_writer(*name) -> nil" "== Private Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- class_variable_get(name) -> object" "== Private Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- class_variable_set(name, val) -> object" "== Private Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- define_method(name, method) -> Proc | Method | UnboundMethod" "== Private Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- define_method(name) { ... } -> Proc" "== Private Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- extend_object(module) -> Module" "== Private Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- extended(class_or_module) -> ()" "== Private Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- include(*mod) -> self" "== Private Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- included(class_or_module) -> ()" "== Private Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- method_added(name) -> ()" "== Private Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- method_removed(name) -> ()" "== Private Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- method_undefined(name) -> ()" "== Private Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- module_function(*name) -> self" "== Private Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "=== 注意" "== Private Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- private(*name) -> self" "=== 注意" "== Private Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- protected(*name) -> self" "=== 注意" "== Private Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- public(*name) -> self" "=== 注意" "== Private Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- remove_class_variable(name) -> object" "=== 注意" "== Private Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- remove_const(name) -> object" "=== 注意" "== Private Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- remove_method(*name) -> self" "=== 注意" "== Private Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- undef_method(*name) -> self" "=== 注意" "== Private Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "=== 「未定義にする」とは" "== Private Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- module_exec(*args) {|*vars| ... }       -> object" "=== 「未定義にする」とは" "== Private Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- class_exec(*args) {|*vars| ... }        -> object" "=== 「未定義にする」とは" "== Private Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- private_constant(*name) -> Module" "=== 「未定義にする」とは" "== Private Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- public_constant(*name) -> Module" "=== 「未定義にする」とは" "== Private Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "= module Marshal" "refm/api/src/_builtin/Marshal")
(find-rurima "== Module Functions" "= module Marshal" "refm/api/src/_builtin/Marshal")
(find-rurima "--- dump(obj, port, limit = -1) -> IO" "== Module Functions" "= module Marshal" "refm/api/src/_builtin/Marshal")
(find-rurima "--- dump(obj, limit = -1) -> String" "== Module Functions" "= module Marshal" "refm/api/src/_builtin/Marshal")
(find-rurima "--- load(port, proc = nil)      -> object" "== Module Functions" "= module Marshal" "refm/api/src/_builtin/Marshal")
(find-rurima "--- restore(port, proc = nil)   -> object" "== Module Functions" "= module Marshal" "refm/api/src/_builtin/Marshal")
(find-rurima "== Constants" "= module Marshal" "refm/api/src/_builtin/Marshal")
(find-rurima "--- MAJOR_VERSION -> Fixnum" "== Constants" "= module Marshal" "refm/api/src/_builtin/Marshal")
(find-rurima "--- MINOR_VERSION -> Fixnum" "== Constants" "= module Marshal" "refm/api/src/_builtin/Marshal")
(find-rurima "= class Interrupt < SignalException" "refm/api/src/_builtin/Interrupt")
(find-rurima "= class Interrupt < Exception" "refm/api/src/_builtin/Interrupt")
(find-rurima "= class Object < BasicObject" "refm/api/src/_builtin/Object")
(find-rurima "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "== Class Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- new -> Object" "== Class Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- ==(other) -> bool" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- eql?(other) -> bool" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- equal?(other) -> bool" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- methods(include_inherited = true) -> [Symbol]" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- methods(include_inherited = true) -> [String]" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- methods -> [String]" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- public_methods(include_inherited = true) -> [Symbol]" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- public_methods(include_inherited = true) -> [String]" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- public_methods -> [String]" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- private_methods(include_inherited = true) -> [Symbol]" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- private_methods(include_inherited = true) -> [String]" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- private_methods -> [String]" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- protected_methods(include_inherited = true) -> [Symbol]" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- protected_methods(include_inherited = true) -> [String]" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- protected_methods -> [String]" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- singleton_methods(inherited_too = true) -> [Symbol]" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- singleton_methods(inherited_too = true) -> [String]" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- singleton_methods(inherited_too = false) -> [String]" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- singleton_methods -> [String]" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- to_a -> Array" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- to_s -> String" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- to_str -> String" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- to_ary -> Array" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- to_hash -> Hash" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- to_int -> Integer" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- to_proc -> Proc" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- to_io -> IO" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- to_regexp -> Regexp" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- to_enum(method = :each, *args) -> Enumerator" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- enum_for(method = :each, *args) -> Enumerator" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- to_enum(method = :each, *args) -> Enumerable::Enumerator" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- enum_for(method = :each, *args) -> Enumerable::Enumerator" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- tap{|x| ... } -> self" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- __id__ -> Integer" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- object_id -> Integer" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- id -> Integer" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- hash -> Fixnum" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- ===(other) -> bool" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- =~(other) -> nil" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- =~(other) -> false" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- display(out = $stdout) -> nil" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- extend(*modules) -> self" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- inspect -> String" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- instance_variable_get(var) -> object|nil" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- instance_variable_set(var, value) -> object" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- instance_variables -> [Symbol]" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- instance_variables -> [String]" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- instance_variable_defined?(var) -> bool" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- send(name, *args) -> object" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- send(name, *args) { .... } -> object" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- __send__(name, *args) -> object" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- __send__(name, *args) { .... } -> object" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- public_send(name, *args) -> object" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- _dump(limit) -> String" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- marshal_dump -> object" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- marshal_load(obj) -> object" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- clone -> object" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- dup -> object" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "==== 深いコピーと浅いコピー" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- freeze -> self" "==== 深いコピーと浅いコピー" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- frozen? -> bool" "==== 深いコピーと浅いコピー" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- method(name) -> Method" "==== 深いコピーと浅いコピー" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- respond_to?(name, include_private = false) -> bool" "==== 深いコピーと浅いコピー" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- respond_to_missing?(symbol, include_private) -> bool" "==== 深いコピーと浅いコピー" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- method_missing(name, *args) -> object" "==== 深いコピーと浅いコピー" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- instance_of?(klass) -> bool" "==== 深いコピーと浅いコピー" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- is_a?(mod) -> bool" "==== 深いコピーと浅いコピー" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- kind_of?(mod) -> bool" "==== 深いコピーと浅いコピー" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- instance_eval(expr, filename = \"(eval)\", lineno = 1) -> object" "==== 深いコピーと浅いコピー" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- instance_eval {|obj| ... }                           -> object" "==== 深いコピーと浅いコピー" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "==== メソッド定義のネストに関する注意" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- nil? -> bool" "==== メソッド定義のネストに関する注意" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- class -> Class" "==== メソッド定義のネストに関する注意" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- type -> Class" "==== メソッド定義のネストに関する注意" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- taint -> self" "==== メソッド定義のネストに関する注意" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- tainted? -> bool" "==== メソッド定義のネストに関する注意" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- untaint -> self" "==== メソッド定義のネストに関する注意" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- trust -> self" "==== メソッド定義のネストに関する注意" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- untrusted? -> bool" "==== メソッド定義のネストに関する注意" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- untrust -> self" "==== メソッド定義のネストに関する注意" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "== Private Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- initialize(*args, &block) -> object" "== Private Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- initialize_copy(obj) -> object" "== Private Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- remove_instance_variable(name) -> object" "== Private Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- singleton_method_added(name) -> object" "== Private Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- singleton_method_removed(name) -> object" "== Private Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- singleton_method_undefined(name) -> object" "== Private Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- instance_exec(*args) {|*vars| ... } -> object" "== Private Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- singleton_class -> Class" "== Private Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- atime(filename)    -> Time" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- ctime(filename)    -> Time" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- mtime(filename)    -> Time" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- basename(filename, suffix = \"\")     -> String" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- chmod(mode, *filename)    -> Integer" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- lchmod(mode, *filename)    -> Integer" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- chown(owner, group, *filename)    -> Integer" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- lchown(owner, group, *filename)    -> Integer" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- delete(*filename)    -> Integer" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- unlink(*filename)    -> Integer" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- dirname(filename)    -> String" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- expand_path(path, default_dir = '.')    -> String" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- absolute_path(file_name, dir_string=nil)" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- extname(filename)    -> String" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- fnmatch(pattern, path, flags = 0)     -> bool " "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- fnmatch?(pattern, path, flags = 0)    -> bool" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- ftype(filename)    -> String" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- join(*item)    -> String" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- link(old, new)    -> 0" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- new(path, mode = \"r\", perm = 0666)                -> File " "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- open(path, mode = \"r\", perm = 0666)               -> File " "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- open(path, mode = \"r\", perm = 0666) {|file| ... } -> object" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- path(filename)    -> String" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- readlink(path)    -> String" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- realpath(pathname, basedir = nil) -> String" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- realdirpath(pathname, basedir = nil) -> String" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- rename(from, to)    -> 0" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- split(pathname)    -> [String]" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- stat(filename)    -> File::Stat" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- lstat(filename)   -> File::Stat" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- symlink(old, new)    -> 0" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- truncate(path, length)    -> 0" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- umask           -> Integer" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- umask(umask)    -> Integer" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- utime(atime, mtime, *filename)    -> Integer" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- blockdev?(path)    -> bool" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- chardev?(path)    -> bool" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- directory?(path)    -> bool" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- executable?(path)    -> bool" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- executable_real?(path)    -> bool" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- exist?(path)    -> bool" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- exists?(path)    -> bool" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- file?(path)    -> bool" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- grpowned?(path)    -> bool" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- owned?(path)    -> bool" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- identical?(filename1, filename2)    -> bool" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- pipe?(path)    -> bool" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- readable?(path)    -> bool" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- readable_real?(path)    -> bool" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- setgid?(path)    -> bool" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- setuid?(path)    -> bool" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- size(path)    -> Integer" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- size?(path)    -> bool" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- socket?(path)    -> bool" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- sticky?(path)    -> bool" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- symlink?(path)    -> bool" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- writable?(path)    -> bool" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- writable_real?(path)    -> bool" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- zero?(path)    -> bool" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- world_readable?(path)    -> Integer | nil" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- world_writable?(path)    -> bool" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "== Instance Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- atime    -> Time" "== Instance Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- ctime    -> Time" "== Instance Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- mtime    -> Time" "== Instance Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- size     -> Integer" "== Instance Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- chmod(mode)    -> 0" "== Instance Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- chown(owner, group)    -> 0" "== Instance Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- flock(operation)    -> 0 | false" "== Instance Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- path    -> String" "== Instance Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- to_path -> String" "== Instance Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- lstat    -> File::Stat" "== Instance Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- truncate(length)    -> 0" "== Instance Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "== Constants" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- ALT_SEPARATOR" "== Constants" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- PATH_SEPARATOR" "== Constants" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- SEPARATOR" "== Constants" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- Separator" "== Constants" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "= class SyntaxError < ScriptError" "refm/api/src/_builtin/SyntaxError")
(find-rurima "= class Struct < Object" "refm/api/src/_builtin/Struct")
(find-rurima "== Class Methods" "= class Struct < Object" "refm/api/src/_builtin/Struct")
(find-rurima "--- new(*args) -> Class" "== Class Methods" "= class Struct < Object" "refm/api/src/_builtin/Struct")
(find-rurima "==== 第一引数が String の場合" "== Class Methods" "= class Struct < Object" "refm/api/src/_builtin/Struct")
(find-rurima "==== 第一引数が Symbol の場合" "== Class Methods" "= class Struct < Object" "refm/api/src/_builtin/Struct")
(find-rurima "--- new(*args) -> Struct" "==== 第一引数が Symbol の場合" "== Class Methods" "= class Struct < Object" "refm/api/src/_builtin/Struct")
(find-rurima "--- [](*args) -> Struct" "==== 第一引数が Symbol の場合" "== Class Methods" "= class Struct < Object" "refm/api/src/_builtin/Struct")
(find-rurima "--- members -> [Symbol]" "==== 第一引数が Symbol の場合" "== Class Methods" "= class Struct < Object" "refm/api/src/_builtin/Struct")
(find-rurima "--- members -> [String]" "==== 第一引数が Symbol の場合" "== Class Methods" "= class Struct < Object" "refm/api/src/_builtin/Struct")
(find-rurima "== Instance Methods" "= class Struct < Object" "refm/api/src/_builtin/Struct")
(find-rurima "--- [](member) -> object" "== Instance Methods" "= class Struct < Object" "refm/api/src/_builtin/Struct")
(find-rurima "--- []=(member, value)" "== Instance Methods" "= class Struct < Object" "refm/api/src/_builtin/Struct")
(find-rurima "--- each {|value| ... } -> self" "== Instance Methods" "= class Struct < Object" "refm/api/src/_builtin/Struct")
(find-rurima "--- each -> Enumerator" "== Instance Methods" "= class Struct < Object" "refm/api/src/_builtin/Struct")
(find-rurima "--- each -> Enumerable::Enumerator" "== Instance Methods" "= class Struct < Object" "refm/api/src/_builtin/Struct")
(find-rurima "--- each_pair {|member, value| ... } -> self" "== Instance Methods" "= class Struct < Object" "refm/api/src/_builtin/Struct")
(find-rurima "--- each_pair -> Enumerator" "== Instance Methods" "= class Struct < Object" "refm/api/src/_builtin/Struct")
(find-rurima "--- each_pair -> Enumerable::Enumerator" "== Instance Methods" "= class Struct < Object" "refm/api/src/_builtin/Struct")
(find-rurima "--- length -> Fixnum" "== Instance Methods" "= class Struct < Object" "refm/api/src/_builtin/Struct")
(find-rurima "--- size -> Fixnum" "== Instance Methods" "= class Struct < Object" "refm/api/src/_builtin/Struct")
(find-rurima "--- members -> [String]" "== Instance Methods" "= class Struct < Object" "refm/api/src/_builtin/Struct")
(find-rurima "--- values -> [object]" "== Instance Methods" "= class Struct < Object" "refm/api/src/_builtin/Struct")
(find-rurima "--- to_a -> [object]" "== Instance Methods" "= class Struct < Object" "refm/api/src/_builtin/Struct")
(find-rurima "--- values_at(*members) -> [object]" "== Instance Methods" "= class Struct < Object" "refm/api/src/_builtin/Struct")
(find-rurima "--- ==(other)    -> bool" "== Instance Methods" "= class Struct < Object" "refm/api/src/_builtin/Struct")
(find-rurima "--- eql?(other)    -> bool" "== Instance Methods" "= class Struct < Object" "refm/api/src/_builtin/Struct")
(find-rurima "--- equal?(other)   -> bool" "== Instance Methods" "= class Struct < Object" "refm/api/src/_builtin/Struct")
(find-rurima "--- hash    -> Integer" "== Instance Methods" "= class Struct < Object" "refm/api/src/_builtin/Struct")
(find-rurima "= class EOFError < IOError" "refm/api/src/_builtin/EOFError")
(find-rurima "= class StandardError < Exception" "refm/api/src/_builtin/StandardError")
(find-rurima "= class TrueClass < Object" "refm/api/src/_builtin/TrueClass")
(find-rurima "== Instance Methods" "= class TrueClass < Object" "refm/api/src/_builtin/TrueClass")
(find-rurima "--- &(other)    -> bool" "== Instance Methods" "= class TrueClass < Object" "refm/api/src/_builtin/TrueClass")
(find-rurima "--- |(other)    -> bool" "== Instance Methods" "= class TrueClass < Object" "refm/api/src/_builtin/TrueClass")
(find-rurima "--- ^(other)    -> bool" "== Instance Methods" "= class TrueClass < Object" "refm/api/src/_builtin/TrueClass")
(find-rurima "--- to_s    -> String" "== Instance Methods" "= class TrueClass < Object" "refm/api/src/_builtin/TrueClass")
(find-rurima "= class StopIteration < IndexError" "refm/api/src/_builtin/StopIteration")
(find-rurima "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- all?               -> bool" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- all? {|item| ... } -> bool" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- any?               -> bool" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- any? {|item| ... } -> bool" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- collect  -> Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- map      -> Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- collect {|item| ... } -> [object]" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- map {|item| ... }     -> [object]" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- each_with_index                      -> Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- enum_with_index                      -> Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- each_with_index                      -> Enumerable::Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- enum_with_index                      -> Enumerable::Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- each_with_index {|item, index| ... } -> self" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- find(ifnone = nil)   -> Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- detect(ifnone = nil) -> Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- find(ifnone = nil)   -> Enumerable::Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- detect(ifnone = nil) -> Enumerable::Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- find(ifnone = nil) {|item| ... }   -> object" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- detect(ifnone = nil) {|item| ... } -> object" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- find_all  -> Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- select    -> Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- find_all  -> Enumerable::Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- select    -> Enumerable::Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- find_all {|item| ... } -> [object]" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- select {|item| ... }   -> [object]" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- grep(pattern)                -> [object]" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- grep(pattern) {|item| ... }  -> [object]" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- inject(init = self.first) {|result, item| ... } -> object" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- inject(sym)                                     -> object" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- inject(init, sym)                               -> object" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- reduce(init = self.first) {|result, item| ... } -> object" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- reduce(sym)                                     -> object" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- reduce(init, sym)                               -> object" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- member?(val)  -> bool" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- include?(val) -> bool" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- max -> object" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- max {|a, b| ... } -> object" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- max_by              -> Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- max_by              -> Enumerable::Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- max_by{|item| ... } -> object" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- min -> object" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- min {|a, b| ... } -> object" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- min_by               -> Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- min_by               -> Enumerable::Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- min_by {|item| ... } -> object" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- partition               -> Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- partition               -> Enumerable::Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- partition {|item| ... } -> [[object], [object]]" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- reject               -> Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- reject               -> Enumerable::Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- reject {|item| ... } -> [object]" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- sort               -> [object]" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- sort {|a, b| ... } -> [object]" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- sort_by               -> Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- sort_by               -> Enumerable::Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- sort_by {|item| ... } -> [object]" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- to_a    -> [object]" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- entries -> [object]" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- zip(*lists)  -> [[object]]" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- zip(*lists) {|v1, v2, ...| ...} -> nil" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- each_slice(n)               -> Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- enum_slice(n)               -> Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- each_slice(n)               -> Enumerable::Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- enum_slice(n)               -> Enumerable::Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- each_slice(n) {|list| ... } -> nil" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- enum_slice(n) {|list| ... } -> nil" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- each_cons(n)               -> Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- enum_cons(n)               -> Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- each_cons(n)               -> Enumerable::Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- enum_cons(n)               -> Enumerable::Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- each_cons(n) {|list| ... } -> nil" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- enum_cons(n) {|list| ... } -> nil" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- count                   -> Integer" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- count(item)             -> Integer" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- count {|obj| ... }  -> Integer" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- cycle(n=nil)       -> Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- cycle(n=nil)       -> Enumerable::Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- cycle(n=nil) {|obj| ... } -> object | nil" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- drop(n)               -> Array" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- drop_while                    -> Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- drop_while                    -> Enumerable::Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- drop_while {|element| ... }   -> Array" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- find_index                    -> Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- find_index                    -> Enumerable::Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- find_index{|obj| ... }  -> Integer | nil" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- first      -> object | nil" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- first(n)   -> Array" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- group_by               -> Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- group_by               -> Enumerable::Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- group_by {|obj| ... }  -> Hash" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- minmax                 -> [object, object]" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- minmax{|a, b| ... }    -> [object, object]" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- minmax_by                -> Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- minmax_by                -> Enumerable::Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- minmax_by {|obj| ... }   -> [object, object]" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- none?               -> bool" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- none?{|obj| ... }   -> bool" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- one?                -> bool" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- one?{|obj| ... }    -> bool" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- take(n)               -> Array" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- take_while                    -> Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- take_while                    -> Enumerable::Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- take_while {|element| ... }   -> Array" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- reverse_each -> Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- reverse_each -> Enumerable::Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- reverse_each {|element| ... } -> self" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- each_with_object(obj) -> Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- each_with_object(obj) {|(*args), memo_obj| ... } -> object" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- flat_map       -> Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- collect_concat -> Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- flat_map       {| obj | block }  -> Array" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- collect_concat {| obj | block }  -> Array" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- chunk {|elt| ... } -> Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- chunk(initial_state) {|elt, state| ... } -> Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- each_entry -> Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- each_entry {|obj| block} -> self" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- slice_before(pattern) -> Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- slice_before {|elt| bool } -> Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- slice_before(initial_state) {|elt, state| bool } -> Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "=class Encoding::Converter" "refm/api/src/_builtin/Encoding__Converter")
(find-rurima "== Class Methods" "=class Encoding::Converter" "refm/api/src/_builtin/Encoding__Converter")
(find-rurima "--- new(source_encoding, destination_encoding) -> Encoding::Converter" "== Class Methods" "=class Encoding::Converter" "refm/api/src/_builtin/Encoding__Converter")
(find-rurima "--- new(source_encoding, destination_encoding, options) -> Encoding::Converter" "== Class Methods" "=class Encoding::Converter" "refm/api/src/_builtin/Encoding__Converter")
(find-rurima "--- new(convpath) -> Encoding::Converter" "== Class Methods" "=class Encoding::Converter" "refm/api/src/_builtin/Encoding__Converter")
(find-rurima "--- asciicompat_encoding(string) -> Encoding | nil" "== Class Methods" "=class Encoding::Converter" "refm/api/src/_builtin/Encoding__Converter")
(find-rurima "--- asciicompat_encoding(encoding) -> Encoding | nil" "== Class Methods" "=class Encoding::Converter" "refm/api/src/_builtin/Encoding__Converter")
(find-rurima "== Instance Methods" "=class Encoding::Converter" "refm/api/src/_builtin/Encoding__Converter")
(find-rurima "--- inspect -> String" "== Instance Methods" "=class Encoding::Converter" "refm/api/src/_builtin/Encoding__Converter")
(find-rurima "--- source_encoding -> Encoding" "== Instance Methods" "=class Encoding::Converter" "refm/api/src/_builtin/Encoding__Converter")
(find-rurima "--- destination_encoding -> Encoding" "== Instance Methods" "=class Encoding::Converter" "refm/api/src/_builtin/Encoding__Converter")
(find-rurima "--- convpath -> Array" "== Instance Methods" "=class Encoding::Converter" "refm/api/src/_builtin/Encoding__Converter")
(find-rurima "--- replacement -> String" "== Instance Methods" "=class Encoding::Converter" "refm/api/src/_builtin/Encoding__Converter")
(find-rurima "--- replacement=(string)" "== Instance Methods" "=class Encoding::Converter" "refm/api/src/_builtin/Encoding__Converter")
(find-rurima "--- convert(source_string) -> String" "== Instance Methods" "=class Encoding::Converter" "refm/api/src/_builtin/Encoding__Converter")
(find-rurima "--- last_error -> Exception | nil" "== Instance Methods" "=class Encoding::Converter" "refm/api/src/_builtin/Encoding__Converter")
(find-rurima "--- finish -> String" "== Instance Methods" "=class Encoding::Converter" "refm/api/src/_builtin/Encoding__Converter")
(find-rurima "--- primitive_convert(source_buffer, destination_buffer) -> Symbol" "== Instance Methods" "=class Encoding::Converter" "refm/api/src/_builtin/Encoding__Converter")
(find-rurima "--- primitive_convert(source_buffer, destination_buffer, destination_byteoffset) -> Symbol" "== Instance Methods" "=class Encoding::Converter" "refm/api/src/_builtin/Encoding__Converter")
(find-rurima "--- primitive_convert(source_buffer, destination_buffer, destination_byteoffset, destination_bytesize) -> Symbol" "== Instance Methods" "=class Encoding::Converter" "refm/api/src/_builtin/Encoding__Converter")
(find-rurima "--- primitive_convert(source_buffer, destination_buffer, destination_byteoffset, destination_bytesize, options) -> Symbol" "== Instance Methods" "=class Encoding::Converter" "refm/api/src/_builtin/Encoding__Converter")
(find-rurima "--- primitive_errinfo -> Array" "== Instance Methods" "=class Encoding::Converter" "refm/api/src/_builtin/Encoding__Converter")
(find-rurima "--- insert_output(string) -> nil" "== Instance Methods" "=class Encoding::Converter" "refm/api/src/_builtin/Encoding__Converter")
(find-rurima "--- putback -> String" "== Instance Methods" "=class Encoding::Converter" "refm/api/src/_builtin/Encoding__Converter")
(find-rurima "--- putback(max_numbytes) -> String" "== Instance Methods" "=class Encoding::Converter" "refm/api/src/_builtin/Encoding__Converter")
(find-rurima "= class RangeError < StandardError" "refm/api/src/_builtin/RangeError")
(find-rurima "= class SystemExit < Exception" "refm/api/src/_builtin/SystemExit")
(find-rurima "== Class Methods" "= class SystemExit < Exception" "refm/api/src/_builtin/SystemExit")
(find-rurima "--- new(status = 0, error_message = \"\") -> SystemExit" "== Class Methods" "= class SystemExit < Exception" "refm/api/src/_builtin/SystemExit")
(find-rurima "== Instance Methods" "= class SystemExit < Exception" "refm/api/src/_builtin/SystemExit")
(find-rurima "--- status -> Fixnum" "== Instance Methods" "= class SystemExit < Exception" "refm/api/src/_builtin/SystemExit")
(find-rurima "--- success? -> bool" "== Instance Methods" "= class SystemExit < Exception" "refm/api/src/_builtin/SystemExit")
(find-rurima "= class NotImplementedError < ScriptError" "refm/api/src/_builtin/NotImplementedError")
(find-rurima "= class Random < Object" "refm/api/src/_builtin/Random")
(find-rurima "=== 参考" "= class Random < Object" "refm/api/src/_builtin/Random")
(find-rurima "== Class Methods" "= class Random < Object" "refm/api/src/_builtin/Random")
(find-rurima "--- new(seed = Random.new_seed) -> Random" "== Class Methods" "= class Random < Object" "refm/api/src/_builtin/Random")
(find-rurima "--- new_seed -> Integer" "== Class Methods" "= class Random < Object" "refm/api/src/_builtin/Random")
(find-rurima "--- rand(max=0) -> Float" "== Class Methods" "= class Random < Object" "refm/api/src/_builtin/Random")
(find-rurima "--- srand(number=0) -> Integer" "== Class Methods" "= class Random < Object" "refm/api/src/_builtin/Random")
(find-rurima "== Instance Methods" "= class Random < Object" "refm/api/src/_builtin/Random")
(find-rurima "--- ==(other) -> bool" "== Instance Methods" "= class Random < Object" "refm/api/src/_builtin/Random")
(find-rurima "--- bytes(size) -> String" "== Instance Methods" "= class Random < Object" "refm/api/src/_builtin/Random")
(find-rurima "--- marshal_dump -> Array" "== Instance Methods" "= class Random < Object" "refm/api/src/_builtin/Random")
(find-rurima "--- marshal_load(array) -> Random" "== Instance Methods" "= class Random < Object" "refm/api/src/_builtin/Random")
(find-rurima "--- rand -> Float" "== Instance Methods" "= class Random < Object" "refm/api/src/_builtin/Random")
(find-rurima "--- rand(arg) -> Integer " "== Instance Methods" "= class Random < Object" "refm/api/src/_builtin/Random")
(find-rurima "--- seed -> Integer" "== Instance Methods" "= class Random < Object" "refm/api/src/_builtin/Random")
(find-rurima "== Private Instance Methods" "= class Random < Object" "refm/api/src/_builtin/Random")
(find-rurima "--- state -> Integer" "== Private Instance Methods" "= class Random < Object" "refm/api/src/_builtin/Random")
(find-rurima "--- left -> Integer" "== Private Instance Methods" "= class Random < Object" "refm/api/src/_builtin/Random")
(find-rurima "== Private Singleton Methods" "= class Random < Object" "refm/api/src/_builtin/Random")
(find-rurima "--- state -> Integer" "== Private Singleton Methods" "= class Random < Object" "refm/api/src/_builtin/Random")
(find-rurima "--- left -> Integer" "== Private Singleton Methods" "= class Random < Object" "refm/api/src/_builtin/Random")
(find-rurima "= module Kernel" "refm/api/src/_builtin/Kernel")
(find-rurima "= class NoMethodError < NameError" "refm/api/src/_builtin/NoMethodError")
(find-rurima "== Class Methods" "= class NoMethodError < NameError" "refm/api/src/_builtin/NoMethodError")
(find-rurima "--- new(error_message = \"\", name = nil, args = nil) -> NoMethodError" "== Class Methods" "= class NoMethodError < NameError" "refm/api/src/_builtin/NoMethodError")
(find-rurima "== Instance Methods" "= class NoMethodError < NameError" "refm/api/src/_builtin/NoMethodError")
(find-rurima "--- args -> [object]" "== Instance Methods" "= class NoMethodError < NameError" "refm/api/src/_builtin/NoMethodError")
(find-rurima "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- exit(status = true) -> ()" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- exit(status = 0) -> ()" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- exit!(status = false) -> ()" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- exit!(status = -1) -> ()" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- abort(message = $!.message) -> ()" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- abort -> ()" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- `(command) -> String" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- system(command) -> bool" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- system(command, options={}) -> bool | nil" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- system(env, command, options={}) -> bool | nil" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "==== 引数の解釈" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- system(program, *args) -> bool" "==== 引数の解釈" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- system(program, *args, options={}) -> bool | nil" "==== 引数の解釈" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- system(env, program, *args, options={}) -> bool | nil" "==== 引数の解釈" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "==== 引数の解釈" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- spawn(command, options={}) -> Integer" "==== 引数の解釈" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- spawn(env, command, options={}) -> Integer" "==== 引数の解釈" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "==== 引数の解釈" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- spawn(program, *args) -> Integer" "==== 引数の解釈" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- spawn(env, program, *args, options={}) -> Integer" "==== 引数の解釈" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "==== 引数の解釈" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "==== option引数の概要" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "==== option引数によるリダイレクトの概要" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "==== option引数の詳細および例" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- exec(command) -> ()" "==== option引数の詳細および例" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- exec(command, options={}) -> ()" "==== option引数の詳細および例" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- exec(env, command, options={}) -> ()" "==== option引数の詳細および例" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "==== 引数の解釈" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- exec(program, *args) -> ()" "==== 引数の解釈" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- exec(program, *args, options={}) -> ()" "==== 引数の解釈" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- exec(evn, program, *args, options={}) -> ()" "==== 引数の解釈" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "==== 引数の解釈" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- fork -> Integer | nil" "==== 引数の解釈" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- fork { ... } -> Integer | nil" "==== 引数の解釈" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- syscall(num, *arg ) -> Integer" "==== 引数の解釈" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- open(file, mode_enc = \"r\", perm = 0666) -> IO" "==== 引数の解釈" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- open(file, mode_enc = \"r\", perm = 0666) {|io| ... } -> object" "==== 引数の解釈" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- open(file, mode = \"r\", perm = 0666) -> IO" "==== 引数の解釈" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- open(file, mode = \"r\", perm = 0666) {|io| ... } -> object" "==== 引数の解釈" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "==== 第二引数のオープンモード・エンコーディング" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "==== Universal Newline" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "==== エンコーディングの指定" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- select(reads, writes = [], excepts = [], timeout = nil) -> [[IO]] | nil" "==== エンコーディングの指定" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- test(cmd, file) -> bool | Time | Integer | nil" "==== エンコーディングの指定" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- test(cmd, file1, file2) -> bool" "==== エンコーディングの指定" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- load(file, priv = false) -> true" "==== エンコーディングの指定" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "==== require と load の違い" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- require(feature) -> bool" "==== require と load の違い" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- require_relative(relative_feature) -> bool" "==== require と load の違い" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "==== require と load のスコープ" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- autoload(const_name, feature) -> nil" "==== require と load のスコープ" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "==== ネストした定義内の定数" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- autoload?(const_name) -> String | nil" "==== ネストした定義内の定数" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- set_trace_func(proc)                                         -> object" "==== ネストした定義内の定数" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- set_trace_func{|event, file, line, id, binding, klass| ... } -> Proc" "==== ネストした定義内の定数" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- caller(level_num = 1) -> [String] | nil" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- gets(rs = $/) -> String | nil" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- readline(rs = $/) -> String" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- readlines(rs = $/) -> [String] | nil" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- getc -> Fixnum | nil" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- putc(ch) -> object" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- p(*arg) -> object | Array" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- p(*arg) -> nil" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- print(*arg) -> nil" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- puts(*arg) -> nil" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- warn(message) -> nil" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- Array(arg) -> Array" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- Float(arg) -> Float" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- Integer(arg) -> Integer" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- String(arg) -> String" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- at_exit{ ... } -> Proc" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- loop { ... } -> object" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- loop { ... } -> nil" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- sleep -> Integer" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- sleep(sec) -> Integer" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- block_given? -> bool" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- iterator? -> bool" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- callcc {|cont| .... } -> object" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- catch {|tag| .... } -> object" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- catch(tag) {|tag| .... } -> object" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- throw(tag, value = nil) -> ()" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- rand(max = 0) -> Integer|Float" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- srand -> Integer" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- srand(seed) -> Integer" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- global_variables -> [Symbol]" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- global_variables -> [String]" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- local_variables -> [Symbol]" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- local_variables -> [String]" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- sub(pattern, replace)          -> String" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- sub!(pattern, replace)         -> String" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- sub(pattern) {|matched| ... }  -> String" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- sub!(pattern) {|matched| ... } -> String" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- gsub(pattern, replace)          -> String" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- gsub!(pattern, replace)         -> String" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- gsub(pattern) {|matched| ... }  -> String" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- gsub!(pattern) {|matched| ... } -> String" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- chop  -> String" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- chop! -> String | nil" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- chomp(rs = $/)  -> String" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- chomp!(rs = $/) -> String | nil" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- split(sep = $/, limit = 0) -> [String]" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- scan(re)                  -> [String] | [[String]]" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- scan(re) {|matched| ... } -> [String] | [[String]]" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- trap(signal, command) -> object" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- trap(signal) { ... } -> object" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- trace_var(varname, hook) -> nil" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- trace_var(varname){|new_val| .... } -> nil" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- trace_var(varname, hook) -> [String|Proc]" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- untrace_var(varname, hook = nil) -> [String|Proc]" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- raise -> ()" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- fail  -> ()" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- raise(message) -> ()" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- fail(message)  -> ()" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- raise(error_type, message = nil, backtrace = caller(0)) -> ()" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- fail(error_type, message = nil, backtrace = caller(0))  -> ()" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- printf(format, *arg) -> nil" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- printf(port, format, *arg) -> nil" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- sprintf(format, *arg) -> String" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- format(format, *arg) -> String" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- binding -> Binding" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- eval(expr) -> object" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- eval(expr, bind, fname = __FILE__, lineno = 1) -> object" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- proc { ... } -> Proc" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- lambda { ... } -> Proc" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- proc -> Proc" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- lambda -> Proc" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- __method__ -> Symbol | nil" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- __callee__ -> Symbol | nil" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- Complex(r, i = 0) -> Complex" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- Complex(s)        -> Complex" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- Rational(x, y = 1) -> Rational" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "= class ScriptError < Exception" "refm/api/src/_builtin/ScriptError")
(find-rurima "= class NameError < StandardError" "refm/api/src/_builtin/NameError")
(find-rurima "== Class Methods" "= class NameError < StandardError" "refm/api/src/_builtin/NameError")
(find-rurima "--- new(error_message = \"\", name = nil) -> NameError" "== Class Methods" "= class NameError < StandardError" "refm/api/src/_builtin/NameError")
(find-rurima "== Instance Methods" "= class NameError < StandardError" "refm/api/src/_builtin/NameError")
(find-rurima "--- name -> Symbol" "== Instance Methods" "= class NameError < StandardError" "refm/api/src/_builtin/NameError")
(find-rurima "--- to_s -> String" "== Instance Methods" "= class NameError < StandardError" "refm/api/src/_builtin/NameError")
(find-rurima "= class SystemCallError < StandardError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "== Class Methods" "= class SystemCallError < StandardError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "--- new(error_message) -> SystemCallError" "== Class Methods" "= class SystemCallError < StandardError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "--- new(error_message, errno) -> SystemCallError" "== Class Methods" "= class SystemCallError < StandardError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "--- new(errno) -> SystemCallError" "== Class Methods" "= class SystemCallError < StandardError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "== Instance Methods" "= class SystemCallError < StandardError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "--- errno -> Fixnum | nil" "== Instance Methods" "= class SystemCallError < StandardError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= module Errno" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EXXX < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "=== エラー名リスト" "= class Errno::EXXX < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "== Class Methods" "= class Errno::EXXX < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "--- new() -> Errno::EXXX" "== Class Methods" "= class Errno::EXXX < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "--- new(error_message) -> Errno::EXXX" "== Class Methods" "= class Errno::EXXX < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "--- ===(other) -> bool" "== Class Methods" "= class Errno::EXXX < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "== Constants" "= class Errno::EXXX < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "--- Errno" "== Constants" "= class Errno::EXXX < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ERROR < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EPERM < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ENOENT < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ESRCH < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EINTR < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EIO < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ENXIO < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::E2BIG < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ENOEXEC < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EBADF < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ECHILD < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EAGAIN < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ENOMEM < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EACCES < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EFAULT < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ENOTBLK < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EBUSY < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EEXIST < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EXDEV < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ENODEV < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ENOTDIR < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EISDIR < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EINVAL < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ENFILE < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EMFILE < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ENOTTY < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ETXTBSY < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EFBIG < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ENOSPC < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ESPIPE < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EROFS < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EMLINK < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EPIPE < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EDOM < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ERANGE < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EDEADLK < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ENAMETOOLONG < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ENOLCK < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ENOSYS < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ENOTEMPTY < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ELOOP < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EWOULDBLOCK < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ENOMSG < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EIDRM < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ECHRNG < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EL2NSYNC < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EL3HLT < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EL3RST < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ELNRNG < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EUNATCH < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ENOCSI < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EL2HLT < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EBADE < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EBADR < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EXFULL < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ENOANO < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EBADRQC < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EBADSLT < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EDEADLOCK < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EBFONT < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ENOSTR < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ENODATA < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ETIME < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ENOSR < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ENONET < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ENOPKG < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EREMOTE < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ENOLINK < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EADV < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ESRMNT < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ECOMM < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EPROTO < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EMULTIHOP < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EDOTDOT < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EBADMSG < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EOVERFLOW < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ENOTUNIQ < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EBADFD < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EREMCHG < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ELIBACC < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ELIBBAD < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ELIBSCN < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ELIBMAX < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ELIBEXEC < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EILSEQ < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ERESTART < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ESTRPIPE < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EUSERS < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ENOTSOCK < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EDESTADDRREQ < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EMSGSIZE < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EPROTOTYPE < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ENOPROTOOPT < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EPROTONOSUPPORT < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ESOCKTNOSUPPORT < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EOPNOTSUPP < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EPFNOSUPPORT < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EAFNOSUPPORT < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EADDRINUSE < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EADDRNOTAVAIL < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ENETDOWN < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ENETUNREACH < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ENETRESET < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ECONNABORTED < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ECONNRESET < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ENOBUFS < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EISCONN < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ENOTCONN < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ESHUTDOWN < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ETOOMANYREFS < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ETIMEDOUT < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ECONNREFUSED < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EHOSTDOWN < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EHOSTUNREACH < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EALREADY < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EINPROGRESS < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ESTALE < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EUCLEAN < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ENOTNAM < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ENAVAIL < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EISNAM < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EREMOTEIO < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EDQUOT < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::NOERROR < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Continuation < Object" "refm/api/src/_builtin/Continuation")
(find-rurima "== Instance Methods" "= class Continuation < Object" "refm/api/src/_builtin/Continuation")
(find-rurima "--- [](*ret)      -> ()" "== Instance Methods" "= class Continuation < Object" "refm/api/src/_builtin/Continuation")
(find-rurima "--- call(*ret)    -> ()" "== Instance Methods" "= class Continuation < Object" "refm/api/src/_builtin/Continuation")
(find-rurima "= module FileTest" "refm/api/src/_builtin/FileTest")
(find-rurima "=== 注意" "= module FileTest" "refm/api/src/_builtin/FileTest")
(find-rurima "== Module Functions" "= module FileTest" "refm/api/src/_builtin/FileTest")
(find-rurima "--- blockdev?(file)    -> bool" "== Module Functions" "= module FileTest" "refm/api/src/_builtin/FileTest")
(find-rurima "--- chardev?(file)    -> bool" "== Module Functions" "= module FileTest" "refm/api/src/_builtin/FileTest")
(find-rurima "--- executable?(file)    -> bool" "== Module Functions" "= module FileTest" "refm/api/src/_builtin/FileTest")
(find-rurima "--- executable_real?(file)    -> bool" "== Module Functions" "= module FileTest" "refm/api/src/_builtin/FileTest")
(find-rurima "--- exist?(file)    -> bool" "== Module Functions" "= module FileTest" "refm/api/src/_builtin/FileTest")
(find-rurima "--- exists?(file)    -> bool" "== Module Functions" "= module FileTest" "refm/api/src/_builtin/FileTest")
(find-rurima "--- grpowned?(file)    -> bool" "== Module Functions" "= module FileTest" "refm/api/src/_builtin/FileTest")
(find-rurima "--- directory?(file)    -> bool" "== Module Functions" "= module FileTest" "refm/api/src/_builtin/FileTest")
(find-rurima "--- file?(file)    -> bool" "== Module Functions" "= module FileTest" "refm/api/src/_builtin/FileTest")
(find-rurima "--- identical?(file1, file2)    -> bool" "== Module Functions" "= module FileTest" "refm/api/src/_builtin/FileTest")
(find-rurima "--- pipe?(file)    -> bool" "== Module Functions" "= module FileTest" "refm/api/src/_builtin/FileTest")
(find-rurima "--- socket?(file)    -> bool" "== Module Functions" "= module FileTest" "refm/api/src/_builtin/FileTest")
(find-rurima "--- owned?(file)    -> bool" "== Module Functions" "= module FileTest" "refm/api/src/_builtin/FileTest")
(find-rurima "--- readable?(file)    -> bool" "== Module Functions" "= module FileTest" "refm/api/src/_builtin/FileTest")
(find-rurima "--- readable_real?(file)    -> bool" "== Module Functions" "= module FileTest" "refm/api/src/_builtin/FileTest")
(find-rurima "--- setuid?(file)    -> bool" "== Module Functions" "= module FileTest" "refm/api/src/_builtin/FileTest")
(find-rurima "--- setgid?(file)    -> bool" "== Module Functions" "= module FileTest" "refm/api/src/_builtin/FileTest")
(find-rurima "--- size(file)    -> Integer" "== Module Functions" "= module FileTest" "refm/api/src/_builtin/FileTest")
(find-rurima "--- size?(file)    -> Integer | nil" "== Module Functions" "= module FileTest" "refm/api/src/_builtin/FileTest")
(find-rurima "--- sticky?(file)    -> bool" "== Module Functions" "= module FileTest" "refm/api/src/_builtin/FileTest")
(find-rurima "--- symlink?(file)    -> bool" "== Module Functions" "= module FileTest" "refm/api/src/_builtin/FileTest")
(find-rurima "--- writable?(file)    -> bool" "== Module Functions" "= module FileTest" "refm/api/src/_builtin/FileTest")
(find-rurima "--- writable_real?(file)    -> bool" "== Module Functions" "= module FileTest" "refm/api/src/_builtin/FileTest")
(find-rurima "--- zero?(file)    -> bool" "== Module Functions" "= module FileTest" "refm/api/src/_builtin/FileTest")
(find-rurima "--- world_readable?(path)    -> Integer | nil" "== Module Functions" "= module FileTest" "refm/api/src/_builtin/FileTest")
(find-rurima "--- world_writable?(path)    -> bool" "== Module Functions" "= module FileTest" "refm/api/src/_builtin/FileTest")
(find-rurima "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- %(other)      -> Rational | Float" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- modulo(other) -> Rational | Float" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- *(other) -> Rational | Float" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- **(other) -> Rational | Float" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- +(other) -> Rational | Float" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- -(other) -> Rational | Float" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- /(other)   -> Rational | Float" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- quo(other) -> Rational | Float" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- <=>(other) -> -1 | 0 | 1 | nil" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- <=>(other) -> -1 | 0 | 1" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- ==(other) -> bool" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- abs -> Rational" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- ceil(precision = 0) -> Integer | Rational" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- ceil                -> Integer" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- coerce(other) -> Array" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- denominator -> Integer" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- div(other) -> Integer" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- divmod(other) -> [Integer, Float | Rational]" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- fdiv(other) -> Float" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- floor(precision = 0) -> Integer | Rational" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- floor -> Integer" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- hash -> Integer" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- inspect -> String" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- marshal_dump -> Array" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- marshal_load -> Rational" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- numerator -> Integer" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- rationalize(eps = 0) -> Rational" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- remainder(other) -> Rational" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- round(precision = 0) -> Integer | Rational" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- round -> Integer" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- to_f -> Float" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- to_i -> Integer" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- truncate(precision = 0) -> Rational | Integer" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- truncate                -> Integer" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- to_r -> Rational" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- to_s -> String" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "== Private Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- convert(*arg) -> Rational" "== Private Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "== Class Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- new(path)    -> File::Stat" "== Class Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- <=>(o) -> Fixnum | nil" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- ftype -> String" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- dev -> String" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- dev_major -> Integer" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- dev_minor -> Integer" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- ino -> Integer" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- mode -> Integer" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- nlink -> Integer" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- uid -> Integer" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- gid -> Integer" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- rdev -> Integer" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- rdev_major -> Integer" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- rdev_minor -> Integer" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- size -> Integer" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- blksize -> Integer" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- blocks -> Integer" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- atime -> Time" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- mtime -> Time" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- ctime -> Time" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- directory? -> bool" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- readable? -> bool" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- readable_real? -> bool" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- writable? -> bool" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- writable_real? -> bool" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- executable? -> bool" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- executable_real? -> bool" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- file? -> bool" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- zero? -> bool" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- size? -> Integer | nil" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- owned? -> bool" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- grpowned? -> bool" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- pipe? -> bool" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- symlink? -> false" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- socket? -> bool" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- blockdev? -> bool" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- chardev? -> bool" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- setuid? -> bool" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- setgid? -> bool" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- sticky? -> bool" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- world_readable? -> Fixnum | nil" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- world_writable? -> Fixnum | nil" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "= class Binding < Object" "refm/api/src/_builtin/Binding")
(find-rurima "== Instance Methods" "= class Binding < Object" "refm/api/src/_builtin/Binding")
(find-rurima "--- eval(expr, fname = __FILE__, lineno = 1)    -> object" "== Instance Methods" "= class Binding < Object" "refm/api/src/_builtin/Binding")
(find-rurima "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "=== C 言語との違いに注意" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "== Class Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- at(time)    -> Time" "== Class Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- at(time, usec)    -> Time" "== Class Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- gm(year, mon = 1, day = 1, hour = 0, min = 0, sec = 0, usec = 0)             -> Time" "== Class Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- utc(year, mon = 1, day = 1, hour = 0, min = 0, sec = 0, usec = 0)            -> Time" "== Class Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- gm(sec, min, hour, mday, mon, year, wday, yday, isdst, zone)     -> Time" "== Class Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- utc(sec, min, hour, mday, mon, year, wday, yday, isdst, zone)    -> Time" "== Class Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- local(year, mon = 1, day = 1, hour = 0, min = 0, sec = 0, usec = 0)      -> Time" "== Class Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- mktime(year, mon = 1, day = 1, hour = 0, min = 0, sec = 0, usec = 0)     -> Time" "== Class Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- local(sec, min, hour, mday, mon, year, wday, yday, isdst, zone)     -> Time" "== Class Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- mktime(sec, min, hour, mday, mon, year, wday, yday, isdst, zone)    -> Time" "== Class Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- new    -> Time" "== Class Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- now    -> Time" "== Class Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- times    -> Struct::Tms" "== Class Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- +(other)    -> Time" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- -(time)    -> Float" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- -(sec)    -> Time" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- <=>(other) -> -1 | 0 | 1 | nil" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- eql?(other)    -> bool" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- asctime    -> String" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- ctime      -> String" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- gmt?    -> bool" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- utc?    -> bool" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- getgm     -> Time" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- getutc    -> Time" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- getlocal     -> Time" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- gmtime    -> self" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- utc       -> self" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- localtime     -> self" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- strftime(format)    -> String" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- sec    -> Integer" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- min    -> Integer" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- hour    -> Integer" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- mday    -> Integer" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- day     -> Integer" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- mon      -> Integer" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- month    -> Integer" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- year    -> Integer  " "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- wday    -> Integer  " "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- yday    -> Integer  " "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- isdst    -> bool" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- dst?     -> bool" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- zone    -> String" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- succ    -> Time" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- utc_offset     -> Integer" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- gmt_offset     -> Integer" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- gmtoff         -> Integer" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- to_a     -> Array" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- to_f    -> Float" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- to_r    -> Rational" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- to_i      -> Integer" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- tv_sec    -> Integer" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- to_s     -> String" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- usec         -> Integer" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- tv_usec      -> Integer" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- friday? -> bool" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- monday? -> bool" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- saturday? -> bool" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- sunday? -> bool" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- thursday? -> bool" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- tuesday? -> bool" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- wednesday? -> bool" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- nsec    -> Integer" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- tv_nsec -> Integer" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- round(ndigits=0) -> Time" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- subsec -> Integer | Rational" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "= class Exception < Object" "refm/api/src/_builtin/Exception")
(find-rurima "== Class Methods" "= class Exception < Object" "refm/api/src/_builtin/Exception")
(find-rurima "--- new(error_message = nil)" "== Class Methods" "= class Exception < Object" "refm/api/src/_builtin/Exception")
(find-rurima "--- exception(error_message = nil)" "== Class Methods" "= class Exception < Object" "refm/api/src/_builtin/Exception")
(find-rurima "== Instance Methods" "= class Exception < Object" "refm/api/src/_builtin/Exception")
(find-rurima "--- exception                   -> self" "== Instance Methods" "= class Exception < Object" "refm/api/src/_builtin/Exception")
(find-rurima "--- exception(error_message)    -> Exception" "== Instance Methods" "= class Exception < Object" "refm/api/src/_builtin/Exception")
(find-rurima "--- backtrace    -> [String]" "== Instance Methods" "= class Exception < Object" "refm/api/src/_builtin/Exception")
(find-rurima "--- message    -> String" "== Instance Methods" "= class Exception < Object" "refm/api/src/_builtin/Exception")
(find-rurima "--- to_s       -> String" "== Instance Methods" "= class Exception < Object" "refm/api/src/_builtin/Exception")
(find-rurima "--- to_str    -> String" "== Instance Methods" "= class Exception < Object" "refm/api/src/_builtin/Exception")
(find-rurima "--- set_backtrace(errinfo)    -> nil | String | [String]" "== Instance Methods" "= class Exception < Object" "refm/api/src/_builtin/Exception")
(find-rurima "--- ==(other)    -> bool" "== Instance Methods" "= class Exception < Object" "refm/api/src/_builtin/Exception")
(find-rurima "= class fatal < Exception" "refm/api/src/_builtin/fatal")
(find-rurima "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "===[a:mutable] 破壊的な変更" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "===[a:m17n] 多言語化と文字列のエンコーディング" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "==== 文字列同士の比較・結合" "===[a:m17n] 多言語化と文字列のエンコーディング" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "==== 7bit クリーンな文字列" "===[a:m17n] 多言語化と文字列のエンコーディング" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "==== バイト列を表す文字列" "===[a:m17n] 多言語化と文字列のエンコーディング" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "===[a:multi] マルチバイト文字列の処理" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "== Class Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- try_convert(obj) -> String | nil" "== Class Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- new(string = \"\") -> String" "== Class Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- +(other) -> String" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- *(times) -> String" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- %(args) -> String" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- <=>(other) -> Integer | nil" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- ==(other) -> bool" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- ===(other) -> bool" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- <<(other) -> self" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- concat(other) -> self" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- =~(other) -> Integer" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- ~ -> Integer" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- [](nth) -> String | nil" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- slice(nth) -> String | nil" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- [](nth) -> Integer | nil" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- slice(nth) -> Integer | nil" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- [](nth, len) -> String | nil" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- slice(nth, len) -> String | nil" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- [](substr) -> String | nil" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- slice(substr) -> String | nil" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- [](regexp, nth = 0) -> String" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- slice(regexp, nth = 0) -> String" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- [](regexp) -> String" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- slice(regexp) -> String" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- [](regexp, name) -> String" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- slice(regexp, name) -> String" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- [](range) -> String" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- slice(range) -> String" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "=== rangeオブジェクトが終端を含む場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- []=(nth, val)" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- []=(nth, len, val)" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- []=(substr, val)" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- []=(regexp, nth, val)" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- []=(regexp, name, val)" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- []=(regexp, val)" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- []=(range, val)" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- capitalize -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- capitalize! -> self | nil" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- casecmp(other) -> Integer | nil" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- center(width, padding = ' ') -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- center(width) -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- ljust(width, padding = ' ') -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- ljust(width) -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- rjust(width, padding = ' ') -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- rjust(width) -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- chomp(rs = $/) -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- chomp!(rs = $/) -> self | nil" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- chop -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- chop! -> self | nil" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- clear -> ()" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- count(*chars) -> Integer" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- crypt(salt) -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- delete(*strs) -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- delete!(*strs) -> self | nil" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- downcase -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- downcase! -> self | nil" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- dump -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- each(rs = $/)      {|line| ... } -> ()" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- each_line(rs = $/) {|line| ... } -> ()" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- lines(rs = $/)     {|line| ... } -> ()" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- each_line(rs = $/)  -> Enumerator" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- lines(rs = $/)      -> Enumerator" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- each(rs = $/)       -> Enumerable::Enumerator" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- each_line(rs = $/)  -> Enumerable::Enumerator" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- lines(rs = $/)      -> Enumerable::Enumerator" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- each_byte {|byte| ... } -> self" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- bytes {|byte| ... } -> self" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- each_byte -> Enumerator" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- bytes     -> Enumerator" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- each_byte -> Enumerable::Enumerator" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- bytes     -> Enumerable::Enumerator" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- empty? -> bool" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- getbyte(index) -> Integer | nil" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- setbyte(index, b) -> Integer" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- gsub(pattern, replace) -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- gsub(pattern) {|matched| .... } -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- gsub(pattern) -> Enumerator" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- gsub(pattern) -> Enumerable::Enumerator" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- gsub(pattern, hash) -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- gsub!(pattern, replace) -> self | nil" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- gsub!(pattern) {|matched| .... } -> self | nil" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- gsub!(pattern) -> Enumerator" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- gsub!(pattern) -> Enumerable::Enumerator" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- gsub!(pattern, hash) -> self | nil" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- hex -> Integer" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- include?(substr) -> bool" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- index(pattern, pos = 0) -> Integer" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- insert(pos, other) -> ()" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- intern -> Symbol" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- to_sym -> Symbol" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- length -> Integer" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- size -> Integer" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- match(regexp, pos = 0) -> MatchData" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- match(regexp) -> MatchData" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- succ -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- next -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- succ! -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- next! -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- oct -> Integer" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- replace(other) -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- reverse -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- reverse! -> ()" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- rindex(pattern, pos = self.size) -> Integer | nil" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- scan(re) -> [String] | [[String]]" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- scan(re) {|s| ... } -> ()" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- slice!(nth) -> Integer" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- slice!(pos, len) -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- slice!(substr) -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- slice!(regexp, nth = 0) -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- slice!(regexp) -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- slice!(first..last) -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- slice!(first...last) -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- slice!(regexp, nth = 0) -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- split(sep = $;, limit = 0) -> [String] | [[String]]" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- squeeze(*chars) -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- squeeze!(*chars) -> ()" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- strip -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- strip! -> self | nil" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- lstrip -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- lstrip! -> self | nil" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- rstrip -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- rstrip! -> self | nil" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- sub(pattern, replace) -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- sub(pattern) {|matched| .... } -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- sub(pattern, hash) -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- sub!(pattern, replace) -> self | nil" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- sub!(pattern) {|matched| .... } -> self | nil" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- sub!(pattern, hash) -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- sum(bits = 16) -> Integer" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- swapcase -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- swapcase! -> self | nil" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- to_f -> Float" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- to_i(base = 10) -> Integer" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- to_s -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- to_str -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- tr(pattern, replace) -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- tr!(pattern, replace) -> self | nil" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- tr_s(pattern, replace) -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- tr_s!(pattern, replace) -> self | nil" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- unpack(template) -> Array" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- upcase -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- upcase! -> self | nil" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- upto(max, exclusive = false) {|s| ... } -> self" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- upto(max) {|s| ... } -> self" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- eql?(other) -> bool" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- hash -> Integer" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- inspect -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- chr -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- start_with?(str) -> bool" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- end_with?(str) -> bool" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- partition(sep) -> [String, String, String]" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- rpartition(sep) -> [String, String, String]" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- each_char {|cstr| block } -> self" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- chars {|cstr| block }     -> self" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- each_char -> Enumerator" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- chars     -> Enumerator" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- each_char -> Enumerable::Enumerator" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- chars     -> Enumerable::Enumerator" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- each_codepoint {|codepoint| block } -> self" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- codepoints {|codepoint| block }     -> self" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- each_codepoint -> Enumerator" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- codepoints     -> Enumerator" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- bytesize -> Integer" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- ord -> Integer" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- encoding   -> Encoding" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- force_encoding(encoding)   -> self" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- ascii_only?  -> bool" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- valid_encoding?  -> bool" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- encode(encoding, options = nil) -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- encode(encoding, from_encoding, options = nil) -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- encode(options = nil) -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- encode!(encoding, options = nil)                -> self" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- encode!(encoding, from_encoding, options = nil) -> self" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- to_c -> Complex" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- to_r -> Rational" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- byteslice(nth)         -> String | nil" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- byteslice(nth, len) -> String | nil" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- byteslice(range)          -> String | nil" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- prepend(other_str) -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "== Class Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- induced_from(num) -> Float" "== Class Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- +(other) -> Float" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- -(other) -> Float" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- *(other) -> Float" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- /(other) -> Float" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- %(other) -> Float" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- modulo(other) -> Float" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- **(other) -> Float" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- <=>(other) -> nil | 1 | 0 | -1" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- ==(other) -> bool" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- <(other)  -> bool" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- <=(other) -> bool" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- >(other)  -> bool" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- >=(other) -> bool" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- finite? -> bool" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- infinite? -> 1 | -1 | nil" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- nan? -> bool" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- to_f -> self" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- to_i -> Integer" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- truncate -> Integer" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- hash -> Fixnum" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- abs    -> Float" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- ceil   -> Integer" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- divmod(other) -> [Numeric]" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- floor  -> Integer" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- eql?(other)   -> bool" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- round(ndigits = 0)  -> Fixnum | Float" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- round  -> Fixnum" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- zero?  -> bool" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- to_s -> String" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- arg   -> 0 | Float" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- angle -> 0 | Float" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- phase -> 0 | Float" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- denominator -> Integer" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- numerator -> Integer" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- to_r -> Rational" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- rationalize      -> Rational" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- rationalize(eps) -> Rational" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "== Constants" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- DIG -> Fixnum" "== Constants" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- EPSILON -> Float" "== Constants" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- MANT_DIG -> Fixnum" "== Constants" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- MAX -> Float" "== Constants" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- MIN -> Float" "== Constants" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- MAX_10_EXP -> Fixnum" "== Constants" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- MIN_10_EXP -> Fixnum" "== Constants" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- MAX_EXP -> Fixnum" "== Constants" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- MIN_EXP -> Fixnum" "== Constants" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- RADIX -> Fixnum" "== Constants" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- ROUNDS -> Fixnum" "== Constants" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- INFINITY -> Float" "== Constants" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- NAN -> Float" "== Constants" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "= module Process::Sys" "refm/api/src/_builtin/Process__Sys")
(find-rurima "== Module Functions" "= module Process::Sys" "refm/api/src/_builtin/Process__Sys")
(find-rurima "--- getuid    -> Integer" "== Module Functions" "= module Process::Sys" "refm/api/src/_builtin/Process__Sys")
(find-rurima "--- geteuid    -> Integer" "== Module Functions" "= module Process::Sys" "refm/api/src/_builtin/Process__Sys")
(find-rurima "--- getgid    -> Integer" "== Module Functions" "= module Process::Sys" "refm/api/src/_builtin/Process__Sys")
(find-rurima "--- getegid    -> Integer" "== Module Functions" "= module Process::Sys" "refm/api/src/_builtin/Process__Sys")
(find-rurima "--- setuid(id)    -> nil" "== Module Functions" "= module Process::Sys" "refm/api/src/_builtin/Process__Sys")
(find-rurima "--- setgid(id)    -> nil" "== Module Functions" "= module Process::Sys" "refm/api/src/_builtin/Process__Sys")
(find-rurima "--- setruid(id)    -> nil" "== Module Functions" "= module Process::Sys" "refm/api/src/_builtin/Process__Sys")
(find-rurima "--- setrgid(id)    -> nil" "== Module Functions" "= module Process::Sys" "refm/api/src/_builtin/Process__Sys")
(find-rurima "--- seteuid(id)    -> nil" "== Module Functions" "= module Process::Sys" "refm/api/src/_builtin/Process__Sys")
(find-rurima "--- setegid(id)    -> nil" "== Module Functions" "= module Process::Sys" "refm/api/src/_builtin/Process__Sys")
(find-rurima "--- setreuid(rid, eid)    -> nil" "== Module Functions" "= module Process::Sys" "refm/api/src/_builtin/Process__Sys")
(find-rurima "--- setregid(rid, eid)    -> nil" "== Module Functions" "= module Process::Sys" "refm/api/src/_builtin/Process__Sys")
(find-rurima "--- setresuid(rid, eid, sid)    -> nil" "== Module Functions" "= module Process::Sys" "refm/api/src/_builtin/Process__Sys")
(find-rurima "--- setresgid(rid, eid, sid)    -> nil" "== Module Functions" "= module Process::Sys" "refm/api/src/_builtin/Process__Sys")
(find-rurima "--- issetugid    -> bool" "== Module Functions" "= module Process::Sys" "refm/api/src/_builtin/Process__Sys")
(find-rurima "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "+@, -@ は単項演算子 +, - を表しメソッド定義などではこの記法を利用します。" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "=== 数値関連のメソッドを実際に定義しているクラス一覧" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "=== 丸めメソッドの動作一覧" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "=== 丸めメソッドの拡張例" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- +@    -> self" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- -@    -> Numeric" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- ==(other)    -> bool" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- abs    -> Numeric" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- ceil   -> Integer" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- floor   -> Integer" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- round   -> Integer" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- truncate   -> Integer" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- clone" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- dup" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- coerce(other)    -> [Numeric]" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "+ 演算子を呼んでいます。" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- div(other)    -> Integer" "+ 演算子を呼んでいます。" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- quo(other)    -> Float" "+ 演算子を呼んでいます。" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- fdiv(other)   -> Float" "+ 演算子を呼んでいます。" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- divmod(other)    -> [Numeric]" "+ 演算子を呼んでいます。" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- integer?    -> bool" "+ 演算子を呼んでいます。" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- modulo(other)    -> Numeric" "+ 演算子を呼んでいます。" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- remainder(other)    -> Numeric" "+ 演算子を呼んでいます。" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- nonzero?    -> self | nil" "+ 演算子を呼んでいます。" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- to_int    -> Integer" "+ 演算子を呼んでいます。" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- zero?    -> bool" "+ 演算子を呼んでいます。" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- step(limit, step = 1) {|n| ... }    -> self" "+ 演算子を呼んでいます。" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- step(limit, step = 1) -> Enumerator" "+ 演算子を呼んでいます。" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- step(limit, step = 1) -> Enumerable::Enumerator" "+ 演算子を呼んでいます。" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- <=>(other) -> -1 | 0 | 1 | nil" "+ 演算子を呼んでいます。" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- eql?(other) -> bool" "+ 演算子を呼んでいます。" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- abs2 -> Numeric" "+ 演算子を呼んでいます。" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- arg   -> 0 | Math::PI" "+ 演算子を呼んでいます。" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- angle -> 0 | Math::PI" "+ 演算子を呼んでいます。" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- phase -> 0 | Math::PI" "+ 演算子を呼んでいます。" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- conj      -> Numeric" "+ 演算子を呼んでいます。" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- conjugate -> Numeric" "+ 演算子を呼んでいます。" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- denominator -> Integer" "+ 演算子を呼んでいます。" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- imag      -> 0" "+ 演算子を呼んでいます。" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- imaginary -> 0" "+ 演算子を呼んでいます。" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- numerator -> Integer" "+ 演算子を呼んでいます。" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- polar -> [Numeric, Numeric]" "+ 演算子を呼んでいます。" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- real     -> Numeric" "+ 演算子を呼んでいます。" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- real?    -> bool" "+ 演算子を呼んでいます。" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- rect        -> [Numeric, Numeric]" "+ 演算子を呼んでいます。" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- rectangular -> [Numeric, Numeric]" "+ 演算子を呼んでいます。" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- to_c -> Complex" "+ 演算子を呼んでいます。" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- i    -> Complex" "+ 演算子を呼んでいます。" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "= module Process::Status" "refm/api/src/_builtin/Process__Status")
(find-rurima "=== 使用例" "= module Process::Status" "refm/api/src/_builtin/Process__Status")
(find-rurima "== Instance Methods" "= module Process::Status" "refm/api/src/_builtin/Process__Status")
(find-rurima "--- ==(other)    -> bool" "== Instance Methods" "= module Process::Status" "refm/api/src/_builtin/Process__Status")
(find-rurima "--- &(other)    -> Integer" "== Instance Methods" "= module Process::Status" "refm/api/src/_builtin/Process__Status")
(find-rurima "--- pid    -> Integer" "== Instance Methods" "= module Process::Status" "refm/api/src/_builtin/Process__Status")
(find-rurima "--- to_i    -> Integer" "== Instance Methods" "= module Process::Status" "refm/api/src/_builtin/Process__Status")
(find-rurima "--- to_int    -> Integer" "== Instance Methods" "= module Process::Status" "refm/api/src/_builtin/Process__Status")
(find-rurima "--- to_s    -> String" "== Instance Methods" "= module Process::Status" "refm/api/src/_builtin/Process__Status")
(find-rurima "--- exited?    -> bool" "== Instance Methods" "= module Process::Status" "refm/api/src/_builtin/Process__Status")
(find-rurima "--- exitstatus    -> nil | Integer" "== Instance Methods" "= module Process::Status" "refm/api/src/_builtin/Process__Status")
(find-rurima "--- inspect    -> String" "== Instance Methods" "= module Process::Status" "refm/api/src/_builtin/Process__Status")
(find-rurima "--- stopped?    -> bool" "== Instance Methods" "= module Process::Status" "refm/api/src/_builtin/Process__Status")
(find-rurima "--- stopsig    -> nil | Integer" "== Instance Methods" "= module Process::Status" "refm/api/src/_builtin/Process__Status")
(find-rurima "--- signaled?    -> bool" "== Instance Methods" "= module Process::Status" "refm/api/src/_builtin/Process__Status")
(find-rurima "--- termsig    -> nil | Integer" "== Instance Methods" "= module Process::Status" "refm/api/src/_builtin/Process__Status")
(find-rurima "--- coredump?    -> bool" "== Instance Methods" "= module Process::Status" "refm/api/src/_builtin/Process__Status")
(find-rurima "--- >>(num)    -> Integer" "== Instance Methods" "= module Process::Status" "refm/api/src/_builtin/Process__Status")
(find-rurima "--- success?    -> bool" "== Instance Methods" "= module Process::Status" "refm/api/src/_builtin/Process__Status")
(find-rurima "= module File::Constants" "refm/api/src/_builtin/File__Constants")
(find-rurima "== Constants" "= module File::Constants" "refm/api/src/_builtin/File__Constants")
(find-rurima "--- LOCK_SH -> Integer" "== Constants" "= module File::Constants" "refm/api/src/_builtin/File__Constants")
(find-rurima "--- LOCK_EX -> Integer" "== Constants" "= module File::Constants" "refm/api/src/_builtin/File__Constants")
(find-rurima "--- LOCK_UN -> Integer" "== Constants" "= module File::Constants" "refm/api/src/_builtin/File__Constants")
(find-rurima "--- LOCK_NB -> Integer" "== Constants" "= module File::Constants" "refm/api/src/_builtin/File__Constants")
(find-rurima "--- RDONLY -> Integer" "== Constants" "= module File::Constants" "refm/api/src/_builtin/File__Constants")
(find-rurima "--- WRONLY -> Integer" "== Constants" "= module File::Constants" "refm/api/src/_builtin/File__Constants")
(find-rurima "--- RDWR -> Integer" "== Constants" "= module File::Constants" "refm/api/src/_builtin/File__Constants")
(find-rurima "--- APPEND -> Integer" "== Constants" "= module File::Constants" "refm/api/src/_builtin/File__Constants")
(find-rurima "--- CREAT -> Integer" "== Constants" "= module File::Constants" "refm/api/src/_builtin/File__Constants")
(find-rurima "--- EXCL -> Integer" "== Constants" "= module File::Constants" "refm/api/src/_builtin/File__Constants")
(find-rurima "--- NONBLOCK -> Integer" "== Constants" "= module File::Constants" "refm/api/src/_builtin/File__Constants")
(find-rurima "--- TRUNC -> Integer" "== Constants" "= module File::Constants" "refm/api/src/_builtin/File__Constants")
(find-rurima "--- NOCTTY -> Integer" "== Constants" "= module File::Constants" "refm/api/src/_builtin/File__Constants")
(find-rurima "--- BINARY -> Integer" "== Constants" "= module File::Constants" "refm/api/src/_builtin/File__Constants")
(find-rurima "--- SYNC -> Integer" "== Constants" "= module File::Constants" "refm/api/src/_builtin/File__Constants")
(find-rurima "--- DSYNC -> Integer" "== Constants" "= module File::Constants" "refm/api/src/_builtin/File__Constants")
(find-rurima "--- NOFOLLOW -> Integer" "== Constants" "= module File::Constants" "refm/api/src/_builtin/File__Constants")
(find-rurima "--- RSYNC -> Integer" "== Constants" "= module File::Constants" "refm/api/src/_builtin/File__Constants")
(find-rurima "--- NOATIME -> Integer" "== Constants" "= module File::Constants" "refm/api/src/_builtin/File__Constants")
(find-rurima "--- DIRECT -> Integer" "== Constants" "= module File::Constants" "refm/api/src/_builtin/File__Constants")
(find-rurima "--- FNM_NOESCAPE -> Integer" "== Constants" "= module File::Constants" "refm/api/src/_builtin/File__Constants")
(find-rurima "--- FNM_PATHNAME -> Integer" "== Constants" "= module File::Constants" "refm/api/src/_builtin/File__Constants")
(find-rurima "--- FNM_DOTMATCH -> Integer" "== Constants" "= module File::Constants" "refm/api/src/_builtin/File__Constants")
(find-rurima "--- FNM_PERIOD -> Integer" "== Constants" "= module File::Constants" "refm/api/src/_builtin/File__Constants")
(find-rurima "--- FNM_CASEFOLD -> Integer" "== Constants" "= module File::Constants" "refm/api/src/_builtin/File__Constants")
(find-rurima "--- FNM_SYSCASE -> Integer" "== Constants" "= module File::Constants" "refm/api/src/_builtin/File__Constants")
(find-rurima "--- NULL -> String" "== Constants" "= module File::Constants" "refm/api/src/_builtin/File__Constants")
(find-rurima "= class IOError < StandardError" "refm/api/src/_builtin/IOError")
(find-rurima "= class Range < Object" "refm/api/src/_builtin/Range")
(find-rurima "=== 例" "= class Range < Object" "refm/api/src/_builtin/Range")
(find-rurima "=== 破壊的な変更" "= class Range < Object" "refm/api/src/_builtin/Range")
(find-rurima "== Class Methods" "= class Range < Object" "refm/api/src/_builtin/Range")
(find-rurima "--- new(first, last, exclude_end = false) -> Range" "== Class Methods" "= class Range < Object" "refm/api/src/_builtin/Range")
(find-rurima "== Instance Methods" "= class Range < Object" "refm/api/src/_builtin/Range")
(find-rurima "--- ===(obj) -> bool" "== Instance Methods" "= class Range < Object" "refm/api/src/_builtin/Range")
(find-rurima "--- include?(obj) -> bool" "== Instance Methods" "= class Range < Object" "refm/api/src/_builtin/Range")
(find-rurima "--- member?(obj) -> bool" "== Instance Methods" "= class Range < Object" "refm/api/src/_builtin/Range")
(find-rurima "--- cover?(obj) -> bool" "== Instance Methods" "= class Range < Object" "refm/api/src/_builtin/Range")
(find-rurima "--- cover?(obj) -> bool" "== Instance Methods" "= class Range < Object" "refm/api/src/_builtin/Range")
(find-rurima "--- begin -> object" "== Instance Methods" "= class Range < Object" "refm/api/src/_builtin/Range")
(find-rurima "--- first -> object" "== Instance Methods" "= class Range < Object" "refm/api/src/_builtin/Range")
(find-rurima "--- each {|item|  ... } -> self" "== Instance Methods" "= class Range < Object" "refm/api/src/_builtin/Range")
(find-rurima "--- each -> Enumerator" "== Instance Methods" "= class Range < Object" "refm/api/src/_builtin/Range")
(find-rurima "--- each -> Enumerable::Enumerator" "== Instance Methods" "= class Range < Object" "refm/api/src/_builtin/Range")
(find-rurima "--- end -> object" "== Instance Methods" "= class Range < Object" "refm/api/src/_builtin/Range")
(find-rurima "--- last -> object" "== Instance Methods" "= class Range < Object" "refm/api/src/_builtin/Range")
(find-rurima "--- exclude_end? -> bool" "== Instance Methods" "= class Range < Object" "refm/api/src/_builtin/Range")
(find-rurima "--- step(s = 1) {|item| ... } -> self" "== Instance Methods" "= class Range < Object" "refm/api/src/_builtin/Range")
(find-rurima "--- step(s = 1) -> Enumerator" "== Instance Methods" "= class Range < Object" "refm/api/src/_builtin/Range")
(find-rurima "--- step(s = 1) -> Enumerable::Enumerator" "== Instance Methods" "= class Range < Object" "refm/api/src/_builtin/Range")
(find-rurima "--- ==(other)     -> bool" "== Instance Methods" "= class Range < Object" "refm/api/src/_builtin/Range")
(find-rurima "--- eql?(other)   -> bool" "== Instance Methods" "= class Range < Object" "refm/api/src/_builtin/Range")
(find-rurima "--- equal?(other)    -> bool" "== Instance Methods" "= class Range < Object" "refm/api/src/_builtin/Range")
(find-rurima "--- hash    -> Integer" "== Instance Methods" "= class Range < Object" "refm/api/src/_builtin/Range")
(find-rurima "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "== Class Methods" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- aliases    -> Hash" "== Class Methods" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- compatible?(obj1, obj2) -> Encoding | nil" "== Class Methods" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- find(name) -> Encoding" "== Class Methods" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- list -> [Encoding]" "== Class Methods" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- name_list    -> [String]" "== Class Methods" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- default_external -> Encoding" "== Class Methods" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- default_external=(encoding)" "== Class Methods" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- default_internal -> Encoding | nil" "== Class Methods" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- default_internal=(encoding)" "== Class Methods" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- locale_charmap -> String | nil" "== Class Methods" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "== Instance Methods" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- inspect -> String" "== Instance Methods" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- name -> String" "== Instance Methods" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- to_s -> String" "== Instance Methods" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- names -> String" "== Instance Methods" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- dummy? -> bool" "== Instance Methods" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ascii_compatible? -> bool" "== Instance Methods" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- replicate(name) -> Encoding" "== Instance Methods" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ASCII_8BIT -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- BINARY -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- EUC_JP -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- EucJP -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- EUCJP -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO_2022_JP -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO2022_JP -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- Shift_JIS -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- SHIFT_JIS -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- SJIS -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- US_ASCII -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ASCII -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ANSI_X3_4_1968 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- UTF_16" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- UTF_32" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- UTF_16BE -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- UCS_2BE -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- UTF_16LE -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- UTF_32BE -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- UCS_4BE -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- UTF_32LE -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- UCS_4LE -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- UTF_8 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP65001 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- UTF8_MAC -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- UTF_8_MAC -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- UTF_8_HFS -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- UTF_7 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP65000 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- Big5 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- BIG5 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP950 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- Big5_HKSCS -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- BIG5_HKSCS -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- BIG5_HKSCS_2008 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- Big5_HKSCS_2008 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP951 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- BIG5_UAO -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- Big5_UAO -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP51932 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP50220 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP50221 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- EUC_CN -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- EUCCN -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- EucCN -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- EUC_KR -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- EUCKR -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- EucKR -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- EUC_TW -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- EUCTW -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- EucTW -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- GB18030 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- GB1988 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- GBK -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP936 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- GB12345 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- IBM437 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP437 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- IBM737 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP737 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- IBM775 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP775 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP850 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- IBM850 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- IBM852 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP852 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- IBM855 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP855 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- IBM857 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP857 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- IBM860 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP860 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- IBM861 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP861 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- IBM862 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP862 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- IBM863 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP863 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- IBM864 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP864 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- IBM865 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP865 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- IBM866 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP866 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- IBM869 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP869 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP949 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO_2022_JP_2 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO2022_JP2 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO_8859_1 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO8859_1 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO_8859_2 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO8859_2 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO_8859_3 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO8859_3 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO_8859_4 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO8859_4 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO_8859_5 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO8859_5 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO_8859_6 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO8859_6 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO_8859_7 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO8859_7 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO_8859_8 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO8859_8 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO_8859_9 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO8859_9 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO_8859_10 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO8859_10 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO_8859_11 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO8859_11 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO_8859_13 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO8859_13 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO_8859_14 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO8859_14 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO_8859_15 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO8859_15 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO_8859_16 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO8859_16 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- KOI8_R -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP878 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- KOI8_U -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- MacJapanese -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- MACJAPAN -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- MACJAPANESE -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- MacJapan -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- SJIS_DOCOMO -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- SJIS_DoCoMo -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- SJIS_KDDI -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- SJIS_SOFTBANK -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- SJIS_SoftBank -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- UTF8_DOCOMO -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- UTF8_DoCoMo -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- UTF8_KDDI -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- UTF8_SOFTBANK -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- UTF8_SoftBank -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- STATELESS_ISO_2022_JP -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- Stateless_ISO_2022_JP -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO_2022_JP_KDDI -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- STATELESS_ISO_2022_JP_KDDI -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- Stateless_ISO_2022_JP_KDDI -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- TIS_620 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- Windows_1250 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP1250 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- WINDOWS_1250 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- Windows_1251 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP1251 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- WINDOWS_1251 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- Windows_1252 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP1252 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- WINDOWS_1252 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- Windows_1253 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP1253 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- WINDOWS_1253 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- Windows_1254 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP1254 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- WINDOWS_1254 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- Windows_1255 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP1255 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- WINDOWS_1255 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- Windows_1256 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP1256 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- WINDOWS_1256 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- Windows_1257 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP1257 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- WINDOWS_1257 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- Windows_1258 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP1258 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- WINDOWS_1258 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- Windows_31J -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP932 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CSWINDOWS31J -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CsWindows31J -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- WINDOWS_31J -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- PCK -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- Windows_874 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP874 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- WINDOWS_874 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- EUCJP_MS -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- EucJP_ms -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- EUC_JP_MS -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- MacCentEuro -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- MACCENTEURO -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- MacCroatian -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- MACCROATIAN -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- MacCyrillic -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- MACCYRILLIC -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- MacGreek -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- MACGREEK -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- MacIceland -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- MACICELAND -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- MacRoman -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- MACROMAN -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- MacRomania -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- MACROMANIA -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- MacThai -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- MACTHAI -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- MacTurkish -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- MACTURKISH -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- MacUkraine -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- MACUKRAINE -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- EMACS_MULE -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- Emacs_Mule -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "= class EncodingError < StandardError" "refm/api/src/_builtin/Encoding")
(find-rurima "= class Encoding::CompatibilityError < EncodingError" "refm/api/src/_builtin/Encoding")
(find-rurima "= class Encoding::UndefinedConversionError < EncodingError" "refm/api/src/_builtin/Encoding")
(find-rurima "== Instance Methods" "= class Encoding::UndefinedConversionError < EncodingError" "refm/api/src/_builtin/Encoding")
(find-rurima "--- destination_encoding -> Encoding" "== Instance Methods" "= class Encoding::UndefinedConversionError < EncodingError" "refm/api/src/_builtin/Encoding")
(find-rurima "--- destination_encoding_name -> String" "== Instance Methods" "= class Encoding::UndefinedConversionError < EncodingError" "refm/api/src/_builtin/Encoding")
(find-rurima "--- error_char -> String" "== Instance Methods" "= class Encoding::UndefinedConversionError < EncodingError" "refm/api/src/_builtin/Encoding")
(find-rurima "--- source_encoding -> Encoding" "== Instance Methods" "= class Encoding::UndefinedConversionError < EncodingError" "refm/api/src/_builtin/Encoding")
(find-rurima "--- source_encoding_name -> Encoding" "== Instance Methods" "= class Encoding::UndefinedConversionError < EncodingError" "refm/api/src/_builtin/Encoding")
(find-rurima "= class Encoding::InvalidByteSequenceError < EncodingError" "refm/api/src/_builtin/Encoding")
(find-rurima "== Instance Methods" "= class Encoding::InvalidByteSequenceError < EncodingError" "refm/api/src/_builtin/Encoding")
(find-rurima "--- destination_encoding -> Encoding" "== Instance Methods" "= class Encoding::InvalidByteSequenceError < EncodingError" "refm/api/src/_builtin/Encoding")
(find-rurima "--- destination_encoding_name -> String" "== Instance Methods" "= class Encoding::InvalidByteSequenceError < EncodingError" "refm/api/src/_builtin/Encoding")
(find-rurima "--- source_encoding -> Encoding" "== Instance Methods" "= class Encoding::InvalidByteSequenceError < EncodingError" "refm/api/src/_builtin/Encoding")
(find-rurima "--- source_encoding_name -> Encoding" "== Instance Methods" "= class Encoding::InvalidByteSequenceError < EncodingError" "refm/api/src/_builtin/Encoding")
(find-rurima "--- error_bytes -> String" "== Instance Methods" "= class Encoding::InvalidByteSequenceError < EncodingError" "refm/api/src/_builtin/Encoding")
(find-rurima "--- readagain_bytes -> String" "== Instance Methods" "= class Encoding::InvalidByteSequenceError < EncodingError" "refm/api/src/_builtin/Encoding")
(find-rurima "--- incomplete_input? -> bool" "== Instance Methods" "= class Encoding::InvalidByteSequenceError < EncodingError" "refm/api/src/_builtin/Encoding")
(find-rurima "= class Encoding::ConverterNotFoundError < EncodingError" "refm/api/src/_builtin/Encoding")
(find-rurima "= class Enumerator < Object" "refm/api/src/_builtin/Enumerator")
(find-rurima "= class BasicObject" "refm/api/src/_builtin/BasicObject")
(find-rurima "==== 性質" "= class BasicObject" "refm/api/src/_builtin/BasicObject")
(find-rurima "==== 用途" "= class BasicObject" "refm/api/src/_builtin/BasicObject")
(find-rurima "==== 注意" "= class BasicObject" "refm/api/src/_builtin/BasicObject")
(find-rurima "==== 例" "= class BasicObject" "refm/api/src/_builtin/BasicObject")
(find-rurima "== Instance Methods" "= class BasicObject" "refm/api/src/_builtin/BasicObject")
(find-rurima "--- ==(other) -> bool" "== Instance Methods" "= class BasicObject" "refm/api/src/_builtin/BasicObject")
(find-rurima "--- equal?(other) -> bool" "== Instance Methods" "= class BasicObject" "refm/api/src/_builtin/BasicObject")
(find-rurima "--- ! -> bool" "== Instance Methods" "= class BasicObject" "refm/api/src/_builtin/BasicObject")
(find-rurima "--- !=(other) -> bool" "== Instance Methods" "= class BasicObject" "refm/api/src/_builtin/BasicObject")
(find-rurima "--- __send__(name, *args) -> object" "== Instance Methods" "= class BasicObject" "refm/api/src/_builtin/BasicObject")
(find-rurima "--- __send__(name, *args) { .... } -> object" "== Instance Methods" "= class BasicObject" "refm/api/src/_builtin/BasicObject")
(find-rurima "--- __id__ -> Integer" "== Instance Methods" "= class BasicObject" "refm/api/src/_builtin/BasicObject")
(find-rurima "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "== Class Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- try_convert(obj) -> Hash | nil" "== Class Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- [](other) -> Hash" "== Class Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- [](*key_and_value)  -> Hash" "== Class Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- new(ifnone = nil) -> Hash" "== Class Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- new {|hash, key| ... } -> Hash" "== Class Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- values -> [object]" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- to_a -> [Array]" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- keys -> [object]" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- to_hash -> self" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- length -> Integer" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- size -> Integer" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- empty? -> bool" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- invert -> Hash" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- fetch(key, default = nil) {|key| ... } -> object" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- has_key?(key) -> bool" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- include?(key) -> bool" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- key?(key)     -> bool" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- member?(key)  -> bool" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- has_value?(value) -> bool" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- value?(value)     -> bool" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- []=(key, value)" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- store(key, value) -> object" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- clear -> self" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- compare_by_identity -> self" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- compare_by_identity? -> bool" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- shift -> [object, object]" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- replace(other) -> self" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- [](key) -> object | nil" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- default -> object | nil" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- default(key) -> object | nil" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- default=(value)" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- default_proc -> Proc | nil" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- default_proc=(pr)" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- clone -> Hash" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- dup -> Hash" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- delete(key) -> object | nil" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- delete(key) {|key| ... } -> object" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- reject {|key, value| ... } -> Hash" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- reject                     -> Enumerable::Enumerator" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- delete_if -> Enumerator" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- reject!   -> Enumerator" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- delete_if -> Enumerable::Enumerator" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- reject!   -> Enumerable::Enumerator" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- delete_if {|key, value| ... } -> self" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- reject! {|key, value| ... } -> self|nil" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- each {|key, value| ... } -> self" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- each_pair {|key, value| ... } -> self" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- each      -> Enumerator" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- each_pair -> Enumerator" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- each      -> Enumerable::Enumerator" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- each_pair -> Enumerable::Enumerator" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- each_key {|key| ... } -> self" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- each_key -> Enumerator" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- each_key -> Enumerable::Enumerator" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- each_value {|value| ... } -> self" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- each_value -> Enumerator" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- each_value -> Enumerable::Enumerator" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- index(val) -> object" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- key(val) -> object" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- index(val) -> object" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- values_at(*keys) -> [object]" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- indexes(*keys) -> [object]" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- indices(*keys) -> [object]" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- rehash -> self" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- merge(other) -> Hash" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- merge(other) {|key, self_val, other_val| ... } -> Hash" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- merge!(other) -> self" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- merge!(other) {|key, self_val, other_val| ... } -> self" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- update(other) -> self" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- update(other) {|key, self_val, other_val| ... } -> self" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- update(other) -> self" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- ==(other) -> bool" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- ===(other) -> bool" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- eql?(other) -> bool" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- eql?(other) -> bool" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- equal?(other) -> bool" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- hash    -> Integer" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- assoc(key)   ->  Array | nil" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- flatten(level = 1) -> Array" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- rassoc(value) -> Array | nil" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- select                        -> Enumerator" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- select                        -> Enumerable::Enumerator" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- select {|key, value| ... }   -> Hash" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- select {|key, value| ... }   -> Array" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- to_s     -> String" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- inspect  -> String" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- to_s     -> String" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- sort              -> Array" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- sort{|a, b| ... } -> Array" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- keep_if {|key, value| ... } -> self" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- select! {|key, value| ... } -> self | nil" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- keep_if -> Enumerator" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- select! -> Enumerator" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "= class UnboundMethod < Object" "refm/api/src/_builtin/UnboundMethod")
(find-rurima "= class UnboundMethod < Method" "refm/api/src/_builtin/UnboundMethod")
(find-rurima "== Instance Methods" "= class UnboundMethod < Method" "refm/api/src/_builtin/UnboundMethod")
(find-rurima "--- [](*args)            " "== Instance Methods" "= class UnboundMethod < Method" "refm/api/src/_builtin/UnboundMethod")
(find-rurima "--- call(*args)          " "== Instance Methods" "= class UnboundMethod < Method" "refm/api/src/_builtin/UnboundMethod")
(find-rurima "--- call(*args) { ... }  " "== Instance Methods" "= class UnboundMethod < Method" "refm/api/src/_builtin/UnboundMethod")
(find-rurima "--- bind(obj)    -> Method" "== Instance Methods" "= class UnboundMethod < Method" "refm/api/src/_builtin/UnboundMethod")
(find-rurima "--- to_proc    -> Proc" "== Instance Methods" "= class UnboundMethod < Method" "refm/api/src/_builtin/UnboundMethod")
(find-rurima "--- unbind    -> self" "== Instance Methods" "= class UnboundMethod < Method" "refm/api/src/_builtin/UnboundMethod")
(find-rurima "--- arity    -> Integer" "== Instance Methods" "= class UnboundMethod < Method" "refm/api/src/_builtin/UnboundMethod")
(find-rurima "--- ==(other)     -> bool" "== Instance Methods" "= class UnboundMethod < Method" "refm/api/src/_builtin/UnboundMethod")
(find-rurima "--- ===(other)    -> bool" "== Instance Methods" "= class UnboundMethod < Method" "refm/api/src/_builtin/UnboundMethod")
(find-rurima "--- eql?(other)     -> bool" "== Instance Methods" "= class UnboundMethod < Method" "refm/api/src/_builtin/UnboundMethod")
(find-rurima "--- equal?(other)   -> bool" "== Instance Methods" "= class UnboundMethod < Method" "refm/api/src/_builtin/UnboundMethod")
(find-rurima "--- hash    -> Integer" "== Instance Methods" "= class UnboundMethod < Method" "refm/api/src/_builtin/UnboundMethod")
(find-rurima "--- name    -> String" "== Instance Methods" "= class UnboundMethod < Method" "refm/api/src/_builtin/UnboundMethod")
(find-rurima "--- name    -> Symbol" "== Instance Methods" "= class UnboundMethod < Method" "refm/api/src/_builtin/UnboundMethod")
(find-rurima "--- owner    -> Class | Module" "== Instance Methods" "= class UnboundMethod < Method" "refm/api/src/_builtin/UnboundMethod")
(find-rurima "= class IndexError < StandardError" "refm/api/src/_builtin/IndexError")
(find-rurima "= class RuntimeError < StandardError" "refm/api/src/_builtin/RuntimeError")
(find-rurima "= class SecurityError < Exception" "refm/api/src/_builtin/SecurityError")
(find-rurima "= class SecurityError < StandardError" "refm/api/src/_builtin/SecurityError")
(find-rurima "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "=== シンボルの実装と用途" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "==== 実装" "=== シンボルの実装と用途" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "==== 用途" "=== シンボルの実装と用途" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "== Class Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- all_symbols -> [Symbol]" "== Class Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- intern -> self" "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- to_sym -> self" "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- id2name -> String" "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- to_s -> String" "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- to_i -> Integer" "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- to_int -> Integer" "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- to_proc -> Proc" "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- ==(other)        -> true | false" "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- succ -> Symbol" "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- next -> Symbol" "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- <=>(other) -> -1 | 0 | 1" "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- casecmp(other) -> -1 | 0 | 1" "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- =~(other) -> Integer | nil" "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- match(other) -> Integer | nil" "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- [](nth) -> String | nil" "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- slice(nth) -> String | nil" "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- [](nth, len) -> String | nil" "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- slice(nth, len) -> String | nil" "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- [](substr) -> String | nil" "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- slice(substr) -> String | nil" "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- [](regexp, nth = 0) -> String | nil" "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- slice(regexp, nth = 0) -> String | nil" "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- [](range) -> String | nil" "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- slice(range) -> String | nil" "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- length -> Integer" "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- size -> Integer" "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- empty? -> bool" "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- upcase -> Symbol" "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- downcase -> Symbol" "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- capitalize -> Symbol" "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- swapcase -> Symbol" "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- encoding   -> Encoding" "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- inspect    -> String" "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "===[a:m17n] 多言語化と IO のエンコーディング" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "==== エンコーディングの影響を受けるメソッドと受けないメソッド" "===[a:m17n] 多言語化と IO のエンコーディング" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "====[a:io_encoding] IO のエンコーディングとエンコーディングの変換" "===[a:m17n] 多言語化と IO のエンコーディング" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "===== まとめ" "====[a:io_encoding] IO のエンコーディングとエンコーディングの変換" "===[a:m17n] 多言語化と IO のエンコーディング" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "==== デフォルトの外部エンコーディングの指定" "===[a:m17n] 多言語化と IO のエンコーディング" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "==== ファイル名のエンコーディング" "===[a:m17n] 多言語化と IO のエンコーディング" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "==== binmode" "===[a:m17n] 多言語化と IO のエンコーディング" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "=== EOF での読み込みメソッドの振る舞いの違い" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- copy_stream(src, dst, copy_length = nil)             -> Integer" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- copy_stream(src, dst, copy_length, src_offset) -> Integer" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- try_convert(obj) -> IO | nil" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- new(fd, mode = \"r\")                -> IO" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- for_fd(fd, mode = \"r\")             -> IO" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- open(fd, mode = \"r\")               -> IO" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- open(fd, mode = \"r\") {|io| ... }   -> object" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- new(fd, mode = \"r\", opt={})                -> IO" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- for_fd(fd, mode = \"r\", opt={})             -> IO" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- open(fd, mode = \"r\", opt={})               -> IO" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- open(fd, mode = \"r\" opt={}) {|io| ... }   -> object" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "=== オプション引数" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- foreach(path, rs = $/) {|line| ... }    -> nil" "=== オプション引数" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- foreach(path, rs = $/)                  -> Enumerator" "=== オプション引数" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- foreach(path, rs = $/)                  -> Enumerable::Enumerator" "=== オプション引数" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- pipe                    -> [IO]" "=== オプション引数" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- pipe(ext_enc)           -> [IO]" "=== オプション引数" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- pipe(enc_str, opts={})           -> [IO]" "=== オプション引数" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- pipe(ext_enc, int_enc, opts={})  -> [IO]" "=== オプション引数" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- pipe{|read_iom write_io| ... } -> object" "=== オプション引数" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- pipe(ext_enc){|read_iom write_io| ... } -> object" "=== オプション引数" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- pipe(enc_str, opt={}){|read_iom write_io| ... }           -> object" "=== オプション引数" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- pipe(ext_enc, int_enc, opt={}){|read_iom write_io| ... }  -> object" "=== オプション引数" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- popen(command, mode = \"r\")                -> IO" "=== オプション引数" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- popen(command, mode = \"r\") {|io| ... }    -> object" "=== オプション引数" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- popen(command, mode = \"r\", opt={})                -> IO" "=== オプション引数" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- popen(command, mode = \"r\", opt={}) {|io| ... }    -> object" "=== オプション引数" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- popen(\"-\", mode = \"r\")                -> IO" "=== オプション引数" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- popen(\"-\", mode = \"r\") {|io| ... }    -> object" "=== オプション引数" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- popen(\"-\", mode = \"r\", opt={})                -> IO" "=== オプション引数" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- popen(\"-\", mode = \"r\", opt={}) {|io| ... }    -> object" "=== オプション引数" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- read(path, opt = {})     -> String | nil" "=== オプション引数" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- read(path, length = nil, opt = {})     -> String | nil" "=== オプション引数" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- read(path, length = nil, offset = 0, opt = {})     -> String | nil" "=== オプション引数" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- read(path, length = nil, offset = 0)     -> String | nil" "=== オプション引数" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- binread(path, length = nil, offset = 0)     -> String | nil" "=== オプション引数" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- readlines(path, rs = $/)    -> [String]" "=== オプション引数" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- select(reads, writes = [], excepts = [], timeout = nil)    -> [[IO]] | nil" "=== オプション引数" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- sysopen(path, mode = \"r\", perm = 0666)     -> Integer" "=== オプション引数" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- write(path, string, offset=nil, opt={}) -> Integer" "=== オプション引数" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- binwrite(path, string, offset=nil) -> Integer" "=== オプション引数" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- <<(object)    -> self" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- binmode    -> self" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- clone    -> IO" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- dup      -> IO" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- close    -> nil" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- close_read    -> nil" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- close_write    -> nil" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- closed?    -> bool" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- each(rs = $/) {|line| ... }         -> self" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- each(limit) {|line| ... }           -> self" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- each(rs, limit) {|line| ... }       -> self" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- each(rs = $/)                       -> Enumerable::Enumerator" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- each(rs = $/)                       -> Enumerator" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- each(limit)                         -> Enumerator" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- each(rs, limit)                     -> Enumerator" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- each_line(rs = $/) {|line| ... }    -> self" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- each_line(limit) {|line| ... }      -> self" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- each_line(rs, limit) {|line| ... }  -> self" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- each_line(rs = $/)                  -> Enumerable::Enumerator" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- each_line(rs = $/)                  -> Enumerator" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- each_line(limit)                    -> Enumerator" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- each_line(rs, limit)                -> Enumerator" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- lines(rs = $/) {|line| ... }        -> self" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- lines(limit) {|line| ... }          -> self" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- lines(rs, limit) {|line| ... }      -> self" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- lines(rs = $/)                      -> Enumerator" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- lines(limit)                        -> Enumerator" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- lines(rs, limit)                    -> Enumerator" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- each_byte {|ch| ... }    -> self" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- each_byte                -> Enumerator" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- each_byte                -> Enumerable::Enumerator" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- eof     -> bool" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- eof?    -> bool" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- fcntl(cmd, arg = 0)    -> Integer" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- fsync    -> 0 | nil" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- fileno    -> Integer" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- to_i      -> Integer" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- flush    -> self" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- getc    -> String | nil" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- getc    -> Integer | nil" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- gets(rs = $/, limit)    -> String | nil" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- gets(rs = $/)    -> String | nil" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- ioctl(cmd, arg = 0)    -> Integer" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- isatty    -> bool" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- tty?      -> bool" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- lineno    -> Integer" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- lineno=(number)" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- pid    -> Integer | nil" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- pos    -> Integer" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- tell   -> Integer" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- pos=(n)" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- print(*arg)    -> nil" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- printf(format, *arg)    -> nil" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- putc(ch)    -> object" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- puts(*obj)    -> nil" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- read(length = nil, outbuf = \"\")    -> String | nil" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- read(length = nil)            -> String | nil" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- readchar    -> String" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- readchar    -> Integer" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- readline(rs = $/)    -> String" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- readlines(rs = $/)    -> [String]" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- readlines(limit)    -> [String]" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- readlines(rs = $/, limit)    -> [String]" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- read_nonblock(maxlen, outbuf = \"\")    -> String" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- readpartial(maxlen, outbuf = \"\")    -> String" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- reopen(io)                   -> self" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- reopen(path)                 -> self" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- reopen(path, mode)     -> self" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- rewind    -> 0" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- seek(offset, whence = IO::SEEK_SET)    -> 0" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- stat    -> File::Stat" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- sync    -> bool" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- sync=(newstate)" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- sysread(maxlen, outbuf = \"\")   -> String" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- sysread(maxlen)           -> String" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- sysseek(offset, whence = IO::SEEK_SET)    -> Integer" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- syswrite(string)    -> Integer    " "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- to_io    -> self" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- ungetc(char)     -> nil" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- write(str)     -> Integer" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- write_nonblock(string)    -> Integer" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- bytes    -> Enumerator" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- bytes    -> Enumerable::Enumerator" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- lines(rs = $/)    -> Enumerable::Enumerator" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- getbyte   -> Integer | nil" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- readbyte   -> Integer" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- each_char{|c| ... }     -> self" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- chars{|c| ... }         -> self" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- each_char               -> Enumerator" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- chars                   -> Enumerator" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- each_char               -> Enumerable::Enumerator" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- chars                   -> Enumerable::Enumerator" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- ungetbyte(c) -> nil" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- binmode? -> bool" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- close_on_exec=(bool)" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- close_on_exec?   -> bool" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- external_encoding   -> Encoding | nil" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- internal_encoding   -> Encoding | nil" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- set_encoding(enc_str, opt={})           -> self" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- set_encoding(ext_enc)           -> self" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- set_encoding(ext_enc, int_enc, opt={})  -> self" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- autoclose=(bool)" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- autoclose? -> bool" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- each_codepoint{|c| ... }     -> self" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- codepoints{|c| ... }         -> self" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- each_codepoint               -> Enumerator" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- codepoints                   -> Enumerator" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- fdatasync -> 0 | nil" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- advise(advice, offset=0, len=0) -> nil" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "== Constants" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- SEEK_CUR -> Fixnum" "== Constants" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- SEEK_END -> Fixnum" "== Constants" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- SEEK_SET -> Fixnum" "== Constants" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- WaitReadable -> Module" "== Constants" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- WaitWritable -> Module" "== Constants" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "= class RegexpError < StandardError" "refm/api/src/_builtin/RegexpError")
(find-rurima "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "=== 例" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "--- acos(x) -> Float" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "--- asin(x) -> Float" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "--- atan(x) -> Float" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "--- atan2(x, y) -> Float" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "--- acosh(x) -> Float" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "=== 定義" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "--- asinh(x) -> Float" "=== 定義" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "=== 定義" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "--- atanh(x) -> Float" "=== 定義" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "=== 定義" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "--- cos(x) -> Float" "=== 定義" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "--- sin(x) -> Float" "=== 定義" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "--- tan(x) -> Float" "=== 定義" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "--- cosh(x) -> Float" "=== 定義" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "=== 定義" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "--- sinh(x) -> Float" "=== 定義" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "=== 定義" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "--- tanh(x) -> Float" "=== 定義" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "=== 定義" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "--- erf(x) -> Float" "=== 定義" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "--- erfc(x) -> Float" "=== 定義" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "--- exp(x) -> Float" "=== 定義" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "--- frexp(x) -> [Float, Fixnum]" "=== 定義" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "--- hypot(x, y) -> Float" "=== 定義" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "--- ldexp(x, exp) -> Float" "=== 定義" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "--- log(x) -> Float" "=== 定義" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "--- log(x, b) -> Float" "=== 定義" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "--- log(x) -> Float" "=== 定義" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "--- log2(x) -> Float" "=== 定義" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "--- log10(x) -> Float" "=== 定義" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "--- sqrt(x) -> Float" "=== 定義" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "--- cbrt(x) -> Float" "=== 定義" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "--- gamma(x) -> Float" "=== 定義" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "--- lgamma(x) -> [Float, Integer]" "=== 定義" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "== Constants" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "--- E -> Float" "== Constants" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "--- PI -> Float" "== Constants" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "= class Math::DomainError < StandardError" "refm/api/src/_builtin/Math")
(find-rurima "= class SignalException < Exception" "refm/api/src/_builtin/SignalException")
(find-rurima "= class ArgumentError < StandardError" "refm/api/src/_builtin/ArgumentError")
(find-rurima "= class FloatDomainError < RangeError" "refm/api/src/_builtin/FloatDomainError")
(find-rurima "= module Signal" "refm/api/src/_builtin/Signal")
(find-rurima "== Module Functions" "= module Signal" "refm/api/src/_builtin/Signal")
(find-rurima "--- list    -> Hash" "== Module Functions" "= module Signal" "refm/api/src/_builtin/Signal")
(find-rurima "--- trap(signal, command)    -> String | Proc | nil" "== Module Functions" "= module Signal" "refm/api/src/_builtin/Signal")
(find-rurima "--- trap(signal) { ... }     -> String | Proc | nil" "== Module Functions" "= module Signal" "refm/api/src/_builtin/Signal")
(find-rurima "= TkTreatTagFont" "refm/api/tk_off/tktreattagfont.rd.off")
(find-rurima "== メソッド:" "= TkTreatTagFont" "refm/api/tk_off/tktreattagfont.rd.off")
(find-rurima "--- TkTreatTagFont#font_configinfo" "== メソッド:" "= TkTreatTagFont" "refm/api/tk_off/tktreattagfont.rd.off")
(find-rurima "--- TkTreatTagFont#font_configure(slot)" "== メソッド:" "= TkTreatTagFont" "refm/api/tk_off/tktreattagfont.rd.off")
(find-rurima "--- TkTreatTagFont#latinfont_configure(ltn, keys=nil)" "== メソッド:" "= TkTreatTagFont" "refm/api/tk_off/tktreattagfont.rd.off")
(find-rurima "--- TkTreatTagFont#kanjifont_configure(knj, keys=nil)" "== メソッド:" "= TkTreatTagFont" "refm/api/tk_off/tktreattagfont.rd.off")
(find-rurima "--- TkTreatTagFont#font_copy(window, wintag=nil)" "== メソッド:" "= TkTreatTagFont" "refm/api/tk_off/tktreattagfont.rd.off")
(find-rurima "--- TkTreatTagFont#latinfont_copy(window, wintag=nil)" "== メソッド:" "= TkTreatTagFont" "refm/api/tk_off/tktreattagfont.rd.off")
(find-rurima "--- TkTreatTagFont#kanjifont_copy(window, wintag=nil)" "== メソッド:" "= TkTreatTagFont" "refm/api/tk_off/tktreattagfont.rd.off")
(find-rurima "= TkToplevel" "refm/api/tk_off/tktoplevel.rd.off")
(find-rurima "== スーパークラス:" "= TkToplevel" "refm/api/tk_off/tktoplevel.rd.off")
(find-rurima "== インクルードしているモジュール:" "= TkToplevel" "refm/api/tk_off/tktoplevel.rd.off")
(find-rurima "== クラスメソッド:" "= TkToplevel" "refm/api/tk_off/tktoplevel.rd.off")
(find-rurima "--- TkToplevel.new(parent=nil, keys=nil)" "== クラスメソッド:" "= TkToplevel" "refm/api/tk_off/tktoplevel.rd.off")
(find-rurima "--- TkToplevel.new(parent=nil, screen=nil, classname=nil, keys=nil)" "== クラスメソッド:" "= TkToplevel" "refm/api/tk_off/tktoplevel.rd.off")
(find-rurima "== メソッド:" "= TkToplevel" "refm/api/tk_off/tktoplevel.rd.off")
(find-rurima "--- TkToplevel#specific_class" "== メソッド:" "= TkToplevel" "refm/api/tk_off/tktoplevel.rd.off")
(find-rurima "== 標準オプション:" "= TkToplevel" "refm/api/tk_off/tktoplevel.rd.off")
(find-rurima "== オプション:" "= TkToplevel" "refm/api/tk_off/tktoplevel.rd.off")
(find-rurima "--- TkToplevel#background(color)" "== オプション:" "= TkToplevel" "refm/api/tk_off/tktoplevel.rd.off")
(find-rurima "--- TkToplevel#bg(color)" "== オプション:" "= TkToplevel" "refm/api/tk_off/tktoplevel.rd.off")
(find-rurima "--- TkToplevel#classname" "== オプション:" "= TkToplevel" "refm/api/tk_off/tktoplevel.rd.off")
(find-rurima "--- TkToplevel#colormap" "== オプション:" "= TkToplevel" "refm/api/tk_off/tktoplevel.rd.off")
(find-rurima "--- TkToplevel#container(bool)" "== オプション:" "= TkToplevel" "refm/api/tk_off/tktoplevel.rd.off")
(find-rurima "--- TkToplevel#height" "== オプション:" "= TkToplevel" "refm/api/tk_off/tktoplevel.rd.off")
(find-rurima "--- TkToplevel#menu" "== オプション:" "= TkToplevel" "refm/api/tk_off/tktoplevel.rd.off")
(find-rurima "--- TkToplevel#screen" "== オプション:" "= TkToplevel" "refm/api/tk_off/tktoplevel.rd.off")
(find-rurima "--- TkToplevel#use" "== オプション:" "= TkToplevel" "refm/api/tk_off/tktoplevel.rd.off")
(find-rurima "--- TkToplevel#visual" "== オプション:" "= TkToplevel" "refm/api/tk_off/tktoplevel.rd.off")
(find-rurima "--- TkToplevel#width" "== オプション:" "= TkToplevel" "refm/api/tk_off/tktoplevel.rd.off")
(find-rurima "= Ruby/Tk Classes and Modules" "refm/api/tk_off/index.rd.off")
(find-rurima "== クラス" "= Ruby/Tk Classes and Modules" "refm/api/tk_off/index.rd.off")
(find-rurima "== モジュール" "= Ruby/Tk Classes and Modules" "refm/api/tk_off/index.rd.off")
(find-rurima "== 例外クラス" "= Ruby/Tk Classes and Modules" "refm/api/tk_off/index.rd.off")
(find-rurima "= Tk::Wm" "refm/api/tk_off/tkwm.rd.off")
(find-rurima "== メソッド:" "= Tk::Wm" "refm/api/tk_off/tkwm.rd.off")
(find-rurima "--- Tk::Wm#aspect" "== メソッド:" "= Tk::Wm" "refm/api/tk_off/tkwm.rd.off")
(find-rurima "--- Tk::Wm#aspect(min_w, min_h, max_w, max_h)" "== メソッド:" "= Tk::Wm" "refm/api/tk_off/tkwm.rd.off")
(find-rurima "--- Tk::Wm#client(name=None)" "== メソッド:" "= Tk::Wm" "refm/api/tk_off/tkwm.rd.off")
(find-rurima "--- Tk::Wm#colormapwindows(*args)" "== メソッド:" "= Tk::Wm" "refm/api/tk_off/tkwm.rd.off")
(find-rurima "--- Tk::Wm#wm_command(value=None)" "== メソッド:" "= Tk::Wm" "refm/api/tk_off/tkwm.rd.off")
(find-rurima "--- Tk::Wm#deiconify" "== メソッド:" "= Tk::Wm" "refm/api/tk_off/tkwm.rd.off")
(find-rurima "--- Tk::Wm#focusmodel(model=None)" "== メソッド:" "= Tk::Wm" "refm/api/tk_off/tkwm.rd.off")
(find-rurima "--- Tk::Wm#frame" "== メソッド:" "= Tk::Wm" "refm/api/tk_off/tkwm.rd.off")
(find-rurima "--- Tk::Wm#geometry(geom=nil)" "== メソッド:" "= Tk::Wm" "refm/api/tk_off/tkwm.rd.off")
(find-rurima "--- Tk::Wm#grid" "== メソッド:" "= Tk::Wm" "refm/api/tk_off/tkwm.rd.off")
(find-rurima "--- Tk::Wm#grid(base_width, base_height, width_inc, height_inc)" "== メソッド:" "= Tk::Wm" "refm/api/tk_off/tkwm.rd.off")
(find-rurima "--- Tk::Wm#group(leader=None)" "== メソッド:" "= Tk::Wm" "refm/api/tk_off/tkwm.rd.off")
(find-rurima "--- Tk::Wm#iconbitmap(bitmap=None)" "== メソッド:" "= Tk::Wm" "refm/api/tk_off/tkwm.rd.off")
(find-rurima "--- Tk::Wm#iconify" "== メソッド:" "= Tk::Wm" "refm/api/tk_off/tkwm.rd.off")
(find-rurima "--- Tk::Wm#iconmask(bitmap=None)" "== メソッド:" "= Tk::Wm" "refm/api/tk_off/tkwm.rd.off")
(find-rurima "--- Tk::Wm#iconname(str=None)" "== メソッド:" "= Tk::Wm" "refm/api/tk_off/tkwm.rd.off")
(find-rurima "--- Tk::Wm#iconposition(x=nil, y=nil)" "== メソッド:" "= Tk::Wm" "refm/api/tk_off/tkwm.rd.off")
(find-rurima "--- Tk::Wm#iconwindow(icon=nil)" "== メソッド:" "= Tk::Wm" "refm/api/tk_off/tkwm.rd.off")
(find-rurima "--- Tk::Wm#maxsize" "== メソッド:" "= Tk::Wm" "refm/api/tk_off/tkwm.rd.off")
(find-rurima "--- Tk::Wm#maxsize(width, height)" "== メソッド:" "= Tk::Wm" "refm/api/tk_off/tkwm.rd.off")
(find-rurima "--- Tk::Wm#minsize" "== メソッド:" "= Tk::Wm" "refm/api/tk_off/tkwm.rd.off")
(find-rurima "--- Tk::Wm#minsize(width, height)" "== メソッド:" "= Tk::Wm" "refm/api/tk_off/tkwm.rd.off")
(find-rurima "--- Tk::Wm#overrideredirect(bool=None)" "== メソッド:" "= Tk::Wm" "refm/api/tk_off/tkwm.rd.off")
(find-rurima "--- Tk::Wm#positionfrom(who=None)" "== メソッド:" "= Tk::Wm" "refm/api/tk_off/tkwm.rd.off")
(find-rurima "--- Tk::Wm#protocol(name=nil, cmd=nil)" "== メソッド:" "= Tk::Wm" "refm/api/tk_off/tkwm.rd.off")
(find-rurima "--- Tk::Wm#resizable" "== メソッド:" "= Tk::Wm" "refm/api/tk_off/tkwm.rd.off")
(find-rurima "--- Tk::Wm#resizable(width, height)" "== メソッド:" "= Tk::Wm" "refm/api/tk_off/tkwm.rd.off")
(find-rurima "--- Tk::Wm#sizefrom(who=None)" "== メソッド:" "= Tk::Wm" "refm/api/tk_off/tkwm.rd.off")
(find-rurima "--- Tk::Wm#state" "== メソッド:" "= Tk::Wm" "refm/api/tk_off/tkwm.rd.off")
(find-rurima "--- Tk::Wm#title(str=None)" "== メソッド:" "= Tk::Wm" "refm/api/tk_off/tkwm.rd.off")
(find-rurima "--- Tk::Wm#transient(master=None)" "== メソッド:" "= Tk::Wm" "refm/api/tk_off/tkwm.rd.off")
(find-rurima "--- Tk::Wm#withdraw" "== メソッド:" "= Tk::Wm" "refm/api/tk_off/tkwm.rd.off")
(find-rurima "= TkAfter" "refm/api/tk_off/tkafter.rd.off")
(find-rurima "== スーパークラス:" "= TkAfter" "refm/api/tk_off/tkafter.rd.off")
(find-rurima "== インクルードしているモジュール:" "= TkAfter" "refm/api/tk_off/tkafter.rd.off")
(find-rurima "== extendしているモジュール:" "= TkAfter" "refm/api/tk_off/tkafter.rd.off")
(find-rurima "== クラスメソッド:" "= TkAfter" "refm/api/tk_off/tkafter.rd.off")
(find-rurima "--- TkAfter.callback(arg)" "== クラスメソッド:" "= TkAfter" "refm/api/tk_off/tkafter.rd.off")
(find-rurima "--- TkAfter.info" "== クラスメソッド:" "= TkAfter" "refm/api/tk_off/tkafter.rd.off")
(find-rurima "--- TkAfter.new(interval=nil, loop_exec=nil, *procs])" "== クラスメソッド:" "= TkAfter" "refm/api/tk_off/tkafter.rd.off")
(find-rurima "== メソッド:" "= TkAfter" "refm/api/tk_off/tkafter.rd.off")
(find-rurima "--- TkAfter#do_callback(*args)" "== メソッド:" "= TkAfter" "refm/api/tk_off/tkafter.rd.off")
(find-rurima "--- TkAfter#set_callback(sleep, args=nil)" "== メソッド:" "= TkAfter" "refm/api/tk_off/tkafter.rd.off")
(find-rurima "--- TkAfter#set_next_callback(*args)" "== メソッド:" "= TkAfter" "refm/api/tk_off/tkafter.rd.off")
(find-rurima "--- TkAfter#after_id" "== メソッド:" "= TkAfter" "refm/api/tk_off/tkafter.rd.off")
(find-rurima "--- TkAfter#after_script" "== メソッド:" "= TkAfter" "refm/api/tk_off/tkafter.rd.off")
(find-rurima "--- TkAfter#current_proc" "== メソッド:" "= TkAfter" "refm/api/tk_off/tkafter.rd.off")
(find-rurima "--- TkAfter#current_sleep" "== メソッド:" "= TkAfter" "refm/api/tk_off/tkafter.rd.off")
(find-rurima "--- TkAfter#loop_exec" "== メソッド:" "= TkAfter" "refm/api/tk_off/tkafter.rd.off")
(find-rurima "--- TkAfter#loop_exec = val" "== メソッド:" "= TkAfter" "refm/api/tk_off/tkafter.rd.off")
(find-rurima "--- TkAfter#get_procs" "== メソッド:" "= TkAfter" "refm/api/tk_off/tkafter.rd.off")
(find-rurima "--- TkAfter#current_status" "== メソッド:" "= TkAfter" "refm/api/tk_off/tkafter.rd.off")
(find-rurima "--- TkAfter#cancel_on_exception?" "== メソッド:" "= TkAfter" "refm/api/tk_off/tkafter.rd.off")
(find-rurima "--- TkAfter#cancel_on_exception=(mode)" "== メソッド:" "= TkAfter" "refm/api/tk_off/tkafter.rd.off")
(find-rurima "--- TkAfter#running?" "== メソッド:" "= TkAfter" "refm/api/tk_off/tkafter.rd.off")
(find-rurima "--- TkAfter#loop_rest" "== メソッド:" "= TkAfter" "refm/api/tk_off/tkafter.rd.off")
(find-rurima "--- TkAfter#loop_rest=(rest)" "== メソッド:" "= TkAfter" "refm/api/tk_off/tkafter.rd.off")
(find-rurima "--- TkAfter#set_procs(interval, loop_exec, *procs)" "== メソッド:" "= TkAfter" "refm/api/tk_off/tkafter.rd.off")
(find-rurima "--- TkAfter#add_procs(*procs)" "== メソッド:" "= TkAfter" "refm/api/tk_off/tkafter.rd.off")
(find-rurima "--- TkAfter#set_start_proc(sleep, init_proc, *init_args)" "== メソッド:" "= TkAfter" "refm/api/tk_off/tkafter.rd.off")
(find-rurima "--- TkAfter#start(*init_args)" "== メソッド:" "= TkAfter" "refm/api/tk_off/tkafter.rd.off")
(find-rurima "--- TkAfter#restart(*restart_args)" "== メソッド:" "= TkAfter" "refm/api/tk_off/tkafter.rd.off")
(find-rurima "--- TkAfter#cancel" "== メソッド:" "= TkAfter" "refm/api/tk_off/tkafter.rd.off")
(find-rurima "--- TkAfter#stop" "== メソッド:" "= TkAfter" "refm/api/tk_off/tkafter.rd.off")
(find-rurima "--- TkAfter#continue(wait=nil)" "== メソッド:" "= TkAfter" "refm/api/tk_off/tkafter.rd.off")
(find-rurima "--- TkAfter#skip" "== メソッド:" "= TkAfter" "refm/api/tk_off/tkafter.rd.off")
(find-rurima "--- TkAfter#info" "== メソッド:" "= TkAfter" "refm/api/tk_off/tkafter.rd.off")
(find-rurima "== 定数:" "= TkAfter" "refm/api/tk_off/tkafter.rd.off")
(find-rurima "--- TkAfter::Tk_CBID" "== 定数:" "= TkAfter" "refm/api/tk_off/tkafter.rd.off")
(find-rurima "--- TkAfter::Tk_CBTBL" "== 定数:" "= TkAfter" "refm/api/tk_off/tkafter.rd.off")
(find-rurima "= TkBgError" "refm/api/tk_off/tkbgerror.rd.off")
(find-rurima "== extendしているモジュール:" "= TkBgError" "refm/api/tk_off/tkbgerror.rd.off")
(find-rurima "== モジュールメソッド:" "= TkBgError" "refm/api/tk_off/tkbgerror.rd.off")
(find-rurima "--- TkBgError.bgerror(message)" "== モジュールメソッド:" "= TkBgError" "refm/api/tk_off/tkbgerror.rd.off")
(find-rurima "--- TkBgError.tkerror(message)" "== モジュールメソッド:" "= TkBgError" "refm/api/tk_off/tkbgerror.rd.off")
(find-rurima "--- TkBgError.show(message)" "== モジュールメソッド:" "= TkBgError" "refm/api/tk_off/tkbgerror.rd.off")
(find-rurima "= TkcTagCurrent" "refm/api/tk_off/tkctagcurrent.rd.off")
(find-rurima "== スーパークラス:" "= TkcTagCurrent" "refm/api/tk_off/tkctagcurrent.rd.off")
(find-rurima "== クラスメソッド:" "= TkcTagCurrent" "refm/api/tk_off/tkctagcurrent.rd.off")
(find-rurima "--- TkcTagCurrent.new(parent)" "== クラスメソッド:" "= TkcTagCurrent" "refm/api/tk_off/tkctagcurrent.rd.off")
(find-rurima "= TkcTagString" "refm/api/tk_off/tkctagcurrent.rd.off")
(find-rurima "== スーパークラス:" "= TkcTagString" "refm/api/tk_off/tkctagcurrent.rd.off")
(find-rurima "== クラスメソッド:" "= TkcTagString" "refm/api/tk_off/tkctagcurrent.rd.off")
(find-rurima "--- self.new(parent, name, *args)" "== クラスメソッド:" "= TkcTagString" "refm/api/tk_off/tkctagcurrent.rd.off")
(find-rurima "== privateメソッド:" "= TkcTagString" "refm/api/tk_off/tkctagcurrent.rd.off")
(find-rurima "--- TkcTagString#initialize(parent, name, mode=nil, *args)" "== privateメソッド:" "= TkcTagString" "refm/api/tk_off/tkctagcurrent.rd.off")
(find-rurima "= TkMenubutton" "refm/api/tk_off/tkmenubutton.rd.off")
(find-rurima "== スーパークラス:" "= TkMenubutton" "refm/api/tk_off/tkmenubutton.rd.off")
(find-rurima "== 標準オプション:" "= TkMenubutton" "refm/api/tk_off/tkmenubutton.rd.off")
(find-rurima "== オプション:" "= TkMenubutton" "refm/api/tk_off/tkmenubutton.rd.off")
(find-rurima "--- TkMenubutton#direction" "== オプション:" "= TkMenubutton" "refm/api/tk_off/tkmenubutton.rd.off")
(find-rurima "--- TkMenubutton#height" "== オプション:" "= TkMenubutton" "refm/api/tk_off/tkmenubutton.rd.off")
(find-rurima "--- TkMenubutton#indicatoron" "== オプション:" "= TkMenubutton" "refm/api/tk_off/tkmenubutton.rd.off")
(find-rurima "--- TkMenubutton#menu" "== オプション:" "= TkMenubutton" "refm/api/tk_off/tkmenubutton.rd.off")
(find-rurima "--- TkMenubutton#state" "== オプション:" "= TkMenubutton" "refm/api/tk_off/tkmenubutton.rd.off")
(find-rurima "--- TkMenubutton#width" "== オプション:" "= TkMenubutton" "refm/api/tk_off/tkmenubutton.rd.off")
(find-rurima "= TkOptionMenubutton" "refm/api/tk_off/tkmenubutton.rd.off")
(find-rurima "== スーパークラス:" "= TkOptionMenubutton" "refm/api/tk_off/tkmenubutton.rd.off")
(find-rurima "== クラスメソッド:" "= TkOptionMenubutton" "refm/api/tk_off/tkmenubutton.rd.off")
(find-rurima "--- TkOptionMenubutton.new(parent=nil, var=TkVariable.new, firstval=nil, *vals)" "== クラスメソッド:" "= TkOptionMenubutton" "refm/api/tk_off/tkmenubutton.rd.off")
(find-rurima "== メソッド:" "= TkOptionMenubutton" "refm/api/tk_off/tkmenubutton.rd.off")
(find-rurima "--- TkOptionMenubutton#value" "== メソッド:" "= TkOptionMenubutton" "refm/api/tk_off/tkmenubutton.rd.off")
(find-rurima "--- TkOptionMenubutton#activate(index)" "== メソッド:" "= TkOptionMenubutton" "refm/api/tk_off/tkmenubutton.rd.off")
(find-rurima "--- TkOptionMenubutton#add(value)" "== メソッド:" "= TkOptionMenubutton" "refm/api/tk_off/tkmenubutton.rd.off")
(find-rurima "--- TkOptionMenubutton#index(index)" "== メソッド:" "= TkOptionMenubutton" "refm/api/tk_off/tkmenubutton.rd.off")
(find-rurima "--- TkOptionMenubutton#invoke(index)" "== メソッド:" "= TkOptionMenubutton" "refm/api/tk_off/tkmenubutton.rd.off")
(find-rurima "--- TkOptionMenubutton#insert(index, value)" "== メソッド:" "= TkOptionMenubutton" "refm/api/tk_off/tkmenubutton.rd.off")
(find-rurima "--- TkOptionMenubutton#delete(index, last=None)" "== メソッド:" "= TkOptionMenubutton" "refm/api/tk_off/tkmenubutton.rd.off")
(find-rurima "--- TkOptionMenubutton#yposition(index)" "== メソッド:" "= TkOptionMenubutton" "refm/api/tk_off/tkmenubutton.rd.off")
(find-rurima "--- TkOptionMenubutton#menucget(index, key)" "== メソッド:" "= TkOptionMenubutton" "refm/api/tk_off/tkmenubutton.rd.off")
(find-rurima "--- TkOptionMenubutton#menuconfigure(index, key, val=None)" "== メソッド:" "= TkOptionMenubutton" "refm/api/tk_off/tkmenubutton.rd.off")
(find-rurima "--- TkOptionMenubutton#menuconfiginfo(index, key=nil)" "== メソッド:" "= TkOptionMenubutton" "refm/api/tk_off/tkmenubutton.rd.off")
(find-rurima "--- TkOptionMenubutton#entrycget(index, key)" "== メソッド:" "= TkOptionMenubutton" "refm/api/tk_off/tkmenubutton.rd.off")
(find-rurima "--- TkOptionMenubutton#entryconfigure(index, key, val=None)" "== メソッド:" "= TkOptionMenubutton" "refm/api/tk_off/tkmenubutton.rd.off")
(find-rurima "--- TkOptionMenubutton#entryconfiginfo(index, key=nil)" "== メソッド:" "= TkOptionMenubutton" "refm/api/tk_off/tkmenubutton.rd.off")
(find-rurima "= TkWindow" "refm/api/tk_off/tkwindow.rd.off")
(find-rurima "== スーパークラス:" "= TkWindow" "refm/api/tk_off/tkwindow.rd.off")
(find-rurima "== extendしているモジュール:" "= TkWindow" "refm/api/tk_off/tkwindow.rd.off")
(find-rurima "== クラスメソッド:" "= TkWindow" "refm/api/tk_off/tkwindow.rd.off")
(find-rurima "--- TkWindow.new(parent=nil, keys=nil)" "== クラスメソッド:" "= TkWindow" "refm/api/tk_off/tkwindow.rd.off")
(find-rurima "--- TkWindow.new(parent=nil, keys=nil) {|win| ... }" "== クラスメソッド:" "= TkWindow" "refm/api/tk_off/tkwindow.rd.off")
(find-rurima "== privateメソッド:" "= TkWindow" "refm/api/tk_off/tkwindow.rd.off")
(find-rurima "--- TkWindow#create_self" "== privateメソッド:" "= TkWindow" "refm/api/tk_off/tkwindow.rd.off")
(find-rurima "== メソッド:" "= TkWindow" "refm/api/tk_off/tkwindow.rd.off")
(find-rurima "--- TkWindow#pack(keys=nil)" "== メソッド:" "= TkWindow" "refm/api/tk_off/tkwindow.rd.off")
(find-rurima "--- TkWindow#unpack" "== メソッド:" "= TkWindow" "refm/api/tk_off/tkwindow.rd.off")
(find-rurima "--- TkWindow#pack_forget" "== メソッド:" "= TkWindow" "refm/api/tk_off/tkwindow.rd.off")
(find-rurima "--- TkWindow#pack_config(slot, value=None)" "== メソッド:" "= TkWindow" "refm/api/tk_off/tkwindow.rd.off")
(find-rurima "--- TkWindow#pack_info" "== メソッド:" "= TkWindow" "refm/api/tk_off/tkwindow.rd.off")
(find-rurima "--- TkWindow#pack_propagate(mode = nil)" "== メソッド:" "= TkWindow" "refm/api/tk_off/tkwindow.rd.off")
(find-rurima "--- TkWindow#pack_slaves" "== メソッド:" "= TkWindow" "refm/api/tk_off/tkwindow.rd.off")
(find-rurima "--- TkWindow#grid(keys=nil)" "== メソッド:" "= TkWindow" "refm/api/tk_off/tkwindow.rd.off")
(find-rurima "--- TkWindow#ungrid" "== メソッド:" "= TkWindow" "refm/api/tk_off/tkwindow.rd.off")
(find-rurima "--- TkWindow#grid_forget" "== メソッド:" "= TkWindow" "refm/api/tk_off/tkwindow.rd.off")
(find-rurima "--- TkWindow#grid_bbox(*args)" "== メソッド:" "= TkWindow" "refm/api/tk_off/tkwindow.rd.off")
(find-rurima "--- TkWindow#grid_config(slot, value=None)" "== メソッド:" "= TkWindow" "refm/api/tk_off/tkwindow.rd.off")
(find-rurima "--- TkWindow#grid_columnconfig(index, keys)" "== メソッド:" "= TkWindow" "refm/api/tk_off/tkwindow.rd.off")
(find-rurima "--- TkWindow#grid_rowconfig(index, keys)" "== メソッド:" "= TkWindow" "refm/api/tk_off/tkwindow.rd.off")
(find-rurima "--- TkWindow#grid_columnconfiginfo(index, slot=nil)" "== メソッド:" "= TkWindow" "refm/api/tk_off/tkwindow.rd.off")
(find-rurima "--- TkWindow#grid_rowconfiginfo(index, slot=nil)" "== メソッド:" "= TkWindow" "refm/api/tk_off/tkwindow.rd.off")
(find-rurima "--- TkWindow#grid_info" "== メソッド:" "= TkWindow" "refm/api/tk_off/tkwindow.rd.off")
(find-rurima "--- TkWindow#grid_location(x, y)" "== メソッド:" "= TkWindow" "refm/api/tk_off/tkwindow.rd.off")
(find-rurima "--- TkWindow#grid_propagate(mode=nil)" "== メソッド:" "= TkWindow" "refm/api/tk_off/tkwindow.rd.off")
(find-rurima "--- TkWindow#grid_remove" "== メソッド:" "= TkWindow" "refm/api/tk_off/tkwindow.rd.off")
(find-rurima "--- TkWindow#grid_slaves(args)" "== メソッド:" "= TkWindow" "refm/api/tk_off/tkwindow.rd.off")
(find-rurima "--- TkWindow#place(keys=nil)" "== メソッド:" "= TkWindow" "refm/api/tk_off/tkwindow.rd.off")
(find-rurima "--- TkWindow#unplace" "== メソッド:" "= TkWindow" "refm/api/tk_off/tkwindow.rd.off")
(find-rurima "--- TkWindow#place_forget" "== メソッド:" "= TkWindow" "refm/api/tk_off/tkwindow.rd.off")
(find-rurima "--- TkWindow#place_config(keys)" "== メソッド:" "= TkWindow" "refm/api/tk_off/tkwindow.rd.off")
(find-rurima "--- TkWindow#place_config(slot, value=None)" "== メソッド:" "= TkWindow" "refm/api/tk_off/tkwindow.rd.off")
(find-rurima "--- TkWindow#place_configinfo(slot = nil)" "== メソッド:" "= TkWindow" "refm/api/tk_off/tkwindow.rd.off")
(find-rurima "--- TkWindow#place_info" "== メソッド:" "= TkWindow" "refm/api/tk_off/tkwindow.rd.off")
(find-rurima "--- TkWindow#place_slaves" "== メソッド:" "= TkWindow" "refm/api/tk_off/tkwindow.rd.off")
(find-rurima "--- TkWindow#focus(force = false)" "== メソッド:" "= TkWindow" "refm/api/tk_off/tkwindow.rd.off")
(find-rurima "--- TkWindow#grab(arg = nil)" "== メソッド:" "= TkWindow" "refm/api/tk_off/tkwindow.rd.off")
(find-rurima "--- TkWindow#lower(below=None)" "== メソッド:" "= TkWindow" "refm/api/tk_off/tkwindow.rd.off")
(find-rurima "--- TkWindow#raise(above=None)" "== メソッド:" "= TkWindow" "refm/api/tk_off/tkwindow.rd.off")
(find-rurima "--- TkWindow#command(cmd=Proc.new)" "== メソッド:" "= TkWindow" "refm/api/tk_off/tkwindow.rd.off")
(find-rurima "--- TkWindow#colormodel(model=None)" "== メソッド:" "= TkWindow" "refm/api/tk_off/tkwindow.rd.off")
(find-rurima "--- TkWindow#destroy" "== メソッド:" "= TkWindow" "refm/api/tk_off/tkwindow.rd.off")
(find-rurima "--- TkWindow#wait" "== メソッド:" "= TkWindow" "refm/api/tk_off/tkwindow.rd.off")
(find-rurima "--- TkWindow#wait_visibility" "== メソッド:" "= TkWindow" "refm/api/tk_off/tkwindow.rd.off")
(find-rurima "--- TkWindow#wait_destroy" "== メソッド:" "= TkWindow" "refm/api/tk_off/tkwindow.rd.off")
(find-rurima "--- TkWindow#bindtags(taglist=nil)" "== メソッド:" "= TkWindow" "refm/api/tk_off/tkwindow.rd.off")
(find-rurima "= TkTextImage" "refm/api/tk_off/tktextimage.rd.off")
(find-rurima "== スーパークラス:" "= TkTextImage" "refm/api/tk_off/tktextimage.rd.off")
(find-rurima "== クラスメソッド:" "= TkTextImage" "refm/api/tk_off/tktextimage.rd.off")
(find-rurima "--- TkTextImage.new(parent, index, keys)" "== クラスメソッド:" "= TkTextImage" "refm/api/tk_off/tktextimage.rd.off")
(find-rurima "== メソッド:" "= TkTextImage" "refm/api/tk_off/tktextimage.rd.off")
(find-rurima "--- TkTextImage#[](slot)" "== メソッド:" "= TkTextImage" "refm/api/tk_off/tktextimage.rd.off")
(find-rurima "--- TkTextImage#[]=(slot, value)" "== メソッド:" "= TkTextImage" "refm/api/tk_off/tktextimage.rd.off")
(find-rurima "--- TkTextImage#cget(slot)" "== メソッド:" "= TkTextImage" "refm/api/tk_off/tktextimage.rd.off")
(find-rurima "--- TkTextImage#configure(slot, value=None)" "== メソッド:" "= TkTextImage" "refm/api/tk_off/tktextimage.rd.off")
(find-rurima "--- TkTextImage#image" "== メソッド:" "= TkTextImage" "refm/api/tk_off/tktextimage.rd.off")
(find-rurima "--- TkTextImage#image=(value)" "== メソッド:" "= TkTextImage" "refm/api/tk_off/tktextimage.rd.off")
(find-rurima "--- TkTextImage#configinfo(slot = nil)" "== メソッド:" "= TkTextImage" "refm/api/tk_off/tktextimage.rd.off")
(find-rurima "= TkButton" "refm/api/tk_off/tkbutton.rd.off")
(find-rurima "== スーパークラス:" "= TkButton" "refm/api/tk_off/tkbutton.rd.off")
(find-rurima "== メソッド:" "= TkButton" "refm/api/tk_off/tkbutton.rd.off")
(find-rurima "--- TkButton#invoke" "== メソッド:" "= TkButton" "refm/api/tk_off/tkbutton.rd.off")
(find-rurima "--- TkButton#flash" "== メソッド:" "= TkButton" "refm/api/tk_off/tkbutton.rd.off")
(find-rurima "== 標準オプション:" "= TkButton" "refm/api/tk_off/tkbutton.rd.off")
(find-rurima "== オプション:" "= TkButton" "refm/api/tk_off/tkbutton.rd.off")
(find-rurima "--- TkButton#default" "== オプション:" "= TkButton" "refm/api/tk_off/tkbutton.rd.off")
(find-rurima "--- TkButton#height" "== オプション:" "= TkButton" "refm/api/tk_off/tkbutton.rd.off")
(find-rurima "--- TkButton#state" "== オプション:" "= TkButton" "refm/api/tk_off/tkbutton.rd.off")
(find-rurima "--- TkButton#width" "== オプション:" "= TkButton" "refm/api/tk_off/tkbutton.rd.off")
(find-rurima "= TkComm" "refm/api/tk_off/tkcomm.rd.off")
(find-rurima "== privateメソッド:" "= TkComm" "refm/api/tk_off/tkcomm.rd.off")
(find-rurima "--- TkComm#error_at" "== privateメソッド:" "= TkComm" "refm/api/tk_off/tkcomm.rd.off")
(find-rurima "--- TkComm#tk_tcl2ruby(val)" "== privateメソッド:" "= TkComm" "refm/api/tk_off/tkcomm.rd.off")
(find-rurima "--- TkComm#tk_split_list(str)" "== privateメソッド:" "= TkComm" "refm/api/tk_off/tkcomm.rd.off")
(find-rurima "--- TkComm#tk_split_simplelist(str)" "== privateメソッド:" "= TkComm" "refm/api/tk_off/tkcomm.rd.off")
(find-rurima "--- TkComm#hash_kv(keys)" "== privateメソッド:" "= TkComm" "refm/api/tk_off/tkcomm.rd.off")
(find-rurima "--- TkComm#array2tk_list(ary)" "== privateメソッド:" "= TkComm" "refm/api/tk_off/tkcomm.rd.off")
(find-rurima "--- TkComm#bool(val)" "== privateメソッド:" "= TkComm" "refm/api/tk_off/tkcomm.rd.off")
(find-rurima "--- TkComm#number(val)" "== privateメソッド:" "= TkComm" "refm/api/tk_off/tkcomm.rd.off")
(find-rurima "--- TkComm#string(val)" "== privateメソッド:" "= TkComm" "refm/api/tk_off/tkcomm.rd.off")
(find-rurima "--- TkComm#list(val)" "== privateメソッド:" "= TkComm" "refm/api/tk_off/tkcomm.rd.off")
(find-rurima "--- TkComm#window(val)" "== privateメソッド:" "= TkComm" "refm/api/tk_off/tkcomm.rd.off")
(find-rurima "--- TkComm#procedure(val)" "== privateメソッド:" "= TkComm" "refm/api/tk_off/tkcomm.rd.off")
(find-rurima "--- TkComm#_get_eval_string(obj)" "== privateメソッド:" "= TkComm" "refm/api/tk_off/tkcomm.rd.off")
(find-rurima "--- TkComm#ruby2tcl(obj)" "== privateメソッド:" "= TkComm" "refm/api/tk_off/tkcomm.rd.off")
(find-rurima "--- TkComm#install_cmd(cmd)" "== privateメソッド:" "= TkComm" "refm/api/tk_off/tkcomm.rd.off")
(find-rurima "--- TkComm#uninstall_cmd(id)" "== privateメソッド:" "= TkComm" "refm/api/tk_off/tkcomm.rd.off")
(find-rurima "--- TkComm#install_bind(cmd, args=nil)" "== privateメソッド:" "= TkComm" "refm/api/tk_off/tkcomm.rd.off")
(find-rurima "--- TkComm#tk_event_sequence(context)" "== privateメソッド:" "= TkComm" "refm/api/tk_off/tkcomm.rd.off")
(find-rurima "--- TkComm#_bind_core(mode, path, context, cmd, args=nil)" "== privateメソッド:" "= TkComm" "refm/api/tk_off/tkcomm.rd.off")
(find-rurima "--- TkComm#_bind(what, context, cmd, args=nil)" "== privateメソッド:" "= TkComm" "refm/api/tk_off/tkcomm.rd.off")
(find-rurima "--- TkComm#_bind_append(path, context, cmd, args=nil)" "== privateメソッド:" "= TkComm" "refm/api/tk_off/tkcomm.rd.off")
(find-rurima "--- TkComm#_bind_remove(what, context)" "== privateメソッド:" "= TkComm" "refm/api/tk_off/tkcomm.rd.off")
(find-rurima "--- TkComm#_bindinfo(what, context=nil)" "== privateメソッド:" "= TkComm" "refm/api/tk_off/tkcomm.rd.off")
(find-rurima "== メソッド:" "= TkComm" "refm/api/tk_off/tkcomm.rd.off")
(find-rurima "--- TkComm#_genobj_for_tkwidget(path)" "== メソッド:" "= TkComm" "refm/api/tk_off/tkcomm.rd.off")
(find-rurima "--- TkComm#_curr_cmd_id" "== メソッド:" "= TkComm" "refm/api/tk_off/tkcomm.rd.off")
(find-rurima "--- TkComm#_next_cmd_id" "== メソッド:" "= TkComm" "refm/api/tk_off/tkcomm.rd.off")
(find-rurima "--- TkComm#install_win(ppath)" "== メソッド:" "= TkComm" "refm/api/tk_off/tkcomm.rd.off")
(find-rurima "--- TkComm#uninstall_win" "== メソッド:" "= TkComm" "refm/api/tk_off/tkcomm.rd.off")
(find-rurima "--- TkComm#bind(tagOrClass, context, cmd=Proc.new, args=nil)" "== メソッド:" "= TkComm" "refm/api/tk_off/tkcomm.rd.off")
(find-rurima "--- TkComm#bind_append(tagOrClass, context, cmd=Proc.new, args=nil)" "== メソッド:" "= TkComm" "refm/api/tk_off/tkcomm.rd.off")
(find-rurima "--- TkComm#bind_remove(tagOrClass, context)" "== メソッド:" "= TkComm" "refm/api/tk_off/tkcomm.rd.off")
(find-rurima "--- TkComm#bindinfo(tagOrClass, context=nil)" "== メソッド:" "= TkComm" "refm/api/tk_off/tkcomm.rd.off")
(find-rurima "--- TkComm#bind_all(context, cmd=Proc.new, args=nil)" "== メソッド:" "= TkComm" "refm/api/tk_off/tkcomm.rd.off")
(find-rurima "--- TkComm#bind_append_all(context, cmd=Proc.new, args=nil)" "== メソッド:" "= TkComm" "refm/api/tk_off/tkcomm.rd.off")
(find-rurima "--- TkComm#bindinfo_all(context=nil)" "== メソッド:" "= TkComm" "refm/api/tk_off/tkcomm.rd.off")
(find-rurima "--- TkComm#pack(*args)" "== メソッド:" "= TkComm" "refm/api/tk_off/tkcomm.rd.off")
(find-rurima "--- TkComm#grid(*args)" "== メソッド:" "= TkComm" "refm/api/tk_off/tkcomm.rd.off")
(find-rurima "--- TkComm#update(idle=nil)" "== メソッド:" "= TkComm" "refm/api/tk_off/tkcomm.rd.off")
(find-rurima "== 定数:" "= TkComm" "refm/api/tk_off/tkcomm.rd.off")
(find-rurima "--- TkComm::WidgetClassNames" "== 定数:" "= TkComm" "refm/api/tk_off/tkcomm.rd.off")
(find-rurima "--- TkComm::None" "== 定数:" "= TkComm" "refm/api/tk_off/tkcomm.rd.off")
(find-rurima "--- TkComm::Tk_CMDTBL" "== 定数:" "= TkComm" "refm/api/tk_off/tkcomm.rd.off")
(find-rurima "--- TkComm::Tk_WINDOWS" "== 定数:" "= TkComm" "refm/api/tk_off/tkcomm.rd.off")
(find-rurima "--- TkComm::Tk_IDs" "== 定数:" "= TkComm" "refm/api/tk_off/tkcomm.rd.off")
(find-rurima "= TkScale" "refm/api/tk_off/tkscale.rd.off")
(find-rurima "== スーパークラス:" "= TkScale" "refm/api/tk_off/tkscale.rd.off")
(find-rurima "== メソッド:" "= TkScale" "refm/api/tk_off/tkscale.rd.off")
(find-rurima "--- TkScale#get" "== メソッド:" "= TkScale" "refm/api/tk_off/tkscale.rd.off")
(find-rurima "--- TkScale#value" "== メソッド:" "= TkScale" "refm/api/tk_off/tkscale.rd.off")
(find-rurima "--- TkScale#get(x, y)" "== メソッド:" "= TkScale" "refm/api/tk_off/tkscale.rd.off")
(find-rurima "--- TkScale#set(val)" "== メソッド:" "= TkScale" "refm/api/tk_off/tkscale.rd.off")
(find-rurima "--- TkScale#value=(val)" "== メソッド:" "= TkScale" "refm/api/tk_off/tkscale.rd.off")
(find-rurima "--- TkScale#coords(val=None)" "== メソッド:" "= TkScale" "refm/api/tk_off/tkscale.rd.off")
(find-rurima "--- TkScale#identify(x, y)" "== メソッド:" "= TkScale" "refm/api/tk_off/tkscale.rd.off")
(find-rurima "== 標準オプション:" "= TkScale" "refm/api/tk_off/tkscale.rd.off")
(find-rurima "== オプション:" "= TkScale" "refm/api/tk_off/tkscale.rd.off")
(find-rurima "--- TkScale#bigincrement" "== オプション:" "= TkScale" "refm/api/tk_off/tkscale.rd.off")
(find-rurima "--- TkScale#command" "== オプション:" "= TkScale" "refm/api/tk_off/tkscale.rd.off")
(find-rurima "--- TkScale#digits" "== オプション:" "= TkScale" "refm/api/tk_off/tkscale.rd.off")
(find-rurima "--- TkScale#from(n)" "== オプション:" "= TkScale" "refm/api/tk_off/tkscale.rd.off")
(find-rurima "--- TkScale#label(text)" "== オプション:" "= TkScale" "refm/api/tk_off/tkscale.rd.off")
(find-rurima "--- TkScale#length(len)" "== オプション:" "= TkScale" "refm/api/tk_off/tkscale.rd.off")
(find-rurima "--- TkScale#resolution(n)" "== オプション:" "= TkScale" "refm/api/tk_off/tkscale.rd.off")
(find-rurima "--- TkScale#showvalue(bool)" "== オプション:" "= TkScale" "refm/api/tk_off/tkscale.rd.off")
(find-rurima "--- TkScale#sliderlength(len)" "== オプション:" "= TkScale" "refm/api/tk_off/tkscale.rd.off")
(find-rurima "--- TkScale#sliderrelief(s)" "== オプション:" "= TkScale" "refm/api/tk_off/tkscale.rd.off")
(find-rurima "--- TkScale#state" "== オプション:" "= TkScale" "refm/api/tk_off/tkscale.rd.off")
(find-rurima "--- TkScale#tickinterval(n)" "== オプション:" "= TkScale" "refm/api/tk_off/tkscale.rd.off")
(find-rurima "--- TkScale#to(n)" "== オプション:" "= TkScale" "refm/api/tk_off/tkscale.rd.off")
(find-rurima "--- TkScale#variable(v)" "== オプション:" "= TkScale" "refm/api/tk_off/tkscale.rd.off")
(find-rurima "--- TkScale#width" "== オプション:" "= TkScale" "refm/api/tk_off/tkscale.rd.off")
(find-rurima "= TkTextMark" "refm/api/tk_off/tktextmark.rd.off")
(find-rurima "== スーパークラス:" "= TkTextMark" "refm/api/tk_off/tktextmark.rd.off")
(find-rurima "== クラスメソッド:" "= TkTextMark" "refm/api/tk_off/tktextmark.rd.off")
(find-rurima "--- TkTextMark.new(parent, index)" "== クラスメソッド:" "= TkTextMark" "refm/api/tk_off/tktextmark.rd.off")
(find-rurima "== メソッド:" "= TkTextMark" "refm/api/tk_off/tktextmark.rd.off")
(find-rurima "--- TkTextMark#id" "== メソッド:" "= TkTextMark" "refm/api/tk_off/tktextmark.rd.off")
(find-rurima "--- TkTextMark#set(where)" "== メソッド:" "= TkTextMark" "refm/api/tk_off/tktextmark.rd.off")
(find-rurima "--- TkTextMark#unset" "== メソッド:" "= TkTextMark" "refm/api/tk_off/tktextmark.rd.off")
(find-rurima "--- TkTextMark#gravity" "== メソッド:" "= TkTextMark" "refm/api/tk_off/tktextmark.rd.off")
(find-rurima "--- TkTextMark#gravity=(direction)" "== メソッド:" "= TkTextMark" "refm/api/tk_off/tktextmark.rd.off")
(find-rurima "--- TkTextMark#next(index)" "== メソッド:" "= TkTextMark" "refm/api/tk_off/tktextmark.rd.off")
(find-rurima "--- TkTextMark#previous(index)" "== メソッド:" "= TkTextMark" "refm/api/tk_off/tktextmark.rd.off")
(find-rurima "= TkUtil" "refm/api/tk_off/tkutil.rd.off")
(find-rurima "== モジュールメソッド:" "= TkUtil" "refm/api/tk_off/tkutil.rd.off")
(find-rurima "--- TkUtil.eval_cmd(cmd, *rest)" "== モジュールメソッド:" "= TkUtil" "refm/api/tk_off/tkutil.rd.off")
(find-rurima "= TclTkLib" "refm/api/tk_off/tcltklib.rd.off")
(find-rurima "== モジュール関数:" "= TclTkLib" "refm/api/tk_off/tcltklib.rd.off")
(find-rurima "--- TclTkLib.mainloop" "== モジュール関数:" "= TclTkLib" "refm/api/tk_off/tcltklib.rd.off")
(find-rurima "= TkcArc" "refm/api/tk_off/tkcarc.rd.off")
(find-rurima "== スーパークラス:" "= TkcArc" "refm/api/tk_off/tkcarc.rd.off")
(find-rurima "== メソッド:" "= TkcArc" "refm/api/tk_off/tkcarc.rd.off")
(find-rurima "= TkKernel" "refm/api/tk_off/tkkernel.rd.off")
(find-rurima "== スーパークラス:" "= TkKernel" "refm/api/tk_off/tkkernel.rd.off")
(find-rurima "== クラスメソッド:" "= TkKernel" "refm/api/tk_off/tkkernel.rd.off")
(find-rurima "--- TkKernel.new {|obj| ...}" "== クラスメソッド:" "= TkKernel" "refm/api/tk_off/tkkernel.rd.off")
(find-rurima "= TkcBitmap" "refm/api/tk_off/tkcbitmap.rd.off")
(find-rurima "== スーパークラス:" "= TkcBitmap" "refm/api/tk_off/tkcbitmap.rd.off")
(find-rurima "== メソッド:" "= TkcBitmap" "refm/api/tk_off/tkcbitmap.rd.off")
(find-rurima "= TkTextTag" "refm/api/tk_off/tktexttag.rd.off")
(find-rurima "== スーパークラス:" "= TkTextTag" "refm/api/tk_off/tktexttag.rd.off")
(find-rurima "== インクルードしているモジュール:" "= TkTextTag" "refm/api/tk_off/tktexttag.rd.off")
(find-rurima "== クラスメソッド:" "= TkTextTag" "refm/api/tk_off/tktexttag.rd.off")
(find-rurima "--- TkTextTag.new(parent, *args)" "== クラスメソッド:" "= TkTextTag" "refm/api/tk_off/tktexttag.rd.off")
(find-rurima "== メソッド:" "= TkTextTag" "refm/api/tk_off/tktexttag.rd.off")
(find-rurima "--- TkTextTag#id" "== メソッド:" "= TkTextTag" "refm/api/tk_off/tktexttag.rd.off")
(find-rurima "--- TkTextTag#first" "== メソッド:" "= TkTextTag" "refm/api/tk_off/tktexttag.rd.off")
(find-rurima "--- TkTextTag#last" "== メソッド:" "= TkTextTag" "refm/api/tk_off/tktexttag.rd.off")
(find-rurima "--- TkTextTag#add(*index)" "== メソッド:" "= TkTextTag" "refm/api/tk_off/tktexttag.rd.off")
(find-rurima "--- TkTextTag#remove(*index)" "== メソッド:" "= TkTextTag" "refm/api/tk_off/tktexttag.rd.off")
(find-rurima "--- TkTextTag#ranges" "== メソッド:" "= TkTextTag" "refm/api/tk_off/tktexttag.rd.off")
(find-rurima "--- TkTextTag#nextrange(first, last=None)" "== メソッド:" "= TkTextTag" "refm/api/tk_off/tktexttag.rd.off")
(find-rurima "--- TkTextTag#prevrange(first, last=None)" "== メソッド:" "= TkTextTag" "refm/api/tk_off/tktexttag.rd.off")
(find-rurima "--- TkTextTag#[](key)" "== メソッド:" "= TkTextTag" "refm/api/tk_off/tktexttag.rd.off")
(find-rurima "--- TkTextTag#[]=(key,val)" "== メソッド:" "= TkTextTag" "refm/api/tk_off/tktexttag.rd.off")
(find-rurima "--- TkTextTag#cget(key)" "== メソッド:" "= TkTextTag" "refm/api/tk_off/tktexttag.rd.off")
(find-rurima "--- TkTextTag#configure(key, val=None)" "== メソッド:" "= TkTextTag" "refm/api/tk_off/tktexttag.rd.off")
(find-rurima "--- TkTextTag#configinfo(key=nil)" "== メソッド:" "= TkTextTag" "refm/api/tk_off/tktexttag.rd.off")
(find-rurima "--- TkTextTag#bind(seq, cmd=Proc.new, args=nil)" "== メソッド:" "= TkTextTag" "refm/api/tk_off/tktexttag.rd.off")
(find-rurima "--- TkTextTag#bind_append(seq, cmd=Proc.new, args=nil)" "== メソッド:" "= TkTextTag" "refm/api/tk_off/tktexttag.rd.off")
(find-rurima "--- TkTextTag#bindinfo(context=nil)" "== メソッド:" "= TkTextTag" "refm/api/tk_off/tktexttag.rd.off")
(find-rurima "--- TkTextTag#raise(above=None)" "== メソッド:" "= TkTextTag" "refm/api/tk_off/tktexttag.rd.off")
(find-rurima "--- TkTextTag#lower(below=None)" "== メソッド:" "= TkTextTag" "refm/api/tk_off/tktexttag.rd.off")
(find-rurima "--- TkTextTag#destroy" "== メソッド:" "= TkTextTag" "refm/api/tk_off/tktexttag.rd.off")
(find-rurima "= TkEntry" "refm/api/tk_off/tkentry.rd.off")
(find-rurima "== スーパークラス:" "= TkEntry" "refm/api/tk_off/tkentry.rd.off")
(find-rurima "== インクルードしているモジュール:" "= TkEntry" "refm/api/tk_off/tkentry.rd.off")
(find-rurima "== メソッド:" "= TkEntry" "refm/api/tk_off/tkentry.rd.off")
(find-rurima "--- TkEntry#bbox(index)" "== メソッド:" "= TkEntry" "refm/api/tk_off/tkentry.rd.off")
(find-rurima "--- TkEntry#delete(s, e=None)" "== メソッド:" "= TkEntry" "refm/api/tk_off/tkentry.rd.off")
(find-rurima "--- TkEntry#configure(slot, value=None)" "== メソッド:" "= TkEntry" "refm/api/tk_off/tkentry.rd.off")
(find-rurima "--- TkEntry#cursor" "== メソッド:" "= TkEntry" "refm/api/tk_off/tkentry.rd.off")
(find-rurima "--- TkEntry#cursor=(index)" "== メソッド:" "= TkEntry" "refm/api/tk_off/tkentry.rd.off")
(find-rurima "--- TkEntry#index(index)" "== メソッド:" "= TkEntry" "refm/api/tk_off/tkentry.rd.off")
(find-rurima "--- TkEntry#insert(pos,text)" "== メソッド:" "= TkEntry" "refm/api/tk_off/tkentry.rd.off")
(find-rurima "--- TkEntry#mark(pos)" "== メソッド:" "= TkEntry" "refm/api/tk_off/tkentry.rd.off")
(find-rurima "--- TkEntry#dragto(pos)" "== メソッド:" "= TkEntry" "refm/api/tk_off/tkentry.rd.off")
(find-rurima "--- TkEntry#selection_adjust(index)" "== メソッド:" "= TkEntry" "refm/api/tk_off/tkentry.rd.off")
(find-rurima "--- TkEntry#selection_clear" "== メソッド:" "= TkEntry" "refm/api/tk_off/tkentry.rd.off")
(find-rurima "--- TkEntry#selection_from(index)" "== メソッド:" "= TkEntry" "refm/api/tk_off/tkentry.rd.off")
(find-rurima "--- TkEntry#selection_present" "== メソッド:" "= TkEntry" "refm/api/tk_off/tkentry.rd.off")
(find-rurima "--- TkEntry#selection_range(s, e)" "== メソッド:" "= TkEntry" "refm/api/tk_off/tkentry.rd.off")
(find-rurima "--- TkEntry#selection_to(index)" "== メソッド:" "= TkEntry" "refm/api/tk_off/tkentry.rd.off")
(find-rurima "--- TkEntry#validate(mode = nil)" "== メソッド:" "= TkEntry" "refm/api/tk_off/tkentry.rd.off")
(find-rurima "--- TkEntry#validatecommand(cmd = ValidateCmd.new, args = nil)" "== メソッド:" "= TkEntry" "refm/api/tk_off/tkentry.rd.off")
(find-rurima "--- TkEntry#vcmd(cmd = ValidateCmd.new, args = nil)" "== メソッド:" "= TkEntry" "refm/api/tk_off/tkentry.rd.off")
(find-rurima "--- TkEntry#invalidcommand(cmd = ValidateCmd.new, args = nil)" "== メソッド:" "= TkEntry" "refm/api/tk_off/tkentry.rd.off")
(find-rurima "--- TkEntry#invcmd(cmd = ValidateCmd.new, args = nil)" "== メソッド:" "= TkEntry" "refm/api/tk_off/tkentry.rd.off")
(find-rurima "--- TkEntry#value" "== メソッド:" "= TkEntry" "refm/api/tk_off/tkentry.rd.off")
(find-rurima "--- TkEntry#value=(val)" "== メソッド:" "= TkEntry" "refm/api/tk_off/tkentry.rd.off")
(find-rurima "== 標準オプション:" "= TkEntry" "refm/api/tk_off/tkentry.rd.off")
(find-rurima "== オプション:" "= TkEntry" "refm/api/tk_off/tkentry.rd.off")
(find-rurima "--- TkEntry#show" "== オプション:" "= TkEntry" "refm/api/tk_off/tkentry.rd.off")
(find-rurima "--- TkEntry#state" "== オプション:" "= TkEntry" "refm/api/tk_off/tkentry.rd.off")
(find-rurima "--- TkEntry#width" "== オプション:" "= TkEntry" "refm/api/tk_off/tkentry.rd.off")
(find-rurima "= TkSpinbox" "refm/api/tk_off/tkentry.rd.off")
(find-rurima "== スーパークラス:" "= TkSpinbox" "refm/api/tk_off/tkentry.rd.off")
(find-rurima "== メソッド:" "= TkSpinbox" "refm/api/tk_off/tkentry.rd.off")
(find-rurima "--- TkSpinbox#identify(x, y)" "== メソッド:" "= TkSpinbox" "refm/api/tk_off/tkentry.rd.off")
(find-rurima "--- TkSpinbox#spinup" "== メソッド:" "= TkSpinbox" "refm/api/tk_off/tkentry.rd.off")
(find-rurima "--- TkSpinbox#spindown" "== メソッド:" "= TkSpinbox" "refm/api/tk_off/tkentry.rd.off")
(find-rurima "--- TkSpinbox#set(str)" "== メソッド:" "= TkSpinbox" "refm/api/tk_off/tkentry.rd.off")
(find-rurima "= TkImage" "refm/api/tk_off/tkimage.rd.off")
(find-rurima "== スーパークラス:" "= TkImage" "refm/api/tk_off/tkimage.rd.off")
(find-rurima "== インクルードしているモジュール:" "= TkImage" "refm/api/tk_off/tkimage.rd.off")
(find-rurima "== クラスメソッド:" "= TkImage" "refm/api/tk_off/tkimage.rd.off")
(find-rurima "--- TkImage.names" "== クラスメソッド:" "= TkImage" "refm/api/tk_off/tkimage.rd.off")
(find-rurima "--- TkImage.types" "== クラスメソッド:" "= TkImage" "refm/api/tk_off/tkimage.rd.off")
(find-rurima "--- TkImage.new(keys=nil)" "== クラスメソッド:" "= TkImage" "refm/api/tk_off/tkimage.rd.off")
(find-rurima "== メソッド:" "= TkImage" "refm/api/tk_off/tkimage.rd.off")
(find-rurima "--- TkImage#delete" "== メソッド:" "= TkImage" "refm/api/tk_off/tkimage.rd.off")
(find-rurima "--- TkImage#height" "== メソッド:" "= TkImage" "refm/api/tk_off/tkimage.rd.off")
(find-rurima "--- TkImage#inuse" "== メソッド:" "= TkImage" "refm/api/tk_off/tkimage.rd.off")
(find-rurima "--- TkImage#itemtype" "== メソッド:" "= TkImage" "refm/api/tk_off/tkimage.rd.off")
(find-rurima "--- TkImage#width" "== メソッド:" "= TkImage" "refm/api/tk_off/tkimage.rd.off")
(find-rurima "= TkTextWindow" "refm/api/tk_off/tktextwindow.rd.off")
(find-rurima "== スーパークラス:" "= TkTextWindow" "refm/api/tk_off/tktextwindow.rd.off")
(find-rurima "== クラスメソッド:" "= TkTextWindow" "refm/api/tk_off/tktextwindow.rd.off")
(find-rurima "--- TkTextWindow.new(parent, index, keys)" "== クラスメソッド:" "= TkTextWindow" "refm/api/tk_off/tktextwindow.rd.off")
(find-rurima "== メソッド:" "= TkTextWindow" "refm/api/tk_off/tktextwindow.rd.off")
(find-rurima "--- TkTextWindow#[](slot)" "== メソッド:" "= TkTextWindow" "refm/api/tk_off/tktextwindow.rd.off")
(find-rurima "--- TkTextWindow#[]=(slot,value)" "== メソッド:" "= TkTextWindow" "refm/api/tk_off/tktextwindow.rd.off")
(find-rurima "--- TkTextWindow#cget(slot)" "== メソッド:" "= TkTextWindow" "refm/api/tk_off/tktextwindow.rd.off")
(find-rurima "--- TkTextWindow#configure(slot, value=None)" "== メソッド:" "= TkTextWindow" "refm/api/tk_off/tktextwindow.rd.off")
(find-rurima "--- TkTextWindow#window" "== メソッド:" "= TkTextWindow" "refm/api/tk_off/tktextwindow.rd.off")
(find-rurima "--- TkTextWindow#window=(value)" "== メソッド:" "= TkTextWindow" "refm/api/tk_off/tktextwindow.rd.off")
(find-rurima "--- TkTextWindow#create" "== メソッド:" "= TkTextWindow" "refm/api/tk_off/tktextwindow.rd.off")
(find-rurima "--- TkTextWindow#create=(value)" "== メソッド:" "= TkTextWindow" "refm/api/tk_off/tktextwindow.rd.off")
(find-rurima "--- TkTextWindow#configinfo(slot = nil)" "== メソッド:" "= TkTextWindow" "refm/api/tk_off/tktextwindow.rd.off")
(find-rurima "= TkcPolygon" "refm/api/tk_off/tkcpolygon.rd.off")
(find-rurima "== スーパークラス:" "= TkcPolygon" "refm/api/tk_off/tkcpolygon.rd.off")
(find-rurima "== メソッド:" "= TkcPolygon" "refm/api/tk_off/tkcpolygon.rd.off")
(find-rurima "= TkWarning" "refm/api/tk_off/tkwarning.rd.off")
(find-rurima "== スーパークラス:" "= TkWarning" "refm/api/tk_off/tkwarning.rd.off")
(find-rurima "== クラスメソッド:" "= TkWarning" "refm/api/tk_off/tkwarning.rd.off")
(find-rurima "--- TkWarning.new(mes)" "== クラスメソッド:" "= TkWarning" "refm/api/tk_off/tkwarning.rd.off")
(find-rurima "== メソッド:" "= TkWarning" "refm/api/tk_off/tkwarning.rd.off")
(find-rurima "--- TkWarning#message" "== メソッド:" "= TkWarning" "refm/api/tk_off/tkwarning.rd.off")
(find-rurima "--- TkWarning#title" "== メソッド:" "= TkWarning" "refm/api/tk_off/tkwarning.rd.off")
(find-rurima "--- TkWarning#bitmap" "== メソッド:" "= TkWarning" "refm/api/tk_off/tkwarning.rd.off")
(find-rurima "--- TkWarning#default_button" "== メソッド:" "= TkWarning" "refm/api/tk_off/tkwarning.rd.off")
(find-rurima "--- TkWarning#buttons" "== メソッド:" "= TkWarning" "refm/api/tk_off/tkwarning.rd.off")
(find-rurima "= TkTreatTextTagFont" "refm/api/tk_off/tktreattexttagfont.rd.off")
(find-rurima "== メソッド:" "= TkTreatTextTagFont" "refm/api/tk_off/tktreattexttagfont.rd.off")
(find-rurima "--- TkTreatTextTagFont#tagfont_configinfo(tag)" "== メソッド:" "= TkTreatTextTagFont" "refm/api/tk_off/tktreattexttagfont.rd.off")
(find-rurima "--- TkTreatTextTagFont#tagfont_configure(tag, slot)" "== メソッド:" "= TkTreatTextTagFont" "refm/api/tk_off/tktreattexttagfont.rd.off")
(find-rurima "--- TkTreatTextTagFont#latintagfont_configure(tag, ltn, keys=nil)" "== メソッド:" "= TkTreatTextTagFont" "refm/api/tk_off/tktreattexttagfont.rd.off")
(find-rurima "--- TkTreatTextTagFont#kanjitagfont_configure(tag, knj, keys=nil)" "== メソッド:" "= TkTreatTextTagFont" "refm/api/tk_off/tktreattexttagfont.rd.off")
(find-rurima "--- TkTreatTextTagFont#tagfont_copy(tag, window, wintag=nil)" "== メソッド:" "= TkTreatTextTagFont" "refm/api/tk_off/tktreattexttagfont.rd.off")
(find-rurima "--- TkTreatTextTagFont#latintagfont_copy(tag, window, wintag=nil)" "== メソッド:" "= TkTreatTextTagFont" "refm/api/tk_off/tktreattexttagfont.rd.off")
(find-rurima "--- TkTreatTextTagFont#kanjitagfont_copy(tag, window, wintag=nil)" "== メソッド:" "= TkTreatTextTagFont" "refm/api/tk_off/tktreattexttagfont.rd.off")
(find-rurima "= TkcGroup" "refm/api/tk_off/tkcgroup.rd.off")
(find-rurima "== スーパークラス:" "= TkcGroup" "refm/api/tk_off/tkcgroup.rd.off")
(find-rurima "== メソッド:" "= TkcGroup" "refm/api/tk_off/tkcgroup.rd.off")
(find-rurima "--- TkcGroup#include(*tags)" "== メソッド:" "= TkcGroup" "refm/api/tk_off/tkcgroup.rd.off")
(find-rurima "--- TkcGroup#exclude(*tags)" "== メソッド:" "= TkcGroup" "refm/api/tk_off/tkcgroup.rd.off")
(find-rurima "= TkCombobox" "refm/api/tk_off/tkcombobox.rd.off")
(find-rurima "== スーパークラス:" "= TkCombobox" "refm/api/tk_off/tkcombobox.rd.off")
(find-rurima "== インクルードしているモジュール:" "= TkCombobox" "refm/api/tk_off/tkcombobox.rd.off")
(find-rurima "== メソッド:" "= TkCombobox" "refm/api/tk_off/tkcombobox.rd.off")
(find-rurima "--- TkCombobox#initialize_composite(keys=nil)" "== メソッド:" "= TkCombobox" "refm/api/tk_off/tkcombobox.rd.off")
(find-rurima "--- TkCombobox#doubleclicked_scrollbox(y)" "== メソッド:" "= TkCombobox" "refm/api/tk_off/tkcombobox.rd.off")
(find-rurima "--- TkCombobox#cmd_scrollbox" "== メソッド:" "= TkCombobox" "refm/api/tk_off/tkcombobox.rd.off")
(find-rurima "--- TkCombobox#show_scrollbox(entries = nil)" "== メソッド:" "= TkCombobox" "refm/api/tk_off/tkcombobox.rd.off")
(find-rurima "--- TkCombobox#hide_scrollbox" "== メソッド:" "= TkCombobox" "refm/api/tk_off/tkcombobox.rd.off")
(find-rurima "= Tk" "refm/api/tk_off/tk.rd.off")
(find-rurima "== インクルードしているモジュール:" "= Tk" "refm/api/tk_off/tk.rd.off")
(find-rurima "== extendしているモジュール:" "= Tk" "refm/api/tk_off/tk.rd.off")
(find-rurima "== モジュールメソッド:" "= Tk" "refm/api/tk_off/tk.rd.off")
(find-rurima "--- Tk.focus(display=nil)" "== モジュールメソッド:" "= Tk" "refm/api/tk_off/tk.rd.off")
(find-rurima "--- Tk.focus_lastfor(win)" "== モジュールメソッド:" "= Tk" "refm/api/tk_off/tk.rd.off")
(find-rurima "--- Tk.show_kinsoku(mode='both')" "== モジュールメソッド:" "= Tk" "refm/api/tk_off/tk.rd.off")
(find-rurima "--- Tk.add_kinsoku(chars, mode='both')" "== モジュールメソッド:" "= Tk" "refm/api/tk_off/tk.rd.off")
(find-rurima "--- Tk.delete_kinsoku(chars, mode='both')" "== モジュールメソッド:" "= Tk" "refm/api/tk_off/tk.rd.off")
(find-rurima "== メソッド:" "= Tk" "refm/api/tk_off/tk.rd.off")
(find-rurima "--- Tk#root" "== メソッド:" "= Tk" "refm/api/tk_off/tk.rd.off")
(find-rurima "--- Tk#bell" "== メソッド:" "= Tk" "refm/api/tk_off/tk.rd.off")
(find-rurima "--- Tk#toUTF8(str,encoding)" "== メソッド:" "= Tk" "refm/api/tk_off/tk.rd.off")
(find-rurima "--- Tk#fromUTF8(str, encoding)" "== メソッド:" "= Tk" "refm/api/tk_off/tk.rd.off")
(find-rurima "--- Tk#encoding=(name)" "== メソッド:" "= Tk" "refm/api/tk_off/tk.rd.off")
(find-rurima "--- Tk#encoding" "== メソッド:" "= Tk" "refm/api/tk_off/tk.rd.off")
(find-rurima "--- Tk#encoding_names" "== メソッド:" "= Tk" "refm/api/tk_off/tk.rd.off")
(find-rurima "--- Tk#encoding_system" "== メソッド:" "= Tk" "refm/api/tk_off/tk.rd.off")
(find-rurima "--- Tk#encoding_system=(enc)" "== メソッド:" "= Tk" "refm/api/tk_off/tk.rd.off")
(find-rurima "--- Tk#encoding=(name)" "== メソッド:" "= Tk" "refm/api/tk_off/tk.rd.off")
(find-rurima "--- Tk#encoding" "== メソッド:" "= Tk" "refm/api/tk_off/tk.rd.off")
(find-rurima "--- Tk#encoding_names" "== メソッド:" "= Tk" "refm/api/tk_off/tk.rd.off")
(find-rurima "--- Tk#encoding_system" "== メソッド:" "= Tk" "refm/api/tk_off/tk.rd.off")
(find-rurima "--- Tk#encoding_system=(enc)" "== メソッド:" "= Tk" "refm/api/tk_off/tk.rd.off")
(find-rurima "== 定数:" "= Tk" "refm/api/tk_off/tk.rd.off")
(find-rurima "--- Tk::TCL_VERSION" "== 定数:" "= Tk" "refm/api/tk_off/tk.rd.off")
(find-rurima "--- Tk::TK_VERSION" "== 定数:" "= Tk" "refm/api/tk_off/tk.rd.off")
(find-rurima "--- Tk::JAPANIZED_TK" "== 定数:" "= Tk" "refm/api/tk_off/tk.rd.off")
(find-rurima "= TkPhotoImage" "refm/api/tk_off/tkphotoimage.rd.off")
(find-rurima "== スーパークラス:" "= TkPhotoImage" "refm/api/tk_off/tkphotoimage.rd.off")
(find-rurima "== クラスメソッド:" "= TkPhotoImage" "refm/api/tk_off/tkphotoimage.rd.off")
(find-rurima "--- TkPhotoImage.new(*args)" "== クラスメソッド:" "= TkPhotoImage" "refm/api/tk_off/tkphotoimage.rd.off")
(find-rurima "== メソッド:" "= TkPhotoImage" "refm/api/tk_off/tkphotoimage.rd.off")
(find-rurima "--- TkPhotoImage#blank" "== メソッド:" "= TkPhotoImage" "refm/api/tk_off/tkphotoimage.rd.off")
(find-rurima "--- TkPhotoImage#cget(option)" "== メソッド:" "= TkPhotoImage" "refm/api/tk_off/tkphotoimage.rd.off")
(find-rurima "--- TkPhotoImage#copy(source, *opts)" "== メソッド:" "= TkPhotoImage" "refm/api/tk_off/tkphotoimage.rd.off")
(find-rurima "--- TkPhotoImage#data(keys=nil)" "== メソッド:" "= TkPhotoImage" "refm/api/tk_off/tkphotoimage.rd.off")
(find-rurima "--- TkPhotoImage#get(x, y)" "== メソッド:" "= TkPhotoImage" "refm/api/tk_off/tkphotoimage.rd.off")
(find-rurima "--- TkPhotoImage#put(data, *to)" "== メソッド:" "= TkPhotoImage" "refm/api/tk_off/tkphotoimage.rd.off")
(find-rurima "--- TkPhotoImage#read(file, *opts)" "== メソッド:" "= TkPhotoImage" "refm/api/tk_off/tkphotoimage.rd.off")
(find-rurima "--- TkPhotoImage#redither" "== メソッド:" "= TkPhotoImage" "refm/api/tk_off/tkphotoimage.rd.off")
(find-rurima "--- TkPhotoImage#write(file, *opts)" "== メソッド:" "= TkPhotoImage" "refm/api/tk_off/tkphotoimage.rd.off")
(find-rurima "= TkScrollbox" "refm/api/tk_off/tkscrollbox.rd.off")
(find-rurima "== スーパークラス:" "= TkScrollbox" "refm/api/tk_off/tkscrollbox.rd.off")
(find-rurima "== インクルードしているモジュール:" "= TkScrollbox" "refm/api/tk_off/tkscrollbox.rd.off")
(find-rurima "= TkcLine" "refm/api/tk_off/tkcline.rd.off")
(find-rurima "== スーパークラス:" "= TkcLine" "refm/api/tk_off/tkcline.rd.off")
(find-rurima "== メソッド:" "= TkcLine" "refm/api/tk_off/tkcline.rd.off")
(find-rurima "= TkMenubar" "refm/api/tk_off/tkmenubar.rd.off")
(find-rurima "== スーパークラス:" "= TkMenubar" "refm/api/tk_off/tkmenubar.rd.off")
(find-rurima "== インクルードしているモジュール:" "= TkMenubar" "refm/api/tk_off/tkmenubar.rd.off")
(find-rurima "== クラスメソッド:" "= TkMenubar" "refm/api/tk_off/tkmenubar.rd.off")
(find-rurima "--- TkMenubar.new(parent = nil, spec = nil, options = nil)" "== クラスメソッド:" "= TkMenubar" "refm/api/tk_off/tkmenubar.rd.off")
(find-rurima "== メソッド:" "= TkMenubar" "refm/api/tk_off/tkmenubar.rd.off")
(find-rurima "--- TkMenubar#add_menu(menu_info)" "== メソッド:" "= TkMenubar" "refm/api/tk_off/tkmenubar.rd.off")
(find-rurima "--- TkMenubar#[](index)" "== メソッド:" "= TkMenubar" "refm/api/tk_off/tkmenubar.rd.off")
(find-rurima "= TkcTagAll" "refm/api/tk_off/tkctagall.rd.off")
(find-rurima "== スーパークラス:" "= TkcTagAll" "refm/api/tk_off/tkctagall.rd.off")
(find-rurima "== クラスメソッド:" "= TkcTagAll" "refm/api/tk_off/tkctagall.rd.off")
(find-rurima "--- TkcTagAll.new(parent)" "== クラスメソッド:" "= TkcTagAll" "refm/api/tk_off/tkctagall.rd.off")
(find-rurima "= TkTextMarkAnchor" "refm/api/tk_off/tktextmarkanchor.rd.off")
(find-rurima "== スーパークラス:" "= TkTextMarkAnchor" "refm/api/tk_off/tktextmarkanchor.rd.off")
(find-rurima "== クラスメソッド:" "= TkTextMarkAnchor" "refm/api/tk_off/tktextmarkanchor.rd.off")
(find-rurima "--- TkTextMarkAnchor.new(parent, index=nil)" "== クラスメソッド:" "= TkTextMarkAnchor" "refm/api/tk_off/tktextmarkanchor.rd.off")
(find-rurima "= TkcRectangle" "refm/api/tk_off/tkcrectangle.rd.off")
(find-rurima "== スーパークラス:" "= TkcRectangle" "refm/api/tk_off/tkcrectangle.rd.off")
(find-rurima "== メソッド:" "= TkcRectangle" "refm/api/tk_off/tkcrectangle.rd.off")
(find-rurima "= TkTreatMenuEntryFont" "refm/api/tk_off/tktreatmenuentryfont.rd.off")
(find-rurima "== メソッド:" "= TkTreatMenuEntryFont" "refm/api/tk_off/tktreatmenuentryfont.rd.off")
(find-rurima "--- TkTreatMenuEntryFont#tagfont_configinfo(index)" "== メソッド:" "= TkTreatMenuEntryFont" "refm/api/tk_off/tktreatmenuentryfont.rd.off")
(find-rurima "--- TkTreatMenuEntryFont#tagfont_configure(index, slot)" "== メソッド:" "= TkTreatMenuEntryFont" "refm/api/tk_off/tktreatmenuentryfont.rd.off")
(find-rurima "--- TkTreatMenuEntryFont#latintagfont_configure(index, ltn, keys=nil)" "== メソッド:" "= TkTreatMenuEntryFont" "refm/api/tk_off/tktreatmenuentryfont.rd.off")
(find-rurima "--- TkTreatMenuEntryFont#asciitagfont_configure(index, ltn, keys=nil)" "== メソッド:" "= TkTreatMenuEntryFont" "refm/api/tk_off/tktreatmenuentryfont.rd.off")
(find-rurima "--- TkTreatMenuEntryFont#kanjitagfont_configure(index, knj, keys=nil)" "== メソッド:" "= TkTreatMenuEntryFont" "refm/api/tk_off/tktreatmenuentryfont.rd.off")
(find-rurima "--- TkTreatMenuEntryFont#tagfont_copy(index, window, wintag=nil)" "== メソッド:" "= TkTreatMenuEntryFont" "refm/api/tk_off/tktreatmenuentryfont.rd.off")
(find-rurima "--- TkTreatMenuEntryFont#latintagfont_copy(index, window, wintag=nil)" "== メソッド:" "= TkTreatMenuEntryFont" "refm/api/tk_off/tktreatmenuentryfont.rd.off")
(find-rurima "--- TkTreatMenuEntryFont#asciitagfont_copy latintagfont_copy(index, window, wintag=nil)" "== メソッド:" "= TkTreatMenuEntryFont" "refm/api/tk_off/tktreatmenuentryfont.rd.off")
(find-rurima "--- TkTreatMenuEntryFont#kanjitagfont_copy(index, window, wintag=nil)" "== メソッド:" "= TkTreatMenuEntryFont" "refm/api/tk_off/tktreatmenuentryfont.rd.off")
(find-rurima "= TkMessage" "refm/api/tk_off/tkmessage.rd.off")
(find-rurima "== スーパークラス:" "= TkMessage" "refm/api/tk_off/tkmessage.rd.off")
(find-rurima "== 標準オプション:" "= TkMessage" "refm/api/tk_off/tkmessage.rd.off")
(find-rurima "== オプション:" "= TkMessage" "refm/api/tk_off/tkmessage.rd.off")
(find-rurima "--- TkMessage#aspect(ratio)" "== オプション:" "= TkMessage" "refm/api/tk_off/tkmessage.rd.off")
(find-rurima "--- TkMessage#justify(s)" "== オプション:" "= TkMessage" "refm/api/tk_off/tkmessage.rd.off")
(find-rurima "--- TkMessage#width(w)" "== オプション:" "= TkMessage" "refm/api/tk_off/tkmessage.rd.off")
(find-rurima "= TkCallbackContinue" "refm/api/tk_off/tkcallbackcontinue.rd.off")
(find-rurima "== スーパークラス:" "= TkCallbackContinue" "refm/api/tk_off/tkcallbackcontinue.rd.off")
(find-rurima "= TkBitmapImage" "refm/api/tk_off/tkbitmapimage.rd.off")
(find-rurima "== スーパークラス:" "= TkBitmapImage" "refm/api/tk_off/tkbitmapimage.rd.off")
(find-rurima "== クラスメソッド:" "= TkBitmapImage" "refm/api/tk_off/tkbitmapimage.rd.off")
(find-rurima "--- TkBitmapImage.new(*args)" "== クラスメソッド:" "= TkBitmapImage" "refm/api/tk_off/tkbitmapimage.rd.off")
(find-rurima "= TkScrollbar" "refm/api/tk_off/tkscrollbar.rd.off")
(find-rurima "== スーパークラス:" "= TkScrollbar" "refm/api/tk_off/tkscrollbar.rd.off")
(find-rurima "== メソッド:" "= TkScrollbar" "refm/api/tk_off/tkscrollbar.rd.off")
(find-rurima "--- TkScrollbar#command {|args| ...}" "== メソッド:" "= TkScrollbar" "refm/api/tk_off/tkscrollbar.rd.off")
(find-rurima "--- TkScrollbar#delta" "== メソッド:" "= TkScrollbar" "refm/api/tk_off/tkscrollbar.rd.off")
(find-rurima "--- TkScrollbar#fraction" "== メソッド:" "= TkScrollbar" "refm/api/tk_off/tkscrollbar.rd.off")
(find-rurima "--- TkScrollbar#identify(x, y)" "== メソッド:" "= TkScrollbar" "refm/api/tk_off/tkscrollbar.rd.off")
(find-rurima "--- TkScrollbar#get" "== メソッド:" "= TkScrollbar" "refm/api/tk_off/tkscrollbar.rd.off")
(find-rurima "--- TkScrollbar#set(first, last)" "== メソッド:" "= TkScrollbar" "refm/api/tk_off/tkscrollbar.rd.off")
(find-rurima "--- TkScrollbar#activate(element=None)" "== メソッド:" "= TkScrollbar" "refm/api/tk_off/tkscrollbar.rd.off")
(find-rurima "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "== スーパークラス:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "== インクルードしているモジュール:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "== クラスメソッド:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "--- TkText.new(*args, &block)" "== クラスメソッド:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "== privateメソッド:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "--- TkText#_ktext_length(txt)" "== privateメソッド:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "--- TkText#_retrieve_braced_text(str, i)" "== privateメソッド:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "--- TkText#_retrieve_backslashed_text(str, i)" "== privateメソッド:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "== メソッド:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "--- TkText#init_instance_variable" "== メソッド:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "--- TkText#index(index)" "== メソッド:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "--- TkText#value" "== メソッド:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "--- TkText#value= (val)" "== メソッド:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "--- TkText#_addcmd(cmd)" "== メソッド:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "--- TkText#_addtag(name, obj)" "== メソッド:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "--- TkText#tagid2obj(tagid)" "== メソッド:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "--- TkText#tag_names(index=None)" "== メソッド:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "--- TkText#mark_names" "== メソッド:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "--- TkText#mark_next(index)" "== メソッド:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "--- TkText#mark_previous(index)" "== メソッド:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "--- TkText#window_names" "== メソッド:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "--- TkText#image_names" "== メソッド:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "--- TkText#set_insert(index)" "== メソッド:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "--- TkText#set_current(index)" "== メソッド:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "--- TkText#insert(index, chars, *tags)" "== メソッド:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "--- TkText#destroy" "== メソッド:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "--- TkText#backspace" "== メソッド:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "--- TkText#compare(idx1, op, idx2)" "== メソッド:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "--- TkText#debug" "== メソッド:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "--- TkText#debug=(boolean)" "== メソッド:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "--- TkText#bbox(index)" "== メソッド:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "--- TkText#dlineinfo(index)" "== メソッド:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "--- TkText#yview_pickplace(*what)" "== メソッド:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "--- TkText#xview_pickplace(*what)" "== メソッド:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "--- TkText#tag_add(tag, index1, index2=None)" "== メソッド:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "--- TkText#tag_bind(tag, seq, cmd=Proc.new, args=nil)" "== メソッド:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "--- TkText#tag_bind_append(tag, seq, cmd=Proc.new, args=nil)" "== メソッド:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "--- TkText#tag_bindinfo(tag, context=nil)" "== メソッド:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "--- TkText#tag_cget(tag, key)" "== メソッド:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "--- TkText#tag_configure(tag, key, val=None)" "== メソッド:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "--- TkText#tag_configinfo(tag, key=nil)" "== メソッド:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "--- TkText#tag_raise(tag, above=None)" "== メソッド:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "--- TkText#tag_lower(tag, below=None)" "== メソッド:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "--- TkText#tag_remove(tag, *index)" "== メソッド:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "--- TkText#tag_ranges(tag)" "== メソッド:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "--- TkText#tag_nextrange(tag, first, last=None)" "== メソッド:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "--- TkText#tag_prevrange(tag, first, last=None)" "== メソッド:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "--- TkText#search_with_length(pat,start,stop=None)" "== メソッド:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "--- TkText#search(pat,start,stop=None)" "== メソッド:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "--- TkText#rsearch_with_length(pat,start,stop=None)" "== メソッド:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "--- TkText#rsearch(pat,start,stop=None)" "== メソッド:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "--- TkText#dump(type_info, *index, &block)" "== メソッド:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "--- TkText#dump_all(*index, &block)" "== メソッド:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "--- TkText#dump_mark(*index, &block)" "== メソッド:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "--- TkText#dump_tag(*index, &block)" "== メソッド:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "--- TkText#dump_text(*index, &block)" "== メソッド:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "--- TkText#dump_window(*index, &block)" "== メソッド:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "--- TkText#dump_image(*index, &block)" "== メソッド:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "== 標準オプション:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "== オプション:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "--- TkText#height" "== オプション:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "--- TkText#spacing1" "== オプション:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "--- TkText#spacing2" "== オプション:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "--- TkText#spacing3" "== オプション:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "--- TkText#state" "== オプション:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "--- TkText#tabs" "== オプション:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "--- TkText#width" "== オプション:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "--- TkText#wrap" "== オプション:" "= TkText" "refm/api/tk_off/tktext.rd.off")
(find-rurima "= TkVirtualEvent" "refm/api/tk_off/tkvirtualevent.rd.off")
(find-rurima "== スーパークラス:" "= TkVirtualEvent" "refm/api/tk_off/tkvirtualevent.rd.off")
(find-rurima "== extendしているモジュール:" "= TkVirtualEvent" "refm/api/tk_off/tkvirtualevent.rd.off")
(find-rurima "== クラスメソッド:" "= TkVirtualEvent" "refm/api/tk_off/tkvirtualevent.rd.off")
(find-rurima "--- TkVirtualEvent.getobj(event)" "== クラスメソッド:" "= TkVirtualEvent" "refm/api/tk_off/tkvirtualevent.rd.off")
(find-rurima "--- TkVirtualEvent.info" "== クラスメソッド:" "= TkVirtualEvent" "refm/api/tk_off/tkvirtualevent.rd.off")
(find-rurima "--- TkVirtualEvent.new(*sequences)" "== クラスメソッド:" "= TkVirtualEvent" "refm/api/tk_off/tkvirtualevent.rd.off")
(find-rurima "== メソッド:" "= TkVirtualEvent" "refm/api/tk_off/tkvirtualevent.rd.off")
(find-rurima "--- TkVirtualEvent#add(*sequences)" "== メソッド:" "= TkVirtualEvent" "refm/api/tk_off/tkvirtualevent.rd.off")
(find-rurima "--- TkVirtualEvent#delete(*sequences)" "== メソッド:" "= TkVirtualEvent" "refm/api/tk_off/tkvirtualevent.rd.off")
(find-rurima "--- TkVirtualEvent#info" "== メソッド:" "= TkVirtualEvent" "refm/api/tk_off/tkvirtualevent.rd.off")
(find-rurima "= TkcWindow" "refm/api/tk_off/tkcwindow.rd.off")
(find-rurima "== スーパークラス:" "= TkcWindow" "refm/api/tk_off/tkcwindow.rd.off")
(find-rurima "== メソッド:" "= TkcWindow" "refm/api/tk_off/tkcwindow.rd.off")
(find-rurima "= TkcImage" "refm/api/tk_off/tkcimage.rd.off")
(find-rurima "== スーパークラス:" "= TkcImage" "refm/api/tk_off/tkcimage.rd.off")
(find-rurima "== メソッド:" "= TkcImage" "refm/api/tk_off/tkcimage.rd.off")
(find-rurima "= TkBindTag" "refm/api/tk_off/tkbindtag.rd.off")
(find-rurima "== スーパークラス:" "= TkBindTag" "refm/api/tk_off/tkbindtag.rd.off")
(find-rurima "== インクルードしているモジュール:" "= TkBindTag" "refm/api/tk_off/tkbindtag.rd.off")
(find-rurima "== クラスメソッド:" "= TkBindTag" "refm/api/tk_off/tkbindtag.rd.off")
(find-rurima "--- TkBindTag.id2obj(id)" "== クラスメソッド:" "= TkBindTag" "refm/api/tk_off/tkbindtag.rd.off")
(find-rurima "--- TkBindTag.new" "== クラスメソッド:" "= TkBindTag" "refm/api/tk_off/tkbindtag.rd.off")
(find-rurima "--- TkBindTag.new(context, cmd=Proc.new, args=nil)" "== クラスメソッド:" "= TkBindTag" "refm/api/tk_off/tkbindtag.rd.off")
(find-rurima "= TkBindTagAll" "refm/api/tk_off/tkbindtag.rd.off")
(find-rurima "== スーパークラス:" "= TkBindTagAll" "refm/api/tk_off/tkbindtag.rd.off")
(find-rurima "== クラスメソッド:" "= TkBindTagAll" "refm/api/tk_off/tkbindtag.rd.off")
(find-rurima "--- TkBindTagAll.new" "== クラスメソッド:" "= TkBindTagAll" "refm/api/tk_off/tkbindtag.rd.off")
(find-rurima "--- TkBindTagAll.new(context, cmd=Proc.new, args=nil)" "== クラスメソッド:" "= TkBindTagAll" "refm/api/tk_off/tkbindtag.rd.off")
(find-rurima "= TkEntry::ValidateCmd" "refm/api/tk_off/tkbindtag.rd.off")
(find-rurima "== スーパークラス:" "= TkEntry::ValidateCmd" "refm/api/tk_off/tkbindtag.rd.off")
(find-rurima "== インクルードしているモジュール:" "= TkEntry::ValidateCmd" "refm/api/tk_off/tkbindtag.rd.off")
(find-rurima "== クラスメソッド:" "= TkEntry::ValidateCmd" "refm/api/tk_off/tkbindtag.rd.off")
(find-rurima "--- TkEntry::ValidateCmd.new(cmd = Proc.new, args=nil)" "== クラスメソッド:" "= TkEntry::ValidateCmd" "refm/api/tk_off/tkbindtag.rd.off")
(find-rurima "= TkEntry::ValidateCmd::ValidateArgs" "refm/api/tk_off/tkbindtag.rd.off")
(find-rurima "== スーパークラス:" "= TkEntry::ValidateCmd::ValidateArgs" "refm/api/tk_off/tkbindtag.rd.off")
(find-rurima "== クラスメソッド:" "= TkEntry::ValidateCmd::ValidateArgs" "refm/api/tk_off/tkbindtag.rd.off")
(find-rurima "--- TkEntry::ValidateCmd::ValidateArgs.new(d,i,s,v,pp,ss,vv,ww)" "== クラスメソッド:" "= TkEntry::ValidateCmd::ValidateArgs" "refm/api/tk_off/tkbindtag.rd.off")
(find-rurima "== メソッド:" "= TkEntry::ValidateCmd::ValidateArgs" "refm/api/tk_off/tkbindtag.rd.off")
(find-rurima "--- TkEntry::ValidateCmd::ValidateArgs#action" "== メソッド:" "= TkEntry::ValidateCmd::ValidateArgs" "refm/api/tk_off/tkbindtag.rd.off")
(find-rurima "--- TkEntry::ValidateCmd::ValidateArgs#index" "== メソッド:" "= TkEntry::ValidateCmd::ValidateArgs" "refm/api/tk_off/tkbindtag.rd.off")
(find-rurima "--- TkEntry::ValidateCmd::ValidateArgs#current" "== メソッド:" "= TkEntry::ValidateCmd::ValidateArgs" "refm/api/tk_off/tkbindtag.rd.off")
(find-rurima "--- TkEntry::ValidateCmd::ValidateArgs#type" "== メソッド:" "= TkEntry::ValidateCmd::ValidateArgs" "refm/api/tk_off/tkbindtag.rd.off")
(find-rurima "--- TkEntry::ValidateCmd::ValidateArgs#value" "== メソッド:" "= TkEntry::ValidateCmd::ValidateArgs" "refm/api/tk_off/tkbindtag.rd.off")
(find-rurima "--- TkEntry::ValidateCmd::ValidateArgs#string" "== メソッド:" "= TkEntry::ValidateCmd::ValidateArgs" "refm/api/tk_off/tkbindtag.rd.off")
(find-rurima "--- TkEntry::ValidateCmd::ValidateArgs#triggered" "== メソッド:" "= TkEntry::ValidateCmd::ValidateArgs" "refm/api/tk_off/tkbindtag.rd.off")
(find-rurima "--- TkEntry::ValidateCmd::ValidateArgs#widget" "== メソッド:" "= TkEntry::ValidateCmd::ValidateArgs" "refm/api/tk_off/tkbindtag.rd.off")
(find-rurima "= TclTkIp" "refm/api/tk_off/tcltkip.rd.off")
(find-rurima "== スーパークラス:" "= TclTkIp" "refm/api/tk_off/tcltkip.rd.off")
(find-rurima "== クラスメソッド:" "= TclTkIp" "refm/api/tk_off/tcltkip.rd.off")
(find-rurima "--- TclTkIp.new" "== クラスメソッド:" "= TclTkIp" "refm/api/tk_off/tcltkip.rd.off")
(find-rurima "== メソッド:" "= TclTkIp" "refm/api/tk_off/tcltkip.rd.off")
(find-rurima "--- TclTkIp#_eval(str)" "== メソッド:" "= TclTkIp" "refm/api/tk_off/tcltkip.rd.off")
(find-rurima "--- TclTkIp#_invoke(cmd, *args)" "== メソッド:" "= TclTkIp" "refm/api/tk_off/tcltkip.rd.off")
(find-rurima "--- TclTkIp#_return_value" "== メソッド:" "= TclTkIp" "refm/api/tk_off/tcltkip.rd.off")
(find-rurima "--- TclTkIp#mainloop" "== メソッド:" "= TclTkIp" "refm/api/tk_off/tcltkip.rd.off")
(find-rurima "--- TclTkIp#_toUTF8(str, encodename)" "== メソッド:" "= TclTkIp" "refm/api/tk_off/tcltkip.rd.off")
(find-rurima "--- TclTkIp#_fromUTF8(str, encodename)" "== メソッド:" "= TclTkIp" "refm/api/tk_off/tcltkip.rd.off")
(find-rurima "--- TclTkIp#encoding" "== メソッド:" "= TclTkIp" "refm/api/tk_off/tcltkip.rd.off")
(find-rurima "--- TclTkIp#encoding= val" "== メソッド:" "= TclTkIp" "refm/api/tk_off/tcltkip.rd.off")
(find-rurima "= Tcl/Tk用語集" "refm/api/tk_off/tcltk_glossary.rd.off")
(find-rurima "= TkBindCore" "refm/api/tk_off/tkbindcore.rd.off")
(find-rurima "== メソッド:" "= TkBindCore" "refm/api/tk_off/tkbindcore.rd.off")
(find-rurima "--- TkBindCore#bind(context, cmd=Proc.new, args=nil)" "== メソッド:" "= TkBindCore" "refm/api/tk_off/tkbindcore.rd.off")
(find-rurima "--- TkBindCore#bind_append(context, cmd=Proc.new, args=nil)" "== メソッド:" "= TkBindCore" "refm/api/tk_off/tkbindcore.rd.off")
(find-rurima "--- TkBindCore#bind_remove(context)" "== メソッド:" "= TkBindCore" "refm/api/tk_off/tkbindcore.rd.off")
(find-rurima "--- TkBindCore#bindinfo(context=nil)" "== メソッド:" "= TkBindCore" "refm/api/tk_off/tkbindcore.rd.off")
(find-rurima "= TkCanvas" "refm/api/tk_off/tkcanvas.rd.off")
(find-rurima "== スーパークラス:" "= TkCanvas" "refm/api/tk_off/tkcanvas.rd.off")
(find-rurima "== インクルードしているモジュール:" "= TkCanvas" "refm/api/tk_off/tkcanvas.rd.off")
(find-rurima "== privateメソッド:" "= TkCanvas" "refm/api/tk_off/tkcanvas.rd.off")
(find-rurima "--- TkCanvas#tagid(tag)" "== privateメソッド:" "= TkCanvas" "refm/api/tk_off/tkcanvas.rd.off")
(find-rurima "== メソッド:" "= TkCanvas" "refm/api/tk_off/tkcanvas.rd.off")
(find-rurima "--- TkCanvas#addtag(tag, mode, *args)" "== メソッド:" "= TkCanvas" "refm/api/tk_off/tkcanvas.rd.off")
(find-rurima "--- TkCanvas#addtag_above(tagOrId, target)" "== メソッド:" "= TkCanvas" "refm/api/tk_off/tkcanvas.rd.off")
(find-rurima "--- TkCanvas#addtag_all(tagOrId)" "== メソッド:" "= TkCanvas" "refm/api/tk_off/tkcanvas.rd.off")
(find-rurima "--- TkCanvas#addtag_below(tagOrId, target)" "== メソッド:" "= TkCanvas" "refm/api/tk_off/tkcanvas.rd.off")
(find-rurima "--- TkCanvas#addtag_closest(tagOrId, x, y, halo=None, start=None)" "== メソッド:" "= TkCanvas" "refm/api/tk_off/tkcanvas.rd.off")
(find-rurima "--- TkCanvas#addtag_enclosed(tagOrId, x1, y1, x2, y2)" "== メソッド:" "= TkCanvas" "refm/api/tk_off/tkcanvas.rd.off")
(find-rurima "--- TkCanvas#addtag_overlapping(tagOrId, x1, y1, x2, y2)" "== メソッド:" "= TkCanvas" "refm/api/tk_off/tkcanvas.rd.off")
(find-rurima "--- TkCanvas#addtag_withtag(tagOrId, tag)" "== メソッド:" "= TkCanvas" "refm/api/tk_off/tkcanvas.rd.off")
(find-rurima "--- TkCanvas#bbox(tagOrId, *tags)" "== メソッド:" "= TkCanvas" "refm/api/tk_off/tkcanvas.rd.off")
(find-rurima "--- TkCanvas#itembind(tag, context, cmd=Proc.new, args=nil)" "== メソッド:" "= TkCanvas" "refm/api/tk_off/tkcanvas.rd.off")
(find-rurima "--- TkCanvas#itembind_append(tag, context, cmd=Proc.new, args=nil)" "== メソッド:" "= TkCanvas" "refm/api/tk_off/tkcanvas.rd.off")
(find-rurima "--- TkCanvas#itembindinfo(tag, context=nil)" "== メソッド:" "= TkCanvas" "refm/api/tk_off/tkcanvas.rd.off")
(find-rurima "--- TkCanvas#canvasx(x, *args)" "== メソッド:" "= TkCanvas" "refm/api/tk_off/tkcanvas.rd.off")
(find-rurima "--- TkCanvas#canvasy(y, *args)" "== メソッド:" "= TkCanvas" "refm/api/tk_off/tkcanvas.rd.off")
(find-rurima "--- TkCanvas#coords(tag, *args)" "== メソッド:" "= TkCanvas" "refm/api/tk_off/tkcanvas.rd.off")
(find-rurima "--- TkCanvas#dchars(tag, first, last=None)" "== メソッド:" "= TkCanvas" "refm/api/tk_off/tkcanvas.rd.off")
(find-rurima "--- TkCanvas#delete(*args)" "== メソッド:" "= TkCanvas" "refm/api/tk_off/tkcanvas.rd.off")
(find-rurima "--- TkCanvas#remove(*args)" "== メソッド:" "= TkCanvas" "refm/api/tk_off/tkcanvas.rd.off")
(find-rurima "--- TkCanvas#dtag(tag, tag_to_del=None)" "== メソッド:" "= TkCanvas" "refm/api/tk_off/tkcanvas.rd.off")
(find-rurima "--- TkCanvas#find(mode, *args)" "== メソッド:" "= TkCanvas" "refm/api/tk_off/tkcanvas.rd.off")
(find-rurima "--- TkCanvas#find_above(target)" "== メソッド:" "= TkCanvas" "refm/api/tk_off/tkcanvas.rd.off")
(find-rurima "--- TkCanvas#find_all" "== メソッド:" "= TkCanvas" "refm/api/tk_off/tkcanvas.rd.off")
(find-rurima "--- TkCanvas#find_below(target)" "== メソッド:" "= TkCanvas" "refm/api/tk_off/tkcanvas.rd.off")
(find-rurima "--- TkCanvas#find_closest(x, y, halo=None, start=None)" "== メソッド:" "= TkCanvas" "refm/api/tk_off/tkcanvas.rd.off")
(find-rurima "--- TkCanvas#find_enclosed(x1, y1, x2, y2)" "== メソッド:" "= TkCanvas" "refm/api/tk_off/tkcanvas.rd.off")
(find-rurima "--- TkCanvas#find_overlapping(x1, y1, x2, y2)" "== メソッド:" "= TkCanvas" "refm/api/tk_off/tkcanvas.rd.off")
(find-rurima "--- TkCanvas#find_withtag(tag)" "== メソッド:" "= TkCanvas" "refm/api/tk_off/tkcanvas.rd.off")
(find-rurima "--- TkCanvas#itemfocus(tagOrId=nil)" "== メソッド:" "= TkCanvas" "refm/api/tk_off/tkcanvas.rd.off")
(find-rurima "--- TkCanvas#gettags(tagOrId)" "== メソッド:" "= TkCanvas" "refm/api/tk_off/tkcanvas.rd.off")
(find-rurima "--- TkCanvas#icursor(tagOrId, index)" "== メソッド:" "= TkCanvas" "refm/api/tk_off/tkcanvas.rd.off")
(find-rurima "--- TkCanvas#index(tagOrId, index)" "== メソッド:" "= TkCanvas" "refm/api/tk_off/tkcanvas.rd.off")
(find-rurima "--- TkCanvas#insert(tagOrId, index, string)" "== メソッド:" "= TkCanvas" "refm/api/tk_off/tkcanvas.rd.off")
(find-rurima "--- TkCanvas#itemcget(tagOrId, option)" "== メソッド:" "= TkCanvas" "refm/api/tk_off/tkcanvas.rd.off")
(find-rurima "--- TkCanvas#itemconfigure(tagOrId, key, value=None)" "== メソッド:" "= TkCanvas" "refm/api/tk_off/tkcanvas.rd.off")
(find-rurima "--- TkCanvas#itemconfiginfo(tagOrId, key=nil)" "== メソッド:" "= TkCanvas" "refm/api/tk_off/tkcanvas.rd.off")
(find-rurima "--- TkCanvas#lower(tag, below=None)" "== メソッド:" "= TkCanvas" "refm/api/tk_off/tkcanvas.rd.off")
(find-rurima "--- TkCanvas#move(tag, x, y)" "== メソッド:" "= TkCanvas" "refm/api/tk_off/tkcanvas.rd.off")
(find-rurima "--- TkCanvas#postscript(keys)" "== メソッド:" "= TkCanvas" "refm/api/tk_off/tkcanvas.rd.off")
(find-rurima "--- TkCanvas#raise(tag, above=None)" "== メソッド:" "= TkCanvas" "refm/api/tk_off/tkcanvas.rd.off")
(find-rurima "--- TkCanvas#scale(tag, x, y, xs, ys)" "== メソッド:" "= TkCanvas" "refm/api/tk_off/tkcanvas.rd.off")
(find-rurima "--- TkCanvas#scan_mark(x, y)" "== メソッド:" "= TkCanvas" "refm/api/tk_off/tkcanvas.rd.off")
(find-rurima "--- TkCanvas#scan_dragto(x, y)" "== メソッド:" "= TkCanvas" "refm/api/tk_off/tkcanvas.rd.off")
(find-rurima "--- TkCanvas#select(mode, *args)" "== メソッド:" "= TkCanvas" "refm/api/tk_off/tkcanvas.rd.off")
(find-rurima "--- TkCanvas#select_adjust(tagOrId, index)" "== メソッド:" "= TkCanvas" "refm/api/tk_off/tkcanvas.rd.off")
(find-rurima "--- TkCanvas#select_clear" "== メソッド:" "= TkCanvas" "refm/api/tk_off/tkcanvas.rd.off")
(find-rurima "--- TkCanvas#select_from(tagOrId, index)" "== メソッド:" "= TkCanvas" "refm/api/tk_off/tkcanvas.rd.off")
(find-rurima "--- TkCanvas#select_item" "== メソッド:" "= TkCanvas" "refm/api/tk_off/tkcanvas.rd.off")
(find-rurima "--- TkCanvas#select_to(tagOrId, index)" "== メソッド:" "= TkCanvas" "refm/api/tk_off/tkcanvas.rd.off")
(find-rurima "--- TkCanvas#itemtype(tag)" "== メソッド:" "= TkCanvas" "refm/api/tk_off/tkcanvas.rd.off")
(find-rurima "== 標準オプション:" "= TkCanvas" "refm/api/tk_off/tkcanvas.rd.off")
(find-rurima "== オプション:" "= TkCanvas" "refm/api/tk_off/tkcanvas.rd.off")
(find-rurima "--- TkCanvas#closeenough" "== オプション:" "= TkCanvas" "refm/api/tk_off/tkcanvas.rd.off")
(find-rurima "--- TkCanvas#confine" "== オプション:" "= TkCanvas" "refm/api/tk_off/tkcanvas.rd.off")
(find-rurima "--- TkCanvas#height" "== オプション:" "= TkCanvas" "refm/api/tk_off/tkcanvas.rd.off")
(find-rurima "--- TkCanvas#scrollregion" "== オプション:" "= TkCanvas" "refm/api/tk_off/tkcanvas.rd.off")
(find-rurima "--- TkCanvas#width" "== オプション:" "= TkCanvas" "refm/api/tk_off/tkcanvas.rd.off")
(find-rurima "--- TkCanvas#xscrollincrement" "== オプション:" "= TkCanvas" "refm/api/tk_off/tkcanvas.rd.off")
(find-rurima "--- TkCanvas#yscrollincrement" "== オプション:" "= TkCanvas" "refm/api/tk_off/tkcanvas.rd.off")
(find-rurima "= TkMenu" "refm/api/tk_off/tkmenu.rd.off")
(find-rurima "== スーパークラス:" "= TkMenu" "refm/api/tk_off/tkmenu.rd.off")
(find-rurima "== インクルードしているモジュール:" "= TkMenu" "refm/api/tk_off/tkmenu.rd.off")
(find-rurima "== メソッド:" "= TkMenu" "refm/api/tk_off/tkmenu.rd.off")
(find-rurima "--- TkMenu#activate(index)" "== メソッド:" "= TkMenu" "refm/api/tk_off/tkmenu.rd.off")
(find-rurima "--- TkMenu#add(type, keys=nil)" "== メソッド:" "= TkMenu" "refm/api/tk_off/tkmenu.rd.off")
(find-rurima "--- TkMenu#index(index)" "== メソッド:" "= TkMenu" "refm/api/tk_off/tkmenu.rd.off")
(find-rurima "--- TkMenu#invoke(index)" "== メソッド:" "= TkMenu" "refm/api/tk_off/tkmenu.rd.off")
(find-rurima "--- TkMenu#insert(index, type, keys=nil)" "== メソッド:" "= TkMenu" "refm/api/tk_off/tkmenu.rd.off")
(find-rurima "--- TkMenu#delete(index, last=None)" "== メソッド:" "= TkMenu" "refm/api/tk_off/tkmenu.rd.off")
(find-rurima "--- TkMenu#popup(x, y, index=nil)" "== メソッド:" "= TkMenu" "refm/api/tk_off/tkmenu.rd.off")
(find-rurima "--- TkMenu#post(x, y)" "== メソッド:" "= TkMenu" "refm/api/tk_off/tkmenu.rd.off")
(find-rurima "--- TkMenu#postcascade(index)" "== メソッド:" "= TkMenu" "refm/api/tk_off/tkmenu.rd.off")
(find-rurima "--- TkMenu#postcommand(cmd=Proc.new)" "== メソッド:" "= TkMenu" "refm/api/tk_off/tkmenu.rd.off")
(find-rurima "--- TkMenu#tearoffcommand(cmd=Proc.new)" "== メソッド:" "= TkMenu" "refm/api/tk_off/tkmenu.rd.off")
(find-rurima "--- TkMenu#menutype(index)" "== メソッド:" "= TkMenu" "refm/api/tk_off/tkmenu.rd.off")
(find-rurima "--- TkMenu#unpost" "== メソッド:" "= TkMenu" "refm/api/tk_off/tkmenu.rd.off")
(find-rurima "--- TkMenu#yposition(index)" "== メソッド:" "= TkMenu" "refm/api/tk_off/tkmenu.rd.off")
(find-rurima "--- TkMenu#entrycget(index, key)" "== メソッド:" "= TkMenu" "refm/api/tk_off/tkmenu.rd.off")
(find-rurima "--- TkMenu#entryconfiure(index, key, val=None)" "== メソッド:" "= TkMenu" "refm/api/tk_off/tkmenu.rd.off")
(find-rurima "--- TkMenu#entryconfiure(index, hash)" "== メソッド:" "= TkMenu" "refm/api/tk_off/tkmenu.rd.off")
(find-rurima "--- TkMenu#entryconfiginfo(index, key=nil)" "== メソッド:" "= TkMenu" "refm/api/tk_off/tkmenu.rd.off")
(find-rurima "== 標準オプション" "= TkMenu" "refm/api/tk_off/tkmenu.rd.off")
(find-rurima "== オプション" "= TkMenu" "refm/api/tk_off/tkmenu.rd.off")
(find-rurima "--- TkMenu#selectcolor" "== オプション" "= TkMenu" "refm/api/tk_off/tkmenu.rd.off")
(find-rurima "--- TkMenu#tearoff" "== オプション" "= TkMenu" "refm/api/tk_off/tkmenu.rd.off")
(find-rurima "--- TkMenu#tearoffcommand" "== オプション" "= TkMenu" "refm/api/tk_off/tkmenu.rd.off")
(find-rurima "--- TkMenu#title" "== オプション" "= TkMenu" "refm/api/tk_off/tkmenu.rd.off")
(find-rurima "= TkMenuClone" "refm/api/tk_off/tkmenu.rd.off")
(find-rurima "== スーパークラス:" "= TkMenuClone" "refm/api/tk_off/tkmenu.rd.off")
(find-rurima "== クラスメソッド:" "= TkMenuClone" "refm/api/tk_off/tkmenu.rd.off")
(find-rurima "--- TkMenuClone.new(parent, type=None)" "== クラスメソッド:" "= TkMenuClone" "refm/api/tk_off/tkmenu.rd.off")
(find-rurima "= TkOptionMenubutton::OptionMenu" "refm/api/tk_off/tkmenu.rd.off")
(find-rurima "== スーパークラス:" "= TkOptionMenubutton::OptionMenu" "refm/api/tk_off/tkmenu.rd.off")
(find-rurima "== クラスメソッド:" "= TkOptionMenubutton::OptionMenu" "refm/api/tk_off/tkmenu.rd.off")
(find-rurima "--- TkOptionMenubutton::OptionMenu.new(parent)" "== クラスメソッド:" "= TkOptionMenubutton::OptionMenu" "refm/api/tk_off/tkmenu.rd.off")
(find-rurima "= TkSysMenu_Apple" "refm/api/tk_off/tkmenu.rd.off")
(find-rurima "== スーパークラス:" "= TkSysMenu_Apple" "refm/api/tk_off/tkmenu.rd.off")
(find-rurima "== インクルードしているモジュール:" "= TkSysMenu_Apple" "refm/api/tk_off/tkmenu.rd.off")
(find-rurima "= TkSysMenu_Help" "refm/api/tk_off/tkmenu.rd.off")
(find-rurima "== スーパークラス:" "= TkSysMenu_Help" "refm/api/tk_off/tkmenu.rd.off")
(find-rurima "== インクルードしているモジュール:" "= TkSysMenu_Help" "refm/api/tk_off/tkmenu.rd.off")
(find-rurima "= TkSysMenu_System" "refm/api/tk_off/tkmenu.rd.off")
(find-rurima "== スーパークラス:" "= TkSysMenu_System" "refm/api/tk_off/tkmenu.rd.off")
(find-rurima "== インクルードしているモジュール:" "= TkSysMenu_System" "refm/api/tk_off/tkmenu.rd.off")
(find-rurima "= TkSelection" "refm/api/tk_off/tkselection.rd.off")
(find-rurima "== インクルードしているモジュール:" "= TkSelection" "refm/api/tk_off/tkselection.rd.off")
(find-rurima "== extendしているモジュール:" "= TkSelection" "refm/api/tk_off/tkselection.rd.off")
(find-rurima "== クラスメソッド:" "= TkSelection" "refm/api/tk_off/tkselection.rd.off")
(find-rurima "--- TkSelection.handle(win, func, type=None, format=None)" "== クラスメソッド:" "= TkSelection" "refm/api/tk_off/tkselection.rd.off")
(find-rurima "--- TkSelection.own(win=None, func=None)" "== クラスメソッド:" "= TkSelection" "refm/api/tk_off/tkselection.rd.off")
(find-rurima "== メソッド:" "= TkSelection" "refm/api/tk_off/tkselection.rd.off")
(find-rurima "--- TkSelection#handle(func, type=None, format=None)" "== メソッド:" "= TkSelection" "refm/api/tk_off/tkselection.rd.off")
(find-rurima "--- TkSelection#own(func=None)" "== メソッド:" "= TkSelection" "refm/api/tk_off/tkselection.rd.off")
(find-rurima "== モジュール関数:" "= TkSelection" "refm/api/tk_off/tkselection.rd.off")
(find-rurima "--- TkSelection.clear(win=Tk.root)" "== モジュール関数:" "= TkSelection" "refm/api/tk_off/tkselection.rd.off")
(find-rurima "--- TkSelection.get(type=None)" "== モジュール関数:" "= TkSelection" "refm/api/tk_off/tkselection.rd.off")
(find-rurima "= TkSystemMenu" "refm/api/tk_off/tkselection.rd.off")
(find-rurima "== privateメソッド:" "= TkSystemMenu" "refm/api/tk_off/tkselection.rd.off")
(find-rurima "--- TkSystemMenu#initialize(parent, keys=nil)" "== privateメソッド:" "= TkSystemMenu" "refm/api/tk_off/tkselection.rd.off")
(find-rurima "= TkCallbackBreak" "refm/api/tk_off/tkcallbackbreak.rd.off")
(find-rurima "== スーパークラス:" "= TkCallbackBreak" "refm/api/tk_off/tkcallbackbreak.rd.off")
(find-rurima "= TkTreatFont" "refm/api/tk_off/tktreatfont.rd.off")
(find-rurima "== メソッド:" "= TkTreatFont" "refm/api/tk_off/tktreatfont.rd.off")
(find-rurima "--- TkTreatFont#font_configinfo" "== メソッド:" "= TkTreatFont" "refm/api/tk_off/tktreatfont.rd.off")
(find-rurima "--- TkTreatFont#fontobj" "== メソッド:" "= TkTreatFont" "refm/api/tk_off/tktreatfont.rd.off")
(find-rurima "--- TkTreatFont#font_configure(slot)" "== メソッド:" "= TkTreatFont" "refm/api/tk_off/tktreatfont.rd.off")
(find-rurima "--- TkTreatFont#latinfont_configure(ltn, keys=nil)" "== メソッド:" "= TkTreatFont" "refm/api/tk_off/tktreatfont.rd.off")
(find-rurima "--- TkTreatFont#asciifont_configure(ltn, keys=nil)" "== メソッド:" "= TkTreatFont" "refm/api/tk_off/tktreatfont.rd.off")
(find-rurima "--- TkTreatFont#kanjifont_configure(knj, keys=nil)" "== メソッド:" "= TkTreatFont" "refm/api/tk_off/tktreatfont.rd.off")
(find-rurima "--- TkTreatFont#font_copy(window, tag=nil)" "== メソッド:" "= TkTreatFont" "refm/api/tk_off/tktreatfont.rd.off")
(find-rurima "--- TkTreatFont#latinfont_copy(window, tag=nil)" "== メソッド:" "= TkTreatFont" "refm/api/tk_off/tktreatfont.rd.off")
(find-rurima "--- TkTreatFont#asciifont_copy(window, tag=nil)" "== メソッド:" "= TkTreatFont" "refm/api/tk_off/tktreatfont.rd.off")
(find-rurima "--- TkTreatFont#kanjifont_copy(window, tag=nil)" "== メソッド:" "= TkTreatFont" "refm/api/tk_off/tktreatfont.rd.off")
(find-rurima "= TkcText" "refm/api/tk_off/tkctext.rd.off")
(find-rurima "== スーパークラス:" "= TkcText" "refm/api/tk_off/tkctext.rd.off")
(find-rurima "== メソッド:" "= TkcText" "refm/api/tk_off/tkctext.rd.off")
(find-rurima "= TkDialog" "refm/api/tk_off/tkdialog.rd.off")
(find-rurima "== スーパークラス:" "= TkDialog" "refm/api/tk_off/tkdialog.rd.off")
(find-rurima "== extendしているモジュール:" "= TkDialog" "refm/api/tk_off/tkdialog.rd.off")
(find-rurima "== クラスメソッド:" "= TkDialog" "refm/api/tk_off/tkdialog.rd.off")
(find-rurima "--- TkDialog.new(keys = nil)" "== クラスメソッド:" "= TkDialog" "refm/api/tk_off/tkdialog.rd.off")
(find-rurima "== メソッド:" "= TkDialog" "refm/api/tk_off/tkdialog.rd.off")
(find-rurima "--- TkDialog#value" "== メソッド:" "= TkDialog" "refm/api/tk_off/tkdialog.rd.off")
(find-rurima "--- TkDialog#title" "== メソッド:" "= TkDialog" "refm/api/tk_off/tkdialog.rd.off")
(find-rurima "--- TkDialog#message" "== メソッド:" "= TkDialog" "refm/api/tk_off/tkdialog.rd.off")
(find-rurima "--- TkDialog#message_config" "== メソッド:" "= TkDialog" "refm/api/tk_off/tkdialog.rd.off")
(find-rurima "--- TkDialog#bitmap" "== メソッド:" "= TkDialog" "refm/api/tk_off/tkdialog.rd.off")
(find-rurima "--- TkDialog#bitmap_config" "== メソッド:" "= TkDialog" "refm/api/tk_off/tkdialog.rd.off")
(find-rurima "--- TkDialog#default_button" "== メソッド:" "= TkDialog" "refm/api/tk_off/tkdialog.rd.off")
(find-rurima "--- TkDialog#buttons" "== メソッド:" "= TkDialog" "refm/api/tk_off/tkdialog.rd.off")
(find-rurima "--- TkDialog#button_configs(num)" "== メソッド:" "= TkDialog" "refm/api/tk_off/tkdialog.rd.off")
(find-rurima "= TkcOval" "refm/api/tk_off/tkcoval.rd.off")
(find-rurima "== スーパークラス:" "= TkcOval" "refm/api/tk_off/tkcoval.rd.off")
(find-rurima "== メソッド:" "= TkcOval" "refm/api/tk_off/tkcoval.rd.off")
(find-rurima "= TkObject" "refm/api/tk_off/tkobject.rd.off")
(find-rurima "== スーパークラス:" "= TkObject" "refm/api/tk_off/tkobject.rd.off")
(find-rurima "== インクルードしているモジュール:" "= TkObject" "refm/api/tk_off/tkobject.rd.off")
(find-rurima "== privateメソッド:" "= TkObject" "refm/api/tk_off/tkobject.rd.off")
(find-rurima "--- TkObject#tk_send(cmd、*rest)" "== privateメソッド:" "= TkObject" "refm/api/tk_off/tkobject.rd.off")
(find-rurima "--- TkObject#tk_trace_variable(v)" "== privateメソッド:" "= TkObject" "refm/api/tk_off/tkobject.rd.off")
(find-rurima "== メソッド:" "= TkObject" "refm/api/tk_off/tkobject.rd.off")
(find-rurima "--- TkObject#path" "== メソッド:" "= TkObject" "refm/api/tk_off/tkobject.rd.off")
(find-rurima "--- TkObject#epath" "== メソッド:" "= TkObject" "refm/api/tk_off/tkobject.rd.off")
(find-rurima "--- TkObject#to_eval" "== メソッド:" "= TkObject" "refm/api/tk_off/tkobject.rd.off")
(find-rurima "--- TkObject#[](slot)" "== メソッド:" "= TkObject" "refm/api/tk_off/tkobject.rd.off")
(find-rurima "--- TkObject#cget(slot)" "== メソッド:" "= TkObject" "refm/api/tk_off/tkobject.rd.off")
(find-rurima "--- TkObject#[]=(slot, value)" "== メソッド:" "= TkObject" "refm/api/tk_off/tkobject.rd.off")
(find-rurima "--- TkObject#configure(slot, value=None)" "== メソッド:" "= TkObject" "refm/api/tk_off/tkobject.rd.off")
(find-rurima "--- TkObject#configure(hash)" "== メソッド:" "= TkObject" "refm/api/tk_off/tkobject.rd.off")
(find-rurima "--- TkObject#configure_cmd(slot, value)" "== メソッド:" "= TkObject" "refm/api/tk_off/tkobject.rd.off")
(find-rurima "--- TkObject#configinfo(slot = nil)" "== メソッド:" "= TkObject" "refm/api/tk_off/tkobject.rd.off")
(find-rurima "--- TkObject#event_generate(context, keys=nil)" "== メソッド:" "= TkObject" "refm/api/tk_off/tkobject.rd.off")
(find-rurima "--- TkObject#destroy" "== メソッド:" "= TkObject" "refm/api/tk_off/tkobject.rd.off")
(find-rurima "--- TkObject#method_missing(id, *args)" "== メソッド:" "= TkObject" "refm/api/tk_off/tkobject.rd.off")
(find-rurima "== 標準オプション" "= TkObject" "refm/api/tk_off/tkobject.rd.off")
(find-rurima "--- TkObject#activebackground" "== 標準オプション" "= TkObject" "refm/api/tk_off/tkobject.rd.off")
(find-rurima "--- TkObject#activeborderwidth" "== 標準オプション" "= TkObject" "refm/api/tk_off/tkobject.rd.off")
(find-rurima "--- TkObject#activeforeground" "== 標準オプション" "= TkObject" "refm/api/tk_off/tkobject.rd.off")
(find-rurima "--- TkObject#anchor" "== 標準オプション" "= TkObject" "refm/api/tk_off/tkobject.rd.off")
(find-rurima "--- TkObject#background" "== 標準オプション" "= TkObject" "refm/api/tk_off/tkobject.rd.off")
(find-rurima "--- TkObject#bg" "== 標準オプション" "= TkObject" "refm/api/tk_off/tkobject.rd.off")
(find-rurima "--- TkObject#bitmap" "== 標準オプション" "= TkObject" "refm/api/tk_off/tkobject.rd.off")
(find-rurima "--- TkObject#borderwidth" "== 標準オプション" "= TkObject" "refm/api/tk_off/tkobject.rd.off")
(find-rurima "--- TkObject#bd" "== 標準オプション" "= TkObject" "refm/api/tk_off/tkobject.rd.off")
(find-rurima "--- TkObject#cursor" "== 標準オプション" "= TkObject" "refm/api/tk_off/tkobject.rd.off")
(find-rurima "--- TkObject#disabledforeground" "== 標準オプション" "= TkObject" "refm/api/tk_off/tkobject.rd.off")
(find-rurima "--- TkObject#exportselection" "== 標準オプション" "= TkObject" "refm/api/tk_off/tkobject.rd.off")
(find-rurima "--- TkObject#font" "== 標準オプション" "= TkObject" "refm/api/tk_off/tkobject.rd.off")
(find-rurima "--- TkObject#foreground" "== 標準オプション" "= TkObject" "refm/api/tk_off/tkobject.rd.off")
(find-rurima "--- TkObject#fg" "== 標準オプション" "= TkObject" "refm/api/tk_off/tkobject.rd.off")
(find-rurima "--- TkObject#highlightbackground" "== 標準オプション" "= TkObject" "refm/api/tk_off/tkobject.rd.off")
(find-rurima "--- TkObject#highlightcolor" "== 標準オプション" "= TkObject" "refm/api/tk_off/tkobject.rd.off")
(find-rurima "--- TkObject#highlightthickness" "== 標準オプション" "= TkObject" "refm/api/tk_off/tkobject.rd.off")
(find-rurima "--- TkObject#image" "== 標準オプション" "= TkObject" "refm/api/tk_off/tkobject.rd.off")
(find-rurima "--- TkObject#insertbackground" "== 標準オプション" "= TkObject" "refm/api/tk_off/tkobject.rd.off")
(find-rurima "--- TkObject#insertborderwidth" "== 標準オプション" "= TkObject" "refm/api/tk_off/tkobject.rd.off")
(find-rurima "--- TkObject#insertofftime" "== 標準オプション" "= TkObject" "refm/api/tk_off/tkobject.rd.off")
(find-rurima "--- TkObject#insertontime" "== 標準オプション" "= TkObject" "refm/api/tk_off/tkobject.rd.off")
(find-rurima "--- TkObject#insertwidth" "== 標準オプション" "= TkObject" "refm/api/tk_off/tkobject.rd.off")
(find-rurima "--- TkObject#jump" "== 標準オプション" "= TkObject" "refm/api/tk_off/tkobject.rd.off")
(find-rurima "--- TkObject#justify" "== 標準オプション" "= TkObject" "refm/api/tk_off/tkobject.rd.off")
(find-rurima "--- TkObject#orient" "== 標準オプション" "= TkObject" "refm/api/tk_off/tkobject.rd.off")
(find-rurima "--- TkObject#padx" "== 標準オプション" "= TkObject" "refm/api/tk_off/tkobject.rd.off")
(find-rurima "--- TkObject#pady" "== 標準オプション" "= TkObject" "refm/api/tk_off/tkobject.rd.off")
(find-rurima "--- TkObject#relief" "== 標準オプション" "= TkObject" "refm/api/tk_off/tkobject.rd.off")
(find-rurima "--- TkObject#repeatdelay" "== 標準オプション" "= TkObject" "refm/api/tk_off/tkobject.rd.off")
(find-rurima "--- TkObject#repeatinterval" "== 標準オプション" "= TkObject" "refm/api/tk_off/tkobject.rd.off")
(find-rurima "--- TkObject#selectbackground" "== 標準オプション" "= TkObject" "refm/api/tk_off/tkobject.rd.off")
(find-rurima "--- TkObject#selectborderwidth" "== 標準オプション" "= TkObject" "refm/api/tk_off/tkobject.rd.off")
(find-rurima "--- TkObject#selectforeground" "== 標準オプション" "= TkObject" "refm/api/tk_off/tkobject.rd.off")
(find-rurima "--- TkObject#setgrid" "== 標準オプション" "= TkObject" "refm/api/tk_off/tkobject.rd.off")
(find-rurima "--- TkObject#takefocus" "== 標準オプション" "= TkObject" "refm/api/tk_off/tkobject.rd.off")
(find-rurima "--- TkObject#text" "== 標準オプション" "= TkObject" "refm/api/tk_off/tkobject.rd.off")
(find-rurima "--- TkObject#troughcolor" "== 標準オプション" "= TkObject" "refm/api/tk_off/tkobject.rd.off")
(find-rurima "--- TkObject#underline" "== 標準オプション" "= TkObject" "refm/api/tk_off/tkobject.rd.off")
(find-rurima "--- TkObject#wraplength" "== 標準オプション" "= TkObject" "refm/api/tk_off/tkobject.rd.off")
(find-rurima "= TkManageFocus" "refm/api/tk_off/tkmanagefocus.rd.off")
(find-rurima "== extendしているモジュール:" "= TkManageFocus" "refm/api/tk_off/tkmanagefocus.rd.off")
(find-rurima "== クラスメソッド:" "= TkManageFocus" "refm/api/tk_off/tkmanagefocus.rd.off")
(find-rurima "--- TkManageFocus.followsMouse" "== クラスメソッド:" "= TkManageFocus" "refm/api/tk_off/tkmanagefocus.rd.off")
(find-rurima "--- TkManageFocus.next(window)" "== クラスメソッド:" "= TkManageFocus" "refm/api/tk_off/tkmanagefocus.rd.off")
(find-rurima "--- TkManageFocus.prev(window)" "== クラスメソッド:" "= TkManageFocus" "refm/api/tk_off/tkmanagefocus.rd.off")
(find-rurima "== メソッド:" "= TkManageFocus" "refm/api/tk_off/tkmanagefocus.rd.off")
(find-rurima "--- TkManageFocus#focusNext" "== メソッド:" "= TkManageFocus" "refm/api/tk_off/tkmanagefocus.rd.off")
(find-rurima "--- TkManageFocus#focusPrev" "== メソッド:" "= TkManageFocus" "refm/api/tk_off/tkmanagefocus.rd.off")
(find-rurima "= TkCore" "refm/api/tk_off/tkcore.rd.off")
(find-rurima "== インクルードしているモジュール:" "= TkCore" "refm/api/tk_off/tkcore.rd.off")
(find-rurima "== extendしているモジュール:" "= TkCore" "refm/api/tk_off/tkcore.rd.off")
(find-rurima "== クラスメソッド:" "= TkCore" "refm/api/tk_off/tkcore.rd.off")
(find-rurima "--- TkCore.callback(arg)" "== クラスメソッド:" "= TkCore" "refm/api/tk_off/tkcore.rd.off")
(find-rurima "== メソッド:" "= TkCore" "refm/api/tk_off/tkcore.rd.off")
(find-rurima "--- TkCore#callback_break" "== メソッド:" "= TkCore" "refm/api/tk_off/tkcore.rd.off")
(find-rurima "--- TkCore#callback_continue" "== メソッド:" "= TkCore" "refm/api/tk_off/tkcore.rd.off")
(find-rurima "--- TkCore#after(ms, cmd=Proc.new)" "== メソッド:" "= TkCore" "refm/api/tk_off/tkcore.rd.off")
(find-rurima "--- TkCore#after_idle(cmd=Proc.new)" "== メソッド:" "= TkCore" "refm/api/tk_off/tkcore.rd.off")
(find-rurima "--- TkCore#clock_clicks(ms=nil)" "== メソッド:" "= TkCore" "refm/api/tk_off/tkcore.rd.off")
(find-rurima "--- TkCore#clock_format(clk, form=nil)" "== メソッド:" "= TkCore" "refm/api/tk_off/tkcore.rd.off")
(find-rurima "--- TkCore#clock_formatGMT(clk, form=nil)" "== メソッド:" "= TkCore" "refm/api/tk_off/tkcore.rd.off")
(find-rurima "--- TkCore#clock_scan(str, base=nil)" "== メソッド:" "= TkCore" "refm/api/tk_off/tkcore.rd.off")
(find-rurima "--- TkCore#clock_scanGMT(str, base=nil)" "== メソッド:" "= TkCore" "refm/api/tk_off/tkcore.rd.off")
(find-rurima "--- TkCore#clock_seconds" "== メソッド:" "= TkCore" "refm/api/tk_off/tkcore.rd.off")
(find-rurima "--- TkCore#scaling" "== メソッド:" "= TkCore" "refm/api/tk_off/tkcore.rd.off")
(find-rurima "--- TkCore#scaling(scale)" "== メソッド:" "= TkCore" "refm/api/tk_off/tkcore.rd.off")
(find-rurima "--- TkCore#scaling_displayof(win)" "== メソッド:" "= TkCore" "refm/api/tk_off/tkcore.rd.off")
(find-rurima "--- TkCore#scaling_displayof(win, scale)" "== メソッド:" "= TkCore" "refm/api/tk_off/tkcore.rd.off")
(find-rurima "--- TkCore#appname(name=None)" "== メソッド:" "= TkCore" "refm/api/tk_off/tkcore.rd.off")
(find-rurima "--- TkCore#appsend(interp, async, *args)" "== メソッド:" "= TkCore" "refm/api/tk_off/tkcore.rd.off")
(find-rurima "--- TkCore#rb_appsend(interp, async, *args)" "== メソッド:" "= TkCore" "refm/api/tk_off/tkcore.rd.off")
(find-rurima "--- TkCore#appsend_displayof(interp, async, *args)" "== メソッド:" "= TkCore" "refm/api/tk_off/tkcore.rd.off")
(find-rurima "--- TkCore#rb_appsend_displayof(interp, async, *args)" "== メソッド:" "= TkCore" "refm/api/tk_off/tkcore.rd.off")
(find-rurima "--- TkCore#info(*args)" "== メソッド:" "= TkCore" "refm/api/tk_off/tkcore.rd.off")
(find-rurima "--- TkCore#mainloop" "== メソッド:" "= TkCore" "refm/api/tk_off/tkcore.rd.off")
(find-rurima "--- TkCore#event_generate(window, context, keys=nil)" "== メソッド:" "= TkCore" "refm/api/tk_off/tkcore.rd.off")
(find-rurima "--- TkCore#messageBox(keys)" "== メソッド:" "= TkCore" "refm/api/tk_off/tkcore.rd.off")
(find-rurima "--- TkCore#getOpenFile(keys=nil)" "== メソッド:" "= TkCore" "refm/api/tk_off/tkcore.rd.off")
(find-rurima "--- TkCore#getSaveFile(keys=nil)" "== メソッド:" "= TkCore" "refm/api/tk_off/tkcore.rd.off")
(find-rurima "--- TkCore#chooseColor(keys=nil)" "== メソッド:" "= TkCore" "refm/api/tk_off/tkcore.rd.off")
(find-rurima "--- TkCore#chooseDirectory(keys = nil)" "== メソッド:" "= TkCore" "refm/api/tk_off/tkcore.rd.off")
(find-rurima "--- TkCore#tk_call(*args)" "== メソッド:" "= TkCore" "refm/api/tk_off/tkcore.rd.off")
(find-rurima "== 定数:" "= TkCore" "refm/api/tk_off/tkcore.rd.off")
(find-rurima "--- TkCore::INTERP" "== 定数:" "= TkCore" "refm/api/tk_off/tkcore.rd.off")
(find-rurima "= TkTextTagSel" "refm/api/tk_off/tktexttagsel.rd.off")
(find-rurima "== スーパークラス:" "= TkTextTagSel" "refm/api/tk_off/tktexttagsel.rd.off")
(find-rurima "== クラスメソッド:" "= TkTextTagSel" "refm/api/tk_off/tktexttagsel.rd.off")
(find-rurima "--- TkTextTagSel.new(parent, keys=nil)" "== クラスメソッド:" "= TkTextTagSel" "refm/api/tk_off/tktexttagsel.rd.off")
(find-rurima "= TkcTagAccess" "refm/api/tk_off/tkctagaccess.rd.off")
(find-rurima "== インクルードしているモジュール:" "= TkcTagAccess" "refm/api/tk_off/tkctagaccess.rd.off")
(find-rurima "== メソッド:" "= TkcTagAccess" "refm/api/tk_off/tkctagaccess.rd.off")
(find-rurima "--- TkcTagAccess#addtag(tag)" "== メソッド:" "= TkcTagAccess" "refm/api/tk_off/tkctagaccess.rd.off")
(find-rurima "--- TkcTagAccess#bbox" "== メソッド:" "= TkcTagAccess" "refm/api/tk_off/tkctagaccess.rd.off")
(find-rurima "--- TkcTagAccess#bind(seq, cmd=Proc.new, args=nil)" "== メソッド:" "= TkcTagAccess" "refm/api/tk_off/tkctagaccess.rd.off")
(find-rurima "--- TkcTagAccess#bindinfo(seq=nil)" "== メソッド:" "= TkcTagAccess" "refm/api/tk_off/tkctagaccess.rd.off")
(find-rurima "--- TkcTagAccess#cget(option)" "== メソッド:" "= TkcTagAccess" "refm/api/tk_off/tkctagaccess.rd.off")
(find-rurima "--- TkcTagAccess#configure(key, value=None)" "== メソッド:" "= TkcTagAccess" "refm/api/tk_off/tkctagaccess.rd.off")
(find-rurima "--- TkcTagAccess#configinfo(key=nil)" "== メソッド:" "= TkcTagAccess" "refm/api/tk_off/tkctagaccess.rd.off")
(find-rurima "--- TkcTagAccess#coords(*args)" "== メソッド:" "= TkcTagAccess" "refm/api/tk_off/tkctagaccess.rd.off")
(find-rurima "--- TkcTagAccess#dchars(first, last=None)" "== メソッド:" "= TkcTagAccess" "refm/api/tk_off/tkctagaccess.rd.off")
(find-rurima "--- TkcTagAccess#dtag(tag_to_del=None)" "== メソッド:" "= TkcTagAccess" "refm/api/tk_off/tkctagaccess.rd.off")
(find-rurima "--- TkcTagAccess#find" "== メソッド:" "= TkcTagAccess" "refm/api/tk_off/tkctagaccess.rd.off")
(find-rurima "--- TkcTagAccess#list" "== メソッド:" "= TkcTagAccess" "refm/api/tk_off/tkctagaccess.rd.off")
(find-rurima "--- TkcTagAccess#focus" "== メソッド:" "= TkcTagAccess" "refm/api/tk_off/tkctagaccess.rd.off")
(find-rurima "--- TkcTagAccess#gettags" "== メソッド:" "= TkcTagAccess" "refm/api/tk_off/tkctagaccess.rd.off")
(find-rurima "--- TkcTagAccess#icursor(index)" "== メソッド:" "= TkcTagAccess" "refm/api/tk_off/tkctagaccess.rd.off")
(find-rurima "--- TkcTagAccess#index(index)" "== メソッド:" "= TkcTagAccess" "refm/api/tk_off/tkctagaccess.rd.off")
(find-rurima "--- TkcTagAccess#insert(beforethis, string)" "== メソッド:" "= TkcTagAccess" "refm/api/tk_off/tkctagaccess.rd.off")
(find-rurima "--- TkcTagAccess#lower(belowthis=None)" "== メソッド:" "= TkcTagAccess" "refm/api/tk_off/tkctagaccess.rd.off")
(find-rurima "--- TkcTagAccess#move(xamount, yamount)" "== メソッド:" "= TkcTagAccess" "refm/api/tk_off/tkctagaccess.rd.off")
(find-rurima "--- TkcTagAccess#raise(abovethis=None)" "== メソッド:" "= TkcTagAccess" "refm/api/tk_off/tkctagaccess.rd.off")
(find-rurima "--- TkcTagAccess#scale(xorigin, yorigin, xscale, yscale)" "== メソッド:" "= TkcTagAccess" "refm/api/tk_off/tkctagaccess.rd.off")
(find-rurima "--- TkcTagAccess#select_adjust(index)" "== メソッド:" "= TkcTagAccess" "refm/api/tk_off/tkctagaccess.rd.off")
(find-rurima "--- TkcTagAccess#select_from(index)" "== メソッド:" "= TkcTagAccess" "refm/api/tk_off/tkctagaccess.rd.off")
(find-rurima "--- TkcTagAccess#select_to(index)" "== メソッド:" "= TkcTagAccess" "refm/api/tk_off/tkctagaccess.rd.off")
(find-rurima "--- TkcTagAccess#itemtype" "== メソッド:" "= TkcTagAccess" "refm/api/tk_off/tkctagaccess.rd.off")
(find-rurima "--- TkcTagAccess#& (tag)" "== メソッド:" "= TkcTagAccess" "refm/api/tk_off/tkctagaccess.rd.off")
(find-rurima "--- TkcTagAccess#| (tag)" "== メソッド:" "= TkcTagAccess" "refm/api/tk_off/tkctagaccess.rd.off")
(find-rurima "--- TkcTagAccess#^ (tag)" "== メソッド:" "= TkcTagAccess" "refm/api/tk_off/tkctagaccess.rd.off")
(find-rurima "--- TkcTagAccess#-@" "== メソッド:" "= TkcTagAccess" "refm/api/tk_off/tkctagaccess.rd.off")
(find-rurima "= Tk::Scrollable" "refm/api/tk_off/tkscrollable.rd.off")
(find-rurima "== メソッド:" "= Tk::Scrollable" "refm/api/tk_off/tkscrollable.rd.off")
(find-rurima "--- Tk::Scrollable#xscrollcommand(cmd=Proc.new)" "== メソッド:" "= Tk::Scrollable" "refm/api/tk_off/tkscrollable.rd.off")
(find-rurima "--- Tk::Scrollable#yscrollcommand(cmd=Proc.new)" "== メソッド:" "= Tk::Scrollable" "refm/api/tk_off/tkscrollable.rd.off")
(find-rurima "--- Tk::Scrollable#xview(*index)" "== メソッド:" "= Tk::Scrollable" "refm/api/tk_off/tkscrollable.rd.off")
(find-rurima "--- Tk::Scrollable#yview(*index)" "== メソッド:" "= Tk::Scrollable" "refm/api/tk_off/tkscrollable.rd.off")
(find-rurima "--- Tk::Scrollable#xscrollbar(bar=nil)" "== メソッド:" "= Tk::Scrollable" "refm/api/tk_off/tkscrollable.rd.off")
(find-rurima "--- Tk::Scrollable#yscrollbar(bar=nil)" "== メソッド:" "= Tk::Scrollable" "refm/api/tk_off/tkscrollable.rd.off")
(find-rurima "= TkPalette" "refm/api/tk_off/tkpalette.rd.off")
(find-rurima "== インクルードしているモジュール:" "= TkPalette" "refm/api/tk_off/tkpalette.rd.off")
(find-rurima "== extendしているモジュール:" "= TkPalette" "refm/api/tk_off/tkpalette.rd.off")
(find-rurima "== クラスメソッド:" "= TkPalette" "refm/api/tk_off/tkpalette.rd.off")
(find-rurima "--- TkPalette.set(*args)" "== クラスメソッド:" "= TkPalette" "refm/api/tk_off/tkpalette.rd.off")
(find-rurima "--- TkPalette.setPalette(*args)" "== クラスメソッド:" "= TkPalette" "refm/api/tk_off/tkpalette.rd.off")
(find-rurima "--- TkPalette.bisque" "== クラスメソッド:" "= TkPalette" "refm/api/tk_off/tkpalette.rd.off")
(find-rurima "--- TkPalette.darken(color, percent)" "== クラスメソッド:" "= TkPalette" "refm/api/tk_off/tkpalette.rd.off")
(find-rurima "--- TkPalette.recolorTree(window, colors)" "== クラスメソッド:" "= TkPalette" "refm/api/tk_off/tkpalette.rd.off")
(find-rurima "== メソッド:" "= TkPalette" "refm/api/tk_off/tkpalette.rd.off")
(find-rurima "--- TkPalette#recolorTree(colors)" "== メソッド:" "= TkPalette" "refm/api/tk_off/tkpalette.rd.off")
(find-rurima "= TkListbox" "refm/api/tk_off/tklistbox.rd.off")
(find-rurima "== スーパークラス:" "= TkListbox" "refm/api/tk_off/tklistbox.rd.off")
(find-rurima "== インクルードしているモジュール:" "= TkListbox" "refm/api/tk_off/tklistbox.rd.off")
(find-rurima "== メソッド:" "= TkListbox" "refm/api/tk_off/tklistbox.rd.off")
(find-rurima "--- TkListbox#activate(y)" "== メソッド:" "= TkListbox" "refm/api/tk_off/tklistbox.rd.off")
(find-rurima "--- TkListbox#curselection" "== メソッド:" "= TkListbox" "refm/api/tk_off/tklistbox.rd.off")
(find-rurima "--- TkListbox#get(index)" "== メソッド:" "= TkListbox" "refm/api/tk_off/tklistbox.rd.off")
(find-rurima "--- TkListbox#get(first, last)" "== メソッド:" "= TkListbox" "refm/api/tk_off/tklistbox.rd.off")
(find-rurima "--- TkListbox#nearest(y)" "== メソッド:" "= TkListbox" "refm/api/tk_off/tklistbox.rd.off")
(find-rurima "--- TkListbox#size" "== メソッド:" "= TkListbox" "refm/api/tk_off/tklistbox.rd.off")
(find-rurima "--- TkListbox#selection_anchor(index)" "== メソッド:" "= TkListbox" "refm/api/tk_off/tklistbox.rd.off")
(find-rurima "--- TkListbox#selection_clear(first, last=None)" "== メソッド:" "= TkListbox" "refm/api/tk_off/tklistbox.rd.off")
(find-rurima "--- TkListbox#selection_includes(index)" "== メソッド:" "= TkListbox" "refm/api/tk_off/tklistbox.rd.off")
(find-rurima "--- TkListbox#selection_set(first, last=None)" "== メソッド:" "= TkListbox" "refm/api/tk_off/tklistbox.rd.off")
(find-rurima "--- TkListbox#itemcget(index, key)" "== メソッド:" "= TkListbox" "refm/api/tk_off/tklistbox.rd.off")
(find-rurima "--- TkListbox#itemconfigure(index, key, val=None)" "== メソッド:" "= TkListbox" "refm/api/tk_off/tklistbox.rd.off")
(find-rurima "--- TkListbox#itemconfiginfo(index, key=nil)" "== メソッド:" "= TkListbox" "refm/api/tk_off/tklistbox.rd.off")
(find-rurima "== 標準オプション:" "= TkListbox" "refm/api/tk_off/tklistbox.rd.off")
(find-rurima "== オプション:" "= TkListbox" "refm/api/tk_off/tklistbox.rd.off")
(find-rurima "--- TkListbox#height" "== オプション:" "= TkListbox" "refm/api/tk_off/tklistbox.rd.off")
(find-rurima "--- TkListbox#selectmode" "== オプション:" "= TkListbox" "refm/api/tk_off/tklistbox.rd.off")
(find-rurima "--- TkListbox#width" "== オプション:" "= TkListbox" "refm/api/tk_off/tklistbox.rd.off")
(find-rurima "= TkLabel" "refm/api/tk_off/tklabel.rd.off")
(find-rurima "== スーパークラス:" "= TkLabel" "refm/api/tk_off/tklabel.rd.off")
(find-rurima "== メソッド:" "= TkLabel" "refm/api/tk_off/tklabel.rd.off")
(find-rurima "--- TkLabel#textvariable(var)" "== メソッド:" "= TkLabel" "refm/api/tk_off/tklabel.rd.off")
(find-rurima "== 標準オプション:" "= TkLabel" "refm/api/tk_off/tklabel.rd.off")
(find-rurima "== オプション:" "= TkLabel" "refm/api/tk_off/tklabel.rd.off")
(find-rurima "--- TkLabel#height" "== オプション:" "= TkLabel" "refm/api/tk_off/tklabel.rd.off")
(find-rurima "--- TkLabel#width" "== オプション:" "= TkLabel" "refm/api/tk_off/tklabel.rd.off")
(find-rurima "= TkTreatCItemFont" "refm/api/tk_off/tktreatcitemfont.rd.off")
(find-rurima "== メソッド:" "= TkTreatCItemFont" "refm/api/tk_off/tktreatcitemfont.rd.off")
(find-rurima "--- TkTreatCItemFont#tagfont_configinfo(tagOrId)" "== メソッド:" "= TkTreatCItemFont" "refm/api/tk_off/tktreatcitemfont.rd.off")
(find-rurima "--- TkTreatCItemFont#tagfont_configure(tagOrId, slot)" "== メソッド:" "= TkTreatCItemFont" "refm/api/tk_off/tktreatcitemfont.rd.off")
(find-rurima "--- TkTreatCItemFont#latintagfont_configure(tagOrId, ltn, keys=nil)" "== メソッド:" "= TkTreatCItemFont" "refm/api/tk_off/tktreatcitemfont.rd.off")
(find-rurima "--- TkTreatCItemFont#kanjitagfont_configure(tagOrId, knj, keys=nil)" "== メソッド:" "= TkTreatCItemFont" "refm/api/tk_off/tktreatcitemfont.rd.off")
(find-rurima "--- TkTreatCItemFont#tagfont_copy(tagOrId, window, wintag=nil)" "== メソッド:" "= TkTreatCItemFont" "refm/api/tk_off/tktreatcitemfont.rd.off")
(find-rurima "--- TkTreatCItemFont#latintagfont_copy(tagOrId, window, wintag=nil)" "== メソッド:" "= TkTreatCItemFont" "refm/api/tk_off/tktreatcitemfont.rd.off")
(find-rurima "--- TkTreatCItemFont#kanjitagfont_copy(tagOrId, window, wintag=nil)" "== メソッド:" "= TkTreatCItemFont" "refm/api/tk_off/tktreatcitemfont.rd.off")
(find-rurima "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "== インクルードしているモジュール:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "== extendしているモジュール:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "== モジュールメソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo.atom(name)" "== モジュールメソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo.atomname(id)" "== モジュールメソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo.cells(window)" "== モジュールメソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo.children(window)" "== モジュールメソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo.classname(window)" "== モジュールメソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo.colormapfull(window)" "== モジュールメソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo.containing(rootX, rootY)" "== モジュールメソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo.depth(window)" "== モジュールメソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo.exist?(window)" "== モジュールメソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo.fpixels(window, number)" "== モジュールメソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo.geometry(window)" "== モジュールメソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo.height(window)" "== モジュールメソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo.id(window)" "== モジュールメソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo.interps(window=nil)" "== モジュールメソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo.mapped?(window)" "== モジュールメソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo.manager(window)" "== モジュールメソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo.appname(window)" "== モジュールメソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo.parent(window)" "== モジュールメソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo.widget(id)" "== モジュールメソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo.pixels(window, number)" "== モジュールメソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo.reqheight(window)" "== モジュールメソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo.reqwidth(window)" "== モジュールメソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo.rgb(window, color)" "== モジュールメソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo.rootx(window)" "== モジュールメソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo.rooty(window)" "== モジュールメソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo.screen(window)" "== モジュールメソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo.screencells(window)" "== モジュールメソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo.screendepth(window)" "== モジュールメソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo.screenheight (window)" "== モジュールメソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo.screenmmheight(window)" "== モジュールメソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo.screenmmwidth(window)" "== モジュールメソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo.screenvisual(window)" "== モジュールメソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo.screenwidth(window)" "== モジュールメソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo.server(window)" "== モジュールメソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo.toplevel(window)" "== モジュールメソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo.visual(window)" "== モジュールメソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo.visualid(window)" "== モジュールメソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo.visualsavailable(window, includeids=false)" "== モジュールメソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo.vrootheight(window)" "== モジュールメソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo.vrootwidth(window)" "== モジュールメソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo.vrootx(window)" "== モジュールメソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo.vrooty(window)" "== モジュールメソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo.width(window)" "== モジュールメソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo.x(window)" "== モジュールメソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo.y(window)" "== モジュールメソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo.viewable(window)" "== モジュールメソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo.pointerx(window)" "== モジュールメソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo.pointery(window)" "== モジュールメソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo.pointerxy(window)" "== モジュールメソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "== メソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo#winfo_atom(name)" "== メソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo#winfo_atomname(id)" "== メソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo#winfo_cells" "== メソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo#winfo_children" "== メソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo#winfo_classname" "== メソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo#winfo_colormapfull" "== メソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo#winfo_containing(x, y)" "== メソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo#winfo_depth" "== メソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo#winfo_exist?" "== メソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo#winfo_fpixels(number)" "== メソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo#winfo_geometry" "== メソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo#winfo_height" "== メソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo#winfo_id" "== メソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo#winfo_interps" "== メソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo#winfo_mapped?" "== メソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo#winfo_manager" "== メソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo#winfo_appname" "== メソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo#winfo_parent" "== メソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo#winfo_widget(id)" "== メソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo#winfo_pixels(number)" "== メソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo#winfo_reqheight" "== メソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo#winfo_reqwidth" "== メソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo#winfo_rgb(color)" "== メソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo#winfo_rootx" "== メソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo#winfo_rooty" "== メソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo#winfo_screen" "== メソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo#winfo_screencells" "== メソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo#winfo_screendepth" "== メソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo#winfo_screenheight" "== メソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo#winfo_screenmmheight" "== メソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo#winfo_screenmmwidth" "== メソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo#winfo_screenvisual" "== メソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo#winfo_screenwidth" "== メソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo#winfo_server" "== メソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo#winfo_toplevel" "== メソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo#winfo_visual" "== メソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo#winfo_visualid" "== メソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo#winfo_visualsavailable(includeids=false)" "== メソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo#winfo_vrootheight" "== メソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo#winfo_vrootwidth" "== メソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo#winfo_vrootx" "== メソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo#winfo_vrooty" "== メソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo#winfo_width" "== メソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo#winfo_x" "== メソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo#winfo_y" "== メソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo#winfo_viewable" "== メソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo#winfo_pointerx" "== メソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo#winfo_pointery" "== メソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "--- TkWinfo#winfo_pointerxy" "== メソッド:" "= TkWinfo" "refm/api/tk_off/tkwinfo.rd.off")
(find-rurima "= TkComm::Event" "refm/api/tk_off/tkevent.rd.off")
(find-rurima "== スーパークラス:" "= TkComm::Event" "refm/api/tk_off/tkevent.rd.off")
(find-rurima "== クラスメソッド:" "= TkComm::Event" "refm/api/tk_off/tkevent.rd.off")
(find-rurima "--- TkComm::Event#initialize(serial,a,b,c,d,f,h,k,m,o,p,s,t,w,x,y,aa,bb,dd,ee,kk,nn,rr,ss,tt,ww,xx,yy)" "== クラスメソッド:" "= TkComm::Event" "refm/api/tk_off/tkevent.rd.off")
(find-rurima "== メソッド:" "= TkComm::Event" "refm/api/tk_off/tkevent.rd.off")
(find-rurima "--- TkComm::Event#serial" "== メソッド:" "= TkComm::Event" "refm/api/tk_off/tkevent.rd.off")
(find-rurima "--- TkComm::Event#above" "== メソッド:" "= TkComm::Event" "refm/api/tk_off/tkevent.rd.off")
(find-rurima "--- TkComm::Event#num" "== メソッド:" "= TkComm::Event" "refm/api/tk_off/tkevent.rd.off")
(find-rurima "--- TkComm::Event#count" "== メソッド:" "= TkComm::Event" "refm/api/tk_off/tkevent.rd.off")
(find-rurima "--- TkComm::Event#detail" "== メソッド:" "= TkComm::Event" "refm/api/tk_off/tkevent.rd.off")
(find-rurima "--- TkComm::Event#focus" "== メソッド:" "= TkComm::Event" "refm/api/tk_off/tkevent.rd.off")
(find-rurima "--- TkComm::Event#height" "== メソッド:" "= TkComm::Event" "refm/api/tk_off/tkevent.rd.off")
(find-rurima "--- TkComm::Event#keycode" "== メソッド:" "= TkComm::Event" "refm/api/tk_off/tkevent.rd.off")
(find-rurima "--- TkComm::Event#mode" "== メソッド:" "= TkComm::Event" "refm/api/tk_off/tkevent.rd.off")
(find-rurima "--- TkComm::Event#override" "== メソッド:" "= TkComm::Event" "refm/api/tk_off/tkevent.rd.off")
(find-rurima "--- TkComm::Event#place" "== メソッド:" "= TkComm::Event" "refm/api/tk_off/tkevent.rd.off")
(find-rurima "--- TkComm::Event#state" "== メソッド:" "= TkComm::Event" "refm/api/tk_off/tkevent.rd.off")
(find-rurima "--- TkComm::Event#time" "== メソッド:" "= TkComm::Event" "refm/api/tk_off/tkevent.rd.off")
(find-rurima "--- TkComm::Event#width" "== メソッド:" "= TkComm::Event" "refm/api/tk_off/tkevent.rd.off")
(find-rurima "--- TkComm::Event#x" "== メソッド:" "= TkComm::Event" "refm/api/tk_off/tkevent.rd.off")
(find-rurima "--- TkComm::Event#y" "== メソッド:" "= TkComm::Event" "refm/api/tk_off/tkevent.rd.off")
(find-rurima "--- TkComm::Event#char" "== メソッド:" "= TkComm::Event" "refm/api/tk_off/tkevent.rd.off")
(find-rurima "--- TkComm::Event#borderwidth" "== メソッド:" "= TkComm::Event" "refm/api/tk_off/tkevent.rd.off")
(find-rurima "--- TkComm::Event#wheel_delta" "== メソッド:" "= TkComm::Event" "refm/api/tk_off/tkevent.rd.off")
(find-rurima "--- TkComm::Event#send_event" "== メソッド:" "= TkComm::Event" "refm/api/tk_off/tkevent.rd.off")
(find-rurima "--- TkComm::Event#keysym" "== メソッド:" "= TkComm::Event" "refm/api/tk_off/tkevent.rd.off")
(find-rurima "--- TkComm::Event#keysym_num" "== メソッド:" "= TkComm::Event" "refm/api/tk_off/tkevent.rd.off")
(find-rurima "--- TkComm::Event#rootwin_id" "== メソッド:" "= TkComm::Event" "refm/api/tk_off/tkevent.rd.off")
(find-rurima "--- TkComm::Event#subwindow" "== メソッド:" "= TkComm::Event" "refm/api/tk_off/tkevent.rd.off")
(find-rurima "--- TkComm::Event#type" "== メソッド:" "= TkComm::Event" "refm/api/tk_off/tkevent.rd.off")
(find-rurima "--- TkComm::Event#widget" "== メソッド:" "= TkComm::Event" "refm/api/tk_off/tkevent.rd.off")
(find-rurima "--- TkComm::Event#x_root" "== メソッド:" "= TkComm::Event" "refm/api/tk_off/tkevent.rd.off")
(find-rurima "--- TkComm::Event#y_root" "== メソッド:" "= TkComm::Event" "refm/api/tk_off/tkevent.rd.off")
(find-rurima "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "== インクルードしているモジュール:" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "== extendしているモジュール:" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "== クラスメソッド:" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "--- TkFont.new(ltn=DEFAULT_LATIN_FONT_NAME, knj=nil, keys=nil)" "== クラスメソッド:" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "--- TkFont.families(window=nil)" "== クラスメソッド:" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "--- TkFont.names" "== クラスメソッド:" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "--- TkFont.create_copy(font)" "== クラスメソッド:" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "--- TkFont.get_obj(name)" "== クラスメソッド:" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "--- TkFont.init_widget_font(path, *args)" "== クラスメソッド:" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "--- TkFont.used_on(path=nil)" "== クラスメソッド:" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "--- TkFont.failsafe(font)" "== クラスメソッド:" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "== privateメソッド:" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "--- TkFont#_get_font_info_from_hash(font)" "== privateメソッド:" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "--- TkFont#create_asciifont(font)" "== privateメソッド:" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "--- TkFont#create_latinfont(font)" "== privateメソッド:" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "--- TkFont#create_kanjifont(font)" "== privateメソッド:" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "--- TkFont#create_compoundfont(ltn, knj, keys)" "== privateメソッド:" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "--- TkFont#actual_core(font, window=nil, option=nil)" "== privateメソッド:" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "--- TkFont#configinfo_core(font, option=nil)" "== privateメソッド:" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "--- TkFont#configure_core(font, slot, value=None)" "== privateメソッド:" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "--- TkFont#delete_core" "== privateメソッド:" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "--- TkFont#latin_replace_core(ltn)" "== privateメソッド:" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "--- TkFont#kanji_replace_core(knj)" "== privateメソッド:" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "--- TkFont#measure_core(window, text)" "== privateメソッド:" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "--- TkFont#metrics_core(font, window, option=nil)" "== privateメソッド:" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "== メソッド:" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "--- TkFont#call_font_configure(path, *args)" "== メソッド:" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "--- TkFont#used" "== メソッド:" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "--- TkFont#id" "== メソッド:" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "--- TkFont#font" "== メソッド:" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "--- TkFont#ascii_font" "== メソッド:" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "--- TkFont#latin_font" "== メソッド:" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "--- TkFont#kanji_font" "== メソッド:" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "--- TkFont#actual(option=nil)" "== メソッド:" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "--- TkFont#actual_displayof(window, option=nil)" "== メソッド:" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "--- TkFont#ascii_actual(option=nil)" "== メソッド:" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "--- TkFont#latin_actual(option=nil)" "== メソッド:" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "--- TkFont#ascii_actual_displayof(window, option=nil)" "== メソッド:" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "--- TkFont#latin_actual_displayof(window, option=nil)" "== メソッド:" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "--- TkFont#kanji_actual(option=nil)" "== メソッド:" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "--- TkFont#kanji_actual_displayof(window, option=nil)" "== メソッド:" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "--- TkFont#[](slot)" "== メソッド:" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "--- TkFont#[]=(slot, val)" "== メソッド:" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "--- TkFont#configure(slot, value=None)" "== メソッド:" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "--- TkFont#configinfo(slot=nil)" "== メソッド:" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "--- TkFont#delete" "== メソッド:" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "--- TkFont#ascii_configure(slot, value=None)" "== メソッド:" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "--- TkFont#latin_configure(slot, value=None)" "== メソッド:" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "--- TkFont#ascii_configinfo(slot=nil)" "== メソッド:" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "--- TkFont#latin_configinfo(slot=nil)" "== メソッド:" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "--- TkFont#kanji_configure(slot, value=None)" "== メソッド:" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "--- TkFont#kanji_configinfo(slot=nil)" "== メソッド:" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "--- TkFont#replace(ltn, knj)" "== メソッド:" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "--- TkFont#ascii_replace(ltn)" "== メソッド:" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "--- TkFont#latin_replace(ltn)" "== メソッド:" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "--- TkFont#kanji_replace(knj)" "== メソッド:" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "--- TkFont#measure(text)" "== メソッド:" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "--- TkFont#measure_displayof(window, text)" "== メソッド:" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "--- TkFont#metrics(option=nil)" "== メソッド:" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "--- TkFont#metrics_displayof(window, option=nil)" "== メソッド:" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "--- TkFont#ascii_metrics(option=nil)" "== メソッド:" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "--- TkFont#latin_metrics(option=nil)" "== メソッド:" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "--- TkFont#latin_metrics_displayof(window, option=nil)" "== メソッド:" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "--- TkFont#kanji_metrics(option=nil)" "== メソッド:" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "--- TkFont#kanji_metrics_displayof(window, option=nil)" "== メソッド:" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "--- TkFont#reset_pointadjust" "== メソッド:" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "== 定数" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "--- TkFont::Tk_FontID" "== 定数" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "--- TkFont::Tk_FontNameTBL" "== 定数" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "--- TkFont::Tk_FontUseTBL" "== 定数" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "--- TkFont::DEFAULT_LATIN_FONT_NAME" "== 定数" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "--- TkFont::DEFAULT_KANJI_FONT_NAME" "== 定数" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "== フォント記述" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "== フォントオプション" "= TkFont" "refm/api/tk_off/tkfont.rd.off")
(find-rurima "= TkKinput" "refm/api/tk_off/tkkinput.rd.off")
(find-rurima "== インクルードしているモジュール:" "= TkKinput" "refm/api/tk_off/tkkinput.rd.off")
(find-rurima "== extendしているモジュール:" "= TkKinput" "refm/api/tk_off/tkkinput.rd.off")
(find-rurima "== クラスメソッド:" "= TkKinput" "refm/api/tk_off/tkkinput.rd.off")
(find-rurima "--- TkKinput.start(window, style=None)" "== クラスメソッド:" "= TkKinput" "refm/api/tk_off/tkkinput.rd.off")
(find-rurima "--- TkKinput.send_spot(window)" "== クラスメソッド:" "= TkKinput" "refm/api/tk_off/tkkinput.rd.off")
(find-rurima "--- TkKinput.input_start(window, keys=nil)" "== クラスメソッド:" "= TkKinput" "refm/api/tk_off/tkkinput.rd.off")
(find-rurima "--- TkKinput.attribute_config(window, slot, value=None)" "== クラスメソッド:" "= TkKinput" "refm/api/tk_off/tkkinput.rd.off")
(find-rurima "--- TkKinput.attribute_info(window, slot=nil)" "== クラスメソッド:" "= TkKinput" "refm/api/tk_off/tkkinput.rd.off")
(find-rurima "--- TkKinput.input_end(window)" "== クラスメソッド:" "= TkKinput" "refm/api/tk_off/tkkinput.rd.off")
(find-rurima "== メソッド:" "= TkKinput" "refm/api/tk_off/tkkinput.rd.off")
(find-rurima "--- TkKinput#kinput_start(style=None)" "== メソッド:" "= TkKinput" "refm/api/tk_off/tkkinput.rd.off")
(find-rurima "--- TkKinput#kinput_send_spot" "== メソッド:" "= TkKinput" "refm/api/tk_off/tkkinput.rd.off")
(find-rurima "--- TkKinput#kanji_input_start(keys=nil)" "== メソッド:" "= TkKinput" "refm/api/tk_off/tkkinput.rd.off")
(find-rurima "--- TkKinput#kinput_attribute_config(slot, value=None)" "== メソッド:" "= TkKinput" "refm/api/tk_off/tkkinput.rd.off")
(find-rurima "--- TkKinput#kinput_attribute_info(slot=nil)" "== メソッド:" "= TkKinput" "refm/api/tk_off/tkkinput.rd.off")
(find-rurima "--- TkKinput#kanji_input_end" "== メソッド:" "= TkKinput" "refm/api/tk_off/tkkinput.rd.off")
(find-rurima "= TkTextMarkInsert" "refm/api/tk_off/tktextmarkinsert.rd.off")
(find-rurima "== スーパークラス:" "= TkTextMarkInsert" "refm/api/tk_off/tktextmarkinsert.rd.off")
(find-rurima "== クラスメソッド:" "= TkTextMarkInsert" "refm/api/tk_off/tktextmarkinsert.rd.off")
(find-rurima "--- TkTextMarkInsert.new(parent, index=nil)" "== クラスメソッド:" "= TkTextMarkInsert" "refm/api/tk_off/tktextmarkinsert.rd.off")
(find-rurima "= TkOption" "refm/api/tk_off/tkoption.rd.off")
(find-rurima "== インクルードしているモジュール:" "= TkOption" "refm/api/tk_off/tkoption.rd.off")
(find-rurima "== extendしているモジュール:" "= TkOption" "refm/api/tk_off/tkoption.rd.off")
(find-rurima "== モジュール関数:" "= TkOption" "refm/api/tk_off/tkoption.rd.off")
(find-rurima "--- TkOption.add(pat, value, pri=None)" "== モジュール関数:" "= TkOption" "refm/api/tk_off/tkoption.rd.off")
(find-rurima "--- TkOption.clear" "== モジュール関数:" "= TkOption" "refm/api/tk_off/tkoption.rd.off")
(find-rurima "--- TkOption.get(win, name, klass)" "== モジュール関数:" "= TkOption" "refm/api/tk_off/tkoption.rd.off")
(find-rurima "--- TkOption.readfile(file, pri=None)" "== モジュール関数:" "= TkOption" "refm/api/tk_off/tkoption.rd.off")
(find-rurima "= TkTextWin" "refm/api/tk_off/tktextwin.rd.off")
(find-rurima "== スーパークラス:" "= TkTextWin" "refm/api/tk_off/tktextwin.rd.off")
(find-rurima "== メソッド:" "= TkTextWin" "refm/api/tk_off/tktextwin.rd.off")
(find-rurima "--- TkTextWin#bbox(index)" "== メソッド:" "= TkTextWin" "refm/api/tk_off/tktextwin.rd.off")
(find-rurima "--- TkTextWin#delete(first, last=None)" "== メソッド:" "= TkTextWin" "refm/api/tk_off/tktextwin.rd.off")
(find-rurima "--- TkTextWin#get(index)" "== メソッド:" "= TkTextWin" "refm/api/tk_off/tktextwin.rd.off")
(find-rurima "--- TkTextWin#get(first, last)" "== メソッド:" "= TkTextWin" "refm/api/tk_off/tktextwin.rd.off")
(find-rurima "--- TkTextWin#index(index)" "== メソッド:" "= TkTextWin" "refm/api/tk_off/tktextwin.rd.off")
(find-rurima "--- TkTextWin#insert(index, chars, *args)" "== メソッド:" "= TkTextWin" "refm/api/tk_off/tktextwin.rd.off")
(find-rurima "--- TkTextWin#scan_mark(x, y)" "== メソッド:" "= TkTextWin" "refm/api/tk_off/tktextwin.rd.off")
(find-rurima "--- TkTextWin#scan_dragto(x, y)" "== メソッド:" "= TkTextWin" "refm/api/tk_off/tktextwin.rd.off")
(find-rurima "--- TkTextWin#see(index)" "== メソッド:" "= TkTextWin" "refm/api/tk_off/tktextwin.rd.off")
(find-rurima "= TkcItem" "refm/api/tk_off/tkcitem.rd.off")
(find-rurima "== スーパークラス:" "= TkcItem" "refm/api/tk_off/tkcitem.rd.off")
(find-rurima "== インクルードしているモジュール:" "= TkcItem" "refm/api/tk_off/tkcitem.rd.off")
(find-rurima "== クラスメソッド:" "= TkcItem" "refm/api/tk_off/tkcitem.rd.off")
(find-rurima "--- TkcItem.type2class(type)" "== クラスメソッド:" "= TkcItem" "refm/api/tk_off/tkcitem.rd.off")
(find-rurima "--- TkcItem.id2obj(canvas, id)" "== クラスメソッド:" "= TkcItem" "refm/api/tk_off/tkcitem.rd.off")
(find-rurima "--- TkcItem.new(parent, *args)" "== クラスメソッド:" "= TkcItem" "refm/api/tk_off/tkcitem.rd.off")
(find-rurima "== メソッド:" "= TkcItem" "refm/api/tk_off/tkcitem.rd.off")
(find-rurima "--- TkcItem#id" "== メソッド:" "= TkcItem" "refm/api/tk_off/tkcitem.rd.off")
(find-rurima "--- TkcItem#delete" "== メソッド:" "= TkcItem" "refm/api/tk_off/tkcitem.rd.off")
(find-rurima "= TkRoot" "refm/api/tk_off/tkroot.rd.off")
(find-rurima "== スーパークラス:" "= TkRoot" "refm/api/tk_off/tkroot.rd.off")
(find-rurima "== インクルードしているモジュール:" "= TkRoot" "refm/api/tk_off/tkroot.rd.off")
(find-rurima "== クラスメソッド:" "= TkRoot" "refm/api/tk_off/tkroot.rd.off")
(find-rurima "--- TkRoot.new" "== クラスメソッド:" "= TkRoot" "refm/api/tk_off/tkroot.rd.off")
(find-rurima "== メソッド:" "= TkRoot" "refm/api/tk_off/tkroot.rd.off")
(find-rurima "--- TkRoot#path" "== メソッド:" "= TkRoot" "refm/api/tk_off/tkroot.rd.off")
(find-rurima "== 標準オプション:" "= TkRoot" "refm/api/tk_off/tkroot.rd.off")
(find-rurima "== オプション:" "= TkRoot" "refm/api/tk_off/tkroot.rd.off")
(find-rurima "--- TkRoot#background(color)" "== オプション:" "= TkRoot" "refm/api/tk_off/tkroot.rd.off")
(find-rurima "--- TkRoot#bg(color)" "== オプション:" "= TkRoot" "refm/api/tk_off/tkroot.rd.off")
(find-rurima "--- TkRoot#colormap" "== オプション:" "= TkRoot" "refm/api/tk_off/tkroot.rd.off")
(find-rurima "--- TkRoot#container(bool)" "== オプション:" "= TkRoot" "refm/api/tk_off/tkroot.rd.off")
(find-rurima "--- TkRoot#height" "== オプション:" "= TkRoot" "refm/api/tk_off/tkroot.rd.off")
(find-rurima "--- TkRoot#menu" "== オプション:" "= TkRoot" "refm/api/tk_off/tkroot.rd.off")
(find-rurima "--- TkRoot#screen" "== オプション:" "= TkRoot" "refm/api/tk_off/tkroot.rd.off")
(find-rurima "--- TkRoot#use" "== オプション:" "= TkRoot" "refm/api/tk_off/tkroot.rd.off")
(find-rurima "--- TkRoot#visual" "== オプション:" "= TkRoot" "refm/api/tk_off/tkroot.rd.off")
(find-rurima "--- TkRoot#width" "== オプション:" "= TkRoot" "refm/api/tk_off/tkroot.rd.off")
(find-rurima "= TkFrame" "refm/api/tk_off/tkframe.rd.off")
(find-rurima "== スーパークラス:" "= TkFrame" "refm/api/tk_off/tkframe.rd.off")
(find-rurima "== 標準オプション:" "= TkFrame" "refm/api/tk_off/tkframe.rd.off")
(find-rurima "== オプション:" "= TkFrame" "refm/api/tk_off/tkframe.rd.off")
(find-rurima "--- TkFrame#background(color)" "== オプション:" "= TkFrame" "refm/api/tk_off/tkframe.rd.off")
(find-rurima "--- TkFrame#bg(color)" "== オプション:" "= TkFrame" "refm/api/tk_off/tkframe.rd.off")
(find-rurima "--- TkFrame#classname" "== オプション:" "= TkFrame" "refm/api/tk_off/tkframe.rd.off")
(find-rurima "--- TkFrame#colormap" "== オプション:" "= TkFrame" "refm/api/tk_off/tkframe.rd.off")
(find-rurima "--- TkFrame#container(bool)" "== オプション:" "= TkFrame" "refm/api/tk_off/tkframe.rd.off")
(find-rurima "--- TkFrame#height(h)" "== オプション:" "= TkFrame" "refm/api/tk_off/tkframe.rd.off")
(find-rurima "--- TkFrame#visual" "== オプション:" "= TkFrame" "refm/api/tk_off/tkframe.rd.off")
(find-rurima "--- TkFrame#width(w)" "== オプション:" "= TkFrame" "refm/api/tk_off/tkframe.rd.off")
(find-rurima "= TkcTag" "refm/api/tk_off/tkctag.rd.off")
(find-rurima "== スーパークラス:" "= TkcTag" "refm/api/tk_off/tkctag.rd.off")
(find-rurima "== インクルードしているモジュール:" "= TkcTag" "refm/api/tk_off/tkctag.rd.off")
(find-rurima "== クラスメソッド:" "= TkcTag" "refm/api/tk_off/tkctag.rd.off")
(find-rurima "--- TkcTag.id2obj(canvas, id)" "== クラスメソッド:" "= TkcTag" "refm/api/tk_off/tkctag.rd.off")
(find-rurima "--- TkcTag.new(parent, mode=nil, *args)" "== クラスメソッド:" "= TkcTag" "refm/api/tk_off/tkctag.rd.off")
(find-rurima "== メソッド:" "= TkcTag" "refm/api/tk_off/tkctag.rd.off")
(find-rurima "--- TkcTag#id" "== メソッド:" "= TkcTag" "refm/api/tk_off/tkctag.rd.off")
(find-rurima "--- TkcTag#delete" "== メソッド:" "= TkcTag" "refm/api/tk_off/tkctag.rd.off")
(find-rurima "--- TkcTag#set_to_above(target)" "== メソッド:" "= TkcTag" "refm/api/tk_off/tkctag.rd.off")
(find-rurima "--- TkcTag#set_to_all" "== メソッド:" "= TkcTag" "refm/api/tk_off/tkctag.rd.off")
(find-rurima "--- TkcTag#set_to_below(target)" "== メソッド:" "= TkcTag" "refm/api/tk_off/tkctag.rd.off")
(find-rurima "--- TkcTag#set_to_closest(x, y, halo=None, start=None)" "== メソッド:" "= TkcTag" "refm/api/tk_off/tkctag.rd.off")
(find-rurima "--- TkcTag#set_to_enclosed(x1, y1, x2, y2)" "== メソッド:" "= TkcTag" "refm/api/tk_off/tkctag.rd.off")
(find-rurima "--- TkcTag#set_to_overlapping(x1, y1, x2, y2)" "== メソッド:" "= TkcTag" "refm/api/tk_off/tkctag.rd.off")
(find-rurima "--- TkcTag#set_to_withtag(target)" "== メソッド:" "= TkcTag" "refm/api/tk_off/tkctag.rd.off")
(find-rurima "= TkTextMarkCurrent" "refm/api/tk_off/tktextmarkcurrent.rd.off")
(find-rurima "== スーパークラス:" "= TkTextMarkCurrent" "refm/api/tk_off/tktextmarkcurrent.rd.off")
(find-rurima "== クラスメソッド:" "= TkTextMarkCurrent" "refm/api/tk_off/tktextmarkcurrent.rd.off")
(find-rurima "--- TkTextMarkCurrent.new(parent, index=nil)" "== クラスメソッド:" "= TkTextMarkCurrent" "refm/api/tk_off/tktextmarkcurrent.rd.off")
(find-rurima "= TkCheckButton" "refm/api/tk_off/tkcheckbutton.rd.off")
(find-rurima "== スーパークラス:" "= TkCheckButton" "refm/api/tk_off/tkcheckbutton.rd.off")
(find-rurima "== メソッド:" "= TkCheckButton" "refm/api/tk_off/tkcheckbutton.rd.off")
(find-rurima "--- TkCheckButton#toggle" "== メソッド:" "= TkCheckButton" "refm/api/tk_off/tkcheckbutton.rd.off")
(find-rurima "== 標準オプション:" "= TkCheckButton" "refm/api/tk_off/tkcheckbutton.rd.off")
(find-rurima "== オプション:" "= TkCheckButton" "refm/api/tk_off/tkcheckbutton.rd.off")
(find-rurima "--- TkCheckButton#height" "== オプション:" "= TkCheckButton" "refm/api/tk_off/tkcheckbutton.rd.off")
(find-rurima "--- TkCheckButton#indicatoron" "== オプション:" "= TkCheckButton" "refm/api/tk_off/tkcheckbutton.rd.off")
(find-rurima "--- TkCheckButton#offvalue" "== オプション:" "= TkCheckButton" "refm/api/tk_off/tkcheckbutton.rd.off")
(find-rurima "--- TkCheckButton#onvalue" "== オプション:" "= TkCheckButton" "refm/api/tk_off/tkcheckbutton.rd.off")
(find-rurima "--- TkCheckButton#selectcolor" "== オプション:" "= TkCheckButton" "refm/api/tk_off/tkcheckbutton.rd.off")
(find-rurima "--- TkCheckButton#selectimage" "== オプション:" "= TkCheckButton" "refm/api/tk_off/tkcheckbutton.rd.off")
(find-rurima "--- TkCheckButton#state" "== オプション:" "= TkCheckButton" "refm/api/tk_off/tkcheckbutton.rd.off")
(find-rurima "--- TkCheckButton#width" "== オプション:" "= TkCheckButton" "refm/api/tk_off/tkcheckbutton.rd.off")
(find-rurima "= TkClipboard" "refm/api/tk_off/tkclipboard.rd.off")
(find-rurima "== インクルードしているモジュール:" "= TkClipboard" "refm/api/tk_off/tkclipboard.rd.off")
(find-rurima "== extendしているモジュール:" "= TkClipboard" "refm/api/tk_off/tkclipboard.rd.off")
(find-rurima "== モジュール関数:" "= TkClipboard" "refm/api/tk_off/tkclipboard.rd.off")
(find-rurima "--- TkClipboard.clear" "== モジュール関数:" "= TkClipboard" "refm/api/tk_off/tkclipboard.rd.off")
(find-rurima "--- TkClipboard.get" "== モジュール関数:" "= TkClipboard" "refm/api/tk_off/tkclipboard.rd.off")
(find-rurima "--- TkClipboard.set(data)" "== モジュール関数:" "= TkClipboard" "refm/api/tk_off/tkclipboard.rd.off")
(find-rurima "--- TkClipboard.append(data)" "== モジュール関数:" "= TkClipboard" "refm/api/tk_off/tkclipboard.rd.off")
(find-rurima "= TkComposite" "refm/api/tk_off/tkcomposite.rd.off")
(find-rurima "== インクルードしているモジュール:" "= TkComposite" "refm/api/tk_off/tkcomposite.rd.off")
(find-rurima "== extendしているモジュール:" "= TkComposite" "refm/api/tk_off/tkcomposite.rd.off")
(find-rurima "== privateメソッド:" "= TkComposite" "refm/api/tk_off/tkcomposite.rd.off")
(find-rurima "--- TkComposite#initialize_composite(*args)" "== privateメソッド:" "= TkComposite" "refm/api/tk_off/tkcomposite.rd.off")
(find-rurima "== メソッド:" "= TkComposite" "refm/api/tk_off/tkcomposite.rd.off")
(find-rurima "--- TkComposite#epath" "== メソッド:" "= TkComposite" "refm/api/tk_off/tkcomposite.rd.off")
(find-rurima "--- TkComposite#delegate(option, *wins)" "== メソッド:" "= TkComposite" "refm/api/tk_off/tkcomposite.rd.off")
(find-rurima "--- TkComposite#configure(slot, value=None)" "== メソッド:" "= TkComposite" "refm/api/tk_off/tkcomposite.rd.off")
(find-rurima "--- TkComposite#configure(hash)" "== メソッド:" "= TkComposite" "refm/api/tk_off/tkcomposite.rd.off")
(find-rurima "= Ruby 標準 API リファレンスマニュアル" "refm/api/index.rd")
(find-rurima "== 組み込みクラス" "= Ruby 標準 API リファレンスマニュアル" "refm/api/index.rd")
(find-rurima "== 組み込みモジュール" "= Ruby 標準 API リファレンスマニュアル" "refm/api/index.rd")
(find-rurima "== 例外クラス" "= Ruby 標準 API リファレンスマニュアル" "refm/api/index.rd")
(find-rurima "== 単品" "= Ruby 標準 API リファレンスマニュアル" "refm/api/index.rd")
(find-rurima "== 変更履歴" "= Ruby 標準 API リファレンスマニュアル" "refm/api/index.rd")
(find-rurima "== 移動する" "= Ruby 標準 API リファレンスマニュアル" "refm/api/index.rd")
(find-rurima "== 編集者向けの情報 (削除)" "= Ruby 標準 API リファレンスマニュアル" "refm/api/index.rd")
(find-rurima "= 過去の遺物" "refm/api/obsolete.rd")
(find-rurima "== 過去のメソッド" "= 過去の遺物" "refm/api/obsolete.rd")
(find-rurima "== 過去のクラス" "= 過去の遺物" "refm/api/obsolete.rd")
(find-rurima "== 過去の組み込み変数、定数" "= 過去の遺物" "refm/api/obsolete.rd")
(find-rurima "== その他過去のもの" "= 過去の遺物" "refm/api/obsolete.rd")
(find-rurima "= module Profiler__" "refm/api/src/profiler.rd")
(find-rurima "== Module Functions" "= module Profiler__" "refm/api/src/profiler.rd")
(find-rurima "--- start_profile -> object" "== Module Functions" "= module Profiler__" "refm/api/src/profiler.rd")
(find-rurima "--- stop_profile -> nil" "== Module Functions" "= module Profiler__" "refm/api/src/profiler.rd")
(find-rurima "--- print_profile(file) -> ()" "== Module Functions" "= module Profiler__" "refm/api/src/profiler.rd")
(find-rurima "== Constants" "= module Profiler__" "refm/api/src/profiler.rd")
(find-rurima "--- PROFILE_PROC -> Proc" "== Constants" "= module Profiler__" "refm/api/src/profiler.rd")
(find-rurima "= reopen Kernel" "refm/api/src/json.rd")
(find-rurima "== Private Instance Methods" "= reopen Kernel" "refm/api/src/json.rd")
(find-rurima "--- j(*objects) -> nil" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/json.rd")
(find-rurima "--- jj(*objects) -> nil" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/json.rd")
(find-rurima "--- JSON(object, options = {}) -> object" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/json.rd")
(find-rurima "= reopen Class" "refm/api/src/json.rd")
(find-rurima "== Public Instance Methods" "= reopen Class" "refm/api/src/json.rd")
(find-rurima "--- json_creatable? -> bool" "== Public Instance Methods" "= reopen Class" "refm/api/src/json.rd")
(find-rurima "= reopen Array" "refm/api/src/json.rd")
(find-rurima "= reopen FalseClass" "refm/api/src/json.rd")
(find-rurima "= reopen Float" "refm/api/src/json.rd")
(find-rurima "= reopen Hash" "refm/api/src/json.rd")
(find-rurima "= reopen Integer" "refm/api/src/json.rd")
(find-rurima "= reopen NilClass" "refm/api/src/json.rd")
(find-rurima "= reopen Object" "refm/api/src/json.rd")
(find-rurima "= reopen String" "refm/api/src/json.rd")
(find-rurima "= reopen TrueClass" "refm/api/src/json.rd")
(find-rurima "= class GDBM < Object" "refm/api/src/gdbm.rd")
(find-rurima "== Class Methods" "= class GDBM < Object" "refm/api/src/gdbm.rd")
(find-rurima "--- new(dbname, mode = 0666, flags = 0) -> GDBM" "== Class Methods" "= class GDBM < Object" "refm/api/src/gdbm.rd")
(find-rurima "--- open(dbname, mode = 0666, flags = 0) -> GDBM" "== Class Methods" "= class GDBM < Object" "refm/api/src/gdbm.rd")
(find-rurima "--- open(dbname, mode = 0666, flags = 0) {|db| ... } -> object" "== Class Methods" "= class GDBM < Object" "refm/api/src/gdbm.rd")
(find-rurima "== Instance Methods" "= class GDBM < Object" "refm/api/src/gdbm.rd")
(find-rurima "--- [](key) -> String" "== Instance Methods" "= class GDBM < Object" "refm/api/src/gdbm.rd")
(find-rurima "--- []=(key, value)" "== Instance Methods" "= class GDBM < Object" "refm/api/src/gdbm.rd")
(find-rurima "--- cachesize=(size)" "== Instance Methods" "= class GDBM < Object" "refm/api/src/gdbm.rd")
(find-rurima "--- clear -> self" "== Instance Methods" "= class GDBM < Object" "refm/api/src/gdbm.rd")
(find-rurima "--- close -> nil" "== Instance Methods" "= class GDBM < Object" "refm/api/src/gdbm.rd")
(find-rurima "--- closed? -> bool" "== Instance Methods" "= class GDBM < Object" "refm/api/src/gdbm.rd")
(find-rurima "--- delete(key) -> object | nil" "== Instance Methods" "= class GDBM < Object" "refm/api/src/gdbm.rd")
(find-rurima "--- delete(key) {|key| ... } -> object" "== Instance Methods" "= class GDBM < Object" "refm/api/src/gdbm.rd")
(find-rurima "--- delete_if { |key, value|  ...  } -> self" "== Instance Methods" "= class GDBM < Object" "refm/api/src/gdbm.rd")
(find-rurima "--- reject! { |key, value|  ...  } -> self" "== Instance Methods" "= class GDBM < Object" "refm/api/src/gdbm.rd")
(find-rurima "--- each {|key, value|  ...  } -> self" "== Instance Methods" "= class GDBM < Object" "refm/api/src/gdbm.rd")
(find-rurima "--- each_pair {|key, value|  ...  } -> self" "== Instance Methods" "= class GDBM < Object" "refm/api/src/gdbm.rd")
(find-rurima "--- each_key {|key|  ...  } -> self" "== Instance Methods" "= class GDBM < Object" "refm/api/src/gdbm.rd")
(find-rurima "--- each_value {|value|  ...  } -> self" "== Instance Methods" "= class GDBM < Object" "refm/api/src/gdbm.rd")
(find-rurima "--- empty? -> bool" "== Instance Methods" "= class GDBM < Object" "refm/api/src/gdbm.rd")
(find-rurima "--- fastmode=(bool)" "== Instance Methods" "= class GDBM < Object" "refm/api/src/gdbm.rd")
(find-rurima "--- syncmode=(bool)" "== Instance Methods" "= class GDBM < Object" "refm/api/src/gdbm.rd")
(find-rurima "--- fetch(key, ifnone = nil){|key| ... } -> object" "== Instance Methods" "= class GDBM < Object" "refm/api/src/gdbm.rd")
(find-rurima "--- has_key?(key) -> bool" "== Instance Methods" "= class GDBM < Object" "refm/api/src/gdbm.rd")
(find-rurima "--- key?(key) -> bool" "== Instance Methods" "= class GDBM < Object" "refm/api/src/gdbm.rd")
(find-rurima "--- include?(key) -> bool" "== Instance Methods" "= class GDBM < Object" "refm/api/src/gdbm.rd")
(find-rurima "--- member?(key) -> bool" "== Instance Methods" "= class GDBM < Object" "refm/api/src/gdbm.rd")
(find-rurima "--- has_value?(value) -> bool" "== Instance Methods" "= class GDBM < Object" "refm/api/src/gdbm.rd")
(find-rurima "--- value?(value) -> bool" "== Instance Methods" "= class GDBM < Object" "refm/api/src/gdbm.rd")
(find-rurima "--- index(val) -> String" "== Instance Methods" "= class GDBM < Object" "refm/api/src/gdbm.rd")
(find-rurima "--- indexes(*keys) -> [String]" "== Instance Methods" "= class GDBM < Object" "refm/api/src/gdbm.rd")
(find-rurima "--- indices(*keys) -> [String]" "== Instance Methods" "= class GDBM < Object" "refm/api/src/gdbm.rd")
(find-rurima "--- invert -> Hash" "== Instance Methods" "= class GDBM < Object" "refm/api/src/gdbm.rd")
(find-rurima "--- key(value) -> String" "== Instance Methods" "= class GDBM < Object" "refm/api/src/gdbm.rd")
(find-rurima "--- keys -> [String]" "== Instance Methods" "= class GDBM < Object" "refm/api/src/gdbm.rd")
(find-rurima "--- length -> Integer" "== Instance Methods" "= class GDBM < Object" "refm/api/src/gdbm.rd")
(find-rurima "--- size   -> Integer" "== Instance Methods" "= class GDBM < Object" "refm/api/src/gdbm.rd")
(find-rurima "--- reject {|key, value| ... } -> Hash" "== Instance Methods" "= class GDBM < Object" "refm/api/src/gdbm.rd")
(find-rurima "--- reorganize -> self" "== Instance Methods" "= class GDBM < Object" "refm/api/src/gdbm.rd")
(find-rurima "--- replace(other) -> self" "== Instance Methods" "= class GDBM < Object" "refm/api/src/gdbm.rd")
(find-rurima "--- select{|key, value| ... } -> [[String]]" "== Instance Methods" "= class GDBM < Object" "refm/api/src/gdbm.rd")
(find-rurima "--- shift -> [String]" "== Instance Methods" "= class GDBM < Object" "refm/api/src/gdbm.rd")
(find-rurima "--- store(key, val) -> [String]" "== Instance Methods" "= class GDBM < Object" "refm/api/src/gdbm.rd")
(find-rurima "--- sync -> self" "== Instance Methods" "= class GDBM < Object" "refm/api/src/gdbm.rd")
(find-rurima "==== 注意" "== Instance Methods" "= class GDBM < Object" "refm/api/src/gdbm.rd")
(find-rurima "--- to_a -> [[String]]" "==== 注意" "== Instance Methods" "= class GDBM < Object" "refm/api/src/gdbm.rd")
(find-rurima "--- to_hash -> Hash" "==== 注意" "== Instance Methods" "= class GDBM < Object" "refm/api/src/gdbm.rd")
(find-rurima "--- update(other) -> self" "==== 注意" "== Instance Methods" "= class GDBM < Object" "refm/api/src/gdbm.rd")
(find-rurima "--- values -> [String]" "==== 注意" "== Instance Methods" "= class GDBM < Object" "refm/api/src/gdbm.rd")
(find-rurima "--- values_at(*keys) -> [String]" "==== 注意" "== Instance Methods" "= class GDBM < Object" "refm/api/src/gdbm.rd")
(find-rurima "== Constants" "= class GDBM < Object" "refm/api/src/gdbm.rd")
(find-rurima "--- VERSION -> String" "== Constants" "= class GDBM < Object" "refm/api/src/gdbm.rd")
(find-rurima "--- FAST -> Fixnum" "== Constants" "= class GDBM < Object" "refm/api/src/gdbm.rd")
(find-rurima "--- SYNC -> Fixnum" "== Constants" "= class GDBM < Object" "refm/api/src/gdbm.rd")
(find-rurima "--- NOLOCK -> Fixnum" "== Constants" "= class GDBM < Object" "refm/api/src/gdbm.rd")
(find-rurima "--- READER -> Fixnum" "== Constants" "= class GDBM < Object" "refm/api/src/gdbm.rd")
(find-rurima "--- WRITER -> Fixnum" "== Constants" "= class GDBM < Object" "refm/api/src/gdbm.rd")
(find-rurima "--- WRCREAT -> Fixnum" "== Constants" "= class GDBM < Object" "refm/api/src/gdbm.rd")
(find-rurima "--- NEWDB -> Fixnum" "== Constants" "= class GDBM < Object" "refm/api/src/gdbm.rd")
(find-rurima "= class GDBMError < StandardError" "refm/api/src/gdbm.rd")
(find-rurima "= class GDBMFatalError < StandardError" "refm/api/src/gdbm.rd")
(find-rurima "= module Singleton" "refm/api/src/singleton.rd")
(find-rurima "=== サンプルコード" "= module Singleton" "refm/api/src/singleton.rd")
(find-rurima "== Singleton Methods" "= module Singleton" "refm/api/src/singleton.rd")
(find-rurima "--- instance -> object" "== Singleton Methods" "= module Singleton" "refm/api/src/singleton.rd")
(find-rurima "=== 参考" "refm/api/src/forwardable.rd")
(find-rurima "= module Forwardable" "refm/api/src/forwardable.rd")
(find-rurima "=== 使い方" "= module Forwardable" "refm/api/src/forwardable.rd")
(find-rurima "== Singleton Methods" "= module Forwardable" "refm/api/src/forwardable.rd")
(find-rurima "--- debug -> bool" "== Singleton Methods" "= module Forwardable" "refm/api/src/forwardable.rd")
(find-rurima "--- debug= -> bool" "== Singleton Methods" "= module Forwardable" "refm/api/src/forwardable.rd")
(find-rurima "== Instance Methods" "= module Forwardable" "refm/api/src/forwardable.rd")
(find-rurima "--- def_instance_delegators(accessor, *methods) -> nil" "== Instance Methods" "= module Forwardable" "refm/api/src/forwardable.rd")
(find-rurima "--- def_delegators(accessor, *methods) -> nil" "== Instance Methods" "= module Forwardable" "refm/api/src/forwardable.rd")
(find-rurima "--- def_instance_delegator(accessor, method, ali = method) -> nil" "== Instance Methods" "= module Forwardable" "refm/api/src/forwardable.rd")
(find-rurima "--- def_delegator(accessor, method, ali = method) -> nil" "== Instance Methods" "= module Forwardable" "refm/api/src/forwardable.rd")
(find-rurima "= module SingleForwardable" "refm/api/src/forwardable.rd")
(find-rurima "=== 使い方" "= module SingleForwardable" "refm/api/src/forwardable.rd")
(find-rurima "== Instance Methods" "= module SingleForwardable" "refm/api/src/forwardable.rd")
(find-rurima "--- def_singleton_delegators(accessor, *methods) -> nil" "== Instance Methods" "= module SingleForwardable" "refm/api/src/forwardable.rd")
(find-rurima "--- def_delegators(accessor, *methods) -> nil" "== Instance Methods" "= module SingleForwardable" "refm/api/src/forwardable.rd")
(find-rurima "--- def_singleton_delegator(accessor, method, ali = method) -> nil" "== Instance Methods" "= module SingleForwardable" "refm/api/src/forwardable.rd")
(find-rurima "--- def_delegator(accessor, method, ali = method) -> nil" "== Instance Methods" "= module SingleForwardable" "refm/api/src/forwardable.rd")
(find-rurima "= module PTY" "refm/api/src/pty.rd")
(find-rurima "== Module Functions" "= module PTY" "refm/api/src/pty.rd")
(find-rurima "--- getpty(command)                          -> [IO, IO, Integer]" "== Module Functions" "= module PTY" "refm/api/src/pty.rd")
(find-rurima "--- getpty(command){|read, write, pid| ... } -> nil" "== Module Functions" "= module PTY" "refm/api/src/pty.rd")
(find-rurima "--- spawn(command)                           -> [IO, IO, Integer]" "== Module Functions" "= module PTY" "refm/api/src/pty.rd")
(find-rurima "--- spawn(command){|read, write, pid| ... }  -> nil" "== Module Functions" "= module PTY" "refm/api/src/pty.rd")
(find-rurima "--- protect_signal{ ... } -> self" "== Module Functions" "= module PTY" "refm/api/src/pty.rd")
(find-rurima "--- reset_signal -> self" "== Module Functions" "= module PTY" "refm/api/src/pty.rd")
(find-rurima "== Singleton Methods" "= module PTY" "refm/api/src/pty.rd")
(find-rurima "--- check(pid, raise = false) -> Process::Status | nil" "== Singleton Methods" "= module PTY" "refm/api/src/pty.rd")
(find-rurima "--- open -> [IO, File]" "== Singleton Methods" "= module PTY" "refm/api/src/pty.rd")
(find-rurima "--- open{|master_io, slave_file| ... } -> object" "== Singleton Methods" "= module PTY" "refm/api/src/pty.rd")
(find-rurima "= class PTY::ChildExited < RuntimeError" "refm/api/src/pty.rd")
(find-rurima "== Instance Methods" "= class PTY::ChildExited < RuntimeError" "refm/api/src/pty.rd")
(find-rurima "--- status -> Process::Status" "== Instance Methods" "= class PTY::ChildExited < RuntimeError" "refm/api/src/pty.rd")
(find-rurima "= reopen Kernel" "refm/api/src/continuation.rd")
(find-rurima "== Module functions" "= reopen Kernel" "refm/api/src/continuation.rd")
(find-rurima "--- callcc {|cont| .... } -> object" "== Module functions" "= reopen Kernel" "refm/api/src/continuation.rd")
(find-rurima "= class StringScanner < Object" "refm/api/src/strscan.rd")
(find-rurima "== Class Methods" "= class StringScanner < Object" "refm/api/src/strscan.rd")
(find-rurima "--- new(str, dup = false) -> StringScanner " "== Class Methods" "= class StringScanner < Object" "refm/api/src/strscan.rd")
(find-rurima "---  must_C_version -> self" "== Class Methods" "= class StringScanner < Object" "refm/api/src/strscan.rd")
(find-rurima "== Instance Methods" "= class StringScanner < Object" "refm/api/src/strscan.rd")
(find-rurima "--- [](nth) -> String | nil" "== Instance Methods" "= class StringScanner < Object" "refm/api/src/strscan.rd")
(find-rurima "--- <<(str) -> self" "== Instance Methods" "= class StringScanner < Object" "refm/api/src/strscan.rd")
(find-rurima "--- concat(str) -> self" "== Instance Methods" "= class StringScanner < Object" "refm/api/src/strscan.rd")
(find-rurima "--- beginning_of_line? -> bool" "== Instance Methods" "= class StringScanner < Object" "refm/api/src/strscan.rd")
(find-rurima "--- bol? -> bool" "== Instance Methods" "= class StringScanner < Object" "refm/api/src/strscan.rd")
(find-rurima "--- check(regexp) -> String | nil" "== Instance Methods" "= class StringScanner < Object" "refm/api/src/strscan.rd")
(find-rurima "--- check_until(regexp) -> String | nil" "== Instance Methods" "= class StringScanner < Object" "refm/api/src/strscan.rd")
(find-rurima "--- eos? -> bool" "== Instance Methods" "= class StringScanner < Object" "refm/api/src/strscan.rd")
(find-rurima "--- empty? -> bool" "== Instance Methods" "= class StringScanner < Object" "refm/api/src/strscan.rd")
(find-rurima "--- exist?(regexp) -> Fixnum | nil" "== Instance Methods" "= class StringScanner < Object" "refm/api/src/strscan.rd")
(find-rurima "--- getch -> String | nil" "== Instance Methods" "= class StringScanner < Object" "refm/api/src/strscan.rd")
(find-rurima "--- get_byte -> String | nil" "== Instance Methods" "= class StringScanner < Object" "refm/api/src/strscan.rd")
(find-rurima "--- getbyte -> String | nil" "== Instance Methods" "= class StringScanner < Object" "refm/api/src/strscan.rd")
(find-rurima "--- inspect -> String" "== Instance Methods" "= class StringScanner < Object" "refm/api/src/strscan.rd")
(find-rurima "--- match?(regexp) -> Fixnum | nil" "== Instance Methods" "= class StringScanner < Object" "refm/api/src/strscan.rd")
(find-rurima "--- matched -> String | nil" "== Instance Methods" "= class StringScanner < Object" "refm/api/src/strscan.rd")
(find-rurima "--- matched? -> bool" "== Instance Methods" "= class StringScanner < Object" "refm/api/src/strscan.rd")
(find-rurima "--- matched_size -> Fixnum | nil" "== Instance Methods" "= class StringScanner < Object" "refm/api/src/strscan.rd")
(find-rurima "--- peek(bytes) -> String" "== Instance Methods" "= class StringScanner < Object" "refm/api/src/strscan.rd")
(find-rurima "--- peep(bytes) -> String" "== Instance Methods" "= class StringScanner < Object" "refm/api/src/strscan.rd")
(find-rurima "--- pointer -> Fixnum" "== Instance Methods" "= class StringScanner < Object" "refm/api/src/strscan.rd")
(find-rurima "--- pos -> Fixnum" "== Instance Methods" "= class StringScanner < Object" "refm/api/src/strscan.rd")
(find-rurima "--- pointer=(n)" "== Instance Methods" "= class StringScanner < Object" "refm/api/src/strscan.rd")
(find-rurima "--- pos=(n)" "== Instance Methods" "= class StringScanner < Object" "refm/api/src/strscan.rd")
(find-rurima "--- post_match -> String | nil" "== Instance Methods" "= class StringScanner < Object" "refm/api/src/strscan.rd")
(find-rurima "--- pre_match -> String | nil" "== Instance Methods" "= class StringScanner < Object" "refm/api/src/strscan.rd")
(find-rurima "--- reset -> self" "== Instance Methods" "= class StringScanner < Object" "refm/api/src/strscan.rd")
(find-rurima "--- rest -> String" "== Instance Methods" "= class StringScanner < Object" "refm/api/src/strscan.rd")
(find-rurima "--- rest? -> bool" "== Instance Methods" "= class StringScanner < Object" "refm/api/src/strscan.rd")
(find-rurima "--- rest_size -> Fixnum" "== Instance Methods" "= class StringScanner < Object" "refm/api/src/strscan.rd")
(find-rurima "--- restsize -> Fixnum" "== Instance Methods" "= class StringScanner < Object" "refm/api/src/strscan.rd")
(find-rurima "--- scan(regexp) -> String | nil" "== Instance Methods" "= class StringScanner < Object" "refm/api/src/strscan.rd")
(find-rurima "--- scan_full(regexp, s, f) -> object" "== Instance Methods" "= class StringScanner < Object" "refm/api/src/strscan.rd")
(find-rurima "--- scan_until(regexp) -> String | nil" "== Instance Methods" "= class StringScanner < Object" "refm/api/src/strscan.rd")
(find-rurima "--- search_full(regexp, s, f) -> object" "== Instance Methods" "= class StringScanner < Object" "refm/api/src/strscan.rd")
(find-rurima "--- skip(regexp) -> Fixnum | nil" "== Instance Methods" "= class StringScanner < Object" "refm/api/src/strscan.rd")
(find-rurima "--- skip_until(regexp) -> Fixnum | nil" "== Instance Methods" "= class StringScanner < Object" "refm/api/src/strscan.rd")
(find-rurima "--- string -> String" "== Instance Methods" "= class StringScanner < Object" "refm/api/src/strscan.rd")
(find-rurima "--- string=(str)" "== Instance Methods" "= class StringScanner < Object" "refm/api/src/strscan.rd")
(find-rurima "--- terminate -> self" "== Instance Methods" "= class StringScanner < Object" "refm/api/src/strscan.rd")
(find-rurima "--- clear -> self" "== Instance Methods" "= class StringScanner < Object" "refm/api/src/strscan.rd")
(find-rurima "--- unscan -> self" "== Instance Methods" "= class StringScanner < Object" "refm/api/src/strscan.rd")
(find-rurima "--- matchedsize -> Fixnum | nil" "== Instance Methods" "= class StringScanner < Object" "refm/api/src/strscan.rd")
(find-rurima "== Constants" "= class StringScanner < Object" "refm/api/src/strscan.rd")
(find-rurima "--- Version -> String" "== Constants" "= class StringScanner < Object" "refm/api/src/strscan.rd")
(find-rurima "--- Id -> String" "== Constants" "= class StringScanner < Object" "refm/api/src/strscan.rd")
(find-rurima "= class ScanError" "refm/api/src/strscan.rd")
(find-rurima "= class StringScanner::Error" "refm/api/src/strscan.rd")
(find-rurima "=== クラス" "refm/api/src/socket.rd")
(find-rurima "=== モジュール" "refm/api/src/socket.rd")
(find-rurima "=== ソケットアドレス" "refm/api/src/socket.rd")
(find-rurima "====[a:host_format] ホスト指定形式" "=== ソケットアドレス" "refm/api/src/socket.rd")
(find-rurima "====[a:service_format] サービス指定形式" "=== ソケットアドレス" "refm/api/src/socket.rd")
(find-rurima "====[a:pack_string] ソケットアドレス構造体を pack した文字列" "=== ソケットアドレス" "refm/api/src/socket.rd")
(find-rurima "=== ホスト名と IP アドレスの変換" "refm/api/src/socket.rd")
(find-rurima "= reopen Time" "refm/api/src/time.rd")
(find-rurima "== Class Methods" "= reopen Time" "refm/api/src/time.rd")
(find-rurima "--- parse(date, now = Time.now) -> Time" "== Class Methods" "= reopen Time" "refm/api/src/time.rd")
(find-rurima "--- parse(date, now = Time.now) {|year| year } -> Time" "== Class Methods" "= reopen Time" "refm/api/src/time.rd")
(find-rurima "--- rfc2822(date) -> Time" "== Class Methods" "= reopen Time" "refm/api/src/time.rd")
(find-rurima "--- rfc822(date) -> Time" "== Class Methods" "= reopen Time" "refm/api/src/time.rd")
(find-rurima "--- httpdate(date) -> Time" "== Class Methods" "= reopen Time" "refm/api/src/time.rd")
(find-rurima "--- xmlschema(date) -> Time" "== Class Methods" "= reopen Time" "refm/api/src/time.rd")
(find-rurima "--- iso8601(date) -> Time" "== Class Methods" "= reopen Time" "refm/api/src/time.rd")
(find-rurima "--- strptime(date, format) -> Time" "== Class Methods" "= reopen Time" "refm/api/src/time.rd")
(find-rurima "--- strptime(date, format){|y| ... } -> Time" "== Class Methods" "= reopen Time" "refm/api/src/time.rd")
(find-rurima "== Instance Methods" "= reopen Time" "refm/api/src/time.rd")
(find-rurima "--- rfc2822 -> String" "== Instance Methods" "= reopen Time" "refm/api/src/time.rd")
(find-rurima "--- rfc822 -> String" "== Instance Methods" "= reopen Time" "refm/api/src/time.rd")
(find-rurima "--- httpdate -> String" "== Instance Methods" "= reopen Time" "refm/api/src/time.rd")
(find-rurima "--- xmlschema(fractional_seconds = 0) -> String" "== Instance Methods" "= reopen Time" "refm/api/src/time.rd")
(find-rurima "--- iso8601(fractional_seconds = 0) -> String" "== Instance Methods" "= reopen Time" "refm/api/src/time.rd")
(find-rurima "= reopen Kernel" "refm/api/src/getopts.rd")
(find-rurima "== Private Instance Methods" "= reopen Kernel" "refm/api/src/getopts.rd")
(find-rurima "--- getopts(single_opts, *long_opts)    -> Integer | nil" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/getopts.rd")
(find-rurima "= module Observable" "refm/api/src/observer.rd")
(find-rurima "=== サンプルコード" "= module Observable" "refm/api/src/observer.rd")
(find-rurima "== Instance Methods" "= module Observable" "refm/api/src/observer.rd")
(find-rurima "--- add_observer(observer) -> Array" "== Instance Methods" "= module Observable" "refm/api/src/observer.rd")
(find-rurima "--- delete_observer(observer) -> object | nil" "== Instance Methods" "= module Observable" "refm/api/src/observer.rd")
(find-rurima "--- delete_observers -> Array" "== Instance Methods" "= module Observable" "refm/api/src/observer.rd")
(find-rurima "--- count_observers -> Fixnum" "== Instance Methods" "= module Observable" "refm/api/src/observer.rd")
(find-rurima "--- changed(state = true) -> bool" "== Instance Methods" "= module Observable" "refm/api/src/observer.rd")
(find-rurima "--- changed? -> bool" "== Instance Methods" "= module Observable" "refm/api/src/observer.rd")
(find-rurima "--- notify_observers(*arg) -> nil" "== Instance Methods" "= module Observable" "refm/api/src/observer.rd")
(find-rurima "= module Curses" "refm/api/src/curses.rd")
(find-rurima "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- REPORT_MOUSE_POSITION -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- ALL_MOUSE_EVENTS -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- A_ALTCHARSET -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- A_ATTRIBUTES -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- A_BLINK -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- A_BOLD -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- A_CHARTEXT -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- A_COLOR -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- A_DIM -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- A_HORIZONTAL -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- A_INVIS -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- A_LEFT -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- A_LOW -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- A_NORMAL -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- A_PROTECT -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- A_REVERSE -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- A_RIGHT -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- A_STANDOUT -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- A_TOP -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- A_UNDERLINE -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- A_VERTICAL -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- BUTTON1_CLICKED -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- BUTTON1_DOUBLE_CLICKED -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- BUTTON1_PRESSED -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- BUTTON1_RELEASED -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- BUTTON1_TRIPLE_CLICKED -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- BUTTON2_CLICKED -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- BUTTON2_DOUBLE_CLICKED -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- BUTTON2_PRESSED -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- BUTTON2_RELEASED -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- BUTTON2_TRIPLE_CLICKED -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- BUTTON3_CLICKED -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- BUTTON3_DOUBLE_CLICKED -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- BUTTON3_PRESSED -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- BUTTON3_RELEASED -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- BUTTON3_TRIPLE_CLICKED -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- BUTTON4_CLICKED -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- BUTTON4_DOUBLE_CLICKED -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- BUTTON4_PRESSED -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- BUTTON4_RELEASED -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- BUTTON4_TRIPLE_CLICKED -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- BUTTON_ALT -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- BUTTON_CTRL -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- BUTTON_SHIFT -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- COLOR_BLACK -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- COLOR_BLUE -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- COLOR_CYAN -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- COLOR_GREEN -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- COLOR_MAGENTA -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- COLOR_RED -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- COLOR_WHITE -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- COLOR_YELLOW -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_A1 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_A3 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_B2 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_BACKSPACE -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_BEG -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_BREAK -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_BTAB -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_C1 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_C3 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_CANCEL -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_CATAB -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_CLEAR -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_CLOSE -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_COMMAND -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_COPY -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_CREATE -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_CTAB -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_CTRL_A -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_CTRL_B -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_CTRL_C -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_CTRL_D -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_CTRL_E -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_CTRL_F -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_CTRL_G -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_CTRL_H -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_CTRL_I -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_CTRL_J -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_CTRL_K -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_CTRL_L -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_CTRL_M -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_CTRL_N -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_CTRL_O -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_CTRL_P -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_CTRL_Q -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_CTRL_R -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_CTRL_S -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_CTRL_T -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_CTRL_U -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_CTRL_V -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_CTRL_W -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_CTRL_X -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_CTRL_Y -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_CTRL_Z -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_DC -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_DL -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_DOWN -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_EIC -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_END -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_ENTER -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_EOL -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_EOS -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_EXIT -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_F0 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_F1 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_F10 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_F11 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_F12 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_F13 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_F14 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_F15 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_F16 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_F17 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_F18 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_F19 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_F2 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_F20 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_F21 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_F22 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_F23 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_F24 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_F25 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_F26 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_F27 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_F28 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_F29 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_F3 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_F30 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_F31 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_F32 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_F33 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_F34 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_F35 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_F36 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_F37 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_F38 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_F39 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_F4 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_F40 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_F41 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_F42 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_F43 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_F44 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_F45 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_F46 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_F47 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_F48 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_F49 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_F5 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_F50 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_F51 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_F52 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_F53 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_F54 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_F55 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_F56 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_F57 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_F58 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_F59 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_F6 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_F60 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_F61 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_F62 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_F63 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_F7 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_F8 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_F9 -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_FIND -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_HELP -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_HOME -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_IC -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_IL -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_LEFT -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_LL -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_MARK -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_MAX -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_MESSAGE -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_MIN -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_MOUSE -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_MOVE -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_NEXT -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_NPAGE -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_OPEN -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_OPTIONS -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_PPAGE -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_PREVIOUS -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_PRINT -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_REDO -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_REFERENCE -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_REFRESH -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_REPLACE -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_RESET -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_RESIZE -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_RESTART -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_RESUME -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_RIGHT -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_SAVE -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_SBEG -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_SCANCEL -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_SCOMMAND -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_SCOPY -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_SCREATE -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_SDC -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_SDL -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_SELECT -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_SEND -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_SEOL -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_SEXIT -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_SF -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_SFIND -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_SHELP -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_SHOME -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_SIC -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_SLEFT -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_SMESSAGE -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_SMOVE -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_SNEXT -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_SOPTIONS -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_SPREVIOUS -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_SPRINT -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_SR -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_SREDO -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_SREPLACE -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_SRESET -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_SRIGHT -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_SRSUME -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_SSAVE -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_SSUSPEND -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_STAB -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_SUNDO -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_SUSPEND -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_UNDO -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- KEY_UP -> Integer" "== Constants" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- init_screen -> Curses::Window" "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- stdscr -> Curses::Window" "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- close_screen -> nil" "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- closed? -> bool" "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- clear -> nil" "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- refresh -> nil" "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- doupdate -> nil" "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- echo -> nil" "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- noecho" "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- cbreak -> nil" "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- crmode -> nil" "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- nocbreak -> nil" "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- nocrmode -> nil" "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- raw -> nil" "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- noraw -> nil" "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- nl -> nil" "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- nonl -> nil" "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- beep -> nil" "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- flash -> nil" "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- getch -> Integer" "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- getstr -> String" "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- ungetch(ch) -> nil" "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- setpos(y, x) -> nil" "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- standout ->nil" "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- standend -> nil" "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- addch(ch) -> nil" "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- insch(ch) -> nil" "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- addstr(str) -> nil" "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- delch -> nil" "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- deleteln -> nil" "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- lines -> Integer" "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- cols -> Integer" "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- inch -> Integer" "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- clrtoeol -> nil" "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- insertln -> nil" "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- def_prog_mode -> bool" "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- reset_prog_mode -> bool" "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- timeout=(delay)" "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- attroff(attrs) -> Integer" "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- attron(attron) -> Integer" "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- attrset(attrs) -> Integer" "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- bkgd(ch) -> bool" "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- bkgdset(ch) -> nil" "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- can_change_color? -> bool" "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- colors -> Integer" "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- color_content(color) -> Array" "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- color_pair(attrs) -> Integer" "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- color_pairs -> Integer" "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- curs_set(visibility) -> Integer | nil" "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- delch -> nil" "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- getmouse -> Integer | nil" "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- has_colors? -> bool" "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- init_color(color, r, g, b) -> bool" "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- init_pair(pair, f, b) -> bool" "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- keyname(c) -> String | nil" "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- mouseinterval(interval) -> bool" "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- mousemask(mask) -> Integer" "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- pair_content(pair) -> Array" "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- pair_number(attrs) -> Integer" "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- resizeterm(lines, cols) -> bool | nil" "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- resize(lines, cols) -> bool | nil" "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- scrl(num) -> bool" "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- setscrreg(top, bottom) -> bool" "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "+top+ and +bottom+ are lines numbers of the margin." "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- start_color -> bool" "+top+ and +bottom+ are lines numbers of the margin." "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- ungetmouse(mevent) -> bool" "+top+ and +bottom+ are lines numbers of the margin." "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- ESCDELAY -> Integer" "+top+ and +bottom+ are lines numbers of the margin." "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- ESCDELAY=(val)" "+top+ and +bottom+ are lines numbers of the margin." "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- TABSIZE -> Integer" "+top+ and +bottom+ are lines numbers of the margin." "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- TABSIZE=(val)" "+top+ and +bottom+ are lines numbers of the margin." "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "--- use_default_colors -> nil" "+top+ and +bottom+ are lines numbers of the margin." "== Module Functions" "= module Curses" "refm/api/src/curses.rd")
(find-rurima "=== 使い方" "refm/api/src/mkmf.rd")
(find-rurima "=== configure オプション" "refm/api/src/mkmf.rd")
(find-rurima "=== depend ファイル" "refm/api/src/mkmf.rd")
(find-rurima "=== extconf.rb が生成する make ターゲット" "refm/api/src/mkmf.rd")
(find-rurima "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- xsystem(command, opts = nil) -> ()" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- xsystem(command) -> ()" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- xpopen(command, *mode) -> IO" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- xpopen(command, *mode){ ... } -> opbject" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- log_src(src) -> ()" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- create_tmpsrc(src) -> String" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- have_devel? -> bool" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- try_do(src, command, *opts) -> ()" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- try_do(src, command, *opts){ ... } -> ()" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- link_command(ldflags, opt = \"\", libpath = $DEFLIBPATH|$LIBPATH) -> String" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- cc_command(opt = \"\") -> String" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- cpp_command(outfile, opt = \"\") -> String" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- libpathflag(libpath = $DEFLIBPATH|$LIBPATH) -> String" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- with_werror(opt, opts = nil){|opt| ... } -> object" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- with_werror(opt, opts = nil){|opt, opts| ... } -> object" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- rm_f(*files) -> ()" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- rm_rf(*files) -> ()" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- modified?(target, times) -> Time | nil" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- merge_libs(*libs) -> [String]" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- try_link(src, opt = \"\", *options) -> bool" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- try_link(src, opt = \"\", *options){ ... } -> bool" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- try_cpp(src, opt = \"\", *opts) -> bool" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- try_cpp(src, opt = \"\", *opts){ ... } -> bool" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- egrep_cpp(pattern, src, opt = \"\") -> bool" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- egrep_cpp(pattern, src, opt = \"\"){ ... } -> bool" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- try_run(src, opt = \"\") -> bool" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- try_run(src, opt = \"\"){ ... } -> bool" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- install_rb(mfile, dest, srcdir = nil) -> Array" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- have_macro(macro, headers = nil, opt = \"\") -> bool" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- have_macro(macro, headers = nil, opt = \"\"){ ... } -> bool" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- have_library(lib, func = nil, headers = nil) -> bool" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- have_library(lib, func = nil, headers = nil){ ... } -> bool" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- find_library(lib, func, *paths) -> bool" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- find_library(lib, func, *paths){ ... } -> bool" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- find_header(header, *paths) -> bool" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- have_func(func, headers = nil) -> bool" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- have_func(func, headers = nil){ ... } -> bool" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- have_header(header, preheaders = nil) -> bool" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- have_header(header, preheaders = nil){ ... } -> bool" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- have_header(header, preheaders = nil) -> bool" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- have_header(header, preheaders = nil){ ... } -> bool" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- have_struct_member(type, member, headers = nil) -> bool" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- have_struct_member(type, member, headers = nil){ ... } -> bool" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- have_type(type, headers = nil, opt = \"\") -> bool" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- have_type(type, headers = nil, opt = \"\"){ ... } -> bool" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- find_type(type, opt, *headers) -> Array" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- find_type(type, opt, *headers){ ... } -> Array" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- have_var(var, headers = nil) -> bool" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- have_var(var, headers = nil){ ... } -> bool" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- have_framework(framework) -> bool" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- have_framework(framework){ ... } -> bool" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- check_sizeof(type, headers = nil) -> Integer | nil" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- check_sizeof(type, headers = nil){ ... } -> Integer | nil" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- check_signedness(type, headers = nil, opts = nil) -> \"signed\" | \"unsigned\" | nil" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- check_signedness(type, headers = nil, opts = nil){ ... } -> \"signed\" | \"unsigned\" | nil" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- convertible_int(type, headers = nil, opts = nil)" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- convertible_int(type, headers = nil, opts = nil){ ... }" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- with_config(config, default = nil) -> bool | String" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- with_config(config, default = nil){|config, default| ... } -> bool | String" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- enable_config(config, default) -> bool | String" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- enable_config(config, default){|config, default| ... } -> bool | String" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- create_header(header = \"extconf.h\") -> String" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- dir_config(target, idefault = nil, ldefault = nil) -> [String, String]" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- create_makefile(target, srcprefix = nil) -> true" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- find_executable(bin, path = nil) -> String | nil" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- dummy_makefile(srcdir) -> String" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- depend_rules(depend) -> Array" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- try_run(src, opt = \"\") -> bool | nil" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- try_run(src, opt = \"\"){ ... } -> bool | nil" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- try_compile(src, opt = \"\", *opts) -> bool" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- try_compile(src, opt = \"\", *opts){ ... } -> bool" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- try_static_assert(expr, headers = nil, opt = \"\") -> bool" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- try_static_assert(expr, headers = nil, opt = \"\"){ ... } -> bool" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- try_constant(const, headers = nil, opt = \"\") -> Integer | nil" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- try_constant(const, headers = nil, opt = \"\"){ ... } -> Integer | nil" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- try_func(func, libs, headers = nil) -> bool" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- try_func(func, libs, headers = nil){ ... } -> bool" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- try_var(var, headers = nil) -> bool" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- try_var(var, headers = nil){ ... } -> bool" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- try_type(type, headers = nil, opt = \"\") -> bool" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- try_type(type, headers = nil, opt = \"\"){ ... } -> bool" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- install_files(mfile, ifiles, map = nil, srcprefix = nil) -> []" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- message(format, *arg) -> nil" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "== Constants" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- CONFIG -> Hash" "== Constants" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "== Special Variables" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- $srcdir -> String" "== Special Variables" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- $libdir -> String" "== Special Variables" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- $archdir -> String" "== Special Variables" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- $sitelibdir -> String" "== Special Variables" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- $sitearchdir -> String" "== Special Variables" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- $hdrdir -> String" "== Special Variables" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- $topdir -> String" "== Special Variables" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- $defs -> [String]" "== Special Variables" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- $libs -> String" "== Special Variables" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- $CFLAGS -> String" "== Special Variables" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "--- $LDFLAGS -> String" "== Special Variables" "= reopen Kernel" "refm/api/src/mkmf.rd")
(find-rurima "= class URI::Generic" "refm/api/src/uri/Generic")
(find-rurima "== Class Methods" "= class URI::Generic" "refm/api/src/uri/Generic")
(find-rurima "--- default_port    -> Integer | nil" "== Class Methods" "= class URI::Generic" "refm/api/src/uri/Generic")
(find-rurima "--- component     -> [Symbol]" "== Class Methods" "= class URI::Generic" "refm/api/src/uri/Generic")
(find-rurima "--- use_registry    -> bool" "== Class Methods" "= class URI::Generic" "refm/api/src/uri/Generic")
(find-rurima "--- build2(ary)     -> URI::Generic" "== Class Methods" "= class URI::Generic" "refm/api/src/uri/Generic")
(find-rurima "--- build2(hash)    -> URI::Generic" "== Class Methods" "= class URI::Generic" "refm/api/src/uri/Generic")
(find-rurima "--- build(ary)     -> URI::Generic" "== Class Methods" "= class URI::Generic" "refm/api/src/uri/Generic")
(find-rurima "--- build(hash)    -> URI::Generic" "== Class Methods" "= class URI::Generic" "refm/api/src/uri/Generic")
(find-rurima "--- new(scheme, userinfo, host, port, registry, path, opaque, query, fragment, arg_check = false)    -> URI::Generic" "== Class Methods" "= class URI::Generic" "refm/api/src/uri/Generic")
(find-rurima "== Instance Methods" "= class URI::Generic" "refm/api/src/uri/Generic")
(find-rurima "--- default_port     -> Integer | nil" "== Instance Methods" "= class URI::Generic" "refm/api/src/uri/Generic")
(find-rurima "--- component     -> [Symbol]" "== Instance Methods" "= class URI::Generic" "refm/api/src/uri/Generic")
(find-rurima "--- scheme    -> String | nil" "== Instance Methods" "= class URI::Generic" "refm/api/src/uri/Generic")
(find-rurima "--- scheme=(s)" "== Instance Methods" "= class URI::Generic" "refm/api/src/uri/Generic")
(find-rurima "--- userinfo    -> String | nil" "== Instance Methods" "= class URI::Generic" "refm/api/src/uri/Generic")
(find-rurima "--- userinfo=(s)" "== Instance Methods" "= class URI::Generic" "refm/api/src/uri/Generic")
(find-rurima "--- user    -> String | nil" "== Instance Methods" "= class URI::Generic" "refm/api/src/uri/Generic")
(find-rurima "--- user=(s)" "== Instance Methods" "= class URI::Generic" "refm/api/src/uri/Generic")
(find-rurima "--- password    -> String | nil" "== Instance Methods" "= class URI::Generic" "refm/api/src/uri/Generic")
(find-rurima "--- password=(s)" "== Instance Methods" "= class URI::Generic" "refm/api/src/uri/Generic")
(find-rurima "--- host    -> String | nil" "== Instance Methods" "= class URI::Generic" "refm/api/src/uri/Generic")
(find-rurima "--- host=(s)" "== Instance Methods" "= class URI::Generic" "refm/api/src/uri/Generic")
(find-rurima "--- port     -> String | nil" "== Instance Methods" "= class URI::Generic" "refm/api/src/uri/Generic")
(find-rurima "--- port=(s)" "== Instance Methods" "= class URI::Generic" "refm/api/src/uri/Generic")
(find-rurima "--- registry    -> String | nil" "== Instance Methods" "= class URI::Generic" "refm/api/src/uri/Generic")
(find-rurima "--- registry=(s)" "== Instance Methods" "= class URI::Generic" "refm/api/src/uri/Generic")
(find-rurima "--- path     -> String | nil" "== Instance Methods" "= class URI::Generic" "refm/api/src/uri/Generic")
(find-rurima "--- path=(s)" "== Instance Methods" "= class URI::Generic" "refm/api/src/uri/Generic")
(find-rurima "--- query     -> String | nil" "== Instance Methods" "= class URI::Generic" "refm/api/src/uri/Generic")
(find-rurima "--- query=(s)" "== Instance Methods" "= class URI::Generic" "refm/api/src/uri/Generic")
(find-rurima "--- opaque     -> String | nil" "== Instance Methods" "= class URI::Generic" "refm/api/src/uri/Generic")
(find-rurima "--- opaque=(s)" "== Instance Methods" "= class URI::Generic" "refm/api/src/uri/Generic")
(find-rurima "--- fragment     -> String | nil" "== Instance Methods" "= class URI::Generic" "refm/api/src/uri/Generic")
(find-rurima "--- fragment=(s)" "== Instance Methods" "= class URI::Generic" "refm/api/src/uri/Generic")
(find-rurima "--- hierarchical?    -> bool" "== Instance Methods" "= class URI::Generic" "refm/api/src/uri/Generic")
(find-rurima "--- absolute     -> bool" "== Instance Methods" "= class URI::Generic" "refm/api/src/uri/Generic")
(find-rurima "--- absolute?    -> bool" "== Instance Methods" "= class URI::Generic" "refm/api/src/uri/Generic")
(find-rurima "--- relative?    -> bool" "== Instance Methods" "= class URI::Generic" "refm/api/src/uri/Generic")
(find-rurima "--- merge!(rel)    -> self" "== Instance Methods" "= class URI::Generic" "refm/api/src/uri/Generic")
(find-rurima "--- merge(rel)     -> URI::Generic" "== Instance Methods" "= class URI::Generic" "refm/api/src/uri/Generic")
(find-rurima "--- +(rel)         -> URI::Generic" "== Instance Methods" "= class URI::Generic" "refm/api/src/uri/Generic")
(find-rurima "--- route_from(src)    -> URI::Generic" "== Instance Methods" "= class URI::Generic" "refm/api/src/uri/Generic")
(find-rurima "--- -(src)             -> URI::Generic" "== Instance Methods" "= class URI::Generic" "refm/api/src/uri/Generic")
(find-rurima "--- route_to(dst)     -> URI::Generic" "== Instance Methods" "= class URI::Generic" "refm/api/src/uri/Generic")
(find-rurima "--- normalize     -> URI::Generic" "== Instance Methods" "= class URI::Generic" "refm/api/src/uri/Generic")
(find-rurima "--- normalize!    -> nil" "== Instance Methods" "= class URI::Generic" "refm/api/src/uri/Generic")
(find-rurima "--- to_s      -> String" "== Instance Methods" "= class URI::Generic" "refm/api/src/uri/Generic")
(find-rurima "--- ==(uri)    -> bool" "== Instance Methods" "= class URI::Generic" "refm/api/src/uri/Generic")
(find-rurima "--- select(*components)    -> [String]" "== Instance Methods" "= class URI::Generic" "refm/api/src/uri/Generic")
(find-rurima "= class URI::HTTP < URI::Generic" "refm/api/src/uri/HTTP")
(find-rurima "== Class Methods" "= class URI::HTTP < URI::Generic" "refm/api/src/uri/HTTP")
(find-rurima "--- build(ary)     -> URI::HTTP" "== Class Methods" "= class URI::HTTP < URI::Generic" "refm/api/src/uri/HTTP")
(find-rurima "--- build(hash)    -> URI::HTTP" "== Class Methods" "= class URI::HTTP < URI::Generic" "refm/api/src/uri/HTTP")
(find-rurima "--- new(scheme, userinfo, host, port, registry, path, opaque, query, fragment, arg_check = false)     -> URI::HTTP   " "== Class Methods" "= class URI::HTTP < URI::Generic" "refm/api/src/uri/HTTP")
(find-rurima "== Instance Methods" "= class URI::HTTP < URI::Generic" "refm/api/src/uri/HTTP")
(find-rurima "--- request_uri     -> String" "== Instance Methods" "= class URI::HTTP < URI::Generic" "refm/api/src/uri/HTTP")
(find-rurima "= class URI::HTTPS < URI::HTTP" "refm/api/src/uri/HTTP")
(find-rurima "= class URI::MailTo < URI::Generic" "refm/api/src/uri/MailTo")
(find-rurima "== Class Methods" "= class URI::MailTo < URI::Generic" "refm/api/src/uri/MailTo")
(find-rurima "--- build(ary)     -> URI::MailTo " "== Class Methods" "= class URI::MailTo < URI::Generic" "refm/api/src/uri/MailTo")
(find-rurima "--- build(hash)    -> URI::MailTo " "== Class Methods" "= class URI::MailTo < URI::Generic" "refm/api/src/uri/MailTo")
(find-rurima "--- new(scheme, userinfo, host, port, registry, path, opaque, query, fragment, arg_check = false)    -> URI::MailTo" "== Class Methods" "= class URI::MailTo < URI::Generic" "refm/api/src/uri/MailTo")
(find-rurima "== Instance Methods" "= class URI::MailTo < URI::Generic" "refm/api/src/uri/MailTo")
(find-rurima "--- to         -> String" "== Instance Methods" "= class URI::MailTo < URI::Generic" "refm/api/src/uri/MailTo")
(find-rurima "--- to=(s) " "== Instance Methods" "= class URI::MailTo < URI::Generic" "refm/api/src/uri/MailTo")
(find-rurima "--- headers        -> [[String]]" "== Instance Methods" "= class URI::MailTo < URI::Generic" "refm/api/src/uri/MailTo")
(find-rurima "--- headers=(s)" "== Instance Methods" "= class URI::MailTo < URI::Generic" "refm/api/src/uri/MailTo")
(find-rurima "--- to_mailtext      -> String" "== Instance Methods" "= class URI::MailTo < URI::Generic" "refm/api/src/uri/MailTo")
(find-rurima "--- to_rfc822text    -> String" "== Instance Methods" "= class URI::MailTo < URI::Generic" "refm/api/src/uri/MailTo")
(find-rurima "= module URI" "refm/api/src/uri/URI")
(find-rurima "== Singleton Methods" "= module URI" "refm/api/src/uri/URI")
(find-rurima "--- split(url)    -> [String | nil]" "== Singleton Methods" "= module URI" "refm/api/src/uri/URI")
(find-rurima "--- parse(uri_str)    -> object" "== Singleton Methods" "= module URI" "refm/api/src/uri/URI")
(find-rurima "--- join(uri_str, *path)    -> object" "== Singleton Methods" "= module URI" "refm/api/src/uri/URI")
(find-rurima "--- extract(str)                               -> [String]" "== Singleton Methods" "= module URI" "refm/api/src/uri/URI")
(find-rurima "--- extract(str, schemes)                      -> [String]" "== Singleton Methods" "= module URI" "refm/api/src/uri/URI")
(find-rurima "--- extract(str) {|uri_str| ... }              -> nil" "== Singleton Methods" "= module URI" "refm/api/src/uri/URI")
(find-rurima "--- extract(str, schemes) {|uri_str| ... }     -> nil" "== Singleton Methods" "= module URI" "refm/api/src/uri/URI")
(find-rurima "--- regexp             -> Regexp" "== Singleton Methods" "= module URI" "refm/api/src/uri/URI")
(find-rurima "--- regexp(schemes)    -> Regexp" "== Singleton Methods" "= module URI" "refm/api/src/uri/URI")
(find-rurima "--- escape(str, unsafe = URI::UNSAFE)    -> String" "== Singleton Methods" "= module URI" "refm/api/src/uri/URI")
(find-rurima "--- encode(str, unsafe = URI::UNSAFE)    -> String" "== Singleton Methods" "= module URI" "refm/api/src/uri/URI")
(find-rurima "--- unescape(str)    -> String" "== Singleton Methods" "= module URI" "refm/api/src/uri/URI")
(find-rurima "--- decode(str)      -> String" "== Singleton Methods" "= module URI" "refm/api/src/uri/URI")
(find-rurima "--- decode_www_form(str, enc=Encoding::UTF_8) -> [[String, String]]" "== Singleton Methods" "= module URI" "refm/api/src/uri/URI")
(find-rurima "--- decode_www_form_component(str, enc=Encoding::UTF_8) -> String" "== Singleton Methods" "= module URI" "refm/api/src/uri/URI")
(find-rurima "--- encode_www_form(enum) -> String" "== Singleton Methods" "= module URI" "refm/api/src/uri/URI")
(find-rurima "--- encode_www_form_component(str) -> String" "== Singleton Methods" "= module URI" "refm/api/src/uri/URI")
(find-rurima "== Constants" "= module URI" "refm/api/src/uri/URI")
(find-rurima "--- UNSAFE -> Regexp" "== Constants" "= module URI" "refm/api/src/uri/URI")
(find-rurima "= class URI::LDAP < URI::Generic" "refm/api/src/uri/LDAP")
(find-rurima "== Class Methods" "= class URI::LDAP < URI::Generic" "refm/api/src/uri/LDAP")
(find-rurima "--- build(ary)   -> URI::LDAP" "== Class Methods" "= class URI::LDAP < URI::Generic" "refm/api/src/uri/LDAP")
(find-rurima "--- build(hash)  -> URI::LDAP" "== Class Methods" "= class URI::LDAP < URI::Generic" "refm/api/src/uri/LDAP")
(find-rurima "--- new(scheme, userinfo, host, port, registry, path, opaque, query, fragment, arg_check = false)   -> URI::LDAP" "== Class Methods" "= class URI::LDAP < URI::Generic" "refm/api/src/uri/LDAP")
(find-rurima "== Instance Methods" "= class URI::LDAP < URI::Generic" "refm/api/src/uri/LDAP")
(find-rurima "--- dn    -> String" "== Instance Methods" "= class URI::LDAP < URI::Generic" "refm/api/src/uri/LDAP")
(find-rurima "--- dn=(s)" "== Instance Methods" "= class URI::LDAP < URI::Generic" "refm/api/src/uri/LDAP")
(find-rurima "--- attributes    -> String" "== Instance Methods" "= class URI::LDAP < URI::Generic" "refm/api/src/uri/LDAP")
(find-rurima "--- attributes=(s)" "== Instance Methods" "= class URI::LDAP < URI::Generic" "refm/api/src/uri/LDAP")
(find-rurima "--- scope    -> String" "== Instance Methods" "= class URI::LDAP < URI::Generic" "refm/api/src/uri/LDAP")
(find-rurima "--- scope=(s)" "== Instance Methods" "= class URI::LDAP < URI::Generic" "refm/api/src/uri/LDAP")
(find-rurima "--- filter    -> String" "== Instance Methods" "= class URI::LDAP < URI::Generic" "refm/api/src/uri/LDAP")
(find-rurima "--- filter=(s)" "== Instance Methods" "= class URI::LDAP < URI::Generic" "refm/api/src/uri/LDAP")
(find-rurima "--- extensions    -> String" "== Instance Methods" "= class URI::LDAP < URI::Generic" "refm/api/src/uri/LDAP")
(find-rurima "--- extensions=(s)" "== Instance Methods" "= class URI::LDAP < URI::Generic" "refm/api/src/uri/LDAP")
(find-rurima "= class URI::FTP < URI::Generic" "refm/api/src/uri/FTP")
(find-rurima "== Class Methods" "= class URI::FTP < URI::Generic" "refm/api/src/uri/FTP")
(find-rurima "--- build(ary)     -> URI::FTP" "== Class Methods" "= class URI::FTP < URI::Generic" "refm/api/src/uri/FTP")
(find-rurima "--- build(hash)    -> URI::FTP" "== Class Methods" "= class URI::FTP < URI::Generic" "refm/api/src/uri/FTP")
(find-rurima "--- new(scheme, userinfo, host, port, registry, path, opaque, query, fragment, arg_check = false)    -> URI::FTP" "== Class Methods" "= class URI::FTP < URI::Generic" "refm/api/src/uri/FTP")
(find-rurima "--- new2(user, password, host, port, path, typecode = nil, arg_check = true)    -> URI::FTP" "== Class Methods" "= class URI::FTP < URI::Generic" "refm/api/src/uri/FTP")
(find-rurima "== Instance Methods" "= class URI::FTP < URI::Generic" "refm/api/src/uri/FTP")
(find-rurima "--- typecode      -> String | nil" "== Instance Methods" "= class URI::FTP < URI::Generic" "refm/api/src/uri/FTP")
(find-rurima "--- typecode=(t)" "== Instance Methods" "= class URI::FTP < URI::Generic" "refm/api/src/uri/FTP")
(find-rurima "= class URI::LDAPS < URI::LDAP" "refm/api/src/uri/LDAPS")
(find-rurima "== Constants" "= class URI::LDAPS < URI::LDAP" "refm/api/src/uri/LDAPS")
(find-rurima "--- DEFAULT_PORT -> Integer" "== Constants" "= class URI::LDAPS < URI::LDAP" "refm/api/src/uri/LDAPS")
(find-rurima "= class CSV::StringReader < CSV::Reader" "refm/api/src/csv/CSV__StringReader")
(find-rurima "== Class Methods" "= class CSV::StringReader < CSV::Reader" "refm/api/src/csv/CSV__StringReader")
(find-rurima "--- new(string, fs = ',', rs = nil) -> CSV::StringReader" "== Class Methods" "= class CSV::StringReader < CSV::Reader" "refm/api/src/csv/CSV__StringReader")
(find-rurima "== Private Instance Methods" "= class CSV::StringReader < CSV::Reader" "refm/api/src/csv/CSV__StringReader")
(find-rurima "--- get_row(row) -> Fixnum" "== Private Instance Methods" "= class CSV::StringReader < CSV::Reader" "refm/api/src/csv/CSV__StringReader")
(find-rurima "= class CSV::Writer < Object" "refm/api/src/csv/CSV__Writer")
(find-rurima "== Class Methods" "= class CSV::Writer < Object" "refm/api/src/csv/CSV__Writer")
(find-rurima "--- generate(str_or_writable, fs = ',', rs = nil) -> CSV::BasicWriter" "== Class Methods" "= class CSV::Writer < Object" "refm/api/src/csv/CSV__Writer")
(find-rurima "--- generate(str_or_writable, fs = ',', rs = nil) { |row| ... } -> nil" "== Class Methods" "= class CSV::Writer < Object" "refm/api/src/csv/CSV__Writer")
(find-rurima "--- create(str_or_writable, fs = ',', rs = nil) -> CSV::BasicWriter" "== Class Methods" "= class CSV::Writer < Object" "refm/api/src/csv/CSV__Writer")
(find-rurima "== Instance Methods" "= class CSV::Writer < Object" "refm/api/src/csv/CSV__Writer")
(find-rurima "--- <<(row) -> CSV::BasicWriter" "== Instance Methods" "= class CSV::Writer < Object" "refm/api/src/csv/CSV__Writer")
(find-rurima "--- add_row(row) -> CSV::BasicWriter" "== Instance Methods" "= class CSV::Writer < Object" "refm/api/src/csv/CSV__Writer")
(find-rurima "===== 注意" "== Instance Methods" "= class CSV::Writer < Object" "refm/api/src/csv/CSV__Writer")
(find-rurima "--- close -> nil" "===== 注意" "== Instance Methods" "= class CSV::Writer < Object" "refm/api/src/csv/CSV__Writer")
(find-rurima "== Private Instance Methods" "= class CSV::Writer < Object" "refm/api/src/csv/CSV__Writer")
(find-rurima "--- terminate -> nil" "== Private Instance Methods" "= class CSV::Writer < Object" "refm/api/src/csv/CSV__Writer")
(find-rurima "= class CSV::Row < Object" "refm/api/src/csv/CSV__Row")
(find-rurima "== Singleton Methods" "= class CSV::Row < Object" "refm/api/src/csv/CSV__Row")
(find-rurima "--- new(headers, fields, header_row = false) -> CSV::Row" "== Singleton Methods" "= class CSV::Row < Object" "refm/api/src/csv/CSV__Row")
(find-rurima "== Instance Methods" "= class CSV::Row < Object" "refm/api/src/csv/CSV__Row")
(find-rurima "--- <<(arg) -> self" "== Instance Methods" "= class CSV::Row < Object" "refm/api/src/csv/CSV__Row")
(find-rurima "--- ==(other) -> bool" "== Instance Methods" "= class CSV::Row < Object" "refm/api/src/csv/CSV__Row")
(find-rurima "--- field(header_or_index, minimum_index = 0) -> object | nil" "== Instance Methods" "= class CSV::Row < Object" "refm/api/src/csv/CSV__Row")
(find-rurima "--- [](header_or_index, minimum_index = 0) -> object | nil" "== Instance Methods" "= class CSV::Row < Object" "refm/api/src/csv/CSV__Row")
(find-rurima "--- []=(header_or_index, value)" "== Instance Methods" "= class CSV::Row < Object" "refm/api/src/csv/CSV__Row")
(find-rurima "--- []=(header, offset, value)" "== Instance Methods" "= class CSV::Row < Object" "refm/api/src/csv/CSV__Row")
(find-rurima "--- delete(header_or_index, minimum_index = 0) -> [object, object] | nil" "== Instance Methods" "= class CSV::Row < Object" "refm/api/src/csv/CSV__Row")
(find-rurima "--- delete_if{|header, field| ... } -> self" "== Instance Methods" "= class CSV::Row < Object" "refm/api/src/csv/CSV__Row")
(find-rurima "--- each{|header, field| ... } -> self" "== Instance Methods" "= class CSV::Row < Object" "refm/api/src/csv/CSV__Row")
(find-rurima "--- empty? -> bool" "== Instance Methods" "= class CSV::Row < Object" "refm/api/src/csv/CSV__Row")
(find-rurima "--- field?(data) -> bool" "== Instance Methods" "= class CSV::Row < Object" "refm/api/src/csv/CSV__Row")
(find-rurima "--- field_row? -> bool" "== Instance Methods" "= class CSV::Row < Object" "refm/api/src/csv/CSV__Row")
(find-rurima "--- fields(*headers_and_or_indices) -> Array" "== Instance Methods" "= class CSV::Row < Object" "refm/api/src/csv/CSV__Row")
(find-rurima "--- values_at(*headers_and_or_indices) -> Array" "== Instance Methods" "= class CSV::Row < Object" "refm/api/src/csv/CSV__Row")
(find-rurima "--- header?(name) -> bool" "== Instance Methods" "= class CSV::Row < Object" "refm/api/src/csv/CSV__Row")
(find-rurima "--- include?(name) -> bool" "== Instance Methods" "= class CSV::Row < Object" "refm/api/src/csv/CSV__Row")
(find-rurima "--- header_row? -> bool" "== Instance Methods" "= class CSV::Row < Object" "refm/api/src/csv/CSV__Row")
(find-rurima "--- headers -> Array" "== Instance Methods" "= class CSV::Row < Object" "refm/api/src/csv/CSV__Row")
(find-rurima "--- index(header, minimum_index = 0) -> Fixnum" "== Instance Methods" "= class CSV::Row < Object" "refm/api/src/csv/CSV__Row")
(find-rurima "--- inspect -> String" "== Instance Methods" "= class CSV::Row < Object" "refm/api/src/csv/CSV__Row")
(find-rurima "--- length -> Fixnum" "== Instance Methods" "= class CSV::Row < Object" "refm/api/src/csv/CSV__Row")
(find-rurima "--- size -> Fixnum" "== Instance Methods" "= class CSV::Row < Object" "refm/api/src/csv/CSV__Row")
(find-rurima "--- push(*args) -> self" "== Instance Methods" "= class CSV::Row < Object" "refm/api/src/csv/CSV__Row")
(find-rurima "--- to_csv -> String" "== Instance Methods" "= class CSV::Row < Object" "refm/api/src/csv/CSV__Row")
(find-rurima "--- to_s -> String" "== Instance Methods" "= class CSV::Row < Object" "refm/api/src/csv/CSV__Row")
(find-rurima "--- to_hash -> Hash" "== Instance Methods" "= class CSV::Row < Object" "refm/api/src/csv/CSV__Row")
(find-rurima "== Protected Instance Methods" "= class CSV::Row < Object" "refm/api/src/csv/CSV__Row")
(find-rurima "--- row -> Array" "== Protected Instance Methods" "= class CSV::Row < Object" "refm/api/src/csv/CSV__Row")
(find-rurima "= class CSV::Row < Array" "refm/api/src/csv/CSV__Row")
(find-rurima "== Instance Methods" "= class CSV::Row < Array" "refm/api/src/csv/CSV__Row")
(find-rurima "--- match(rhs) -> bool" "== Instance Methods" "= class CSV::Row < Array" "refm/api/src/csv/CSV__Row")
(find-rurima "===== 注意" "== Instance Methods" "= class CSV::Row < Array" "refm/api/src/csv/CSV__Row")
(find-rurima "--- to_a -> Array" "===== 注意" "== Instance Methods" "= class CSV::Row < Array" "refm/api/src/csv/CSV__Row")
(find-rurima "===== 注意" "== Instance Methods" "= class CSV::Row < Array" "refm/api/src/csv/CSV__Row")
(find-rurima "= class CSV::StreamBuf" "refm/api/src/csv/CSV__StreamBuf")
(find-rurima "== Constants" "= class CSV::StreamBuf" "refm/api/src/csv/CSV__StreamBuf")
(find-rurima "--- BufSize" "== Constants" "= class CSV::StreamBuf" "refm/api/src/csv/CSV__StreamBuf")
(find-rurima "== Class Methods" "= class CSV::StreamBuf" "refm/api/src/csv/CSV__StreamBuf")
(find-rurima "--- new -> self" "== Class Methods" "= class CSV::StreamBuf" "refm/api/src/csv/CSV__StreamBuf")
(find-rurima "===== 注意" "== Class Methods" "= class CSV::StreamBuf" "refm/api/src/csv/CSV__StreamBuf")
(find-rurima "== Instance Methods" "= class CSV::StreamBuf" "refm/api/src/csv/CSV__StreamBuf")
(find-rurima "--- [](idx, n = nil) -> String" "== Instance Methods" "= class CSV::StreamBuf" "refm/api/src/csv/CSV__StreamBuf")
(find-rurima "--- drop(n) -> Fixnum" "== Instance Methods" "= class CSV::StreamBuf" "refm/api/src/csv/CSV__StreamBuf")
(find-rurima "===== 注意" "== Instance Methods" "= class CSV::StreamBuf" "refm/api/src/csv/CSV__StreamBuf")
(find-rurima "--- is_eos? -> bool" "===== 注意" "== Instance Methods" "= class CSV::StreamBuf" "refm/api/src/csv/CSV__StreamBuf")
(find-rurima "== Protected Instance Methods" "= class CSV::StreamBuf" "refm/api/src/csv/CSV__StreamBuf")
(find-rurima "--- terminate -> nil" "== Protected Instance Methods" "= class CSV::StreamBuf" "refm/api/src/csv/CSV__StreamBuf")
(find-rurima "--- read(size) -> []" "== Protected Instance Methods" "= class CSV::StreamBuf" "refm/api/src/csv/CSV__StreamBuf")
(find-rurima "== Private Instance Methods" "= class CSV::StreamBuf" "refm/api/src/csv/CSV__StreamBuf")
(find-rurima "--- buf_size(idx) -> Fixnum" "== Private Instance Methods" "= class CSV::StreamBuf" "refm/api/src/csv/CSV__StreamBuf")
(find-rurima "--- add_buf -> bool" "== Private Instance Methods" "= class CSV::StreamBuf" "refm/api/src/csv/CSV__StreamBuf")
(find-rurima "--- rel_buf -> bool" "== Private Instance Methods" "= class CSV::StreamBuf" "refm/api/src/csv/CSV__StreamBuf")
(find-rurima "--- idx_is_eos?(idx)" "== Private Instance Methods" "= class CSV::StreamBuf" "refm/api/src/csv/CSV__StreamBuf")
(find-rurima "= class CSV::IllegalFormatError < RuntimeError" "refm/api/src/csv/CSV__IllegalFormatError")
(find-rurima "= class CSV::IOBuf < CSV::StreamBuf" "refm/api/src/csv/CSV__IOBuf")
(find-rurima "== Class Methods" "= class CSV::IOBuf < CSV::StreamBuf" "refm/api/src/csv/CSV__IOBuf")
(find-rurima "--- new(s) -> self" "== Class Methods" "= class CSV::IOBuf < CSV::StreamBuf" "refm/api/src/csv/CSV__IOBuf")
(find-rurima "== Instance Methods" "= class CSV::IOBuf < CSV::StreamBuf" "refm/api/src/csv/CSV__IOBuf")
(find-rurima "--- close -> nil" "== Instance Methods" "= class CSV::IOBuf < CSV::StreamBuf" "refm/api/src/csv/CSV__IOBuf")
(find-rurima "== Private Instance Methods" "= class CSV::IOBuf < CSV::StreamBuf" "refm/api/src/csv/CSV__IOBuf")
(find-rurima "--- read(size) -> ()" "== Private Instance Methods" "= class CSV::IOBuf < CSV::StreamBuf" "refm/api/src/csv/CSV__IOBuf")
(find-rurima "--- terminate -> nil" "== Private Instance Methods" "= class CSV::IOBuf < CSV::StreamBuf" "refm/api/src/csv/CSV__IOBuf")
(find-rurima "= class CSV::Table < Object" "refm/api/src/csv/CSV__Table")
(find-rurima "=== アクセスモード" "= class CSV::Table < Object" "refm/api/src/csv/CSV__Table")
(find-rurima "== Singleton Methods" "= class CSV::Table < Object" "refm/api/src/csv/CSV__Table")
(find-rurima "--- new(array_of_rows) -> CSV::Table" "== Singleton Methods" "= class CSV::Table < Object" "refm/api/src/csv/CSV__Table")
(find-rurima "== Instance Methods" "= class CSV::Table < Object" "refm/api/src/csv/CSV__Table")
(find-rurima "--- <<(row_or_array) -> self" "== Instance Methods" "= class CSV::Table < Object" "refm/api/src/csv/CSV__Table")
(find-rurima "--- ==(other) -> bool" "== Instance Methods" "= class CSV::Table < Object" "refm/api/src/csv/CSV__Table")
(find-rurima "--- [](index_or_header) -> object" "== Instance Methods" "= class CSV::Table < Object" "refm/api/src/csv/CSV__Table")
(find-rurima "--- []=(index_or_header, value)" "== Instance Methods" "= class CSV::Table < Object" "refm/api/src/csv/CSV__Table")
(find-rurima "--- by_col -> CSV::Table" "== Instance Methods" "= class CSV::Table < Object" "refm/api/src/csv/CSV__Table")
(find-rurima "--- by_col! -> self" "== Instance Methods" "= class CSV::Table < Object" "refm/api/src/csv/CSV__Table")
(find-rurima "--- by_col_or_row -> CSV::Table" "== Instance Methods" "= class CSV::Table < Object" "refm/api/src/csv/CSV__Table")
(find-rurima "--- by_col_or_row! -> self" "== Instance Methods" "= class CSV::Table < Object" "refm/api/src/csv/CSV__Table")
(find-rurima "--- by_row -> CSV::Table" "== Instance Methods" "= class CSV::Table < Object" "refm/api/src/csv/CSV__Table")
(find-rurima "--- by_row! -> self" "== Instance Methods" "= class CSV::Table < Object" "refm/api/src/csv/CSV__Table")
(find-rurima "--- delete(index_or_header) -> object" "== Instance Methods" "= class CSV::Table < Object" "refm/api/src/csv/CSV__Table")
(find-rurima "--- delete_if{|row| ... } -> self" "== Instance Methods" "= class CSV::Table < Object" "refm/api/src/csv/CSV__Table")
(find-rurima "--- delete_if{|column_name, values| ... } -> self" "== Instance Methods" "= class CSV::Table < Object" "refm/api/src/csv/CSV__Table")
(find-rurima "--- each{|header, field| ... } -> self" "== Instance Methods" "= class CSV::Table < Object" "refm/api/src/csv/CSV__Table")
(find-rurima "--- each{|column_name, values| ... } -> self" "== Instance Methods" "= class CSV::Table < Object" "refm/api/src/csv/CSV__Table")
(find-rurima "--- empty? -> bool" "== Instance Methods" "= class CSV::Table < Object" "refm/api/src/csv/CSV__Table")
(find-rurima "--- headers -> Array" "== Instance Methods" "= class CSV::Table < Object" "refm/api/src/csv/CSV__Table")
(find-rurima "--- inspect -> String" "== Instance Methods" "= class CSV::Table < Object" "refm/api/src/csv/CSV__Table")
(find-rurima "--- length -> Fixnum" "== Instance Methods" "= class CSV::Table < Object" "refm/api/src/csv/CSV__Table")
(find-rurima "--- size -> Fixnum" "== Instance Methods" "= class CSV::Table < Object" "refm/api/src/csv/CSV__Table")
(find-rurima "--- mode -> Symbol" "== Instance Methods" "= class CSV::Table < Object" "refm/api/src/csv/CSV__Table")
(find-rurima "--- push(*rows) -> self" "== Instance Methods" "= class CSV::Table < Object" "refm/api/src/csv/CSV__Table")
(find-rurima "--- to_a -> [Array]" "== Instance Methods" "= class CSV::Table < Object" "refm/api/src/csv/CSV__Table")
(find-rurima "--- to_csv(options = Hash.new) -> String" "== Instance Methods" "= class CSV::Table < Object" "refm/api/src/csv/CSV__Table")
(find-rurima "--- to_s(options = Hash.new) -> String" "== Instance Methods" "= class CSV::Table < Object" "refm/api/src/csv/CSV__Table")
(find-rurima "--- values_at(indices_or_headers) -> Array" "== Instance Methods" "= class CSV::Table < Object" "refm/api/src/csv/CSV__Table")
(find-rurima "== Protected Instance Methods" "= class CSV::Table < Object" "refm/api/src/csv/CSV__Table")
(find-rurima "--- table -> Array" "== Protected Instance Methods" "= class CSV::Table < Object" "refm/api/src/csv/CSV__Table")
(find-rurima "= class CSV::Cell < String" "refm/api/src/csv/CSV__Cell")
(find-rurima "== Class Methods" "= class CSV::Cell < String" "refm/api/src/csv/CSV__Cell")
(find-rurima "--- new(data = '', is_null = false) -> CSV::Cell" "== Class Methods" "= class CSV::Cell < String" "refm/api/src/csv/CSV__Cell")
(find-rurima "== Instance Methods" "= class CSV::Cell < String" "refm/api/src/csv/CSV__Cell")
(find-rurima "--- ==(rhs) -> bool" "== Instance Methods" "= class CSV::Cell < String" "refm/api/src/csv/CSV__Cell")
(find-rurima "===== 注意" "== Instance Methods" "= class CSV::Cell < String" "refm/api/src/csv/CSV__Cell")
(find-rurima "--- data -> String" "===== 注意" "== Instance Methods" "= class CSV::Cell < String" "refm/api/src/csv/CSV__Cell")
(find-rurima "--- data=(new_data)" "===== 注意" "== Instance Methods" "= class CSV::Cell < String" "refm/api/src/csv/CSV__Cell")
(find-rurima "===== 注意" "== Instance Methods" "= class CSV::Cell < String" "refm/api/src/csv/CSV__Cell")
(find-rurima "--- is_null -> bool" "===== 注意" "== Instance Methods" "= class CSV::Cell < String" "refm/api/src/csv/CSV__Cell")
(find-rurima "===== 注意" "== Instance Methods" "= class CSV::Cell < String" "refm/api/src/csv/CSV__Cell")
(find-rurima "--- is_null=(new_data)" "===== 注意" "== Instance Methods" "= class CSV::Cell < String" "refm/api/src/csv/CSV__Cell")
(find-rurima "===== 注意" "== Instance Methods" "= class CSV::Cell < String" "refm/api/src/csv/CSV__Cell")
(find-rurima "--- match(rhs) -> bool" "===== 注意" "== Instance Methods" "= class CSV::Cell < String" "refm/api/src/csv/CSV__Cell")
(find-rurima "===== 注意" "== Instance Methods" "= class CSV::Cell < String" "refm/api/src/csv/CSV__Cell")
(find-rurima "--- to_s -> String" "===== 注意" "== Instance Methods" "= class CSV::Cell < String" "refm/api/src/csv/CSV__Cell")
(find-rurima "--- to_str -> String" "===== 注意" "== Instance Methods" "= class CSV::Cell < String" "refm/api/src/csv/CSV__Cell")
(find-rurima "===== 注意" "== Instance Methods" "= class CSV::Cell < String" "refm/api/src/csv/CSV__Cell")
(find-rurima "= class CSV::BasicWriter < CSV::Writer" "refm/api/src/csv/CSV__BasicWriter")
(find-rurima "== Class Methods" "= class CSV::BasicWriter < CSV::Writer" "refm/api/src/csv/CSV__BasicWriter")
(find-rurima "--- new(str_or_writable, fs = ',', rs = nil) -> CSV::BasicWriter" "== Class Methods" "= class CSV::BasicWriter < CSV::Writer" "refm/api/src/csv/CSV__BasicWriter")
(find-rurima "== Instance Methods" "= class CSV::BasicWriter < CSV::Writer" "refm/api/src/csv/CSV__BasicWriter")
(find-rurima "--- close_on_terminate -> true" "== Instance Methods" "= class CSV::BasicWriter < CSV::Writer" "refm/api/src/csv/CSV__BasicWriter")
(find-rurima "== Private Instance Methods" "= class CSV::BasicWriter < CSV::Writer" "refm/api/src/csv/CSV__BasicWriter")
(find-rurima "--- terminate -> nil" "== Private Instance Methods" "= class CSV::BasicWriter < CSV::Writer" "refm/api/src/csv/CSV__BasicWriter")
(find-rurima "= class CSV::IOReader < CSV::Reader" "refm/api/src/csv/CSV__IOReader")
(find-rurima "== Class Methods" "= class CSV::IOReader < CSV::Reader" "refm/api/src/csv/CSV__IOReader")
(find-rurima "--- new(io, fs = ',', rs = nil) -> CSV::IOReader" "== Class Methods" "= class CSV::IOReader < CSV::Reader" "refm/api/src/csv/CSV__IOReader")
(find-rurima "== Instance Methods" "= class CSV::IOReader < CSV::Reader" "refm/api/src/csv/CSV__IOReader")
(find-rurima "--- close_on_terminate -> true" "== Instance Methods" "= class CSV::IOReader < CSV::Reader" "refm/api/src/csv/CSV__IOReader")
(find-rurima "== Private Instance Methods" "= class CSV::IOReader < CSV::Reader" "refm/api/src/csv/CSV__IOReader")
(find-rurima "--- get_row(row) -> Fixnum" "== Private Instance Methods" "= class CSV::IOReader < CSV::Reader" "refm/api/src/csv/CSV__IOReader")
(find-rurima "--- terminate -> nil" "== Private Instance Methods" "= class CSV::IOReader < CSV::Reader" "refm/api/src/csv/CSV__IOReader")
(find-rurima "= class CSV::Reader < Object" "refm/api/src/csv/CSV__Reader")
(find-rurima "== Class Methods" "= class CSV::Reader < Object" "refm/api/src/csv/CSV__Reader")
(find-rurima "--- parse(str_or_readable, fs = ',', rs = nil) -> CSV::StringReader" "== Class Methods" "= class CSV::Reader < Object" "refm/api/src/csv/CSV__Reader")
(find-rurima "--- parse(str_or_readable, fs = ',', rs = nil) {|row| ... } -> nil" "== Class Methods" "= class CSV::Reader < Object" "refm/api/src/csv/CSV__Reader")
(find-rurima "===== 注意" "== Class Methods" "= class CSV::Reader < Object" "refm/api/src/csv/CSV__Reader")
(find-rurima "--- create(str_or_readable, fs = ',', rs = nil) -> CSV::StringReader" "===== 注意" "== Class Methods" "= class CSV::Reader < Object" "refm/api/src/csv/CSV__Reader")
(find-rurima "== Instance Methods" "= class CSV::Reader < Object" "refm/api/src/csv/CSV__Reader")
(find-rurima "--- each {|row| ... } -> nil" "== Instance Methods" "= class CSV::Reader < Object" "refm/api/src/csv/CSV__Reader")
(find-rurima "--- shift -> Array" "== Instance Methods" "= class CSV::Reader < Object" "refm/api/src/csv/CSV__Reader")
(find-rurima "===== 注意" "== Instance Methods" "= class CSV::Reader < Object" "refm/api/src/csv/CSV__Reader")
(find-rurima "--- close -> nil" "===== 注意" "== Instance Methods" "= class CSV::Reader < Object" "refm/api/src/csv/CSV__Reader")
(find-rurima "== Private Instance Methods" "= class CSV::Reader < Object" "refm/api/src/csv/CSV__Reader")
(find-rurima "--- initialize(dev) -> ()" "== Private Instance Methods" "= class CSV::Reader < Object" "refm/api/src/csv/CSV__Reader")
(find-rurima "--- get_row(row) -> ()" "== Private Instance Methods" "= class CSV::Reader < Object" "refm/api/src/csv/CSV__Reader")
(find-rurima "--- terminate -> ()" "== Private Instance Methods" "= class CSV::Reader < Object" "refm/api/src/csv/CSV__Reader")
(find-rurima "=== 使用例" "refm/api/src/eregex.rd")
(find-rurima "= reopen Regexp" "refm/api/src/eregex.rd")
(find-rurima "== Instance Methods" "= reopen Regexp" "refm/api/src/eregex.rd")
(find-rurima "--- &(other) -> RedAnd" "== Instance Methods" "= reopen Regexp" "refm/api/src/eregex.rd")
(find-rurima "--- |(other) -> RegOr" "== Instance Methods" "= reopen Regexp" "refm/api/src/eregex.rd")
(find-rurima "= class RegAnd < Object" "refm/api/src/eregex.rd")
(find-rurima "== Class Methods" "= class RegAnd < Object" "refm/api/src/eregex.rd")
(find-rurima "--- new(re1, re2) -> RegAnd" "== Class Methods" "= class RegAnd < Object" "refm/api/src/eregex.rd")
(find-rurima "== Instance Methods" "= class RegAnd < Object" "refm/api/src/eregex.rd")
(find-rurima "--- =~(str) -> bool" "== Instance Methods" "= class RegAnd < Object" "refm/api/src/eregex.rd")
(find-rurima "= class RegOr < Object" "refm/api/src/eregex.rd")
(find-rurima "== Class Methods" "= class RegOr < Object" "refm/api/src/eregex.rd")
(find-rurima "--- new(re1, re2) -> RegOr" "== Class Methods" "= class RegOr < Object" "refm/api/src/eregex.rd")
(find-rurima "== Instance Methods" "= class RegOr < Object" "refm/api/src/eregex.rd")
(find-rurima "--- =~(str) -> bool" "== Instance Methods" "= class RegOr < Object" "refm/api/src/eregex.rd")
(find-rurima "= reopen Numeric" "refm/api/src/complex.rd")
(find-rurima "== Instance Methods" "= reopen Numeric" "refm/api/src/complex.rd")
(find-rurima "--- im -> Complex" "== Instance Methods" "= reopen Numeric" "refm/api/src/complex.rd")
(find-rurima "= reopen Complex" "refm/api/src/complex.rd")
(find-rurima "== Class Methods" "= reopen Complex" "refm/api/src/complex.rd")
(find-rurima "--- generic?(other) -> bool" "== Class Methods" "= reopen Complex" "refm/api/src/complex.rd")
(find-rurima "== Instance Methods" "= reopen Complex" "refm/api/src/complex.rd")
(find-rurima "--- image -> Numeric" "== Instance Methods" "= reopen Complex" "refm/api/src/complex.rd")
(find-rurima "= class Complex < Numeric" "refm/api/src/complex.rd")
(find-rurima "=== 例" "= class Complex < Numeric" "refm/api/src/complex.rd")
(find-rurima "== Class Methods" "= class Complex < Numeric" "refm/api/src/complex.rd")
(find-rurima "--- new(r, i) -> Complex" "== Class Methods" "= class Complex < Numeric" "refm/api/src/complex.rd")
(find-rurima "--- new!(r, i = 0) -> Complex" "== Class Methods" "= class Complex < Numeric" "refm/api/src/complex.rd")
(find-rurima "--- polar(r, theta) -> Complex" "== Class Methods" "= class Complex < Numeric" "refm/api/src/complex.rd")
(find-rurima "--- generic?(other) -> bool" "== Class Methods" "= class Complex < Numeric" "refm/api/src/complex.rd")
(find-rurima "== Instance Methods" "= class Complex < Numeric" "refm/api/src/complex.rd")
(find-rurima "--- +(c) -> Complex" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/complex.rd")
(find-rurima "--- -(c) -> Complex" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/complex.rd")
(find-rurima "--- *(c) -> Complex" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/complex.rd")
(find-rurima "--- /(other) -> Complex" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/complex.rd")
(find-rurima "--- %(c) -> Complex" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/complex.rd")
(find-rurima "--- **(c) -> Complex" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/complex.rd")
(find-rurima "--- divmod " "== Instance Methods" "= class Complex < Numeric" "refm/api/src/complex.rd")
(find-rurima "--- quo(other) -> Complex" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/complex.rd")
(find-rurima "===== 注意" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/complex.rd")
(find-rurima "--- abs -> Float" "===== 注意" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/complex.rd")
(find-rurima "--- abs2 -> Fixnum" "===== 注意" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/complex.rd")
(find-rurima "--- abs2 -> Float" "===== 注意" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/complex.rd")
(find-rurima "--- angle -> Float" "===== 注意" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/complex.rd")
(find-rurima "--- arg -> Float" "===== 注意" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/complex.rd")
(find-rurima "--- polar -> Array" "===== 注意" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/complex.rd")
(find-rurima "--- conj -> Complex" "===== 注意" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/complex.rd")
(find-rurima "--- conjugate -> Complex" "===== 注意" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/complex.rd")
(find-rurima "--- real -> Fixnum" "===== 注意" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/complex.rd")
(find-rurima "--- real -> Float" "===== 注意" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/complex.rd")
(find-rurima "--- imag -> Fixnum" "===== 注意" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/complex.rd")
(find-rurima "--- imag -> Float" "===== 注意" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/complex.rd")
(find-rurima "--- image -> Fixnum" "===== 注意" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/complex.rd")
(find-rurima "--- image -> Float" "===== 注意" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/complex.rd")
(find-rurima "--- <=>(c) -> Fixnum" "===== 注意" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/complex.rd")
(find-rurima "--- ==(c) -> bool" "===== 注意" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/complex.rd")
(find-rurima "--- to_i -> Integer" "===== 注意" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/complex.rd")
(find-rurima "--- to_f" "===== 注意" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/complex.rd")
(find-rurima "--- to_r" "===== 注意" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/complex.rd")
(find-rurima "--- coerce(other) -> Array" "===== 注意" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/complex.rd")
(find-rurima "--- denominator -> Fixnum" "===== 注意" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/complex.rd")
(find-rurima "--- numerator -> Complex" "===== 注意" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/complex.rd")
(find-rurima "--- hash -> Fixnum" "===== 注意" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/complex.rd")
(find-rurima "--- inspect -> String" "===== 注意" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/complex.rd")
(find-rurima "--- to_s -> String" "===== 注意" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/complex.rd")
(find-rurima "== Constants" "= class Complex < Numeric" "refm/api/src/complex.rd")
(find-rurima "--- I" "== Constants" "= class Complex < Numeric" "refm/api/src/complex.rd")
(find-rurima "= reopen Numeric" "refm/api/src/complex.rd")
(find-rurima "== Instance Methods" "= reopen Numeric" "refm/api/src/complex.rd")
(find-rurima "--- im -> Complex" "== Instance Methods" "= reopen Numeric" "refm/api/src/complex.rd")
(find-rurima "--- real -> self" "== Instance Methods" "= reopen Numeric" "refm/api/src/complex.rd")
(find-rurima "--- image -> Fixnum" "== Instance Methods" "= reopen Numeric" "refm/api/src/complex.rd")
(find-rurima "--- imag -> Fixnum" "== Instance Methods" "= reopen Numeric" "refm/api/src/complex.rd")
(find-rurima "--- arg -> Fixnum | Float" "== Instance Methods" "= reopen Numeric" "refm/api/src/complex.rd")
(find-rurima "--- conj -> self" "== Instance Methods" "= reopen Numeric" "refm/api/src/complex.rd")
(find-rurima "--- conjugate -> self" "== Instance Methods" "= reopen Numeric" "refm/api/src/complex.rd")
(find-rurima "= redefine Math" "refm/api/src/complex.rd")
(find-rurima "== Module Functions" "= redefine Math" "refm/api/src/complex.rd")
(find-rurima "--- sqrt(z) -> Complex" "== Module Functions" "= redefine Math" "refm/api/src/complex.rd")
(find-rurima "===== 注意" "== Module Functions" "= redefine Math" "refm/api/src/complex.rd")
(find-rurima "--- exp(z) -> Complex" "===== 注意" "== Module Functions" "= redefine Math" "refm/api/src/complex.rd")
(find-rurima "===== 注意" "== Module Functions" "= redefine Math" "refm/api/src/complex.rd")
(find-rurima "--- log(z) -> Complex" "===== 注意" "== Module Functions" "= redefine Math" "refm/api/src/complex.rd")
(find-rurima "===== 注意" "== Module Functions" "= redefine Math" "refm/api/src/complex.rd")
(find-rurima "--- log10(z) -> Complex" "===== 注意" "== Module Functions" "= redefine Math" "refm/api/src/complex.rd")
(find-rurima "===== 注意" "== Module Functions" "= redefine Math" "refm/api/src/complex.rd")
(find-rurima "--- cos(z) -> Complex" "===== 注意" "== Module Functions" "= redefine Math" "refm/api/src/complex.rd")
(find-rurima "--- sin(z) -> Complex" "===== 注意" "== Module Functions" "= redefine Math" "refm/api/src/complex.rd")
(find-rurima "--- tan(z) -> Complex" "===== 注意" "== Module Functions" "= redefine Math" "refm/api/src/complex.rd")
(find-rurima "--- cosh(z) -> Complex" "===== 注意" "== Module Functions" "= redefine Math" "refm/api/src/complex.rd")
(find-rurima "--- sinh(z) -> Complex" "===== 注意" "== Module Functions" "= redefine Math" "refm/api/src/complex.rd")
(find-rurima "--- tanh(z) -> Complex" "===== 注意" "== Module Functions" "= redefine Math" "refm/api/src/complex.rd")
(find-rurima "--- acos(z) -> Complex" "===== 注意" "== Module Functions" "= redefine Math" "refm/api/src/complex.rd")
(find-rurima "--- asin(z) -> Complex" "===== 注意" "== Module Functions" "= redefine Math" "refm/api/src/complex.rd")
(find-rurima "--- atan(z) -> Complex" "===== 注意" "== Module Functions" "= redefine Math" "refm/api/src/complex.rd")
(find-rurima "--- atan2(z) -> Complex" "===== 注意" "== Module Functions" "= redefine Math" "refm/api/src/complex.rd")
(find-rurima "--- acosh(z) -> Complex" "===== 注意" "== Module Functions" "= redefine Math" "refm/api/src/complex.rd")
(find-rurima "--- asinh(z) -> Complex" "===== 注意" "== Module Functions" "= redefine Math" "refm/api/src/complex.rd")
(find-rurima "--- atanh(z) -> Complex" "===== 注意" "== Module Functions" "= redefine Math" "refm/api/src/complex.rd")
(find-rurima "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "== Class Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- do_one_event(flag = nil)" "== Class Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- do_one_evant(flag = nil)" "== Class Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- get_eventloop_tick" "== Class Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- get_eventloop_weight" "== Class Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- get_no_event_wait" "== Class Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- mainloop(*args)" "== Class Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- mainloop_abort_on_exception" "== Class Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- mainloop_abort_on_exception=(mode)" "== Class Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- mainloop_watchdog(*args)" "== Class Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- manipulable?" "== Class Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- new(*args, &block)" "== Class Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- set_eventloop_tick(*args)" "== Class Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- set_eventloop_weight(*args)" "== Class Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- set_no_event_wait(*args)" "== Class Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "== Instance Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- __eval(str)" "== Instance Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- __invoke(*args)" "== Instance Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- _conv_listelement(str)" "== Instance Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- _create_console" "== Instance Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- _eval(str)" "== Instance Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- _eval_with_enc(str)" "== Instance Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- _eval_without_enc(str)" "== Instance Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- _fromUTF8(str, encoding = nil)" "== Instance Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- _get_global_var(var_name)" "== Instance Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- _get_global_var2(var_name, index_name)" "== Instance Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- _get_variable(var_name, flag)" "== Instance Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- _get_variable2(var_name, index_name, flag)" "== Instance Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- _invoke(*args)" "== Instance Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- _invoke_with_enc(*args)" "== Instance Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- _invoke_without_enc(*args)" "== Instance Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- _ip_id_" "== Instance Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- _is_master_of?(tcltkip_obj)" "== Instance Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- _merge_tklist(*args)" "== Instance Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- _return_value" "== Instance Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- _set_global_var(var_name, value)" "== Instance Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- _set_global_var2(var_name, index_name, value)" "== Instance Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- _set_variable(var_name, value, flag)" "== Instance Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- _set_variable2(var_name, index_name, value, flag)" "== Instance Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- _split_tklist(str)" "== Instance Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- _thread_tkwait(mode, target)" "== Instance Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- _thread_vwait(var_name)" "== Instance Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- _toUTF8(str, encoding = nil)" "== Instance Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- _unset_global_var(var_name)" "== Instance Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- _unset_global_var2(var_name, index_name)" "== Instance Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- _unset_variable(var_name, flag)" "== Instance Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- _unset_variable2(var_name, index_name, flag)" "== Instance Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- allow_ruby_exit=(mode)" "== Instance Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- allow_ruby_exit?" "== Instance Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- appsend(async, *args)" "== Instance Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- create_slave(name, safe = false)" "== Instance Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- delete" "== Instance Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- deleted?" "== Instance Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- do_one_event(flag = nil)" "== Instance Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- do_one_evant(flag = nil)" "== Instance Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- get_eventloop_tick" "== Instance Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- get_eventloop_weight" "== Instance Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- get_no_event_wait" "== Instance Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- has_mainwindow?" "== Instance Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- invalid_namespace?" "== Instance Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- is_rubytk?" "== Instance Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- mainloop" "== Instance Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- mainloop_abort_on_exception" "== Instance Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- mainloop_abort_on_exception=(mode)" "== Instance Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- mainloop_watchdog" "== Instance Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- make_safe" "== Instance Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- manipulable?" "== Instance Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- rb_appsend(async, *args)" "== Instance Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- ready?(timeout = 5)" "== Instance Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- restart" "== Instance Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- safe?" "== Instance Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- safe_base?" "== Instance Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- set_eventloop_tick(*args)" "== Instance Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- set_eventloop_weight(*args)" "== Instance Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "--- set_no_event_wait(*args)" "== Instance Methods" "= class RemoteTkIp < MultiTkIp" "refm/api/src/remote-tk/RemoteTkIp")
(find-rurima "= class MultiTkIp" "refm/api/src/remote-tk/MultiTkIp")
(find-rurima "== Class Methods" "= class MultiTkIp" "refm/api/src/remote-tk/MultiTkIp")
(find-rurima "--- _DEFAULT_MASTER" "== Class Methods" "= class MultiTkIp" "refm/api/src/remote-tk/MultiTkIp")
(find-rurima "= class SDBM < Object" "refm/api/src/sdbm.rd")
(find-rurima "== Class Methods" "= class SDBM < Object" "refm/api/src/sdbm.rd")
(find-rurima "--- new(dbname, mode = 0666) -> SDBM" "== Class Methods" "= class SDBM < Object" "refm/api/src/sdbm.rd")
(find-rurima "--- open(dbname, mode = 0666) -> SDBM" "== Class Methods" "= class SDBM < Object" "refm/api/src/sdbm.rd")
(find-rurima "--- open(dbname, mode = 0666) {|db| ... } -> object" "== Class Methods" "= class SDBM < Object" "refm/api/src/sdbm.rd")
(find-rurima "== Instance Methods" "= class SDBM < Object" "refm/api/src/sdbm.rd")
(find-rurima "--- [](key) -> String" "== Instance Methods" "= class SDBM < Object" "refm/api/src/sdbm.rd")
(find-rurima "--- []=(key, value)" "== Instance Methods" "= class SDBM < Object" "refm/api/src/sdbm.rd")
(find-rurima "--- clear -> self" "== Instance Methods" "= class SDBM < Object" "refm/api/src/sdbm.rd")
(find-rurima "--- close -> nil" "== Instance Methods" "= class SDBM < Object" "refm/api/src/sdbm.rd")
(find-rurima "--- closed? -> bool" "== Instance Methods" "= class SDBM < Object" "refm/api/src/sdbm.rd")
(find-rurima "--- delete(key) -> String" "== Instance Methods" "= class SDBM < Object" "refm/api/src/sdbm.rd")
(find-rurima "--- reject! { |key, value|  ...  }   -> self" "== Instance Methods" "= class SDBM < Object" "refm/api/src/sdbm.rd")
(find-rurima "--- delete_if { |key, value|  ...  } -> self" "== Instance Methods" "= class SDBM < Object" "refm/api/src/sdbm.rd")
(find-rurima "--- reject {|key, value| ... } -> Hash" "== Instance Methods" "= class SDBM < Object" "refm/api/src/sdbm.rd")
(find-rurima "--- each {|key, value|  ...  } -> self" "== Instance Methods" "= class SDBM < Object" "refm/api/src/sdbm.rd")
(find-rurima "--- each_pair {|key, value|  ...  } -> self" "== Instance Methods" "= class SDBM < Object" "refm/api/src/sdbm.rd")
(find-rurima "--- each_key {|key|  ...  } -> self" "== Instance Methods" "= class SDBM < Object" "refm/api/src/sdbm.rd")
(find-rurima "--- each_value {|value|  ...  } -> self" "== Instance Methods" "= class SDBM < Object" "refm/api/src/sdbm.rd")
(find-rurima "--- empty? -> bool" "== Instance Methods" "= class SDBM < Object" "refm/api/src/sdbm.rd")
(find-rurima "--- has_key?(key) -> bool" "== Instance Methods" "= class SDBM < Object" "refm/api/src/sdbm.rd")
(find-rurima "--- key?(key) -> bool" "== Instance Methods" "= class SDBM < Object" "refm/api/src/sdbm.rd")
(find-rurima "--- include?(key) -> bool" "== Instance Methods" "= class SDBM < Object" "refm/api/src/sdbm.rd")
(find-rurima "--- member?(key) -> bool" "== Instance Methods" "= class SDBM < Object" "refm/api/src/sdbm.rd")
(find-rurima "--- has_value?(value) -> bool" "== Instance Methods" "= class SDBM < Object" "refm/api/src/sdbm.rd")
(find-rurima "--- value?(value) -> bool" "== Instance Methods" "= class SDBM < Object" "refm/api/src/sdbm.rd")
(find-rurima "--- indexes(*keys) -> [[String]]" "== Instance Methods" "= class SDBM < Object" "refm/api/src/sdbm.rd")
(find-rurima "--- indices(*keys) -> [[String]]" "== Instance Methods" "= class SDBM < Object" "refm/api/src/sdbm.rd")
(find-rurima "--- key(value) -> String" "== Instance Methods" "= class SDBM < Object" "refm/api/src/sdbm.rd")
(find-rurima "--- keys -> [String]" "== Instance Methods" "= class SDBM < Object" "refm/api/src/sdbm.rd")
(find-rurima "--- length -> Integer" "== Instance Methods" "= class SDBM < Object" "refm/api/src/sdbm.rd")
(find-rurima "--- size   -> Integer" "== Instance Methods" "= class SDBM < Object" "refm/api/src/sdbm.rd")
(find-rurima "===== 注意" "== Instance Methods" "= class SDBM < Object" "refm/api/src/sdbm.rd")
(find-rurima "--- shift -> [String]" "===== 注意" "== Instance Methods" "= class SDBM < Object" "refm/api/src/sdbm.rd")
(find-rurima "--- values -> [String]" "===== 注意" "== Instance Methods" "= class SDBM < Object" "refm/api/src/sdbm.rd")
(find-rurima "--- replace(other) -> self" "===== 注意" "== Instance Methods" "= class SDBM < Object" "refm/api/src/sdbm.rd")
(find-rurima "--- fetch(key, ifnone = nil){|key| ... } -> object" "===== 注意" "== Instance Methods" "= class SDBM < Object" "refm/api/src/sdbm.rd")
(find-rurima "--- store(key, val) -> [String]" "===== 注意" "== Instance Methods" "= class SDBM < Object" "refm/api/src/sdbm.rd")
(find-rurima "--- select{|key, value| ... } -> [[String]]" "===== 注意" "== Instance Methods" "= class SDBM < Object" "refm/api/src/sdbm.rd")
(find-rurima "--- values_at(*keys) -> [String]" "===== 注意" "== Instance Methods" "= class SDBM < Object" "refm/api/src/sdbm.rd")
(find-rurima "--- invert -> Hash" "===== 注意" "== Instance Methods" "= class SDBM < Object" "refm/api/src/sdbm.rd")
(find-rurima "--- update(other) -> self" "===== 注意" "== Instance Methods" "= class SDBM < Object" "refm/api/src/sdbm.rd")
(find-rurima "--- to_a -> [[String]]" "===== 注意" "== Instance Methods" "= class SDBM < Object" "refm/api/src/sdbm.rd")
(find-rurima "--- to_hash -> Hash" "===== 注意" "== Instance Methods" "= class SDBM < Object" "refm/api/src/sdbm.rd")
(find-rurima "--- index(val) -> String" "===== 注意" "== Instance Methods" "= class SDBM < Object" "refm/api/src/sdbm.rd")
(find-rurima "= class SDBMError < StandardError" "refm/api/src/sdbm.rd")
(find-rurima "= module Syslog" "refm/api/src/syslog.rd")
(find-rurima "== Module Functions" "= module Syslog" "refm/api/src/syslog.rd")
(find-rurima "--- open(ident=$0, options=Syslog::LOG_PID|Syslog::LOG_CONS, facility=Syslog::LOG_USER) -> self" "== Module Functions" "= module Syslog" "refm/api/src/syslog.rd")
(find-rurima "--- open(ident=$0, options=Syslog::LOG_PID|Syslog::LOG_CONS, facility=Syslog::LOG_USER) { |syslog| ... } -> self" "== Module Functions" "= module Syslog" "refm/api/src/syslog.rd")
(find-rurima "--- open!(ident=$0, options=Syslog::LOG_PID|Syslog::LOG_CONS, facility=Syslog::LOG_USER) { |syslog| ... } -> self" "== Module Functions" "= module Syslog" "refm/api/src/syslog.rd")
(find-rurima "--- reopen(ident=$0, options=Syslog::LOG_PID|Syslog::LOG_CONS, facility=Syslog::LOG_USER) { |syslog| ... } -> self" "== Module Functions" "= module Syslog" "refm/api/src/syslog.rd")
(find-rurima "--- opened? -> bool" "== Module Functions" "= module Syslog" "refm/api/src/syslog.rd")
(find-rurima "--- ident -> String | nil" "== Module Functions" "= module Syslog" "refm/api/src/syslog.rd")
(find-rurima "--- options -> Fixnum | nil" "== Module Functions" "= module Syslog" "refm/api/src/syslog.rd")
(find-rurima "--- facility -> Fixnum | nil" "== Module Functions" "= module Syslog" "refm/api/src/syslog.rd")
(find-rurima "--- log(priority, format, *arg) -> self" "== Module Functions" "= module Syslog" "refm/api/src/syslog.rd")
(find-rurima "--- emerg(message, *arg) -> self" "== Module Functions" "= module Syslog" "refm/api/src/syslog.rd")
(find-rurima "--- alert(message, *arg) -> self" "== Module Functions" "= module Syslog" "refm/api/src/syslog.rd")
(find-rurima "--- crit(message, *arg) -> self" "== Module Functions" "= module Syslog" "refm/api/src/syslog.rd")
(find-rurima "--- err(message, *arg) -> self" "== Module Functions" "= module Syslog" "refm/api/src/syslog.rd")
(find-rurima "--- warning(message, *arg) -> self" "== Module Functions" "= module Syslog" "refm/api/src/syslog.rd")
(find-rurima "--- notice(message, *arg) -> self" "== Module Functions" "= module Syslog" "refm/api/src/syslog.rd")
(find-rurima "--- info(message, *arg) -> self" "== Module Functions" "= module Syslog" "refm/api/src/syslog.rd")
(find-rurima "--- debug(message, *arg) -> self" "== Module Functions" "= module Syslog" "refm/api/src/syslog.rd")
(find-rurima "--- mask -> Fixnum | nil" "== Module Functions" "= module Syslog" "refm/api/src/syslog.rd")
(find-rurima "--- mask=(mask)" "== Module Functions" "= module Syslog" "refm/api/src/syslog.rd")
(find-rurima "--- close -> nil" "== Module Functions" "= module Syslog" "refm/api/src/syslog.rd")
(find-rurima "--- instance -> self" "== Module Functions" "= module Syslog" "refm/api/src/syslog.rd")
(find-rurima "--- LOG_MASK(priority) -> Fixnum" "== Module Functions" "= module Syslog" "refm/api/src/syslog.rd")
(find-rurima "--- LOG_UPTO(priority) -> Fixnum" "== Module Functions" "= module Syslog" "refm/api/src/syslog.rd")
(find-rurima "= module Syslog::Constants" "refm/api/src/syslog.rd")
(find-rurima "== Constants" "= module Syslog::Constants" "refm/api/src/syslog.rd")
(find-rurima "--- LOG_PID" "== Constants" "= module Syslog::Constants" "refm/api/src/syslog.rd")
(find-rurima "--- LOG_CONS" "== Constants" "= module Syslog::Constants" "refm/api/src/syslog.rd")
(find-rurima "--- LOG_ODELAY" "== Constants" "= module Syslog::Constants" "refm/api/src/syslog.rd")
(find-rurima "--- LOG_NDELAY" "== Constants" "= module Syslog::Constants" "refm/api/src/syslog.rd")
(find-rurima "--- LOG_NOWAIT" "== Constants" "= module Syslog::Constants" "refm/api/src/syslog.rd")
(find-rurima "--- LOG_PERROR" "== Constants" "= module Syslog::Constants" "refm/api/src/syslog.rd")
(find-rurima "--- LOG_AUTH" "== Constants" "= module Syslog::Constants" "refm/api/src/syslog.rd")
(find-rurima "--- LOG_AUTHPRIV" "== Constants" "= module Syslog::Constants" "refm/api/src/syslog.rd")
(find-rurima "--- LOG_CONSOLE" "== Constants" "= module Syslog::Constants" "refm/api/src/syslog.rd")
(find-rurima "--- LOG_CRON" "== Constants" "= module Syslog::Constants" "refm/api/src/syslog.rd")
(find-rurima "--- LOG_DAEMON" "== Constants" "= module Syslog::Constants" "refm/api/src/syslog.rd")
(find-rurima "--- LOG_FTP" "== Constants" "= module Syslog::Constants" "refm/api/src/syslog.rd")
(find-rurima "--- LOG_KERN" "== Constants" "= module Syslog::Constants" "refm/api/src/syslog.rd")
(find-rurima "--- LOG_LPR" "== Constants" "= module Syslog::Constants" "refm/api/src/syslog.rd")
(find-rurima "--- LOG_MAIL" "== Constants" "= module Syslog::Constants" "refm/api/src/syslog.rd")
(find-rurima "--- LOG_NEWS" "== Constants" "= module Syslog::Constants" "refm/api/src/syslog.rd")
(find-rurima "--- LOG_NTP" "== Constants" "= module Syslog::Constants" "refm/api/src/syslog.rd")
(find-rurima "--- LOG_SECURITY" "== Constants" "= module Syslog::Constants" "refm/api/src/syslog.rd")
(find-rurima "--- LOG_SYSLOG" "== Constants" "= module Syslog::Constants" "refm/api/src/syslog.rd")
(find-rurima "--- LOG_USER" "== Constants" "= module Syslog::Constants" "refm/api/src/syslog.rd")
(find-rurima "--- LOG_UUCP" "== Constants" "= module Syslog::Constants" "refm/api/src/syslog.rd")
(find-rurima "--- LOG_LOCAL0" "== Constants" "= module Syslog::Constants" "refm/api/src/syslog.rd")
(find-rurima "--- LOG_LOCAL1" "== Constants" "= module Syslog::Constants" "refm/api/src/syslog.rd")
(find-rurima "--- LOG_LOCAL2" "== Constants" "= module Syslog::Constants" "refm/api/src/syslog.rd")
(find-rurima "--- LOG_LOCAL3" "== Constants" "= module Syslog::Constants" "refm/api/src/syslog.rd")
(find-rurima "--- LOG_LOCAL4" "== Constants" "= module Syslog::Constants" "refm/api/src/syslog.rd")
(find-rurima "--- LOG_LOCAL5" "== Constants" "= module Syslog::Constants" "refm/api/src/syslog.rd")
(find-rurima "--- LOG_LOCAL6" "== Constants" "= module Syslog::Constants" "refm/api/src/syslog.rd")
(find-rurima "--- LOG_LOCAL7" "== Constants" "= module Syslog::Constants" "refm/api/src/syslog.rd")
(find-rurima "--- LOG_EMERG" "== Constants" "= module Syslog::Constants" "refm/api/src/syslog.rd")
(find-rurima "--- LOG_ALERT" "== Constants" "= module Syslog::Constants" "refm/api/src/syslog.rd")
(find-rurima "--- LOG_CRIT" "== Constants" "= module Syslog::Constants" "refm/api/src/syslog.rd")
(find-rurima "--- LOG_ERR" "== Constants" "= module Syslog::Constants" "refm/api/src/syslog.rd")
(find-rurima "--- LOG_WARNING" "== Constants" "= module Syslog::Constants" "refm/api/src/syslog.rd")
(find-rurima "--- LOG_NOTICE" "== Constants" "= module Syslog::Constants" "refm/api/src/syslog.rd")
(find-rurima "--- LOG_INFO" "== Constants" "= module Syslog::Constants" "refm/api/src/syslog.rd")
(find-rurima "--- LOG_DEBUG" "== Constants" "= module Syslog::Constants" "refm/api/src/syslog.rd")
(find-rurima "=== Author and Copyright" "refm/api/src/xmlrpc.rd")
(find-rurima "=== Overview" "refm/api/src/xmlrpc.rd")
(find-rurima "=== Example" "refm/api/src/xmlrpc.rd")
(find-rurima "=== Documentation" "refm/api/src/xmlrpc.rd")
(find-rurima "=== Features of XMLRPC for Ruby" "refm/api/src/xmlrpc.rd")
(find-rurima "=== Choosing a different XML Parser or XML Writer" "refm/api/src/xmlrpc.rd")
(find-rurima "=== 参考" "refm/api/src/xmlrpc.rd")
(find-rurima "= reopen Enumerable" "refm/api/src/enumerator.rd")
(find-rurima "== Instance Methods" "= reopen Enumerable" "refm/api/src/enumerator.rd")
(find-rurima "--- each_slice(n) {|list| ... } -> nil" "== Instance Methods" "= reopen Enumerable" "refm/api/src/enumerator.rd")
(find-rurima "--- each_cons(n) {|list| ... } -> nil" "== Instance Methods" "= reopen Enumerable" "refm/api/src/enumerator.rd")
(find-rurima "--- enum_slice(n) -> Enumerable::Enumerator" "== Instance Methods" "= reopen Enumerable" "refm/api/src/enumerator.rd")
(find-rurima "--- enum_cons(n) -> Enumerable::Enumerator" "== Instance Methods" "= reopen Enumerable" "refm/api/src/enumerator.rd")
(find-rurima "--- enum_with_index -> Enumerable::Enumerator" "== Instance Methods" "= reopen Enumerable" "refm/api/src/enumerator.rd")
(find-rurima "= class DBM < Object" "refm/api/src/dbm.rd")
(find-rurima "== Class Methods" "= class DBM < Object" "refm/api/src/dbm.rd")
(find-rurima "--- new(dbname, mode = 0666, flags = nil) -> DBM" "== Class Methods" "= class DBM < Object" "refm/api/src/dbm.rd")
(find-rurima "--- open(dbname, mode = 0666, flags = nil) -> DBM" "== Class Methods" "= class DBM < Object" "refm/api/src/dbm.rd")
(find-rurima "--- open(dbname, mode = 0666, flags = nil) {|db| ... } -> ()" "== Class Methods" "= class DBM < Object" "refm/api/src/dbm.rd")
(find-rurima "== Instance Methods" "= class DBM < Object" "refm/api/src/dbm.rd")
(find-rurima "--- [](key) -> String" "== Instance Methods" "= class DBM < Object" "refm/api/src/dbm.rd")
(find-rurima "--- []=(key, value)" "== Instance Methods" "= class DBM < Object" "refm/api/src/dbm.rd")
(find-rurima "--- clear -> self" "== Instance Methods" "= class DBM < Object" "refm/api/src/dbm.rd")
(find-rurima "--- close -> nil" "== Instance Methods" "= class DBM < Object" "refm/api/src/dbm.rd")
(find-rurima "--- closed? -> bool" "== Instance Methods" "= class DBM < Object" "refm/api/src/dbm.rd")
(find-rurima "--- delete(key) -> String" "== Instance Methods" "= class DBM < Object" "refm/api/src/dbm.rd")
(find-rurima "--- reject! { |key, value|  ...  } -> self" "== Instance Methods" "= class DBM < Object" "refm/api/src/dbm.rd")
(find-rurima "--- delete_if { |key, value|  ...  } -> self" "== Instance Methods" "= class DBM < Object" "refm/api/src/dbm.rd")
(find-rurima "--- reject{ |key, value| ... } -> Hash" "== Instance Methods" "= class DBM < Object" "refm/api/src/dbm.rd")
(find-rurima "--- each {|key, value|  ...  } -> self" "== Instance Methods" "= class DBM < Object" "refm/api/src/dbm.rd")
(find-rurima "--- each_pair {|key, value|  ...  } -> self" "== Instance Methods" "= class DBM < Object" "refm/api/src/dbm.rd")
(find-rurima "--- each_key {|key|  ...  } -> self" "== Instance Methods" "= class DBM < Object" "refm/api/src/dbm.rd")
(find-rurima "--- each_value {|value|  ...  } -> self" "== Instance Methods" "= class DBM < Object" "refm/api/src/dbm.rd")
(find-rurima "--- empty?() -> bool" "== Instance Methods" "= class DBM < Object" "refm/api/src/dbm.rd")
(find-rurima "--- has_key?(key) -> bool" "== Instance Methods" "= class DBM < Object" "refm/api/src/dbm.rd")
(find-rurima "--- key?(key) -> bool" "== Instance Methods" "= class DBM < Object" "refm/api/src/dbm.rd")
(find-rurima "--- include?(key) -> bool" "== Instance Methods" "= class DBM < Object" "refm/api/src/dbm.rd")
(find-rurima "--- member?(key) -> bool" "== Instance Methods" "= class DBM < Object" "refm/api/src/dbm.rd")
(find-rurima "--- has_value?(value) -> bool" "== Instance Methods" "= class DBM < Object" "refm/api/src/dbm.rd")
(find-rurima "--- value?(value) -> bool" "== Instance Methods" "= class DBM < Object" "refm/api/src/dbm.rd")
(find-rurima "--- indexes(*keys) -> [String]" "== Instance Methods" "= class DBM < Object" "refm/api/src/dbm.rd")
(find-rurima "--- indices(*keys) -> [String]" "== Instance Methods" "= class DBM < Object" "refm/api/src/dbm.rd")
(find-rurima "--- key(value) -> String" "== Instance Methods" "= class DBM < Object" "refm/api/src/dbm.rd")
(find-rurima "--- keys -> [String]" "== Instance Methods" "= class DBM < Object" "refm/api/src/dbm.rd")
(find-rurima "--- length -> Integer" "== Instance Methods" "= class DBM < Object" "refm/api/src/dbm.rd")
(find-rurima "--- size -> Integer" "== Instance Methods" "= class DBM < Object" "refm/api/src/dbm.rd")
(find-rurima "--- shift -> String" "== Instance Methods" "= class DBM < Object" "refm/api/src/dbm.rd")
(find-rurima "--- values -> [String]" "== Instance Methods" "= class DBM < Object" "refm/api/src/dbm.rd")
(find-rurima "--- replace(other) -> self" "== Instance Methods" "= class DBM < Object" "refm/api/src/dbm.rd")
(find-rurima "--- fetch(key, ifnone = nil) -> String" "== Instance Methods" "= class DBM < Object" "refm/api/src/dbm.rd")
(find-rurima "--- store(key, value) -> String" "== Instance Methods" "= class DBM < Object" "refm/api/src/dbm.rd")
(find-rurima "--- select{|key, value| ... } -> [Array]" "== Instance Methods" "= class DBM < Object" "refm/api/src/dbm.rd")
(find-rurima "--- values_at(*keys) -> [String]" "== Instance Methods" "= class DBM < Object" "refm/api/src/dbm.rd")
(find-rurima "--- invert -> Hash" "== Instance Methods" "= class DBM < Object" "refm/api/src/dbm.rd")
(find-rurima "--- update(other){|key, value| ... } -> self" "== Instance Methods" "= class DBM < Object" "refm/api/src/dbm.rd")
(find-rurima "--- to_a -> [Array]" "== Instance Methods" "= class DBM < Object" "refm/api/src/dbm.rd")
(find-rurima "--- to_hash -> Hash" "== Instance Methods" "= class DBM < Object" "refm/api/src/dbm.rd")
(find-rurima "--- index(value) -> String | nil" "== Instance Methods" "= class DBM < Object" "refm/api/src/dbm.rd")
(find-rurima "== Constants" "= class DBM < Object" "refm/api/src/dbm.rd")
(find-rurima "--- READER -> Fixnum" "== Constants" "= class DBM < Object" "refm/api/src/dbm.rd")
(find-rurima "--- WRITER -> Fixnum" "== Constants" "= class DBM < Object" "refm/api/src/dbm.rd")
(find-rurima "--- WRCREAT -> Fixnum" "== Constants" "= class DBM < Object" "refm/api/src/dbm.rd")
(find-rurima "--- NEWDB -> Fixnum" "== Constants" "= class DBM < Object" "refm/api/src/dbm.rd")
(find-rurima "--- VERSION -> String" "== Constants" "= class DBM < Object" "refm/api/src/dbm.rd")
(find-rurima "= class DBMError < StandardError" "refm/api/src/dbm.rd")
(find-rurima "= reopen Kernel" "refm/api/src/pathname.rd")
(find-rurima "== Private Instance Methods" "= reopen Kernel" "refm/api/src/pathname.rd")
(find-rurima "--- Pathname(path) -> Pathname" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/pathname.rd")
(find-rurima "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "== Constants" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- SEPARATOR_PAT" "== Constants" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- TO_PATH" "== Constants" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "== Class Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- new(path) -> Pathname" "== Class Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- getwd -> Pathname" "== Class Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- pwd   -> Pathname" "== Class Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- glob(pattern, flags=0) -> [Pathname]" "== Class Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- glob(pattern, flags=0) {|pathname| ...} -> nil" "== Class Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- ==(other)   -> bool" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- ===(other)  -> bool" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- eql?(other) -> bool" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- <=>(other) -> bool" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- hash -> Fixnum" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- to_s   -> String" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- to_str -> String" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- cleanpath(consider_symlink = false) -> Pathname" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- realpath(basedir = nil) -> Pathname" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- realpath(force_absolute = true) -> Pathname" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- realpath -> Pathname" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- realdirpath(basedir = nil) -> Pathname" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- parent -> Pathname" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- mountpoint? -> bool" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- root? -> bool" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- absolute? -> bool" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- relative? -> bool" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- each_filename {|v| ... } -> nil" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- +(other) -> Pathname" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- children(with_directory = true) -> [Pathname]" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- each_child(with_directory = true)                  -> Enumerator" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- each_child(with_directory = true) {|pathname| ...} -> [Pathname]" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- relative_path_from(base_directory) -> Pathname" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- each_line(*args){|line| ... } -> nil" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- each_line(*args) -> Enumerator" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- each_line(*args) -> Enumerable::Enumerator" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- foreachline(*args){|line| ... } -> nil" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- read(*args) -> String | nil" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- binread(*args) -> String | nil" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- readlines(*args) -> [String]" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- sysopen(*args) -> Integer" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- make_link(old) -> 0" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- make_symlink(old) -> 0" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- atime -> Time" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- ctime -> Time" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- mtime -> Time" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- chmod(mode) -> Integer" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- lchmod(mode) -> Integer" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- chown(owner, group) -> Integer" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- lchown(owner, group) -> Integer" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- fnmatch(pattern, *args) -> bool" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- fnmatch?(pattern, *args) -> bool" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- ftype -> String" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- link(old) -> 0" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- open(mode = 'r', perm = 0666) -> File" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- open(mode = 'r', perm = 0666){|file| ... } -> object" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- readlink -> Pathname" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- rename(to) -> 0" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- stat -> File::Stat" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- lstat -> File::Stat" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- symlink(old) -> 0" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- truncate(length) -> 0" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- utime(atime, mtime) -> Integer" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- basename(suffix = \"\") -> Pathname" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- dirname -> Pathname" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- extname -> String" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- expand_path(default_dir = '.') -> Pathname" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- join(*args) -> Pathname" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- split -> Array" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- blockdev? -> bool" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- chardev? -> bool" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- executable? -> bool" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- executable_real? -> bool" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- exist? -> bool" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- grpowned? -> bool" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- directory? -> bool" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- file? -> bool" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- pipe? -> bool" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- socket? -> bool" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- owned? -> bool" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- readable? -> bool" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- readable_real? -> bool" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- setuid? -> bool" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- setgid? -> bool" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- size -> Integer" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- size? -> bool" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- sticky? -> bool" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- symlink? -> bool" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- world_readable? -> bool" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- world_writable? -> bool" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- writable? -> bool" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- writable_real? -> bool" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- zero? -> bool" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- chdir{|path| ... } -> object" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- chroot -> 0" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- rmdir -> 0" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- entries -> [Pathname]" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- each_entry {|pathname| ... } -> nil" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- dir_foreach {|pathname| ... } -> nil" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- mkdir(*args) -> 0" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- opendir -> Dir" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- opendir{|dir| ... } -> nil" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- find {|pathname| ...} -> nil" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- mkpath -> nil" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- rmtree -> nil" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- unlink -> 0" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- delete -> 0" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- ascend {|pathname| ... } -> nil" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- descend {|pathname| ... } -> nil" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- cleanpath_aggressive -> Pathname" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- cleanpath_conservative -> Pathname" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- foreach(*args){|path| ... } -> nil" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- realpath_rec" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- sub(pattern, replace)  -> Pathname" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- sub(pattern) {|matched| ... } -> Pathname" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- to_path -> String" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "--- sub_ext(replace) -> Pathname" "== Instance Methods" "= class Pathname < Object" "refm/api/src/pathname.rd")
(find-rurima "=== リンク" "refm/api/src/rexml.rd")
(find-rurima "= module Psych::JSON" "refm/api/src/psych/json.rd")
(find-rurima "= class Psych::Nodes::Scalar < Psych::Nodes::Node" "refm/api/src/psych/nodes/scalar.rd")
(find-rurima "= class Psych::Nodes::Alias < Psych::Nodes::Node" "refm/api/src/psych/nodes/alias.rd")
(find-rurima "== Class Methods" "= class Psych::Nodes::Alias < Psych::Nodes::Node" "refm/api/src/psych/nodes/alias.rd")
(find-rurima "--- new(anchor) -> Psych::Nodes::Alias" "== Class Methods" "= class Psych::Nodes::Alias < Psych::Nodes::Node" "refm/api/src/psych/nodes/alias.rd")
(find-rurima "== Instance Methods" "= class Psych::Nodes::Alias < Psych::Nodes::Node" "refm/api/src/psych/nodes/alias.rd")
(find-rurima "--- anchor" "== Instance Methods" "= class Psych::Nodes::Alias < Psych::Nodes::Node" "refm/api/src/psych/nodes/alias.rd")
(find-rurima "--- anchor=(val)" "== Instance Methods" "= class Psych::Nodes::Alias < Psych::Nodes::Node" "refm/api/src/psych/nodes/alias.rd")
(find-rurima "= class Psych::Nodes::Mapping < Psych::Nodes::Node" "refm/api/src/psych/nodes/mapping.rd")
(find-rurima "= class Psych::Nodes::Sequence < Psych::Nodes::Node" "refm/api/src/psych/nodes/sequence.rd")
(find-rurima "= class Psych::Nodes::Node" "refm/api/src/psych/nodes/node.rd")
(find-rurima "= class Psych::Nodes::Document < Psych::Nodes::Node" "refm/api/src/psych/nodes/document.rd")
(find-rurima "= class Psych::Nodes::Stream < Psych::Nodes::Node" "refm/api/src/psych/nodes/stream.rd")
(find-rurima "= class Psych::ScalarScanner" "refm/api/src/psych/scalar_scanner.rd")
(find-rurima "== Constants" "= class Psych::ScalarScanner" "refm/api/src/psych/scalar_scanner.rd")
(find-rurima "--- TIME -> Regexp" "== Constants" "= class Psych::ScalarScanner" "refm/api/src/psych/scalar_scanner.rd")
(find-rurima "== Class Methods" "= class Psych::ScalarScanner" "refm/api/src/psych/scalar_scanner.rd")
(find-rurima "--- new" "== Class Methods" "= class Psych::ScalarScanner" "refm/api/src/psych/scalar_scanner.rd")
(find-rurima "== Instance Methods" "= class Psych::ScalarScanner" "refm/api/src/psych/scalar_scanner.rd")
(find-rurima "--- tokenize(string)" "== Instance Methods" "= class Psych::ScalarScanner" "refm/api/src/psych/scalar_scanner.rd")
(find-rurima "--- parse_time(string)" "== Instance Methods" "= class Psych::ScalarScanner" "refm/api/src/psych/scalar_scanner.rd")
(find-rurima "= reopen Object" "refm/api/src/psych/core_ext.rd")
(find-rurima "== Class Methods" "= reopen Object" "refm/api/src/psych/core_ext.rd")
(find-rurima "--- yaml_tag(url)" "== Class Methods" "= reopen Object" "refm/api/src/psych/core_ext.rd")
(find-rurima "--- to_yaml(options = {}) -> String" "== Class Methods" "= reopen Object" "refm/api/src/psych/core_ext.rd")
(find-rurima "--- psych_to_yaml(options = {}) -> String" "== Class Methods" "= reopen Object" "refm/api/src/psych/core_ext.rd")
(find-rurima "= reopen Module" "refm/api/src/psych/core_ext.rd")
(find-rurima "== Instance Methods" "= reopen Module" "refm/api/src/psych/core_ext.rd")
(find-rurima "--- yaml_as(url)" "== Instance Methods" "= reopen Module" "refm/api/src/psych/core_ext.rd")
(find-rurima "--- psych_yaml_as(url)" "== Instance Methods" "= reopen Module" "refm/api/src/psych/core_ext.rd")
(find-rurima "= reopen Kernel" "refm/api/src/psych/core_ext.rd")
(find-rurima "== Instance Methods" "= reopen Kernel" "refm/api/src/psych/core_ext.rd")
(find-rurima "--- y(*objects) -> String" "== Instance Methods" "= reopen Kernel" "refm/api/src/psych/core_ext.rd")
(find-rurima "--- psych_y(*objects) -> String" "== Instance Methods" "= reopen Kernel" "refm/api/src/psych/core_ext.rd")
(find-rurima "= class Psych::Omap < Hash" "refm/api/src/psych/omap.rd")
(find-rurima "= module Psych::Nodes" "refm/api/src/psych/nodes.rd")
(find-rurima "=== YAML AST Requirements" "= module Psych::Nodes" "refm/api/src/psych/nodes.rd")
(find-rurima "= reopen Psych::Handler" "refm/api/src/psych/handler.rd")
(find-rurima "== Instance Methods" "= reopen Psych::Handler" "refm/api/src/psych/handler.rd")
(find-rurima "--- start_stream(encoding)" "== Instance Methods" "= reopen Psych::Handler" "refm/api/src/psych/handler.rd")
(find-rurima "--- start_document(version, tag_directives, implicit)" "== Instance Methods" "= reopen Psych::Handler" "refm/api/src/psych/handler.rd")
(find-rurima "+tag_directives+, if the document is +implicit+." "== Instance Methods" "= reopen Psych::Handler" "refm/api/src/psych/handler.rd")
(find-rurima "+version+ will be an array of integers indicating the YAML version being" "== Instance Methods" "= reopen Psych::Handler" "refm/api/src/psych/handler.rd")
(find-rurima "=== Example" "== Instance Methods" "= reopen Psych::Handler" "refm/api/src/psych/handler.rd")
(find-rurima "--- end_document(implicit)" "=== Example" "== Instance Methods" "= reopen Psych::Handler" "refm/api/src/psych/handler.rd")
(find-rurima "=== Example" "== Instance Methods" "= reopen Psych::Handler" "refm/api/src/psych/handler.rd")
(find-rurima "+implicit+ will be true.  Given this YAML:" "=== Example" "== Instance Methods" "= reopen Psych::Handler" "refm/api/src/psych/handler.rd")
(find-rurima "+implicit+ will be false." "=== Example" "== Instance Methods" "= reopen Psych::Handler" "refm/api/src/psych/handler.rd")
(find-rurima "--- alias(anchor)" "+implicit+ will be false." "=== Example" "== Instance Methods" "= reopen Psych::Handler" "refm/api/src/psych/handler.rd")
(find-rurima "=== Example" "== Instance Methods" "= reopen Psych::Handler" "refm/api/src/psych/handler.rd")
(find-rurima "--- scalar(value, anchor, tag, plain, quoted, style)" "=== Example" "== Instance Methods" "= reopen Psych::Handler" "refm/api/src/psych/handler.rd")
(find-rurima "+anchor+, a +tag+, be implicitly +plain+ or implicitly +quoted+" "=== Example" "== Instance Methods" "= reopen Psych::Handler" "refm/api/src/psych/handler.rd")
(find-rurima "+value+ is the string value of the scalar" "=== Example" "== Instance Methods" "= reopen Psych::Handler" "refm/api/src/psych/handler.rd")
(find-rurima "+anchor+ is an associated anchor or nil" "=== Example" "== Instance Methods" "= reopen Psych::Handler" "refm/api/src/psych/handler.rd")
(find-rurima "+tag+ is an associated tag or nil" "=== Example" "== Instance Methods" "= reopen Psych::Handler" "refm/api/src/psych/handler.rd")
(find-rurima "+plain+ is a boolean value" "=== Example" "== Instance Methods" "= reopen Psych::Handler" "refm/api/src/psych/handler.rd")
(find-rurima "+quoted+ is a boolean value" "=== Example" "== Instance Methods" "= reopen Psych::Handler" "refm/api/src/psych/handler.rd")
(find-rurima "+style+ is an integer idicating the string style" "=== Example" "== Instance Methods" "= reopen Psych::Handler" "refm/api/src/psych/handler.rd")
(find-rurima "+style+" "=== Example" "== Instance Methods" "= reopen Psych::Handler" "refm/api/src/psych/handler.rd")
(find-rurima "=== Example" "== Instance Methods" "= reopen Psych::Handler" "refm/api/src/psych/handler.rd")
(find-rurima "--- start_sequence(anchor, tag, implicit, style)" "=== Example" "== Instance Methods" "= reopen Psych::Handler" "refm/api/src/psych/handler.rd")
(find-rurima "+anchor+ is the anchor associated with the sequence or nil." "=== Example" "== Instance Methods" "= reopen Psych::Handler" "refm/api/src/psych/handler.rd")
(find-rurima "+tag+ is the tag associated with the sequence or nil." "=== Example" "== Instance Methods" "= reopen Psych::Handler" "refm/api/src/psych/handler.rd")
(find-rurima "+implicit+ a boolean indicating whether or not the sequence was implicitly" "=== Example" "== Instance Methods" "= reopen Psych::Handler" "refm/api/src/psych/handler.rd")
(find-rurima "+style+ is an integer indicating the list style." "=== Example" "== Instance Methods" "= reopen Psych::Handler" "refm/api/src/psych/handler.rd")
(find-rurima "+style+." "=== Example" "== Instance Methods" "= reopen Psych::Handler" "refm/api/src/psych/handler.rd")
(find-rurima "=== Example" "== Instance Methods" "= reopen Psych::Handler" "refm/api/src/psych/handler.rd")
(find-rurima "--- end_sequence" "=== Example" "== Instance Methods" "= reopen Psych::Handler" "refm/api/src/psych/handler.rd")
(find-rurima "--- start_mapping(anchor, tag, implicit, style)" "=== Example" "== Instance Methods" "= reopen Psych::Handler" "refm/api/src/psych/handler.rd")
(find-rurima "+anchor+ is the anchor associated with the map or +nil+." "=== Example" "== Instance Methods" "= reopen Psych::Handler" "refm/api/src/psych/handler.rd")
(find-rurima "+tag+ is the tag associated with the map or +nil+." "=== Example" "== Instance Methods" "= reopen Psych::Handler" "refm/api/src/psych/handler.rd")
(find-rurima "+implicit+ is a boolean indicating whether or not the map was implicitly" "=== Example" "== Instance Methods" "= reopen Psych::Handler" "refm/api/src/psych/handler.rd")
(find-rurima "+style+ is an integer indicating the mapping style." "=== Example" "== Instance Methods" "= reopen Psych::Handler" "refm/api/src/psych/handler.rd")
(find-rurima "+style+." "=== Example" "== Instance Methods" "= reopen Psych::Handler" "refm/api/src/psych/handler.rd")
(find-rurima "=== Example" "== Instance Methods" "= reopen Psych::Handler" "refm/api/src/psych/handler.rd")
(find-rurima "--- end_mapping" "=== Example" "== Instance Methods" "= reopen Psych::Handler" "refm/api/src/psych/handler.rd")
(find-rurima "--- empty" "=== Example" "== Instance Methods" "= reopen Psych::Handler" "refm/api/src/psych/handler.rd")
(find-rurima "--- end_stream" "=== Example" "== Instance Methods" "= reopen Psych::Handler" "refm/api/src/psych/handler.rd")
(find-rurima "--- streaming? -> false" "=== Example" "== Instance Methods" "= reopen Psych::Handler" "refm/api/src/psych/handler.rd")
(find-rurima "= class Psych::Coder" "refm/api/src/psych/coder.rd")
(find-rurima "== Class Methods" "= class Psych::Coder" "refm/api/src/psych/coder.rd")
(find-rurima "--- new(tag) -> Psych::Coder" "== Class Methods" "= class Psych::Coder" "refm/api/src/psych/coder.rd")
(find-rurima "== Instance Methods" "= class Psych::Coder" "refm/api/src/psych/coder.rd")
(find-rurima "--- tag" "== Instance Methods" "= class Psych::Coder" "refm/api/src/psych/coder.rd")
(find-rurima "--- tag=(val)" "== Instance Methods" "= class Psych::Coder" "refm/api/src/psych/coder.rd")
(find-rurima "--- style" "== Instance Methods" "= class Psych::Coder" "refm/api/src/psych/coder.rd")
(find-rurima "--- style=(val)" "== Instance Methods" "= class Psych::Coder" "refm/api/src/psych/coder.rd")
(find-rurima "--- implicit" "== Instance Methods" "= class Psych::Coder" "refm/api/src/psych/coder.rd")
(find-rurima "--- implicit=(val)" "== Instance Methods" "= class Psych::Coder" "refm/api/src/psych/coder.rd")
(find-rurima "--- object" "== Instance Methods" "= class Psych::Coder" "refm/api/src/psych/coder.rd")
(find-rurima "--- object=(val)" "== Instance Methods" "= class Psych::Coder" "refm/api/src/psych/coder.rd")
(find-rurima "--- type" "== Instance Methods" "= class Psych::Coder" "refm/api/src/psych/coder.rd")
(find-rurima "--- seq" "== Instance Methods" "= class Psych::Coder" "refm/api/src/psych/coder.rd")
(find-rurima "--- scalar(*args)" "== Instance Methods" "= class Psych::Coder" "refm/api/src/psych/coder.rd")
(find-rurima "--- map(tag = self.tag, style = self.style)" "== Instance Methods" "= class Psych::Coder" "refm/api/src/psych/coder.rd")
(find-rurima "--- map(tag = self.tag, style = self.style) { ... }" "== Instance Methods" "= class Psych::Coder" "refm/api/src/psych/coder.rd")
(find-rurima "--- epresent_scalar(tag, value)" "== Instance Methods" "= class Psych::Coder" "refm/api/src/psych/coder.rd")
(find-rurima "--- represent_seq(tag, list)" "== Instance Methods" "= class Psych::Coder" "refm/api/src/psych/coder.rd")
(find-rurima "--- represent_map(tag, map)" "== Instance Methods" "= class Psych::Coder" "refm/api/src/psych/coder.rd")
(find-rurima "--- represent_object(tag, obj)" "== Instance Methods" "= class Psych::Coder" "refm/api/src/psych/coder.rd")
(find-rurima "--- scalar=(value)" "== Instance Methods" "= class Psych::Coder" "refm/api/src/psych/coder.rd")
(find-rurima "--- map=(map)" "== Instance Methods" "= class Psych::Coder" "refm/api/src/psych/coder.rd")
(find-rurima "--- []=(k, v)" "== Instance Methods" "= class Psych::Coder" "refm/api/src/psych/coder.rd")
(find-rurima "--- [](k)" "== Instance Methods" "= class Psych::Coder" "refm/api/src/psych/coder.rd")
(find-rurima "--- seq=(list)" "== Instance Methods" "= class Psych::Coder" "refm/api/src/psych/coder.rd")
(find-rurima "= class Psych::Visitors::YAMLTree < Psych::Visitors::Visitor" "refm/api/src/psych/visitors/yaml_tree.rd")
(find-rurima "== Class Methods" "= class Psych::Visitors::YAMLTree < Psych::Visitors::Visitor" "refm/api/src/psych/visitors/yaml_tree.rd")
(find-rurima "--- new(options = {}, emitter = Psych::TreeBuilder.new) -> Psych::Visitors::YAMLTree" "== Class Methods" "= class Psych::Visitors::YAMLTree < Psych::Visitors::Visitor" "refm/api/src/psych/visitors/yaml_tree.rd")
(find-rurima "== Instance Methods" "= class Psych::Visitors::YAMLTree < Psych::Visitors::Visitor" "refm/api/src/psych/visitors/yaml_tree.rd")
(find-rurima "--- started" "== Instance Methods" "= class Psych::Visitors::YAMLTree < Psych::Visitors::Visitor" "refm/api/src/psych/visitors/yaml_tree.rd")
(find-rurima "--- started?" "== Instance Methods" "= class Psych::Visitors::YAMLTree < Psych::Visitors::Visitor" "refm/api/src/psych/visitors/yaml_tree.rd")
(find-rurima "--- finished" "== Instance Methods" "= class Psych::Visitors::YAMLTree < Psych::Visitors::Visitor" "refm/api/src/psych/visitors/yaml_tree.rd")
(find-rurima "--- finished?" "== Instance Methods" "= class Psych::Visitors::YAMLTree < Psych::Visitors::Visitor" "refm/api/src/psych/visitors/yaml_tree.rd")
(find-rurima "--- start(encoding = Nodes::Stream::UTF8)" "== Instance Methods" "= class Psych::Visitors::YAMLTree < Psych::Visitors::Visitor" "refm/api/src/psych/visitors/yaml_tree.rd")
(find-rurima "--- finish" "== Instance Methods" "= class Psych::Visitors::YAMLTree < Psych::Visitors::Visitor" "refm/api/src/psych/visitors/yaml_tree.rd")
(find-rurima "--- tree" "== Instance Methods" "= class Psych::Visitors::YAMLTree < Psych::Visitors::Visitor" "refm/api/src/psych/visitors/yaml_tree.rd")
(find-rurima "--- push(object)" "== Instance Methods" "= class Psych::Visitors::YAMLTree < Psych::Visitors::Visitor" "refm/api/src/psych/visitors/yaml_tree.rd")
(find-rurima "--- accept(target)" "== Instance Methods" "= class Psych::Visitors::YAMLTree < Psych::Visitors::Visitor" "refm/api/src/psych/visitors/yaml_tree.rd")
(find-rurima "--- visit_Psych_Omap(o)" "== Instance Methods" "= class Psych::Visitors::YAMLTree < Psych::Visitors::Visitor" "refm/api/src/psych/visitors/yaml_tree.rd")
(find-rurima "--- visit_Object(o)" "== Instance Methods" "= class Psych::Visitors::YAMLTree < Psych::Visitors::Visitor" "refm/api/src/psych/visitors/yaml_tree.rd")
(find-rurima "--- visit_Struct(o)" "== Instance Methods" "= class Psych::Visitors::YAMLTree < Psych::Visitors::Visitor" "refm/api/src/psych/visitors/yaml_tree.rd")
(find-rurima "--- visit_Exception(o)" "== Instance Methods" "= class Psych::Visitors::YAMLTree < Psych::Visitors::Visitor" "refm/api/src/psych/visitors/yaml_tree.rd")
(find-rurima "--- visit_Regexp(o)" "== Instance Methods" "= class Psych::Visitors::YAMLTree < Psych::Visitors::Visitor" "refm/api/src/psych/visitors/yaml_tree.rd")
(find-rurima "--- visit_DateTime(o)" "== Instance Methods" "= class Psych::Visitors::YAMLTree < Psych::Visitors::Visitor" "refm/api/src/psych/visitors/yaml_tree.rd")
(find-rurima "--- visit_Time(o)" "== Instance Methods" "= class Psych::Visitors::YAMLTree < Psych::Visitors::Visitor" "refm/api/src/psych/visitors/yaml_tree.rd")
(find-rurima "--- visit_Rational(o)" "== Instance Methods" "= class Psych::Visitors::YAMLTree < Psych::Visitors::Visitor" "refm/api/src/psych/visitors/yaml_tree.rd")
(find-rurima "--- visit_Complex(o)" "== Instance Methods" "= class Psych::Visitors::YAMLTree < Psych::Visitors::Visitor" "refm/api/src/psych/visitors/yaml_tree.rd")
(find-rurima "--- visit_Integer(o)" "== Instance Methods" "= class Psych::Visitors::YAMLTree < Psych::Visitors::Visitor" "refm/api/src/psych/visitors/yaml_tree.rd")
(find-rurima "--- visit_Float(o)" "== Instance Methods" "= class Psych::Visitors::YAMLTree < Psych::Visitors::Visitor" "refm/api/src/psych/visitors/yaml_tree.rd")
(find-rurima "--- visit_String(o)" "== Instance Methods" "= class Psych::Visitors::YAMLTree < Psych::Visitors::Visitor" "refm/api/src/psych/visitors/yaml_tree.rd")
(find-rurima "--- visit_Module(o)" "== Instance Methods" "= class Psych::Visitors::YAMLTree < Psych::Visitors::Visitor" "refm/api/src/psych/visitors/yaml_tree.rd")
(find-rurima "--- visit_Class(o)" "== Instance Methods" "= class Psych::Visitors::YAMLTree < Psych::Visitors::Visitor" "refm/api/src/psych/visitors/yaml_tree.rd")
(find-rurima "--- visit_Range(o)" "== Instance Methods" "= class Psych::Visitors::YAMLTree < Psych::Visitors::Visitor" "refm/api/src/psych/visitors/yaml_tree.rd")
(find-rurima "--- visit_Hash(o)" "== Instance Methods" "= class Psych::Visitors::YAMLTree < Psych::Visitors::Visitor" "refm/api/src/psych/visitors/yaml_tree.rd")
(find-rurima "--- visit_Psych_Set(o)" "== Instance Methods" "= class Psych::Visitors::YAMLTree < Psych::Visitors::Visitor" "refm/api/src/psych/visitors/yaml_tree.rd")
(find-rurima "--- visit_Array(o)" "== Instance Methods" "= class Psych::Visitors::YAMLTree < Psych::Visitors::Visitor" "refm/api/src/psych/visitors/yaml_tree.rd")
(find-rurima "--- visit_NilClass(o)" "== Instance Methods" "= class Psych::Visitors::YAMLTree < Psych::Visitors::Visitor" "refm/api/src/psych/visitors/yaml_tree.rd")
(find-rurima "--- visit_Symbol(o)" "== Instance Methods" "= class Psych::Visitors::YAMLTree < Psych::Visitors::Visitor" "refm/api/src/psych/visitors/yaml_tree.rd")
(find-rurima "= class Psych::Visitors::ToRuby < Psych::Visitors::Visitor" "refm/api/src/psych/visitors/to_ruby.rd")
(find-rurima "== Class Methods" "= class Psych::Visitors::ToRuby < Psych::Visitors::Visitor" "refm/api/src/psych/visitors/to_ruby.rd")
(find-rurima "--- new -> Psych::Visitors::ToRuby" "== Class Methods" "= class Psych::Visitors::ToRuby < Psych::Visitors::Visitor" "refm/api/src/psych/visitors/to_ruby.rd")
(find-rurima "== Instance Methods" "= class Psych::Visitors::ToRuby < Psych::Visitors::Visitor" "refm/api/src/psych/visitors/to_ruby.rd")
(find-rurima "--- accept(target)" "== Instance Methods" "= class Psych::Visitors::ToRuby < Psych::Visitors::Visitor" "refm/api/src/psych/visitors/to_ruby.rd")
(find-rurima "--- visit_Psych_Nodes_Scalar(o)" "== Instance Methods" "= class Psych::Visitors::ToRuby < Psych::Visitors::Visitor" "refm/api/src/psych/visitors/to_ruby.rd")
(find-rurima "--- visit_Psych_Nodes_Sequence(o)" "== Instance Methods" "= class Psych::Visitors::ToRuby < Psych::Visitors::Visitor" "refm/api/src/psych/visitors/to_ruby.rd")
(find-rurima "--- visit_Psych_Nodes_Mapping(o)" "== Instance Methods" "= class Psych::Visitors::ToRuby < Psych::Visitors::Visitor" "refm/api/src/psych/visitors/to_ruby.rd")
(find-rurima "--- visit_Psych_Nodes_Document(o)" "== Instance Methods" "= class Psych::Visitors::ToRuby < Psych::Visitors::Visitor" "refm/api/src/psych/visitors/to_ruby.rd")
(find-rurima "--- visit_Psych_Nodes_Stream(o)" "== Instance Methods" "= class Psych::Visitors::ToRuby < Psych::Visitors::Visitor" "refm/api/src/psych/visitors/to_ruby.rd")
(find-rurima "--- visit_Psych_Nodes_Alias(o)" "== Instance Methods" "= class Psych::Visitors::ToRuby < Psych::Visitors::Visitor" "refm/api/src/psych/visitors/to_ruby.rd")
(find-rurima "= class Psych::Visitors::JSONTree < Psych::Visitors::YAMLTree" "refm/api/src/psych/visitors/json_tree.rd")
(find-rurima "== Class Methods" "= class Psych::Visitors::JSONTree < Psych::Visitors::YAMLTree" "refm/api/src/psych/visitors/json_tree.rd")
(find-rurima "--- new(options = {}, emitter = Psych::JSON::TreeBuilder.new)" "== Class Methods" "= class Psych::Visitors::JSONTree < Psych::Visitors::YAMLTree" "refm/api/src/psych/visitors/json_tree.rd")
(find-rurima "== Instance Methods" "= class Psych::Visitors::JSONTree < Psych::Visitors::YAMLTree" "refm/api/src/psych/visitors/json_tree.rd")
(find-rurima "--- accept(target)" "== Instance Methods" "= class Psych::Visitors::JSONTree < Psych::Visitors::YAMLTree" "refm/api/src/psych/visitors/json_tree.rd")
(find-rurima "= class Psych::Visitors::Emitter < Psych::Visitors::Visitor" "refm/api/src/psych/visitors/emitter.rd")
(find-rurima "== Class Methods" "= class Psych::Visitors::Emitter < Psych::Visitors::Visitor" "refm/api/src/psych/visitors/emitter.rd")
(find-rurima "--- initialize(io, options = {}) -> Psych::Visitors::Emitter" "== Class Methods" "= class Psych::Visitors::Emitter < Psych::Visitors::Visitor" "refm/api/src/psych/visitors/emitter.rd")
(find-rurima "== Instance Methods" "= class Psych::Visitors::Emitter < Psych::Visitors::Visitor" "refm/api/src/psych/visitors/emitter.rd")
(find-rurima "--- visit_Psych_Nodes_Stream(o)" "== Instance Methods" "= class Psych::Visitors::Emitter < Psych::Visitors::Visitor" "refm/api/src/psych/visitors/emitter.rd")
(find-rurima "--- visit_Psych_Nodes_Document(o)" "== Instance Methods" "= class Psych::Visitors::Emitter < Psych::Visitors::Visitor" "refm/api/src/psych/visitors/emitter.rd")
(find-rurima "--- visit_Psych_Nodes_Scalar(o)" "== Instance Methods" "= class Psych::Visitors::Emitter < Psych::Visitors::Visitor" "refm/api/src/psych/visitors/emitter.rd")
(find-rurima "--- visit_Psych_Nodes_Sequence(o)" "== Instance Methods" "= class Psych::Visitors::Emitter < Psych::Visitors::Visitor" "refm/api/src/psych/visitors/emitter.rd")
(find-rurima "--- visit_Psych_Nodes_Mapping(o)" "== Instance Methods" "= class Psych::Visitors::Emitter < Psych::Visitors::Visitor" "refm/api/src/psych/visitors/emitter.rd")
(find-rurima "--- visit_Psych_Nodes_Alias(o)" "== Instance Methods" "= class Psych::Visitors::Emitter < Psych::Visitors::Visitor" "refm/api/src/psych/visitors/emitter.rd")
(find-rurima "= class Psych::Visitors::Visitor" "refm/api/src/psych/visitors/visitor.rd")
(find-rurima "== Instance Methods" "= class Psych::Visitors::Visitor" "refm/api/src/psych/visitors/visitor.rd")
(find-rurima "--- accept(target)" "== Instance Methods" "= class Psych::Visitors::Visitor" "refm/api/src/psych/visitors/visitor.rd")
(find-rurima "= class Psych::Visitors::DepthFirst < Psych::Visitors::Visitor" "refm/api/src/psych/visitors/depth_first.rd")
(find-rurima "== Class Methods" "= class Psych::Visitors::DepthFirst < Psych::Visitors::Visitor" "refm/api/src/psych/visitors/depth_first.rd")
(find-rurima "--- new(block) -> Psych::Visitors::DepthFirst" "== Class Methods" "= class Psych::Visitors::DepthFirst < Psych::Visitors::Visitor" "refm/api/src/psych/visitors/depth_first.rd")
(find-rurima "= class Psych::TreeBuilder < Psych::Handler" "refm/api/src/psych/tree_builder.rd")
(find-rurima "== Class Methods" "= class Psych::TreeBuilder < Psych::Handler" "refm/api/src/psych/tree_builder.rd")
(find-rurima "--- new -> Psych::TreeBuilder" "== Class Methods" "= class Psych::TreeBuilder < Psych::Handler" "refm/api/src/psych/tree_builder.rd")
(find-rurima "== Instance Methods" "= class Psych::TreeBuilder < Psych::Handler" "refm/api/src/psych/tree_builder.rd")
(find-rurima "--- root" "== Instance Methods" "= class Psych::TreeBuilder < Psych::Handler" "refm/api/src/psych/tree_builder.rd")
(find-rurima "--- start_sequence(anchor, tag, implicit, style)" "== Instance Methods" "= class Psych::TreeBuilder < Psych::Handler" "refm/api/src/psych/tree_builder.rd")
(find-rurima "--- end_sequence" "== Instance Methods" "= class Psych::TreeBuilder < Psych::Handler" "refm/api/src/psych/tree_builder.rd")
(find-rurima "--- start_mapping(anchor, tag, implicit, style)" "== Instance Methods" "= class Psych::TreeBuilder < Psych::Handler" "refm/api/src/psych/tree_builder.rd")
(find-rurima "--- end_mapping" "== Instance Methods" "= class Psych::TreeBuilder < Psych::Handler" "refm/api/src/psych/tree_builder.rd")
(find-rurima "--- start_document(version, tag_directives, implicit)" "== Instance Methods" "= class Psych::TreeBuilder < Psych::Handler" "refm/api/src/psych/tree_builder.rd")
(find-rurima "--- end_document(implicit_end = !streaming?)" "== Instance Methods" "= class Psych::TreeBuilder < Psych::Handler" "refm/api/src/psych/tree_builder.rd")
(find-rurima "--- start_stream(encoding)" "== Instance Methods" "= class Psych::TreeBuilder < Psych::Handler" "refm/api/src/psych/tree_builder.rd")
(find-rurima "--- end_stream" "== Instance Methods" "= class Psych::TreeBuilder < Psych::Handler" "refm/api/src/psych/tree_builder.rd")
(find-rurima "--- scalar(value, anchor, tag, plain, quoted, style)" "== Instance Methods" "= class Psych::TreeBuilder < Psych::Handler" "refm/api/src/psych/tree_builder.rd")
(find-rurima "--- alias(anchor)" "== Instance Methods" "= class Psych::TreeBuilder < Psych::Handler" "refm/api/src/psych/tree_builder.rd")
(find-rurima "= module Psych::Streaming" "refm/api/src/psych/streaming.rd")
(find-rurima "== Class Methods" "= module Psych::Streaming" "refm/api/src/psych/streaming.rd")
(find-rurima "--- new" "== Class Methods" "= module Psych::Streaming" "refm/api/src/psych/streaming.rd")
(find-rurima "--- start(encoding = Nodes::Stream::UTF8)" "== Class Methods" "= module Psych::Streaming" "refm/api/src/psych/streaming.rd")
(find-rurima "= reopen Psych" "refm/api/src/psych/deprecated.rd")
(find-rurima "== Class Methods" "= reopen Psych" "refm/api/src/psych/deprecated.rd")
(find-rurima "--- load_documents(yaml, &block)" "== Class Methods" "= reopen Psych" "refm/api/src/psych/deprecated.rd")
(find-rurima "--- detect_implicit(thing)" "== Class Methods" "= reopen Psych" "refm/api/src/psych/deprecated.rd")
(find-rurima "--- add_ruby_type(type_tag, &block)" "== Class Methods" "= reopen Psych" "refm/api/src/psych/deprecated.rd")
(find-rurima "--- add_private_type(type_tag, &block)" "== Class Methods" "= reopen Psych" "refm/api/src/psych/deprecated.rd")
(find-rurima "--- tagurize(thing)" "== Class Methods" "= reopen Psych" "refm/api/src/psych/deprecated.rd")
(find-rurima "--- read_type_class(type, reference)" "== Class Methods" "= reopen Psych" "refm/api/src/psych/deprecated.rd")
(find-rurima "--- object_maker(klass, hash)" "== Class Methods" "= reopen Psych" "refm/api/src/psych/deprecated.rd")
(find-rurima "= class Psych::Set < Hash" "refm/api/src/psych/set.rd")
(find-rurima "= class Psych::JSON::TreeBuilder" "refm/api/src/psych/json/tree_builder.rd")
(find-rurima "= class Psych::JSON::Stream < Psych::Visitors::JSONTree" "refm/api/src/psych/json/stream.rd")
(find-rurima "= reopen Psych::Parser" "refm/api/src/psych/parser.rd")
(find-rurima "== Class Methods" "= reopen Psych::Parser" "refm/api/src/psych/parser.rd")
(find-rurima "--- new(handler = Handler.new) -> Psych::Parser" "== Class Methods" "= reopen Psych::Parser" "refm/api/src/psych/parser.rd")
(find-rurima "== Instance Methods" "= reopen Psych::Parser" "refm/api/src/psych/parser.rd")
(find-rurima "--- handler" "== Instance Methods" "= reopen Psych::Parser" "refm/api/src/psych/parser.rd")
(find-rurima "--- handler=(val)" "== Instance Methods" "= reopen Psych::Parser" "refm/api/src/psych/parser.rd")
(find-rurima "= class Psych::Parser::Mark < Struct" "refm/api/src/psych/parser.rd")
(find-rurima "== Instance Methods" "= class Psych::Parser::Mark < Struct" "refm/api/src/psych/parser.rd")
(find-rurima "--- index" "== Instance Methods" "= class Psych::Parser::Mark < Struct" "refm/api/src/psych/parser.rd")
(find-rurima "--- index=(val)" "== Instance Methods" "= class Psych::Parser::Mark < Struct" "refm/api/src/psych/parser.rd")
(find-rurima "--- line" "== Instance Methods" "= class Psych::Parser::Mark < Struct" "refm/api/src/psych/parser.rd")
(find-rurima "--- line=(val)" "== Instance Methods" "= class Psych::Parser::Mark < Struct" "refm/api/src/psych/parser.rd")
(find-rurima "--- column" "== Instance Methods" "= class Psych::Parser::Mark < Struct" "refm/api/src/psych/parser.rd")
(find-rurima "--- column=(val)" "== Instance Methods" "= class Psych::Parser::Mark < Struct" "refm/api/src/psych/parser.rd")
(find-rurima "= class Psych::Stream < Psych::Visitors::YAMLTree" "refm/api/src/psych/stream.rd")
(find-rurima "=== 利用局面" "refm/api/src/mathn.rd")
(find-rurima "==== 整数と有理数の相互変換" "=== 利用局面" "refm/api/src/mathn.rd")
(find-rurima "==== 実数と複素数の相互変換" "=== 利用局面" "refm/api/src/mathn.rd")
(find-rurima "=== 使用上の注意" "refm/api/src/mathn.rd")
(find-rurima "=== Prime" "refm/api/src/mathn.rd")
(find-rurima "= reopen Integer" "refm/api/src/mathn.rd")
(find-rurima "== Class Methods" "= reopen Integer" "refm/api/src/mathn.rd")
(find-rurima "--- from_prime_division(pd) -> Integer" "== Class Methods" "= reopen Integer" "refm/api/src/mathn.rd")
(find-rurima "== Instance Methods" "= reopen Integer" "refm/api/src/mathn.rd")
(find-rurima "--- gcd2(int)" "== Instance Methods" "= reopen Integer" "refm/api/src/mathn.rd")
(find-rurima "--- prime_division" "== Instance Methods" "= reopen Integer" "refm/api/src/mathn.rd")
(find-rurima "= redefine Fixnum" "refm/api/src/mathn.rd")
(find-rurima "== Instance Methods" "= redefine Fixnum" "refm/api/src/mathn.rd")
(find-rurima "--- /(other)" "== Instance Methods" "= redefine Fixnum" "refm/api/src/mathn.rd")
(find-rurima "= redefine Bignum" "refm/api/src/mathn.rd")
(find-rurima "== Instance Methods" "= redefine Bignum" "refm/api/src/mathn.rd")
(find-rurima "--- /(other)" "== Instance Methods" "= redefine Bignum" "refm/api/src/mathn.rd")
(find-rurima "= redefine Rational" "refm/api/src/mathn.rd")
(find-rurima "== Instance Methods" "= redefine Rational" "refm/api/src/mathn.rd")
(find-rurima "--- **(rhs) -> Numeric" "== Instance Methods" "= redefine Rational" "refm/api/src/mathn.rd")
(find-rurima "--- power2" "== Instance Methods" "= redefine Rational" "refm/api/src/mathn.rd")
(find-rurima "--- inspect" "== Instance Methods" "= redefine Rational" "refm/api/src/mathn.rd")
(find-rurima "= redefine Math" "refm/api/src/mathn.rd")
(find-rurima "== Module Functions" "= redefine Math" "refm/api/src/mathn.rd")
(find-rurima "--- sqrt(a) -> Numeric" "== Module Functions" "= redefine Math" "refm/api/src/mathn.rd")
(find-rurima "--- rsqrt(a) -> Numeric" "== Module Functions" "= redefine Math" "refm/api/src/mathn.rd")
(find-rurima "= class Prime < Object" "refm/api/src/mathn.rd")
(find-rurima "== Class Methods" "= class Prime < Object" "refm/api/src/mathn.rd")
(find-rurima "--- new" "== Class Methods" "= class Prime < Object" "refm/api/src/mathn.rd")
(find-rurima "== Instance Methods" "= class Prime < Object" "refm/api/src/mathn.rd")
(find-rurima "--- succ" "== Instance Methods" "= class Prime < Object" "refm/api/src/mathn.rd")
(find-rurima "--- next" "== Instance Methods" "= class Prime < Object" "refm/api/src/mathn.rd")
(find-rurima "--- each {...} -> object" "== Instance Methods" "= class Prime < Object" "refm/api/src/mathn.rd")
(find-rurima "= reopen Rational" "refm/api/src/mathn.rd")
(find-rurima "== Constants" "= reopen Rational" "refm/api/src/mathn.rd")
(find-rurima "--- Unify" "== Constants" "= reopen Rational" "refm/api/src/mathn.rd")
(find-rurima "= reopen Complex" "refm/api/src/mathn.rd")
(find-rurima "== Constants" "= reopen Complex" "refm/api/src/mathn.rd")
(find-rurima "--- Unify" "== Constants" "= reopen Complex" "refm/api/src/mathn.rd")
(find-rurima "= module Gem::RequirePathsBuilder" "refm/api/src/rubygems/require_paths_builder.rd")
(find-rurima "== Public Instance Methods" "= module Gem::RequirePathsBuilder" "refm/api/src/rubygems/require_paths_builder.rd")
(find-rurima "--- write_require_paths_file_if_needed(spec = @spec, gem_home = @gem_home)" "== Public Instance Methods" "= module Gem::RequirePathsBuilder" "refm/api/src/rubygems/require_paths_builder.rd")
(find-rurima "= class Gem::Version" "refm/api/src/rubygems/version/Gem__Version")
(find-rurima "== Singleton Methods" "= class Gem::Version" "refm/api/src/rubygems/version/Gem__Version")
(find-rurima "--- correct?(version) -> bool" "== Singleton Methods" "= class Gem::Version" "refm/api/src/rubygems/version/Gem__Version")
(find-rurima "--- create(input) -> Gem::Version | nil" "== Singleton Methods" "= class Gem::Version" "refm/api/src/rubygems/version/Gem__Version")
(find-rurima "== Public Instance Methods" "= class Gem::Version" "refm/api/src/rubygems/version/Gem__Version")
(find-rurima "--- <=>(other) -> Integer | nil" "== Public Instance Methods" "= class Gem::Version" "refm/api/src/rubygems/version/Gem__Version")
(find-rurima "--- bump -> Gem::Version" "== Public Instance Methods" "= class Gem::Version" "refm/api/src/rubygems/version/Gem__Version")
(find-rurima "--- eql?(other) -> bool" "== Public Instance Methods" "= class Gem::Version" "refm/api/src/rubygems/version/Gem__Version")
(find-rurima "--- ints -> [Integer]" "== Public Instance Methods" "= class Gem::Version" "refm/api/src/rubygems/version/Gem__Version")
(find-rurima "--- marshal_dump -> Array" "== Public Instance Methods" "= class Gem::Version" "refm/api/src/rubygems/version/Gem__Version")
(find-rurima "--- marshal_load(array) -> String" "== Public Instance Methods" "= class Gem::Version" "refm/api/src/rubygems/version/Gem__Version")
(find-rurima "--- normalize -> ()" "== Public Instance Methods" "= class Gem::Version" "refm/api/src/rubygems/version/Gem__Version")
(find-rurima "--- to_ints -> [Integer]" "== Public Instance Methods" "= class Gem::Version" "refm/api/src/rubygems/version/Gem__Version")
(find-rurima "--- to_s -> String" "== Public Instance Methods" "= class Gem::Version" "refm/api/src/rubygems/version/Gem__Version")
(find-rurima "--- to_yaml_properties -> [String]" "== Public Instance Methods" "= class Gem::Version" "refm/api/src/rubygems/version/Gem__Version")
(find-rurima "--- version -> String" "== Public Instance Methods" "= class Gem::Version" "refm/api/src/rubygems/version/Gem__Version")
(find-rurima "--- version=(version)" "== Public Instance Methods" "= class Gem::Version" "refm/api/src/rubygems/version/Gem__Version")
(find-rurima "--- yaml_initialize(tag, values) -> String" "== Public Instance Methods" "= class Gem::Version" "refm/api/src/rubygems/version/Gem__Version")
(find-rurima "= class Gem::Exception < RuntimeError" "refm/api/src/rubygems/exceptions.rd")
(find-rurima "= class Gem::CommandLineError < Gem::Exception" "refm/api/src/rubygems/exceptions.rd")
(find-rurima "= class Gem::DependencyError < Gem::Exception" "refm/api/src/rubygems/exceptions.rd")
(find-rurima "= class Gem::DependencyRemovalException < Gem::Exception" "refm/api/src/rubygems/exceptions.rd")
(find-rurima "= class Gem::GemNotInHomeException < Gem::Exception" "refm/api/src/rubygems/exceptions.rd")
(find-rurima "= class Gem::DocumentError < Gem::Exception" "refm/api/src/rubygems/exceptions.rd")
(find-rurima "= class Gem::EndOfYAMLException < Gem::Exception" "refm/api/src/rubygems/exceptions.rd")
(find-rurima "= class Gem::FilePermissionError < Gem::Exception" "refm/api/src/rubygems/exceptions.rd")
(find-rurima "= class Gem::FormatException < Gem::Exception" "refm/api/src/rubygems/exceptions.rd")
(find-rurima "= class Gem::GemNotFoundException < Gem::Exception" "refm/api/src/rubygems/exceptions.rd")
(find-rurima "= class Gem::InstallError < Gem::Exception" "refm/api/src/rubygems/exceptions.rd")
(find-rurima "= class Gem::InvalidSpecificationException < Gem::Exception" "refm/api/src/rubygems/exceptions.rd")
(find-rurima "= class Gem::OperationNotSupportedError < Gem::Exception" "refm/api/src/rubygems/exceptions.rd")
(find-rurima "= class Gem::RemoteError < Gem::Exception" "refm/api/src/rubygems/exceptions.rd")
(find-rurima "= class Gem::RemoteInstallationCancelled < Gem::Exception" "refm/api/src/rubygems/exceptions.rd")
(find-rurima "= class Gem::RemoteInstallationSkipped < Gem::Exception" "refm/api/src/rubygems/exceptions.rd")
(find-rurima "= class Gem::RemoteSourceException < Gem::Exception" "refm/api/src/rubygems/exceptions.rd")
(find-rurima "= class Gem::VerificationError < Gem::Exception" "refm/api/src/rubygems/exceptions.rd")
(find-rurima "= class Gem::SystemExitException < SystemExit" "refm/api/src/rubygems/exceptions.rd")
(find-rurima "= class Gem::Validator < Object" "refm/api/src/rubygems/validator.rd")
(find-rurima "== Public Instance Methods" "= class Gem::Validator < Object" "refm/api/src/rubygems/validator.rd")
(find-rurima "--- alien -> [Gem::Validator.ErrorData]" "== Public Instance Methods" "= class Gem::Validator < Object" "refm/api/src/rubygems/validator.rd")
(find-rurima "--- remove_leading_dot_dir(path) -> String" "== Public Instance Methods" "= class Gem::Validator < Object" "refm/api/src/rubygems/validator.rd")
(find-rurima "--- unit_test(gem_spec)" "== Public Instance Methods" "= class Gem::Validator < Object" "refm/api/src/rubygems/validator.rd")
(find-rurima "--- verify_gem(gem_data) -> ()" "== Public Instance Methods" "= class Gem::Validator < Object" "refm/api/src/rubygems/validator.rd")
(find-rurima "--- verify_gem_file(gem_path) -> ()" "== Public Instance Methods" "= class Gem::Validator < Object" "refm/api/src/rubygems/validator.rd")
(find-rurima "== Constants" "= class Gem::Validator < Object" "refm/api/src/rubygems/validator.rd")
(find-rurima "--- ErrorData" "== Constants" "= class Gem::Validator < Object" "refm/api/src/rubygems/validator.rd")
(find-rurima "= reopen Kernel" "refm/api/src/rubygems/timer.rd")
(find-rurima "== Private Instance Methods" "= reopen Kernel" "refm/api/src/rubygems/timer.rd")
(find-rurima "--- time(msg, width = 25){ ... } -> object" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/rubygems/timer.rd")
(find-rurima "= module Gem::Ext" "refm/api/src/rubygems/ext.rd")
(find-rurima "= module Gem::LocalRemoteOptions" "refm/api/src/rubygems/local_remote_options.rd")
(find-rurima "== Public Instance Methods" "= module Gem::LocalRemoteOptions" "refm/api/src/rubygems/local_remote_options.rd")
(find-rurima "--- accept_uri_http" "== Public Instance Methods" "= module Gem::LocalRemoteOptions" "refm/api/src/rubygems/local_remote_options.rd")
(find-rurima "--- add_bulk_threshold_option" "== Public Instance Methods" "= module Gem::LocalRemoteOptions" "refm/api/src/rubygems/local_remote_options.rd")
(find-rurima "--- add_local_remote_options" "== Public Instance Methods" "= module Gem::LocalRemoteOptions" "refm/api/src/rubygems/local_remote_options.rd")
(find-rurima "--- add_proxy_option" "== Public Instance Methods" "= module Gem::LocalRemoteOptions" "refm/api/src/rubygems/local_remote_options.rd")
(find-rurima "--- add_source_option" "== Public Instance Methods" "= module Gem::LocalRemoteOptions" "refm/api/src/rubygems/local_remote_options.rd")
(find-rurima "--- add_update_sources_option" "== Public Instance Methods" "= module Gem::LocalRemoteOptions" "refm/api/src/rubygems/local_remote_options.rd")
(find-rurima "--- both? -> bool" "== Public Instance Methods" "= module Gem::LocalRemoteOptions" "refm/api/src/rubygems/local_remote_options.rd")
(find-rurima "--- local? -> bool" "== Public Instance Methods" "= module Gem::LocalRemoteOptions" "refm/api/src/rubygems/local_remote_options.rd")
(find-rurima "--- remote? -> bool" "== Public Instance Methods" "= module Gem::LocalRemoteOptions" "refm/api/src/rubygems/local_remote_options.rd")
(find-rurima "= class Gem::Installer" "refm/api/src/rubygems/installer.rd")
(find-rurima "== Public Instance Methods" "= class Gem::Installer" "refm/api/src/rubygems/installer.rd")
(find-rurima "--- app_script_text -> String" "== Public Instance Methods" "= class Gem::Installer" "refm/api/src/rubygems/installer.rd")
(find-rurima "--- bin_dir -> String" "== Public Instance Methods" "= class Gem::Installer" "refm/api/src/rubygems/installer.rd")
(find-rurima "--- build_extensions" "== Public Instance Methods" "= class Gem::Installer" "refm/api/src/rubygems/installer.rd")
(find-rurima "--- ensure_dependency(spec, dependency) -> true" "== Public Instance Methods" "= class Gem::Installer" "refm/api/src/rubygems/installer.rd")
(find-rurima "--- extract_files" "== Public Instance Methods" "= class Gem::Installer" "refm/api/src/rubygems/installer.rd")
(find-rurima "--- formatted_program_filename(filename) -> String" "== Public Instance Methods" "= class Gem::Installer" "refm/api/src/rubygems/installer.rd")
(find-rurima "--- gem_home -> String" "== Public Instance Methods" "= class Gem::Installer" "refm/api/src/rubygems/installer.rd")
(find-rurima "--- generate_bin" "== Public Instance Methods" "= class Gem::Installer" "refm/api/src/rubygems/installer.rd")
(find-rurima "--- generate_bin_script(filename, bindir)" "== Public Instance Methods" "= class Gem::Installer" "refm/api/src/rubygems/installer.rd")
(find-rurima "--- generate_bin_symlink(filename, bindir)" "== Public Instance Methods" "= class Gem::Installer" "refm/api/src/rubygems/installer.rd")
(find-rurima "--- generate_windows_script(filename, bindir)" "== Public Instance Methods" "= class Gem::Installer" "refm/api/src/rubygems/installer.rd")
(find-rurima "--- generate_windows_script(bindir, filename)" "== Public Instance Methods" "= class Gem::Installer" "refm/api/src/rubygems/installer.rd")
(find-rurima "--- install -> Gem::Specification" "== Public Instance Methods" "= class Gem::Installer" "refm/api/src/rubygems/installer.rd")
(find-rurima "--- installation_satisfies_dependency?(dependency) -> bool" "== Public Instance Methods" "= class Gem::Installer" "refm/api/src/rubygems/installer.rd")
(find-rurima "--- shebang(bin_file_name) -> String" "== Public Instance Methods" "= class Gem::Installer" "refm/api/src/rubygems/installer.rd")
(find-rurima "--- spec -> Gem::Specification" "== Public Instance Methods" "= class Gem::Installer" "refm/api/src/rubygems/installer.rd")
(find-rurima "--- unpack(directory)" "== Public Instance Methods" "= class Gem::Installer" "refm/api/src/rubygems/installer.rd")
(find-rurima "--- windows_stub_script -> String" "== Public Instance Methods" "= class Gem::Installer" "refm/api/src/rubygems/installer.rd")
(find-rurima "--- write_spec" "== Public Instance Methods" "= class Gem::Installer" "refm/api/src/rubygems/installer.rd")
(find-rurima "== Singleton Methods" "= class Gem::Installer" "refm/api/src/rubygems/installer.rd")
(find-rurima "--- new(gem, options = {}) -> Gem::Installer" "== Singleton Methods" "= class Gem::Installer" "refm/api/src/rubygems/installer.rd")
(find-rurima "--- exec_format -> String" "== Singleton Methods" "= class Gem::Installer" "refm/api/src/rubygems/installer.rd")
(find-rurima "--- exec_format=(format)" "== Singleton Methods" "= class Gem::Installer" "refm/api/src/rubygems/installer.rd")
(find-rurima "--- home_install_warning -> bool" "== Singleton Methods" "= class Gem::Installer" "refm/api/src/rubygems/installer.rd")
(find-rurima "--- home_install_warning=(flag)" "== Singleton Methods" "= class Gem::Installer" "refm/api/src/rubygems/installer.rd")
(find-rurima "--- path_warning -> bool" "== Singleton Methods" "= class Gem::Installer" "refm/api/src/rubygems/installer.rd")
(find-rurima "--- path_warning=(flag)" "== Singleton Methods" "= class Gem::Installer" "refm/api/src/rubygems/installer.rd")
(find-rurima "= class Gem::Installer::ExtensionBuildError < Gem::InstallError" "refm/api/src/rubygems/installer.rd")
(find-rurima "= class Gem::DigestAdapter" "refm/api/src/rubygems/digest/digest_adapter.rd")
(find-rurima "== Public Instance Methods" "= class Gem::DigestAdapter" "refm/api/src/rubygems/digest/digest_adapter.rd")
(find-rurima "--- digest(string) -> String" "== Public Instance Methods" "= class Gem::DigestAdapter" "refm/api/src/rubygems/digest/digest_adapter.rd")
(find-rurima "--- hexdigest(string) -> String" "== Public Instance Methods" "= class Gem::DigestAdapter" "refm/api/src/rubygems/digest/digest_adapter.rd")
(find-rurima "--- new -> self" "== Public Instance Methods" "= class Gem::DigestAdapter" "refm/api/src/rubygems/digest/digest_adapter.rd")
(find-rurima "== Singleton Methods" "= class Gem::DigestAdapter" "refm/api/src/rubygems/digest/digest_adapter.rd")
(find-rurima "--- new(digest_class)" "== Singleton Methods" "= class Gem::DigestAdapter" "refm/api/src/rubygems/digest/digest_adapter.rd")
(find-rurima "= reopen Gem" "refm/api/src/rubygems/digest/sha1.rd")
(find-rurima "== Constants" "= reopen Gem" "refm/api/src/rubygems/digest/sha1.rd")
(find-rurima "--- SHA1 -> Class" "== Constants" "= reopen Gem" "refm/api/src/rubygems/digest/sha1.rd")
(find-rurima "= reopen Gem" "refm/api/src/rubygems/digest/md5.rd")
(find-rurima "== Constants" "= reopen Gem" "refm/api/src/rubygems/digest/md5.rd")
(find-rurima "--- MD5 -> Class" "== Constants" "= reopen Gem" "refm/api/src/rubygems/digest/md5.rd")
(find-rurima "= reopen Gem" "refm/api/src/rubygems/digest/sha2.rd")
(find-rurima "== Constants" "= reopen Gem" "refm/api/src/rubygems/digest/sha2.rd")
(find-rurima "--- SHA256 -> Class" "== Constants" "= reopen Gem" "refm/api/src/rubygems/digest/sha2.rd")
(find-rurima "= class Gem::DocManager" "refm/api/src/rubygems/doc_manager.rd")
(find-rurima "== Public Instance Methods" "= class Gem::DocManager" "refm/api/src/rubygems/doc_manager.rd")
(find-rurima "--- generate_rdoc" "== Public Instance Methods" "= class Gem::DocManager" "refm/api/src/rubygems/doc_manager.rd")
(find-rurima "--- generate_ri" "== Public Instance Methods" "= class Gem::DocManager" "refm/api/src/rubygems/doc_manager.rd")
(find-rurima "--- install_rdoc" "== Public Instance Methods" "= class Gem::DocManager" "refm/api/src/rubygems/doc_manager.rd")
(find-rurima "--- install_ri" "== Public Instance Methods" "= class Gem::DocManager" "refm/api/src/rubygems/doc_manager.rd")
(find-rurima "--- rdoc_installed? -> bool" "== Public Instance Methods" "= class Gem::DocManager" "refm/api/src/rubygems/doc_manager.rd")
(find-rurima "--- run_rdoc(*args)" "== Public Instance Methods" "= class Gem::DocManager" "refm/api/src/rubygems/doc_manager.rd")
(find-rurima "--- setup_rdoc" "== Public Instance Methods" "= class Gem::DocManager" "refm/api/src/rubygems/doc_manager.rd")
(find-rurima "--- uninstall_doc" "== Public Instance Methods" "= class Gem::DocManager" "refm/api/src/rubygems/doc_manager.rd")
(find-rurima "== Singleton Methods" "= class Gem::DocManager" "refm/api/src/rubygems/doc_manager.rd")
(find-rurima "--- new(spec, rdoc_args = \"\") -> Gem::DocManager" "== Singleton Methods" "= class Gem::DocManager" "refm/api/src/rubygems/doc_manager.rd")
(find-rurima "--- configured_args -> Array" "== Singleton Methods" "= class Gem::DocManager" "refm/api/src/rubygems/doc_manager.rd")
(find-rurima "--- configured_args=(args)" "== Singleton Methods" "= class Gem::DocManager" "refm/api/src/rubygems/doc_manager.rd")
(find-rurima "--- load_rdoc" "== Singleton Methods" "= class Gem::DocManager" "refm/api/src/rubygems/doc_manager.rd")
(find-rurima "--- update_ri_cache" "== Singleton Methods" "= class Gem::DocManager" "refm/api/src/rubygems/doc_manager.rd")
(find-rurima "= class Gem::Builder < Object" "refm/api/src/rubygems/builder.rd")
(find-rurima "== Singleton Methods" "= class Gem::Builder < Object" "refm/api/src/rubygems/builder.rd")
(find-rurima "--- new(spec) -> Gem::Builder" "== Singleton Methods" "= class Gem::Builder < Object" "refm/api/src/rubygems/builder.rd")
(find-rurima "== Instance Methods" "= class Gem::Builder < Object" "refm/api/src/rubygems/builder.rd")
(find-rurima "--- build -> String" "== Instance Methods" "= class Gem::Builder < Object" "refm/api/src/rubygems/builder.rd")
(find-rurima "--- success -> String" "== Instance Methods" "= class Gem::Builder < Object" "refm/api/src/rubygems/builder.rd")
(find-rurima "= reopen Gem" "refm/api/src/rubygems/gem_openssl.rd")
(find-rurima "== Singleton Methods" "= reopen Gem" "refm/api/src/rubygems/gem_openssl.rd")
(find-rurima "--- ssl_available? -> bool" "== Singleton Methods" "= reopen Gem" "refm/api/src/rubygems/gem_openssl.rd")
(find-rurima "--- ensure_ssl_available" "== Singleton Methods" "= reopen Gem" "refm/api/src/rubygems/gem_openssl.rd")
(find-rurima "= module Gem::SSL" "refm/api/src/rubygems/gem_openssl.rd")
(find-rurima "== Constants" "= module Gem::SSL" "refm/api/src/rubygems/gem_openssl.rd")
(find-rurima "--- PKEY_RSA -> Symbol | Class" "== Constants" "= module Gem::SSL" "refm/api/src/rubygems/gem_openssl.rd")
(find-rurima "--- DIGEST_SHA1 -> Symbol | Class" "== Constants" "= module Gem::SSL" "refm/api/src/rubygems/gem_openssl.rd")
(find-rurima "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- _dump -> String" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- add_bindir(executables) -> Array | nil" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- add_dependency" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- add_development_dependency(gem, *requirements) -> Array" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- add_runtime_dependency(gem, *requirements) -> Array" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- assign_defaults -> ()" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- author -> String" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- author=(name)" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- authors -> Array" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- authors=(names)" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- autorequire -> String" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- autorequire=(lib)" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- bindir -> String" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- bindir=(dir)" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- cert_chain -> Array" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- cert_chain=(arr)" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- date -> Time" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- date=(date)" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- default_executable -> String | nil" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- default_executable=(executable)" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- dependencies -> Array" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- dependent_gems -> Array" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- description -> String" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- description=(desc)" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- development_dependencies -> Array" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- email -> String" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- email=(email)" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- executable -> String" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- executable=(executable)" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- executables -> [String]" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- executables=(executables)" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- extensions -> [String]" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- extensions=(paths)" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- extra_rdoc_files -> [String]" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- extra_rdoc_files=(paths)" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- file_name -> String" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- files -> [String]" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- files=(files)" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- full_gem_path -> String" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- full_name -> String" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- has_rdoc -> bool" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- has_rdoc=(flag)" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- has_rdoc? -> bool" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- has_test_suite? -> bool" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- has_unit_tests? -> bool" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- homepage -> String" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- homepage=(uri)" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- installation_path -> String" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- lib_files -> [String]" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- loaded=(flag)" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- loaded? -> bool" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- loaded_from -> String" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- loaded_from=(path)" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- mark_version -> String" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- name -> String" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- name=(name)" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- normalize -> [String]" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- original_name -> String" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- original_platform -> String" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- original_platform=(platform)" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- platform -> String" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- platform=(platform)" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- post_install_message -> String" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- post_install_message=(message)" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- rdoc_options -> [String]" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- rdoc_options=(options)" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- require_path -> String" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- require_path=(path)" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- require_paths -> [String]" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- require_paths=(paths)" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- required_ruby_version -> Gem::Requirement" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- required_ruby_version=(requirement)" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- required_rubygems_version -> Gem::Requirement" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- required_rubygems_version=(requirement)" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- requirements -> Array" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- requirements=(informations)" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- rubyforge_project -> String" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- rubyforge_project=(project_name)" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- rubygems_version -> String" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- rubygems_version=(version)" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- runtime_dependencies -> Array" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- satisfies_requirement?(dependency) -> bool" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- signing_key -> String" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- signing_key=(key)" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- specification_version -> Integer" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- specification_version=(version)" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- summary -> String" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- summary=(summary)" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- test_file -> String" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- test_file=(file)" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- test_files -> [String]" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- test_files=(files)" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- test_suite_file -> String" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- test_suite_file=(file)" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- to_ruby -> String" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- validate -> bool" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- version -> Gem::Version" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- version=(version)" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- yaml_initialize" "== Instance Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "== Singleton Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- _load(str) -> Gem::Specification" "== Singleton Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- array_attribute(name) -> ()" "== Singleton Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- array_attributes -> Array" "== Singleton Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- attribute(name) -> ()" "== Singleton Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- attribute_alias_singular(singular, plural) -> ()" "== Singleton Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- attribute_defaults -> Array" "== Singleton Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- attribute_names -> Array" "== Singleton Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- attributes(*args) -> ()" "== Singleton Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- default_value(name) -> object" "== Singleton Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- from_yaml(input) -> Gem::Specification" "== Singleton Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- list -> Array" "== Singleton Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- load(filename) -> Gem::Specification" "== Singleton Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- normalize_yaml_input(input) -> String" "== Singleton Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- overwrite_accessor(name){ ... } -> ()" "== Singleton Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- read_only(*names) -> ()" "== Singleton Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- required_attribute(name, default = nil) -> ()" "== Singleton Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- required_attribute?(name) -> bool" "== Singleton Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- required_attributes -> Array" "== Singleton Methods" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "== Constants" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- CURRENT_SPECIFICATION_VERSION -> 2" "== Constants" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- MARSHAL_FIELDS -> Hash" "== Constants" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- NONEXISTENT_SPECIFICATION_VERSION -> -1" "== Constants" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- SPECIFICATION_VERSION_HISTORY -> Hash" "== Constants" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "--- TODAY -> Time" "== Constants" "= class Gem::Specification" "refm/api/src/rubygems/specification.rd")
(find-rurima "= class Gem::SourceInfoCache" "refm/api/src/rubygems/source_info_cache.rd")
(find-rurima "== Public Instance Methods" "= class Gem::SourceInfoCache" "refm/api/src/rubygems/source_info_cache.rd")
(find-rurima "--- cache_data -> Hash" "== Public Instance Methods" "= class Gem::SourceInfoCache" "refm/api/src/rubygems/source_info_cache.rd")
(find-rurima "--- cache_file -> String" "== Public Instance Methods" "= class Gem::SourceInfoCache" "refm/api/src/rubygems/source_info_cache.rd")
(find-rurima "--- flush -> false" "== Public Instance Methods" "= class Gem::SourceInfoCache" "refm/api/src/rubygems/source_info_cache.rd")
(find-rurima "--- latest_cache_data -> Hash" "== Public Instance Methods" "= class Gem::SourceInfoCache" "refm/api/src/rubygems/source_info_cache.rd")
(find-rurima "--- latest_cache_file -> String" "== Public Instance Methods" "= class Gem::SourceInfoCache" "refm/api/src/rubygems/source_info_cache.rd")
(find-rurima "--- latest_system_cache_file -> String" "== Public Instance Methods" "= class Gem::SourceInfoCache" "refm/api/src/rubygems/source_info_cache.rd")
(find-rurima "--- latest_user_cache_file -> String" "== Public Instance Methods" "= class Gem::SourceInfoCache" "refm/api/src/rubygems/source_info_cache.rd")
(find-rurima "--- read_all_cache_data -> ()" "== Public Instance Methods" "= class Gem::SourceInfoCache" "refm/api/src/rubygems/source_info_cache.rd")
(find-rurima "--- read_cache_data(file) -> Hash" "== Public Instance Methods" "= class Gem::SourceInfoCache" "refm/api/src/rubygems/source_info_cache.rd")
(find-rurima "--- refresh(all) -> false" "== Public Instance Methods" "= class Gem::SourceInfoCache" "refm/api/src/rubygems/source_info_cache.rd")
(find-rurima "--- reset_cache_data -> true" "== Public Instance Methods" "= class Gem::SourceInfoCache" "refm/api/src/rubygems/source_info_cache.rd")
(find-rurima "--- reset_cache_file -> nil" "== Public Instance Methods" "= class Gem::SourceInfoCache" "refm/api/src/rubygems/source_info_cache.rd")
(find-rurima "--- reset_cache_for(url, cache_data) -> Hash" "== Public Instance Methods" "= class Gem::SourceInfoCache" "refm/api/src/rubygems/source_info_cache.rd")
(find-rurima "--- search(pattern, platform_only = false, all = false) -> [Gem::Specification]" "== Public Instance Methods" "= class Gem::SourceInfoCache" "refm/api/src/rubygems/source_info_cache.rd")
(find-rurima "--- search_with_source(pattern, only_platform = false, all = false) -> Array" "== Public Instance Methods" "= class Gem::SourceInfoCache" "refm/api/src/rubygems/source_info_cache.rd")
(find-rurima "--- set_cache_data(hash) -> true" "== Public Instance Methods" "= class Gem::SourceInfoCache" "refm/api/src/rubygems/source_info_cache.rd")
(find-rurima "--- system_cache_file -> String" "== Public Instance Methods" "= class Gem::SourceInfoCache" "refm/api/src/rubygems/source_info_cache.rd")
(find-rurima "--- try_file(path) -> String | nil" "== Public Instance Methods" "= class Gem::SourceInfoCache" "refm/api/src/rubygems/source_info_cache.rd")
(find-rurima "--- update -> true" "== Public Instance Methods" "= class Gem::SourceInfoCache" "refm/api/src/rubygems/source_info_cache.rd")
(find-rurima "--- user_cache_file -> String" "== Public Instance Methods" "= class Gem::SourceInfoCache" "refm/api/src/rubygems/source_info_cache.rd")
(find-rurima "--- write_cache -> nil" "== Public Instance Methods" "= class Gem::SourceInfoCache" "refm/api/src/rubygems/source_info_cache.rd")
(find-rurima "== Singleton Methods" "= class Gem::SourceInfoCache" "refm/api/src/rubygems/source_info_cache.rd")
(find-rurima "--- cache(all = false) -> Gem::SourceInfoCache" "== Singleton Methods" "= class Gem::SourceInfoCache" "refm/api/src/rubygems/source_info_cache.rd")
(find-rurima "--- cache_data -> Hash" "== Singleton Methods" "= class Gem::SourceInfoCache" "refm/api/src/rubygems/source_info_cache.rd")
(find-rurima "--- latest_system_cache_file -> String" "== Singleton Methods" "= class Gem::SourceInfoCache" "refm/api/src/rubygems/source_info_cache.rd")
(find-rurima "--- latest_user_cache_file -> String" "== Singleton Methods" "= class Gem::SourceInfoCache" "refm/api/src/rubygems/source_info_cache.rd")
(find-rurima "--- reset -> nil" "== Singleton Methods" "= class Gem::SourceInfoCache" "refm/api/src/rubygems/source_info_cache.rd")
(find-rurima "--- search(*args) -> [Gem::Specification]" "== Singleton Methods" "= class Gem::SourceInfoCache" "refm/api/src/rubygems/source_info_cache.rd")
(find-rurima "--- search_with_source(*args) -> Array" "== Singleton Methods" "= class Gem::SourceInfoCache" "refm/api/src/rubygems/source_info_cache.rd")
(find-rurima "--- system_cache_file -> String" "== Singleton Methods" "= class Gem::SourceInfoCache" "refm/api/src/rubygems/source_info_cache.rd")
(find-rurima "--- user_cache_file -> String" "== Singleton Methods" "= class Gem::SourceInfoCache" "refm/api/src/rubygems/source_info_cache.rd")
(find-rurima "= class Gem::Package::TarOutput" "refm/api/src/rubygems/package/tar_output.rd")
(find-rurima "== Public Instance Methods" "= class Gem::Package::TarOutput" "refm/api/src/rubygems/package/tar_output.rd")
(find-rurima "--- add_gem_contents{|data_tar_writer| ... } -> self" "== Public Instance Methods" "= class Gem::Package::TarOutput" "refm/api/src/rubygems/package/tar_output.rd")
(find-rurima "--- add_metadata" "== Public Instance Methods" "= class Gem::Package::TarOutput" "refm/api/src/rubygems/package/tar_output.rd")
(find-rurima "--- add_signatures" "== Public Instance Methods" "= class Gem::Package::TarOutput" "refm/api/src/rubygems/package/tar_output.rd")
(find-rurima "--- close" "== Public Instance Methods" "= class Gem::Package::TarOutput" "refm/api/src/rubygems/package/tar_output.rd")
(find-rurima "== Singleton Methods" "= class Gem::Package::TarOutput" "refm/api/src/rubygems/package/tar_output.rd")
(find-rurima "--- open(io, signer = nil){|data_tar_writer| ... }" "== Singleton Methods" "= class Gem::Package::TarOutput" "refm/api/src/rubygems/package/tar_output.rd")
(find-rurima "--- new(io, signer) -> Gem::Package::TarOutput" "== Singleton Methods" "= class Gem::Package::TarOutput" "refm/api/src/rubygems/package/tar_output.rd")
(find-rurima "= class Gem::Package::TarInput" "refm/api/src/rubygems/package/tar_input.rd")
(find-rurima "== Singleton Methods" "= class Gem::Package::TarInput" "refm/api/src/rubygems/package/tar_input.rd")
(find-rurima "--- open(io, security_policy = nil){|is| ... }" "== Singleton Methods" "= class Gem::Package::TarInput" "refm/api/src/rubygems/package/tar_input.rd")
(find-rurima "== Private Singleton Methods" "= class Gem::Package::TarInput" "refm/api/src/rubygems/package/tar_input.rd")
(find-rurima "--- new(io, security_policy = nil)" "== Private Singleton Methods" "= class Gem::Package::TarInput" "refm/api/src/rubygems/package/tar_input.rd")
(find-rurima "== Public Instance Methods" "= class Gem::Package::TarInput" "refm/api/src/rubygems/package/tar_input.rd")
(find-rurima "--- close" "== Public Instance Methods" "= class Gem::Package::TarInput" "refm/api/src/rubygems/package/tar_input.rd")
(find-rurima "--- each{|entry| ... }" "== Public Instance Methods" "= class Gem::Package::TarInput" "refm/api/src/rubygems/package/tar_input.rd")
(find-rurima "--- extract_entry(destdir, entry, expected_md5sum = nil)" "== Public Instance Methods" "= class Gem::Package::TarInput" "refm/api/src/rubygems/package/tar_input.rd")
(find-rurima "--- load_gemspec(io) -> Gem::Specification | nil" "== Public Instance Methods" "= class Gem::Package::TarInput" "refm/api/src/rubygems/package/tar_input.rd")
(find-rurima "--- metadata -> Gem::Specification" "== Public Instance Methods" "= class Gem::Package::TarInput" "refm/api/src/rubygems/package/tar_input.rd")
(find-rurima "--- zipped_stream(entry) -> StringIO" "== Public Instance Methods" "= class Gem::Package::TarInput" "refm/api/src/rubygems/package/tar_input.rd")
(find-rurima "= class Gem::Package::TarHeader" "refm/api/src/rubygems/package/tar_header.rd")
(find-rurima "== Public Instance Methods" "= class Gem::Package::TarHeader" "refm/api/src/rubygems/package/tar_header.rd")
(find-rurima "--- ==(other) -> bool" "== Public Instance Methods" "= class Gem::Package::TarHeader" "refm/api/src/rubygems/package/tar_header.rd")
(find-rurima "--- checksum -> Integer" "== Public Instance Methods" "= class Gem::Package::TarHeader" "refm/api/src/rubygems/package/tar_header.rd")
(find-rurima "--- devmajor -> Integer" "== Public Instance Methods" "= class Gem::Package::TarHeader" "refm/api/src/rubygems/package/tar_header.rd")
(find-rurima "--- devminor -> Integer" "== Public Instance Methods" "= class Gem::Package::TarHeader" "refm/api/src/rubygems/package/tar_header.rd")
(find-rurima "--- empty? -> bool" "== Public Instance Methods" "= class Gem::Package::TarHeader" "refm/api/src/rubygems/package/tar_header.rd")
(find-rurima "--- gid -> Integer" "== Public Instance Methods" "= class Gem::Package::TarHeader" "refm/api/src/rubygems/package/tar_header.rd")
(find-rurima "--- gname -> String" "== Public Instance Methods" "= class Gem::Package::TarHeader" "refm/api/src/rubygems/package/tar_header.rd")
(find-rurima "--- linkname -> String" "== Public Instance Methods" "= class Gem::Package::TarHeader" "refm/api/src/rubygems/package/tar_header.rd")
(find-rurima "--- magic -> String" "== Public Instance Methods" "= class Gem::Package::TarHeader" "refm/api/src/rubygems/package/tar_header.rd")
(find-rurima "--- mode -> Integer" "== Public Instance Methods" "= class Gem::Package::TarHeader" "refm/api/src/rubygems/package/tar_header.rd")
(find-rurima "--- mtime -> Integer" "== Public Instance Methods" "= class Gem::Package::TarHeader" "refm/api/src/rubygems/package/tar_header.rd")
(find-rurima "--- name -> String" "== Public Instance Methods" "= class Gem::Package::TarHeader" "refm/api/src/rubygems/package/tar_header.rd")
(find-rurima "--- prefix -> String" "== Public Instance Methods" "= class Gem::Package::TarHeader" "refm/api/src/rubygems/package/tar_header.rd")
(find-rurima "--- size -> Integer" "== Public Instance Methods" "= class Gem::Package::TarHeader" "refm/api/src/rubygems/package/tar_header.rd")
(find-rurima "--- to_s -> String" "== Public Instance Methods" "= class Gem::Package::TarHeader" "refm/api/src/rubygems/package/tar_header.rd")
(find-rurima "--- typeflag -> String" "== Public Instance Methods" "= class Gem::Package::TarHeader" "refm/api/src/rubygems/package/tar_header.rd")
(find-rurima "--- uid -> Integer" "== Public Instance Methods" "= class Gem::Package::TarHeader" "refm/api/src/rubygems/package/tar_header.rd")
(find-rurima "--- uname -> String" "== Public Instance Methods" "= class Gem::Package::TarHeader" "refm/api/src/rubygems/package/tar_header.rd")
(find-rurima "--- update_checksum" "== Public Instance Methods" "= class Gem::Package::TarHeader" "refm/api/src/rubygems/package/tar_header.rd")
(find-rurima "--- version -> Integer" "== Public Instance Methods" "= class Gem::Package::TarHeader" "refm/api/src/rubygems/package/tar_header.rd")
(find-rurima "== Singleton Methods" "= class Gem::Package::TarHeader" "refm/api/src/rubygems/package/tar_header.rd")
(find-rurima "--- from(stream) -> Gem::Package::TarHeader" "== Singleton Methods" "= class Gem::Package::TarHeader" "refm/api/src/rubygems/package/tar_header.rd")
(find-rurima "== Constants" "= class Gem::Package::TarHeader" "refm/api/src/rubygems/package/tar_header.rd")
(find-rurima "--- FIELDS -> Array" "== Constants" "= class Gem::Package::TarHeader" "refm/api/src/rubygems/package/tar_header.rd")
(find-rurima "--- PACK_FORMAT -> String" "== Constants" "= class Gem::Package::TarHeader" "refm/api/src/rubygems/package/tar_header.rd")
(find-rurima "--- UNPACK_FORMAT -> String" "== Constants" "= class Gem::Package::TarHeader" "refm/api/src/rubygems/package/tar_header.rd")
(find-rurima "= module Gem::Package::FSyncDir" "refm/api/src/rubygems/package/f_sync_dir.rd")
(find-rurima "== Private Instance Methods" "= module Gem::Package::FSyncDir" "refm/api/src/rubygems/package/f_sync_dir.rd")
(find-rurima "--- fsync_dir(dirname) -> ()" "== Private Instance Methods" "= module Gem::Package::FSyncDir" "refm/api/src/rubygems/package/f_sync_dir.rd")
(find-rurima "= class Gem::Package::TarReader::Entry" "refm/api/src/rubygems/package/tar_reader/entry.rd")
(find-rurima "== Public Instance Methods" "= class Gem::Package::TarReader::Entry" "refm/api/src/rubygems/package/tar_reader/entry.rd")
(find-rurima "--- bytes_read -> Integer" "== Public Instance Methods" "= class Gem::Package::TarReader::Entry" "refm/api/src/rubygems/package/tar_reader/entry.rd")
(find-rurima "--- close -> true" "== Public Instance Methods" "= class Gem::Package::TarReader::Entry" "refm/api/src/rubygems/package/tar_reader/entry.rd")
(find-rurima "--- closed? -> bool" "== Public Instance Methods" "= class Gem::Package::TarReader::Entry" "refm/api/src/rubygems/package/tar_reader/entry.rd")
(find-rurima "--- directory? -> bool" "== Public Instance Methods" "= class Gem::Package::TarReader::Entry" "refm/api/src/rubygems/package/tar_reader/entry.rd")
(find-rurima "--- eof? -> bool" "== Public Instance Methods" "= class Gem::Package::TarReader::Entry" "refm/api/src/rubygems/package/tar_reader/entry.rd")
(find-rurima "--- file? -> bool" "== Public Instance Methods" "= class Gem::Package::TarReader::Entry" "refm/api/src/rubygems/package/tar_reader/entry.rd")
(find-rurima "--- full_name -> String" "== Public Instance Methods" "= class Gem::Package::TarReader::Entry" "refm/api/src/rubygems/package/tar_reader/entry.rd")
(find-rurima "--- getc -> String | nil" "== Public Instance Methods" "= class Gem::Package::TarReader::Entry" "refm/api/src/rubygems/package/tar_reader/entry.rd")
(find-rurima "--- header -> Gem::Package::TarHeader" "== Public Instance Methods" "= class Gem::Package::TarReader::Entry" "refm/api/src/rubygems/package/tar_reader/entry.rd")
(find-rurima "--- pos -> Integer" "== Public Instance Methods" "= class Gem::Package::TarReader::Entry" "refm/api/src/rubygems/package/tar_reader/entry.rd")
(find-rurima "--- read(length = nil) -> String" "== Public Instance Methods" "= class Gem::Package::TarReader::Entry" "refm/api/src/rubygems/package/tar_reader/entry.rd")
(find-rurima "--- rewind -> 0" "== Public Instance Methods" "= class Gem::Package::TarReader::Entry" "refm/api/src/rubygems/package/tar_reader/entry.rd")
(find-rurima "= class Gem::Package::TarWriter" "refm/api/src/rubygems/package/tar_writer.rd")
(find-rurima "== Public Instance Methods" "= class Gem::Package::TarWriter" "refm/api/src/rubygems/package/tar_writer.rd")
(find-rurima "--- add_file(name, mode) -> self" "== Public Instance Methods" "= class Gem::Package::TarWriter" "refm/api/src/rubygems/package/tar_writer.rd")
(find-rurima "--- add_file(name, mode){|io| ... } -> self" "== Public Instance Methods" "= class Gem::Package::TarWriter" "refm/api/src/rubygems/package/tar_writer.rd")
(find-rurima "--- add_file_simple(name, mode, size) -> self" "== Public Instance Methods" "= class Gem::Package::TarWriter" "refm/api/src/rubygems/package/tar_writer.rd")
(find-rurima "--- add_file_simple(name, mode, size){|io| ... } -> self" "== Public Instance Methods" "= class Gem::Package::TarWriter" "refm/api/src/rubygems/package/tar_writer.rd")
(find-rurima "--- check_closed" "== Public Instance Methods" "= class Gem::Package::TarWriter" "refm/api/src/rubygems/package/tar_writer.rd")
(find-rurima "--- close -> true" "== Public Instance Methods" "= class Gem::Package::TarWriter" "refm/api/src/rubygems/package/tar_writer.rd")
(find-rurima "--- closed? -> bool" "== Public Instance Methods" "= class Gem::Package::TarWriter" "refm/api/src/rubygems/package/tar_writer.rd")
(find-rurima "--- flush" "== Public Instance Methods" "= class Gem::Package::TarWriter" "refm/api/src/rubygems/package/tar_writer.rd")
(find-rurima "--- mkdir(name, mode) -> self" "== Public Instance Methods" "= class Gem::Package::TarWriter" "refm/api/src/rubygems/package/tar_writer.rd")
(find-rurima "== Singleton Methods" "= class Gem::Package::TarWriter" "refm/api/src/rubygems/package/tar_writer.rd")
(find-rurima "--- new(io) -> Gem::Package::TarWriter" "== Singleton Methods" "= class Gem::Package::TarWriter" "refm/api/src/rubygems/package/tar_writer.rd")
(find-rurima "= class Gem::Package::TarWriter::BoundedStream" "refm/api/src/rubygems/package/tar_writer.rd")
(find-rurima "== Singleton Methods" "= class Gem::Package::TarWriter::BoundedStream" "refm/api/src/rubygems/package/tar_writer.rd")
(find-rurima "--- new(io, limit) -> Gem::Package::TarWriter::BoundedStream" "== Singleton Methods" "= class Gem::Package::TarWriter::BoundedStream" "refm/api/src/rubygems/package/tar_writer.rd")
(find-rurima "== Public Instance Methods" "= class Gem::Package::TarWriter::BoundedStream" "refm/api/src/rubygems/package/tar_writer.rd")
(find-rurima "--- limit -> Integer" "== Public Instance Methods" "= class Gem::Package::TarWriter::BoundedStream" "refm/api/src/rubygems/package/tar_writer.rd")
(find-rurima "--- written -> Integer" "== Public Instance Methods" "= class Gem::Package::TarWriter::BoundedStream" "refm/api/src/rubygems/package/tar_writer.rd")
(find-rurima "--- write(data) -> Integer" "== Public Instance Methods" "= class Gem::Package::TarWriter::BoundedStream" "refm/api/src/rubygems/package/tar_writer.rd")
(find-rurima "= class Gem::Package::TarWriter::RestrictedStream" "refm/api/src/rubygems/package/tar_writer.rd")
(find-rurima "== Singleton Methods" "= class Gem::Package::TarWriter::RestrictedStream" "refm/api/src/rubygems/package/tar_writer.rd")
(find-rurima "--- new(io) -> Gem::Package::TarWriter::RestrictedStream" "== Singleton Methods" "= class Gem::Package::TarWriter::RestrictedStream" "refm/api/src/rubygems/package/tar_writer.rd")
(find-rurima "== Public Instance Methods" "= class Gem::Package::TarWriter::RestrictedStream" "refm/api/src/rubygems/package/tar_writer.rd")
(find-rurima "--- write(data) -> Integer" "== Public Instance Methods" "= class Gem::Package::TarWriter::RestrictedStream" "refm/api/src/rubygems/package/tar_writer.rd")
(find-rurima "= class Gem::Package::TarWriter::FileOverflow < StandardError" "refm/api/src/rubygems/package/tar_writer.rd")
(find-rurima "= class Gem::Package::TarReader" "refm/api/src/rubygems/package/tar_reader.rd")
(find-rurima "== Public Instance Methods" "= class Gem::Package::TarReader" "refm/api/src/rubygems/package/tar_reader.rd")
(find-rurima "--- close -> nil" "== Public Instance Methods" "= class Gem::Package::TarReader" "refm/api/src/rubygems/package/tar_reader.rd")
(find-rurima "--- each{|entry| ... }" "== Public Instance Methods" "= class Gem::Package::TarReader" "refm/api/src/rubygems/package/tar_reader.rd")
(find-rurima "--- each_entry{|entry| ... }" "== Public Instance Methods" "= class Gem::Package::TarReader" "refm/api/src/rubygems/package/tar_reader.rd")
(find-rurima "--- rewind -> Integer" "== Public Instance Methods" "= class Gem::Package::TarReader" "refm/api/src/rubygems/package/tar_reader.rd")
(find-rurima "== Singleton Methods" "= class Gem::Package::TarReader" "refm/api/src/rubygems/package/tar_reader.rd")
(find-rurima "--- new(io) -> Gem::Package::TarReader" "== Singleton Methods" "= class Gem::Package::TarReader" "refm/api/src/rubygems/package/tar_reader.rd")
(find-rurima "= class Gem::Package::TarReader::UnexpectedEOF < StandardError" "refm/api/src/rubygems/package/tar_reader.rd")
(find-rurima "= class Gem::Requirement" "refm/api/src/rubygems/requirement.rd")
(find-rurima "== Constants" "= class Gem::Requirement" "refm/api/src/rubygems/requirement.rd")
(find-rurima "--- OPS -> Hash" "== Constants" "= class Gem::Requirement" "refm/api/src/rubygems/requirement.rd")
(find-rurima "--- OP_RE" "== Constants" "= class Gem::Requirement" "refm/api/src/rubygems/requirement.rd")
(find-rurima "== Singleton Methods" "= class Gem::Requirement" "refm/api/src/rubygems/requirement.rd")
(find-rurima "--- create(input) -> Gem::Requirement" "== Singleton Methods" "= class Gem::Requirement" "refm/api/src/rubygems/requirement.rd")
(find-rurima "--- default -> Gem::Requirement" "== Singleton Methods" "= class Gem::Requirement" "refm/api/src/rubygems/requirement.rd")
(find-rurima "--- new(requirements) -> Gem::Requirement" "== Singleton Methods" "= class Gem::Requirement" "refm/api/src/rubygems/requirement.rd")
(find-rurima "== Public Instance Methods" "= class Gem::Requirement" "refm/api/src/rubygems/requirement.rd")
(find-rurima "--- normalize -> nil" "== Public Instance Methods" "= class Gem::Requirement" "refm/api/src/rubygems/requirement.rd")
(find-rurima "--- parse(obj) -> Array" "== Public Instance Methods" "= class Gem::Requirement" "refm/api/src/rubygems/requirement.rd")
(find-rurima "--- satisfied_by?(version) -> bool" "== Public Instance Methods" "= class Gem::Requirement" "refm/api/src/rubygems/requirement.rd")
(find-rurima "--- satisfy?(op, version, required_version) -> bool" "== Public Instance Methods" "= class Gem::Requirement" "refm/api/src/rubygems/requirement.rd")
(find-rurima "= class Gem::Uninstaller" "refm/api/src/rubygems/uninstaller.rd")
(find-rurima "== Public Instance Methods" "= class Gem::Uninstaller" "refm/api/src/rubygems/uninstaller.rd")
(find-rurima "--- ask_if_ok(spec) -> bool" "== Public Instance Methods" "= class Gem::Uninstaller" "refm/api/src/rubygems/uninstaller.rd")
(find-rurima "--- bin_dir -> String" "== Public Instance Methods" "= class Gem::Uninstaller" "refm/api/src/rubygems/uninstaller.rd")
(find-rurima "--- dependencies_ok?(spec) -> bool" "== Public Instance Methods" "= class Gem::Uninstaller" "refm/api/src/rubygems/uninstaller.rd")
(find-rurima "--- gem_home -> String" "== Public Instance Methods" "= class Gem::Uninstaller" "refm/api/src/rubygems/uninstaller.rd")
(find-rurima "--- path_ok?(spec) -> bool" "== Public Instance Methods" "= class Gem::Uninstaller" "refm/api/src/rubygems/uninstaller.rd")
(find-rurima "--- remove(spec, list)" "== Public Instance Methods" "= class Gem::Uninstaller" "refm/api/src/rubygems/uninstaller.rd")
(find-rurima "--- remove_all(list)" "== Public Instance Methods" "= class Gem::Uninstaller" "refm/api/src/rubygems/uninstaller.rd")
(find-rurima "--- remove_executables(gemspec)" "== Public Instance Methods" "= class Gem::Uninstaller" "refm/api/src/rubygems/uninstaller.rd")
(find-rurima "--- spec -> Gem::Specification" "== Public Instance Methods" "= class Gem::Uninstaller" "refm/api/src/rubygems/uninstaller.rd")
(find-rurima "--- uninstall" "== Public Instance Methods" "= class Gem::Uninstaller" "refm/api/src/rubygems/uninstaller.rd")
(find-rurima "--- uninstall_gem(spec, specs)" "== Public Instance Methods" "= class Gem::Uninstaller" "refm/api/src/rubygems/uninstaller.rd")
(find-rurima "== Singleton Methods" "= class Gem::Uninstaller" "refm/api/src/rubygems/uninstaller.rd")
(find-rurima "--- new(gem, options = {})" "== Singleton Methods" "= class Gem::Uninstaller" "refm/api/src/rubygems/uninstaller.rd")
(find-rurima "= class Gem::Server" "refm/api/src/rubygems/server.rd")
(find-rurima "== Instance Methods" "= class Gem::Server" "refm/api/src/rubygems/server.rd")
(find-rurima "--- Marshal(request, response) -> ()" "== Instance Methods" "= class Gem::Server" "refm/api/src/rubygems/server.rd")
(find-rurima "--- latest_specs(request, response) -> ()" "== Instance Methods" "= class Gem::Server" "refm/api/src/rubygems/server.rd")
(find-rurima "--- quick(request, response) -> ()" "== Instance Methods" "= class Gem::Server" "refm/api/src/rubygems/server.rd")
(find-rurima "--- root(request, response) -> ()" "== Instance Methods" "= class Gem::Server" "refm/api/src/rubygems/server.rd")
(find-rurima "--- run -> ()" "== Instance Methods" "= class Gem::Server" "refm/api/src/rubygems/server.rd")
(find-rurima "--- specs(request, response) -> ()" "== Instance Methods" "= class Gem::Server" "refm/api/src/rubygems/server.rd")
(find-rurima "--- yaml(request, response) -> ()" "== Instance Methods" "= class Gem::Server" "refm/api/src/rubygems/server.rd")
(find-rurima "== Singleton Methods" "= class Gem::Server" "refm/api/src/rubygems/server.rd")
(find-rurima "--- new(gem_dirs, port, daemon, addresses = nil) -> Gem::Server" "== Singleton Methods" "= class Gem::Server" "refm/api/src/rubygems/server.rd")
(find-rurima "--- new(gem_dir, port, daemon) -> Gem::Server" "== Singleton Methods" "= class Gem::Server" "refm/api/src/rubygems/server.rd")
(find-rurima "--- run(options) -> Gem::Server" "== Singleton Methods" "= class Gem::Server" "refm/api/src/rubygems/server.rd")
(find-rurima "== Constants" "= class Gem::Server" "refm/api/src/rubygems/server.rd")
(find-rurima "--- DOC_TEMPLATE -> String" "== Constants" "= class Gem::Server" "refm/api/src/rubygems/server.rd")
(find-rurima "--- RDOC_CSS -> String" "== Constants" "= class Gem::Server" "refm/api/src/rubygems/server.rd")
(find-rurima "= class Gem::SourceIndex" "refm/api/src/rubygems/source_index.rd")
(find-rurima "== Instance Methods" "= class Gem::SourceIndex" "refm/api/src/rubygems/source_index.rd")
(find-rurima "--- add_spec(gem_spec) -> Gem::Specification" "== Instance Methods" "= class Gem::SourceIndex" "refm/api/src/rubygems/source_index.rd")
(find-rurima "--- add_specs(*gem_specs) -> Hash" "== Instance Methods" "= class Gem::SourceIndex" "refm/api/src/rubygems/source_index.rd")
(find-rurima "--- dump -> ()" "== Instance Methods" "= class Gem::SourceIndex" "refm/api/src/rubygems/source_index.rd")
(find-rurima "--- each{|full_name, gem| ... } -> Hash" "== Instance Methods" "= class Gem::SourceIndex" "refm/api/src/rubygems/source_index.rd")
(find-rurima "--- each -> Enumerator" "== Instance Methods" "= class Gem::SourceIndex" "refm/api/src/rubygems/source_index.rd")
(find-rurima "--- each -> Enumerable::Enumerator" "== Instance Methods" "= class Gem::SourceIndex" "refm/api/src/rubygems/source_index.rd")
(find-rurima "--- find_name(gem_name, version_requirement = Gem::Requirement.default) -> Gem::Specification" "== Instance Methods" "= class Gem::SourceIndex" "refm/api/src/rubygems/source_index.rd")
(find-rurima "--- gem_signature(gem_full_name) -> String" "== Instance Methods" "= class Gem::SourceIndex" "refm/api/src/rubygems/source_index.rd")
(find-rurima "--- index_signature -> String" "== Instance Methods" "= class Gem::SourceIndex" "refm/api/src/rubygems/source_index.rd")
(find-rurima "--- latest_specs -> Array" "== Instance Methods" "= class Gem::SourceIndex" "refm/api/src/rubygems/source_index.rd")
(find-rurima "--- size   -> Integer" "== Instance Methods" "= class Gem::SourceIndex" "refm/api/src/rubygems/source_index.rd")
(find-rurima "--- length -> Integer" "== Instance Methods" "= class Gem::SourceIndex" "refm/api/src/rubygems/source_index.rd")
(find-rurima "--- load_gems_in(*spec_dirs) -> self" "== Instance Methods" "= class Gem::SourceIndex" "refm/api/src/rubygems/source_index.rd")
(find-rurima "--- outdated -> Array" "== Instance Methods" "= class Gem::SourceIndex" "refm/api/src/rubygems/source_index.rd")
(find-rurima "--- refresh! -> self" "== Instance Methods" "= class Gem::SourceIndex" "refm/api/src/rubygems/source_index.rd")
(find-rurima "--- remove_spec(full_name) -> Gem::Specification" "== Instance Methods" "= class Gem::SourceIndex" "refm/api/src/rubygems/source_index.rd")
(find-rurima "--- search(gem_pattern, platform_only = false) -> [Gem::Specification]" "== Instance Methods" "= class Gem::SourceIndex" "refm/api/src/rubygems/source_index.rd")
(find-rurima "--- size -> Integer" "== Instance Methods" "= class Gem::SourceIndex" "refm/api/src/rubygems/source_index.rd")
(find-rurima "--- spec_dirs -> [String]" "== Instance Methods" "= class Gem::SourceIndex" "refm/api/src/rubygems/source_index.rd")
(find-rurima "--- spec_dirs=(dirs)" "== Instance Methods" "= class Gem::SourceIndex" "refm/api/src/rubygems/source_index.rd")
(find-rurima "--- specification(full_name) -> Gem::Specification | nil" "== Instance Methods" "= class Gem::SourceIndex" "refm/api/src/rubygems/source_index.rd")
(find-rurima "--- update(source_uri, all) -> bool" "== Instance Methods" "= class Gem::SourceIndex" "refm/api/src/rubygems/source_index.rd")
(find-rurima "== Singleton Methods" "= class Gem::SourceIndex" "refm/api/src/rubygems/source_index.rd")
(find-rurima "--- new(specifications = {}) -> Gem::SourceIndex" "== Singleton Methods" "= class Gem::SourceIndex" "refm/api/src/rubygems/source_index.rd")
(find-rurima "--- from_gems_in(*spec_dirs) -> Gem::SourceIndex" "== Singleton Methods" "= class Gem::SourceIndex" "refm/api/src/rubygems/source_index.rd")
(find-rurima "--- from_installed_gems(*deprecated) -> Gem::SourceIndex" "== Singleton Methods" "= class Gem::SourceIndex" "refm/api/src/rubygems/source_index.rd")
(find-rurima "--- installed_spec_directories -> [String]" "== Singleton Methods" "= class Gem::SourceIndex" "refm/api/src/rubygems/source_index.rd")
(find-rurima "--- load_specification(file_name) -> Gem::Specification | nil" "== Singleton Methods" "= class Gem::SourceIndex" "refm/api/src/rubygems/source_index.rd")
(find-rurima "= class Gem::Format" "refm/api/src/rubygems/format.rd")
(find-rurima "== Public Instance Methods" "= class Gem::Format" "refm/api/src/rubygems/format.rd")
(find-rurima "--- file_entries -> Array" "== Public Instance Methods" "= class Gem::Format" "refm/api/src/rubygems/format.rd")
(find-rurima "--- file_entries=(file_entries)" "== Public Instance Methods" "= class Gem::Format" "refm/api/src/rubygems/format.rd")
(find-rurima "--- gem_path -> String" "== Public Instance Methods" "= class Gem::Format" "refm/api/src/rubygems/format.rd")
(find-rurima "--- gem_path=(path)" "== Public Instance Methods" "= class Gem::Format" "refm/api/src/rubygems/format.rd")
(find-rurima "--- spec -> Gem::Specification" "== Public Instance Methods" "= class Gem::Format" "refm/api/src/rubygems/format.rd")
(find-rurima "--- spec=(spec)" "== Public Instance Methods" "= class Gem::Format" "refm/api/src/rubygems/format.rd")
(find-rurima "== Singleton Methods" "= class Gem::Format" "refm/api/src/rubygems/format.rd")
(find-rurima "--- from_file_by_path(file_path, security_policy = nil) -> Gem::Format" "== Singleton Methods" "= class Gem::Format" "refm/api/src/rubygems/format.rd")
(find-rurima "--- from_io(io, gem_path = '(io)', security_policy = nil) -> Gem::Format" "== Singleton Methods" "= class Gem::Format" "refm/api/src/rubygems/format.rd")
(find-rurima "--- new(gem_path)" "== Singleton Methods" "= class Gem::Format" "refm/api/src/rubygems/format.rd")
(find-rurima "= class Gem::RemoteFetcher" "refm/api/src/rubygems/remote_fetcher.rd")
(find-rurima "== Singleton Methods" "= class Gem::RemoteFetcher" "refm/api/src/rubygems/remote_fetcher.rd")
(find-rurima "--- fetcher -> Gem::RemoteFetcher" "== Singleton Methods" "= class Gem::RemoteFetcher" "refm/api/src/rubygems/remote_fetcher.rd")
(find-rurima "== Instance Methods" "= class Gem::RemoteFetcher" "refm/api/src/rubygems/remote_fetcher.rd")
(find-rurima "--- download(spec, source_uri, install_dir = Gem.dir) -> String" "== Instance Methods" "= class Gem::RemoteFetcher" "refm/api/src/rubygems/remote_fetcher.rd")
(find-rurima "--- fetch_path(uri, mtime = nil, head = false) -> String | Hash" "== Instance Methods" "= class Gem::RemoteFetcher" "refm/api/src/rubygems/remote_fetcher.rd")
(find-rurima "--- fetch_size(uri) -> Integer" "== Instance Methods" "= class Gem::RemoteFetcher" "refm/api/src/rubygems/remote_fetcher.rd")
(find-rurima "--- escape(str) -> String" "== Instance Methods" "= class Gem::RemoteFetcher" "refm/api/src/rubygems/remote_fetcher.rd")
(find-rurima "--- unescape(str) -> String" "== Instance Methods" "= class Gem::RemoteFetcher" "refm/api/src/rubygems/remote_fetcher.rd")
(find-rurima "--- get_proxy_from_env -> URI | nil" "== Instance Methods" "= class Gem::RemoteFetcher" "refm/api/src/rubygems/remote_fetcher.rd")
(find-rurima "--- normalize_uri(uri) -> String" "== Instance Methods" "= class Gem::RemoteFetcher" "refm/api/src/rubygems/remote_fetcher.rd")
(find-rurima "--- connection_for(uri) -> Net::HTTP" "== Instance Methods" "= class Gem::RemoteFetcher" "refm/api/src/rubygems/remote_fetcher.rd")
(find-rurima "--- open_uri_or_path(uri, last_modified = nil, head = false, depth = 0) -> StringIO | File" "== Instance Methods" "= class Gem::RemoteFetcher" "refm/api/src/rubygems/remote_fetcher.rd")
(find-rurima "--- request(uri, request_class, last_modified = nil) -> Net::HTTPResponse" "== Instance Methods" "= class Gem::RemoteFetcher" "refm/api/src/rubygems/remote_fetcher.rd")
(find-rurima "--- reset(connection) -> Net::HTTP" "== Instance Methods" "= class Gem::RemoteFetcher" "refm/api/src/rubygems/remote_fetcher.rd")
(find-rurima "--- file_uri?(uri) -> bool" "== Instance Methods" "= class Gem::RemoteFetcher" "refm/api/src/rubygems/remote_fetcher.rd")
(find-rurima "--- get_file_uri_path(uri) -> String" "== Instance Methods" "= class Gem::RemoteFetcher" "refm/api/src/rubygems/remote_fetcher.rd")
(find-rurima "= class Gem::RemoteFetcher::FetchError < Gem::Exception" "refm/api/src/rubygems/remote_fetcher.rd")
(find-rurima "== Singleton Methods" "= class Gem::RemoteFetcher::FetchError < Gem::Exception" "refm/api/src/rubygems/remote_fetcher.rd")
(find-rurima "--- new(message, uri) -> Gem::RemoteFetcher::FetchError" "== Singleton Methods" "= class Gem::RemoteFetcher::FetchError < Gem::Exception" "refm/api/src/rubygems/remote_fetcher.rd")
(find-rurima "== Instance Methods" "= class Gem::RemoteFetcher::FetchError < Gem::Exception" "refm/api/src/rubygems/remote_fetcher.rd")
(find-rurima "--- uri -> URI" "== Instance Methods" "= class Gem::RemoteFetcher::FetchError < Gem::Exception" "refm/api/src/rubygems/remote_fetcher.rd")
(find-rurima "= class Gem::OldFormat" "refm/api/src/rubygems/old_format.rd")
(find-rurima "== Public Instance Methods" "= class Gem::OldFormat" "refm/api/src/rubygems/old_format.rd")
(find-rurima "--- file_entries -> Array" "== Public Instance Methods" "= class Gem::OldFormat" "refm/api/src/rubygems/old_format.rd")
(find-rurima "--- file_entries=(file_entries)" "== Public Instance Methods" "= class Gem::OldFormat" "refm/api/src/rubygems/old_format.rd")
(find-rurima "--- gem_path -> String" "== Public Instance Methods" "= class Gem::OldFormat" "refm/api/src/rubygems/old_format.rd")
(find-rurima "--- gem_path=(path)" "== Public Instance Methods" "= class Gem::OldFormat" "refm/api/src/rubygems/old_format.rd")
(find-rurima "--- spec -> Gem::Specification" "== Public Instance Methods" "= class Gem::OldFormat" "refm/api/src/rubygems/old_format.rd")
(find-rurima "--- spec=(spec)" "== Public Instance Methods" "= class Gem::OldFormat" "refm/api/src/rubygems/old_format.rd")
(find-rurima "== Singleton Methods" "= class Gem::OldFormat" "refm/api/src/rubygems/old_format.rd")
(find-rurima "--- from_file_by_path(file_path) -> Gem::OldFormat" "== Singleton Methods" "= class Gem::OldFormat" "refm/api/src/rubygems/old_format.rd")
(find-rurima "--- from_io(io, gem_path = '(io)') -> Gem::OldFormat" "== Singleton Methods" "= class Gem::OldFormat" "refm/api/src/rubygems/old_format.rd")
(find-rurima "--- new(gem_path) -> Gem::OldFormat" "== Singleton Methods" "= class Gem::OldFormat" "refm/api/src/rubygems/old_format.rd")
(find-rurima "= class Gem::Indexer" "refm/api/src/rubygems/indexer.rd")
(find-rurima "== Public Instance Methods" "= class Gem::Indexer" "refm/api/src/rubygems/indexer.rd")
(find-rurima "--- abbreviate(spec) -> Gem::Specification" "== Public Instance Methods" "= class Gem::Indexer" "refm/api/src/rubygems/indexer.rd")
(find-rurima "--- build_indicies" "== Public Instance Methods" "= class Gem::Indexer" "refm/api/src/rubygems/indexer.rd")
(find-rurima "--- collect_specs -> Gem::SourceIndex" "== Public Instance Methods" "= class Gem::Indexer" "refm/api/src/rubygems/indexer.rd")
(find-rurima "--- compact_specs(specs) -> Array" "== Public Instance Methods" "= class Gem::Indexer" "refm/api/src/rubygems/indexer.rd")
(find-rurima "--- compress(filename, extension)" "== Public Instance Methods" "= class Gem::Indexer" "refm/api/src/rubygems/indexer.rd")
(find-rurima "--- dest_directory -> String" "== Public Instance Methods" "= class Gem::Indexer" "refm/api/src/rubygems/indexer.rd")
(find-rurima "--- directory -> String" "== Public Instance Methods" "= class Gem::Indexer" "refm/api/src/rubygems/indexer.rd")
(find-rurima "--- gem_file_list -> Array" "== Public Instance Methods" "= class Gem::Indexer" "refm/api/src/rubygems/indexer.rd")
(find-rurima "--- generate_index" "== Public Instance Methods" "= class Gem::Indexer" "refm/api/src/rubygems/indexer.rd")
(find-rurima "--- gzip(filename)" "== Public Instance Methods" "= class Gem::Indexer" "refm/api/src/rubygems/indexer.rd")
(find-rurima "--- install_indicies" "== Public Instance Methods" "= class Gem::Indexer" "refm/api/src/rubygems/indexer.rd")
(find-rurima "--- make_temp_directories" "== Public Instance Methods" "= class Gem::Indexer" "refm/api/src/rubygems/indexer.rd")
(find-rurima "--- paranoid(path, extension)" "== Public Instance Methods" "= class Gem::Indexer" "refm/api/src/rubygems/indexer.rd")
(find-rurima "--- sanitize(spec) -> Gem::Specification" "== Public Instance Methods" "= class Gem::Indexer" "refm/api/src/rubygems/indexer.rd")
(find-rurima "--- sanitize_string(string) -> String" "== Public Instance Methods" "= class Gem::Indexer" "refm/api/src/rubygems/indexer.rd")
(find-rurima "== Singleton Methods" "= class Gem::Indexer" "refm/api/src/rubygems/indexer.rd")
(find-rurima "--- new(directory) -> Gem::Indexer" "== Singleton Methods" "= class Gem::Indexer" "refm/api/src/rubygems/indexer.rd")
(find-rurima "= class Gem::FakeFetcher" "refm/api/src/rubygems/test_utilities.rd")
(find-rurima "= reopen Gem::RemoteFetcher" "refm/api/src/rubygems/test_utilities.rd")
(find-rurima "== Singleton Methods" "= reopen Gem::RemoteFetcher" "refm/api/src/rubygems/test_utilities.rd")
(find-rurima "--- fetcher=(fetcher)" "== Singleton Methods" "= reopen Gem::RemoteFetcher" "refm/api/src/rubygems/test_utilities.rd")
(find-rurima "= class TempIO" "refm/api/src/rubygems/test_utilities.rd")
(find-rurima "= class Gem::ConfigFile" "refm/api/src/rubygems/config_file.rd")
(find-rurima "== Public Instance Methods" "= class Gem::ConfigFile" "refm/api/src/rubygems/config_file.rd")
(find-rurima "--- [](key) -> object" "== Public Instance Methods" "= class Gem::ConfigFile" "refm/api/src/rubygems/config_file.rd")
(find-rurima "--- []=(key, value)" "== Public Instance Methods" "= class Gem::ConfigFile" "refm/api/src/rubygems/config_file.rd")
(find-rurima "--- args -> Array" "== Public Instance Methods" "= class Gem::ConfigFile" "refm/api/src/rubygems/config_file.rd")
(find-rurima "--- backtrace -> bool" "== Public Instance Methods" "= class Gem::ConfigFile" "refm/api/src/rubygems/config_file.rd")
(find-rurima "--- backtrace=(backtrace)" "== Public Instance Methods" "= class Gem::ConfigFile" "refm/api/src/rubygems/config_file.rd")
(find-rurima "--- benchmark -> bool" "== Public Instance Methods" "= class Gem::ConfigFile" "refm/api/src/rubygems/config_file.rd")
(find-rurima "--- benchmark=(benchmark)" "== Public Instance Methods" "= class Gem::ConfigFile" "refm/api/src/rubygems/config_file.rd")
(find-rurima "--- bulk_threshold -> Integer" "== Public Instance Methods" "= class Gem::ConfigFile" "refm/api/src/rubygems/config_file.rd")
(find-rurima "--- bulk_threshold=(bulk_threshold)" "== Public Instance Methods" "= class Gem::ConfigFile" "refm/api/src/rubygems/config_file.rd")
(find-rurima "--- config_file_name -> String" "== Public Instance Methods" "= class Gem::ConfigFile" "refm/api/src/rubygems/config_file.rd")
(find-rurima "--- each{|key, value| ... } -> Hash" "== Public Instance Methods" "= class Gem::ConfigFile" "refm/api/src/rubygems/config_file.rd")
(find-rurima "--- handle_arguments(arg_list)" "== Public Instance Methods" "= class Gem::ConfigFile" "refm/api/src/rubygems/config_file.rd")
(find-rurima "--- load_file(file_name) -> object" "== Public Instance Methods" "= class Gem::ConfigFile" "refm/api/src/rubygems/config_file.rd")
(find-rurima "--- path -> String" "== Public Instance Methods" "= class Gem::ConfigFile" "refm/api/src/rubygems/config_file.rd")
(find-rurima "--- path=(path)" "== Public Instance Methods" "= class Gem::ConfigFile" "refm/api/src/rubygems/config_file.rd")
(find-rurima "--- really_verbose -> bool" "== Public Instance Methods" "= class Gem::ConfigFile" "refm/api/src/rubygems/config_file.rd")
(find-rurima "--- update_sources -> bool" "== Public Instance Methods" "= class Gem::ConfigFile" "refm/api/src/rubygems/config_file.rd")
(find-rurima "--- update_sources=(update_sources)" "== Public Instance Methods" "= class Gem::ConfigFile" "refm/api/src/rubygems/config_file.rd")
(find-rurima "--- verbose -> bool | Symbol" "== Public Instance Methods" "= class Gem::ConfigFile" "refm/api/src/rubygems/config_file.rd")
(find-rurima "--- verbose=(verbose_level)" "== Public Instance Methods" "= class Gem::ConfigFile" "refm/api/src/rubygems/config_file.rd")
(find-rurima "--- write" "== Public Instance Methods" "= class Gem::ConfigFile" "refm/api/src/rubygems/config_file.rd")
(find-rurima "== Protected Instance Methods" "= class Gem::ConfigFile" "refm/api/src/rubygems/config_file.rd")
(find-rurima "--- hash -> Hash" "== Protected Instance Methods" "= class Gem::ConfigFile" "refm/api/src/rubygems/config_file.rd")
(find-rurima "== Constants" "= class Gem::ConfigFile" "refm/api/src/rubygems/config_file.rd")
(find-rurima "--- DEFAULT_BACKTRACE -> false" "== Constants" "= class Gem::ConfigFile" "refm/api/src/rubygems/config_file.rd")
(find-rurima "--- DEFAULT_BENCHMARK -> false" "== Constants" "= class Gem::ConfigFile" "refm/api/src/rubygems/config_file.rd")
(find-rurima "--- DEFAULT_BULK_THRESHOLD -> 1000" "== Constants" "= class Gem::ConfigFile" "refm/api/src/rubygems/config_file.rd")
(find-rurima "--- DEFAULT_UPDATE_SOURCES -> true" "== Constants" "= class Gem::ConfigFile" "refm/api/src/rubygems/config_file.rd")
(find-rurima "--- DEFAULT_VERBOSITY -> true" "== Constants" "= class Gem::ConfigFile" "refm/api/src/rubygems/config_file.rd")
(find-rurima "--- OPERATING_SYSTEM_DEFAULTS -> {}" "== Constants" "= class Gem::ConfigFile" "refm/api/src/rubygems/config_file.rd")
(find-rurima "--- PLATFORM_DEFAULTS -> {}" "== Constants" "= class Gem::ConfigFile" "refm/api/src/rubygems/config_file.rd")
(find-rurima "--- SYSTEM_WIDE_CONFIG_FILE -> String" "== Constants" "= class Gem::ConfigFile" "refm/api/src/rubygems/config_file.rd")
(find-rurima "= reopen Kernel" "refm/api/src/rubygems/custom_require.rd")
(find-rurima "== Private Instance Methods" "= reopen Kernel" "refm/api/src/rubygems/custom_require.rd")
(find-rurima "--- require(path) -> bool" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/rubygems/custom_require.rd")
(find-rurima "= reopen Gem" "refm/api/src/rubygems/defaults.rd")
(find-rurima "== Singleton Methods" "= reopen Gem" "refm/api/src/rubygems/defaults.rd")
(find-rurima "--- default_sources -> [String]" "== Singleton Methods" "= reopen Gem" "refm/api/src/rubygems/defaults.rd")
(find-rurima "--- default_dir -> String" "== Singleton Methods" "= reopen Gem" "refm/api/src/rubygems/defaults.rd")
(find-rurima "--- user_dir -> String" "== Singleton Methods" "= reopen Gem" "refm/api/src/rubygems/defaults.rd")
(find-rurima "--- default_path -> [String]" "== Singleton Methods" "= reopen Gem" "refm/api/src/rubygems/defaults.rd")
(find-rurima "--- default_exec_format -> String" "== Singleton Methods" "= reopen Gem" "refm/api/src/rubygems/defaults.rd")
(find-rurima "--- default_bindir -> String" "== Singleton Methods" "= reopen Gem" "refm/api/src/rubygems/defaults.rd")
(find-rurima "--- default_system_source_cache_dir -> String" "== Singleton Methods" "= reopen Gem" "refm/api/src/rubygems/defaults.rd")
(find-rurima "--- default_user_source_cache_dir -> String" "== Singleton Methods" "= reopen Gem" "refm/api/src/rubygems/defaults.rd")
(find-rurima "--- ruby_engine -> String" "== Singleton Methods" "= reopen Gem" "refm/api/src/rubygems/defaults.rd")
(find-rurima "= class Gem::SpecFetcher" "refm/api/src/rubygems/spec_fetcher.rd")
(find-rurima "== Singleton Methods" "= class Gem::SpecFetcher" "refm/api/src/rubygems/spec_fetcher.rd")
(find-rurima "--- fetcher -> Gem::SpecFetcher" "== Singleton Methods" "= class Gem::SpecFetcher" "refm/api/src/rubygems/spec_fetcher.rd")
(find-rurima "--- fetcher=(fetcher)" "== Singleton Methods" "= class Gem::SpecFetcher" "refm/api/src/rubygems/spec_fetcher.rd")
(find-rurima "== Instance Methods" "= class Gem::SpecFetcher" "refm/api/src/rubygems/spec_fetcher.rd")
(find-rurima "--- cache_dir(uri) -> String" "== Instance Methods" "= class Gem::SpecFetcher" "refm/api/src/rubygems/spec_fetcher.rd")
(find-rurima "--- dir -> String" "== Instance Methods" "= class Gem::SpecFetcher" "refm/api/src/rubygems/spec_fetcher.rd")
(find-rurima "--- fetch(dependency, all = false, matching_platform = true) -> Array" "== Instance Methods" "= class Gem::SpecFetcher" "refm/api/src/rubygems/spec_fetcher.rd")
(find-rurima "--- fetch_spec(spec, source_uri) -> object" "== Instance Methods" "= class Gem::SpecFetcher" "refm/api/src/rubygems/spec_fetcher.rd")
(find-rurima "--- find_matching(dependency, all = false, matching_platform = true) -> Array" "== Instance Methods" "= class Gem::SpecFetcher" "refm/api/src/rubygems/spec_fetcher.rd")
(find-rurima "--- latest_specs -> Hash" "== Instance Methods" "= class Gem::SpecFetcher" "refm/api/src/rubygems/spec_fetcher.rd")
(find-rurima "--- legacy_repos -> Array" "== Instance Methods" "= class Gem::SpecFetcher" "refm/api/src/rubygems/spec_fetcher.rd")
(find-rurima "--- list(all = false) -> Array" "== Instance Methods" "= class Gem::SpecFetcher" "refm/api/src/rubygems/spec_fetcher.rd")
(find-rurima "--- load_specs(source_uri, file) -> object" "== Instance Methods" "= class Gem::SpecFetcher" "refm/api/src/rubygems/spec_fetcher.rd")
(find-rurima "--- specs -> Hash" "== Instance Methods" "= class Gem::SpecFetcher" "refm/api/src/rubygems/spec_fetcher.rd")
(find-rurima "--- warn_legacy(exception){ ... } -> bool" "== Instance Methods" "= class Gem::SpecFetcher" "refm/api/src/rubygems/spec_fetcher.rd")
(find-rurima "= class Gem::Command" "refm/api/src/rubygems/command.rd")
(find-rurima "== Public Instance Methods" "= class Gem::Command" "refm/api/src/rubygems/command.rd")
(find-rurima "--- add_extra_args(args) -> Array" "== Public Instance Methods" "= class Gem::Command" "refm/api/src/rubygems/command.rd")
(find-rurima "--- add_option(*opts){|value, options| ... }" "== Public Instance Methods" "= class Gem::Command" "refm/api/src/rubygems/command.rd")
(find-rurima "--- arguments -> String" "== Public Instance Methods" "= class Gem::Command" "refm/api/src/rubygems/command.rd")
(find-rurima "--- begins?(long, short) -> bool" "== Public Instance Methods" "= class Gem::Command" "refm/api/src/rubygems/command.rd")
(find-rurima "--- command -> String" "== Public Instance Methods" "= class Gem::Command" "refm/api/src/rubygems/command.rd")
(find-rurima "--- defaults -> Hash" "== Public Instance Methods" "= class Gem::Command" "refm/api/src/rubygems/command.rd")
(find-rurima "--- defaults=(hash)" "== Public Instance Methods" "= class Gem::Command" "refm/api/src/rubygems/command.rd")
(find-rurima "--- defaults_str -> String" "== Public Instance Methods" "= class Gem::Command" "refm/api/src/rubygems/command.rd")
(find-rurima "--- description -> String" "== Public Instance Methods" "= class Gem::Command" "refm/api/src/rubygems/command.rd")
(find-rurima "--- execute -> ()" "== Public Instance Methods" "= class Gem::Command" "refm/api/src/rubygems/command.rd")
(find-rurima "--- get_all_gem_names -> Array" "== Public Instance Methods" "= class Gem::Command" "refm/api/src/rubygems/command.rd")
(find-rurima "--- get_one_gem_name -> String" "== Public Instance Methods" "= class Gem::Command" "refm/api/src/rubygems/command.rd")
(find-rurima "--- get_one_optional_argument -> String" "== Public Instance Methods" "= class Gem::Command" "refm/api/src/rubygems/command.rd")
(find-rurima "--- handle_options(args)" "== Public Instance Methods" "= class Gem::Command" "refm/api/src/rubygems/command.rd")
(find-rurima "--- handles?(args) -> bool" "== Public Instance Methods" "= class Gem::Command" "refm/api/src/rubygems/command.rd")
(find-rurima "--- invoke(*args)" "== Public Instance Methods" "= class Gem::Command" "refm/api/src/rubygems/command.rd")
(find-rurima "--- merge_options(new_options) -> Hash" "== Public Instance Methods" "= class Gem::Command" "refm/api/src/rubygems/command.rd")
(find-rurima "--- options -> Hash" "== Public Instance Methods" "= class Gem::Command" "refm/api/src/rubygems/command.rd")
(find-rurima "--- program_name -> String" "== Public Instance Methods" "= class Gem::Command" "refm/api/src/rubygems/command.rd")
(find-rurima "--- program_name=(name)" "== Public Instance Methods" "= class Gem::Command" "refm/api/src/rubygems/command.rd")
(find-rurima "--- remove_option(name)" "== Public Instance Methods" "= class Gem::Command" "refm/api/src/rubygems/command.rd")
(find-rurima "--- show_help -> ()" "== Public Instance Methods" "= class Gem::Command" "refm/api/src/rubygems/command.rd")
(find-rurima "--- summary -> String" "== Public Instance Methods" "= class Gem::Command" "refm/api/src/rubygems/command.rd")
(find-rurima "--- summary=(description)" "== Public Instance Methods" "= class Gem::Command" "refm/api/src/rubygems/command.rd")
(find-rurima "--- usage -> String" "== Public Instance Methods" "= class Gem::Command" "refm/api/src/rubygems/command.rd")
(find-rurima "--- when_invoked{ ... } -> Proc" "== Public Instance Methods" "= class Gem::Command" "refm/api/src/rubygems/command.rd")
(find-rurima "--- show_lookup_failure(gem_name, version, errors = nil) -> ()" "== Public Instance Methods" "= class Gem::Command" "refm/api/src/rubygems/command.rd")
(find-rurima "== Singleton Methods" "= class Gem::Command" "refm/api/src/rubygems/command.rd")
(find-rurima "--- add_common_option(*args){|value, options| ... }" "== Singleton Methods" "= class Gem::Command" "refm/api/src/rubygems/command.rd")
(find-rurima "--- add_specific_extra_args(cmd, args)" "== Singleton Methods" "= class Gem::Command" "refm/api/src/rubygems/command.rd")
(find-rurima "--- build_args -> Array" "== Singleton Methods" "= class Gem::Command" "refm/api/src/rubygems/command.rd")
(find-rurima "--- build_args=(value)" "== Singleton Methods" "= class Gem::Command" "refm/api/src/rubygems/command.rd")
(find-rurima "--- common_options -> Array" "== Singleton Methods" "= class Gem::Command" "refm/api/src/rubygems/command.rd")
(find-rurima "--- extra_args -> Array" "== Singleton Methods" "= class Gem::Command" "refm/api/src/rubygems/command.rd")
(find-rurima "--- extra_args=(value)" "== Singleton Methods" "= class Gem::Command" "refm/api/src/rubygems/command.rd")
(find-rurima "--- specific_extra_args(cmd) -> Array" "== Singleton Methods" "= class Gem::Command" "refm/api/src/rubygems/command.rd")
(find-rurima "--- specific_extra_args_hash -> Hash" "== Singleton Methods" "= class Gem::Command" "refm/api/src/rubygems/command.rd")
(find-rurima "== Constants" "= class Gem::Command" "refm/api/src/rubygems/command.rd")
(find-rurima "--- HELP -> String" "== Constants" "= class Gem::Command" "refm/api/src/rubygems/command.rd")
(find-rurima "= module Gem::DefaultUserInteraction" "refm/api/src/rubygems/user_interaction.rd")
(find-rurima "== Singleton Methods" "= module Gem::DefaultUserInteraction" "refm/api/src/rubygems/user_interaction.rd")
(find-rurima "--- ui -> Gem::ConsoleUI" "== Singleton Methods" "= module Gem::DefaultUserInteraction" "refm/api/src/rubygems/user_interaction.rd")
(find-rurima "--- ui=(new_ui)" "== Singleton Methods" "= module Gem::DefaultUserInteraction" "refm/api/src/rubygems/user_interaction.rd")
(find-rurima "--- use_ui(new_ui){ ... }" "== Singleton Methods" "= module Gem::DefaultUserInteraction" "refm/api/src/rubygems/user_interaction.rd")
(find-rurima "== Public Instance Methods" "= module Gem::DefaultUserInteraction" "refm/api/src/rubygems/user_interaction.rd")
(find-rurima "--- ui -> Gem::ConsoleUI" "== Public Instance Methods" "= module Gem::DefaultUserInteraction" "refm/api/src/rubygems/user_interaction.rd")
(find-rurima "--- ui=(new_ui)" "== Public Instance Methods" "= module Gem::DefaultUserInteraction" "refm/api/src/rubygems/user_interaction.rd")
(find-rurima "--- use_ui(new_ui){ ... }" "== Public Instance Methods" "= module Gem::DefaultUserInteraction" "refm/api/src/rubygems/user_interaction.rd")
(find-rurima "= module Gem::UserInteraction" "refm/api/src/rubygems/user_interaction.rd")
(find-rurima "== Public Instance Methods" "= module Gem::UserInteraction" "refm/api/src/rubygems/user_interaction.rd")
(find-rurima "--- alert(*args) -> ()" "== Public Instance Methods" "= module Gem::UserInteraction" "refm/api/src/rubygems/user_interaction.rd")
(find-rurima "--- alert_error(*args) -> ()" "== Public Instance Methods" "= module Gem::UserInteraction" "refm/api/src/rubygems/user_interaction.rd")
(find-rurima "--- alert_warning(*args) -> ()" "== Public Instance Methods" "= module Gem::UserInteraction" "refm/api/src/rubygems/user_interaction.rd")
(find-rurima "--- ask(*args) -> String" "== Public Instance Methods" "= module Gem::UserInteraction" "refm/api/src/rubygems/user_interaction.rd")
(find-rurima "--- ask_yes_no(*args) -> bool" "== Public Instance Methods" "= module Gem::UserInteraction" "refm/api/src/rubygems/user_interaction.rd")
(find-rurima "--- choose_from_list(*args) -> Array" "== Public Instance Methods" "= module Gem::UserInteraction" "refm/api/src/rubygems/user_interaction.rd")
(find-rurima "--- say(*args) -> ()" "== Public Instance Methods" "= module Gem::UserInteraction" "refm/api/src/rubygems/user_interaction.rd")
(find-rurima "--- terminate_interaction(*args) -> ()" "== Public Instance Methods" "= module Gem::UserInteraction" "refm/api/src/rubygems/user_interaction.rd")
(find-rurima "= class Gem::StreamUI" "refm/api/src/rubygems/user_interaction.rd")
(find-rurima "== Singleton Methods" "= class Gem::StreamUI" "refm/api/src/rubygems/user_interaction.rd")
(find-rurima "--- new(in_stream, out_stream, err_stream = STDERR)" "== Singleton Methods" "= class Gem::StreamUI" "refm/api/src/rubygems/user_interaction.rd")
(find-rurima "== Public Instance Methods" "= class Gem::StreamUI" "refm/api/src/rubygems/user_interaction.rd")
(find-rurima "--- alert(statement, question  = nil) -> String | nil" "== Public Instance Methods" "= class Gem::StreamUI" "refm/api/src/rubygems/user_interaction.rd")
(find-rurima "--- alert_error(statement, question  = nil) -> String | nil" "== Public Instance Methods" "= class Gem::StreamUI" "refm/api/src/rubygems/user_interaction.rd")
(find-rurima "--- alert_warning(statement, question  = nil) -> String | nil" "== Public Instance Methods" "= class Gem::StreamUI" "refm/api/src/rubygems/user_interaction.rd")
(find-rurima "--- ask(question) -> String | nil" "== Public Instance Methods" "= class Gem::StreamUI" "refm/api/src/rubygems/user_interaction.rd")
(find-rurima "--- ask_yes_no(question) -> bool" "== Public Instance Methods" "= class Gem::StreamUI" "refm/api/src/rubygems/user_interaction.rd")
(find-rurima "--- choose_from_list(question, list) -> Array" "== Public Instance Methods" "= class Gem::StreamUI" "refm/api/src/rubygems/user_interaction.rd")
(find-rurima "--- errs -> IO" "== Public Instance Methods" "= class Gem::StreamUI" "refm/api/src/rubygems/user_interaction.rd")
(find-rurima "--- ins -> IO" "== Public Instance Methods" "= class Gem::StreamUI" "refm/api/src/rubygems/user_interaction.rd")
(find-rurima "--- outs -> IO" "== Public Instance Methods" "= class Gem::StreamUI" "refm/api/src/rubygems/user_interaction.rd")
(find-rurima "--- progress_reporter(*args) -> SilentProgressReporter | SimpleProgressReporter | VerboseProgressReporter" "== Public Instance Methods" "= class Gem::StreamUI" "refm/api/src/rubygems/user_interaction.rd")
(find-rurima "--- say(statement = '') -> ()" "== Public Instance Methods" "= class Gem::StreamUI" "refm/api/src/rubygems/user_interaction.rd")
(find-rurima "--- terminate_interaction(status = 0) -> ()" "== Public Instance Methods" "= class Gem::StreamUI" "refm/api/src/rubygems/user_interaction.rd")
(find-rurima "= class Gem::StreamUI::SilentProgressReporter" "refm/api/src/rubygems/user_interaction.rd")
(find-rurima "== Singleton Methods" "= class Gem::StreamUI::SilentProgressReporter" "refm/api/src/rubygems/user_interaction.rd")
(find-rurima "--- new(out_stream, size, initial_message, terminal_message = nil)" "== Singleton Methods" "= class Gem::StreamUI::SilentProgressReporter" "refm/api/src/rubygems/user_interaction.rd")
(find-rurima "== Public Instance Methods" "= class Gem::StreamUI::SilentProgressReporter" "refm/api/src/rubygems/user_interaction.rd")
(find-rurima "--- count -> nil" "== Public Instance Methods" "= class Gem::StreamUI::SilentProgressReporter" "refm/api/src/rubygems/user_interaction.rd")
(find-rurima "--- done -> nil" "== Public Instance Methods" "= class Gem::StreamUI::SilentProgressReporter" "refm/api/src/rubygems/user_interaction.rd")
(find-rurima "--- updated(message) -> nil" "== Public Instance Methods" "= class Gem::StreamUI::SilentProgressReporter" "refm/api/src/rubygems/user_interaction.rd")
(find-rurima "= class Gem::StreamUI::SimpleProgressReporter" "refm/api/src/rubygems/user_interaction.rd")
(find-rurima "== Singleton Methods" "= class Gem::StreamUI::SimpleProgressReporter" "refm/api/src/rubygems/user_interaction.rd")
(find-rurima "--- new(out_stream, size, initial_message, terminal_message = nil)" "== Singleton Methods" "= class Gem::StreamUI::SimpleProgressReporter" "refm/api/src/rubygems/user_interaction.rd")
(find-rurima "== Public Instance Methods" "= class Gem::StreamUI::SimpleProgressReporter" "refm/api/src/rubygems/user_interaction.rd")
(find-rurima "--- count -> Integer" "== Public Instance Methods" "= class Gem::StreamUI::SimpleProgressReporter" "refm/api/src/rubygems/user_interaction.rd")
(find-rurima "--- done -> nil" "== Public Instance Methods" "= class Gem::StreamUI::SimpleProgressReporter" "refm/api/src/rubygems/user_interaction.rd")
(find-rurima "--- updated(message) -> nil" "== Public Instance Methods" "= class Gem::StreamUI::SimpleProgressReporter" "refm/api/src/rubygems/user_interaction.rd")
(find-rurima "= class Gem::StreamUI::VerboseProgressReporter" "refm/api/src/rubygems/user_interaction.rd")
(find-rurima "== Singleton Methods" "= class Gem::StreamUI::VerboseProgressReporter" "refm/api/src/rubygems/user_interaction.rd")
(find-rurima "--- new(out_stream, size, initial_message, terminal_message = nil)" "== Singleton Methods" "= class Gem::StreamUI::VerboseProgressReporter" "refm/api/src/rubygems/user_interaction.rd")
(find-rurima "== Public Instance Methods" "= class Gem::StreamUI::VerboseProgressReporter" "refm/api/src/rubygems/user_interaction.rd")
(find-rurima "--- count -> Integer" "== Public Instance Methods" "= class Gem::StreamUI::VerboseProgressReporter" "refm/api/src/rubygems/user_interaction.rd")
(find-rurima "--- done -> nil" "== Public Instance Methods" "= class Gem::StreamUI::VerboseProgressReporter" "refm/api/src/rubygems/user_interaction.rd")
(find-rurima "--- updated(message) -> nil" "== Public Instance Methods" "= class Gem::StreamUI::VerboseProgressReporter" "refm/api/src/rubygems/user_interaction.rd")
(find-rurima "= class ConsoleUI < Gem::StreamUI" "refm/api/src/rubygems/user_interaction.rd")
(find-rurima "= class SilentUI" "refm/api/src/rubygems/user_interaction.rd")
(find-rurima "= module Gem::VersionOption" "refm/api/src/rubygems/version_option.rd")
(find-rurima "== Public Instance Methods" "= module Gem::VersionOption" "refm/api/src/rubygems/version_option.rd")
(find-rurima "--- add_platform_option(task = command, *wrap)" "== Public Instance Methods" "= module Gem::VersionOption" "refm/api/src/rubygems/version_option.rd")
(find-rurima "--- add_version_option(task = command, *wrap)" "== Public Instance Methods" "= module Gem::VersionOption" "refm/api/src/rubygems/version_option.rd")
(find-rurima "= class Gem::DependencyList" "refm/api/src/rubygems/dependency_list.rd")
(find-rurima "== Public Instance Methods" "= class Gem::DependencyList" "refm/api/src/rubygems/dependency_list.rd")
(find-rurima "--- add(*gemspecs)" "== Public Instance Methods" "= class Gem::DependencyList" "refm/api/src/rubygems/dependency_list.rd")
(find-rurima "--- dependency_order -> [Gem::Specification]" "== Public Instance Methods" "= class Gem::DependencyList" "refm/api/src/rubygems/dependency_list.rd")
(find-rurima "--- find_name(full_name) -> Gem::Specification | nil" "== Public Instance Methods" "= class Gem::DependencyList" "refm/api/src/rubygems/dependency_list.rd")
(find-rurima "--- ok? -> bool" "== Public Instance Methods" "= class Gem::DependencyList" "refm/api/src/rubygems/dependency_list.rd")
(find-rurima "--- ok_to_remove?(full_name) -> bool" "== Public Instance Methods" "= class Gem::DependencyList" "refm/api/src/rubygems/dependency_list.rd")
(find-rurima "--- remove_by_name(full_name) -> Gem::Specification" "== Public Instance Methods" "= class Gem::DependencyList" "refm/api/src/rubygems/dependency_list.rd")
(find-rurima "--- spec_predecessors -> Hash" "== Public Instance Methods" "= class Gem::DependencyList" "refm/api/src/rubygems/dependency_list.rd")
(find-rurima "== Singleton Methods" "= class Gem::DependencyList" "refm/api/src/rubygems/dependency_list.rd")
(find-rurima "--- from_source_index(src_index) -> Gem::DependencyList" "== Singleton Methods" "= class Gem::DependencyList" "refm/api/src/rubygems/dependency_list.rd")
(find-rurima "= class Gem::CommandManager" "refm/api/src/rubygems/command_manager.rd")
(find-rurima "== Singleton Methods" "= class Gem::CommandManager" "refm/api/src/rubygems/command_manager.rd")
(find-rurima "--- instance -> Gem::CommandManager" "== Singleton Methods" "= class Gem::CommandManager" "refm/api/src/rubygems/command_manager.rd")
(find-rurima "== Public Instance Methods" "= class Gem::CommandManager" "refm/api/src/rubygems/command_manager.rd")
(find-rurima "--- [](command_name) -> Gem::Command | nil" "== Public Instance Methods" "= class Gem::CommandManager" "refm/api/src/rubygems/command_manager.rd")
(find-rurima "--- command_names -> Array" "== Public Instance Methods" "= class Gem::CommandManager" "refm/api/src/rubygems/command_manager.rd")
(find-rurima "--- find_command(command_name) -> Gem::Command | nil" "== Public Instance Methods" "= class Gem::CommandManager" "refm/api/src/rubygems/command_manager.rd")
(find-rurima "--- find_command_possibilities(command_name) -> Array" "== Public Instance Methods" "= class Gem::CommandManager" "refm/api/src/rubygems/command_manager.rd")
(find-rurima "--- process_args(args) -> ()" "== Public Instance Methods" "= class Gem::CommandManager" "refm/api/src/rubygems/command_manager.rd")
(find-rurima "--- register_command(command_name) -> false" "== Public Instance Methods" "= class Gem::CommandManager" "refm/api/src/rubygems/command_manager.rd")
(find-rurima "--- run(args) -> ()" "== Public Instance Methods" "= class Gem::CommandManager" "refm/api/src/rubygems/command_manager.rd")
(find-rurima "==== 署名付きの Gem パッケージ" "refm/api/src/rubygems/security.rd")
(find-rurima "===== 目次" "==== 署名付きの Gem パッケージ" "refm/api/src/rubygems/security.rd")
(find-rurima "===== 概要" "==== 署名付きの Gem パッケージ" "refm/api/src/rubygems/security.rd")
(find-rurima "===== 解説" "==== 署名付きの Gem パッケージ" "refm/api/src/rubygems/security.rd")
(find-rurima "===== コマンドラインオプション" "==== 署名付きの Gem パッケージ" "refm/api/src/rubygems/security.rd")
(find-rurima "===== OpenSSL リファレンス" "==== 署名付きの Gem パッケージ" "refm/api/src/rubygems/security.rd")
(find-rurima "= module Gem::Security" "refm/api/src/rubygems/security.rd")
(find-rurima "== Singleton Methods" "= module Gem::Security" "refm/api/src/rubygems/security.rd")
(find-rurima "--- add_trusted_cert(cert, options = {}) -> nil" "== Singleton Methods" "= module Gem::Security" "refm/api/src/rubygems/security.rd")
(find-rurima "--- build_cert(name, key, options = {}) -> OpenSSL::X509::Certificate" "== Singleton Methods" "= module Gem::Security" "refm/api/src/rubygems/security.rd")
(find-rurima "--- build_self_signed_cert(email_addr, options = {}) -> Hash" "== Singleton Methods" "= module Gem::Security" "refm/api/src/rubygems/security.rd")
(find-rurima "--- sign_cert(cert, signing_key, signing_cert, options = {}) -> OpenSSL::X509::Certificate" "== Singleton Methods" "= module Gem::Security" "refm/api/src/rubygems/security.rd")
(find-rurima "--- verify_trust_dir(path, perms)" "== Singleton Methods" "= module Gem::Security" "refm/api/src/rubygems/security.rd")
(find-rurima "== Constants" "= module Gem::Security" "refm/api/src/rubygems/security.rd")
(find-rurima "--- AlmostNoSecurity -> Gem::Security::Policy" "== Constants" "= module Gem::Security" "refm/api/src/rubygems/security.rd")
(find-rurima "--- HighSecurity -> Gem::Security::Policy" "== Constants" "= module Gem::Security" "refm/api/src/rubygems/security.rd")
(find-rurima "--- LowSecurity -> Gem::Security::Policy" "== Constants" "= module Gem::Security" "refm/api/src/rubygems/security.rd")
(find-rurima "--- MediumSecurity -> Gem::Security::Policy" "== Constants" "= module Gem::Security" "refm/api/src/rubygems/security.rd")
(find-rurima "--- NoSecurity -> Gem::Security::Policy" "== Constants" "= module Gem::Security" "refm/api/src/rubygems/security.rd")
(find-rurima "--- OPT -> Hash" "== Constants" "= module Gem::Security" "refm/api/src/rubygems/security.rd")
(find-rurima "--- Policies -> Hash" "== Constants" "= module Gem::Security" "refm/api/src/rubygems/security.rd")
(find-rurima "= class Gem::Security::Policy" "refm/api/src/rubygems/security.rd")
(find-rurima "== Public Instance Methods" "= class Gem::Security::Policy" "refm/api/src/rubygems/security.rd")
(find-rurima "--- only_signed -> bool" "== Public Instance Methods" "= class Gem::Security::Policy" "refm/api/src/rubygems/security.rd")
(find-rurima "--- only_signed=(flag)" "== Public Instance Methods" "= class Gem::Security::Policy" "refm/api/src/rubygems/security.rd")
(find-rurima "--- only_trusted -> bool" "== Public Instance Methods" "= class Gem::Security::Policy" "refm/api/src/rubygems/security.rd")
(find-rurima "--- only_trusted=(flag)" "== Public Instance Methods" "= class Gem::Security::Policy" "refm/api/src/rubygems/security.rd")
(find-rurima "--- verify_chain -> bool" "== Public Instance Methods" "= class Gem::Security::Policy" "refm/api/src/rubygems/security.rd")
(find-rurima "--- verify_chain=(flag)" "== Public Instance Methods" "= class Gem::Security::Policy" "refm/api/src/rubygems/security.rd")
(find-rurima "--- verify_data -> bool" "== Public Instance Methods" "= class Gem::Security::Policy" "refm/api/src/rubygems/security.rd")
(find-rurima "--- verify_data=(flag)" "== Public Instance Methods" "= class Gem::Security::Policy" "refm/api/src/rubygems/security.rd")
(find-rurima "--- verify_gem(signature, data, chain, time = Time.now) -> Array" "== Public Instance Methods" "= class Gem::Security::Policy" "refm/api/src/rubygems/security.rd")
(find-rurima "--- verify_root -> bool" "== Public Instance Methods" "= class Gem::Security::Policy" "refm/api/src/rubygems/security.rd")
(find-rurima "--- verify_root=(flag)" "== Public Instance Methods" "= class Gem::Security::Policy" "refm/api/src/rubygems/security.rd")
(find-rurima "--- verify_signer -> bool" "== Public Instance Methods" "= class Gem::Security::Policy" "refm/api/src/rubygems/security.rd")
(find-rurima "--- verify_signer=(flag)" "== Public Instance Methods" "= class Gem::Security::Policy" "refm/api/src/rubygems/security.rd")
(find-rurima "== Singleton Methods" "= class Gem::Security::Policy" "refm/api/src/rubygems/security.rd")
(find-rurima "--- new(policy = {}, options = {}) -> Gem::Security::Policy" "== Singleton Methods" "= class Gem::Security::Policy" "refm/api/src/rubygems/security.rd")
(find-rurima "--- trusted_cert_path(cert, options) -> String" "== Singleton Methods" "= class Gem::Security::Policy" "refm/api/src/rubygems/security.rd")
(find-rurima "= class Gem::Security::Signer" "refm/api/src/rubygems/security.rd")
(find-rurima "== Public Instance Methods" "= class Gem::Security::Signer" "refm/api/src/rubygems/security.rd")
(find-rurima "--- key -> OpenSSL::PKey::PKey" "== Public Instance Methods" "= class Gem::Security::Signer" "refm/api/src/rubygems/security.rd")
(find-rurima "--- key=(key)" "== Public Instance Methods" "= class Gem::Security::Signer" "refm/api/src/rubygems/security.rd")
(find-rurima "--- cert_chain -> Array" "== Public Instance Methods" "= class Gem::Security::Signer" "refm/api/src/rubygems/security.rd")
(find-rurima "--- cert_chain=(cert_chain)" "== Public Instance Methods" "= class Gem::Security::Signer" "refm/api/src/rubygems/security.rd")
(find-rurima "--- sign(data)" "== Public Instance Methods" "= class Gem::Security::Signer" "refm/api/src/rubygems/security.rd")
(find-rurima "== Singleton Methods" "= class Gem::Security::Signer" "refm/api/src/rubygems/security.rd")
(find-rurima "--- new(key, cert_chain) -> Gem::Security::Signer" "== Singleton Methods" "= class Gem::Security::Signer" "refm/api/src/rubygems/security.rd")
(find-rurima "= class Gem::Security::Exception < Gem::Exception" "refm/api/src/rubygems/security.rd")
(find-rurima "= class Gem::GemPathSearcher" "refm/api/src/rubygems/gem_path_searcher.rd")
(find-rurima "== Public Instance Methods" "= class Gem::GemPathSearcher" "refm/api/src/rubygems/gem_path_searcher.rd")
(find-rurima "--- find(path) -> nil | Gem::Specification" "== Public Instance Methods" "= class Gem::GemPathSearcher" "refm/api/src/rubygems/gem_path_searcher.rd")
(find-rurima "--- find_all(path) -> [Gem::Specification]" "== Public Instance Methods" "= class Gem::GemPathSearcher" "refm/api/src/rubygems/gem_path_searcher.rd")
(find-rurima "--- init_gemspecs -> [Gem::Specification]" "== Public Instance Methods" "= class Gem::GemPathSearcher" "refm/api/src/rubygems/gem_path_searcher.rd")
(find-rurima "--- lib_dirs_for(spec) -> String" "== Public Instance Methods" "= class Gem::GemPathSearcher" "refm/api/src/rubygems/gem_path_searcher.rd")
(find-rurima "--- matching_file?(spec, path) -> bool" "== Public Instance Methods" "= class Gem::GemPathSearcher" "refm/api/src/rubygems/gem_path_searcher.rd")
(find-rurima "--- matching_files(spec, path) -> [String]" "== Public Instance Methods" "= class Gem::GemPathSearcher" "refm/api/src/rubygems/gem_path_searcher.rd")
(find-rurima "== Singleton Methods" "= class Gem::GemPathSearcher" "refm/api/src/rubygems/gem_path_searcher.rd")
(find-rurima "--- new -> Gem::GemPathSearcher" "== Singleton Methods" "= class Gem::GemPathSearcher" "refm/api/src/rubygems/gem_path_searcher.rd")
(find-rurima "= class Gem::Commands::ListCommand < Gem::Commands::QueryCommand" "refm/api/src/rubygems/commands/list_command.rd")
(find-rurima "= class Gem::Commands::StaleCommand < Gem::Command" "refm/api/src/rubygems/commands/stale_command.rd")
(find-rurima "= class Gem::Commands::UpdateCommand < Gem::Command" "refm/api/src/rubygems/commands/update_command.rd")
(find-rurima "== Public Instance Methods" "= class Gem::Commands::UpdateCommand < Gem::Command" "refm/api/src/rubygems/commands/update_command.rd")
(find-rurima "--- do_rubygems_update(version)" "== Public Instance Methods" "= class Gem::Commands::UpdateCommand < Gem::Command" "refm/api/src/rubygems/commands/update_command.rd")
(find-rurima "--- which_to_update(highest_installed_gems, gem_names) -> Array" "== Public Instance Methods" "= class Gem::Commands::UpdateCommand < Gem::Command" "refm/api/src/rubygems/commands/update_command.rd")
(find-rurima "= class Gem::Commands::EnvironmentCommand < Gem::Command" "refm/api/src/rubygems/commands/environment_command.rd")
(find-rurima "= class Gem::Commands::FetchCommand < Gem::Command" "refm/api/src/rubygems/commands/fetch_command.rd")
(find-rurima "= class Gem::Commands::OutdatedCommand < Gem::Command" "refm/api/src/rubygems/commands/outdated_command.rd")
(find-rurima "= class Gem::Commands::ContentsCommand < Gem::Command" "refm/api/src/rubygems/commands/contents_command.rd")
(find-rurima "= class Gem::Commands::QueryCommand < Gem::Command" "refm/api/src/rubygems/commands/query_command.rd")
(find-rurima "= class Gem::Commands::SearchCommand < Gem::Commands::QueryCommand" "refm/api/src/rubygems/commands/search_command.rd")
(find-rurima "= class Gem::Commands::SpecificationCommand < Gem::Command" "refm/api/src/rubygems/commands/specification_command.rd")
(find-rurima "= class Gem::Commands::RdocCommand < Gem::Command" "refm/api/src/rubygems/commands/rdoc_command.rd")
(find-rurima "= class Gem::Commands::LockCommand < Gem::Command" "refm/api/src/rubygems/commands/lock_command.rd")
(find-rurima "== Public Instance Methods" "= class Gem::Commands::LockCommand < Gem::Command" "refm/api/src/rubygems/commands/lock_command.rd")
(find-rurima "--- complain(message) -> ()" "== Public Instance Methods" "= class Gem::Commands::LockCommand < Gem::Command" "refm/api/src/rubygems/commands/lock_command.rd")
(find-rurima "--- spec_path(gem_full_name) -> String" "== Public Instance Methods" "= class Gem::Commands::LockCommand < Gem::Command" "refm/api/src/rubygems/commands/lock_command.rd")
(find-rurima "= class Gem::Commands::HelpCommand < Gem::Command" "refm/api/src/rubygems/commands/help_command.rd")
(find-rurima "== Constants" "= class Gem::Commands::HelpCommand < Gem::Command" "refm/api/src/rubygems/commands/help_command.rd")
(find-rurima "--- EXAMPLES -> String" "== Constants" "= class Gem::Commands::HelpCommand < Gem::Command" "refm/api/src/rubygems/commands/help_command.rd")
(find-rurima "--- PLATFORMS -> String" "== Constants" "= class Gem::Commands::HelpCommand < Gem::Command" "refm/api/src/rubygems/commands/help_command.rd")
(find-rurima "= class Gem::Commands::DependencyCommand < Gem::Command" "refm/api/src/rubygems/commands/dependency_command.rd")
(find-rurima "== Public Instance Methods" "= class Gem::Commands::DependencyCommand < Gem::Command" "refm/api/src/rubygems/commands/dependency_command.rd")
(find-rurima "--- usage -> String" "== Public Instance Methods" "= class Gem::Commands::DependencyCommand < Gem::Command" "refm/api/src/rubygems/commands/dependency_command.rd")
(find-rurima "--- arguments -> String" "== Public Instance Methods" "= class Gem::Commands::DependencyCommand < Gem::Command" "refm/api/src/rubygems/commands/dependency_command.rd")
(find-rurima "--- execute -> ()" "== Public Instance Methods" "= class Gem::Commands::DependencyCommand < Gem::Command" "refm/api/src/rubygems/commands/dependency_command.rd")
(find-rurima "--- find_gems(name, source_index) -> Hash" "== Public Instance Methods" "= class Gem::Commands::DependencyCommand < Gem::Command" "refm/api/src/rubygems/commands/dependency_command.rd")
(find-rurima "--- find_reverse_dependencies(spec) -> Array" "== Public Instance Methods" "= class Gem::Commands::DependencyCommand < Gem::Command" "refm/api/src/rubygems/commands/dependency_command.rd")
(find-rurima "--- print_dependencies(spec, level = 0) -> String" "== Public Instance Methods" "= class Gem::Commands::DependencyCommand < Gem::Command" "refm/api/src/rubygems/commands/dependency_command.rd")
(find-rurima "= class Gem::Commands::ServerCommand < Gem::Command" "refm/api/src/rubygems/commands/server_command.rd")
(find-rurima "= class Gem::Commands::CheckCommand < Gem::Command" "refm/api/src/rubygems/commands/check_command.rd")
(find-rurima "= class Gem::Commands::UninstallCommand < Gem::Command" "refm/api/src/rubygems/commands/uninstall_command.rd")
(find-rurima "= class Gem::Commands::InstallCommand < Gem::Command" "refm/api/src/rubygems/commands/install_command.rd")
(find-rurima "= class Gem::Commands::UnpackCommand < Gem::Command" "refm/api/src/rubygems/commands/unpack_command.rd")
(find-rurima "== Public Instance Methods" "= class Gem::Commands::UnpackCommand < Gem::Command" "refm/api/src/rubygems/commands/unpack_command.rd")
(find-rurima "--- get_path(gemname, version_req) -> String | nil" "== Public Instance Methods" "= class Gem::Commands::UnpackCommand < Gem::Command" "refm/api/src/rubygems/commands/unpack_command.rd")
(find-rurima "= class Gem::Commands::CertCommand < Gem::Command" "refm/api/src/rubygems/commands/cert_command.rd")
(find-rurima "= class Gem::Commands::BuildCommand < Gem::Command" "refm/api/src/rubygems/commands/build_command.rd")
(find-rurima "== Public Instance Methods" "= class Gem::Commands::BuildCommand < Gem::Command" "refm/api/src/rubygems/commands/build_command.rd")
(find-rurima "--- execute -> ()" "== Public Instance Methods" "= class Gem::Commands::BuildCommand < Gem::Command" "refm/api/src/rubygems/commands/build_command.rd")
(find-rurima "--- load_gemspecs(filename) -> Array" "== Public Instance Methods" "= class Gem::Commands::BuildCommand < Gem::Command" "refm/api/src/rubygems/commands/build_command.rd")
(find-rurima "--- usage -> String" "== Public Instance Methods" "= class Gem::Commands::BuildCommand < Gem::Command" "refm/api/src/rubygems/commands/build_command.rd")
(find-rurima "--- arguments -> String" "== Public Instance Methods" "= class Gem::Commands::BuildCommand < Gem::Command" "refm/api/src/rubygems/commands/build_command.rd")
(find-rurima "--- yaml?(filename) -> bool" "== Public Instance Methods" "= class Gem::Commands::BuildCommand < Gem::Command" "refm/api/src/rubygems/commands/build_command.rd")
(find-rurima "= class Gem::Commands::MirrorCommand < Gem::Command" "refm/api/src/rubygems/commands/mirror_command.rd")
(find-rurima "= class Gem::Commands::PristineCommand < Gem::Command" "refm/api/src/rubygems/commands/pristine_command.rd")
(find-rurima "= class Gem::Commands::GenerateIndexCommand < Gem::Command" "refm/api/src/rubygems/commands/generate_index_command.rd")
(find-rurima "= class Gem::Commands::CleanupCommand < Gem::Command" "refm/api/src/rubygems/commands/cleanup_command.rd")
(find-rurima "= class Gem::Commands::WhichCommand < Gem::Command" "refm/api/src/rubygems/commands/which_command.rd")
(find-rurima "== Public Instance Methods" "= class Gem::Commands::WhichCommand < Gem::Command" "refm/api/src/rubygems/commands/which_command.rd")
(find-rurima "--- find_paths(package_name, dirs) -> Array" "== Public Instance Methods" "= class Gem::Commands::WhichCommand < Gem::Command" "refm/api/src/rubygems/commands/which_command.rd")
(find-rurima "--- gem_paths(spec) -> Array" "== Public Instance Methods" "= class Gem::Commands::WhichCommand < Gem::Command" "refm/api/src/rubygems/commands/which_command.rd")
(find-rurima "== Constants" "= class Gem::Commands::WhichCommand < Gem::Command" "refm/api/src/rubygems/commands/which_command.rd")
(find-rurima "--- EXT -> [String]" "== Constants" "= class Gem::Commands::WhichCommand < Gem::Command" "refm/api/src/rubygems/commands/which_command.rd")
(find-rurima "= class Gem::Commands::SourcesCommand < Gem::Command" "refm/api/src/rubygems/commands/sources_command.rd")
(find-rurima "= class Gem::Indexer::QuickIndexBuilder < Gem::Indexer::AbstractIndexBuilder" "refm/api/src/rubygems/indexer/quick_index_builder.rd")
(find-rurima "== Public Instance Methods" "= class Gem::Indexer::QuickIndexBuilder < Gem::Indexer::AbstractIndexBuilder" "refm/api/src/rubygems/indexer/quick_index_builder.rd")
(find-rurima "--- add(spec)" "== Public Instance Methods" "= class Gem::Indexer::QuickIndexBuilder < Gem::Indexer::AbstractIndexBuilder" "refm/api/src/rubygems/indexer/quick_index_builder.rd")
(find-rurima "--- add_marshal(spec)" "== Public Instance Methods" "= class Gem::Indexer::QuickIndexBuilder < Gem::Indexer::AbstractIndexBuilder" "refm/api/src/rubygems/indexer/quick_index_builder.rd")
(find-rurima "--- add_yaml(spec)" "== Public Instance Methods" "= class Gem::Indexer::QuickIndexBuilder < Gem::Indexer::AbstractIndexBuilder" "refm/api/src/rubygems/indexer/quick_index_builder.rd")
(find-rurima "--- cleanup" "== Public Instance Methods" "= class Gem::Indexer::QuickIndexBuilder < Gem::Indexer::AbstractIndexBuilder" "refm/api/src/rubygems/indexer/quick_index_builder.rd")
(find-rurima "= class Gem::Indexer::AbstractIndexBuilder" "refm/api/src/rubygems/indexer/abstract_index_builder.rd")
(find-rurima "== Public Instance Methods" "= class Gem::Indexer::AbstractIndexBuilder" "refm/api/src/rubygems/indexer/abstract_index_builder.rd")
(find-rurima "--- build{ ... }" "== Public Instance Methods" "= class Gem::Indexer::AbstractIndexBuilder" "refm/api/src/rubygems/indexer/abstract_index_builder.rd")
(find-rurima "--- cleanup -> nil" "== Public Instance Methods" "= class Gem::Indexer::AbstractIndexBuilder" "refm/api/src/rubygems/indexer/abstract_index_builder.rd")
(find-rurima "--- compress(filename, ext = 'rz')" "== Public Instance Methods" "= class Gem::Indexer::AbstractIndexBuilder" "refm/api/src/rubygems/indexer/abstract_index_builder.rd")
(find-rurima "--- directory -> String" "== Public Instance Methods" "= class Gem::Indexer::AbstractIndexBuilder" "refm/api/src/rubygems/indexer/abstract_index_builder.rd")
(find-rurima "--- end_index -> nil" "== Public Instance Methods" "= class Gem::Indexer::AbstractIndexBuilder" "refm/api/src/rubygems/indexer/abstract_index_builder.rd")
(find-rurima "--- filename -> String" "== Public Instance Methods" "= class Gem::Indexer::AbstractIndexBuilder" "refm/api/src/rubygems/indexer/abstract_index_builder.rd")
(find-rurima "--- files -> [String]" "== Public Instance Methods" "= class Gem::Indexer::AbstractIndexBuilder" "refm/api/src/rubygems/indexer/abstract_index_builder.rd")
(find-rurima "--- start_index -> nil" "== Public Instance Methods" "= class Gem::Indexer::AbstractIndexBuilder" "refm/api/src/rubygems/indexer/abstract_index_builder.rd")
(find-rurima "--- unzip(string) -> String" "== Public Instance Methods" "= class Gem::Indexer::AbstractIndexBuilder" "refm/api/src/rubygems/indexer/abstract_index_builder.rd")
(find-rurima "--- zip(string) -> String" "== Public Instance Methods" "= class Gem::Indexer::AbstractIndexBuilder" "refm/api/src/rubygems/indexer/abstract_index_builder.rd")
(find-rurima "== Singleton Methods" "= class Gem::Indexer::AbstractIndexBuilder" "refm/api/src/rubygems/indexer/abstract_index_builder.rd")
(find-rurima "--- new(filename, directory) -> Gem::Indexer::AbstractIndexBuilder" "== Singleton Methods" "= class Gem::Indexer::AbstractIndexBuilder" "refm/api/src/rubygems/indexer/abstract_index_builder.rd")
(find-rurima "= class Gem::Indexer::MarshalIndexBuilder < Gem::Indexer::MasterIndexBuilder" "refm/api/src/rubygems/indexer/marshal_index_builder.rd")
(find-rurima "== Public Instance Methods" "= class Gem::Indexer::MarshalIndexBuilder < Gem::Indexer::MasterIndexBuilder" "refm/api/src/rubygems/indexer/marshal_index_builder.rd")
(find-rurima "--- end_index" "== Public Instance Methods" "= class Gem::Indexer::MarshalIndexBuilder < Gem::Indexer::MasterIndexBuilder" "refm/api/src/rubygems/indexer/marshal_index_builder.rd")
(find-rurima "= class Gem::Indexer::LatestIndexBuilder < Gem::Indexer::AbstractIndexBuilder" "refm/api/src/rubygems/indexer/latest_index_builder.rd")
(find-rurima "== Public Instance Methods" "= class Gem::Indexer::LatestIndexBuilder < Gem::Indexer::AbstractIndexBuilder" "refm/api/src/rubygems/indexer/latest_index_builder.rd")
(find-rurima "--- add(spec)" "== Public Instance Methods" "= class Gem::Indexer::LatestIndexBuilder < Gem::Indexer::AbstractIndexBuilder" "refm/api/src/rubygems/indexer/latest_index_builder.rd")
(find-rurima "--- cleanup" "== Public Instance Methods" "= class Gem::Indexer::LatestIndexBuilder < Gem::Indexer::AbstractIndexBuilder" "refm/api/src/rubygems/indexer/latest_index_builder.rd")
(find-rurima "--- end_index" "== Public Instance Methods" "= class Gem::Indexer::LatestIndexBuilder < Gem::Indexer::AbstractIndexBuilder" "refm/api/src/rubygems/indexer/latest_index_builder.rd")
(find-rurima "--- start_index" "== Public Instance Methods" "= class Gem::Indexer::LatestIndexBuilder < Gem::Indexer::AbstractIndexBuilder" "refm/api/src/rubygems/indexer/latest_index_builder.rd")
(find-rurima "= class Gem::Indexer::MasterIndexBuilder < Gem::Indexer::AbstractIndexBuilder" "refm/api/src/rubygems/indexer/master_index_builder.rd")
(find-rurima "== Public Instance Methods" "= class Gem::Indexer::MasterIndexBuilder < Gem::Indexer::AbstractIndexBuilder" "refm/api/src/rubygems/indexer/master_index_builder.rd")
(find-rurima "--- add(spec)" "== Public Instance Methods" "= class Gem::Indexer::MasterIndexBuilder < Gem::Indexer::AbstractIndexBuilder" "refm/api/src/rubygems/indexer/master_index_builder.rd")
(find-rurima "--- cleanup" "== Public Instance Methods" "= class Gem::Indexer::MasterIndexBuilder < Gem::Indexer::AbstractIndexBuilder" "refm/api/src/rubygems/indexer/master_index_builder.rd")
(find-rurima "--- end_index" "== Public Instance Methods" "= class Gem::Indexer::MasterIndexBuilder < Gem::Indexer::AbstractIndexBuilder" "refm/api/src/rubygems/indexer/master_index_builder.rd")
(find-rurima "--- start_index" "== Public Instance Methods" "= class Gem::Indexer::MasterIndexBuilder < Gem::Indexer::AbstractIndexBuilder" "refm/api/src/rubygems/indexer/master_index_builder.rd")
(find-rurima "= class Gem::DependencyInstaller" "refm/api/src/rubygems/dependency_installer.rd")
(find-rurima "== Public Instance Methods" "= class Gem::DependencyInstaller" "refm/api/src/rubygems/dependency_installer.rd")
(find-rurima "--- find_gems_with_sources(dep) -> Array" "== Public Instance Methods" "= class Gem::DependencyInstaller" "refm/api/src/rubygems/dependency_installer.rd")
(find-rurima "--- find_spec_by_name_and_version(gem_name, version = Gem::Requirement.default) -> Array" "== Public Instance Methods" "= class Gem::DependencyInstaller" "refm/api/src/rubygems/dependency_installer.rd")
(find-rurima "--- gather_dependencies -> Array" "== Public Instance Methods" "= class Gem::DependencyInstaller" "refm/api/src/rubygems/dependency_installer.rd")
(find-rurima "--- gems_to_install -> Array" "== Public Instance Methods" "= class Gem::DependencyInstaller" "refm/api/src/rubygems/dependency_installer.rd")
(find-rurima "--- install(dep_or_name, version = Gem::Requirement.default) -> Array" "== Public Instance Methods" "= class Gem::DependencyInstaller" "refm/api/src/rubygems/dependency_installer.rd")
(find-rurima "--- installed_gems -> Array" "== Public Instance Methods" "= class Gem::DependencyInstaller" "refm/api/src/rubygems/dependency_installer.rd")
(find-rurima "== Singleton Methods" "= class Gem::DependencyInstaller" "refm/api/src/rubygems/dependency_installer.rd")
(find-rurima "--- new(options = {}) -> Gem::DependencyInstaller" "== Singleton Methods" "= class Gem::DependencyInstaller" "refm/api/src/rubygems/dependency_installer.rd")
(find-rurima "== Constants" "= class Gem::DependencyInstaller" "refm/api/src/rubygems/dependency_installer.rd")
(find-rurima "--- DEFAULT_OPTIONS -> Hash" "== Constants" "= class Gem::DependencyInstaller" "refm/api/src/rubygems/dependency_installer.rd")
(find-rurima "= class Gem::Dependency" "refm/api/src/rubygems/dependency.rd")
(find-rurima "== Public Instance Methods" "= class Gem::Dependency" "refm/api/src/rubygems/dependency.rd")
(find-rurima "--- <=>(other) -> Integer" "== Public Instance Methods" "= class Gem::Dependency" "refm/api/src/rubygems/dependency.rd")
(find-rurima "--- =~(other) -> bool" "== Public Instance Methods" "= class Gem::Dependency" "refm/api/src/rubygems/dependency.rd")
(find-rurima "--- name -> String" "== Public Instance Methods" "= class Gem::Dependency" "refm/api/src/rubygems/dependency.rd")
(find-rurima "--- name=(name)" "== Public Instance Methods" "= class Gem::Dependency" "refm/api/src/rubygems/dependency.rd")
(find-rurima "--- normalize -> nil" "== Public Instance Methods" "= class Gem::Dependency" "refm/api/src/rubygems/dependency.rd")
(find-rurima "--- requirement_list  -> [String]" "== Public Instance Methods" "= class Gem::Dependency" "refm/api/src/rubygems/dependency.rd")
(find-rurima "--- requirements_list -> [String]" "== Public Instance Methods" "= class Gem::Dependency" "refm/api/src/rubygems/dependency.rd")
(find-rurima "--- type -> Symbol" "== Public Instance Methods" "= class Gem::Dependency" "refm/api/src/rubygems/dependency.rd")
(find-rurima "--- version_requirements -> Gem::Requirement" "== Public Instance Methods" "= class Gem::Dependency" "refm/api/src/rubygems/dependency.rd")
(find-rurima "--- version_requirements=(version_requirements)" "== Public Instance Methods" "= class Gem::Dependency" "refm/api/src/rubygems/dependency.rd")
(find-rurima "== Constants" "= class Gem::Dependency" "refm/api/src/rubygems/dependency.rd")
(find-rurima "--- TYPES -> Array" "== Constants" "= class Gem::Dependency" "refm/api/src/rubygems/dependency.rd")
(find-rurima "= class Gem::FileOperations" "refm/api/src/rubygems/package.rd")
(find-rurima "== Singleton Methods" "= class Gem::FileOperations" "refm/api/src/rubygems/package.rd")
(find-rurima "--- new(logger = nil) -> Gem::FileOperations" "== Singleton Methods" "= class Gem::FileOperations" "refm/api/src/rubygems/package.rd")
(find-rurima "= module Gem::Package" "refm/api/src/rubygems/package.rd")
(find-rurima "== Singleton Methods" "= module Gem::Package" "refm/api/src/rubygems/package.rd")
(find-rurima "--- open(io, mode = 'r', signer = nil){|tar_io| ... }" "== Singleton Methods" "= module Gem::Package" "refm/api/src/rubygems/package.rd")
(find-rurima "--- pack(src, destname, signer = nil)" "== Singleton Methods" "= module Gem::Package" "refm/api/src/rubygems/package.rd")
(find-rurima "= class Gem::Package::Error < StandardError" "refm/api/src/rubygems/package.rd")
(find-rurima "= class Gem::Package::NonSeekableIO < Gem::Package::Error" "refm/api/src/rubygems/package.rd")
(find-rurima "= class Gem::Package::ClosedIO < Gem::Package::Error" "refm/api/src/rubygems/package.rd")
(find-rurima "= class Gem::Package::BadCheckSum < Gem::Package::Error" "refm/api/src/rubygems/package.rd")
(find-rurima "= class Gem::Package::TooLongFileName < Gem::Package::Error" "refm/api/src/rubygems/package.rd")
(find-rurima "= class Gem::Package::FormatError < Gem::Package::Error" "refm/api/src/rubygems/package.rd")
(find-rurima "= class Gem::GemRunner" "refm/api/src/rubygems/gem_runner.rd")
(find-rurima "== Public Instance Methods" "= class Gem::GemRunner" "refm/api/src/rubygems/gem_runner.rd")
(find-rurima "--- run(args) -> ()" "== Public Instance Methods" "= class Gem::GemRunner" "refm/api/src/rubygems/gem_runner.rd")
(find-rurima "= class Gem::Platform" "refm/api/src/rubygems/platform.rd")
(find-rurima "== Public Instance Methods" "= class Gem::Platform" "refm/api/src/rubygems/platform.rd")
(find-rurima "--- ==(other) -> bool" "== Public Instance Methods" "= class Gem::Platform" "refm/api/src/rubygems/platform.rd")
(find-rurima "--- ===(other) -> bool" "== Public Instance Methods" "= class Gem::Platform" "refm/api/src/rubygems/platform.rd")
(find-rurima "--- =~(other) -> bool" "== Public Instance Methods" "= class Gem::Platform" "refm/api/src/rubygems/platform.rd")
(find-rurima "--- cpu -> String" "== Public Instance Methods" "= class Gem::Platform" "refm/api/src/rubygems/platform.rd")
(find-rurima "--- cpu=(cpu)" "== Public Instance Methods" "= class Gem::Platform" "refm/api/src/rubygems/platform.rd")
(find-rurima "--- os -> String" "== Public Instance Methods" "= class Gem::Platform" "refm/api/src/rubygems/platform.rd")
(find-rurima "--- os=(os)" "== Public Instance Methods" "= class Gem::Platform" "refm/api/src/rubygems/platform.rd")
(find-rurima "--- to_a -> Array" "== Public Instance Methods" "= class Gem::Platform" "refm/api/src/rubygems/platform.rd")
(find-rurima "--- to_s -> String" "== Public Instance Methods" "= class Gem::Platform" "refm/api/src/rubygems/platform.rd")
(find-rurima "--- version -> String" "== Public Instance Methods" "= class Gem::Platform" "refm/api/src/rubygems/platform.rd")
(find-rurima "--- version=(version)" "== Public Instance Methods" "= class Gem::Platform" "refm/api/src/rubygems/platform.rd")
(find-rurima "== Singleton Methods" "= class Gem::Platform" "refm/api/src/rubygems/platform.rd")
(find-rurima "--- local -> Gem::Platform" "== Singleton Methods" "= class Gem::Platform" "refm/api/src/rubygems/platform.rd")
(find-rurima "--- match(platform) -> bool" "== Singleton Methods" "= class Gem::Platform" "refm/api/src/rubygems/platform.rd")
(find-rurima "--- new(arch)-> Gem::Platform" "== Singleton Methods" "= class Gem::Platform" "refm/api/src/rubygems/platform.rd")
(find-rurima "== Constants" "= class Gem::Platform" "refm/api/src/rubygems/platform.rd")
(find-rurima "--- CURRENT -> String" "== Constants" "= class Gem::Platform" "refm/api/src/rubygems/platform.rd")
(find-rurima "--- RUBY -> String" "== Constants" "= class Gem::Platform" "refm/api/src/rubygems/platform.rd")
(find-rurima "= class Gem::Ext::Builder" "refm/api/src/rubygems/ext/builder.rd")
(find-rurima "== Singleton Methods" "= class Gem::Ext::Builder" "refm/api/src/rubygems/ext/builder.rd")
(find-rurima "--- class_name -> String" "== Singleton Methods" "= class Gem::Ext::Builder" "refm/api/src/rubygems/ext/builder.rd")
(find-rurima "--- make(dest_path, results)" "== Singleton Methods" "= class Gem::Ext::Builder" "refm/api/src/rubygems/ext/builder.rd")
(find-rurima "--- redirector -> String" "== Singleton Methods" "= class Gem::Ext::Builder" "refm/api/src/rubygems/ext/builder.rd")
(find-rurima "--- run(command, results)" "== Singleton Methods" "= class Gem::Ext::Builder" "refm/api/src/rubygems/ext/builder.rd")
(find-rurima "= class Gem::Ext::ExtConfBuilder < Gem::Ext::Builder" "refm/api/src/rubygems/ext/ext_conf_builder.rd")
(find-rurima "== Singleton Methods" "= class Gem::Ext::ExtConfBuilder < Gem::Ext::Builder" "refm/api/src/rubygems/ext/ext_conf_builder.rd")
(find-rurima "--- build(extension, directory, dest_path, results) -> Array" "== Singleton Methods" "= class Gem::Ext::ExtConfBuilder < Gem::Ext::Builder" "refm/api/src/rubygems/ext/ext_conf_builder.rd")
(find-rurima "= class Gem::Ext::ConfigureBuilder < Gem::Ext::Builder" "refm/api/src/rubygems/ext/configure_builder.rd")
(find-rurima "== Singleton Methods" "= class Gem::Ext::ConfigureBuilder < Gem::Ext::Builder" "refm/api/src/rubygems/ext/configure_builder.rd")
(find-rurima "--- build(extension, directory, dest_path, results) -> Array" "== Singleton Methods" "= class Gem::Ext::ConfigureBuilder < Gem::Ext::Builder" "refm/api/src/rubygems/ext/configure_builder.rd")
(find-rurima "= class Gem::Ext::RakeBuilder < Gem::Ext::Builder" "refm/api/src/rubygems/ext/rake_builder.rd")
(find-rurima "== Singleton Methods" "= class Gem::Ext::RakeBuilder < Gem::Ext::Builder" "refm/api/src/rubygems/ext/rake_builder.rd")
(find-rurima "--- build(extension, directory, dest_path, results) -> Array" "== Singleton Methods" "= class Gem::Ext::RakeBuilder < Gem::Ext::Builder" "refm/api/src/rubygems/ext/rake_builder.rd")
(find-rurima "= class Gem::SourceInfoCacheEntry" "refm/api/src/rubygems/source_info_cache_entry.rd")
(find-rurima "== Public Instance Methods" "= class Gem::SourceInfoCacheEntry" "refm/api/src/rubygems/source_info_cache_entry.rd")
(find-rurima "--- refresh(source_uri, all) -> Gem::SourceIndex" "== Public Instance Methods" "= class Gem::SourceInfoCacheEntry" "refm/api/src/rubygems/source_info_cache_entry.rd")
(find-rurima "--- size -> Fixnum" "== Public Instance Methods" "= class Gem::SourceInfoCacheEntry" "refm/api/src/rubygems/source_info_cache_entry.rd")
(find-rurima "--- source_index -> Gem::SourceIndex" "== Public Instance Methods" "= class Gem::SourceInfoCacheEntry" "refm/api/src/rubygems/source_info_cache_entry.rd")
(find-rurima "== Singleton Methods" "= class Gem::SourceInfoCacheEntry" "refm/api/src/rubygems/source_info_cache_entry.rd")
(find-rurima "--- new(si, size) -> Gem::SourceInfoCacheEntry" "== Singleton Methods" "= class Gem::SourceInfoCacheEntry" "refm/api/src/rubygems/source_info_cache_entry.rd")
(find-rurima "= module Gem::InstallUpdateOptions" "refm/api/src/rubygems/install_update_options.rd")
(find-rurima "== Public Instance Methods" "= module Gem::InstallUpdateOptions" "refm/api/src/rubygems/install_update_options.rd")
(find-rurima "--- add_install_update_options" "== Public Instance Methods" "= module Gem::InstallUpdateOptions" "refm/api/src/rubygems/install_update_options.rd")
(find-rurima "--- install_update_defaults_str -> String" "== Public Instance Methods" "= module Gem::InstallUpdateOptions" "refm/api/src/rubygems/install_update_options.rd")
(find-rurima "= module TkTreatCItemFont" "refm/api/src/tkcanvas.rd")
(find-rurima "== Instance Methods" "= module TkTreatCItemFont" "refm/api/src/tkcanvas.rd")
(find-rurima "--- __conf_cmd(idx)" "== Instance Methods" "= module TkTreatCItemFont" "refm/api/src/tkcanvas.rd")
(find-rurima "--- __item_pathname(tagOrId)" "== Instance Methods" "= module TkTreatCItemFont" "refm/api/src/tkcanvas.rd")
(find-rurima "== Constants" "= module TkTreatCItemFont" "refm/api/src/tkcanvas.rd")
(find-rurima "--- ItemCMD" "== Constants" "= module TkTreatCItemFont" "refm/api/src/tkcanvas.rd")
(find-rurima "= class TkKernel < Object" "refm/api/src/tkutil/TkKernel")
(find-rurima "== Class Methods" "= class TkKernel < Object" "refm/api/src/tkutil/TkKernel")
(find-rurima "--- new(*args)" "== Class Methods" "= class TkKernel < Object" "refm/api/src/tkutil/TkKernel")
(find-rurima "= module TkUtil" "refm/api/src/tkutil/TkUtil")
(find-rurima "== Constants" "= module TkUtil" "refm/api/src/tkutil/TkUtil")
(find-rurima "--- None" "== Constants" "= module TkUtil" "refm/api/src/tkutil/TkUtil")
(find-rurima "--- RELEASE_DATE" "== Constants" "= module TkUtil" "refm/api/src/tkutil/TkUtil")
(find-rurima "== Class Methods" "= module TkUtil" "refm/api/src/tkutil/TkUtil")
(find-rurima "--- _conv_args(*args)" "== Class Methods" "= module TkUtil" "refm/api/src/tkutil/TkUtil")
(find-rurima "--- _get_eval_enc_str(obj)" "== Class Methods" "= module TkUtil" "refm/api/src/tkutil/TkUtil")
(find-rurima "--- _get_eval_string(*args)" "== Class Methods" "= module TkUtil" "refm/api/src/tkutil/TkUtil")
(find-rurima "--- _symbolkey2str(keys)" "== Class Methods" "= module TkUtil" "refm/api/src/tkutil/TkUtil")
(find-rurima "--- bool(value)" "== Class Methods" "= module TkUtil" "refm/api/src/tkutil/TkUtil")
(find-rurima "--- callback(*args)" "== Class Methods" "= module TkUtil" "refm/api/src/tkutil/TkUtil")
(find-rurima "--- eval_cmd(*args)" "== Class Methods" "= module TkUtil" "refm/api/src/tkutil/TkUtil")
(find-rurima "--- hash_kv(*args)" "== Class Methods" "= module TkUtil" "refm/api/src/tkutil/TkUtil")
(find-rurima "--- install_cmd(*args)" "== Class Methods" "= module TkUtil" "refm/api/src/tkutil/TkUtil")
(find-rurima "--- num_or_str(value)" "== Class Methods" "= module TkUtil" "refm/api/src/tkutil/TkUtil")
(find-rurima "--- number(value)" "== Class Methods" "= module TkUtil" "refm/api/src/tkutil/TkUtil")
(find-rurima "--- string(value)" "== Class Methods" "= module TkUtil" "refm/api/src/tkutil/TkUtil")
(find-rurima "--- uninstall_cmd(cmd_id)" "== Class Methods" "= module TkUtil" "refm/api/src/tkutil/TkUtil")
(find-rurima "== Instance Methods" "= module TkUtil" "refm/api/src/tkutil/TkUtil")
(find-rurima "--- _conv_args(*args)" "== Instance Methods" "= module TkUtil" "refm/api/src/tkutil/TkUtil")
(find-rurima "--- _fromUTF8(*args)" "== Instance Methods" "= module TkUtil" "refm/api/src/tkutil/TkUtil")
(find-rurima "--- _get_eval_enc_str(obj)" "== Instance Methods" "= module TkUtil" "refm/api/src/tkutil/TkUtil")
(find-rurima "--- _get_eval_string(*args)" "== Instance Methods" "= module TkUtil" "refm/api/src/tkutil/TkUtil")
(find-rurima "--- _symbolkey2str(keys)" "== Instance Methods" "= module TkUtil" "refm/api/src/tkutil/TkUtil")
(find-rurima "--- _toUTF8(*args)" "== Instance Methods" "= module TkUtil" "refm/api/src/tkutil/TkUtil")
(find-rurima "--- bool(value)" "== Instance Methods" "= module TkUtil" "refm/api/src/tkutil/TkUtil")
(find-rurima "--- hash_kv(*args)" "== Instance Methods" "= module TkUtil" "refm/api/src/tkutil/TkUtil")
(find-rurima "--- num_or_str(value)" "== Instance Methods" "= module TkUtil" "refm/api/src/tkutil/TkUtil")
(find-rurima "--- number(value)" "== Instance Methods" "= module TkUtil" "refm/api/src/tkutil/TkUtil")
(find-rurima "--- string(value)" "== Instance Methods" "= module TkUtil" "refm/api/src/tkutil/TkUtil")
(find-rurima "= class Tkutil::CallbackSubst::Info < Object" "refm/api/src/tkutil/TkUtil__CallbackSubst__Info")
(find-rurima "== Class Methods" "= class Tkutil::CallbackSubst::Info < Object" "refm/api/src/tkutil/TkUtil__CallbackSubst__Info")
(find-rurima "--- inspect" "== Class Methods" "= class Tkutil::CallbackSubst::Info < Object" "refm/api/src/tkutil/TkUtil__CallbackSubst__Info")
(find-rurima "= class TkUtil::CallbackSubst < Object" "refm/api/src/tkutil/TkUtil__CallbackSubst")
(find-rurima "== Constants" "= class TkUtil::CallbackSubst < Object" "refm/api/src/tkutil/TkUtil__CallbackSubst")
(find-rurima "--- SUBST_INFO" "== Constants" "= class TkUtil::CallbackSubst < Object" "refm/api/src/tkutil/TkUtil__CallbackSubst")
(find-rurima "== Class Methods" "= class TkUtil::CallbackSubst < Object" "refm/api/src/tkutil/TkUtil__CallbackSubst")
(find-rurima "--- _define_attribute_aliases(tbl)" "== Class Methods" "= class TkUtil::CallbackSubst < Object" "refm/api/src/tkutil/TkUtil__CallbackSubst")
(find-rurima "--- _get_all_subst_keys" "== Class Methods" "= class TkUtil::CallbackSubst < Object" "refm/api/src/tkutil/TkUtil__CallbackSubst")
(find-rurima "--- _get_extra_args_tbl" "== Class Methods" "= class TkUtil::CallbackSubst < Object" "refm/api/src/tkutil/TkUtil__CallbackSubst")
(find-rurima "--- _get_subst_key(str)" "== Class Methods" "= class TkUtil::CallbackSubst < Object" "refm/api/src/tkutil/TkUtil__CallbackSubst")
(find-rurima "--- _setup_subst_table(key_inf, proc_inf)" "== Class Methods" "= class TkUtil::CallbackSubst < Object" "refm/api/src/tkutil/TkUtil__CallbackSubst")
(find-rurima "--- inspect" "== Class Methods" "= class TkUtil::CallbackSubst < Object" "refm/api/src/tkutil/TkUtil__CallbackSubst")
(find-rurima "--- ret_val(val)" "== Class Methods" "= class TkUtil::CallbackSubst < Object" "refm/api/src/tkutil/TkUtil__CallbackSubst")
(find-rurima "--- scan_args(arg_key, val_key)" "== Class Methods" "= class TkUtil::CallbackSubst < Object" "refm/api/src/tkutil/TkUtil__CallbackSubst")
(find-rurima "--- subst_arg(*args)" "== Class Methods" "= class TkUtil::CallbackSubst < Object" "refm/api/src/tkutil/TkUtil__CallbackSubst")
(find-rurima "= class TkCallbackEntry < TkKernel" "refm/api/src/tkutil/TkCallbackEntry")
(find-rurima "== Class Methods" "= class TkCallbackEntry < TkKernel" "refm/api/src/tkutil/TkCallbackEntry")
(find-rurima "--- inspect" "== Class Methods" "= class TkCallbackEntry < TkKernel" "refm/api/src/tkutil/TkCallbackEntry")
(find-rurima "= class TkObject < TkKernel" "refm/api/src/tkutil/TkObject")
(find-rurima "== Instance Methods" "= class TkObject < TkKernel" "refm/api/src/tkutil/TkObject")
(find-rurima "--- path" "== Instance Methods" "= class TkObject < TkKernel" "refm/api/src/tkutil/TkObject")
(find-rurima "= module Delegator::MethodDelegation" "refm/api/src/delegate/Delegator__MethodDelegation")
(find-rurima "== Class Methods" "= module Delegator::MethodDelegation" "refm/api/src/delegate/Delegator__MethodDelegation")
(find-rurima "--- new(obj) -> object" "== Class Methods" "= module Delegator::MethodDelegation" "refm/api/src/delegate/Delegator__MethodDelegation")
(find-rurima "== Instance Methods" "= module Delegator::MethodDelegation" "refm/api/src/delegate/Delegator__MethodDelegation")
(find-rurima "--- ==(obj)" "== Instance Methods" "= module Delegator::MethodDelegation" "refm/api/src/delegate/Delegator__MethodDelegation")
(find-rurima "--- __getobj__ -> object" "== Instance Methods" "= module Delegator::MethodDelegation" "refm/api/src/delegate/Delegator__MethodDelegation")
(find-rurima "--- __setobj__(obj) -> object" "== Instance Methods" "= module Delegator::MethodDelegation" "refm/api/src/delegate/Delegator__MethodDelegation")
(find-rurima "--- clone -> object" "== Instance Methods" "= module Delegator::MethodDelegation" "refm/api/src/delegate/Delegator__MethodDelegation")
(find-rurima "--- dup -> object" "== Instance Methods" "= module Delegator::MethodDelegation" "refm/api/src/delegate/Delegator__MethodDelegation")
(find-rurima "--- equal?(obj)" "== Instance Methods" "= module Delegator::MethodDelegation" "refm/api/src/delegate/Delegator__MethodDelegation")
(find-rurima "--- marshal_dump -> object" "== Instance Methods" "= module Delegator::MethodDelegation" "refm/api/src/delegate/Delegator__MethodDelegation")
(find-rurima "--- marshal_load(obj) -> object" "== Instance Methods" "= module Delegator::MethodDelegation" "refm/api/src/delegate/Delegator__MethodDelegation")
(find-rurima "--- method_missing(m, *args) -> object" "== Instance Methods" "= module Delegator::MethodDelegation" "refm/api/src/delegate/Delegator__MethodDelegation")
(find-rurima "--- respond_to?(m) -> bool" "== Instance Methods" "= module Delegator::MethodDelegation" "refm/api/src/delegate/Delegator__MethodDelegation")
(find-rurima "= class SimpleDelegator < Delegator" "refm/api/src/delegate/SimpleDelegator")
(find-rurima "== Class Methods" "= class SimpleDelegator < Delegator" "refm/api/src/delegate/SimpleDelegator")
(find-rurima "--- new(obj) -> object" "== Class Methods" "= class SimpleDelegator < Delegator" "refm/api/src/delegate/SimpleDelegator")
(find-rurima "== Instance Methods" "= class SimpleDelegator < Delegator" "refm/api/src/delegate/SimpleDelegator")
(find-rurima "--- __getobj__ -> object" "== Instance Methods" "= class SimpleDelegator < Delegator" "refm/api/src/delegate/SimpleDelegator")
(find-rurima "--- __setobj__(obj) -> object" "== Instance Methods" "= class SimpleDelegator < Delegator" "refm/api/src/delegate/SimpleDelegator")
(find-rurima "--- clone -> object" "== Instance Methods" "= class SimpleDelegator < Delegator" "refm/api/src/delegate/SimpleDelegator")
(find-rurima "--- dup(obj) -> object" "== Instance Methods" "= class SimpleDelegator < Delegator" "refm/api/src/delegate/SimpleDelegator")
(find-rurima "= class Digest::RMD160 < Digest::Base" "refm/api/src/digest/rmd160.rd")
(find-rurima "= reopen Digest" "refm/api/src/digest/bubblebabble.rd")
(find-rurima "== Module Functions" "= reopen Digest" "refm/api/src/digest/bubblebabble.rd")
(find-rurima "--- bubblebabble(string) -> String" "== Module Functions" "= reopen Digest" "refm/api/src/digest/bubblebabble.rd")
(find-rurima "= class Digest::SHA1 < Digest::Base" "refm/api/src/digest/sha1.rd")
(find-rurima "= class Digest::MD5 < Digest::Base" "refm/api/src/digest/md5.rd")
(find-rurima "= class Digest::SHA256 < Digest::Base" "refm/api/src/digest/sha2.rd")
(find-rurima "= class Digest::SHA384 < Digest::Base" "refm/api/src/digest/sha2.rd")
(find-rurima "= class Digest::SHA512 < Digest::Base" "refm/api/src/digest/sha2.rd")
(find-rurima "= class Digest::SHA2 < Digest::Class" "refm/api/src/digest/sha2.rd")
(find-rurima "== Class Methods" "= class Digest::SHA2 < Digest::Class" "refm/api/src/digest/sha2.rd")
(find-rurima "--- new(bitlen = 256) -> Digest::SHA2" "== Class Methods" "= class Digest::SHA2 < Digest::Class" "refm/api/src/digest/sha2.rd")
(find-rurima "== Instance Methods" "= class Digest::SHA2 < Digest::Class" "refm/api/src/digest/sha2.rd")
(find-rurima "--- block_length -> Integer" "== Instance Methods" "= class Digest::SHA2 < Digest::Class" "refm/api/src/digest/sha2.rd")
(find-rurima "--- digest_length -> Integer" "== Instance Methods" "= class Digest::SHA2 < Digest::Class" "refm/api/src/digest/sha2.rd")
(find-rurima "=== 例" "refm/api/src/digest/hmac.rd")
(find-rurima "= class Digest::HMAC < Digest::Class" "refm/api/src/digest/hmac.rd")
(find-rurima "== Class Methods" "= class Digest::HMAC < Digest::Class" "refm/api/src/digest/hmac.rd")
(find-rurima "--- new(key, digester) -> Digest::HMAC" "== Class Methods" "= class Digest::HMAC < Digest::Class" "refm/api/src/digest/hmac.rd")
(find-rurima "== Instance Methods" "= class Digest::HMAC < Digest::Class" "refm/api/src/digest/hmac.rd")
(find-rurima "--- block_length -> Integer" "== Instance Methods" "= class Digest::HMAC < Digest::Class" "refm/api/src/digest/hmac.rd")
(find-rurima "--- digest_length -> Integer" "== Instance Methods" "= class Digest::HMAC < Digest::Class" "refm/api/src/digest/hmac.rd")
(find-rurima "= module SecureRandom" "refm/api/src/securerandom.rd")
(find-rurima "== Singleton Methods" "= module SecureRandom" "refm/api/src/securerandom.rd")
(find-rurima "--- base64(n = nil)    -> String" "== Singleton Methods" "= module SecureRandom" "refm/api/src/securerandom.rd")
(find-rurima "--- urlsafe_base64(n = nil, padding = false)  -> String" "== Singleton Methods" "= module SecureRandom" "refm/api/src/securerandom.rd")
(find-rurima "--- hex(n = nil)    -> String" "== Singleton Methods" "= module SecureRandom" "refm/api/src/securerandom.rd")
(find-rurima "--- random_bytes(n = nil)    -> String" "== Singleton Methods" "= module SecureRandom" "refm/api/src/securerandom.rd")
(find-rurima "--- random_number(n = 0)     -> Integer | Float" "== Singleton Methods" "= module SecureRandom" "refm/api/src/securerandom.rd")
(find-rurima "--- uuid   -> String" "== Singleton Methods" "= module SecureRandom" "refm/api/src/securerandom.rd")
(find-rurima "= class Racc::Parser" "refm/api/src/racc/parser.rd")
(find-rurima "== Class Methods" "= class Racc::Parser" "refm/api/src/racc/parser.rd")
(find-rurima "--- racc_runtime_type" "== Class Methods" "= class Racc::Parser" "refm/api/src/racc/parser.rd")
(find-rurima "== Private Instance Methods" "= class Racc::Parser" "refm/api/src/racc/parser.rd")
(find-rurima "--- next_token" "== Private Instance Methods" "= class Racc::Parser" "refm/api/src/racc/parser.rd")
(find-rurima "--- do_parse" "== Private Instance Methods" "= class Racc::Parser" "refm/api/src/racc/parser.rd")
(find-rurima "--- yyparse(recv, mid)" "== Private Instance Methods" "= class Racc::Parser" "refm/api/src/racc/parser.rd")
(find-rurima "--- yyerror" "== Private Instance Methods" "= class Racc::Parser" "refm/api/src/racc/parser.rd")
(find-rurima "--- yyerrok" "== Private Instance Methods" "= class Racc::Parser" "refm/api/src/racc/parser.rd")
(find-rurima "--- yyaccept" "== Private Instance Methods" "= class Racc::Parser" "refm/api/src/racc/parser.rd")
(find-rurima "--- on_error(t, val, vstack)" "== Private Instance Methods" "= class Racc::Parser" "refm/api/src/racc/parser.rd")
(find-rurima "--- token_to_str(t)" "== Private Instance Methods" "= class Racc::Parser" "refm/api/src/racc/parser.rd")
(find-rurima "= class Racc::ParseError < StandardError" "refm/api/src/racc/parser.rd")
(find-rurima "= reopen IO" "refm/api/src/readbytes.rd")
(find-rurima "== Instance Methods" "= reopen IO" "refm/api/src/readbytes.rd")
(find-rurima "--- readbytes(size) -> String" "== Instance Methods" "= reopen IO" "refm/api/src/readbytes.rd")
(find-rurima "= class TruncatedDataError < IOError" "refm/api/src/readbytes.rd")
(find-rurima "== Instance Methods" "= class TruncatedDataError < IOError" "refm/api/src/readbytes.rd")
(find-rurima "--- data -> String" "== Instance Methods" "= class TruncatedDataError < IOError" "refm/api/src/readbytes.rd")
(find-rurima "= reopen Kernel" "refm/api/src/timeout.rd")
(find-rurima "== Private Instance Methods" "= reopen Kernel" "refm/api/src/timeout.rd")
(find-rurima "--- timeout(sec) {|i| .... }" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/timeout.rd")
(find-rurima "--- timeout(sec, exception_class = nil) {|i| .... }" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/timeout.rd")
(find-rurima "=== 注意" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/timeout.rd")
(find-rurima "= module Timeout" "refm/api/src/timeout.rd")
(find-rurima "== Module Functions" "= module Timeout" "refm/api/src/timeout.rd")
(find-rurima "--- timeout(sec, exception_class = nil) {|i| ... }" "== Module Functions" "= module Timeout" "refm/api/src/timeout.rd")
(find-rurima "=== 注意" "== Module Functions" "= module Timeout" "refm/api/src/timeout.rd")
(find-rurima "= class Timeout::Error < RuntimeError" "refm/api/src/timeout.rd")
(find-rurima "= class Timeout::Error < Interrupt" "refm/api/src/timeout.rd")
(find-rurima "= module Shellwords" "refm/api/src/shellwords.rd")
(find-rurima "== Module Functions" "= module Shellwords" "refm/api/src/shellwords.rd")
(find-rurima "--- shellsplit(line) -> [String]" "== Module Functions" "= module Shellwords" "refm/api/src/shellwords.rd")
(find-rurima "--- shellwords(line) -> [String]" "== Module Functions" "= module Shellwords" "refm/api/src/shellwords.rd")
(find-rurima "--- shellescape(str) -> String" "== Module Functions" "= module Shellwords" "refm/api/src/shellwords.rd")
(find-rurima "--- shelljoin(array) -> String" "== Module Functions" "= module Shellwords" "refm/api/src/shellwords.rd")
(find-rurima "== Singleton Methods" "= module Shellwords" "refm/api/src/shellwords.rd")
(find-rurima "--- split(line) -> [String]" "== Singleton Methods" "= module Shellwords" "refm/api/src/shellwords.rd")
(find-rurima "--- escape(str) -> String" "== Singleton Methods" "= module Shellwords" "refm/api/src/shellwords.rd")
(find-rurima "--- join(array) -> String" "== Singleton Methods" "= module Shellwords" "refm/api/src/shellwords.rd")
(find-rurima "= reopen String" "refm/api/src/shellwords.rd")
(find-rurima "== Instance Methods" "= reopen String" "refm/api/src/shellwords.rd")
(find-rurima "--- shellsplit -> [String]" "== Instance Methods" "= reopen String" "refm/api/src/shellwords.rd")
(find-rurima "--- shellescape -> String" "== Instance Methods" "= reopen String" "refm/api/src/shellwords.rd")
(find-rurima "= reopen Array" "refm/api/src/shellwords.rd")
(find-rurima "== Instance Methods" "= reopen Array" "refm/api/src/shellwords.rd")
(find-rurima "--- shelljoin -> String" "== Instance Methods" "= reopen Array" "refm/api/src/shellwords.rd")
(find-rurima "= module ParseDate" "refm/api/src/parsedate.rd")
(find-rurima "== Module Functions" "= module ParseDate" "refm/api/src/parsedate.rd")
(find-rurima "--- parsedate(str, complete = false) -> Array | nil" "== Module Functions" "= module ParseDate" "refm/api/src/parsedate.rd")
(find-rurima "= module Ping" "refm/api/src/ping.rd")
(find-rurima "== Module Functions" "= module Ping" "refm/api/src/ping.rd")
(find-rurima "--- pingecho(host, timeout = 5, service = 'echo') -> bool" "== Module Functions" "= module Ping" "refm/api/src/ping.rd")
(find-rurima "=== 注意" "== Module Functions" "= module Ping" "refm/api/src/ping.rd")
(find-rurima "= module TclTk" "refm/api/src/tcltk/TclTk")
(find-rurima "== Class Methods" "= module TclTk" "refm/api/src/tcltk/TclTk")
(find-rurima "--- _addcallback(ca)" "== Class Methods" "= module TclTk" "refm/api/src/tcltk/TclTk")
(find-rurima "--- _callcallback(key, arg)" "== Class Methods" "= module TclTk" "refm/api/src/tcltk/TclTk")
(find-rurima "--- _newname(prefix)" "== Class Methods" "= module TclTk" "refm/api/src/tcltk/TclTk")
(find-rurima "--- dcb(ca, wid, w)" "== Class Methods" "= module TclTk" "refm/api/src/tcltk/TclTk")
(find-rurima "--- deletecallbackkey(ca)" "== Class Methods" "= module TclTk" "refm/api/src/tcltk/TclTk")
(find-rurima "--- mainloop" "== Class Methods" "= module TclTk" "refm/api/src/tcltk/TclTk")
(find-rurima "= class TclTkCommand < TclTkObject" "refm/api/src/tcltk/TclTkCommand")
(find-rurima "== Instance Methods" "= class TclTkCommand < TclTkObject" "refm/api/src/tcltk/TclTkCommand")
(find-rurima "--- e(*args)" "== Instance Methods" "= class TclTkCommand < TclTkObject" "refm/api/src/tcltk/TclTkCommand")
(find-rurima "= class TclTkLibCommand < TclTkCommand" "refm/api/src/tcltk/TclTkLibCommand")
(find-rurima "== Class Methods" "= class TclTkLibCommand < TclTkCommand" "refm/api/src/tcltk/TclTkLibCommand")
(find-rurima "--- new(ip, name)" "== Class Methods" "= class TclTkLibCommand < TclTkCommand" "refm/api/src/tcltk/TclTkLibCommand")
(find-rurima "= class TclTkInterpreter < Object" "refm/api/src/tcltk/TclTkInterpreter")
(find-rurima "== Class Methods" "= class TclTkInterpreter < Object" "refm/api/src/tcltk/TclTkInterpreter")
(find-rurima "--- new" "== Class Methods" "= class TclTkInterpreter < Object" "refm/api/src/tcltk/TclTkInterpreter")
(find-rurima "== Instance Methods" "= class TclTkInterpreter < Object" "refm/api/src/tcltk/TclTkInterpreter")
(find-rurima "--- _tcltkip" "== Instance Methods" "= class TclTkInterpreter < Object" "refm/api/src/tcltk/TclTkInterpreter")
(find-rurima "--- commands" "== Instance Methods" "= class TclTkInterpreter < Object" "refm/api/src/tcltk/TclTkInterpreter")
(find-rurima "--- method_missing(id, *args)" "== Instance Methods" "= class TclTkInterpreter < Object" "refm/api/src/tcltk/TclTkInterpreter")
(find-rurima "--- rootwidget" "== Instance Methods" "= class TclTkInterpreter < Object" "refm/api/src/tcltk/TclTkInterpreter")
(find-rurima "= class TclTkObject < Object" "refm/api/src/tcltk/TclTkObject")
(find-rurima "== Class Methods" "= class TclTkObject < Object" "refm/api/src/tcltk/TclTkObject")
(find-rurima "--- new(ip, exp)" "== Class Methods" "= class TclTkObject < Object" "refm/api/src/tcltk/TclTkObject")
(find-rurima "== Instance Methods" "= class TclTkObject < Object" "refm/api/src/tcltk/TclTkObject")
(find-rurima "--- to_s" "== Instance Methods" "= class TclTkObject < Object" "refm/api/src/tcltk/TclTkObject")
(find-rurima "= class TclTkCallback < TclTkObject" "refm/api/src/tcltk/TclTkCallback")
(find-rurima "== Class Methods" "= class TclTkCallback < TclTkObject" "refm/api/src/tcltk/TclTkCallback")
(find-rurima "--- new(interp, pr, arg = nil)" "== Class Methods" "= class TclTkCallback < TclTkObject" "refm/api/src/tcltk/TclTkCallback")
(find-rurima "== Instance Methods" "= class TclTkCallback < TclTkObject" "refm/api/src/tcltk/TclTkCallback")
(find-rurima "--- _call(arg)" "== Instance Methods" "= class TclTkCallback < TclTkObject" "refm/api/src/tcltk/TclTkCallback")
(find-rurima "--- to_eval" "== Instance Methods" "= class TclTkCallback < TclTkObject" "refm/api/src/tcltk/TclTkCallback")
(find-rurima "= class TclTkWidget < TclTkCommand" "refm/api/src/tcltk/TclTkWidget")
(find-rurima "== Class Methods" "= class TclTkWidget < TclTkCommand" "refm/api/src/tcltk/TclTkWidget")
(find-rurima "--- new(*args)" "== Class Methods" "= class TclTkWidget < TclTkCommand" "refm/api/src/tcltk/TclTkWidget")
(find-rurima "= class TclTkVariable < TclTkObject" "refm/api/src/tcltk/TclTkVariable")
(find-rurima "== Class Methods" "= class TclTkVariable < TclTkObject" "refm/api/src/tcltk/TclTkVariable")
(find-rurima "--- new(interp, dat)" "== Class Methods" "= class TclTkVariable < TclTkObject" "refm/api/src/tcltk/TclTkVariable")
(find-rurima "== Instance Methods" "= class TclTkVariable < TclTkObject" "refm/api/src/tcltk/TclTkVariable")
(find-rurima "--- get" "== Instance Methods" "= class TclTkVariable < TclTkObject" "refm/api/src/tcltk/TclTkVariable")
(find-rurima "--- set(data)" "== Instance Methods" "= class TclTkVariable < TclTkObject" "refm/api/src/tcltk/TclTkVariable")
(find-rurima "= class TclTkImage < TclTkCommand" "refm/api/src/tcltk/TclTkImage")
(find-rurima "== Class Methods" "= class TclTkImage < TclTkCommand" "refm/api/src/tcltk/TclTkImage")
(find-rurima "--- new(interp, t, *args)" "== Class Methods" "= class TclTkImage < TclTkCommand" "refm/api/src/tcltk/TclTkImage")
(find-rurima "= class DRb::DRbObservable < Object" "refm/api/src/drb/observer.rd")
(find-rurima "= class DRb::DRbObject < Object" "refm/api/src/drb/DRbObject")
(find-rurima "== Class Methods" "= class DRb::DRbObject < Object" "refm/api/src/drb/DRbObject")
(find-rurima "--- _load(s)" "== Class Methods" "= class DRb::DRbObject < Object" "refm/api/src/drb/DRbObject")
(find-rurima "--- new(obj, uri=nil)" "== Class Methods" "= class DRb::DRbObject < Object" "refm/api/src/drb/DRbObject")
(find-rurima "--- new_with_uri(uri)" "== Class Methods" "= class DRb::DRbObject < Object" "refm/api/src/drb/DRbObject")
(find-rurima "== Instance Methods" "= class DRb::DRbObject < Object" "refm/api/src/drb/DRbObject")
(find-rurima "--- method_missing(msg_id, *a, &b)" "== Instance Methods" "= class DRb::DRbObject < Object" "refm/api/src/drb/DRbObject")
(find-rurima "--- ==(other)" "== Instance Methods" "= class DRb::DRbObject < Object" "refm/api/src/drb/DRbObject")
(find-rurima "--- eql?(other)" "== Instance Methods" "= class DRb::DRbObject < Object" "refm/api/src/drb/DRbObject")
(find-rurima "--- __drburi " "== Instance Methods" "= class DRb::DRbObject < Object" "refm/api/src/drb/DRbObject")
(find-rurima "--- __drbref" "== Instance Methods" "= class DRb::DRbObject < Object" "refm/api/src/drb/DRbObject")
(find-rurima "= class DRb::GW < Object" "refm/api/src/drb/gw.rd")
(find-rurima "== Class Methods" "= class DRb::GW < Object" "refm/api/src/drb/gw.rd")
(find-rurima "--- new" "== Class Methods" "= class DRb::GW < Object" "refm/api/src/drb/gw.rd")
(find-rurima "== Instance Methods" "= class DRb::GW < Object" "refm/api/src/drb/gw.rd")
(find-rurima "--- [](key)" "== Instance Methods" "= class DRb::GW < Object" "refm/api/src/drb/gw.rd")
(find-rurima "--- []=(key, v)" "== Instance Methods" "= class DRb::GW < Object" "refm/api/src/drb/gw.rd")
(find-rurima "= module DRb::DRbProtocol" "refm/api/src/drb/DRbProtocol")
(find-rurima "== Module Functions" "= module DRb::DRbProtocol" "refm/api/src/drb/DRbProtocol")
(find-rurima "--- add_protocol(prot)" "== Module Functions" "= module DRb::DRbProtocol" "refm/api/src/drb/DRbProtocol")
(find-rurima "==== open_server" "== Module Functions" "= module DRb::DRbProtocol" "refm/api/src/drb/DRbProtocol")
(find-rurima "==== open" "== Module Functions" "= module DRb::DRbProtocol" "refm/api/src/drb/DRbProtocol")
(find-rurima "==== open_server().accept()" "== Module Functions" "= module DRb::DRbProtocol" "refm/api/src/drb/DRbProtocol")
(find-rurima "= class DRb::DRbConnError < DRb::DRbError" "refm/api/src/drb/DRbProtocol")
(find-rurima "= class DRb::DRbBadScheme < DRb::DRbError " "refm/api/src/drb/DRbProtocol")
(find-rurima "= class DRb::DRbBadURI < DRb::DRbError " "refm/api/src/drb/DRbProtocol")
(find-rurima "= class DRb::DRbIdConv < Object" "refm/api/src/drb/DRbIdConv")
(find-rurima "== Instance Methods" "= class DRb::DRbIdConv < Object" "refm/api/src/drb/DRbIdConv")
(find-rurima "--- to_id(obj)" "== Instance Methods" "= class DRb::DRbIdConv < Object" "refm/api/src/drb/DRbIdConv")
(find-rurima "--- to_obj(ref)" "== Instance Methods" "= class DRb::DRbIdConv < Object" "refm/api/src/drb/DRbIdConv")
(find-rurima "= class DRb::ExtServManager < Object" "refm/api/src/drb/extservm.rd")
(find-rurima "== Class Methods" "= class DRb::ExtServManager < Object" "refm/api/src/drb/extservm.rd")
(find-rurima "--- command" "== Class Methods" "= class DRb::ExtServManager < Object" "refm/api/src/drb/extservm.rd")
(find-rurima "--- command=(cmd)" "== Class Methods" "= class DRb::ExtServManager < Object" "refm/api/src/drb/extservm.rd")
(find-rurima "--- new" "== Class Methods" "= class DRb::ExtServManager < Object" "refm/api/src/drb/extservm.rd")
(find-rurima "== Instance Methods" "= class DRb::ExtServManager < Object" "refm/api/src/drb/extservm.rd")
(find-rurima "--- regist(name, ro)" "== Instance Methods" "= class DRb::ExtServManager < Object" "refm/api/src/drb/extservm.rd")
(find-rurima "--- service(name)" "== Instance Methods" "= class DRb::ExtServManager < Object" "refm/api/src/drb/extservm.rd")
(find-rurima "--- unregist(name)" "== Instance Methods" "= class DRb::ExtServManager < Object" "refm/api/src/drb/extservm.rd")
(find-rurima "= module DRb::DRbUndumped" "refm/api/src/drb/DRbUndumped")
(find-rurima "= class DRb::DRbServer < Object" "refm/api/src/drb/DRbServer")
(find-rurima "== Class Methods" "= class DRb::DRbServer < Object" "refm/api/src/drb/DRbServer")
(find-rurima "--- default_acl(acl)" "== Class Methods" "= class DRb::DRbServer < Object" "refm/api/src/drb/DRbServer")
(find-rurima "--- default_argc_limit(argc)" "== Class Methods" "= class DRb::DRbServer < Object" "refm/api/src/drb/DRbServer")
(find-rurima "--- default_id_conv(idconv)" "== Class Methods" "= class DRb::DRbServer < Object" "refm/api/src/drb/DRbServer")
(find-rurima "--- default_load_limit(sz)" "== Class Methods" "= class DRb::DRbServer < Object" "refm/api/src/drb/DRbServer")
(find-rurima "--- default_safe_level(level)   " "== Class Methods" "= class DRb::DRbServer < Object" "refm/api/src/drb/DRbServer")
(find-rurima "--- new(uri=nil, front=nil, config_or_acl=nil)" "== Class Methods" "= class DRb::DRbServer < Object" "refm/api/src/drb/DRbServer")
(find-rurima "--- verbose" "== Class Methods" "= class DRb::DRbServer < Object" "refm/api/src/drb/DRbServer")
(find-rurima "--- verbose= " "== Class Methods" "= class DRb::DRbServer < Object" "refm/api/src/drb/DRbServer")
(find-rurima "== Instance Methods" "= class DRb::DRbServer < Object" "refm/api/src/drb/DRbServer")
(find-rurima "--- alive?" "== Instance Methods" "= class DRb::DRbServer < Object" "refm/api/src/drb/DRbServer")
(find-rurima "--- check_insecure_method(obj, msg_id)" "== Instance Methods" "= class DRb::DRbServer < Object" "refm/api/src/drb/DRbServer")
(find-rurima "--- stop_service()" "== Instance Methods" "= class DRb::DRbServer < Object" "refm/api/src/drb/DRbServer")
(find-rurima "--- to_id(obj)" "== Instance Methods" "= class DRb::DRbServer < Object" "refm/api/src/drb/DRbServer")
(find-rurima "--- to_obj(ref)" "== Instance Methods" "= class DRb::DRbServer < Object" "refm/api/src/drb/DRbServer")
(find-rurima "--- verbose" "== Instance Methods" "= class DRb::DRbServer < Object" "refm/api/src/drb/DRbServer")
(find-rurima "--- verbose=" "== Instance Methods" "= class DRb::DRbServer < Object" "refm/api/src/drb/DRbServer")
(find-rurima "--- config " "== Instance Methods" "= class DRb::DRbServer < Object" "refm/api/src/drb/DRbServer")
(find-rurima "--- front" "== Instance Methods" "= class DRb::DRbServer < Object" "refm/api/src/drb/DRbServer")
(find-rurima "--- safe_level" "== Instance Methods" "= class DRb::DRbServer < Object" "refm/api/src/drb/DRbServer")
(find-rurima "--- thread" "== Instance Methods" "= class DRb::DRbServer < Object" "refm/api/src/drb/DRbServer")
(find-rurima "--- uri" "== Instance Methods" "= class DRb::DRbServer < Object" "refm/api/src/drb/DRbServer")
(find-rurima "== Constants" "= class DRb::DRbServer < Object" "refm/api/src/drb/DRbServer")
(find-rurima "--- INSECURE_METHOD" "== Constants" "= class DRb::DRbServer < Object" "refm/api/src/drb/DRbServer")
(find-rurima "= class ACL < Object" "refm/api/src/drb/acl.rd")
(find-rurima "== Class Methods" "= class ACL < Object" "refm/api/src/drb/acl.rd")
(find-rurima "--- new(list=nil, order = DENY_ALLOW)" "== Class Methods" "= class ACL < Object" "refm/api/src/drb/acl.rd")
(find-rurima "== Instance Methods" "= class ACL < Object" "refm/api/src/drb/acl.rd")
(find-rurima "--- allow_addr?(addr)" "== Instance Methods" "= class ACL < Object" "refm/api/src/drb/acl.rd")
(find-rurima "--- allow_socket?(soc)" "== Instance Methods" "= class ACL < Object" "refm/api/src/drb/acl.rd")
(find-rurima "--- install_list(list)" "== Instance Methods" "= class ACL < Object" "refm/api/src/drb/acl.rd")
(find-rurima "= class DRb::DRbUnknown < Object" "refm/api/src/drb/DRbUnknown")
(find-rurima "== Class Methods" "= class DRb::DRbUnknown < Object" "refm/api/src/drb/DRbUnknown")
(find-rurima "--- new(err, buf)" "== Class Methods" "= class DRb::DRbUnknown < Object" "refm/api/src/drb/DRbUnknown")
(find-rurima "== Instance Methods" "= class DRb::DRbUnknown < Object" "refm/api/src/drb/DRbUnknown")
(find-rurima "--- exception()" "== Instance Methods" "= class DRb::DRbUnknown < Object" "refm/api/src/drb/DRbUnknown")
(find-rurima "--- reload()" "== Instance Methods" "= class DRb::DRbUnknown < Object" "refm/api/src/drb/DRbUnknown")
(find-rurima "= class DRb::DRbUnknownError < DRb::DRbError" "refm/api/src/drb/DRbUnknown")
(find-rurima "= class DRb::ExtServ < Object" "refm/api/src/drb/extserv.rd")
(find-rurima "== Class Methods" "= class DRb::ExtServ < Object" "refm/api/src/drb/extserv.rd")
(find-rurima "--- new(there, name, server=nil)" "== Class Methods" "= class DRb::ExtServ < Object" "refm/api/src/drb/extserv.rd")
(find-rurima "== Instance Methods" "= class DRb::ExtServ < Object" "refm/api/src/drb/extserv.rd")
(find-rurima "--- front" "== Instance Methods" "= class DRb::ExtServ < Object" "refm/api/src/drb/extserv.rd")
(find-rurima "--- stop_service" "== Instance Methods" "= class DRb::ExtServ < Object" "refm/api/src/drb/extserv.rd")
(find-rurima "--- alive?" "== Instance Methods" "= class DRb::ExtServ < Object" "refm/api/src/drb/extserv.rd")
(find-rurima "--- server" "== Instance Methods" "= class DRb::ExtServ < Object" "refm/api/src/drb/extserv.rd")
(find-rurima "= class DRb::TimerIdConv < DRb::DRbIdConv" "refm/api/src/drb/timeridconv.rd")
(find-rurima "== Class Methods" "= class DRb::TimerIdConv < DRb::DRbIdConv" "refm/api/src/drb/timeridconv.rd")
(find-rurima "--- new(timeout=600)" "== Class Methods" "= class DRb::TimerIdConv < DRb::DRbIdConv" "refm/api/src/drb/timeridconv.rd")
(find-rurima "== Instance Methods" "= class DRb::TimerIdConv < DRb::DRbIdConv" "refm/api/src/drb/timeridconv.rd")
(find-rurima "--- to_id(obj)" "== Instance Methods" "= class DRb::TimerIdConv < DRb::DRbIdConv" "refm/api/src/drb/timeridconv.rd")
(find-rurima "--- to_obj(ref)" "== Instance Methods" "= class DRb::TimerIdConv < DRb::DRbIdConv" "refm/api/src/drb/timeridconv.rd")
(find-rurima "= class WIN32OLE_METHOD < Object" "refm/api/src/win32ole/WIN32OLE_METHOD")
(find-rurima "=== サンプルコード" "= class WIN32OLE_METHOD < Object" "refm/api/src/win32ole/WIN32OLE_METHOD")
(find-rurima "== Class Methods" "= class WIN32OLE_METHOD < Object" "refm/api/src/win32ole/WIN32OLE_METHOD")
(find-rurima "--- new(ole_type,  method) -> WIN32OLE_METHOD" "== Class Methods" "= class WIN32OLE_METHOD < Object" "refm/api/src/win32ole/WIN32OLE_METHOD")
(find-rurima "== Instance Methods" "= class WIN32OLE_METHOD < Object" "refm/api/src/win32ole/WIN32OLE_METHOD")
(find-rurima "--- dispid -> Integer" "== Instance Methods" "= class WIN32OLE_METHOD < Object" "refm/api/src/win32ole/WIN32OLE_METHOD")
(find-rurima "--- event? -> bool" "== Instance Methods" "= class WIN32OLE_METHOD < Object" "refm/api/src/win32ole/WIN32OLE_METHOD")
(find-rurima "--- event_interface -> String | nil" "== Instance Methods" "= class WIN32OLE_METHOD < Object" "refm/api/src/win32ole/WIN32OLE_METHOD")
(find-rurima "--- helpcontext -> Integer | nil" "== Instance Methods" "= class WIN32OLE_METHOD < Object" "refm/api/src/win32ole/WIN32OLE_METHOD")
(find-rurima "--- helpfile -> String | nil" "== Instance Methods" "= class WIN32OLE_METHOD < Object" "refm/api/src/win32ole/WIN32OLE_METHOD")
(find-rurima "--- helpstring -> String | nil" "== Instance Methods" "= class WIN32OLE_METHOD < Object" "refm/api/src/win32ole/WIN32OLE_METHOD")
(find-rurima "--- invkind -> Integer" "== Instance Methods" "= class WIN32OLE_METHOD < Object" "refm/api/src/win32ole/WIN32OLE_METHOD")
(find-rurima "--- invoke_kind -> String" "== Instance Methods" "= class WIN32OLE_METHOD < Object" "refm/api/src/win32ole/WIN32OLE_METHOD")
(find-rurima "--- name -> String" "== Instance Methods" "= class WIN32OLE_METHOD < Object" "refm/api/src/win32ole/WIN32OLE_METHOD")
(find-rurima "--- to_s -> String" "== Instance Methods" "= class WIN32OLE_METHOD < Object" "refm/api/src/win32ole/WIN32OLE_METHOD")
(find-rurima "--- offset_vtbl -> Integer" "== Instance Methods" "= class WIN32OLE_METHOD < Object" "refm/api/src/win32ole/WIN32OLE_METHOD")
(find-rurima "--- params -> [WIN32OLE_PARAM]" "== Instance Methods" "= class WIN32OLE_METHOD < Object" "refm/api/src/win32ole/WIN32OLE_METHOD")
(find-rurima "--- return_type -> String" "== Instance Methods" "= class WIN32OLE_METHOD < Object" "refm/api/src/win32ole/WIN32OLE_METHOD")
(find-rurima "--- return_type_detail -> [String]" "== Instance Methods" "= class WIN32OLE_METHOD < Object" "refm/api/src/win32ole/WIN32OLE_METHOD")
(find-rurima "--- return_vtype -> Integer" "== Instance Methods" "= class WIN32OLE_METHOD < Object" "refm/api/src/win32ole/WIN32OLE_METHOD")
(find-rurima "--- size_opt_params -> Integer | nil" "== Instance Methods" "= class WIN32OLE_METHOD < Object" "refm/api/src/win32ole/WIN32OLE_METHOD")
(find-rurima "--- size_params -> Integer | nil" "== Instance Methods" "= class WIN32OLE_METHOD < Object" "refm/api/src/win32ole/WIN32OLE_METHOD")
(find-rurima "--- visible? -> bool" "== Instance Methods" "= class WIN32OLE_METHOD < Object" "refm/api/src/win32ole/WIN32OLE_METHOD")
(find-rurima "= class WIN32OLE_TYPELIB < Object" "refm/api/src/win32ole/WIN32OLE_TYPELIB")
(find-rurima "=== サンプルコード" "= class WIN32OLE_TYPELIB < Object" "refm/api/src/win32ole/WIN32OLE_TYPELIB")
(find-rurima "== Class Methods" "= class WIN32OLE_TYPELIB < Object" "refm/api/src/win32ole/WIN32OLE_TYPELIB")
(find-rurima "--- new(libname, mjv = nil, miv = nil) -> WIN32OLE_TYPELIB" "== Class Methods" "= class WIN32OLE_TYPELIB < Object" "refm/api/src/win32ole/WIN32OLE_TYPELIB")
(find-rurima "--- typelibs -> [WIN32OLE_TYPELIB]" "== Class Methods" "= class WIN32OLE_TYPELIB < Object" "refm/api/src/win32ole/WIN32OLE_TYPELIB")
(find-rurima "== Instance Methods" "= class WIN32OLE_TYPELIB < Object" "refm/api/src/win32ole/WIN32OLE_TYPELIB")
(find-rurima "--- guid -> String" "== Instance Methods" "= class WIN32OLE_TYPELIB < Object" "refm/api/src/win32ole/WIN32OLE_TYPELIB")
(find-rurima "--- library_name -> String" "== Instance Methods" "= class WIN32OLE_TYPELIB < Object" "refm/api/src/win32ole/WIN32OLE_TYPELIB")
(find-rurima "--- major_version -> Integer" "== Instance Methods" "= class WIN32OLE_TYPELIB < Object" "refm/api/src/win32ole/WIN32OLE_TYPELIB")
(find-rurima "--- minor_version -> Integer" "== Instance Methods" "= class WIN32OLE_TYPELIB < Object" "refm/api/src/win32ole/WIN32OLE_TYPELIB")
(find-rurima "--- name -> String" "== Instance Methods" "= class WIN32OLE_TYPELIB < Object" "refm/api/src/win32ole/WIN32OLE_TYPELIB")
(find-rurima "--- to_s -> String" "== Instance Methods" "= class WIN32OLE_TYPELIB < Object" "refm/api/src/win32ole/WIN32OLE_TYPELIB")
(find-rurima "--- ole_types -> [WIN32OLE_TYPE]" "== Instance Methods" "= class WIN32OLE_TYPELIB < Object" "refm/api/src/win32ole/WIN32OLE_TYPELIB")
(find-rurima "--- ole_classes -> [WIN32OLE_TYPE]" "== Instance Methods" "= class WIN32OLE_TYPELIB < Object" "refm/api/src/win32ole/WIN32OLE_TYPELIB")
(find-rurima "--- path -> String" "== Instance Methods" "= class WIN32OLE_TYPELIB < Object" "refm/api/src/win32ole/WIN32OLE_TYPELIB")
(find-rurima "--- version -> Float" "== Instance Methods" "= class WIN32OLE_TYPELIB < Object" "refm/api/src/win32ole/WIN32OLE_TYPELIB")
(find-rurima "--- visible? -> bool" "== Instance Methods" "= class WIN32OLE_TYPELIB < Object" "refm/api/src/win32ole/WIN32OLE_TYPELIB")
(find-rurima "= class WIN32OLE_TYPE < Object" "refm/api/src/win32ole/WIN32OLE_TYPE")
(find-rurima "=== サンプルコード" "= class WIN32OLE_TYPE < Object" "refm/api/src/win32ole/WIN32OLE_TYPE")
(find-rurima "== Class Methods" "= class WIN32OLE_TYPE < Object" "refm/api/src/win32ole/WIN32OLE_TYPE")
(find-rurima "--- new(libname, ole_class) -> WIN32OLE_TYPE" "== Class Methods" "= class WIN32OLE_TYPE < Object" "refm/api/src/win32ole/WIN32OLE_TYPE")
(find-rurima "--- ole_classes(libname) -> [WIN32OLE_TYPE]" "== Class Methods" "= class WIN32OLE_TYPE < Object" "refm/api/src/win32ole/WIN32OLE_TYPE")
(find-rurima "--- progids -> [String]" "== Class Methods" "= class WIN32OLE_TYPE < Object" "refm/api/src/win32ole/WIN32OLE_TYPE")
(find-rurima "--- typelibs -> [String]" "== Class Methods" "= class WIN32OLE_TYPE < Object" "refm/api/src/win32ole/WIN32OLE_TYPE")
(find-rurima "== Instance Methods" "= class WIN32OLE_TYPE < Object" "refm/api/src/win32ole/WIN32OLE_TYPE")
(find-rurima "--- guid -> String | nil" "== Instance Methods" "= class WIN32OLE_TYPE < Object" "refm/api/src/win32ole/WIN32OLE_TYPE")
(find-rurima "--- helpcontext -> Integer | nil" "== Instance Methods" "= class WIN32OLE_TYPE < Object" "refm/api/src/win32ole/WIN32OLE_TYPE")
(find-rurima "--- helpfile -> String | nil" "== Instance Methods" "= class WIN32OLE_TYPE < Object" "refm/api/src/win32ole/WIN32OLE_TYPE")
(find-rurima "--- helpstring -> String | nil" "== Instance Methods" "= class WIN32OLE_TYPE < Object" "refm/api/src/win32ole/WIN32OLE_TYPE")
(find-rurima "--- major_version -> Integer" "== Instance Methods" "= class WIN32OLE_TYPE < Object" "refm/api/src/win32ole/WIN32OLE_TYPE")
(find-rurima "--- minor_version -> Integer" "== Instance Methods" "= class WIN32OLE_TYPE < Object" "refm/api/src/win32ole/WIN32OLE_TYPE")
(find-rurima "--- name -> String" "== Instance Methods" "= class WIN32OLE_TYPE < Object" "refm/api/src/win32ole/WIN32OLE_TYPE")
(find-rurima "--- to_s" "== Instance Methods" "= class WIN32OLE_TYPE < Object" "refm/api/src/win32ole/WIN32OLE_TYPE")
(find-rurima "--- ole_methods -> [WIN32OLE_METHOD]" "== Instance Methods" "= class WIN32OLE_TYPE < Object" "refm/api/src/win32ole/WIN32OLE_TYPE")
(find-rurima "--- ole_type -> String | nil" "== Instance Methods" "= class WIN32OLE_TYPE < Object" "refm/api/src/win32ole/WIN32OLE_TYPE")
(find-rurima "--- progid -> String | nil" "== Instance Methods" "= class WIN32OLE_TYPE < Object" "refm/api/src/win32ole/WIN32OLE_TYPE")
(find-rurima "--- src_type -> String | nil" "== Instance Methods" "= class WIN32OLE_TYPE < Object" "refm/api/src/win32ole/WIN32OLE_TYPE")
(find-rurima "--- name -> String" "== Instance Methods" "= class WIN32OLE_TYPE < Object" "refm/api/src/win32ole/WIN32OLE_TYPE")
(find-rurima "--- to_s -> String" "== Instance Methods" "= class WIN32OLE_TYPE < Object" "refm/api/src/win32ole/WIN32OLE_TYPE")
(find-rurima "--- typekind -> Integer" "== Instance Methods" "= class WIN32OLE_TYPE < Object" "refm/api/src/win32ole/WIN32OLE_TYPE")
(find-rurima "--- variables -> [WIN32OLE_VARIABLE]" "== Instance Methods" "= class WIN32OLE_TYPE < Object" "refm/api/src/win32ole/WIN32OLE_TYPE")
(find-rurima "--- visible? -> bool" "== Instance Methods" "= class WIN32OLE_TYPE < Object" "refm/api/src/win32ole/WIN32OLE_TYPE")
(find-rurima "--- ole_typelib -> WIN32OLE_TYPELIB | nil" "== Instance Methods" "= class WIN32OLE_TYPE < Object" "refm/api/src/win32ole/WIN32OLE_TYPE")
(find-rurima "--- implemented_ole_types -> [WIN32OLE_TYPE]" "== Instance Methods" "= class WIN32OLE_TYPE < Object" "refm/api/src/win32ole/WIN32OLE_TYPE")
(find-rurima "--- source_ole_types -> [WIN32OLE_TYPE]" "== Instance Methods" "= class WIN32OLE_TYPE < Object" "refm/api/src/win32ole/WIN32OLE_TYPE")
(find-rurima "--- default_event_sources -> [WIN32OLE_TYPE]" "== Instance Methods" "= class WIN32OLE_TYPE < Object" "refm/api/src/win32ole/WIN32OLE_TYPE")
(find-rurima "--- default_ole_types -> [WIN32OLE_TYPE]" "== Instance Methods" "= class WIN32OLE_TYPE < Object" "refm/api/src/win32ole/WIN32OLE_TYPE")
(find-rurima "--- inspect -> String" "== Instance Methods" "= class WIN32OLE_TYPE < Object" "refm/api/src/win32ole/WIN32OLE_TYPE")
(find-rurima "= class WIN32OLE_PARAM < Object" "refm/api/src/win32ole/WIN32OLE_PARAM")
(find-rurima "=== サンプルコード" "= class WIN32OLE_PARAM < Object" "refm/api/src/win32ole/WIN32OLE_PARAM")
(find-rurima "== Class Methods" "= class WIN32OLE_PARAM < Object" "refm/api/src/win32ole/WIN32OLE_PARAM")
(find-rurima "--- new(ole_method,  index) -> WIN32OLE_PARAM" "== Class Methods" "= class WIN32OLE_PARAM < Object" "refm/api/src/win32ole/WIN32OLE_PARAM")
(find-rurima "== Instance Methods" "= class WIN32OLE_PARAM < Object" "refm/api/src/win32ole/WIN32OLE_PARAM")
(find-rurima "--- default -> object | nil" "== Instance Methods" "= class WIN32OLE_PARAM < Object" "refm/api/src/win32ole/WIN32OLE_PARAM")
(find-rurima "--- input? -> bool" "== Instance Methods" "= class WIN32OLE_PARAM < Object" "refm/api/src/win32ole/WIN32OLE_PARAM")
(find-rurima "--- name -> String" "== Instance Methods" "= class WIN32OLE_PARAM < Object" "refm/api/src/win32ole/WIN32OLE_PARAM")
(find-rurima "--- to_s -> String" "== Instance Methods" "= class WIN32OLE_PARAM < Object" "refm/api/src/win32ole/WIN32OLE_PARAM")
(find-rurima "--- ole_type -> String" "== Instance Methods" "= class WIN32OLE_PARAM < Object" "refm/api/src/win32ole/WIN32OLE_PARAM")
(find-rurima "--- ole_type_detail -> [String]" "== Instance Methods" "= class WIN32OLE_PARAM < Object" "refm/api/src/win32ole/WIN32OLE_PARAM")
(find-rurima "--- optional? -> bool" "== Instance Methods" "= class WIN32OLE_PARAM < Object" "refm/api/src/win32ole/WIN32OLE_PARAM")
(find-rurima "--- output? -> bool" "== Instance Methods" "= class WIN32OLE_PARAM < Object" "refm/api/src/win32ole/WIN32OLE_PARAM")
(find-rurima "--- retval? -> bool" "== Instance Methods" "= class WIN32OLE_PARAM < Object" "refm/api/src/win32ole/WIN32OLE_PARAM")
(find-rurima "= class WIN32OLE_VARIANT < Object" "refm/api/src/win32ole/WIN32OLE_VARIANT")
(find-rurima "=== サンプルコード" "= class WIN32OLE_VARIANT < Object" "refm/api/src/win32ole/WIN32OLE_VARIANT")
(find-rurima "== Class Methods" "= class WIN32OLE_VARIANT < Object" "refm/api/src/win32ole/WIN32OLE_VARIANT")
(find-rurima "--- array(dims, vt) -> WIN32OLE_VARIANT" "== Class Methods" "= class WIN32OLE_VARIANT < Object" "refm/api/src/win32ole/WIN32OLE_VARIANT")
(find-rurima "--- new(val, vartype = nil) -> WIN32OLE_VARIANT" "== Class Methods" "= class WIN32OLE_VARIANT < Object" "refm/api/src/win32ole/WIN32OLE_VARIANT")
(find-rurima "== Instance Methods" "= class WIN32OLE_VARIANT < Object" "refm/api/src/win32ole/WIN32OLE_VARIANT")
(find-rurima "--- [](i...) -> object" "== Instance Methods" "= class WIN32OLE_VARIANT < Object" "refm/api/src/win32ole/WIN32OLE_VARIANT")
(find-rurima "--- []=(i..., val) -> object" "== Instance Methods" "= class WIN32OLE_VARIANT < Object" "refm/api/src/win32ole/WIN32OLE_VARIANT")
(find-rurima "--- value -> object" "== Instance Methods" "= class WIN32OLE_VARIANT < Object" "refm/api/src/win32ole/WIN32OLE_VARIANT")
(find-rurima "--- value=(val) -> ()" "== Instance Methods" "= class WIN32OLE_VARIANT < Object" "refm/api/src/win32ole/WIN32OLE_VARIANT")
(find-rurima "--- vartype -> Integer" "== Instance Methods" "= class WIN32OLE_VARIANT < Object" "refm/api/src/win32ole/WIN32OLE_VARIANT")
(find-rurima "== Constants" "= class WIN32OLE_VARIANT < Object" "refm/api/src/win32ole/WIN32OLE_VARIANT")
(find-rurima "--- Empty -> WIN32OLE_VARIANT" "== Constants" "= class WIN32OLE_VARIANT < Object" "refm/api/src/win32ole/WIN32OLE_VARIANT")
(find-rurima "--- Null -> WIN32OLE_VARIANT" "== Constants" "= class WIN32OLE_VARIANT < Object" "refm/api/src/win32ole/WIN32OLE_VARIANT")
(find-rurima "--- Nothing -> WIN32OLE_VARIANT" "== Constants" "= class WIN32OLE_VARIANT < Object" "refm/api/src/win32ole/WIN32OLE_VARIANT")
(find-rurima "= class WIN32OLE_VARIABLE < Object" "refm/api/src/win32ole/WIN32OLE_VARIABLE")
(find-rurima "=== サンプルコード" "= class WIN32OLE_VARIABLE < Object" "refm/api/src/win32ole/WIN32OLE_VARIABLE")
(find-rurima "== Instance Methods" "= class WIN32OLE_VARIABLE < Object" "refm/api/src/win32ole/WIN32OLE_VARIABLE")
(find-rurima "--- name -> String" "== Instance Methods" "= class WIN32OLE_VARIABLE < Object" "refm/api/src/win32ole/WIN32OLE_VARIABLE")
(find-rurima "--- to_s -> String" "== Instance Methods" "= class WIN32OLE_VARIABLE < Object" "refm/api/src/win32ole/WIN32OLE_VARIABLE")
(find-rurima "--- ole_type -> String" "== Instance Methods" "= class WIN32OLE_VARIABLE < Object" "refm/api/src/win32ole/WIN32OLE_VARIABLE")
(find-rurima "--- ole_type_detail -> [String]" "== Instance Methods" "= class WIN32OLE_VARIABLE < Object" "refm/api/src/win32ole/WIN32OLE_VARIABLE")
(find-rurima "--- value -> object | nil" "== Instance Methods" "= class WIN32OLE_VARIABLE < Object" "refm/api/src/win32ole/WIN32OLE_VARIABLE")
(find-rurima "--- variable_kind -> String" "== Instance Methods" "= class WIN32OLE_VARIABLE < Object" "refm/api/src/win32ole/WIN32OLE_VARIABLE")
(find-rurima "--- varkind -> Integer" "== Instance Methods" "= class WIN32OLE_VARIABLE < Object" "refm/api/src/win32ole/WIN32OLE_VARIABLE")
(find-rurima "--- visible? -> bool" "== Instance Methods" "= class WIN32OLE_VARIABLE < Object" "refm/api/src/win32ole/WIN32OLE_VARIABLE")
(find-rurima "= class WIN32OLE < Object" "refm/api/src/win32ole/WIN32OLE")
(find-rurima "=== サンプルコード" "= class WIN32OLE < Object" "refm/api/src/win32ole/WIN32OLE")
(find-rurima "=== マルチスレッドでの利用制限" "= class WIN32OLE < Object" "refm/api/src/win32ole/WIN32OLE")
(find-rurima "== Class Methods" "= class WIN32OLE < Object" "refm/api/src/win32ole/WIN32OLE")
(find-rurima "--- create_guid -> String" "== Class Methods" "= class WIN32OLE < Object" "refm/api/src/win32ole/WIN32OLE")
(find-rurima "--- locale -> Fixnum" "== Class Methods" "= class WIN32OLE < Object" "refm/api/src/win32ole/WIN32OLE")
(find-rurima "--- locale=(lcid) -> nil" "== Class Methods" "= class WIN32OLE < Object" "refm/api/src/win32ole/WIN32OLE")
(find-rurima "--- codepage -> Fixnum" "== Class Methods" "= class WIN32OLE < Object" "refm/api/src/win32ole/WIN32OLE")
(find-rurima "--- codepage=(cp) -> nil" "== Class Methods" "= class WIN32OLE < Object" "refm/api/src/win32ole/WIN32OLE")
(find-rurima "--- connect(ole) -> WIN32OLE" "== Class Methods" "= class WIN32OLE < Object" "refm/api/src/win32ole/WIN32OLE")
(find-rurima "--- const_load(ole, mod = WIN32OLE) -> ()" "== Class Methods" "= class WIN32OLE < Object" "refm/api/src/win32ole/WIN32OLE")
(find-rurima "--- new(server, host=nil) -> WIN32OLE" "== Class Methods" "= class WIN32OLE < Object" "refm/api/src/win32ole/WIN32OLE")
(find-rurima "--- ole_free(aWIN32OLE) -> Integer" "== Class Methods" "= class WIN32OLE < Object" "refm/api/src/win32ole/WIN32OLE")
(find-rurima "--- ole_reference_count(aWIN32OLE) -> Integer" "== Class Methods" "= class WIN32OLE < Object" "refm/api/src/win32ole/WIN32OLE")
(find-rurima "--- ole_show_help(obj, helpcontext = nil) -> ()" "== Class Methods" "= class WIN32OLE < Object" "refm/api/src/win32ole/WIN32OLE")
(find-rurima "== Instance Methods" "= class WIN32OLE < Object" "refm/api/src/win32ole/WIN32OLE")
(find-rurima "--- [](name) -> object" "== Instance Methods" "= class WIN32OLE < Object" "refm/api/src/win32ole/WIN32OLE")
(find-rurima "--- [](name, param...) -> object" "== Instance Methods" "= class WIN32OLE < Object" "refm/api/src/win32ole/WIN32OLE")
(find-rurima "--- []=(name, value) -> ()" "== Instance Methods" "= class WIN32OLE < Object" "refm/api/src/win32ole/WIN32OLE")
(find-rurima "--- []=(name, param..., value) -> ()" "== Instance Methods" "= class WIN32OLE < Object" "refm/api/src/win32ole/WIN32OLE")
(find-rurima "--- [](key...) -> object" "== Instance Methods" "= class WIN32OLE < Object" "refm/api/src/win32ole/WIN32OLE")
(find-rurima "--- []=(key..., value) -> ()" "== Instance Methods" "= class WIN32OLE < Object" "refm/api/src/win32ole/WIN32OLE")
(find-rurima "--- _getproperty(dispid, args, types) -> object" "== Instance Methods" "= class WIN32OLE < Object" "refm/api/src/win32ole/WIN32OLE")
(find-rurima "--- _invoke(dispid, args, types) -> object | nil" "== Instance Methods" "= class WIN32OLE < Object" "refm/api/src/win32ole/WIN32OLE")
(find-rurima "--- _setproperty(dispid, args, types) -> ()" "== Instance Methods" "= class WIN32OLE < Object" "refm/api/src/win32ole/WIN32OLE")
(find-rurima "--- each {|i|...} -> ()" "== Instance Methods" "= class WIN32OLE < Object" "refm/api/src/win32ole/WIN32OLE")
(find-rurima "--- invoke(name, *args) -> object | nil" "== Instance Methods" "= class WIN32OLE < Object" "refm/api/src/win32ole/WIN32OLE")
(find-rurima "--- method_missing(id, *args) -> object | nil" "== Instance Methods" "= class WIN32OLE < Object" "refm/api/src/win32ole/WIN32OLE")
(find-rurima "--- ole_activex_initialize -> nil" "== Instance Methods" "= class WIN32OLE < Object" "refm/api/src/win32ole/WIN32OLE")
(find-rurima "--- ole_free -> ()" "== Instance Methods" "= class WIN32OLE < Object" "refm/api/src/win32ole/WIN32OLE")
(find-rurima "--- ole_func_methods -> [WIN32OLE_METHOD]" "== Instance Methods" "= class WIN32OLE < Object" "refm/api/src/win32ole/WIN32OLE")
(find-rurima "--- ole_get_methods -> [WIN32OLE_METHOD]" "== Instance Methods" "= class WIN32OLE < Object" "refm/api/src/win32ole/WIN32OLE")
(find-rurima "--- ole_method(method) -> WIN32OLE_METHOD" "== Instance Methods" "= class WIN32OLE < Object" "refm/api/src/win32ole/WIN32OLE")
(find-rurima "--- ole_method_help(method) -> WIN32OLE_METHOD" "== Instance Methods" "= class WIN32OLE < Object" "refm/api/src/win32ole/WIN32OLE")
(find-rurima "--- ole_methods -> [WIN32OLE_METHOD]" "== Instance Methods" "= class WIN32OLE < Object" "refm/api/src/win32ole/WIN32OLE")
(find-rurima "--- ole_obj_help -> WIN32OLE_TYPE | nil" "== Instance Methods" "= class WIN32OLE < Object" "refm/api/src/win32ole/WIN32OLE")
(find-rurima "--- ole_type -> WIN32OLE_TYPE | nil" "== Instance Methods" "= class WIN32OLE < Object" "refm/api/src/win32ole/WIN32OLE")
(find-rurima "--- ole_put_methods -> [WIN32OLE_METHOD]" "== Instance Methods" "= class WIN32OLE < Object" "refm/api/src/win32ole/WIN32OLE")
(find-rurima "--- setproperty(name, val) -> ()" "== Instance Methods" "= class WIN32OLE < Object" "refm/api/src/win32ole/WIN32OLE")
(find-rurima "--- setproperty(name, args..., val) -> ()" "== Instance Methods" "= class WIN32OLE < Object" "refm/api/src/win32ole/WIN32OLE")
(find-rurima "--- ole_query_interface(iid) -> WIN32OLE" "== Instance Methods" "= class WIN32OLE < Object" "refm/api/src/win32ole/WIN32OLE")
(find-rurima "--- ole_respond_to?(name) -> bool" "== Instance Methods" "= class WIN32OLE < Object" "refm/api/src/win32ole/WIN32OLE")
(find-rurima "--- ole_typelib -> WIN32OLE_TYPELIB" "== Instance Methods" "= class WIN32OLE < Object" "refm/api/src/win32ole/WIN32OLE")
(find-rurima "== Constants" "= class WIN32OLE < Object" "refm/api/src/win32ole/WIN32OLE")
(find-rurima "--- VERSION  -> String" "== Constants" "= class WIN32OLE < Object" "refm/api/src/win32ole/WIN32OLE")
(find-rurima "--- ARGV -> [object]" "== Constants" "= class WIN32OLE < Object" "refm/api/src/win32ole/WIN32OLE")
(find-rurima "--- CP_ACP -> Fixnum" "== Constants" "= class WIN32OLE < Object" "refm/api/src/win32ole/WIN32OLE")
(find-rurima "--- CP_MACCP -> Fixnum" "== Constants" "= class WIN32OLE < Object" "refm/api/src/win32ole/WIN32OLE")
(find-rurima "--- CP_OEMCP -> Fixnum" "== Constants" "= class WIN32OLE < Object" "refm/api/src/win32ole/WIN32OLE")
(find-rurima "--- CP_SYMBOL -> Fixnum" "== Constants" "= class WIN32OLE < Object" "refm/api/src/win32ole/WIN32OLE")
(find-rurima "--- CP_THREAD_ACP -> Fixnum" "== Constants" "= class WIN32OLE < Object" "refm/api/src/win32ole/WIN32OLE")
(find-rurima "--- CP_UTF7 -> Fixnum" "== Constants" "= class WIN32OLE < Object" "refm/api/src/win32ole/WIN32OLE")
(find-rurima "--- CP_UTF8 -> Fixnum" "== Constants" "= class WIN32OLE < Object" "refm/api/src/win32ole/WIN32OLE")
(find-rurima "--- LOCALE_SYSTEM_DEFAULT  -> Fixnum" "== Constants" "= class WIN32OLE < Object" "refm/api/src/win32ole/WIN32OLE")
(find-rurima "--- LOCALE_USER_DEFAULT  -> Fixnum" "== Constants" "= class WIN32OLE < Object" "refm/api/src/win32ole/WIN32OLE")
(find-rurima "= class WIN32OLE_EVENT < Object" "refm/api/src/win32ole/WIN32OLE_EVENT")
(find-rurima "=== サンプルコード" "= class WIN32OLE_EVENT < Object" "refm/api/src/win32ole/WIN32OLE_EVENT")
(find-rurima "== Class Methods" "= class WIN32OLE_EVENT < Object" "refm/api/src/win32ole/WIN32OLE_EVENT")
(find-rurima "--- message_loop -> ()" "== Class Methods" "= class WIN32OLE_EVENT < Object" "refm/api/src/win32ole/WIN32OLE_EVENT")
(find-rurima "--- new(ole, event = nil) -> WIN32OLE_EVENT" "== Class Methods" "= class WIN32OLE_EVENT < Object" "refm/api/src/win32ole/WIN32OLE_EVENT")
(find-rurima "== Instance Methods" "= class WIN32OLE_EVENT < Object" "refm/api/src/win32ole/WIN32OLE_EVENT")
(find-rurima "--- on_event(event = nil) {|*args| ... } -> ()" "== Instance Methods" "= class WIN32OLE_EVENT < Object" "refm/api/src/win32ole/WIN32OLE_EVENT")
(find-rurima "--- on_event_with_outargs(event = nil) {|*args| ... } -> ()" "== Instance Methods" "= class WIN32OLE_EVENT < Object" "refm/api/src/win32ole/WIN32OLE_EVENT")
(find-rurima "--- off_event(event = nil) -> ()" "== Instance Methods" "= class WIN32OLE_EVENT < Object" "refm/api/src/win32ole/WIN32OLE_EVENT")
(find-rurima "--- handler=(obj) -> ()" "== Instance Methods" "= class WIN32OLE_EVENT < Object" "refm/api/src/win32ole/WIN32OLE_EVENT")
(find-rurima "--- handler -> object" "== Instance Methods" "= class WIN32OLE_EVENT < Object" "refm/api/src/win32ole/WIN32OLE_EVENT")
(find-rurima "--- unadvise -> ()" "== Instance Methods" "= class WIN32OLE_EVENT < Object" "refm/api/src/win32ole/WIN32OLE_EVENT")
(find-rurima "= redefine IPSocket" "refm/api/src/resolv-replace.rd")
(find-rurima "== Class Methods" "= redefine IPSocket" "refm/api/src/resolv-replace.rd")
(find-rurima "--- getaddress(host) -> String" "== Class Methods" "= redefine IPSocket" "refm/api/src/resolv-replace.rd")
(find-rurima "= redefine TCPSocket" "refm/api/src/resolv-replace.rd")
(find-rurima "== Class Methods" "= redefine TCPSocket" "refm/api/src/resolv-replace.rd")
(find-rurima "--- open(host, serv, local_host=nil, local_service=nil) -> TCPSocket" "== Class Methods" "= redefine TCPSocket" "refm/api/src/resolv-replace.rd")
(find-rurima "--- new(host, serv, local_host=nil, local_service=nil) -> TCPSocket" "== Class Methods" "= redefine TCPSocket" "refm/api/src/resolv-replace.rd")
(find-rurima "= redefine UDPSocket" "refm/api/src/resolv-replace.rd")
(find-rurima "== Instance Methods" "= redefine UDPSocket" "refm/api/src/resolv-replace.rd")
(find-rurima "--- bind(host, port) -> Integer" "== Instance Methods" "= redefine UDPSocket" "refm/api/src/resolv-replace.rd")
(find-rurima "--- connect(host, port) -> Integer" "== Instance Methods" "= redefine UDPSocket" "refm/api/src/resolv-replace.rd")
(find-rurima "--- send(mesg, flags , dest_sockaddr=nil) -> Integer" "== Instance Methods" "= redefine UDPSocket" "refm/api/src/resolv-replace.rd")
(find-rurima "--- send(mesg, flags, host, port) -> Integer" "== Instance Methods" "= redefine UDPSocket" "refm/api/src/resolv-replace.rd")
(find-rurima "= redefine SOCKSSocket" "refm/api/src/resolv-replace.rd")
(find-rurima "== Class Methods" "= redefine SOCKSSocket" "refm/api/src/resolv-replace.rd")
(find-rurima "--- new(host, serv) -> SOCKSSocket" "== Class Methods" "= redefine SOCKSSocket" "refm/api/src/resolv-replace.rd")
(find-rurima "= class Rinda::RequestCanceledError < ThreadError" "refm/api/src/rinda/Rinda__RequestCanceledError")
(find-rurima "= class Rinda::TupleSpace < Object" "refm/api/src/rinda/Rinda__TupleSpace")
(find-rurima "== Class Methods" "= class Rinda::TupleSpace < Object" "refm/api/src/rinda/Rinda__TupleSpace")
(find-rurima "--- new(period = 60)" "== Class Methods" "= class Rinda::TupleSpace < Object" "refm/api/src/rinda/Rinda__TupleSpace")
(find-rurima "== Instance Methods" "= class Rinda::TupleSpace < Object" "refm/api/src/rinda/Rinda__TupleSpace")
(find-rurima "--- move(port, tuple, sec = nil)" "== Instance Methods" "= class Rinda::TupleSpace < Object" "refm/api/src/rinda/Rinda__TupleSpace")
(find-rurima "--- notify(event, tuple, sec = nil)" "== Instance Methods" "= class Rinda::TupleSpace < Object" "refm/api/src/rinda/Rinda__TupleSpace")
(find-rurima "+event+ can be:" "== Instance Methods" "= class Rinda::TupleSpace < Object" "refm/api/src/rinda/Rinda__TupleSpace")
(find-rurima "--- read(tuple, sec=nil)" "+event+ can be:" "== Instance Methods" "= class Rinda::TupleSpace < Object" "refm/api/src/rinda/Rinda__TupleSpace")
(find-rurima "--- read_all(tuple)" "+event+ can be:" "== Instance Methods" "= class Rinda::TupleSpace < Object" "refm/api/src/rinda/Rinda__TupleSpace")
(find-rurima "--- take(tuple, sec = nil)" "+event+ can be:" "== Instance Methods" "= class Rinda::TupleSpace < Object" "refm/api/src/rinda/Rinda__TupleSpace")
(find-rurima "--- take(tuple, sec = nil) {|template| ... }" "+event+ can be:" "== Instance Methods" "= class Rinda::TupleSpace < Object" "refm/api/src/rinda/Rinda__TupleSpace")
(find-rurima "--- write(tuple, sec = nil)" "+event+ can be:" "== Instance Methods" "= class Rinda::TupleSpace < Object" "refm/api/src/rinda/Rinda__TupleSpace")
(find-rurima "= class Rinda::Tuple" "refm/api/src/rinda/Rinda__Tuple")
(find-rurima "== Class Methods" "= class Rinda::Tuple" "refm/api/src/rinda/Rinda__Tuple")
(find-rurima "--- new(ah)" "== Class Methods" "= class Rinda::Tuple" "refm/api/src/rinda/Rinda__Tuple")
(find-rurima "== Instance Methods" "= class Rinda::Tuple" "refm/api/src/rinda/Rinda__Tuple")
(find-rurima "--- [](key)" "== Instance Methods" "= class Rinda::Tuple" "refm/api/src/rinda/Rinda__Tuple")
(find-rurima "--- each{|key, value| ... }" "== Instance Methods" "= class Rinda::Tuple" "refm/api/src/rinda/Rinda__Tuple")
(find-rurima "--- fetch(key)" "== Instance Methods" "= class Rinda::Tuple" "refm/api/src/rinda/Rinda__Tuple")
(find-rurima "--- size" "== Instance Methods" "= class Rinda::Tuple" "refm/api/src/rinda/Rinda__Tuple")
(find-rurima "--- value" "== Instance Methods" "= class Rinda::Tuple" "refm/api/src/rinda/Rinda__Tuple")
(find-rurima "= class Rinda::SimpleRenewer < Object" "refm/api/src/rinda/Rinda__SimpleRenewer")
(find-rurima "== Class Methods" "= class Rinda::SimpleRenewer < Object" "refm/api/src/rinda/Rinda__SimpleRenewer")
(find-rurima "--- new(sec = 180)" "== Class Methods" "= class Rinda::SimpleRenewer < Object" "refm/api/src/rinda/Rinda__SimpleRenewer")
(find-rurima "+sec+ seconds." "== Class Methods" "= class Rinda::SimpleRenewer < Object" "refm/api/src/rinda/Rinda__SimpleRenewer")
(find-rurima "== Instance Methods" "= class Rinda::SimpleRenewer < Object" "refm/api/src/rinda/Rinda__SimpleRenewer")
(find-rurima "--- renew" "== Instance Methods" "= class Rinda::SimpleRenewer < Object" "refm/api/src/rinda/Rinda__SimpleRenewer")
(find-rurima "= class Rinda::RindaError < RuntimeError" "refm/api/src/rinda/Rinda__RindaError")
(find-rurima "= class Rinda::TupleEntry" "refm/api/src/rinda/Rinda__TupleEntry")
(find-rurima "== Class Methods" "= class Rinda::TupleEntry" "refm/api/src/rinda/Rinda__TupleEntry")
(find-rurima "--- new(ary, sec = nil)" "== Class Methods" "= class Rinda::TupleEntry" "refm/api/src/rinda/Rinda__TupleEntry")
(find-rurima "== Instance Methods" "= class Rinda::TupleEntry" "refm/api/src/rinda/Rinda__TupleEntry")
(find-rurima "--- [](key)" "== Instance Methods" "= class Rinda::TupleEntry" "refm/api/src/rinda/Rinda__TupleEntry")
(find-rurima "--- alive?" "== Instance Methods" "= class Rinda::TupleEntry" "refm/api/src/rinda/Rinda__TupleEntry")
(find-rurima "--- cancel" "== Instance Methods" "= class Rinda::TupleEntry" "refm/api/src/rinda/Rinda__TupleEntry")
(find-rurima "--- canceled?" "== Instance Methods" "= class Rinda::TupleEntry" "refm/api/src/rinda/Rinda__TupleEntry")
(find-rurima "--- expired?" "== Instance Methods" "= class Rinda::TupleEntry" "refm/api/src/rinda/Rinda__TupleEntry")
(find-rurima "--- expires" "== Instance Methods" "= class Rinda::TupleEntry" "refm/api/src/rinda/Rinda__TupleEntry")
(find-rurima "--- expires=(expires)" "== Instance Methods" "= class Rinda::TupleEntry" "refm/api/src/rinda/Rinda__TupleEntry")
(find-rurima "--- fetch(key)" "== Instance Methods" "= class Rinda::TupleEntry" "refm/api/src/rinda/Rinda__TupleEntry")
(find-rurima "--- make_expires(sec = nil)" "== Instance Methods" "= class Rinda::TupleEntry" "refm/api/src/rinda/Rinda__TupleEntry")
(find-rurima "+true+:  the expiry time is the start of 1970 (i.e. expired)" "== Instance Methods" "= class Rinda::TupleEntry" "refm/api/src/rinda/Rinda__TupleEntry")
(find-rurima "+nil+:   it is Tue Jan 19 03:14:07 GMT Standard Time 2038 (i.e." "== Instance Methods" "= class Rinda::TupleEntry" "refm/api/src/rinda/Rinda__TupleEntry")
(find-rurima "--- make_tuple(ary)" "+nil+:   it is Tue Jan 19 03:14:07 GMT Standard Time 2038 (i.e." "== Instance Methods" "= class Rinda::TupleEntry" "refm/api/src/rinda/Rinda__TupleEntry")
(find-rurima "--- renew(sec_or_renewer)" "+nil+:   it is Tue Jan 19 03:14:07 GMT Standard Time 2038 (i.e." "== Instance Methods" "= class Rinda::TupleEntry" "refm/api/src/rinda/Rinda__TupleEntry")
(find-rurima "+nil+:   it is set to expire in the far future." "== Instance Methods" "= class Rinda::TupleEntry" "refm/api/src/rinda/Rinda__TupleEntry")
(find-rurima "+false+: it has expired." "== Instance Methods" "= class Rinda::TupleEntry" "refm/api/src/rinda/Rinda__TupleEntry")
(find-rurima "--- size" "+false+: it has expired." "== Instance Methods" "= class Rinda::TupleEntry" "refm/api/src/rinda/Rinda__TupleEntry")
(find-rurima "--- value" "+false+: it has expired." "== Instance Methods" "= class Rinda::TupleEntry" "refm/api/src/rinda/Rinda__TupleEntry")
(find-rurima "= module Rinda" "refm/api/src/rinda/rinda.rd")
(find-rurima "= class Rinda::TupleSpaceProxy < Object" "refm/api/src/rinda/Rinda__TupleSpaceProxy")
(find-rurima "== Class Methods" "= class Rinda::TupleSpaceProxy < Object" "refm/api/src/rinda/Rinda__TupleSpaceProxy")
(find-rurima "--- new(ts)" "== Class Methods" "= class Rinda::TupleSpaceProxy < Object" "refm/api/src/rinda/Rinda__TupleSpaceProxy")
(find-rurima "== Instance Methods" "= class Rinda::TupleSpaceProxy < Object" "refm/api/src/rinda/Rinda__TupleSpaceProxy")
(find-rurima "--- notify(ev, tuple, sec = nil)" "== Instance Methods" "= class Rinda::TupleSpaceProxy < Object" "refm/api/src/rinda/Rinda__TupleSpaceProxy")
(find-rurima "--- read(tuple, sec = nil){|template| ... }" "== Instance Methods" "= class Rinda::TupleSpaceProxy < Object" "refm/api/src/rinda/Rinda__TupleSpaceProxy")
(find-rurima "--- read_all(tuple)" "== Instance Methods" "= class Rinda::TupleSpaceProxy < Object" "refm/api/src/rinda/Rinda__TupleSpaceProxy")
(find-rurima "--- take(tuple, sec = nil){|template| ... }" "== Instance Methods" "= class Rinda::TupleSpaceProxy < Object" "refm/api/src/rinda/Rinda__TupleSpaceProxy")
(find-rurima "--- write(tuple, sec = nil)" "== Instance Methods" "= class Rinda::TupleSpaceProxy < Object" "refm/api/src/rinda/Rinda__TupleSpaceProxy")
(find-rurima "= class Rinda::RequestExpiredError < ThreadError" "refm/api/src/rinda/Rinda__RequestExpiredError")
(find-rurima "= class Rinda::Template < Rinda::Tuple" "refm/api/src/rinda/Rinda__Template")
(find-rurima "=== 例" "= class Rinda::Template < Rinda::Tuple" "refm/api/src/rinda/Rinda__Template")
(find-rurima "== Instance Methods" "= class Rinda::Template < Rinda::Tuple" "refm/api/src/rinda/Rinda__Template")
(find-rurima "--- ===(tuple)" "== Instance Methods" "= class Rinda::Template < Rinda::Tuple" "refm/api/src/rinda/Rinda__Template")
(find-rurima "--- match(tuple)" "== Instance Methods" "= class Rinda::Template < Rinda::Tuple" "refm/api/src/rinda/Rinda__Template")
(find-rurima "= class Rinda::InvalidHashTupleKey < Rinda::RindaError" "refm/api/src/rinda/Rinda__InvalidHashTupleKey")
(find-rurima "= class Rinda::DRbObjectTemplate < Object" "refm/api/src/rinda/Rinda__DRbObjectTemplate")
(find-rurima "== Class Methods" "= class Rinda::DRbObjectTemplate < Object" "refm/api/src/rinda/Rinda__DRbObjectTemplate")
(find-rurima "--- new(uri = nil, ref = nil)" "== Class Methods" "= class Rinda::DRbObjectTemplate < Object" "refm/api/src/rinda/Rinda__DRbObjectTemplate")
(find-rurima "+ref+." "== Class Methods" "= class Rinda::DRbObjectTemplate < Object" "refm/api/src/rinda/Rinda__DRbObjectTemplate")
(find-rurima "== Instance Methods" "= class Rinda::DRbObjectTemplate < Object" "refm/api/src/rinda/Rinda__DRbObjectTemplate")
(find-rurima "--- ===(ro)" "== Instance Methods" "= class Rinda::DRbObjectTemplate < Object" "refm/api/src/rinda/Rinda__DRbObjectTemplate")
(find-rurima "= class GServer < Object" "refm/api/src/gserver.rd")
(find-rurima "== Constants" "= class GServer < Object" "refm/api/src/gserver.rd")
(find-rurima "--- DEFAULT_HOST -> String" "== Constants" "= class GServer < Object" "refm/api/src/gserver.rd")
(find-rurima "== Class Methods" "= class GServer < Object" "refm/api/src/gserver.rd")
(find-rurima "--- new(port, host = GServer::DEFAULT_HOST, maxConnections = 4, stdlog = $stderr, audit = false, debug = false)" "== Class Methods" "= class GServer < Object" "refm/api/src/gserver.rd")
(find-rurima "--- in_service?(port, host = GServer::DEFAULT_HOST) -> bool" "== Class Methods" "= class GServer < Object" "refm/api/src/gserver.rd")
(find-rurima "--- stop(port, host = DEFAULT_HOST) -> ()" "== Class Methods" "= class GServer < Object" "refm/api/src/gserver.rd")
(find-rurima "== Instance Methods" "= class GServer < Object" "refm/api/src/gserver.rd")
(find-rurima "--- audit -> bool" "== Instance Methods" "= class GServer < Object" "refm/api/src/gserver.rd")
(find-rurima "--- audit=(bool)" "== Instance Methods" "= class GServer < Object" "refm/api/src/gserver.rd")
(find-rurima "--- connections() -> Fixnum" "== Instance Methods" "= class GServer < Object" "refm/api/src/gserver.rd")
(find-rurima "--- debug -> bool" "== Instance Methods" "= class GServer < Object" "refm/api/src/gserver.rd")
(find-rurima "--- debug=(bool)" "== Instance Methods" "= class GServer < Object" "refm/api/src/gserver.rd")
(find-rurima "--- host -> String" "== Instance Methods" "= class GServer < Object" "refm/api/src/gserver.rd")
(find-rurima "--- join" "== Instance Methods" "= class GServer < Object" "refm/api/src/gserver.rd")
(find-rurima "--- maxConnections -> Fixnum" "== Instance Methods" "= class GServer < Object" "refm/api/src/gserver.rd")
(find-rurima "--- port -> Fixnum" "== Instance Methods" "= class GServer < Object" "refm/api/src/gserver.rd")
(find-rurima "--- serve(io) -> nil" "== Instance Methods" "= class GServer < Object" "refm/api/src/gserver.rd")
(find-rurima "--- shutdown -> true" "== Instance Methods" "= class GServer < Object" "refm/api/src/gserver.rd")
(find-rurima "--- start(maxConnections = -1) -> self" "== Instance Methods" "= class GServer < Object" "refm/api/src/gserver.rd")
(find-rurima "--- stdlog -> IO" "== Instance Methods" "= class GServer < Object" "refm/api/src/gserver.rd")
(find-rurima "--- stdlog=(io)" "== Instance Methods" "= class GServer < Object" "refm/api/src/gserver.rd")
(find-rurima "--- stop -> ()" "== Instance Methods" "= class GServer < Object" "refm/api/src/gserver.rd")
(find-rurima "--- stopped? -> bool" "== Instance Methods" "= class GServer < Object" "refm/api/src/gserver.rd")
(find-rurima "== Protected Instance Methods" "= class GServer < Object" "refm/api/src/gserver.rd")
(find-rurima "--- connecting(client) -> true" "== Protected Instance Methods" "= class GServer < Object" "refm/api/src/gserver.rd")
(find-rurima "--- disconnecting(clientPort) -> ()" "== Protected Instance Methods" "= class GServer < Object" "refm/api/src/gserver.rd")
(find-rurima "--- starting -> ()" "== Protected Instance Methods" "= class GServer < Object" "refm/api/src/gserver.rd")
(find-rurima "--- stopping -> ()" "== Protected Instance Methods" "= class GServer < Object" "refm/api/src/gserver.rd")
(find-rurima "--- error(detail) -> ()" "== Protected Instance Methods" "= class GServer < Object" "refm/api/src/gserver.rd")
(find-rurima "--- log(msg) -> ()" "== Protected Instance Methods" "= class GServer < Object" "refm/api/src/gserver.rd")
(find-rurima "=== 古い CSV ライブラリとの違い" "refm/api/src/csv.rd")
(find-rurima "==== CSV 構文解析" "=== 古い CSV ライブラリとの違い" "refm/api/src/csv.rd")
(find-rurima "==== インターフェイス" "=== 古い CSV ライブラリとの違い" "refm/api/src/csv.rd")
(find-rurima "=== CSV とは" "refm/api/src/csv.rd")
(find-rurima "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "=== 読み込み" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "=== 書き込み" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "=== 一行変換" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "=== ショートカット" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "=== CSV と文字エンコーディング (M17n or Multilingualization)" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "== Constants" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- DateMatcher -> Regexp" "== Constants" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- DateTimeMatcher -> Regexp" "== Constants" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- ConverterEncoding -> Encoding" "== Constants" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- Converters -> Hash" "== Constants" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- HeaderConverters -> Hash" "== Constants" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- DEFAULT_OPTIONS -> Hash" "== Constants" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- VERSION -> String" "== Constants" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "== Singleton Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- new(data, options = Hash.new) -> CSV" "== Singleton Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- dump(ary_of_objs, io = \"\", options = Hash.new) -> String | nil" "== Singleton Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- filter(options = Hash.new){|row| ... }" "== Singleton Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- filter(input, options = Hash.new){|row| ... }" "== Singleton Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- filter(input, output, options = Hash.new){|row| ... }" "== Singleton Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- foreach(path, options = Hash.new){|row| ... } -> nil" "== Singleton Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- generate(str = \"\", options = Hash.new){|csv| ... } -> String" "== Singleton Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- generate_line(row, options = Hash.new) -> String" "== Singleton Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- instance(data = $stdout, options = Hash.new) -> CSV" "== Singleton Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- instance(data = $stdout, options = Hash.new){|csv| ... } -> object" "== Singleton Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- load(io_or_str, options = Hash.new) -> Array" "== Singleton Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- open(filename, mode = \"rb\", options = Hash.new){|csv| ... } -> nil" "== Singleton Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- open(filename, mode = \"rb\", options = Hash.new) -> CSV" "== Singleton Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- open(filename, options = Hash.new){|csv| ... } -> nil" "== Singleton Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- open(filename, options = Hash.new) -> CSV" "== Singleton Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- parse(str, options = Hash.new){|row| ... } -> nil" "== Singleton Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- parse(str, options = Hash.new) -> Array" "== Singleton Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- parse_line(line, options = Hash.new) -> Array" "== Singleton Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- read(path, options = Hash.new) -> [Array]" "== Singleton Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- readlines(path, options = Hash.new) -> [Array]" "== Singleton Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- table(path, options = Hash.new) -> Array" "== Singleton Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "== Instance Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- <<(row)      -> self" "== Instance Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- add_row(row) -> self" "== Instance Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- puts(row)    -> self" "== Instance Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- binmode -> self" "== Instance Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- binmode? -> bool" "== Instance Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- close -> nil" "== Instance Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- close_read -> nil" "== Instance Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- close_write -> nil" "== Instance Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- closed? -> bool" "== Instance Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- col_sep -> String" "== Instance Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- convert(name)" "== Instance Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- convert{|field| ... }" "== Instance Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- convert{|field, field_info| ... }" "== Instance Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- converters -> Array" "== Instance Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- each{|row| ... } -> nil" "== Instance Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- encoding -> Encoding" "== Instance Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- eof -> bool" "== Instance Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- eof? -> bool" "== Instance Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- external_encoding -> Encoding | nil" "== Instance Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- fcntl(cmd, arg = 0)    -> Integer" "== Instance Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- field_size_limit -> Fixnum" "== Instance Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- fileno -> Integer" "== Instance Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- to_i   -> Integer" "== Instance Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- flock(operation)    -> 0 | false" "== Instance Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- flush    -> self" "== Instance Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- force_quotes? -> bool" "== Instance Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- fsync -> 0 | nil" "== Instance Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- header_convert(name)" "== Instance Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- header_convert{|field| ... }" "== Instance Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- header_convert{|field, field_info| ... }" "== Instance Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- header_converters -> Array" "== Instance Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- header_row? -> bool" "== Instance Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- headers -> Array | true | nil" "== Instance Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- inspect -> String" "== Instance Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- internal_encoding   -> Encoding | nil" "== Instance Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- ioctl(cmd, arg = 0)    -> Integer" "== Instance Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- isatty    -> bool" "== Instance Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- tty?      -> bool" "== Instance Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- lineno -> Fixnum" "== Instance Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- path    -> String" "== Instance Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- pid    -> Integer | nil" "== Instance Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- pos    -> Integer" "== Instance Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- tell   -> Integer" "== Instance Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- pos=(n)" "== Instance Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- quote_char -> String" "== Instance Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- read -> [Array]" "== Instance Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- readlines -> [Array]" "== Instance Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- reopen(io) -> self" "== Instance Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- return_headers? -> bool" "== Instance Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- rewind -> 0" "== Instance Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- row_sep -> String" "== Instance Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- seek(offset, whence = IO::SEEK_SET)    -> 0" "== Instance Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- shift    -> Array | CSV::Row" "== Instance Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- gets     -> Array | CSV::Row" "== Instance Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- readline -> Array | CSV::Row" "== Instance Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- skip_blanks? -> bool" "== Instance Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- stat    -> File::Stat" "== Instance Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- string -> String" "== Instance Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- sync -> bool" "== Instance Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- sync=(newstate)" "== Instance Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- to_io -> self" "== Instance Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- truncate(path, length)    -> 0" "== Instance Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- unconverted_fields? -> bool" "== Instance Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- write_headers? -> bool" "== Instance Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "= class CSV::FieldInfo < Struct" "refm/api/src/csv.rd")
(find-rurima "== Instance Methods" "= class CSV::FieldInfo < Struct" "refm/api/src/csv.rd")
(find-rurima "--- index -> Fixnum" "== Instance Methods" "= class CSV::FieldInfo < Struct" "refm/api/src/csv.rd")
(find-rurima "--- index=(val)" "== Instance Methods" "= class CSV::FieldInfo < Struct" "refm/api/src/csv.rd")
(find-rurima "--- line -> Fixnum" "== Instance Methods" "= class CSV::FieldInfo < Struct" "refm/api/src/csv.rd")
(find-rurima "--- line=(val)" "== Instance Methods" "= class CSV::FieldInfo < Struct" "refm/api/src/csv.rd")
(find-rurima "--- header -> Array" "== Instance Methods" "= class CSV::FieldInfo < Struct" "refm/api/src/csv.rd")
(find-rurima "--- header=(val)" "== Instance Methods" "= class CSV::FieldInfo < Struct" "refm/api/src/csv.rd")
(find-rurima "= class CSV::MalformedCSVError < RuntimeError" "refm/api/src/csv.rd")
(find-rurima "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "== Class Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- open(path, mode, fs = nil, rs = nil) {|row| ... } -> nil" "== Class Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- open(path, mode, fs = nil, rs = nil) -> CSV::Reader | CSV::Writer" "== Class Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "===== 注意" "== Class Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- foreach(path, rs = nil) {|row| ... } -> nil" "===== 注意" "== Class Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "===== 注意" "== Class Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- read(path, length = nil, offset = nil) -> Array" "===== 注意" "== Class Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "===== 注意" "== Class Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- readlines(path, rs = nil) -> Array" "===== 注意" "== Class Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "===== 注意" "== Class Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- generate(path, fs = nil, rs = nil) -> CSV::BasicWriter" "===== 注意" "== Class Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- generate(path, fs = nil, rs = nil) {|writer| ... } -> nil" "===== 注意" "== Class Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "===== 注意" "== Class Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- parse(str_or_readable, fs = nil, rs = nil) -> Array" "===== 注意" "== Class Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- parse(str_or_readable, fs = nil, rs = nil){|rows| ... } -> nil" "===== 注意" "== Class Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- generate_line(row, fs = nil, rs = nil) -> String" "===== 注意" "== Class Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- generate_line(row, fs = nil, rs = nil){|s| ... } -> nil" "===== 注意" "== Class Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- parse_line(src, fs = nil, rs = nil) -> Array" "===== 注意" "== Class Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- parse_line(src, fs = nil, rs = nil){|row| ... } -> nil" "===== 注意" "== Class Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- generate_row(src, cells, out_dev, fs = nil, rs = nil) -> Fixnum" "===== 注意" "== Class Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "===== 注意" "== Class Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "--- parse_row(src, index, out_dev, fs = nil, rs = nil) -> Array" "===== 注意" "== Class Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "===== 注意" "== Class Methods" "= class CSV < Object" "refm/api/src/csv.rd")
(find-rurima "=== 使い方" "refm/api/src/logger.rd")
(find-rurima "=== 参考" "refm/api/src/logger.rd")
(find-rurima "= class Logger < Object" "refm/api/src/logger.rd")
(find-rurima "== Class Methods" "= class Logger < Object" "refm/api/src/logger.rd")
(find-rurima "--- new(logdev, shift_age = 0, shift_size = 1048576) -> Logger" "== Class Methods" "= class Logger < Object" "refm/api/src/logger.rd")
(find-rurima "== Instance Methods" "= class Logger < Object" "refm/api/src/logger.rd")
(find-rurima "--- <<(msg) -> Integer | nil" "== Instance Methods" "= class Logger < Object" "refm/api/src/logger.rd")
(find-rurima "--- add(severity, message = nil, progname = nil) -> true" "== Instance Methods" "= class Logger < Object" "refm/api/src/logger.rd")
(find-rurima "--- add(severity, message = nil, progname = nil){ ... } -> true" "== Instance Methods" "= class Logger < Object" "refm/api/src/logger.rd")
(find-rurima "--- log(severity, message = nil, progname = nil) -> true" "== Instance Methods" "= class Logger < Object" "refm/api/src/logger.rd")
(find-rurima "--- log(severity, message = nil, progname = nil){ ... } -> true" "== Instance Methods" "= class Logger < Object" "refm/api/src/logger.rd")
(find-rurima "--- close -> nil" "== Instance Methods" "= class Logger < Object" "refm/api/src/logger.rd")
(find-rurima "--- datetime_format -> String | nil" "== Instance Methods" "= class Logger < Object" "refm/api/src/logger.rd")
(find-rurima "--- datetime_format=(format)" "== Instance Methods" "= class Logger < Object" "refm/api/src/logger.rd")
(find-rurima "--- debug? -> bool" "== Instance Methods" "= class Logger < Object" "refm/api/src/logger.rd")
(find-rurima "--- info? -> bool" "== Instance Methods" "= class Logger < Object" "refm/api/src/logger.rd")
(find-rurima "--- warn? -> bool" "== Instance Methods" "= class Logger < Object" "refm/api/src/logger.rd")
(find-rurima "--- error? -> bool" "== Instance Methods" "= class Logger < Object" "refm/api/src/logger.rd")
(find-rurima "--- fatal? -> bool" "== Instance Methods" "= class Logger < Object" "refm/api/src/logger.rd")
(find-rurima "--- debug(progname = nil) -> true" "== Instance Methods" "= class Logger < Object" "refm/api/src/logger.rd")
(find-rurima "--- debug(progname = nil){ ... } -> true" "== Instance Methods" "= class Logger < Object" "refm/api/src/logger.rd")
(find-rurima "--- info(progname = nil){ ... } -> true" "== Instance Methods" "= class Logger < Object" "refm/api/src/logger.rd")
(find-rurima "--- info(progname = nil) -> true" "== Instance Methods" "= class Logger < Object" "refm/api/src/logger.rd")
(find-rurima "--- warn(progname = nil){ ... } -> true" "== Instance Methods" "= class Logger < Object" "refm/api/src/logger.rd")
(find-rurima "--- warn(progname = nil) -> true" "== Instance Methods" "= class Logger < Object" "refm/api/src/logger.rd")
(find-rurima "--- error(progname = nil){ ... } -> true" "== Instance Methods" "= class Logger < Object" "refm/api/src/logger.rd")
(find-rurima "--- error(progname = nil) -> true" "== Instance Methods" "= class Logger < Object" "refm/api/src/logger.rd")
(find-rurima "--- fatal(progname = nil){ ... } -> true" "== Instance Methods" "= class Logger < Object" "refm/api/src/logger.rd")
(find-rurima "--- fatal(progname = nil) -> true" "== Instance Methods" "= class Logger < Object" "refm/api/src/logger.rd")
(find-rurima "--- unknown(progname = nil){ ... } -> true" "== Instance Methods" "= class Logger < Object" "refm/api/src/logger.rd")
(find-rurima "--- unknown(progname = nil) -> true" "== Instance Methods" "= class Logger < Object" "refm/api/src/logger.rd")
(find-rurima "--- level -> Integer" "== Instance Methods" "= class Logger < Object" "refm/api/src/logger.rd")
(find-rurima "--- sev_threshold -> Integer" "== Instance Methods" "= class Logger < Object" "refm/api/src/logger.rd")
(find-rurima "--- level=(level)" "== Instance Methods" "= class Logger < Object" "refm/api/src/logger.rd")
(find-rurima "--- sev_threshold=(level)" "== Instance Methods" "= class Logger < Object" "refm/api/src/logger.rd")
(find-rurima "--- progname -> String" "== Instance Methods" "= class Logger < Object" "refm/api/src/logger.rd")
(find-rurima "--- progname=(name)" "== Instance Methods" "= class Logger < Object" "refm/api/src/logger.rd")
(find-rurima "--- formatter -> String" "== Instance Methods" "= class Logger < Object" "refm/api/src/logger.rd")
(find-rurima "--- formatter=(formatter)" "== Instance Methods" "= class Logger < Object" "refm/api/src/logger.rd")
(find-rurima "== Constants" "= class Logger < Object" "refm/api/src/logger.rd")
(find-rurima "--- Format -> String" "== Constants" "= class Logger < Object" "refm/api/src/logger.rd")
(find-rurima "--- ProgName -> String" "== Constants" "= class Logger < Object" "refm/api/src/logger.rd")
(find-rurima "--- VERSION -> String" "== Constants" "= class Logger < Object" "refm/api/src/logger.rd")
(find-rurima "--- SEV_LABEL -> Array" "== Constants" "= class Logger < Object" "refm/api/src/logger.rd")
(find-rurima "= class Logger::Application < Object" "refm/api/src/logger.rd")
(find-rurima "=== 使用方法" "= class Logger::Application < Object" "refm/api/src/logger.rd")
(find-rurima "== Class Methods" "= class Logger::Application < Object" "refm/api/src/logger.rd")
(find-rurima "--- new(appname = nil) -> Logger::Application" "== Class Methods" "= class Logger::Application < Object" "refm/api/src/logger.rd")
(find-rurima "== Instance Methods" "= class Logger::Application < Object" "refm/api/src/logger.rd")
(find-rurima "--- appname -> String" "== Instance Methods" "= class Logger::Application < Object" "refm/api/src/logger.rd")
(find-rurima "--- level=(level)" "== Instance Methods" "= class Logger::Application < Object" "refm/api/src/logger.rd")
(find-rurima "--- log(severity, message = nil) -> true" "== Instance Methods" "= class Logger::Application < Object" "refm/api/src/logger.rd")
(find-rurima "--- log(severity, message = nil){ ... } -> true" "== Instance Methods" "= class Logger::Application < Object" "refm/api/src/logger.rd")
(find-rurima "--- log=(logdev)" "== Instance Methods" "= class Logger::Application < Object" "refm/api/src/logger.rd")
(find-rurima "--- logdev -> ()" "== Instance Methods" "= class Logger::Application < Object" "refm/api/src/logger.rd")
(find-rurima "--- set_log(logdev, shift_age = 0, shift_size = 1024000) -> Integer" "== Instance Methods" "= class Logger::Application < Object" "refm/api/src/logger.rd")
(find-rurima "--- start -> ()" "== Instance Methods" "= class Logger::Application < Object" "refm/api/src/logger.rd")
(find-rurima "= class Logger::Formatter < Object" "refm/api/src/logger.rd")
(find-rurima "== Instance Methods" "= class Logger::Formatter < Object" "refm/api/src/logger.rd")
(find-rurima "--- call(severity, time, progname, msg) -> String" "== Instance Methods" "= class Logger::Formatter < Object" "refm/api/src/logger.rd")
(find-rurima "--- datetime_format -> String" "== Instance Methods" "= class Logger::Formatter < Object" "refm/api/src/logger.rd")
(find-rurima "--- datetime_format=(format)" "== Instance Methods" "= class Logger::Formatter < Object" "refm/api/src/logger.rd")
(find-rurima "== Constants" "= class Logger::Formatter < Object" "refm/api/src/logger.rd")
(find-rurima "--- Format -> String" "== Constants" "= class Logger::Formatter < Object" "refm/api/src/logger.rd")
(find-rurima "= class Logger::LogDevice < Object" "refm/api/src/logger.rd")
(find-rurima "== Class Methods" "= class Logger::LogDevice < Object" "refm/api/src/logger.rd")
(find-rurima "--- new(log = nil, opt = {}) -> Logger::LogDevice" "== Class Methods" "= class Logger::LogDevice < Object" "refm/api/src/logger.rd")
(find-rurima "== Instance Methods" "= class Logger::LogDevice < Object" "refm/api/src/logger.rd")
(find-rurima "--- close -> nil" "== Instance Methods" "= class Logger::LogDevice < Object" "refm/api/src/logger.rd")
(find-rurima "--- dev -> IO" "== Instance Methods" "= class Logger::LogDevice < Object" "refm/api/src/logger.rd")
(find-rurima "--- filename -> String | nil" "== Instance Methods" "= class Logger::LogDevice < Object" "refm/api/src/logger.rd")
(find-rurima "--- write(message) -> Integer" "== Instance Methods" "= class Logger::LogDevice < Object" "refm/api/src/logger.rd")
(find-rurima "= class Logger::LogDevice::LogDeviceMutex < Object" "refm/api/src/logger.rd")
(find-rurima "= module Logger::Severity" "refm/api/src/logger.rd")
(find-rurima "== Constants" "= module Logger::Severity" "refm/api/src/logger.rd")
(find-rurima "--- DEBUG -> Integer" "== Constants" "= module Logger::Severity" "refm/api/src/logger.rd")
(find-rurima "--- INFO  -> Integer" "== Constants" "= module Logger::Severity" "refm/api/src/logger.rd")
(find-rurima "--- WARN  -> Integer" "== Constants" "= module Logger::Severity" "refm/api/src/logger.rd")
(find-rurima "--- ERROR -> Integer" "== Constants" "= module Logger::Severity" "refm/api/src/logger.rd")
(find-rurima "--- FATAL -> Integer" "== Constants" "= module Logger::Severity" "refm/api/src/logger.rd")
(find-rurima "--- UNKNOWN -> Integer" "== Constants" "= module Logger::Severity" "refm/api/src/logger.rd")
(find-rurima "= class Logger::Error < RuntimeError" "refm/api/src/logger.rd")
(find-rurima "= class Logger::ShiftingError < Logger::Error" "refm/api/src/logger.rd")
(find-rurima "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "=== 例外" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "== Class Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- new(string = '', mode = 'r+')                 -> StringIO" "== Class Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- open(string = '', mode = 'r+')                -> StringIO" "== Class Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- open(string = '', mode = 'r+') {|io| ... }    -> StringIO" "== Class Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- string    -> String" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- string=(buf)" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- <<(obj)    -> self" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- binmode    -> self" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- close      -> nil" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- close_read    -> nil" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- close_write    -> nil" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- closed?    -> bool" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- closed_read?    -> bool" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- closed_write?    -> bool" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- each(rs = $/){|line| ... }       -> self" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- each_line(rs = $/){|line| ... }  -> self" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- lines(rs = $/){|line| ... }      -> self" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- each(rs = $/)       -> Enumerator" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- each_line(rs = $/)  -> Enumerator" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- lines(rs = $/)      -> Enumerator" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- each(rs = $/)       -> Enumerable::Enumerator" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- each_line(rs = $/)  -> Enumerable::Enumerator" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- lines(rs = $/)      -> Enumerable::Enumerator" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- each_byte{|ch| ... }    -> self" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- bytes{|ch| ... }        -> self" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- each_byte -> Enumerator" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- bytes     -> Enumerator" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- each_byte -> Enumerable::Enumerator" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- bytes     -> Enumerable::Enumerator" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- eof    -> bool" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- eof?   -> bool" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- fcntl    -> ()" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- fileno    -> nil" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- flush    -> self" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- fsync    -> 0" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- getc    -> Integer | nil" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- getbyte -> Integer | nil" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- gets(rs = $/)    -> String | nil" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- isatty    -> false" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- lineno    -> Integer" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- lineno=(n)" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- path    -> nil" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- pid    -> nil" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- pos    -> Integer" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- tell   -> Integer" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- pos=(n)" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- print()        -> nil" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- print(*obj)    -> nil" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- printf(format, *obj)    -> nil" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- putc(ch)    -> object" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- puts(*obj)    -> nil" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- read                  -> String" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- read(len)             -> String | nil" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- read(len, outbuf)     -> String" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- readchar    -> Integer" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- readbyte    -> Integer" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- readline(rs = $/)    -> String" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- readlines(rs = $/)    -> [String]" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- reopen(sio)           -> StringIO" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- reopen(str, mode = 'r+')     -> StringIO" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- rewind    -> 0" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- seek(offset, whence = IO::SEEK_SET)" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- size    -> Integer" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- length  -> Integer" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- sync    -> true" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- sync=(bool)" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- sysread                  -> String" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- sysread(len)             -> String" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- sysread(len, outbuf)     -> String" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- readpartial               -> String" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- readpartial(len)          -> String" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- readpartial(len, outbuf)  -> String" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- read_nonblock(maxlen, outbuf = \"\") -> String" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- syswrite(obj)    -> Integer" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- write_nonblock(obj) -> Integer" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- truncate(len)    -> Integer" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- tty?    -> false" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- ungetc(ch)    -> nil" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- write(obj)    -> Integer" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- each_char{|c| ... } -> self" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- chars{|c| ... }     -> self" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- each_char           -> Enumerator" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- chars               -> Enumerator" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- each_char           -> Enumerable::Enumerator" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- chars               -> Enumerable::Enumerator" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- ungetbyte(char) -> nil" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- set_encoding(encoding) -> self" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- external_encoding -> Encoding" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- internal_encoding -> Encoding" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- codepoints{|codepoint| ... } -> self" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- codepoints -> Enumerator" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- each_codepoint{|codepoint| ... } -> self" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "--- each_codepoint -> Enumerator" "== Instance Methods" "= class StringIO < Data" "refm/api/src/stringio.rd")
(find-rurima "= reopen Kernel" "refm/api/src/rational.rd")
(find-rurima "== Module Functions" "= reopen Kernel" "refm/api/src/rational.rd")
(find-rurima "--- Rational(num, den = 1) -> Rational" "== Module Functions" "= reopen Kernel" "refm/api/src/rational.rd")
(find-rurima "= redefine Integer" "refm/api/src/rational.rd")
(find-rurima "== Instance Methods" "= redefine Integer" "refm/api/src/rational.rd")
(find-rurima "--- /(other)   -> Rational | Float | Integer" "== Instance Methods" "= redefine Integer" "refm/api/src/rational.rd")
(find-rurima "--- **(other)  -> Rational | Float | Integer" "== Instance Methods" "= redefine Integer" "refm/api/src/rational.rd")
(find-rurima "= reopen Integer" "refm/api/src/rational.rd")
(find-rurima "== Instance Methods" "= reopen Integer" "refm/api/src/rational.rd")
(find-rurima "--- power!(other) -> Integer | Float" "== Instance Methods" "= reopen Integer" "refm/api/src/rational.rd")
(find-rurima "--- to_r -> Rational" "== Instance Methods" "= reopen Integer" "refm/api/src/rational.rd")
(find-rurima "--- gcd(n) -> Integer" "== Instance Methods" "= reopen Integer" "refm/api/src/rational.rd")
(find-rurima "--- lcm(n) -> Integer" "== Instance Methods" "= reopen Integer" "refm/api/src/rational.rd")
(find-rurima "--- gcdlcm(n) -> [Integer]" "== Instance Methods" "= reopen Integer" "refm/api/src/rational.rd")
(find-rurima "--- numerator -> Integer" "== Instance Methods" "= reopen Integer" "refm/api/src/rational.rd")
(find-rurima "--- denominator -> Integer" "== Instance Methods" "= reopen Integer" "refm/api/src/rational.rd")
(find-rurima "= redefine Fixnum" "refm/api/src/rational.rd")
(find-rurima "== Instance Methods" "= redefine Fixnum" "refm/api/src/rational.rd")
(find-rurima "--- quo(other) -> Rational" "== Instance Methods" "= redefine Fixnum" "refm/api/src/rational.rd")
(find-rurima "--- **(other) -> Integer | Float | Rational" "== Instance Methods" "= redefine Fixnum" "refm/api/src/rational.rd")
(find-rurima "--- rpower (other) -> Integer | Float | Rational" "== Instance Methods" "= redefine Fixnum" "refm/api/src/rational.rd")
(find-rurima "= reopen Fixnum" "refm/api/src/rational.rd")
(find-rurima "== Instance Methods" "= reopen Fixnum" "refm/api/src/rational.rd")
(find-rurima "--- power!(other) -> Integer | Float" "== Instance Methods" "= reopen Fixnum" "refm/api/src/rational.rd")
(find-rurima "--- gcd(other) -> Integer" "== Instance Methods" "= reopen Fixnum" "refm/api/src/rational.rd")
(find-rurima "= redefine Bignum" "refm/api/src/rational.rd")
(find-rurima "== Instance Methods" "= redefine Bignum" "refm/api/src/rational.rd")
(find-rurima "--- quo(other) -> Rational" "== Instance Methods" "= redefine Bignum" "refm/api/src/rational.rd")
(find-rurima "--- **(other) -> Integer | Float | Rational" "== Instance Methods" "= redefine Bignum" "refm/api/src/rational.rd")
(find-rurima "--- rpower (other) -> Integer | Float | Rational" "== Instance Methods" "= redefine Bignum" "refm/api/src/rational.rd")
(find-rurima "= reopen  Bignum" "refm/api/src/rational.rd")
(find-rurima "== Instance Methods" "= reopen  Bignum" "refm/api/src/rational.rd")
(find-rurima "--- power!(other) -> Integer | Float" "== Instance Methods" "= reopen  Bignum" "refm/api/src/rational.rd")
(find-rurima "= class Rational < Numeric" "refm/api/src/rational.rd")
(find-rurima "== Class Methods" "= class Rational < Numeric" "refm/api/src/rational.rd")
(find-rurima "--- new!(num, den = 1) -> Rational" "== Class Methods" "= class Rational < Numeric" "refm/api/src/rational.rd")
(find-rurima "--- reduce(num, den = 1) -> Rational" "== Class Methods" "= class Rational < Numeric" "refm/api/src/rational.rd")
(find-rurima "== Instance Methods" "= class Rational < Numeric" "refm/api/src/rational.rd")
(find-rurima "--- numerator -> Integer" "== Instance Methods" "= class Rational < Numeric" "refm/api/src/rational.rd")
(find-rurima "--- denominator -> Integer" "== Instance Methods" "= class Rational < Numeric" "refm/api/src/rational.rd")
(find-rurima "--- +(other) -> Rational | Float" "== Instance Methods" "= class Rational < Numeric" "refm/api/src/rational.rd")
(find-rurima "--- -(other) -> Rational | Float" "== Instance Methods" "= class Rational < Numeric" "refm/api/src/rational.rd")
(find-rurima "--- *(other) -> Rational | Float" "== Instance Methods" "= class Rational < Numeric" "refm/api/src/rational.rd")
(find-rurima "--- /(other)   -> Rational | Float" "== Instance Methods" "= class Rational < Numeric" "refm/api/src/rational.rd")
(find-rurima "--- %(other)      -> Rational | Float" "== Instance Methods" "= class Rational < Numeric" "refm/api/src/rational.rd")
(find-rurima "--- **(other) -> Rational | Float" "== Instance Methods" "= class Rational < Numeric" "refm/api/src/rational.rd")
(find-rurima "--- div(other) -> Integer" "== Instance Methods" "= class Rational < Numeric" "refm/api/src/rational.rd")
(find-rurima "--- divmod(other) -> [Integer, Float | Rational]" "== Instance Methods" "= class Rational < Numeric" "refm/api/src/rational.rd")
(find-rurima "--- abs -> Rational" "== Instance Methods" "= class Rational < Numeric" "refm/api/src/rational.rd")
(find-rurima "--- ==(other) -> bool" "== Instance Methods" "= class Rational < Numeric" "refm/api/src/rational.rd")
(find-rurima "--- <=>(other) -> -1 | 0 | 1 | nil" "== Instance Methods" "= class Rational < Numeric" "refm/api/src/rational.rd")
(find-rurima "--- coerce(other) -> Array" "== Instance Methods" "= class Rational < Numeric" "refm/api/src/rational.rd")
(find-rurima "--- floor -> Integer" "== Instance Methods" "= class Rational < Numeric" "refm/api/src/rational.rd")
(find-rurima "--- ceil                -> Integer" "== Instance Methods" "= class Rational < Numeric" "refm/api/src/rational.rd")
(find-rurima "--- round -> Integer" "== Instance Methods" "= class Rational < Numeric" "refm/api/src/rational.rd")
(find-rurima "--- truncate -> Integer" "== Instance Methods" "= class Rational < Numeric" "refm/api/src/rational.rd")
(find-rurima "--- to_i -> Integer" "== Instance Methods" "= class Rational < Numeric" "refm/api/src/rational.rd")
(find-rurima "--- to_f -> Float" "== Instance Methods" "= class Rational < Numeric" "refm/api/src/rational.rd")
(find-rurima "--- to_s -> String" "== Instance Methods" "= class Rational < Numeric" "refm/api/src/rational.rd")
(find-rurima "--- to_r -> Rational" "== Instance Methods" "= class Rational < Numeric" "refm/api/src/rational.rd")
(find-rurima "--- hash -> Integer" "== Instance Methods" "= class Rational < Numeric" "refm/api/src/rational.rd")
(find-rurima "--- inspect -> String" "== Instance Methods" "= class Rational < Numeric" "refm/api/src/rational.rd")
(find-rurima "--- -@ -> Rational" "== Instance Methods" "= class Rational < Numeric" "refm/api/src/rational.rd")
(find-rurima "--- zero? -> bool" "== Instance Methods" "= class Rational < Numeric" "refm/api/src/rational.rd")
(find-rurima "--- nonzero? -> bool" "== Instance Methods" "= class Rational < Numeric" "refm/api/src/rational.rd")
(find-rurima "=== 例:" "refm/api/src/resolv.rd")
(find-rurima "=== Bugs" "refm/api/src/resolv.rd")
(find-rurima "= class Resolv < Object" "refm/api/src/resolv.rd")
(find-rurima "== Class Methods" "= class Resolv < Object" "refm/api/src/resolv.rd")
(find-rurima "--- new(resolvers = [Hosts.new, DNS.new]) -> Resolv" "== Class Methods" "= class Resolv < Object" "refm/api/src/resolv.rd")
(find-rurima "--- getaddress(name) -> String" "== Class Methods" "= class Resolv < Object" "refm/api/src/resolv.rd")
(find-rurima "--- getaddresses(name) -> [String]" "== Class Methods" "= class Resolv < Object" "refm/api/src/resolv.rd")
(find-rurima "--- each_address(name) {|address| ...} -> ()" "== Class Methods" "= class Resolv < Object" "refm/api/src/resolv.rd")
(find-rurima "--- getname(address) -> String" "== Class Methods" "= class Resolv < Object" "refm/api/src/resolv.rd")
(find-rurima "--- getnames(address) -> [String]" "== Class Methods" "= class Resolv < Object" "refm/api/src/resolv.rd")
(find-rurima "--- each_name(address) {|name| ...} -> ()" "== Class Methods" "= class Resolv < Object" "refm/api/src/resolv.rd")
(find-rurima "== Instance Methods" "= class Resolv < Object" "refm/api/src/resolv.rd")
(find-rurima "--- getaddress(name) -> String" "== Instance Methods" "= class Resolv < Object" "refm/api/src/resolv.rd")
(find-rurima "--- getaddresses(name) -> [String]" "== Instance Methods" "= class Resolv < Object" "refm/api/src/resolv.rd")
(find-rurima "--- each_address(name) {|name| ...} -> ()" "== Instance Methods" "= class Resolv < Object" "refm/api/src/resolv.rd")
(find-rurima "--- getname(address) -> String" "== Instance Methods" "= class Resolv < Object" "refm/api/src/resolv.rd")
(find-rurima "--- getnames(address) -> [String]" "== Instance Methods" "= class Resolv < Object" "refm/api/src/resolv.rd")
(find-rurima "--- each_name(address) {|name| ...} -> ()" "== Instance Methods" "= class Resolv < Object" "refm/api/src/resolv.rd")
(find-rurima "== Constants" "= class Resolv < Object" "refm/api/src/resolv.rd")
(find-rurima "--- DefaultResolver -> Resolv" "== Constants" "= class Resolv < Object" "refm/api/src/resolv.rd")
(find-rurima "--- AddressRegex -> Regexp" "== Constants" "= class Resolv < Object" "refm/api/src/resolv.rd")
(find-rurima "= class Resolv::ResolvError < StandardError" "refm/api/src/resolv.rd")
(find-rurima "= class Resolv::Hosts < Object" "refm/api/src/resolv.rd")
(find-rurima "== Class Methods" "= class Resolv::Hosts < Object" "refm/api/src/resolv.rd")
(find-rurima "--- new(hosts = DefaultFileName) -> Resolv::Hosts" "== Class Methods" "= class Resolv::Hosts < Object" "refm/api/src/resolv.rd")
(find-rurima "== Instance Methods" "= class Resolv::Hosts < Object" "refm/api/src/resolv.rd")
(find-rurima "--- getaddress(name) -> String" "== Instance Methods" "= class Resolv::Hosts < Object" "refm/api/src/resolv.rd")
(find-rurima "--- getaddresses(name) -> [String]" "== Instance Methods" "= class Resolv::Hosts < Object" "refm/api/src/resolv.rd")
(find-rurima "--- each_address(name) {|name| ...} -> ()" "== Instance Methods" "= class Resolv::Hosts < Object" "refm/api/src/resolv.rd")
(find-rurima "--- getname(address) -> String" "== Instance Methods" "= class Resolv::Hosts < Object" "refm/api/src/resolv.rd")
(find-rurima "--- getnames(address) -> [String]" "== Instance Methods" "= class Resolv::Hosts < Object" "refm/api/src/resolv.rd")
(find-rurima "--- each_name(address) {|name| ...} -> ()" "== Instance Methods" "= class Resolv::Hosts < Object" "refm/api/src/resolv.rd")
(find-rurima "== Constants" "= class Resolv::Hosts < Object" "refm/api/src/resolv.rd")
(find-rurima "--- DefaultFileName -> String" "== Constants" "= class Resolv::Hosts < Object" "refm/api/src/resolv.rd")
(find-rurima "= class Resolv::DNS < Object" "refm/api/src/resolv.rd")
(find-rurima "== Class Methods" "= class Resolv::DNS < Object" "refm/api/src/resolv.rd")
(find-rurima "--- new(resolv_conf = '/etc/resolv.conf') -> Resolv::DNS" "== Class Methods" "= class Resolv::DNS < Object" "refm/api/src/resolv.rd")
(find-rurima "--- new(resolv_conf = nil) -> Resolv::DNS" "== Class Methods" "= class Resolv::DNS < Object" "refm/api/src/resolv.rd")
(find-rurima "--- open(*args) -> Resolv::DNS" "== Class Methods" "= class Resolv::DNS < Object" "refm/api/src/resolv.rd")
(find-rurima "--- open(*args){|dns| ...} -> object" "== Class Methods" "= class Resolv::DNS < Object" "refm/api/src/resolv.rd")
(find-rurima "== Instance Methods" "= class Resolv::DNS < Object" "refm/api/src/resolv.rd")
(find-rurima "--- getaddress(name) -> Resolv::IPv4 | Resolv::IPv6" "== Instance Methods" "= class Resolv::DNS < Object" "refm/api/src/resolv.rd")
(find-rurima "--- getaddresses(name) -> [Resolv::IPv4 | Resolv::IPv6]" "== Instance Methods" "= class Resolv::DNS < Object" "refm/api/src/resolv.rd")
(find-rurima "--- each_address(name) {|name| ...} -> ()" "== Instance Methods" "= class Resolv::DNS < Object" "refm/api/src/resolv.rd")
(find-rurima "--- getname(address) -> Resolv::DNS::Name" "== Instance Methods" "= class Resolv::DNS < Object" "refm/api/src/resolv.rd")
(find-rurima "--- getnames(address) -> [Resolv::DNS::Name]" "== Instance Methods" "= class Resolv::DNS < Object" "refm/api/src/resolv.rd")
(find-rurima "--- each_name(address) {|name| ...} -> ()" "== Instance Methods" "= class Resolv::DNS < Object" "refm/api/src/resolv.rd")
(find-rurima "--- getresource(name, typeclass) -> Resolv::DNS::Resource" "== Instance Methods" "= class Resolv::DNS < Object" "refm/api/src/resolv.rd")
(find-rurima "--- getresources(name, typeclass) -> [Resolv::DNS::Resource]" "== Instance Methods" "= class Resolv::DNS < Object" "refm/api/src/resolv.rd")
(find-rurima "--- each_resource(name, typeclass) {|resource| ...} -> ()" "== Instance Methods" "= class Resolv::DNS < Object" "refm/api/src/resolv.rd")
(find-rurima "--- close -> ()" "== Instance Methods" "= class Resolv::DNS < Object" "refm/api/src/resolv.rd")
(find-rurima "== Constants" "= class Resolv::DNS < Object" "refm/api/src/resolv.rd")
(find-rurima "--- Port -> Integer" "== Constants" "= class Resolv::DNS < Object" "refm/api/src/resolv.rd")
(find-rurima "--- UDPSize -> Integer" "== Constants" "= class Resolv::DNS < Object" "refm/api/src/resolv.rd")
(find-rurima "= class Resolv::DNS::Requester::RequestError < StandardError" "refm/api/src/resolv.rd")
(find-rurima "= class Resolv::DNS::Resource::Generic < Resolv::DNS::Resource" "refm/api/src/resolv.rd")
(find-rurima "== Class Methods" "= class Resolv::DNS::Resource::Generic < Resolv::DNS::Resource" "refm/api/src/resolv.rd")
(find-rurima "== Instance Methods" "= class Resolv::DNS::Resource::Generic < Resolv::DNS::Resource" "refm/api/src/resolv.rd")
(find-rurima "= class Resolv::DNS::Resource::DomainName < Resolv::DNS::Resource" "refm/api/src/resolv.rd")
(find-rurima "== Class Methods" "= class Resolv::DNS::Resource::DomainName < Resolv::DNS::Resource" "refm/api/src/resolv.rd")
(find-rurima "== Instance Methods" "= class Resolv::DNS::Resource::DomainName < Resolv::DNS::Resource" "refm/api/src/resolv.rd")
(find-rurima "--- name -> Resolv::DNS::Name" "== Instance Methods" "= class Resolv::DNS::Resource::DomainName < Resolv::DNS::Resource" "refm/api/src/resolv.rd")
(find-rurima "= class Resolv::DNS::Resource::NS < Resolv::DNS::Resource::DomainName" "refm/api/src/resolv.rd")
(find-rurima "= class Resolv::DNS::Resource::CNAME < Resolv::DNS::Resource::DomainName" "refm/api/src/resolv.rd")
(find-rurima "= class Resolv::DNS::Resource::SOA < Resolv::DNS::Resource" "refm/api/src/resolv.rd")
(find-rurima "== Class Methods" "= class Resolv::DNS::Resource::SOA < Resolv::DNS::Resource" "refm/api/src/resolv.rd")
(find-rurima "--- new(mname, rname, serial, refresh, retry_, expire, minimum)" "== Class Methods" "= class Resolv::DNS::Resource::SOA < Resolv::DNS::Resource" "refm/api/src/resolv.rd")
(find-rurima "== Instance Methods" "= class Resolv::DNS::Resource::SOA < Resolv::DNS::Resource" "refm/api/src/resolv.rd")
(find-rurima "--- mname -> Resolv::DNS::Name" "== Instance Methods" "= class Resolv::DNS::Resource::SOA < Resolv::DNS::Resource" "refm/api/src/resolv.rd")
(find-rurima "--- rname -> Resolv::DNS::Name" "== Instance Methods" "= class Resolv::DNS::Resource::SOA < Resolv::DNS::Resource" "refm/api/src/resolv.rd")
(find-rurima "--- serial -> Integer" "== Instance Methods" "= class Resolv::DNS::Resource::SOA < Resolv::DNS::Resource" "refm/api/src/resolv.rd")
(find-rurima "--- refresh -> Integer" "== Instance Methods" "= class Resolv::DNS::Resource::SOA < Resolv::DNS::Resource" "refm/api/src/resolv.rd")
(find-rurima "--- retry -> Integer" "== Instance Methods" "= class Resolv::DNS::Resource::SOA < Resolv::DNS::Resource" "refm/api/src/resolv.rd")
(find-rurima "--- expire -> Integer" "== Instance Methods" "= class Resolv::DNS::Resource::SOA < Resolv::DNS::Resource" "refm/api/src/resolv.rd")
(find-rurima "--- minimum -> Integer" "== Instance Methods" "= class Resolv::DNS::Resource::SOA < Resolv::DNS::Resource" "refm/api/src/resolv.rd")
(find-rurima "= class Resolv::DNS::Resource::PTR < Resolv::DNS::Resource::DomainName" "refm/api/src/resolv.rd")
(find-rurima "= class Resolv::DNS::Resource::HINFO < Resolv::DNS::Resource" "refm/api/src/resolv.rd")
(find-rurima "== Class Methods" "= class Resolv::DNS::Resource::HINFO < Resolv::DNS::Resource" "refm/api/src/resolv.rd")
(find-rurima "--- new(cpu, os) -> Resolv::DNS::Resource::HINFO" "== Class Methods" "= class Resolv::DNS::Resource::HINFO < Resolv::DNS::Resource" "refm/api/src/resolv.rd")
(find-rurima "== Instance Methods" "= class Resolv::DNS::Resource::HINFO < Resolv::DNS::Resource" "refm/api/src/resolv.rd")
(find-rurima "--- cpu -> String" "== Instance Methods" "= class Resolv::DNS::Resource::HINFO < Resolv::DNS::Resource" "refm/api/src/resolv.rd")
(find-rurima "--- os -> String" "== Instance Methods" "= class Resolv::DNS::Resource::HINFO < Resolv::DNS::Resource" "refm/api/src/resolv.rd")
(find-rurima "= class Resolv::DNS::Resource::MINFO < Resolv::DNS::Resource" "refm/api/src/resolv.rd")
(find-rurima "== Class Methods" "= class Resolv::DNS::Resource::MINFO < Resolv::DNS::Resource" "refm/api/src/resolv.rd")
(find-rurima "--- new(rmailbx, emailbx) -> Resolv::DNS::Resource::MINFO" "== Class Methods" "= class Resolv::DNS::Resource::MINFO < Resolv::DNS::Resource" "refm/api/src/resolv.rd")
(find-rurima "== Instance Methods" "= class Resolv::DNS::Resource::MINFO < Resolv::DNS::Resource" "refm/api/src/resolv.rd")
(find-rurima "--- rmailbx -> String" "== Instance Methods" "= class Resolv::DNS::Resource::MINFO < Resolv::DNS::Resource" "refm/api/src/resolv.rd")
(find-rurima "--- emailbx -> String" "== Instance Methods" "= class Resolv::DNS::Resource::MINFO < Resolv::DNS::Resource" "refm/api/src/resolv.rd")
(find-rurima "= class Resolv::DNS::Resource::MX < Resolv::DNS::Resource" "refm/api/src/resolv.rd")
(find-rurima "== Class Methods" "= class Resolv::DNS::Resource::MX < Resolv::DNS::Resource" "refm/api/src/resolv.rd")
(find-rurima "--- new(preference, exchange) -> Resolv::DNS::Resource::MX" "== Class Methods" "= class Resolv::DNS::Resource::MX < Resolv::DNS::Resource" "refm/api/src/resolv.rd")
(find-rurima "== Instance Methods" "= class Resolv::DNS::Resource::MX < Resolv::DNS::Resource" "refm/api/src/resolv.rd")
(find-rurima "--- preference -> Integer" "== Instance Methods" "= class Resolv::DNS::Resource::MX < Resolv::DNS::Resource" "refm/api/src/resolv.rd")
(find-rurima "--- exchange -> Resolv::DNS::Name" "== Instance Methods" "= class Resolv::DNS::Resource::MX < Resolv::DNS::Resource" "refm/api/src/resolv.rd")
(find-rurima "= class Resolv::DNS::Resource::TXT < Resolv::DNS::Resource" "refm/api/src/resolv.rd")
(find-rurima "== Class Methods" "= class Resolv::DNS::Resource::TXT < Resolv::DNS::Resource" "refm/api/src/resolv.rd")
(find-rurima "--- new(first_string, *rest_strings) -> Resolv::DNS::Resource::TXT" "== Class Methods" "= class Resolv::DNS::Resource::TXT < Resolv::DNS::Resource" "refm/api/src/resolv.rd")
(find-rurima "== Instance Methods" "= class Resolv::DNS::Resource::TXT < Resolv::DNS::Resource" "refm/api/src/resolv.rd")
(find-rurima "--- data -> String" "== Instance Methods" "= class Resolv::DNS::Resource::TXT < Resolv::DNS::Resource" "refm/api/src/resolv.rd")
(find-rurima "--- strings -> [String]" "== Instance Methods" "= class Resolv::DNS::Resource::TXT < Resolv::DNS::Resource" "refm/api/src/resolv.rd")
(find-rurima "= class Resolv::DNS::Resource::ANY < Resolv::DNS::Query " "refm/api/src/resolv.rd")
(find-rurima "= module Resolv::DNS::Resource::IN" "refm/api/src/resolv.rd")
(find-rurima "= class Resolv::DNS::Resource::IN::NS < Resolv::DNS::Resource::NS" "refm/api/src/resolv.rd")
(find-rurima "= class Resolv::DNS::Resource::IN::CNAME < Resolv::DNS::Resource::CNAME" "refm/api/src/resolv.rd")
(find-rurima "= class Resolv::DNS::Resource::IN::SOA < Resolv::DNS::Resource::SOA" "refm/api/src/resolv.rd")
(find-rurima "= class Resolv::DNS::Resource::IN::HINFO < Resolv::DNS::Resource::HINFO" "refm/api/src/resolv.rd")
(find-rurima "= class Resolv::DNS::Resource::IN::MINFO < Resolv::DNS::Resource::MINFO" "refm/api/src/resolv.rd")
(find-rurima "= class Resolv::DNS::Resource::IN::MX < Resolv::DNS::Resource::MX" "refm/api/src/resolv.rd")
(find-rurima "= class Resolv::DNS::Resource::IN::TXT < Resolv::DNS::Resource::TXT" "refm/api/src/resolv.rd")
(find-rurima "= class Resolv::DNS::Resource::IN::ANY < Resolv::DNS::Resource::ANY" "refm/api/src/resolv.rd")
(find-rurima "= class Resolv::DNS::Resource::IN::A < Resolv::DNS::Resource" "refm/api/src/resolv.rd")
(find-rurima "== Class Methods" "= class Resolv::DNS::Resource::IN::A < Resolv::DNS::Resource" "refm/api/src/resolv.rd")
(find-rurima "--- new(address) -> Resolv::DNS::Resource::IN::A" "== Class Methods" "= class Resolv::DNS::Resource::IN::A < Resolv::DNS::Resource" "refm/api/src/resolv.rd")
(find-rurima "== Instance Methods" "= class Resolv::DNS::Resource::IN::A < Resolv::DNS::Resource" "refm/api/src/resolv.rd")
(find-rurima "--- address -> Resolv::IPv4" "== Instance Methods" "= class Resolv::DNS::Resource::IN::A < Resolv::DNS::Resource" "refm/api/src/resolv.rd")
(find-rurima "= class Resolv::DNS::Resource::IN::WKS < Resolv::DNS::Resource" "refm/api/src/resolv.rd")
(find-rurima "== Class Methods" "= class Resolv::DNS::Resource::IN::WKS < Resolv::DNS::Resource" "refm/api/src/resolv.rd")
(find-rurima "--- new(address, protocol, bitmap) -> Resolv::DNS::Resource::IN::WKS" "== Class Methods" "= class Resolv::DNS::Resource::IN::WKS < Resolv::DNS::Resource" "refm/api/src/resolv.rd")
(find-rurima "== Instance Methods" "= class Resolv::DNS::Resource::IN::WKS < Resolv::DNS::Resource" "refm/api/src/resolv.rd")
(find-rurima "--- address -> Resolv::IPv4" "== Instance Methods" "= class Resolv::DNS::Resource::IN::WKS < Resolv::DNS::Resource" "refm/api/src/resolv.rd")
(find-rurima "--- protocol -> Integer" "== Instance Methods" "= class Resolv::DNS::Resource::IN::WKS < Resolv::DNS::Resource" "refm/api/src/resolv.rd")
(find-rurima "--- bitmap -> String" "== Instance Methods" "= class Resolv::DNS::Resource::IN::WKS < Resolv::DNS::Resource" "refm/api/src/resolv.rd")
(find-rurima "= class Resolv::DNS::Resource::IN::PTR < Resolv::DNS::Resource::PTR" "refm/api/src/resolv.rd")
(find-rurima "= class Resolv::DNS::Resource::IN::AAAA < Resolv::DNS::Resource" "refm/api/src/resolv.rd")
(find-rurima "== Class Methods" "= class Resolv::DNS::Resource::IN::AAAA < Resolv::DNS::Resource" "refm/api/src/resolv.rd")
(find-rurima "--- new(address) -> Resolv::DNS::Resource::IN::AAAA" "== Class Methods" "= class Resolv::DNS::Resource::IN::AAAA < Resolv::DNS::Resource" "refm/api/src/resolv.rd")
(find-rurima "== Instance Methods" "= class Resolv::DNS::Resource::IN::AAAA < Resolv::DNS::Resource" "refm/api/src/resolv.rd")
(find-rurima "--- address -> Resolv::IPv6" "== Instance Methods" "= class Resolv::DNS::Resource::IN::AAAA < Resolv::DNS::Resource" "refm/api/src/resolv.rd")
(find-rurima "= class Resolv::DNS::Resource::IN::SRV < Resolv::DNS::Resource" "refm/api/src/resolv.rd")
(find-rurima "== Class Methods" "= class Resolv::DNS::Resource::IN::SRV < Resolv::DNS::Resource" "refm/api/src/resolv.rd")
(find-rurima "--- new(priority, weight, port, target) -> Resolv::DNS::Resource::IN::SRV" "== Class Methods" "= class Resolv::DNS::Resource::IN::SRV < Resolv::DNS::Resource" "refm/api/src/resolv.rd")
(find-rurima "== Instance Methods" "= class Resolv::DNS::Resource::IN::SRV < Resolv::DNS::Resource" "refm/api/src/resolv.rd")
(find-rurima "--- port -> Integer" "== Instance Methods" "= class Resolv::DNS::Resource::IN::SRV < Resolv::DNS::Resource" "refm/api/src/resolv.rd")
(find-rurima "--- priority -> Integer" "== Instance Methods" "= class Resolv::DNS::Resource::IN::SRV < Resolv::DNS::Resource" "refm/api/src/resolv.rd")
(find-rurima "--- target -> Resolv::DNS::Name" "== Instance Methods" "= class Resolv::DNS::Resource::IN::SRV < Resolv::DNS::Resource" "refm/api/src/resolv.rd")
(find-rurima "--- weight -> Integer" "== Instance Methods" "= class Resolv::DNS::Resource::IN::SRV < Resolv::DNS::Resource" "refm/api/src/resolv.rd")
(find-rurima "= class Resolv::DNS::DecodeError < StandardError" "refm/api/src/resolv.rd")
(find-rurima "= class Resolv::DNS::EncodeError < StandardError" "refm/api/src/resolv.rd")
(find-rurima "= class Resolv::DNS::Config::OtherResolvError < Resolv::ResolvError" "refm/api/src/resolv.rd")
(find-rurima "= class Resolv::DNS::Query < Object" "refm/api/src/resolv.rd")
(find-rurima "= class Resolv::DNS::Name < Object" "refm/api/src/resolv.rd")
(find-rurima "== Class Methods" "= class Resolv::DNS::Name < Object" "refm/api/src/resolv.rd")
(find-rurima "--- create(name) -> Resolv::DNS::Name" "== Class Methods" "= class Resolv::DNS::Name < Object" "refm/api/src/resolv.rd")
(find-rurima "--- new(labels, absolute = true) -> Resolv::DNS::Name" "== Class Methods" "= class Resolv::DNS::Name < Object" "refm/api/src/resolv.rd")
(find-rurima "== Instance Methods" "= class Resolv::DNS::Name < Object" "refm/api/src/resolv.rd")
(find-rurima "--- to_s -> String" "== Instance Methods" "= class Resolv::DNS::Name < Object" "refm/api/src/resolv.rd")
(find-rurima "--- absolute? -> bool" "== Instance Methods" "= class Resolv::DNS::Name < Object" "refm/api/src/resolv.rd")
(find-rurima "--- subdomain_of?(other) -> bool" "== Instance Methods" "= class Resolv::DNS::Name < Object" "refm/api/src/resolv.rd")
(find-rurima "=== 例" "== Instance Methods" "= class Resolv::DNS::Name < Object" "refm/api/src/resolv.rd")
(find-rurima "= class Resolv::DNS::Resource < Resolv::DNS::Query" "refm/api/src/resolv.rd")
(find-rurima "= class Resolv::IPv4 < Object" "refm/api/src/resolv.rd")
(find-rurima "== Class Methods" "= class Resolv::IPv4 < Object" "refm/api/src/resolv.rd")
(find-rurima "--- create(address) -> Resolv::IPv4" "== Class Methods" "= class Resolv::IPv4 < Object" "refm/api/src/resolv.rd")
(find-rurima "--- new(address) -> Resolv::IPv4" "== Class Methods" "= class Resolv::IPv4 < Object" "refm/api/src/resolv.rd")
(find-rurima "== Instance Methods" "= class Resolv::IPv4 < Object" "refm/api/src/resolv.rd")
(find-rurima "--- address -> String" "== Instance Methods" "= class Resolv::IPv4 < Object" "refm/api/src/resolv.rd")
(find-rurima "--- to_s -> String" "== Instance Methods" "= class Resolv::IPv4 < Object" "refm/api/src/resolv.rd")
(find-rurima "--- to_name -> Resolv::DNS::Name" "== Instance Methods" "= class Resolv::IPv4 < Object" "refm/api/src/resolv.rd")
(find-rurima "== Constants" "= class Resolv::IPv4 < Object" "refm/api/src/resolv.rd")
(find-rurima "--- Regex -> Regexp" "== Constants" "= class Resolv::IPv4 < Object" "refm/api/src/resolv.rd")
(find-rurima "= class Resolv::IPv6 < Object" "refm/api/src/resolv.rd")
(find-rurima "== Class Methods" "= class Resolv::IPv6 < Object" "refm/api/src/resolv.rd")
(find-rurima "--- create(address)" "== Class Methods" "= class Resolv::IPv6 < Object" "refm/api/src/resolv.rd")
(find-rurima "--- new(address)" "== Class Methods" "= class Resolv::IPv6 < Object" "refm/api/src/resolv.rd")
(find-rurima "== Instance Methods" "= class Resolv::IPv6 < Object" "refm/api/src/resolv.rd")
(find-rurima "--- address -> String" "== Instance Methods" "= class Resolv::IPv6 < Object" "refm/api/src/resolv.rd")
(find-rurima "--- to_s -> String" "== Instance Methods" "= class Resolv::IPv6 < Object" "refm/api/src/resolv.rd")
(find-rurima "--- to_name -> Resolv::DNS::Name" "== Instance Methods" "= class Resolv::IPv6 < Object" "refm/api/src/resolv.rd")
(find-rurima "== Constants" "= class Resolv::IPv6 < Object" "refm/api/src/resolv.rd")
(find-rurima "--- Regex -> Regexp" "== Constants" "= class Resolv::IPv6 < Object" "refm/api/src/resolv.rd")
(find-rurima "--- Regex_6Hex4Dec -> Regexp" "== Constants" "= class Resolv::IPv6 < Object" "refm/api/src/resolv.rd")
(find-rurima "--- Regex_8Hex -> Regexp" "== Constants" "= class Resolv::IPv6 < Object" "refm/api/src/resolv.rd")
(find-rurima "--- Regex_CompressedHex -> Regexp" "== Constants" "= class Resolv::IPv6 < Object" "refm/api/src/resolv.rd")
(find-rurima "--- Regex_CompressedHex4Dec -> Regexp" "== Constants" "= class Resolv::IPv6 < Object" "refm/api/src/resolv.rd")
(find-rurima "=== Example" "refm/api/src/tsort.rd")
(find-rurima "=== より現実的な例" "refm/api/src/tsort.rd")
(find-rurima "=== Bugs" "refm/api/src/tsort.rd")
(find-rurima "=== References" "refm/api/src/tsort.rd")
(find-rurima "= module TSort" "refm/api/src/tsort.rd")
(find-rurima "== Instance Methods" "= module TSort" "refm/api/src/tsort.rd")
(find-rurima "--- tsort -> Array" "== Instance Methods" "= module TSort" "refm/api/src/tsort.rd")
(find-rurima "--- tsort_each {|node| ...} -> nil" "== Instance Methods" "= module TSort" "refm/api/src/tsort.rd")
(find-rurima "--- strongly_connected_components -> Array" "== Instance Methods" "= module TSort" "refm/api/src/tsort.rd")
(find-rurima "--- each_strongly_connected_component {|nodes| ...} -> nil" "== Instance Methods" "= module TSort" "refm/api/src/tsort.rd")
(find-rurima "--- each_strongly_connected_component_from(node) {|nodes| ...} -> ()" "== Instance Methods" "= module TSort" "refm/api/src/tsort.rd")
(find-rurima "--- tsort_each_node {|node| ...} -> ()" "== Instance Methods" "= module TSort" "refm/api/src/tsort.rd")
(find-rurima "--- tsort_each_child(node) {|child| ...} -> ()" "== Instance Methods" "= module TSort" "refm/api/src/tsort.rd")
(find-rurima "= class TSort::Cyclic < StandardError" "refm/api/src/tsort.rd")
(find-rurima "= reopen IO" "refm/api/src/io/wait.rd")
(find-rurima "== Instance Methods" "= reopen IO" "refm/api/src/io/wait.rd")
(find-rurima "--- nread -> Integer" "== Instance Methods" "= reopen IO" "refm/api/src/io/wait.rd")
(find-rurima "--- ready? -> Integer | false | nil" "== Instance Methods" "= reopen IO" "refm/api/src/io/wait.rd")
(find-rurima "--- ready? -> bool | nil" "== Instance Methods" "= reopen IO" "refm/api/src/io/wait.rd")
(find-rurima "--- wait(timeout = nil) -> bool | self | nil" "== Instance Methods" "= reopen IO" "refm/api/src/io/wait.rd")
(find-rurima "= reopen IO" "refm/api/src/io/console.rd")
(find-rurima "== Instance Methods" "= reopen IO" "refm/api/src/io/console.rd")
(find-rurima "--- noecho {|io| ... } -> object" "== Instance Methods" "= reopen IO" "refm/api/src/io/console.rd")
(find-rurima "--- echo=(flag)" "== Instance Methods" "= reopen IO" "refm/api/src/io/console.rd")
(find-rurima "--- echo? -> bool" "== Instance Methods" "= reopen IO" "refm/api/src/io/console.rd")
(find-rurima "--- raw {|io| ... } -> object" "== Instance Methods" "= reopen IO" "refm/api/src/io/console.rd")
(find-rurima "--- raw! -> IO" "== Instance Methods" "= reopen IO" "refm/api/src/io/console.rd")
(find-rurima "--- getch -> String" "== Instance Methods" "= reopen IO" "refm/api/src/io/console.rd")
(find-rurima "--- winsize -> [Integer, Integer]" "== Instance Methods" "= reopen IO" "refm/api/src/io/console.rd")
(find-rurima "--- winsize=(size)" "== Instance Methods" "= reopen IO" "refm/api/src/io/console.rd")
(find-rurima "--- iflush -> IO" "== Instance Methods" "= reopen IO" "refm/api/src/io/console.rd")
(find-rurima "--- oflush -> IO" "== Instance Methods" "= reopen IO" "refm/api/src/io/console.rd")
(find-rurima "--- ioflush -> IO" "== Instance Methods" "= reopen IO" "refm/api/src/io/console.rd")
(find-rurima "== Singleton Methods" "= reopen IO" "refm/api/src/io/console.rd")
(find-rurima "--- console -> File | nil" "== Singleton Methods" "= reopen IO" "refm/api/src/io/console.rd")
(find-rurima "= reopen IO" "refm/api/src/io/nonblock.rd")
(find-rurima "== Instance Methods" "= reopen IO" "refm/api/src/io/nonblock.rd")
(find-rurima "--- nonblock? -> bool" "== Instance Methods" "= reopen IO" "refm/api/src/io/nonblock.rd")
(find-rurima "--- nonblock=(bool)" "== Instance Methods" "= reopen IO" "refm/api/src/io/nonblock.rd")
(find-rurima "--- nonblock(bool = true) { ... } -> object" "== Instance Methods" "= reopen IO" "refm/api/src/io/nonblock.rd")
(find-rurima "= reopen IO" "refm/api/src/io/console/size.rd")
(find-rurima "== Singleton Methods" "= reopen IO" "refm/api/src/io/console/size.rd")
(find-rurima "--- default_console_size -> [Integer, Integer]" "== Singleton Methods" "= reopen IO" "refm/api/src/io/console/size.rd")
(find-rurima "--- console_size -> [Integer, Integer]" "== Singleton Methods" "= reopen IO" "refm/api/src/io/console/size.rd")
(find-rurima "= module TkTreatTextTagFont" "refm/api/src/tktext.rd")
(find-rurima "== Constants" "= module TkTreatTextTagFont" "refm/api/src/tktext.rd")
(find-rurima "--- ItemCMD" "== Constants" "= module TkTreatTextTagFont" "refm/api/src/tktext.rd")
(find-rurima "=== ロードマップ" "refm/api/src/rdoc.rd")
(find-rurima "=== 概要" "refm/api/src/rdoc.rd")
(find-rurima "===[a:usage] 使いかた" "refm/api/src/rdoc.rd")
(find-rurima "===[a:markup] Markup" "refm/api/src/rdoc.rd")
(find-rurima "====[a:list] リスト" "===[a:markup] Markup" "refm/api/src/rdoc.rd")
(find-rurima "====[a:labeled_list] ラベル付きリスト" "===[a:markup] Markup" "refm/api/src/rdoc.rd")
(find-rurima "====[a:headline] 見出し" "===[a:markup] Markup" "refm/api/src/rdoc.rd")
(find-rurima "====[a:ruled_line] 罫線" "===[a:markup] Markup" "refm/api/src/rdoc.rd")
(find-rurima "====[a:italic_bold_typewriter] イタリック体、ボールド体、タイプライター体" "===[a:markup] Markup" "refm/api/src/rdoc.rd")
(find-rurima "==== クラス、メソッドへのリンク" "===[a:markup] Markup" "refm/api/src/rdoc.rd")
(find-rurima "==== 外部リンク" "===[a:markup] Markup" "refm/api/src/rdoc.rd")
(find-rurima "==== メソッドパラメータ" "===[a:markup] Markup" "refm/api/src/rdoc.rd")
(find-rurima "====[a:escape] エスケープ" "===[a:markup] Markup" "refm/api/src/rdoc.rd")
(find-rurima "==== 置換" "===[a:markup] Markup" "refm/api/src/rdoc.rd")
(find-rurima "==== 命令" "===[a:markup] Markup" "refm/api/src/rdoc.rd")
(find-rurima "===== 出力の制御" "==== 命令" "===[a:markup] Markup" "refm/api/src/rdoc.rd")
(find-rurima "===== その他の命令" "==== 命令" "===[a:markup] Markup" "refm/api/src/rdoc.rd")
(find-rurima "= class OptionParser::ParseError < StandardError" "refm/api/src/optparse.rd")
(find-rurima "== Instance Methods" "= class OptionParser::ParseError < StandardError" "refm/api/src/optparse.rd")
(find-rurima "--- recover(argv) -> Array" "== Instance Methods" "= class OptionParser::ParseError < StandardError" "refm/api/src/optparse.rd")
(find-rurima "--- set_option(opt, eq) -> self" "== Instance Methods" "= class OptionParser::ParseError < StandardError" "refm/api/src/optparse.rd")
(find-rurima "--- args -> Array" "== Instance Methods" "= class OptionParser::ParseError < StandardError" "refm/api/src/optparse.rd")
(find-rurima "--- reason -> String" "== Instance Methods" "= class OptionParser::ParseError < StandardError" "refm/api/src/optparse.rd")
(find-rurima "--- reason=(reason)" "== Instance Methods" "= class OptionParser::ParseError < StandardError" "refm/api/src/optparse.rd")
(find-rurima "--- inspect -> String" "== Instance Methods" "= class OptionParser::ParseError < StandardError" "refm/api/src/optparse.rd")
(find-rurima "--- message -> String" "== Instance Methods" "= class OptionParser::ParseError < StandardError" "refm/api/src/optparse.rd")
(find-rurima "--- to_s    -> String" "== Instance Methods" "= class OptionParser::ParseError < StandardError" "refm/api/src/optparse.rd")
(find-rurima "--- set_backtrace(array) -> [String]" "== Instance Methods" "= class OptionParser::ParseError < StandardError" "refm/api/src/optparse.rd")
(find-rurima "== Class Methods" "= class OptionParser::ParseError < StandardError" "refm/api/src/optparse.rd")
(find-rurima "--- filter_backtrace(array) -> [String]" "== Class Methods" "= class OptionParser::ParseError < StandardError" "refm/api/src/optparse.rd")
(find-rurima "= class OptionParser::AmbiguousOption < OptionParser::ParseError" "refm/api/src/optparse.rd")
(find-rurima "= class OptionParser::NeedlessArgument < OptionParser::ParseError" "refm/api/src/optparse.rd")
(find-rurima "= class OptionParser::MissingArgument < OptionParser::ParseError" "refm/api/src/optparse.rd")
(find-rurima "= class OptionParser::InvalidOption < OptionParser::ParseError" "refm/api/src/optparse.rd")
(find-rurima "= class OptionParser::InvalidArgument < OptionParser::ParseError" "refm/api/src/optparse.rd")
(find-rurima "= class OptionParser::AmbiguousArgument < OptionParser::ParseError" "refm/api/src/optparse.rd")
(find-rurima "= redefine Kernel" "refm/api/src/optparse.rd")
(find-rurima "== Constants" "= redefine Kernel" "refm/api/src/optparse.rd")
(find-rurima "--- ARGV -> Array" "== Constants" "= redefine Kernel" "refm/api/src/optparse.rd")
(find-rurima "= class Shell::BuiltInCommand < Shell::Filter" "refm/api/src/shell/builtin-command.rd")
(find-rurima "== Instance Methods" "= class Shell::BuiltInCommand < Shell::Filter" "refm/api/src/shell/builtin-command.rd")
(find-rurima "--- active? -> true" "== Instance Methods" "= class Shell::BuiltInCommand < Shell::Filter" "refm/api/src/shell/builtin-command.rd")
(find-rurima "--- wait?   -> false" "== Instance Methods" "= class Shell::BuiltInCommand < Shell::Filter" "refm/api/src/shell/builtin-command.rd")
(find-rurima "= class Shell::AppendFile < Shell::AppendIO" "refm/api/src/shell/builtin-command.rd")
(find-rurima "== Singleton Methods" "= class Shell::AppendFile < Shell::AppendIO" "refm/api/src/shell/builtin-command.rd")
(find-rurima "--- new(sh, filename)" "== Singleton Methods" "= class Shell::AppendFile < Shell::AppendIO" "refm/api/src/shell/builtin-command.rd")
(find-rurima "== Instance Methods" "= class Shell::AppendFile < Shell::AppendIO" "refm/api/src/shell/builtin-command.rd")
(find-rurima "--- input=(filter)" "== Instance Methods" "= class Shell::AppendFile < Shell::AppendIO" "refm/api/src/shell/builtin-command.rd")
(find-rurima "= class Shell::AppendIO < Shell::BuiltInCommand" "refm/api/src/shell/builtin-command.rd")
(find-rurima "== Singleton Methods" "= class Shell::AppendIO < Shell::BuiltInCommand" "refm/api/src/shell/builtin-command.rd")
(find-rurima "--- new(sh, filename)" "== Singleton Methods" "= class Shell::AppendIO < Shell::BuiltInCommand" "refm/api/src/shell/builtin-command.rd")
(find-rurima "== Instance Methods" "= class Shell::AppendIO < Shell::BuiltInCommand" "refm/api/src/shell/builtin-command.rd")
(find-rurima "--- input=(filter)" "== Instance Methods" "= class Shell::AppendIO < Shell::BuiltInCommand" "refm/api/src/shell/builtin-command.rd")
(find-rurima "= class Shell::Cat < Shell::BuiltInCommand" "refm/api/src/shell/builtin-command.rd")
(find-rurima "== Singleton Methods" "= class Shell::Cat < Shell::BuiltInCommand" "refm/api/src/shell/builtin-command.rd")
(find-rurima "--- new(sh, *filenames)" "== Singleton Methods" "= class Shell::Cat < Shell::BuiltInCommand" "refm/api/src/shell/builtin-command.rd")
(find-rurima "== Instance Methods" "= class Shell::Cat < Shell::BuiltInCommand" "refm/api/src/shell/builtin-command.rd")
(find-rurima "--- each(rs = nil){|line| ... }" "== Instance Methods" "= class Shell::Cat < Shell::BuiltInCommand" "refm/api/src/shell/builtin-command.rd")
(find-rurima "= class Shell::Concat < Shell::BuiltInCommand" "refm/api/src/shell/builtin-command.rd")
(find-rurima "== Singleton Methods" "= class Shell::Concat < Shell::BuiltInCommand" "refm/api/src/shell/builtin-command.rd")
(find-rurima "--- new(sh, *jobs)" "== Singleton Methods" "= class Shell::Concat < Shell::BuiltInCommand" "refm/api/src/shell/builtin-command.rd")
(find-rurima "== Instance Methods" "= class Shell::Concat < Shell::BuiltInCommand" "refm/api/src/shell/builtin-command.rd")
(find-rurima "--- each(rs = nil){|job| ... }" "== Instance Methods" "= class Shell::Concat < Shell::BuiltInCommand" "refm/api/src/shell/builtin-command.rd")
(find-rurima "= class Shell::Echo < Shell::BuiltInCommand" "refm/api/src/shell/builtin-command.rd")
(find-rurima "== Singleton Methods" "= class Shell::Echo < Shell::BuiltInCommand" "refm/api/src/shell/builtin-command.rd")
(find-rurima "--- new(sh, *strings)" "== Singleton Methods" "= class Shell::Echo < Shell::BuiltInCommand" "refm/api/src/shell/builtin-command.rd")
(find-rurima "== Instance Methods" "= class Shell::Echo < Shell::BuiltInCommand" "refm/api/src/shell/builtin-command.rd")
(find-rurima "--- each(rs = nil){|str| ... }" "== Instance Methods" "= class Shell::Echo < Shell::BuiltInCommand" "refm/api/src/shell/builtin-command.rd")
(find-rurima "= class Shell::Glob < Shell::BuiltInCommand" "refm/api/src/shell/builtin-command.rd")
(find-rurima "== Singleton Methods" "= class Shell::Glob < Shell::BuiltInCommand" "refm/api/src/shell/builtin-command.rd")
(find-rurima "--- new(sh, pattern)" "== Singleton Methods" "= class Shell::Glob < Shell::BuiltInCommand" "refm/api/src/shell/builtin-command.rd")
(find-rurima "== Instance Methods" "= class Shell::Glob < Shell::BuiltInCommand" "refm/api/src/shell/builtin-command.rd")
(find-rurima "--- each(rs = nil){|file| ... }" "== Instance Methods" "= class Shell::Glob < Shell::BuiltInCommand" "refm/api/src/shell/builtin-command.rd")
(find-rurima "= class Shell::Tee < Shell::BuiltInCommand" "refm/api/src/shell/builtin-command.rd")
(find-rurima "== Singleton Methods" "= class Shell::Tee < Shell::BuiltInCommand" "refm/api/src/shell/builtin-command.rd")
(find-rurima "--- new(sh, filename)" "== Singleton Methods" "= class Shell::Tee < Shell::BuiltInCommand" "refm/api/src/shell/builtin-command.rd")
(find-rurima "== Instance Methods" "= class Shell::Tee < Shell::BuiltInCommand" "refm/api/src/shell/builtin-command.rd")
(find-rurima "--- each(rs = nil){|line| ... }" "== Instance Methods" "= class Shell::Tee < Shell::BuiltInCommand" "refm/api/src/shell/builtin-command.rd")
(find-rurima "= class Shell::Void < Shell::BuiltInCommand" "refm/api/src/shell/builtin-command.rd")
(find-rurima "== Singleton Methods" "= class Shell::Void < Shell::BuiltInCommand" "refm/api/src/shell/builtin-command.rd")
(find-rurima "--- new(sh, *opts)" "== Singleton Methods" "= class Shell::Void < Shell::BuiltInCommand" "refm/api/src/shell/builtin-command.rd")
(find-rurima "== Instance Methods" "= class Shell::Void < Shell::BuiltInCommand" "refm/api/src/shell/builtin-command.rd")
(find-rurima "--- each(rs = nil){ ... } -> nil" "== Instance Methods" "= class Shell::Void < Shell::BuiltInCommand" "refm/api/src/shell/builtin-command.rd")
(find-rurima "= class Shell::Filter < Object" "refm/api/src/shell/filter.rd")
(find-rurima "== Class Methods" "= class Shell::Filter < Object" "refm/api/src/shell/filter.rd")
(find-rurima "--- new(sh) -> Shell::Filter" "== Class Methods" "= class Shell::Filter < Object" "refm/api/src/shell/filter.rd")
(find-rurima "== Instance Methods" "= class Shell::Filter < Object" "refm/api/src/shell/filter.rd")
(find-rurima "--- each(rs = nil) -> ()" "== Instance Methods" "= class Shell::Filter < Object" "refm/api/src/shell/filter.rd")
(find-rurima "--- <(src) -> self" "== Instance Methods" "= class Shell::Filter < Object" "refm/api/src/shell/filter.rd")
(find-rurima "--- >(to) -> self" "== Instance Methods" "= class Shell::Filter < Object" "refm/api/src/shell/filter.rd")
(find-rurima "--- >>(to) -> self" "== Instance Methods" "= class Shell::Filter < Object" "refm/api/src/shell/filter.rd")
(find-rurima "--- |(filter) -> object" "== Instance Methods" "= class Shell::Filter < Object" "refm/api/src/shell/filter.rd")
(find-rurima "--- +(filter)" "== Instance Methods" "= class Shell::Filter < Object" "refm/api/src/shell/filter.rd")
(find-rurima "--- to_a -> [String]" "== Instance Methods" "= class Shell::Filter < Object" "refm/api/src/shell/filter.rd")
(find-rurima "--- to_s -> String" "== Instance Methods" "= class Shell::Filter < Object" "refm/api/src/shell/filter.rd")
(find-rurima "--- inspect -> String" "== Instance Methods" "= class Shell::Filter < Object" "refm/api/src/shell/filter.rd")
(find-rurima "--- input -> Shell::Filter | nil" "== Instance Methods" "= class Shell::Filter < Object" "refm/api/src/shell/filter.rd")
(find-rurima "--- input=(filter)" "== Instance Methods" "= class Shell::Filter < Object" "refm/api/src/shell/filter.rd")
(find-rurima "= class Shell::ProcessController < Object" "refm/api/src/shell/process-controller.rd")
(find-rurima "== Singleton Methods" "= class Shell::ProcessController < Object" "refm/api/src/shell/process-controller.rd")
(find-rurima "--- new(shell)" "== Singleton Methods" "= class Shell::ProcessController < Object" "refm/api/src/shell/process-controller.rd")
(find-rurima "--- activate(pc) -> ()" "== Singleton Methods" "= class Shell::ProcessController < Object" "refm/api/src/shell/process-controller.rd")
(find-rurima "--- each_active_object{|ref| ... } -> ()" "== Singleton Methods" "= class Shell::ProcessController < Object" "refm/api/src/shell/process-controller.rd")
(find-rurima "--- inactivate(pc) -> ()" "== Singleton Methods" "= class Shell::ProcessController < Object" "refm/api/src/shell/process-controller.rd")
(find-rurima "--- process_controllers_exclusive -> ()" "== Singleton Methods" "= class Shell::ProcessController < Object" "refm/api/src/shell/process-controller.rd")
(find-rurima "--- active_process_controllers -> ()" "== Singleton Methods" "= class Shell::ProcessController < Object" "refm/api/src/shell/process-controller.rd")
(find-rurima "--- block_output_synchronize{ ... } -> ()" "== Singleton Methods" "= class Shell::ProcessController < Object" "refm/api/src/shell/process-controller.rd")
(find-rurima "--- wait_to_finish_all_process_controllers -> ()" "== Singleton Methods" "= class Shell::ProcessController < Object" "refm/api/src/shell/process-controller.rd")
(find-rurima "== Instance Methods" "= class Shell::ProcessController < Object" "refm/api/src/shell/process-controller.rd")
(find-rurima "--- active_job?(job) -> bool" "== Instance Methods" "= class Shell::ProcessController < Object" "refm/api/src/shell/process-controller.rd")
(find-rurima "--- active_jobs -> Array" "== Instance Methods" "= class Shell::ProcessController < Object" "refm/api/src/shell/process-controller.rd")
(find-rurima "--- active_jobs_exist? -> bool" "== Instance Methods" "= class Shell::ProcessController < Object" "refm/api/src/shell/process-controller.rd")
(find-rurima "--- add_schedule(command) -> ()" "== Instance Methods" "= class Shell::ProcessController < Object" "refm/api/src/shell/process-controller.rd")
(find-rurima "--- jobs -> Array" "== Instance Methods" "= class Shell::ProcessController < Object" "refm/api/src/shell/process-controller.rd")
(find-rurima "--- jobs_exist? -> bool" "== Instance Methods" "= class Shell::ProcessController < Object" "refm/api/src/shell/process-controller.rd")
(find-rurima "--- kill_job(signal, command) -> Integer" "== Instance Methods" "= class Shell::ProcessController < Object" "refm/api/src/shell/process-controller.rd")
(find-rurima "--- sfork(command){ ... } -> [Integer, IO, IO]" "== Instance Methods" "= class Shell::ProcessController < Object" "refm/api/src/shell/process-controller.rd")
(find-rurima "--- start_job(command = nil)" "== Instance Methods" "= class Shell::ProcessController < Object" "refm/api/src/shell/process-controller.rd")
(find-rurima "--- terminate_job(command)" "== Instance Methods" "= class Shell::ProcessController < Object" "refm/api/src/shell/process-controller.rd")
(find-rurima "--- wait_all_jobs_execution -> ()" "== Instance Methods" "= class Shell::ProcessController < Object" "refm/api/src/shell/process-controller.rd")
(find-rurima "--- waiting_job?(job) -> bool" "== Instance Methods" "= class Shell::ProcessController < Object" "refm/api/src/shell/process-controller.rd")
(find-rurima "--- waiting_jobs -> Array" "== Instance Methods" "= class Shell::ProcessController < Object" "refm/api/src/shell/process-controller.rd")
(find-rurima "--- waiting_jobs_exist? -> bool" "== Instance Methods" "= class Shell::ProcessController < Object" "refm/api/src/shell/process-controller.rd")
(find-rurima "--- shell -> Shell" "== Instance Methods" "= class Shell::ProcessController < Object" "refm/api/src/shell/process-controller.rd")
(find-rurima "== Constants" "= class Shell::ProcessController < Object" "refm/api/src/shell/process-controller.rd")
(find-rurima "--- USING_AT_EXIT_WHEN_PROCESS_EXIT -> true" "== Constants" "= class Shell::ProcessController < Object" "refm/api/src/shell/process-controller.rd")
(find-rurima "--- atime(filename) -> Time" "refm/api/src/shell/builtincommands")
(find-rurima "--- basename(filename, suffix = \"\")     -> String" "refm/api/src/shell/builtincommands")
(find-rurima "--- chmod(mode, *filename)    -> Integer" "refm/api/src/shell/builtincommands")
(find-rurima "--- chown(owner, group, *filename)    -> Integer" "refm/api/src/shell/builtincommands")
(find-rurima "--- ctime(filename)    -> Time" "refm/api/src/shell/builtincommands")
(find-rurima "--- delete(*filename)    -> Integer" "refm/api/src/shell/builtincommands")
(find-rurima "--- rm(*filename)        -> Integer" "refm/api/src/shell/builtincommands")
(find-rurima "--- dirname(filename)    -> String" "refm/api/src/shell/builtincommands")
(find-rurima "--- ftype(filename)    -> String" "refm/api/src/shell/builtincommands")
(find-rurima "--- join(*item)    -> String" "refm/api/src/shell/builtincommands")
(find-rurima "--- link(old, new)    -> 0" "refm/api/src/shell/builtincommands")
(find-rurima "--- lstat(filename)   -> File::Stat" "refm/api/src/shell/builtincommands")
(find-rurima "--- mtime(filename)    -> Time" "refm/api/src/shell/builtincommands")
(find-rurima "--- readlink(path)    -> String" "refm/api/src/shell/builtincommands")
(find-rurima "--- rename(from, to)    -> 0" "refm/api/src/shell/builtincommands")
(find-rurima "--- split(pathname)    -> [String]" "refm/api/src/shell/builtincommands")
(find-rurima "--- stat(filename)    -> File::Stat" "refm/api/src/shell/builtincommands")
(find-rurima "--- symlink(old, new)    -> 0" "refm/api/src/shell/builtincommands")
(find-rurima "--- truncate(path, length)    -> 0" "refm/api/src/shell/builtincommands")
(find-rurima "--- utime(atime, mtime, *filename)    -> Integer" "refm/api/src/shell/builtincommands")
(find-rurima "--- blockdev?(file)    -> bool" "refm/api/src/shell/builtincommands")
(find-rurima "--- chardev?(file)    -> bool" "refm/api/src/shell/builtincommands")
(find-rurima "--- directory?(file)    -> bool" "refm/api/src/shell/builtincommands")
(find-rurima "--- executable?(file)    -> bool" "refm/api/src/shell/builtincommands")
(find-rurima "--- executable_real?(file)    -> bool" "refm/api/src/shell/builtincommands")
(find-rurima "--- exist?(file) -> bool" "refm/api/src/shell/builtincommands")
(find-rurima "--- exists?(file) -> bool" "refm/api/src/shell/builtincommands")
(find-rurima "--- file?(file)    -> bool" "refm/api/src/shell/builtincommands")
(find-rurima "--- grpowned?(file)    -> bool" "refm/api/src/shell/builtincommands")
(find-rurima "--- owned?(file)    -> bool" "refm/api/src/shell/builtincommands")
(find-rurima "--- pipe?(file)    -> bool" "refm/api/src/shell/builtincommands")
(find-rurima "--- readable?(file)    -> bool" "refm/api/src/shell/builtincommands")
(find-rurima "--- readable_real?(file)    -> bool" "refm/api/src/shell/builtincommands")
(find-rurima "--- setgid?(file) -> bool" "refm/api/src/shell/builtincommands")
(find-rurima "--- setuid?(file)    -> bool" "refm/api/src/shell/builtincommands")
(find-rurima "--- size(file) -> Integer" "refm/api/src/shell/builtincommands")
(find-rurima "--- size?(file) -> Integer | nil" "refm/api/src/shell/builtincommands")
(find-rurima "--- socket?(file) -> bool" "refm/api/src/shell/builtincommands")
(find-rurima "--- sticky?(file) -> bool" "refm/api/src/shell/builtincommands")
(find-rurima "--- symlink?(file) -> bool" "refm/api/src/shell/builtincommands")
(find-rurima "--- writable?(file) -> bool" "refm/api/src/shell/builtincommands")
(find-rurima "--- writable_real?(file) -> bool" "refm/api/src/shell/builtincommands")
(find-rurima "--- zero?(file) -> bool" "refm/api/src/shell/builtincommands")
(find-rurima "--- syscopy(from, to) -> bool" "refm/api/src/shell/builtincommands")
(find-rurima "--- copy(from, to) -> bool" "refm/api/src/shell/builtincommands")
(find-rurima "--- cp(from, to) -> bool" "refm/api/src/shell/builtincommands")
(find-rurima "--- move(from, to) -> bool" "refm/api/src/shell/builtincommands")
(find-rurima "--- mv(from, to) -> bool" "refm/api/src/shell/builtincommands")
(find-rurima "--- compare(file1, file2) -> bool" "refm/api/src/shell/builtincommands")
(find-rurima "--- cmp(file1, file2) -> bool" "refm/api/src/shell/builtincommands")
(find-rurima "--- safe_unlink(*filenames) -> Array" "refm/api/src/shell/builtincommands")
(find-rurima "--- rm_f(*filenames) -> Array" "refm/api/src/shell/builtincommands")
(find-rurima "--- makedirs(*dirs) -> Array" "refm/api/src/shell/builtincommands")
(find-rurima "--- mkpath(*dirs) -> Array" "refm/api/src/shell/builtincommands")
(find-rurima "--- install(from, to, mode = nil, verbose = false) -> () " "refm/api/src/shell/builtincommands")
(find-rurima "--- foreach(path = nil, &block) -> ()" "refm/api/src/shell/builtincommands")
(find-rurima "--- open(path, mode) -> File | Dir" "refm/api/src/shell/builtincommands")
(find-rurima "--- unlink(path) -> self" "refm/api/src/shell/builtincommands")
(find-rurima "--- test(command, file1, file2 = nil) -> bool | Time | Integer | nil" "refm/api/src/shell/builtincommands")
(find-rurima "--- [](command, file1, file2 = nil) -> bool | Time | Integer | nil" "refm/api/src/shell/builtincommands")
(find-rurima "--- mkdir(*path) -> Array" "refm/api/src/shell/builtincommands")
(find-rurima "--- rmdir(*path) -> ()" "refm/api/src/shell/builtincommands")
(find-rurima "--- system(command, *opts) -> Shell::SystemCommand" "refm/api/src/shell/builtincommands")
(find-rurima "--- rehash -> {}" "refm/api/src/shell/builtincommands")
(find-rurima "--- check_point" "refm/api/src/shell/builtincommands")
(find-rurima "--- finish_all_jobs" "refm/api/src/shell/builtincommands")
(find-rurima "--- transact { ... } -> object" "refm/api/src/shell/builtincommands")
(find-rurima "--- out(dev = STDOUT, &block) -> ()" "refm/api/src/shell/builtincommands")
(find-rurima "--- echo(*strings) -> Shell::Filter" "refm/api/src/shell/builtincommands")
(find-rurima "--- cat(*files) -> Shell::Filter" "refm/api/src/shell/builtincommands")
(find-rurima "--- glob(patten) -> Shell::Filter" "refm/api/src/shell/builtincommands")
(find-rurima "--- append(to, filter) -> Shell::AppendFile | Shell::AppendIO" "refm/api/src/shell/builtincommands")
(find-rurima "--- tee(file) -> Shell::Filter" "refm/api/src/shell/builtincommands")
(find-rurima "--- concat(*jobs) -> Shell::Concat" "refm/api/src/shell/builtincommands")
(find-rurima "--- notify(*opts){ ... } -> ()" "refm/api/src/shell/builtincommands")
(find-rurima "--- find_system_command(command)" "refm/api/src/shell/builtincommands")
(find-rurima "--- identical?" "refm/api/src/shell/builtincommands")
(find-rurima "--- world_readable?" "refm/api/src/shell/builtincommands")
(find-rurima "--- world_writable?" "refm/api/src/shell/builtincommands")
(find-rurima "= class Shell::CommandProcessor < Object" "refm/api/src/shell/command-processor.rd")
(find-rurima "== Singleton Methods" "= class Shell::CommandProcessor < Object" "refm/api/src/shell/command-processor.rd")
(find-rurima "--- new(shell)" "== Singleton Methods" "= class Shell::CommandProcessor < Object" "refm/api/src/shell/command-processor.rd")
(find-rurima "--- add_delegate_command_to_shell(id)" "== Singleton Methods" "= class Shell::CommandProcessor < Object" "refm/api/src/shell/command-processor.rd")
(find-rurima "--- alias_command(alias, command, *opts) -> self" "== Singleton Methods" "= class Shell::CommandProcessor < Object" "refm/api/src/shell/command-processor.rd")
(find-rurima "--- alias_command(alias, command, *opts){ ... } -> self" "== Singleton Methods" "= class Shell::CommandProcessor < Object" "refm/api/src/shell/command-processor.rd")
(find-rurima "--- alias_map -> Hash" "== Singleton Methods" "= class Shell::CommandProcessor < Object" "refm/api/src/shell/command-processor.rd")
(find-rurima "--- def_builtin_commands(delegation_class, commands_specs) -> ()" "== Singleton Methods" "= class Shell::CommandProcessor < Object" "refm/api/src/shell/command-processor.rd")
(find-rurima "--- def_system_command(command, path = command) -> ()" "== Singleton Methods" "= class Shell::CommandProcessor < Object" "refm/api/src/shell/command-processor.rd")
(find-rurima "--- initialize -> ()" "== Singleton Methods" "= class Shell::CommandProcessor < Object" "refm/api/src/shell/command-processor.rd")
(find-rurima "--- install_builtin_commands -> ()" "== Singleton Methods" "= class Shell::CommandProcessor < Object" "refm/api/src/shell/command-processor.rd")
(find-rurima "--- install_system_commands(prefix = \"sys_\") -> ()" "== Singleton Methods" "= class Shell::CommandProcessor < Object" "refm/api/src/shell/command-processor.rd")
(find-rurima "--- method_added(id)" "== Singleton Methods" "= class Shell::CommandProcessor < Object" "refm/api/src/shell/command-processor.rd")
(find-rurima "--- run_config -> ()" "== Singleton Methods" "= class Shell::CommandProcessor < Object" "refm/api/src/shell/command-processor.rd")
(find-rurima "--- unalias_command(alias) -> self" "== Singleton Methods" "= class Shell::CommandProcessor < Object" "refm/api/src/shell/command-processor.rd")
(find-rurima "--- undef_system_command(command) -> self" "== Singleton Methods" "= class Shell::CommandProcessor < Object" "refm/api/src/shell/command-processor.rd")
(find-rurima "== Instance Methods" "= class Shell::CommandProcessor < Object" "refm/api/src/shell/command-processor.rd")
(find-rurima "--- expand_path(path) -> String" "== Instance Methods" "= class Shell::CommandProcessor < Object" "refm/api/src/shell/command-processor.rd")
(find-rurima "== Constants" "= class Shell::CommandProcessor < Object" "refm/api/src/shell/command-processor.rd")
(find-rurima "--- NoDelegateMethods -> [String]" "== Constants" "= class Shell::CommandProcessor < Object" "refm/api/src/shell/command-processor.rd")
(find-rurima "= module Shell::Error" "refm/api/src/shell/error.rd")
(find-rurima "= class Shell::Error::CantApplyMethod < StandardError" "refm/api/src/shell/error.rd")
(find-rurima "= class Shell::Error::CantDefine < StandardError" "refm/api/src/shell/error.rd")
(find-rurima "= class Shell::Error::CommandNotFound < StandardError" "refm/api/src/shell/error.rd")
(find-rurima "= class Shell::Error::DirStackEmpty < StandardError" "refm/api/src/shell/error.rd")
(find-rurima "= class Shell::SystemCommand < Shell::Filter" "refm/api/src/shell/system-command.rd")
(find-rurima "== Singleton Methods" "= class Shell::SystemCommand < Shell::Filter" "refm/api/src/shell/system-command.rd")
(find-rurima "--- new(sh, command, *opts)" "== Singleton Methods" "= class Shell::SystemCommand < Shell::Filter" "refm/api/src/shell/system-command.rd")
(find-rurima "== Instance Methods" "= class Shell::SystemCommand < Shell::Filter" "refm/api/src/shell/system-command.rd")
(find-rurima "--- active? -> bool" "== Instance Methods" "= class Shell::SystemCommand < Shell::Filter" "refm/api/src/shell/system-command.rd")
(find-rurima "--- command -> String" "== Instance Methods" "= class Shell::SystemCommand < Shell::Filter" "refm/api/src/shell/system-command.rd")
(find-rurima "--- name    -> String" "== Instance Methods" "= class Shell::SystemCommand < Shell::Filter" "refm/api/src/shell/system-command.rd")
(find-rurima "--- each(rs = nil){|line| ... }" "== Instance Methods" "= class Shell::SystemCommand < Shell::Filter" "refm/api/src/shell/system-command.rd")
(find-rurima "--- flush -> ()" "== Instance Methods" "= class Shell::SystemCommand < Shell::Filter" "refm/api/src/shell/system-command.rd")
(find-rurima "--- input=(inp)" "== Instance Methods" "= class Shell::SystemCommand < Shell::Filter" "refm/api/src/shell/system-command.rd")
(find-rurima "--- kill(signal) -> Integer" "== Instance Methods" "= class Shell::SystemCommand < Shell::Filter" "refm/api/src/shell/system-command.rd")
(find-rurima "--- notify(*opts) -> String" "== Instance Methods" "= class Shell::SystemCommand < Shell::Filter" "refm/api/src/shell/system-command.rd")
(find-rurima "--- notify(*opts){|message| ... } -> String" "== Instance Methods" "= class Shell::SystemCommand < Shell::Filter" "refm/api/src/shell/system-command.rd")
(find-rurima "--- start -> ()" "== Instance Methods" "= class Shell::SystemCommand < Shell::Filter" "refm/api/src/shell/system-command.rd")
(find-rurima "--- start_export" "== Instance Methods" "= class Shell::SystemCommand < Shell::Filter" "refm/api/src/shell/system-command.rd")
(find-rurima "--- start_import -> ()" "== Instance Methods" "= class Shell::SystemCommand < Shell::Filter" "refm/api/src/shell/system-command.rd")
(find-rurima "--- super_each -> ()" "== Instance Methods" "= class Shell::SystemCommand < Shell::Filter" "refm/api/src/shell/system-command.rd")
(find-rurima "--- terminate -> ()" "== Instance Methods" "= class Shell::SystemCommand < Shell::Filter" "refm/api/src/shell/system-command.rd")
(find-rurima "--- wait? -> bool" "== Instance Methods" "= class Shell::SystemCommand < Shell::Filter" "refm/api/src/shell/system-command.rd")
(find-rurima "=== 他の数値オブジェクトとの変換 (coerce)" "refm/api/src/bigdecimal.rd")
(find-rurima "=== 無限、非数、ゼロの扱い" "refm/api/src/bigdecimal.rd")
(find-rurima "=== 内部構造" "refm/api/src/bigdecimal.rd")
(find-rurima "=== 2 進と 10 進" "refm/api/src/bigdecimal.rd")
(find-rurima "=== 10 進のメリット" "refm/api/src/bigdecimal.rd")
(find-rurima "==== デバッグのしやすさ" "=== 10 進のメリット" "refm/api/src/bigdecimal.rd")
(find-rurima "==== 10進表記された数値なら確実に内部表現に変換できる" "=== 10 進のメリット" "refm/api/src/bigdecimal.rd")
(find-rurima "==== 有効桁数は有限である (つまり自動決定できる)" "=== 10 進のメリット" "refm/api/src/bigdecimal.rd")
(find-rurima "=== 10 進のデメリット" "refm/api/src/bigdecimal.rd")
(find-rurima "==== 最初は何か？" "=== 10 進のデメリット" "refm/api/src/bigdecimal.rd")
(find-rurima "==== 計算精度について" "=== 10 進のデメリット" "refm/api/src/bigdecimal.rd")
(find-rurima "==== 自分で精度をコントロールしたい場合" "=== 10 進のデメリット" "refm/api/src/bigdecimal.rd")
(find-rurima "= class Test::Unit::AssertionFailedError < StandardError" "refm/api/src/test/unit/assertions.rd")
(find-rurima "= module Test::Unit::Assertions" "refm/api/src/test/unit/assertions.rd")
(find-rurima "== Singleton Methods" "= module Test::Unit::Assertions" "refm/api/src/test/unit/assertions.rd")
(find-rurima "--- use_pp=(value)" "== Singleton Methods" "= module Test::Unit::Assertions" "refm/api/src/test/unit/assertions.rd")
(find-rurima "== Instance Methods" "= module Test::Unit::Assertions" "refm/api/src/test/unit/assertions.rd")
(find-rurima "--- assert(boolean, message = nil)    -> ()" "== Instance Methods" "= module Test::Unit::Assertions" "refm/api/src/test/unit/assertions.rd")
(find-rurima "--- assert_instance_of(klass, object, message = \"\")    -> ()" "== Instance Methods" "= module Test::Unit::Assertions" "refm/api/src/test/unit/assertions.rd")
(find-rurima "--- assert_nil(object, message = \"\")    -> ()" "== Instance Methods" "= module Test::Unit::Assertions" "refm/api/src/test/unit/assertions.rd")
(find-rurima "--- assert_kind_of(klass, object, message = \"\")    -> ()" "== Instance Methods" "= module Test::Unit::Assertions" "refm/api/src/test/unit/assertions.rd")
(find-rurima "--- assert_respond_to(object, method, message = \"\")    -> ()" "== Instance Methods" "= module Test::Unit::Assertions" "refm/api/src/test/unit/assertions.rd")
(find-rurima "--- assert_match(pattern, string, message = \"\")    -> ()" "== Instance Methods" "= module Test::Unit::Assertions" "refm/api/src/test/unit/assertions.rd")
(find-rurima "--- assert_same(expected, actual, message = \"\")    -> ()" "== Instance Methods" "= module Test::Unit::Assertions" "refm/api/src/test/unit/assertions.rd")
(find-rurima "--- assert_operator(object1, operator, object2, message = \"\")    -> ()" "== Instance Methods" "= module Test::Unit::Assertions" "refm/api/src/test/unit/assertions.rd")
(find-rurima "--- assert_raises(*args, &block)    -> object" "== Instance Methods" "= module Test::Unit::Assertions" "refm/api/src/test/unit/assertions.rd")
(find-rurima "--- flunk(message = \"Flunked\")    -> ()" "== Instance Methods" "= module Test::Unit::Assertions" "refm/api/src/test/unit/assertions.rd")
(find-rurima "--- assert_throws(expected_symbol, message = \"\") { ... }    -> ()" "== Instance Methods" "= module Test::Unit::Assertions" "refm/api/src/test/unit/assertions.rd")
(find-rurima "--- assert_in_delta(expected_float, actual_float, delta, message = \"\")    -> ()" "== Instance Methods" "= module Test::Unit::Assertions" "refm/api/src/test/unit/assertions.rd")
(find-rurima "--- assert_send(send_array, message = \"\")    -> ()" "== Instance Methods" "= module Test::Unit::Assertions" "refm/api/src/test/unit/assertions.rd")
(find-rurima "--- assert_block(message = \"assert_block failed.\") { ... }    -> ()" "== Instance Methods" "= module Test::Unit::Assertions" "refm/api/src/test/unit/assertions.rd")
(find-rurima "--- assert_equal(expected, actual, message = nil)    -> ()" "== Instance Methods" "= module Test::Unit::Assertions" "refm/api/src/test/unit/assertions.rd")
(find-rurima "--- assert_not_equal(expected, actual, message = \"\")    -> ()" "== Instance Methods" "= module Test::Unit::Assertions" "refm/api/src/test/unit/assertions.rd")
(find-rurima "--- assert_not_nil(object, message = \"\")    -> ()" "== Instance Methods" "= module Test::Unit::Assertions" "refm/api/src/test/unit/assertions.rd")
(find-rurima "--- assert_no_match(regexp, string, message = \"\")    -> ()" "== Instance Methods" "= module Test::Unit::Assertions" "refm/api/src/test/unit/assertions.rd")
(find-rurima "--- assert_not_same(expected, actual, message = \"\")    -> ()" "== Instance Methods" "= module Test::Unit::Assertions" "refm/api/src/test/unit/assertions.rd")
(find-rurima "--- assert_raise(message = \"\") { ... }    -> object" "== Instance Methods" "= module Test::Unit::Assertions" "refm/api/src/test/unit/assertions.rd")
(find-rurima "--- assert_raise(klass1, klass2, ..., message = \"\") { ... }    -> object" "== Instance Methods" "= module Test::Unit::Assertions" "refm/api/src/test/unit/assertions.rd")
(find-rurima "--- build_message(head, template = nil, *arguments)" "== Instance Methods" "= module Test::Unit::Assertions" "refm/api/src/test/unit/assertions.rd")
(find-rurima "--- assert_nothing_raised(message = \"\") { ... }" "== Instance Methods" "= module Test::Unit::Assertions" "refm/api/src/test/unit/assertions.rd")
(find-rurima "--- assert_nothing_raised(klass1, klass2, ..., message = \"\") { ... }" "== Instance Methods" "= module Test::Unit::Assertions" "refm/api/src/test/unit/assertions.rd")
(find-rurima "--- assert_nothing_thrown(message = \"\") { ... }    -> ()" "== Instance Methods" "= module Test::Unit::Assertions" "refm/api/src/test/unit/assertions.rd")
(find-rurima "--- mu_pp(obj)     -> String" "== Instance Methods" "= module Test::Unit::Assertions" "refm/api/src/test/unit/assertions.rd")
(find-rurima "= class Test::Unit::TestSuite < Object" "refm/api/src/test/unit/testsuite.rd")
(find-rurima "== Class Methods" "= class Test::Unit::TestSuite < Object" "refm/api/src/test/unit/testsuite.rd")
(find-rurima "--- new(name = \"Unnamed TestSuite\")   -> Test::Unit::TestSuite" "== Class Methods" "= class Test::Unit::TestSuite < Object" "refm/api/src/test/unit/testsuite.rd")
(find-rurima "== Instance Methods" "= class Test::Unit::TestSuite < Object" "refm/api/src/test/unit/testsuite.rd")
(find-rurima "--- <<(test)    -> self" "== Instance Methods" "= class Test::Unit::TestSuite < Object" "refm/api/src/test/unit/testsuite.rd")
(find-rurima "--- ==(other)    -> bool" "== Instance Methods" "= class Test::Unit::TestSuite < Object" "refm/api/src/test/unit/testsuite.rd")
(find-rurima "--- delete(test)    -> ()" "== Instance Methods" "= class Test::Unit::TestSuite < Object" "refm/api/src/test/unit/testsuite.rd")
(find-rurima "--- empty?    -> bool" "== Instance Methods" "= class Test::Unit::TestSuite < Object" "refm/api/src/test/unit/testsuite.rd")
(find-rurima "--- run(result) {|STARTED, name| ...}    -> ()" "== Instance Methods" "= class Test::Unit::TestSuite < Object" "refm/api/src/test/unit/testsuite.rd")
(find-rurima "--- size    -> Integer" "== Instance Methods" "= class Test::Unit::TestSuite < Object" "refm/api/src/test/unit/testsuite.rd")
(find-rurima "--- to_s    -> String" "== Instance Methods" "= class Test::Unit::TestSuite < Object" "refm/api/src/test/unit/testsuite.rd")
(find-rurima "--- name    -> String" "== Instance Methods" "= class Test::Unit::TestSuite < Object" "refm/api/src/test/unit/testsuite.rd")
(find-rurima "--- tests    -> [ Test::Unit::TestSuite | Test::Unit::TestCase ]" "== Instance Methods" "= class Test::Unit::TestSuite < Object" "refm/api/src/test/unit/testsuite.rd")
(find-rurima "= class Test::Unit::UI::Fox::TestRunner < Object" "refm/api/src/test/unit/ui/fox/testrunner.rd")
(find-rurima "== Class Methods" "= class Test::Unit::UI::Fox::TestRunner < Object" "refm/api/src/test/unit/ui/fox/testrunner.rd")
(find-rurima "--- new(suite, output_level = NORMAL)   -> Test::Unit::UI::Fox::TestRunner" "== Class Methods" "= class Test::Unit::UI::Fox::TestRunner < Object" "refm/api/src/test/unit/ui/fox/testrunner.rd")
(find-rurima "== Instance Methods" "= class Test::Unit::UI::Fox::TestRunner < Object" "refm/api/src/test/unit/ui/fox/testrunner.rd")
(find-rurima "--- start   -> Test::Unit::TestResult" "== Instance Methods" "= class Test::Unit::UI::Fox::TestRunner < Object" "refm/api/src/test/unit/ui/fox/testrunner.rd")
(find-rurima "= class Test::Unit::UI::Tk::TestRunner < Object" "refm/api/src/test/unit/ui/tk/testrunner.rd")
(find-rurima "== Class Methods" "= class Test::Unit::UI::Tk::TestRunner < Object" "refm/api/src/test/unit/ui/tk/testrunner.rd")
(find-rurima "--- new(suite, output_level = NORMAL)   -> Test::Unit::UI::Tk::TestRunner" "== Class Methods" "= class Test::Unit::UI::Tk::TestRunner < Object" "refm/api/src/test/unit/ui/tk/testrunner.rd")
(find-rurima "== Instance Methods" "= class Test::Unit::UI::Tk::TestRunner < Object" "refm/api/src/test/unit/ui/tk/testrunner.rd")
(find-rurima "--- start   -> Test::Unit::TestResult" "== Instance Methods" "= class Test::Unit::UI::Tk::TestRunner < Object" "refm/api/src/test/unit/ui/tk/testrunner.rd")
(find-rurima "= class Test::Unit::UI::TestRunnerMediator" "refm/api/src/test/unit/ui/testrunnermediator.rd")
(find-rurima "== Class Methods" "= class Test::Unit::UI::TestRunnerMediator" "refm/api/src/test/unit/ui/testrunnermediator.rd")
(find-rurima "--- new(suite) -> Test::Unit::UI::TestRunnerMediator" "== Class Methods" "= class Test::Unit::UI::TestRunnerMediator" "refm/api/src/test/unit/ui/testrunnermediator.rd")
(find-rurima "== Instance Methods" "= class Test::Unit::UI::TestRunnerMediator" "refm/api/src/test/unit/ui/testrunnermediator.rd")
(find-rurima "--- run_suite -> Test::Unit::TestResult" "== Instance Methods" "= class Test::Unit::UI::TestRunnerMediator" "refm/api/src/test/unit/ui/testrunnermediator.rd")
(find-rurima "== Private Instance Methods" "= class Test::Unit::UI::TestRunnerMediator" "refm/api/src/test/unit/ui/testrunnermediator.rd")
(find-rurima "--- create_result -> Test::Unit::TestResult" "== Private Instance Methods" "= class Test::Unit::UI::TestRunnerMediator" "refm/api/src/test/unit/ui/testrunnermediator.rd")
(find-rurima "= module Test::Unit::UI" "refm/api/src/test/unit/ui/testrunnerutilities.rd")
(find-rurima "== Constants" "= module Test::Unit::UI" "refm/api/src/test/unit/ui/testrunnerutilities.rd")
(find-rurima "--- SILENT        -> Integer" "== Constants" "= module Test::Unit::UI" "refm/api/src/test/unit/ui/testrunnerutilities.rd")
(find-rurima "--- PROGRESS_ONLY -> Integer" "== Constants" "= module Test::Unit::UI" "refm/api/src/test/unit/ui/testrunnerutilities.rd")
(find-rurima "--- NORMAL        -> Integer" "== Constants" "= module Test::Unit::UI" "refm/api/src/test/unit/ui/testrunnerutilities.rd")
(find-rurima "--- VERBOSE       -> Integer" "== Constants" "= module Test::Unit::UI" "refm/api/src/test/unit/ui/testrunnerutilities.rd")
(find-rurima "= module Test::Unit::UI::TestRunnerUtilities" "refm/api/src/test/unit/ui/testrunnerutilities.rd")
(find-rurima "== Instance Methods" "= module Test::Unit::UI::TestRunnerUtilities" "refm/api/src/test/unit/ui/testrunnerutilities.rd")
(find-rurima "--- run(suite, output_level = NORMAL)    -> Test::Unit::TestResult" "== Instance Methods" "= module Test::Unit::UI::TestRunnerUtilities" "refm/api/src/test/unit/ui/testrunnerutilities.rd")
(find-rurima "--- start_command_line_test    -> Test::Unit::TestResult" "== Instance Methods" "= module Test::Unit::UI::TestRunnerUtilities" "refm/api/src/test/unit/ui/testrunnerutilities.rd")
(find-rurima "= class Test::Unit::UI::GTK2::TestRunner < Object" "refm/api/src/test/unit/ui/gtk2/testrunner.rd")
(find-rurima "== Class Methods" "= class Test::Unit::UI::GTK2::TestRunner < Object" "refm/api/src/test/unit/ui/gtk2/testrunner.rd")
(find-rurima "--- new(suite, output_level = NORMAL)   -> Test::Unit::UI::GTK2::TestRunner" "== Class Methods" "= class Test::Unit::UI::GTK2::TestRunner < Object" "refm/api/src/test/unit/ui/gtk2/testrunner.rd")
(find-rurima "== Instance Methods" "= class Test::Unit::UI::GTK2::TestRunner < Object" "refm/api/src/test/unit/ui/gtk2/testrunner.rd")
(find-rurima "--- start   -> Test::Unit::TestResult" "== Instance Methods" "= class Test::Unit::UI::GTK2::TestRunner < Object" "refm/api/src/test/unit/ui/gtk2/testrunner.rd")
(find-rurima "= class Test::Unit::UI::GTK::TestRunner < Object" "refm/api/src/test/unit/ui/gtk/testrunner.rd")
(find-rurima "== Class Methods" "= class Test::Unit::UI::GTK::TestRunner < Object" "refm/api/src/test/unit/ui/gtk/testrunner.rd")
(find-rurima "--- new(suite, output_level = NORMAL)   -> Test::Unit::UI::GTK::TestRunner" "== Class Methods" "= class Test::Unit::UI::GTK::TestRunner < Object" "refm/api/src/test/unit/ui/gtk/testrunner.rd")
(find-rurima "== Instance Methods" "= class Test::Unit::UI::GTK::TestRunner < Object" "refm/api/src/test/unit/ui/gtk/testrunner.rd")
(find-rurima "--- start   -> Test::Unit::TestResult" "== Instance Methods" "= class Test::Unit::UI::GTK::TestRunner < Object" "refm/api/src/test/unit/ui/gtk/testrunner.rd")
(find-rurima "= class Test::Unit::UI::Console::TestRunner < Object" "refm/api/src/test/unit/ui/console/testrunner.rd")
(find-rurima "== Class Methods" "= class Test::Unit::UI::Console::TestRunner < Object" "refm/api/src/test/unit/ui/console/testrunner.rd")
(find-rurima "--- new(suite, output_level = NORMAL, io = STDOUT) -> Test::Unit::UI::Console::TestRunner" "== Class Methods" "= class Test::Unit::UI::Console::TestRunner < Object" "refm/api/src/test/unit/ui/console/testrunner.rd")
(find-rurima "== Instance Methods" "= class Test::Unit::UI::Console::TestRunner < Object" "refm/api/src/test/unit/ui/console/testrunner.rd")
(find-rurima "--- start    -> Test::Unit::TestResult" "== Instance Methods" "= class Test::Unit::UI::Console::TestRunner < Object" "refm/api/src/test/unit/ui/console/testrunner.rd")
(find-rurima "= class Test::Unit::TestCase < MiniTest::Unit::TestCase" "refm/api/src/test/unit/testcase.rd")
(find-rurima "= class Test::Unit::TestCase < Object" "refm/api/src/test/unit/testcase.rd")
(find-rurima "== Class Methods" "= class Test::Unit::TestCase < Object" "refm/api/src/test/unit/testcase.rd")
(find-rurima "--- test_order    -> Symbol" "== Class Methods" "= class Test::Unit::TestCase < Object" "refm/api/src/test/unit/testcase.rd")
(find-rurima "--- new(test_method_name)    -> Test::Unit::TestCase" "== Class Methods" "= class Test::Unit::TestCase < Object" "refm/api/src/test/unit/testcase.rd")
(find-rurima "--- suite    -> Test::Unit::TestSuite" "== Class Methods" "= class Test::Unit::TestCase < Object" "refm/api/src/test/unit/testcase.rd")
(find-rurima "== Instance Methods" "= class Test::Unit::TestCase < Object" "refm/api/src/test/unit/testcase.rd")
(find-rurima "--- setup    -> ()" "== Instance Methods" "= class Test::Unit::TestCase < Object" "refm/api/src/test/unit/testcase.rd")
(find-rurima "--- teardown    -> ()" "== Instance Methods" "= class Test::Unit::TestCase < Object" "refm/api/src/test/unit/testcase.rd")
(find-rurima "--- method_name    -> String" "== Instance Methods" "= class Test::Unit::TestCase < Object" "refm/api/src/test/unit/testcase.rd")
(find-rurima "--- name    -> String" "== Instance Methods" "= class Test::Unit::TestCase < Object" "refm/api/src/test/unit/testcase.rd")
(find-rurima "--- run(result) {|STARTED, name| ...}" "== Instance Methods" "= class Test::Unit::TestCase < Object" "refm/api/src/test/unit/testcase.rd")
(find-rurima "--- size    -> Integer" "== Instance Methods" "= class Test::Unit::TestCase < Object" "refm/api/src/test/unit/testcase.rd")
(find-rurima "--- default_test     -> ()" "== Instance Methods" "= class Test::Unit::TestCase < Object" "refm/api/src/test/unit/testcase.rd")
(find-rurima "== Private Instance Methods" "= class Test::Unit::TestCase < Object" "refm/api/src/test/unit/testcase.rd")
(find-rurima "--- passed?    -> bool" "== Private Instance Methods" "= class Test::Unit::TestCase < Object" "refm/api/src/test/unit/testcase.rd")
(find-rurima "== Constants" "= class Test::Unit::TestCase < Object" "refm/api/src/test/unit/testcase.rd")
(find-rurima "--- PASSTHROUGH_EXCEPTIONS" "== Constants" "= class Test::Unit::TestCase < Object" "refm/api/src/test/unit/testcase.rd")
(find-rurima "= class Test::Unit::TestResult < Object" "refm/api/src/test/unit/testresult.rd")
(find-rurima "== Class Methods" "= class Test::Unit::TestResult < Object" "refm/api/src/test/unit/testresult.rd")
(find-rurima "--- new    -> Test::Unit::TestResult" "== Class Methods" "= class Test::Unit::TestResult < Object" "refm/api/src/test/unit/testresult.rd")
(find-rurima "== Instance Methods" "= class Test::Unit::TestResult < Object" "refm/api/src/test/unit/testresult.rd")
(find-rurima "--- run_count    -> Integer" "== Instance Methods" "= class Test::Unit::TestResult < Object" "refm/api/src/test/unit/testresult.rd")
(find-rurima "--- assertion_count    -> Integer" "== Instance Methods" "= class Test::Unit::TestResult < Object" "refm/api/src/test/unit/testresult.rd")
(find-rurima "--- error_count    -> Integer" "== Instance Methods" "= class Test::Unit::TestResult < Object" "refm/api/src/test/unit/testresult.rd")
(find-rurima "--- failure_count    -> Integer" "== Instance Methods" "= class Test::Unit::TestResult < Object" "refm/api/src/test/unit/testresult.rd")
(find-rurima "--- passed?    -> bool" "== Instance Methods" "= class Test::Unit::TestResult < Object" "refm/api/src/test/unit/testresult.rd")
(find-rurima "--- to_s    -> String" "== Instance Methods" "= class Test::Unit::TestResult < Object" "refm/api/src/test/unit/testresult.rd")
(find-rurima "= class Test::Unit::Error < Object" "refm/api/src/test/unit/error.rd")
(find-rurima "== Class Methods" "= class Test::Unit::Error < Object" "refm/api/src/test/unit/error.rd")
(find-rurima "--- new(test_name, exception) -> Test::Unit::Error" "== Class Methods" "= class Test::Unit::Error < Object" "refm/api/src/test/unit/error.rd")
(find-rurima "== Instance Methods" "= class Test::Unit::Error < Object" "refm/api/src/test/unit/error.rd")
(find-rurima "--- exception -> Exception" "== Instance Methods" "= class Test::Unit::Error < Object" "refm/api/src/test/unit/error.rd")
(find-rurima "--- long_display -> String" "== Instance Methods" "= class Test::Unit::Error < Object" "refm/api/src/test/unit/error.rd")
(find-rurima "--- to_s -> String" "== Instance Methods" "= class Test::Unit::Error < Object" "refm/api/src/test/unit/error.rd")
(find-rurima "--- message -> String" "== Instance Methods" "= class Test::Unit::Error < Object" "refm/api/src/test/unit/error.rd")
(find-rurima "--- short_display -> String" "== Instance Methods" "= class Test::Unit::Error < Object" "refm/api/src/test/unit/error.rd")
(find-rurima "--- single_character_display -> String" "== Instance Methods" "= class Test::Unit::Error < Object" "refm/api/src/test/unit/error.rd")
(find-rurima "--- test_name -> String" "== Instance Methods" "= class Test::Unit::Error < Object" "refm/api/src/test/unit/error.rd")
(find-rurima "= module Test::Unit::Util::Observable" "refm/api/src/test/unit/util/observable.rd")
(find-rurima "== Instance Methods" "= module Test::Unit::Util::Observable" "refm/api/src/test/unit/util/observable.rd")
(find-rurima "--- add_listener(channel_name, listener_key = NOTHING, &listener) -> String" "== Instance Methods" "= module Test::Unit::Util::Observable" "refm/api/src/test/unit/util/observable.rd")
(find-rurima "--- remove_listener(channel_name, listener_key) -> Proc | nil" "== Instance Methods" "= module Test::Unit::Util::Observable" "refm/api/src/test/unit/util/observable.rd")
(find-rurima "--- notify_listeners(channel_name, *arguments) -> Integer" "== Instance Methods" "= module Test::Unit::Util::Observable" "refm/api/src/test/unit/util/observable.rd")
(find-rurima "= class Test::Unit::AutoRunner" "refm/api/src/test/unit/autorunner.rd")
(find-rurima "=== 例" "= class Test::Unit::AutoRunner" "refm/api/src/test/unit/autorunner.rd")
(find-rurima "== Class Methods" "= class Test::Unit::AutoRunner" "refm/api/src/test/unit/autorunner.rd")
(find-rurima "--- run(force_standalone = false, dir = '.', argv = ARGV)    -> bool" "== Class Methods" "= class Test::Unit::AutoRunner" "refm/api/src/test/unit/autorunner.rd")
(find-rurima "--- run(force_standalone = nil, dir = '.', argv = ARGV)    -> bool" "== Class Methods" "= class Test::Unit::AutoRunner" "refm/api/src/test/unit/autorunner.rd")
(find-rurima "= class Test::Unit::Failure < Object" "refm/api/src/test/unit/failure.rd")
(find-rurima "== Class Methods" "= class Test::Unit::Failure < Object" "refm/api/src/test/unit/failure.rd")
(find-rurima "--- new(test_name, location, message) -> Test::Unit::Failure" "== Class Methods" "= class Test::Unit::Failure < Object" "refm/api/src/test/unit/failure.rd")
(find-rurima "== Instance Methods" "= class Test::Unit::Failure < Object" "refm/api/src/test/unit/failure.rd")
(find-rurima "--- long_display -> String" "== Instance Methods" "= class Test::Unit::Failure < Object" "refm/api/src/test/unit/failure.rd")
(find-rurima "--- to_s -> String" "== Instance Methods" "= class Test::Unit::Failure < Object" "refm/api/src/test/unit/failure.rd")
(find-rurima "--- message -> String" "== Instance Methods" "= class Test::Unit::Failure < Object" "refm/api/src/test/unit/failure.rd")
(find-rurima "--- short_display -> String" "== Instance Methods" "= class Test::Unit::Failure < Object" "refm/api/src/test/unit/failure.rd")
(find-rurima "--- single_character_display -> String" "== Instance Methods" "= class Test::Unit::Failure < Object" "refm/api/src/test/unit/failure.rd")
(find-rurima "--- test_name -> String" "== Instance Methods" "= class Test::Unit::Failure < Object" "refm/api/src/test/unit/failure.rd")
(find-rurima "--- location -> [String]" "== Instance Methods" "= class Test::Unit::Failure < Object" "refm/api/src/test/unit/failure.rd")
(find-rurima "=== 使い方" "refm/api/src/test/unit.rd")
(find-rurima "=== いつテストは実行されるか" "refm/api/src/test/unit.rd")
(find-rurima "=== Error と Failure の違い" "refm/api/src/test/unit.rd")
(find-rurima "=== 並列実行" "refm/api/src/test/unit.rd")
(find-rurima "= module Test::Unit" "refm/api/src/test/unit.rd")
(find-rurima "== Singleton Methods" "= module Test::Unit" "refm/api/src/test/unit.rd")
(find-rurima "--- run?        -> bool" "== Singleton Methods" "= module Test::Unit" "refm/api/src/test/unit.rd")
(find-rurima "--- run=(flag)" "== Singleton Methods" "= module Test::Unit" "refm/api/src/test/unit.rd")
(find-rurima "--- setup_argv(original_argv = ARGV) { |files| ... } -> [String]" "== Singleton Methods" "= module Test::Unit" "refm/api/src/test/unit.rd")
(find-rurima "===== 使用可能なオプション" "== Singleton Methods" "= module Test::Unit" "refm/api/src/test/unit.rd")
(find-rurima "===== 注意" "== Singleton Methods" "= module Test::Unit" "refm/api/src/test/unit.rd")
(find-rurima "=== オプション解析" "refm/api/src/parsearg.rd")
(find-rurima "=== ヘルプメッセージの設定" "refm/api/src/parsearg.rd")
(find-rurima "= reopen Kernel" "refm/api/src/parsearg.rd")
(find-rurima "== Private Instance Methods" "= reopen Kernel" "refm/api/src/parsearg.rd")
(find-rurima "--- parseArgs(min_argc, check_opts, single_opts, *opts) -> Integer | nil" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/parsearg.rd")
(find-rurima "--- printUsageAndExit -> ()" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/parsearg.rd")
(find-rurima "--- setParenthesis(ex, opt, c) -> String" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/parsearg.rd")
(find-rurima "--- setOrAnd(ex, opt, c) -> String" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/parsearg.rd")
(find-rurima "--- setExpression(ex, opt, c) -> String" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/parsearg.rd")
(find-rurima "=== 使用例 " "refm/api/src/jcode.rd")
(find-rurima "= reopen String" "refm/api/src/jcode.rd")
(find-rurima "== Methods" "= reopen String" "refm/api/src/jcode.rd")
(find-rurima "--- each_char -> [String]" "== Methods" "= reopen String" "refm/api/src/jcode.rd")
(find-rurima "--- each_char {|char| ... } -> String" "== Methods" "= reopen String" "refm/api/src/jcode.rd")
(find-rurima "--- jcount(str) -> Integer" "== Methods" "= reopen String" "refm/api/src/jcode.rd")
(find-rurima "--- jlength -> Integer" "== Methods" "= reopen String" "refm/api/src/jcode.rd")
(find-rurima "--- jsize -> Integer" "== Methods" "= reopen String" "refm/api/src/jcode.rd")
(find-rurima "--- mbchar? -> Integer|nil" "== Methods" "= reopen String" "refm/api/src/jcode.rd")
(find-rurima "= redefine String" "refm/api/src/jcode.rd")
(find-rurima "== Methods" "= redefine String" "refm/api/src/jcode.rd")
(find-rurima "--- each_char -> [String]" "== Methods" "= redefine String" "refm/api/src/jcode.rd")
(find-rurima "--- each_char {|char| ... } -> String" "== Methods" "= redefine String" "refm/api/src/jcode.rd")
(find-rurima "--- chop -> String" "== Methods" "= redefine String" "refm/api/src/jcode.rd")
(find-rurima "--- chop! -> self | nil" "== Methods" "= redefine String" "refm/api/src/jcode.rd")
(find-rurima "--- delete(str) -> String" "== Methods" "= redefine String" "refm/api/src/jcode.rd")
(find-rurima "--- delete!(str) -> self|nil" "== Methods" "= redefine String" "refm/api/src/jcode.rd")
(find-rurima "--- squeeze(str = nil) -> String" "== Methods" "= redefine String" "refm/api/src/jcode.rd")
(find-rurima "--- squeeze!(str = nil) -> self | nil" "== Methods" "= redefine String" "refm/api/src/jcode.rd")
(find-rurima "--- succ -> String" "== Methods" "= redefine String" "refm/api/src/jcode.rd")
(find-rurima "--- succ! -> self | nil" "== Methods" "= redefine String" "refm/api/src/jcode.rd")
(find-rurima "--- tr(search, replace) -> String" "== Methods" "= redefine String" "refm/api/src/jcode.rd")
(find-rurima "--- tr!(search, replace) -> self | nil" "== Methods" "= redefine String" "refm/api/src/jcode.rd")
(find-rurima "--- tr_s(search, replace) -> String" "== Methods" "= redefine String" "refm/api/src/jcode.rd")
(find-rurima "--- tr_s!(search, replace) -> self | nil" "== Methods" "= redefine String" "refm/api/src/jcode.rd")
(find-rurima "=== チュートリアル" "refm/api/src/optparse/optparse-tut")
(find-rurima "====[a:optiondef] オプションの定義" "=== チュートリアル" "refm/api/src/optparse/optparse-tut")
(find-rurima "====[a:optionarg] オプションの引数" "=== チュートリアル" "refm/api/src/optparse/optparse-tut")
(find-rurima "====[a:longoption] ロングオプション" "=== チュートリアル" "refm/api/src/optparse/optparse-tut")
(find-rurima "====[a:help] ヘルプ" "=== チュートリアル" "refm/api/src/optparse/optparse-tut")
(find-rurima "====[a:subcmd] サブコマンド" "=== チュートリアル" "refm/api/src/optparse/optparse-tut")
(find-rurima "====[a:argv] ARGV の機能" "=== チュートリアル" "refm/api/src/optparse/optparse-tut")
(find-rurima "====[a:hyphen_start_file] '-'で始まるファイル名" "=== チュートリアル" "refm/api/src/optparse/optparse-tut")
(find-rurima "= class OptionParser < Object" "refm/api/src/optparse/OptionParser")
(find-rurima "=== デフォルトで利用可能なオプション" "= class OptionParser < Object" "refm/api/src/optparse/OptionParser")
(find-rurima "== Class Methods" "= class OptionParser < Object" "refm/api/src/optparse/OptionParser")
(find-rurima "--- new(banner = nil, width = 32, indent = ' ' * 4)              -> OptionParser" "== Class Methods" "= class OptionParser < Object" "refm/api/src/optparse/OptionParser")
(find-rurima "--- new(banner = nil, width = 32, indent = ' ' * 4) {|opt| ...}  -> OptionParser" "== Class Methods" "= class OptionParser < Object" "refm/api/src/optparse/OptionParser")
(find-rurima "--- accept(klass, pat = /.*/){|str| ...}    -> ()" "== Class Methods" "= class OptionParser < Object" "refm/api/src/optparse/OptionParser")
(find-rurima "--- reject(klass)    -> ()" "== Class Methods" "= class OptionParser < Object" "refm/api/src/optparse/OptionParser")
(find-rurima "--- getopts(argv, *opts)   -> Hash" "== Class Methods" "= class OptionParser < Object" "refm/api/src/optparse/OptionParser")
(find-rurima "--- getopts(*opts)         -> Hash" "== Class Methods" "= class OptionParser < Object" "refm/api/src/optparse/OptionParser")
(find-rurima "== Instance Methods" "= class OptionParser < Object" "refm/api/src/optparse/OptionParser")
(find-rurima "--- accept(klass, pat = /.*/){|str| ...}    -> ()" "== Instance Methods" "= class OptionParser < Object" "refm/api/src/optparse/OptionParser")
(find-rurima "--- reject(klass)    -> ()" "== Instance Methods" "= class OptionParser < Object" "refm/api/src/optparse/OptionParser")
(find-rurima "--- banner            -> String" "== Instance Methods" "= class OptionParser < Object" "refm/api/src/optparse/OptionParser")
(find-rurima "--- banner=(heading)" "== Instance Methods" "= class OptionParser < Object" "refm/api/src/optparse/OptionParser")
(find-rurima "--- summary_width         -> Integer" "== Instance Methods" "= class OptionParser < Object" "refm/api/src/optparse/OptionParser")
(find-rurima "--- summary_width=(width)" "== Instance Methods" "= class OptionParser < Object" "refm/api/src/optparse/OptionParser")
(find-rurima "--- summary_indent          -> String" "== Instance Methods" "= class OptionParser < Object" "refm/api/src/optparse/OptionParser")
(find-rurima "--- summary_indent=(indent)" "== Instance Methods" "= class OptionParser < Object" "refm/api/src/optparse/OptionParser")
(find-rurima "--- program_name           -> String" "== Instance Methods" "= class OptionParser < Object" "refm/api/src/optparse/OptionParser")
(find-rurima "--- program_name=(name)" "== Instance Methods" "= class OptionParser < Object" "refm/api/src/optparse/OptionParser")
(find-rurima "--- version       -> String" "== Instance Methods" "= class OptionParser < Object" "refm/api/src/optparse/OptionParser")
(find-rurima "--- version=(ver)" "== Instance Methods" "= class OptionParser < Object" "refm/api/src/optparse/OptionParser")
(find-rurima "--- release       -> String" "== Instance Methods" "= class OptionParser < Object" "refm/api/src/optparse/OptionParser")
(find-rurima "--- release=(rel)" "== Instance Methods" "= class OptionParser < Object" "refm/api/src/optparse/OptionParser")
(find-rurima "--- ver    -> String" "== Instance Methods" "= class OptionParser < Object" "refm/api/src/optparse/OptionParser")
(find-rurima "--- summarize(to = [], width = self.summary_width, max = width - 1, indent= self.summary_indent)               -> ()" "== Instance Methods" "= class OptionParser < Object" "refm/api/src/optparse/OptionParser")
(find-rurima "--- summarize(to = [], width = self.summary_width, max = width - 1, indent= self.summary_indent) {|line| ... } -> ()" "== Instance Methods" "= class OptionParser < Object" "refm/api/src/optparse/OptionParser")
(find-rurima "--- help    -> String" "== Instance Methods" "= class OptionParser < Object" "refm/api/src/optparse/OptionParser")
(find-rurima "--- to_s    -> String" "== Instance Methods" "= class OptionParser < Object" "refm/api/src/optparse/OptionParser")
(find-rurima "--- to_a    -> [String]" "== Instance Methods" "= class OptionParser < Object" "refm/api/src/optparse/OptionParser")
(find-rurima "--- separator(sep)    -> ()" "== Instance Methods" "= class OptionParser < Object" "refm/api/src/optparse/OptionParser")
(find-rurima "--- on(short, desc = \"\") {|v| ... }        -> self" "== Instance Methods" "= class OptionParser < Object" "refm/api/src/optparse/OptionParser")
(find-rurima "--- on(long, desc = \"\") {|v| ... }         -> self" "== Instance Methods" "= class OptionParser < Object" "refm/api/src/optparse/OptionParser")
(find-rurima "--- on(short, long, desc = \"\") {|v| ... }  -> self" "== Instance Methods" "= class OptionParser < Object" "refm/api/src/optparse/OptionParser")
(find-rurima "--- on(short, pat = /.*/, desc = \"\") {|v| ...}        -> self" "== Instance Methods" "= class OptionParser < Object" "refm/api/src/optparse/OptionParser")
(find-rurima "--- on(long, pat = /.*/, desc = \"\") {|v| ...}         -> self" "== Instance Methods" "= class OptionParser < Object" "refm/api/src/optparse/OptionParser")
(find-rurima "--- on(short, long, pat = /.*/, desc = \"\") {|v| ...}  -> self" "== Instance Methods" "= class OptionParser < Object" "refm/api/src/optparse/OptionParser")
(find-rurima "--- on(short, klass = String, desc = \"\") {|v| ...}        -> self" "== Instance Methods" "= class OptionParser < Object" "refm/api/src/optparse/OptionParser")
(find-rurima "--- on(long, klass = String, desc = \"\") {|v| ...}         -> self" "== Instance Methods" "= class OptionParser < Object" "refm/api/src/optparse/OptionParser")
(find-rurima "--- on(short, long, klass = String, desc = \"\") {|v| ...}  -> self" "== Instance Methods" "= class OptionParser < Object" "refm/api/src/optparse/OptionParser")
(find-rurima "==== デフォルトで利用可能な引数クラス" "== Instance Methods" "= class OptionParser < Object" "refm/api/src/optparse/OptionParser")
(find-rurima "--- on(short, *rest) {|v| ...}        -> self" "==== デフォルトで利用可能な引数クラス" "== Instance Methods" "= class OptionParser < Object" "refm/api/src/optparse/OptionParser")
(find-rurima "--- on(long, *rest) {|v| ...}         -> self" "==== デフォルトで利用可能な引数クラス" "== Instance Methods" "= class OptionParser < Object" "refm/api/src/optparse/OptionParser")
(find-rurima "--- on(short, long, *rest) {|v| ...}  -> self" "==== デフォルトで利用可能な引数クラス" "== Instance Methods" "= class OptionParser < Object" "refm/api/src/optparse/OptionParser")
(find-rurima "--- on_head(*arg, &block)" "==== デフォルトで利用可能な引数クラス" "== Instance Methods" "= class OptionParser < Object" "refm/api/src/optparse/OptionParser")
(find-rurima "--- on_tail(*arg, &block)" "==== デフォルトで利用可能な引数クラス" "== Instance Methods" "= class OptionParser < Object" "refm/api/src/optparse/OptionParser")
(find-rurima "--- order(argv)                     -> [String]" "==== デフォルトで利用可能な引数クラス" "== Instance Methods" "= class OptionParser < Object" "refm/api/src/optparse/OptionParser")
(find-rurima "--- order(argv){|s| ...}            -> [String]" "==== デフォルトで利用可能な引数クラス" "== Instance Methods" "= class OptionParser < Object" "refm/api/src/optparse/OptionParser")
(find-rurima "--- order(*args)                    -> [String]" "==== デフォルトで利用可能な引数クラス" "== Instance Methods" "= class OptionParser < Object" "refm/api/src/optparse/OptionParser")
(find-rurima "--- order(*args){|s| ...}           -> [String]" "==== デフォルトで利用可能な引数クラス" "== Instance Methods" "= class OptionParser < Object" "refm/api/src/optparse/OptionParser")
(find-rurima "--- order!(argv = self.default_argv)             -> [String]" "==== デフォルトで利用可能な引数クラス" "== Instance Methods" "= class OptionParser < Object" "refm/api/src/optparse/OptionParser")
(find-rurima "--- order!(argv = self.default_argv) {|s| ...}   -> [String]" "==== デフォルトで利用可能な引数クラス" "== Instance Methods" "= class OptionParser < Object" "refm/api/src/optparse/OptionParser")
(find-rurima "--- permute(argv)            -> [String]" "==== デフォルトで利用可能な引数クラス" "== Instance Methods" "= class OptionParser < Object" "refm/api/src/optparse/OptionParser")
(find-rurima "--- permute(*args)           -> [String]" "==== デフォルトで利用可能な引数クラス" "== Instance Methods" "= class OptionParser < Object" "refm/api/src/optparse/OptionParser")
(find-rurima "--- permute!(argv = self.default_argv)    -> [String]" "==== デフォルトで利用可能な引数クラス" "== Instance Methods" "= class OptionParser < Object" "refm/api/src/optparse/OptionParser")
(find-rurima "--- parse(argv)           -> [String]" "==== デフォルトで利用可能な引数クラス" "== Instance Methods" "= class OptionParser < Object" "refm/api/src/optparse/OptionParser")
(find-rurima "--- parse(*args)          -> [String]" "==== デフォルトで利用可能な引数クラス" "== Instance Methods" "= class OptionParser < Object" "refm/api/src/optparse/OptionParser")
(find-rurima "--- parse!(argv = self.default_argv)   -> [String]" "==== デフォルトで利用可能な引数クラス" "== Instance Methods" "= class OptionParser < Object" "refm/api/src/optparse/OptionParser")
(find-rurima "--- load(filename = nil)     -> bool" "==== デフォルトで利用可能な引数クラス" "== Instance Methods" "= class OptionParser < Object" "refm/api/src/optparse/OptionParser")
(find-rurima "--- environment(env)    -> [String]" "==== デフォルトで利用可能な引数クラス" "== Instance Methods" "= class OptionParser < Object" "refm/api/src/optparse/OptionParser")
(find-rurima "--- default_argv    -> [String]" "==== デフォルトで利用可能な引数クラス" "== Instance Methods" "= class OptionParser < Object" "refm/api/src/optparse/OptionParser")
(find-rurima "--- default_argv=(argv)" "==== デフォルトで利用可能な引数クラス" "== Instance Methods" "= class OptionParser < Object" "refm/api/src/optparse/OptionParser")
(find-rurima "--- getopts(argv, *opts)   -> Hash" "==== デフォルトで利用可能な引数クラス" "== Instance Methods" "= class OptionParser < Object" "refm/api/src/optparse/OptionParser")
(find-rurima "--- getopts(*opts)         -> Hash" "==== デフォルトで利用可能な引数クラス" "== Instance Methods" "= class OptionParser < Object" "refm/api/src/optparse/OptionParser")
(find-rurima "= module OptionParser::Arguable" "refm/api/src/optparse/Arguable")
(find-rurima "== Instance Methods" "= module OptionParser::Arguable" "refm/api/src/optparse/Arguable")
(find-rurima "--- options=(opt)" "== Instance Methods" "= module OptionParser::Arguable" "refm/api/src/optparse/Arguable")
(find-rurima "--- options                -> OptionParser" "== Instance Methods" "= module OptionParser::Arguable" "refm/api/src/optparse/Arguable")
(find-rurima "--- options{|opt| ... }    -> object | nil" "== Instance Methods" "= module OptionParser::Arguable" "refm/api/src/optparse/Arguable")
(find-rurima "--- order!               -> [String]" "== Instance Methods" "= module OptionParser::Arguable" "refm/api/src/optparse/Arguable")
(find-rurima "--- order!{|s| ... }     -> [String]" "== Instance Methods" "= module OptionParser::Arguable" "refm/api/src/optparse/Arguable")
(find-rurima "--- permute!             -> [String]" "== Instance Methods" "= module OptionParser::Arguable" "refm/api/src/optparse/Arguable")
(find-rurima "--- parse!               -> [String]" "== Instance Methods" "= module OptionParser::Arguable" "refm/api/src/optparse/Arguable")
(find-rurima "--- getopts(short_opt, *long_opt)    -> Hash" "== Instance Methods" "= module OptionParser::Arguable" "refm/api/src/optparse/Arguable")
(find-rurima "= module Syck" "refm/api/src/syck.rd")
(find-rurima "= module YAML::Syck" "refm/api/src/syck.rd")
(find-rurima "== Constants" "= module YAML::Syck" "refm/api/src/syck.rd")
(find-rurima "--- VERSION -> String" "== Constants" "= module YAML::Syck" "refm/api/src/syck.rd")
(find-rurima "--- DefaultResolver -> YAML::Syck::Resolver" "== Constants" "= module YAML::Syck" "refm/api/src/syck.rd")
(find-rurima "--- GenericResolver -> YAML::Syck::Resolver" "== Constants" "= module YAML::Syck" "refm/api/src/syck.rd")
(find-rurima "== Module Functions" "= module YAML::Syck" "refm/api/src/syck.rd")
(find-rurima "--- compile(io)" "== Module Functions" "= module YAML::Syck" "refm/api/src/syck.rd")
(find-rurima "= class Syck::Resolver" "refm/api/src/syck.rd")
(find-rurima "= class YAML::Syck::Resolver" "refm/api/src/syck.rd")
(find-rurima "== Class Methods" "= class YAML::Syck::Resolver" "refm/api/src/syck.rd")
(find-rurima "--- new -> YAML::Syck::Resolver" "== Class Methods" "= class YAML::Syck::Resolver" "refm/api/src/syck.rd")
(find-rurima "== Instance Methods" "= class YAML::Syck::Resolver" "refm/api/src/syck.rd")
(find-rurima "--- tags" "== Instance Methods" "= class YAML::Syck::Resolver" "refm/api/src/syck.rd")
(find-rurima "--- tags=(val)" "== Instance Methods" "= class YAML::Syck::Resolver" "refm/api/src/syck.rd")
(find-rurima "--- add_type(taguri, cls)" "== Instance Methods" "= class YAML::Syck::Resolver" "refm/api/src/syck.rd")
(find-rurima "--- use_types_at(hsh)" "== Instance Methods" "= class YAML::Syck::Resolver" "refm/api/src/syck.rd")
(find-rurima "--- detect_implicit(val)" "== Instance Methods" "= class YAML::Syck::Resolver" "refm/api/src/syck.rd")
(find-rurima "--- transfer(type, val)" "== Instance Methods" "= class YAML::Syck::Resolver" "refm/api/src/syck.rd")
(find-rurima "--- node_import(node)" "== Instance Methods" "= class YAML::Syck::Resolver" "refm/api/src/syck.rd")
(find-rurima "--- tagurize(val) -> String" "== Instance Methods" "= class YAML::Syck::Resolver" "refm/api/src/syck.rd")
(find-rurima "= class Syck::Parser" "refm/api/src/syck.rd")
(find-rurima "= class YAML::Syck::Parser" "refm/api/src/syck.rd")
(find-rurima "== Class Methods" "= class YAML::Syck::Parser" "refm/api/src/syck.rd")
(find-rurima "--- new(options = {}) -> YAML::Syck::Parser" "== Class Methods" "= class YAML::Syck::Parser" "refm/api/src/syck.rd")
(find-rurima "== Instance Methods" "= class YAML::Syck::Parser" "refm/api/src/syck.rd")
(find-rurima "--- options(val)" "== Instance Methods" "= class YAML::Syck::Parser" "refm/api/src/syck.rd")
(find-rurima "--- options=(val)" "== Instance Methods" "= class YAML::Syck::Parser" "refm/api/src/syck.rd")
(find-rurima "--- resolver(val)" "== Instance Methods" "= class YAML::Syck::Parser" "refm/api/src/syck.rd")
(find-rurima "--- resolver=(val)" "== Instance Methods" "= class YAML::Syck::Parser" "refm/api/src/syck.rd")
(find-rurima "--- input(val)" "== Instance Methods" "= class YAML::Syck::Parser" "refm/api/src/syck.rd")
(find-rurima "--- input=(val)" "== Instance Methods" "= class YAML::Syck::Parser" "refm/api/src/syck.rd")
(find-rurima "--- bufsize(val)" "== Instance Methods" "= class YAML::Syck::Parser" "refm/api/src/syck.rd")
(find-rurima "--- bufsize=(val)" "== Instance Methods" "= class YAML::Syck::Parser" "refm/api/src/syck.rd")
(find-rurima "--- load(io)" "== Instance Methods" "= class YAML::Syck::Parser" "refm/api/src/syck.rd")
(find-rurima "--- load_documents(io)" "== Instance Methods" "= class YAML::Syck::Parser" "refm/api/src/syck.rd")
(find-rurima "--- load_documents(io) { |doc| ... }" "== Instance Methods" "= class YAML::Syck::Parser" "refm/api/src/syck.rd")
(find-rurima "--- set_resolver(resolver)" "== Instance Methods" "= class YAML::Syck::Parser" "refm/api/src/syck.rd")
(find-rurima "= class Syck::Node" "refm/api/src/syck.rd")
(find-rurima "= class YAML::Syck::Node" "refm/api/src/syck.rd")
(find-rurima "== Instance Methods" "= class YAML::Syck::Node" "refm/api/src/syck.rd")
(find-rurima "--- initialize_copy(orig) -> YAML::Syck::Node" "== Instance Methods" "= class YAML::Syck::Node" "refm/api/src/syck.rd")
(find-rurima "--- emitter" "== Instance Methods" "= class YAML::Syck::Node" "refm/api/src/syck.rd")
(find-rurima "--- emitter=(val)" "== Instance Methods" "= class YAML::Syck::Node" "refm/api/src/syck.rd")
(find-rurima "--- resolver" "== Instance Methods" "= class YAML::Syck::Node" "refm/api/src/syck.rd")
(find-rurima "--- resolver=(val)" "== Instance Methods" "= class YAML::Syck::Node" "refm/api/src/syck.rd")
(find-rurima "--- kind" "== Instance Methods" "= class YAML::Syck::Node" "refm/api/src/syck.rd")
(find-rurima "--- kind=(val)" "== Instance Methods" "= class YAML::Syck::Node" "refm/api/src/syck.rd")
(find-rurima "--- type_id" "== Instance Methods" "= class YAML::Syck::Node" "refm/api/src/syck.rd")
(find-rurima "--- type_id=(val)" "== Instance Methods" "= class YAML::Syck::Node" "refm/api/src/syck.rd")
(find-rurima "--- value" "== Instance Methods" "= class YAML::Syck::Node" "refm/api/src/syck.rd")
(find-rurima "--- value=(val)" "== Instance Methods" "= class YAML::Syck::Node" "refm/api/src/syck.rd")
(find-rurima "--- type_id=(val)" "== Instance Methods" "= class YAML::Syck::Node" "refm/api/src/syck.rd")
(find-rurima "--- transform" "== Instance Methods" "= class YAML::Syck::Node" "refm/api/src/syck.rd")
(find-rurima "= class Syck::Scalar" "refm/api/src/syck.rd")
(find-rurima "= class YAML::Syck::Scalar" "refm/api/src/syck.rd")
(find-rurima "== Class Methods" "= class YAML::Syck::Scalar" "refm/api/src/syck.rd")
(find-rurima "--- new(type_id, val, style) -> YAML::Syck::Scalar" "== Class Methods" "= class YAML::Syck::Scalar" "refm/api/src/syck.rd")
(find-rurima "== Instance Methods" "= class YAML::Syck::Scalar" "refm/api/src/syck.rd")
(find-rurima "--- value=(val)" "== Instance Methods" "= class YAML::Syck::Scalar" "refm/api/src/syck.rd")
(find-rurima "--- style=(val)" "== Instance Methods" "= class YAML::Syck::Scalar" "refm/api/src/syck.rd")
(find-rurima "= class Syck::Seq" "refm/api/src/syck.rd")
(find-rurima "= class YAML::Syck::Seq" "refm/api/src/syck.rd")
(find-rurima "== Class Methods" "= class YAML::Syck::Seq" "refm/api/src/syck.rd")
(find-rurima "--- new(type_id, val, style) -> YAML::Syck::Seq" "== Class Methods" "= class YAML::Syck::Seq" "refm/api/src/syck.rd")
(find-rurima "== Instance Methods" "= class YAML::Syck::Seq" "refm/api/src/syck.rd")
(find-rurima "--- value=(val)" "== Instance Methods" "= class YAML::Syck::Seq" "refm/api/src/syck.rd")
(find-rurima "--- add(key, val)" "== Instance Methods" "= class YAML::Syck::Seq" "refm/api/src/syck.rd")
(find-rurima "--- style=(val)" "== Instance Methods" "= class YAML::Syck::Seq" "refm/api/src/syck.rd")
(find-rurima "= class Syck::Map" "refm/api/src/syck.rd")
(find-rurima "= class YAML::Syck::Map" "refm/api/src/syck.rd")
(find-rurima "== Class Methods" "= class YAML::Syck::Map" "refm/api/src/syck.rd")
(find-rurima "--- new(type_id, val, style) -> YAML::Syck::Map" "== Class Methods" "= class YAML::Syck::Map" "refm/api/src/syck.rd")
(find-rurima "== Instance Methods" "= class YAML::Syck::Map" "refm/api/src/syck.rd")
(find-rurima "--- value=(val)" "== Instance Methods" "= class YAML::Syck::Map" "refm/api/src/syck.rd")
(find-rurima "--- add(key, val)" "== Instance Methods" "= class YAML::Syck::Map" "refm/api/src/syck.rd")
(find-rurima "--- style=(val)" "== Instance Methods" "= class YAML::Syck::Map" "refm/api/src/syck.rd")
(find-rurima "= class Syck::PrivateType" "refm/api/src/syck.rd")
(find-rurima "= class YAML::PrivateType" "refm/api/src/syck.rd")
(find-rurima "== Class Methods" "= class YAML::PrivateType" "refm/api/src/syck.rd")
(find-rurima "--- new(type_id, val) -> YAML::PrivateType" "== Class Methods" "= class YAML::PrivateType" "refm/api/src/syck.rd")
(find-rurima "== Instance Methods" "= class YAML::PrivateType" "refm/api/src/syck.rd")
(find-rurima "--- type_id" "== Instance Methods" "= class YAML::PrivateType" "refm/api/src/syck.rd")
(find-rurima "--- type_id=(val)" "== Instance Methods" "= class YAML::PrivateType" "refm/api/src/syck.rd")
(find-rurima "--- value" "== Instance Methods" "= class YAML::PrivateType" "refm/api/src/syck.rd")
(find-rurima "--- value=(val)" "== Instance Methods" "= class YAML::PrivateType" "refm/api/src/syck.rd")
(find-rurima "= class Syck::DomainType" "refm/api/src/syck.rd")
(find-rurima "= class YAML::DomainType" "refm/api/src/syck.rd")
(find-rurima "== Class Methods" "= class YAML::DomainType" "refm/api/src/syck.rd")
(find-rurima "--- new(domain, type_id, val) -> YAML::DomainType" "== Class Methods" "= class YAML::DomainType" "refm/api/src/syck.rd")
(find-rurima "== Instance Methods" "= class YAML::DomainType" "refm/api/src/syck.rd")
(find-rurima "--- domain" "== Instance Methods" "= class YAML::DomainType" "refm/api/src/syck.rd")
(find-rurima "--- domain=(val)" "== Instance Methods" "= class YAML::DomainType" "refm/api/src/syck.rd")
(find-rurima "--- type_id" "== Instance Methods" "= class YAML::DomainType" "refm/api/src/syck.rd")
(find-rurima "--- type_id=(val)" "== Instance Methods" "= class YAML::DomainType" "refm/api/src/syck.rd")
(find-rurima "--- value" "== Instance Methods" "= class YAML::DomainType" "refm/api/src/syck.rd")
(find-rurima "--- value=(val)" "== Instance Methods" "= class YAML::DomainType" "refm/api/src/syck.rd")
(find-rurima "= class Syck::Object" "refm/api/src/syck.rd")
(find-rurima "= class YAML::Object" "refm/api/src/syck.rd")
(find-rurima "== Class Methods" "= class YAML::Object" "refm/api/src/syck.rd")
(find-rurima "--- new(klass, ivars) -> YAML::Object" "== Class Methods" "= class YAML::Object" "refm/api/src/syck.rd")
(find-rurima "== Instance Methods" "= class YAML::Object" "refm/api/src/syck.rd")
(find-rurima "--- class" "== Instance Methods" "= class YAML::Object" "refm/api/src/syck.rd")
(find-rurima "--- class=(val)" "== Instance Methods" "= class YAML::Object" "refm/api/src/syck.rd")
(find-rurima "--- ivars" "== Instance Methods" "= class YAML::Object" "refm/api/src/syck.rd")
(find-rurima "--- ivars=(val)" "== Instance Methods" "= class YAML::Object" "refm/api/src/syck.rd")
(find-rurima "--- yaml_initialize(klass, ivars) -> YAML::Object" "== Instance Methods" "= class YAML::Object" "refm/api/src/syck.rd")
(find-rurima "= class Syck::BadAlias" "refm/api/src/syck.rd")
(find-rurima "= class YAML::Syck::BadAlias" "refm/api/src/syck.rd")
(find-rurima "== Class Methods" "= class YAML::Syck::BadAlias" "refm/api/src/syck.rd")
(find-rurima "--- new(name) -> YAML::Syck::BadAlias" "== Class Methods" "= class YAML::Syck::BadAlias" "refm/api/src/syck.rd")
(find-rurima "== Instance Methods" "= class YAML::Syck::BadAlias" "refm/api/src/syck.rd")
(find-rurima "--- name -> String" "== Instance Methods" "= class YAML::Syck::BadAlias" "refm/api/src/syck.rd")
(find-rurima "--- name=(val)" "== Instance Methods" "= class YAML::Syck::BadAlias" "refm/api/src/syck.rd")
(find-rurima "--- <=>(other) -> Integer | nil" "== Instance Methods" "= class YAML::Syck::BadAlias" "refm/api/src/syck.rd")
(find-rurima "= class Syck::MergeKey" "refm/api/src/syck.rd")
(find-rurima "= class Syck::DefaultKey" "refm/api/src/syck.rd")
(find-rurima "= class Syck::Out" "refm/api/src/syck.rd")
(find-rurima "= class YAML::Syck::MergeKey" "refm/api/src/syck.rd")
(find-rurima "= class YAML::Syck::DefaultKey" "refm/api/src/syck.rd")
(find-rurima "= class YAML::Syck::Out" "refm/api/src/syck.rd")
(find-rurima "== Class Methods" "= class YAML::Syck::Out" "refm/api/src/syck.rd")
(find-rurima "--- new(emitter) -> YAML::Syck::Out" "== Class Methods" "= class YAML::Syck::Out" "refm/api/src/syck.rd")
(find-rurima "== Instance Methods" "= class YAML::Syck::Out" "refm/api/src/syck.rd")
(find-rurima "--- emitter -> YAML::Syck::Emitter" "== Instance Methods" "= class YAML::Syck::Out" "refm/api/src/syck.rd")
(find-rurima "--- emitter=(val)" "== Instance Methods" "= class YAML::Syck::Out" "refm/api/src/syck.rd")
(find-rurima "--- map(type_id, style = nil)" "== Instance Methods" "= class YAML::Syck::Out" "refm/api/src/syck.rd")
(find-rurima "--- seq(type_id, style = nil)" "== Instance Methods" "= class YAML::Syck::Out" "refm/api/src/syck.rd")
(find-rurima "--- scalar(type_id, str, style = nil)" "== Instance Methods" "= class YAML::Syck::Out" "refm/api/src/syck.rd")
(find-rurima "= class Syck::Emitter" "refm/api/src/syck.rd")
(find-rurima "= class YAML::Syck::Emitter" "refm/api/src/syck.rd")
(find-rurima "== Class Methods" "= class YAML::Syck::Emitter" "refm/api/src/syck.rd")
(find-rurima "--- new(*options) -> YAML::Syck::Emitter" "== Class Methods" "= class YAML::Syck::Emitter" "refm/api/src/syck.rd")
(find-rurima "== Instance Methods" "= class YAML::Syck::Emitter" "refm/api/src/syck.rd")
(find-rurima "--- level" "== Instance Methods" "= class YAML::Syck::Emitter" "refm/api/src/syck.rd")
(find-rurima "--- level=(value)" "== Instance Methods" "= class YAML::Syck::Emitter" "refm/api/src/syck.rd")
(find-rurima "--- reset(*options) -> YAML::Syck::Emitter" "== Instance Methods" "= class YAML::Syck::Emitter" "refm/api/src/syck.rd")
(find-rurima "--- emit(object_id)" "== Instance Methods" "= class YAML::Syck::Emitter" "refm/api/src/syck.rd")
(find-rurima "--- set_resolver(resolver) -> YAML::Syck::Emitter" "== Instance Methods" "= class YAML::Syck::Emitter" "refm/api/src/syck.rd")
(find-rurima "--- node_export(node)" "== Instance Methods" "= class YAML::Syck::Emitter" "refm/api/src/syck.rd")
(find-rurima "= class Proc < Object" "refm/api/src/_builtin/Proc")
(find-rurima "== Class Methods" "= class Proc < Object" "refm/api/src/_builtin/Proc")
(find-rurima "--- new -> Proc" "== Class Methods" "= class Proc < Object" "refm/api/src/_builtin/Proc")
(find-rurima "--- new { ... } -> Proc" "== Class Methods" "= class Proc < Object" "refm/api/src/_builtin/Proc")
(find-rurima "== Instance Methods" "= class Proc < Object" "refm/api/src/_builtin/Proc")
(find-rurima "--- [](*arg) -> ()" "== Instance Methods" "= class Proc < Object" "refm/api/src/_builtin/Proc")
(find-rurima "--- call(*arg) -> ()" "== Instance Methods" "= class Proc < Object" "refm/api/src/_builtin/Proc")
(find-rurima "--- ===(*arg) -> ()" "== Instance Methods" "= class Proc < Object" "refm/api/src/_builtin/Proc")
(find-rurima "--- yield(*arg) -> ()" "== Instance Methods" "= class Proc < Object" "refm/api/src/_builtin/Proc")
(find-rurima "--- arity -> Fixnum" "== Instance Methods" "= class Proc < Object" "refm/api/src/_builtin/Proc")
(find-rurima "--- binding -> Binding" "== Instance Methods" "= class Proc < Object" "refm/api/src/_builtin/Proc")
(find-rurima "--- to_proc -> self" "== Instance Methods" "= class Proc < Object" "refm/api/src/_builtin/Proc")
(find-rurima "--- to_s -> String" "== Instance Methods" "= class Proc < Object" "refm/api/src/_builtin/Proc")
(find-rurima "--- curry         -> Proc" "== Instance Methods" "= class Proc < Object" "refm/api/src/_builtin/Proc")
(find-rurima "--- curry(arity)  -> Proc" "== Instance Methods" "= class Proc < Object" "refm/api/src/_builtin/Proc")
(find-rurima "--- lambda? -> bool" "== Instance Methods" "= class Proc < Object" "refm/api/src/_builtin/Proc")
(find-rurima "--- source_location -> [String, Fixnum] | nil" "== Instance Methods" "= class Proc < Object" "refm/api/src/_builtin/Proc")
(find-rurima "--- parameters -> [object]" "== Instance Methods" "= class Proc < Object" "refm/api/src/_builtin/Proc")
(find-rurima "= class Fixnum < Integer" "refm/api/src/_builtin/Fixnum")
(find-rurima "=== 破壊的な変更" "= class Fixnum < Integer" "refm/api/src/_builtin/Fixnum")
(find-rurima "== Instance Methods" "= class Fixnum < Integer" "refm/api/src/_builtin/Fixnum")
(find-rurima "--- [](nth) -> Fixnum" "== Instance Methods" "= class Fixnum < Integer" "refm/api/src/_builtin/Fixnum")
(find-rurima "--- +(other) -> Fixnum | Bignum | Float" "== Instance Methods" "= class Fixnum < Integer" "refm/api/src/_builtin/Fixnum")
(find-rurima "--- -(other) -> Fixnum | Bignum | Float" "== Instance Methods" "= class Fixnum < Integer" "refm/api/src/_builtin/Fixnum")
(find-rurima "--- *(other) -> Fixnum | Bignum | Float" "== Instance Methods" "= class Fixnum < Integer" "refm/api/src/_builtin/Fixnum")
(find-rurima "--- /(other) -> Fixnum | Bignum | Float" "== Instance Methods" "= class Fixnum < Integer" "refm/api/src/_builtin/Fixnum")
(find-rurima "--- %(other) -> Fixnum | Bignum | Float" "== Instance Methods" "= class Fixnum < Integer" "refm/api/src/_builtin/Fixnum")
(find-rurima "--- **(other) -> Fixnum | Bignum | Float" "== Instance Methods" "= class Fixnum < Integer" "refm/api/src/_builtin/Fixnum")
(find-rurima "--- <=>(other) -> Fixnum" "== Instance Methods" "= class Fixnum < Integer" "refm/api/src/_builtin/Fixnum")
(find-rurima "--- ==(other) -> bool" "== Instance Methods" "= class Fixnum < Integer" "refm/api/src/_builtin/Fixnum")
(find-rurima "--- <(other)  -> bool" "== Instance Methods" "= class Fixnum < Integer" "refm/api/src/_builtin/Fixnum")
(find-rurima "--- <=(other) -> bool" "== Instance Methods" "= class Fixnum < Integer" "refm/api/src/_builtin/Fixnum")
(find-rurima "--- >(other)  -> bool" "== Instance Methods" "= class Fixnum < Integer" "refm/api/src/_builtin/Fixnum")
(find-rurima "--- >=(other) -> bool" "== Instance Methods" "= class Fixnum < Integer" "refm/api/src/_builtin/Fixnum")
(find-rurima "--- ~        -> Fixnum | Bignum" "== Instance Methods" "= class Fixnum < Integer" "refm/api/src/_builtin/Fixnum")
(find-rurima "--- |(other) -> Fixnum | Bignum" "== Instance Methods" "= class Fixnum < Integer" "refm/api/src/_builtin/Fixnum")
(find-rurima "--- &(other) -> Fixnum | Bignum" "== Instance Methods" "= class Fixnum < Integer" "refm/api/src/_builtin/Fixnum")
(find-rurima "--- ^(other) -> Fixnum | Bignum" "== Instance Methods" "= class Fixnum < Integer" "refm/api/src/_builtin/Fixnum")
(find-rurima "--- <<(bits) -> Fixnum | Bignum" "== Instance Methods" "= class Fixnum < Integer" "refm/api/src/_builtin/Fixnum")
(find-rurima "--- >>(bits) -> Fixnum | Bignum" "== Instance Methods" "= class Fixnum < Integer" "refm/api/src/_builtin/Fixnum")
(find-rurima "--- id2name -> String | nil" "== Instance Methods" "= class Fixnum < Integer" "refm/api/src/_builtin/Fixnum")
(find-rurima "--- size -> Fixnum" "== Instance Methods" "= class Fixnum < Integer" "refm/api/src/_builtin/Fixnum")
(find-rurima "--- to_f -> Float" "== Instance Methods" "= class Fixnum < Integer" "refm/api/src/_builtin/Fixnum")
(find-rurima "--- to_sym -> Symbol | nil" "== Instance Methods" "= class Fixnum < Integer" "refm/api/src/_builtin/Fixnum")
(find-rurima "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "== Class Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- abort_on_exception             -> bool" "== Class Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- abort_on_exception=(newstate)" "== Class Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- critical             -> nil" "== Class Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- critical             -> bool" "== Class Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- critical=(newstate)" "== Class Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- current    -> Thread" "== Class Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- exit    -> ()" "== Class Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- kill(thread)    -> Thread" "== Class Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- list    -> [Thread]" "== Class Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- main    -> Thread" "== Class Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- start(*arg) {|*arg| ... }       -> Thread" "== Class Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- fork(*arg) {|*arg| ... }        -> Thread" "== Class Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- new(*arg) {|*arg| ... }         -> Thread" "== Class Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- pass    -> nil" "== Class Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- stop     -> nil" "== Class Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- exclusive { ... }  -> object" "== Class Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "== Instance Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- [](name)    -> object | nil" "== Instance Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- []=(name,val)" "== Instance Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- abort_on_exception               -> bool" "== Instance Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- abort_on_exception=(newstate)" "== Instance Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- alive?     -> bool" "== Instance Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- exit         -> self" "== Instance Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- kill         -> self" "== Instance Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- terminate    -> self" "== Instance Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- exit!         -> self" "== Instance Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- kill!         -> self" "== Instance Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- terminate!    -> self" "== Instance Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- group    -> ThreadGroup | nil" "== Instance Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- join           -> self" "== Instance Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- join(limit)    -> self | nil" "== Instance Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- key?(name)     -> bool" "== Instance Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- keys    -> [Symbol]" "== Instance Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- priority    -> Integer" "== Instance Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- priority=(val)" "== Instance Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- raise(error_type, message, traceback)     -> ()" "== Instance Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- run    -> self" "== Instance Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- safe_level    -> Integer" "== Instance Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- status    -> String | false | nil" "== Instance Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- stop?    -> bool" "== Instance Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- value    -> object " "== Instance Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- wakeup    -> self" "== Instance Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- add_trace_func(pr) -> Proc" "== Instance Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- set_trace_func(pr) -> Proc | nil" "== Instance Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- backtrace    -> [String] | nil" "== Instance Methods" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "== Constants" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "--- MUTEX_FOR_THREAD_EXCLUSIVE" "== Constants" "= class Thread < Object" "refm/api/src/_builtin/Thread")
(find-rurima "= module GC::Profiler" "refm/api/src/_builtin/GC__Profiler")
(find-rurima "== Singleton Methods " "= module GC::Profiler" "refm/api/src/_builtin/GC__Profiler")
(find-rurima "--- enabled? -> bool" "== Singleton Methods " "= module GC::Profiler" "refm/api/src/_builtin/GC__Profiler")
(find-rurima "--- enable -> nil" "== Singleton Methods " "= module GC::Profiler" "refm/api/src/_builtin/GC__Profiler")
(find-rurima "--- disable -> nil" "== Singleton Methods " "= module GC::Profiler" "refm/api/src/_builtin/GC__Profiler")
(find-rurima "--- clear -> nil" "== Singleton Methods " "= module GC::Profiler" "refm/api/src/_builtin/GC__Profiler")
(find-rurima "--- result -> String" "== Singleton Methods " "= module GC::Profiler" "refm/api/src/_builtin/GC__Profiler")
(find-rurima "--- report(out = $stdout) -> nil" "== Singleton Methods " "= module GC::Profiler" "refm/api/src/_builtin/GC__Profiler")
(find-rurima "--- total_time -> Float" "== Singleton Methods " "= module GC::Profiler" "refm/api/src/_builtin/GC__Profiler")
(find-rurima "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- *(other) -> Complex" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- **(other) -> Complex" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- +(other) -> Complex" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- -(other) -> Complex" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- -@ -> Complex" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- /(other)   -> Complex" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- quo(other) -> Complex" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- ==(other) -> bool" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- abs       -> Float" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- magnitude -> Float" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- abs2 -> Numeric" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- arg   -> Float" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- angle -> Float" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- phase -> Float" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- coerce(other) -> [Complex, Complex]" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- conjugate -> Complex" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- conj      -> Complex" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- denominator -> Integer" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- eql?(other) -> bool" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- fdiv(other) -> Complex" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- hash -> Integer" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- imag      -> Numeric" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- imaginary -> Numeric" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- inspect -> String" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- marshal_dump -> Array" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- marshal_load -> Complex" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- numerator -> Complex" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- polar -> [Numeric, Numeric]" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- real -> Numeric" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- real? -> false" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- rect        -> [Numeric, Numeric]" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- rectangular -> [Numeric, Numeric]" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- to_f -> Float" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- to_i -> Integer" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- to_r             -> Rational" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- rationalize      -> Rational" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- rationalize(eps) -> Rational" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- to_s -> String" "== Instance Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "== Class Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- rect(r, i = 0)        -> Complex" "== Class Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- rectangular(r, i = 0) -> Complex" "== Class Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- polar(r, theta = 0) -> Complex" "== Class Methods" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "== Constants" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "--- I -> Complex" "== Constants" "= class Complex < Numeric" "refm/api/src/_builtin/Complex")
(find-rurima "= module ObjectSpace " "refm/api/src/_builtin/ObjectSpace")
(find-rurima "== Module Functions" "= module ObjectSpace " "refm/api/src/_builtin/ObjectSpace")
(find-rurima "--- _id2ref(id)    -> object" "== Module Functions" "= module ObjectSpace " "refm/api/src/_builtin/ObjectSpace")
(find-rurima "--- define_finalizer(obj, proc)         -> Array" "== Module Functions" "= module ObjectSpace " "refm/api/src/_builtin/ObjectSpace")
(find-rurima "--- define_finalizer(obj) {|id| ...}    -> Array" "== Module Functions" "= module ObjectSpace " "refm/api/src/_builtin/ObjectSpace")
(find-rurima "==== 使い方の注意" "== Module Functions" "= module ObjectSpace " "refm/api/src/_builtin/ObjectSpace")
(find-rurima "--- each_object        {|object| ...}    -> Integer" "==== 使い方の注意" "== Module Functions" "= module ObjectSpace " "refm/api/src/_builtin/ObjectSpace")
(find-rurima "--- each_object(klass) {|object| ...}    -> Integer" "==== 使い方の注意" "== Module Functions" "= module ObjectSpace " "refm/api/src/_builtin/ObjectSpace")
(find-rurima "--- each_object                          -> Enumerator" "==== 使い方の注意" "== Module Functions" "= module ObjectSpace " "refm/api/src/_builtin/ObjectSpace")
(find-rurima "--- each_object(klass)                   -> Enumerator" "==== 使い方の注意" "== Module Functions" "= module ObjectSpace " "refm/api/src/_builtin/ObjectSpace")
(find-rurima "--- each_object                          -> Enumerable::Enumerator" "==== 使い方の注意" "== Module Functions" "= module ObjectSpace " "refm/api/src/_builtin/ObjectSpace")
(find-rurima "--- each_object(klass)                   -> Enumerable::Enumerator" "==== 使い方の注意" "== Module Functions" "= module ObjectSpace " "refm/api/src/_builtin/ObjectSpace")
(find-rurima "--- garbage_collect    -> nil" "==== 使い方の注意" "== Module Functions" "= module ObjectSpace " "refm/api/src/_builtin/ObjectSpace")
(find-rurima "--- undefine_finalizer(obj)    -> object" "==== 使い方の注意" "== Module Functions" "= module ObjectSpace " "refm/api/src/_builtin/ObjectSpace")
(find-rurima "--- add_finalizer(proc)    -> Proc" "==== 使い方の注意" "== Module Functions" "= module ObjectSpace " "refm/api/src/_builtin/ObjectSpace")
(find-rurima "--- call_finalizer(obj)    -> object" "==== 使い方の注意" "== Module Functions" "= module ObjectSpace " "refm/api/src/_builtin/ObjectSpace")
(find-rurima "--- finalizers     -> [Proc]" "==== 使い方の注意" "== Module Functions" "= module ObjectSpace " "refm/api/src/_builtin/ObjectSpace")
(find-rurima "--- remove_finalizer(proc)    -> Proc" "==== 使い方の注意" "== Module Functions" "= module ObjectSpace " "refm/api/src/_builtin/ObjectSpace")
(find-rurima "==== 整数のテンプレート文字のシステム依存性" "refm/api/src/_builtin/pack-template")
(find-rurima "==== 各テンプレート文字の説明" "refm/api/src/_builtin/pack-template")
(find-rurima "==== 使用例" "refm/api/src/_builtin/pack-template")
(find-rurima "= class LocalJumpError < StandardError" "refm/api/src/_builtin/LocalJumpError")
(find-rurima "== Instance Methods" "= class LocalJumpError < StandardError" "refm/api/src/_builtin/LocalJumpError")
(find-rurima "--- exit_value -> object" "== Instance Methods" "= class LocalJumpError < StandardError" "refm/api/src/_builtin/LocalJumpError")
(find-rurima "--- reason -> Symbol" "== Instance Methods" "= class LocalJumpError < StandardError" "refm/api/src/_builtin/LocalJumpError")
(find-rurima "= class Bignum < Integer" "refm/api/src/_builtin/Bignum")
(find-rurima "=== 破壊的な変更" "= class Bignum < Integer" "refm/api/src/_builtin/Bignum")
(find-rurima "== Instance Methods" "= class Bignum < Integer" "refm/api/src/_builtin/Bignum")
(find-rurima "--- [](nth) -> Fixnum" "== Instance Methods" "= class Bignum < Integer" "refm/api/src/_builtin/Bignum")
(find-rurima "--- +(other) -> Fixnum | Bignum | Float" "== Instance Methods" "= class Bignum < Integer" "refm/api/src/_builtin/Bignum")
(find-rurima "--- -(other) -> Fixnum | Bignum | Float" "== Instance Methods" "= class Bignum < Integer" "refm/api/src/_builtin/Bignum")
(find-rurima "--- *(other) -> Fixnum | Bignum | Float" "== Instance Methods" "= class Bignum < Integer" "refm/api/src/_builtin/Bignum")
(find-rurima "--- /(other) -> Fixnum | Bignum | Float" "== Instance Methods" "= class Bignum < Integer" "refm/api/src/_builtin/Bignum")
(find-rurima "--- %(other) -> Fixnum | Bignum | Float" "== Instance Methods" "= class Bignum < Integer" "refm/api/src/_builtin/Bignum")
(find-rurima "--- **(other) -> Fixnum | Bignum | Float" "== Instance Methods" "= class Bignum < Integer" "refm/api/src/_builtin/Bignum")
(find-rurima "--- <=>(other) -> Fixnum | nil" "== Instance Methods" "= class Bignum < Integer" "refm/api/src/_builtin/Bignum")
(find-rurima "--- ==(other) -> bool" "== Instance Methods" "= class Bignum < Integer" "refm/api/src/_builtin/Bignum")
(find-rurima "--- ~        -> Fixnum | Bignum" "== Instance Methods" "= class Bignum < Integer" "refm/api/src/_builtin/Bignum")
(find-rurima "--- |(other) -> Fixnum | Bignum" "== Instance Methods" "= class Bignum < Integer" "refm/api/src/_builtin/Bignum")
(find-rurima "--- &(other) -> Fixnum | Bignum" "== Instance Methods" "= class Bignum < Integer" "refm/api/src/_builtin/Bignum")
(find-rurima "--- ^(other) -> Fixnum | Bignum" "== Instance Methods" "= class Bignum < Integer" "refm/api/src/_builtin/Bignum")
(find-rurima "--- <<(bits) -> Fixnum | Bignum" "== Instance Methods" "= class Bignum < Integer" "refm/api/src/_builtin/Bignum")
(find-rurima "--- >>(bits) -> Fixnum | Bignum" "== Instance Methods" "= class Bignum < Integer" "refm/api/src/_builtin/Bignum")
(find-rurima "--- size -> Fixnum" "== Instance Methods" "= class Bignum < Integer" "refm/api/src/_builtin/Bignum")
(find-rurima "--- to_f -> Float" "== Instance Methods" "= class Bignum < Integer" "refm/api/src/_builtin/Bignum")
(find-rurima "= module Comparable" "refm/api/src/_builtin/Comparable")
(find-rurima "== Instance Methods" "= module Comparable" "refm/api/src/_builtin/Comparable")
(find-rurima "--- ==(other)    -> bool | nil" "== Instance Methods" "= module Comparable" "refm/api/src/_builtin/Comparable")
(find-rurima "--- >(other)    -> bool" "== Instance Methods" "= module Comparable" "refm/api/src/_builtin/Comparable")
(find-rurima "--- >=(other)    -> bool" "== Instance Methods" "= module Comparable" "refm/api/src/_builtin/Comparable")
(find-rurima "--- <(other)    -> bool" "== Instance Methods" "= module Comparable" "refm/api/src/_builtin/Comparable")
(find-rurima "--- <=(other)    -> bool" "== Instance Methods" "= module Comparable" "refm/api/src/_builtin/Comparable")
(find-rurima "--- between?(min, max)    -> bool" "== Instance Methods" "= module Comparable" "refm/api/src/_builtin/Comparable")
(find-rurima "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- [](key) -> String" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- []=(key, value)" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- store(key, value) -> String" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- clear  -> self" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- delete(key) -> String | nil" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- delete(key) {|key| ... } -> String | nil" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- reject                     -> Enumerator" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- reject                     -> Enumerable::Enumerator" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- reject {|key, value| ... } -> Hash" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- delete_if {|key, value| ... } -> ENV" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- reject! {|key, value| ... }   -> ENV | nil" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- delete_if  -> Enumerator" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- reject!    -> Enumerator" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- delete_if  -> Enumerable::Enumerator" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- reject!    -> Enumerable::Enumerator" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- each                          -> Enumerator" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- each_pair                     -> Enumerator" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- each                          -> Enumerable::Enumerator" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- each_pair                     -> Enumerable::Enumerator" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- each {|key, value| ... }      -> self" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- each_pair {|key, value| ... } -> self" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- each_key              -> Enumerator" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- each_key              -> Enumerable::Enumerator" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- each_key {|key| ... } -> self" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- each_value                -> Enumerator" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- each_value                -> Enumerable::Enumerator" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- each_value {|value| ... } -> self" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- empty? -> bool" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- fetch(key) -> String" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- fetch(key, default) -> String" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- fetch(key) {|key| ... } -> String" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- has_key?(key) -> bool" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- include?(key) -> bool" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- key?(key)     -> bool" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- member?(key)  -> bool" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- has_value?(val) -> bool" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- value?(val)     -> bool" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- key(val)   -> String | nil" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- index(val) -> String | nil" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- indexes(*key) -> [String]" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- indices(*key) -> [String]" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- inspect -> String" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- invert -> Hash" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- keys -> [String]" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- length -> Fixnum" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- size   -> Fixnum" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- rehash -> nil" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- replace(hash) -> ENV" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- select                      -> Enumerator" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- select                      -> Enumerable::Enumerator" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- select {|key, value| ... }  -> [[String, String]]" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- shift -> [String, String]" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- to_a -> [[String, String]]" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- to_hash -> Hash" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- to_s -> String" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- update(other) -> ENV" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- values -> [String]" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- values_at(*key) -> [String]" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- assoc(key) -> Array | nil" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- rassoc(value) -> Array | nil" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- keep_if {|key, value| ... } -> ENV" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- select! {|key, value| ... } -> ENV | nil" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- keep_if -> Enumerator" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "--- select! -> Enumerator" "= object ENV" "refm/api/src/_builtin/ENV")
(find-rurima "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- filename -> String" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- path -> String" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- to_s -> String" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- filename -> String" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- to_s -> String" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- file -> IO" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- lineno -> Integer" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- lineno=(number)" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- skip -> self" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- binmode -> self" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- close -> self" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- closed? -> bool" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- each(rs = $/) {|line| ... } -> self" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- each_line(rs = $/) {|line| ... } -> self" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- each(rs = $/)       -> Enumerable::Enumerator" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- each_line(rs = $/)  -> Enumerable::Enumerator" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- each(rs = $/)       -> Enumerator" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- each_line(rs = $/)  -> Enumerator" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- each_byte{|char| ...} -> self" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- each_byte -> Enumerable::Enumerator" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- each_byte -> Enumerator" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- each_char{|c| ... }     -> self" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- chars{|c| ... }         -> self" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- each_char               -> Enumerable::Enumerator" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- chars                   -> Enumerable::Enumerator" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- each_char               -> Enumerator" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- chars                   -> Enumerator" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- eof -> bool" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- eof? -> bool" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- fileno -> Integer" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- to_i -> Integer" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- getc -> Integer | nil" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- gets -> String | nil" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- pos -> Integer" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- tell -> Integer" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- pos=(n)" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- read(length = nil, str = nil) -> String" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- readchar -> Integer" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- readline -> String" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- readlines(rs = $/) -> [String]" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- to_a(rs = $/) -> [String]" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- rewind -> 0" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- seek(offset, whence = IO::SEEK_SET) -> 0" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- to_io -> IO" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- bytes    -> Enumerator" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- bytes    -> Enumerable::Enumerator" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- lines(rs = $/)    -> Enumerator" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- lines(rs = $/)    -> Enumerable::Enumerator" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- getbyte   -> Integer | nil" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- readbyte   -> Integer" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "--- readpartial(length, str = nil)" "= object ARGF" "refm/api/src/_builtin/ARGF")
(find-rurima "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "== Class Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- try_convert(obj) -> Array | nil" "== Class Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- [](*item)    -> Array" "== Class Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- new(size = 0, val = nil)    -> Array" "== Class Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- new(ary)    -> Array" "== Class Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- new(size) {|index| ... }    -> Array" "== Class Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- [](nth)    -> object | nil" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- [](range)    -> Array | nil" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- [](start, length)    ->  Array | nil" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- []=(nth, val)" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- []=(range, val)" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- []=(start, length, val)" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- +(other)    -> Array" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- *(times)    -> Array" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- *(sep)    -> String" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- -(other)    -> Array" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- &(other)    -> Array" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- |(other)    -> Array" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- <<(obj)    -> self" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- <=>(other)    -> -1 | 0 | 1" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- <=>(other)    -> -1 | 0 | 1 | nil" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- ==(other)    -> bool" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- assoc(key)    -> Array | nil" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- at(pos)    -> object" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- clear    -> self" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- clone    -> Array" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- dup      -> Array" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- collect! {|item| ..}    -> self" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- map! {|item| ..}        -> self" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- collect!                -> Enumerator" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- map!                    -> Enumerator" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- collect!                -> Enumerable::Enumerator" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- map!                    -> Enumerable::Enumerator" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- compact     -> Array" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- compact!    -> self | nil" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- concat(other)    -> self" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- delete(val)           -> object | nil" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- delete(val) { ... }   -> object" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- delete_at(pos)    -> object | nil" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- delete_if {|x| ... }    -> self" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- reject! {|x| ... }      -> self | nil" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- delete_if               -> Enumerator" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- reject!                 -> Enumerator" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- delete_if               -> Enumerable::Enumerator" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- reject!                 -> Enumerable::Enumerator" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- each {|item| .... }    -> self" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- each                   -> Enumerator" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- each                   -> Enumerable::Enumerator" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- each_index {|index| .... }    -> self" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- each_index                    -> Enumerator" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- each_index                    -> Enumerable::Enumerator" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- empty?    -> bool" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- eql?(other)    -> bool" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- fetch(nth)               -> object    " "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- fetch(nth, ifnone)       -> object" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- fetch(nth) {|nth| ... }  -> object" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- fill(val)            -> self" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- fill {|index| ... }  -> self" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- fill(val, start, length = nil)             -> self" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- fill(val, range)                     -> self" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- fill(start, length = nil) {|index| ... }    -> self" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- fill(range) {|index| ... }            -> self" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- first       -> object | nil" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- first(n)    -> Array" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- flatten(lv = nil)     -> Array" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- flatten!(lv = nil)    -> self | nil" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- flatten               -> Array" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- flatten!              -> self | nil" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- hash    -> Integer" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- include?(val)    -> bool" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- index(val)           -> Integer | nil" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- index {|item| ...}   -> Integer | nil" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- indexes(*index)     " "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- indices(*index)     " "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- insert(nth, *val)    -> self" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- join(sep = $,)    -> String" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- last    -> object | nil" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- last(n)    -> Array" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- length    -> Integer" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- size      -> Integer" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- nitems    -> Integer" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- nitems{|obj| ... } -> Integer" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- pack(template)    -> String" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- pop(n = 1)    -> Array | nil" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- pop    -> object | nil" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- push(*obj)        -> self" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- push(obj, *rest)  -> self" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- rassoc(obj)    -> Array | nil" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- replace(another)    -> self" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- reverse     -> Array" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- reverse!    -> self" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- reverse_each {|item| ... }    -> self" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- reverse_each                  -> Enumerator" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- reverse_each                  -> Enumerable::Enumerator" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- rindex(val)           -> Integer | nil" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- rindex {|item| ... }  -> Integer | nil" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- shift(n = 1) -> Array  | nil" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- shift        -> object | nil" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- slice(nth)       -> object | nil" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- slice(pos, len)  -> Array | nil" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- slice(range)     -> Array | nil" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- slice!(nth)       -> object | nil" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- slice!(start, len)  -> Array | nil" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- slice!(range)     -> Array | nil" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- sort                -> Array" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- sort!               -> self" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- sort {|a, b| ... }  -> Array" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- sort! {|a, b| ... } -> self" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- sort_by!               -> Enumerator" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- sort_by! {|item| ... } -> self" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- to_a       -> Array" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- to_ary  -> self" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- to_s    -> String" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- inspect -> String" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- to_s    -> String" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- inspect -> String" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- transpose    -> Array" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- uniq     -> Array" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- uniq!    -> self | nil" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- uniq {|item| ... } -> Array" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- uniq! {|item| ... } -> self | nil" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- unshift(*obj)        -> self" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- unshift(obj, *rest)  -> self" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- values_at(*selectors)    -> Array | nil" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- zip(*lists)  -> [[object]]" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- zip(*lists) {|v1, v2, ...| ...} -> nil" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- choice        -> object" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- sample        -> object" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- sample(n)     -> Array" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- cycle {|obj| block }" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- shuffle -> Array" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- shuffle(random: rng) -> Array" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- shuffle!        -> self" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- shuffle!(random: rng) -> self" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- combination(n) {|c| block }    -> Array" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- combination(n)                 -> Enumerator" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- combination(n)                 -> Enumerable::Enumerator" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- permutation(n) { |p| block }       -> Array" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- permutation(n)                     -> Enumerator" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- permutation(n)                     -> Enumerable::Enumerator" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- product(*lists)    -> Array" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- product(*lists) { |e| ... }   -> self" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- repeated_combination(n) { |c| ... } -> Array" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- repeated_combination(n)             -> Enumerator" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- repeated_permutation(n) { |p| ... } -> Array" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- repeated_permutation(n)             -> Enumerator" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- keep_if {|item| ... } -> self" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- keep_if -> Enumerator" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- select! {|item| block } -> self | nil" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- select! -> Enumerator" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- rotate(cnt = 1) -> Array" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "--- rotate!(cnt = 1) -> self" "== Instance Methods" "= class Array < Object" "refm/api/src/_builtin/Array")
(find-rurima "= class ThreadGroup < Object" "refm/api/src/_builtin/ThreadGroup")
(find-rurima "=== ThreadGroup#freeze と ThreadGroup#enclose の違い" "= class ThreadGroup < Object" "refm/api/src/_builtin/ThreadGroup")
(find-rurima "== Class Methods" "= class ThreadGroup < Object" "refm/api/src/_builtin/ThreadGroup")
(find-rurima "--- new    -> ThreadGroup" "== Class Methods" "= class ThreadGroup < Object" "refm/api/src/_builtin/ThreadGroup")
(find-rurima "== Instance Methods" "= class ThreadGroup < Object" "refm/api/src/_builtin/ThreadGroup")
(find-rurima "--- add(thread)    -> self" "== Instance Methods" "= class ThreadGroup < Object" "refm/api/src/_builtin/ThreadGroup")
(find-rurima "--- enclose    -> self" "== Instance Methods" "= class ThreadGroup < Object" "refm/api/src/_builtin/ThreadGroup")
(find-rurima "--- enclosed?    -> bool" "== Instance Methods" "= class ThreadGroup < Object" "refm/api/src/_builtin/ThreadGroup")
(find-rurima "--- list    -> [Thread] " "== Instance Methods" "= class ThreadGroup < Object" "refm/api/src/_builtin/ThreadGroup")
(find-rurima "== Constants" "= class ThreadGroup < Object" "refm/api/src/_builtin/ThreadGroup")
(find-rurima "--- Default -> ThreadGroup" "== Constants" "= class ThreadGroup < Object" "refm/api/src/_builtin/ThreadGroup")
(find-rurima "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "== Class Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- [](*pattern)                        -> [String]" "== Class Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- glob(pattern, flags = 0)                -> [String]" "== Class Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- glob(pattern, flags = 0) {|file| ...}   -> nil" "== Class Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- glob(pattern)                       -> [String]" "== Class Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- glob(pattern) {|file| ...}          -> nil" "== Class Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- chdir           -> 0" "== Class Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- chdir(path)     -> 0" "== Class Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- chdir {|path| ... }          -> object" "== Class Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- chdir(path) {|path| ... }    -> object" "== Class Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- chroot(path)    -> 0" "== Class Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- delete(path)    -> 0" "== Class Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- rmdir(path)     -> 0" "== Class Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- unlink(path)    -> 0" "== Class Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- entries(path)    -> [String]" "== Class Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- foreach(path) {|file| ...}    -> nil" "== Class Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- foreach                       -> Enumerator" "== Class Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- foreach                       -> Enumerable::Enumerator" "== Class Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- getwd    -> String" "== Class Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- pwd      -> String" "== Class Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- mkdir(path, mode = 0777)    -> 0" "== Class Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- new(path)               -> Dir" "== Class Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- open(path)              -> Dir" "== Class Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- open(path) {|dir| ...}  -> object" "== Class Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- open(path) {|dir| ...}  -> nil" "== Class Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- exist?(file_name)    -> bool" "== Class Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- exists?(file_name)    -> bool" "== Class Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- home          -> String | nil" "== Class Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- home(user)    -> String | nil" "== Class Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "== Instance Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- close    -> nil" "== Instance Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- each {|item| ... }    -> self" "== Instance Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- each                  -> Enumerator" "== Instance Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- each                  -> Enumerable::Enumerator" "== Instance Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- path    -> String" "== Instance Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- pos     -> Integer" "== Instance Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- tell    -> Integer" "== Instance Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- pos=(pos)" "== Instance Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- seek(pos)    -> self" "== Instance Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- read    -> String | nil" "== Instance Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "--- rewind    -> self" "== Instance Methods" "= class Dir < Object" "refm/api/src/_builtin/Dir")
(find-rurima "= class FiberError < StandardError" "refm/api/src/_builtin/Fiber")
(find-rurima "= class Fiber" "refm/api/src/_builtin/Fiber")
(find-rurima "=== 例外" "= class Fiber" "refm/api/src/_builtin/Fiber")
(find-rurima "=== ショートチュートリアル" "= class Fiber" "refm/api/src/_builtin/Fiber")
(find-rurima "=== 注意" "= class Fiber" "refm/api/src/_builtin/Fiber")
(find-rurima "== Class Methods" "= class Fiber" "refm/api/src/_builtin/Fiber")
(find-rurima "--- new{|obj| ... } -> Fiber" "== Class Methods" "= class Fiber" "refm/api/src/_builtin/Fiber")
(find-rurima "--- yield(*arg = nil)   -> object" "== Class Methods" "= class Fiber" "refm/api/src/_builtin/Fiber")
(find-rurima "== Instance Methods" "= class Fiber" "refm/api/src/_builtin/Fiber")
(find-rurima "--- resume(*arg = nil)   -> object" "== Instance Methods" "= class Fiber" "refm/api/src/_builtin/Fiber")
(find-rurima "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "== Singleton Methods" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- abort(message = \"\")   -> ()" "== Singleton Methods" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- daemon(nochdir = nil, noclose = nil)    -> 0" "== Singleton Methods" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- detach(pid)    -> Thread" "== Singleton Methods" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- exec(command, *args) -> ()" "== Singleton Methods" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "==== 引数の解釈" "== Singleton Methods" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- exit(status = true)    -> ()" "==== 引数の解釈" "== Singleton Methods" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- exit!(status = false)    -> ()" "==== 引数の解釈" "== Singleton Methods" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- fork            -> Integer | nil" "==== 引数の解釈" "== Singleton Methods" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- fork { ... }    -> Integer | nil" "==== 引数の解釈" "== Singleton Methods" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- spawn(cmd, *arg)    -> Integer" "==== 引数の解釈" "== Singleton Methods" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- getrlimit(resource)    -> [Integer]" "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- setrlimit(resource, cur_limit, max_limit)    -> nil" "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- setrlimit(resource, limit)                   -> nil" "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- egid    -> Integer" "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- egid=(gid)" "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- euid        -> Integer" "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- euid=(uid)" "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- gid        -> Integer" "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- gid=(gid)" "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- groups     -> [Integer]" "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- groups=(gids)" "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- maxgroups        -> Integer" "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- maxgroups=(num)" "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- pid    -> Integer" "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- ppid    -> Integer" "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- uid        -> Integer" "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- uid=(id)" "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- getpgid(pid = 0)   -> Integer" "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- getpgrp            -> Integer" "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- getpriority(which, who)    -> Integer" "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- initgroups(user, group)    -> [Integer]" "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- kill(signal, pid, *rest)    -> Integer" "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- setpgrp(pid, pgrp)    -> 0" "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- setpgid(pid, pgrp)    -> 0" "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- setpgrp    -> 0" "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- setpriority(which, who, prio)    -> 0" "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- setsid    -> Integer" "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- times    -> Struct::Tms" "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- wait    -> Integer" "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- wait2   -> Array" "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- waitall    -> Array" "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- waitpid(pid, flags = 0)    -> Integer | nil" "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- waitpid2(pid, flags = 0)   -> Array | nil" "== Module Functions" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "== Constants" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- PRIO_PROCESS" "== Constants" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- PRIO_PGRP" "== Constants" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- PRIO_USER" "== Constants" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- RLIMIT_AS" "== Constants" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- RLIMIT_CORE" "== Constants" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- RLIMIT_CPU" "== Constants" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- RLIMIT_DATA" "== Constants" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- RLIMIT_FSIZE" "== Constants" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- RLIMIT_MEMLOCK" "== Constants" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- RLIMIT_NOFILE" "== Constants" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- RLIMIT_NPROC" "== Constants" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- RLIMIT_RSS" "== Constants" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- RLIMIT_SBSIZE" "== Constants" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- RLIMIT_STACK" "== Constants" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- RLIM_INFINITY" "== Constants" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- RLIM_SAVED_CUR" "== Constants" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- RLIM_SAVED_MAX" "== Constants" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- WNOHANG" "== Constants" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "--- WUNTRACED" "== Constants" "= module Process" "refm/api/src/_builtin/Process")
(find-rurima "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "== Class Methods" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "--- compile(string, option = nil, code = nil) -> Regexp" "== Class Methods" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "--- new(string, option = nil, code = nil) -> Regexp" "== Class Methods" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "--- escape(string) -> String" "== Class Methods" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "--- quote(string) -> String" "== Class Methods" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "--- escape(string, kcode = $KCODE) -> String" "== Class Methods" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "--- quote(string, kcode = $KCODE) -> String" "== Class Methods" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "--- last_match -> MatchData" "== Class Methods" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "--- last_match(nth) -> String | nil" "== Class Methods" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "--- union(*pattern) -> Regexp" "== Class Methods" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "--- try_convert(obj) -> Regexp | nil" "== Class Methods" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "== Instance Methods" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "--- =~(string) -> Fixnum | nil" "== Instance Methods" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "--- ===(string) -> bool" "== Instance Methods" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "--- ~ -> Fixnum | nil" "== Instance Methods" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "--- casefold? -> bool" "== Instance Methods" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "--- fixed_encoding? -> bool" "== Instance Methods" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "--- kcode -> String | nil" "== Instance Methods" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "--- match(str, pos = 0) -> MatchData | nil" "== Instance Methods" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "--- match(str) -> MatchData | nil" "== Instance Methods" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "==== 便利な使いかた" "== Instance Methods" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "--- options -> Integer" "==== 便利な使いかた" "== Instance Methods" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "--- source -> String" "==== 便利な使いかた" "== Instance Methods" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "--- to_s -> String" "==== 便利な使いかた" "== Instance Methods" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "--- ==(other) -> bool" "==== 便利な使いかた" "== Instance Methods" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "--- eql?(other) -> bool" "==== 便利な使いかた" "== Instance Methods" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "--- hash -> Fixnum" "==== 便利な使いかた" "== Instance Methods" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "--- inspect -> String" "==== 便利な使いかた" "== Instance Methods" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "--- encoding   -> Encoding" "==== 便利な使いかた" "== Instance Methods" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "--- named_captures -> { String => [Integer] }" "==== 便利な使いかた" "== Instance Methods" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "--- names -> [String]" "==== 便利な使いかた" "== Instance Methods" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "== Constants" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "--- EXTENDED -> Fixnum" "== Constants" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "--- IGNORECASE -> Fixnum" "== Constants" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "--- MULTILINE -> Fixnum" "== Constants" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "--- FIXEDENCODING -> Fixnum" "== Constants" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "--- NOENCODING -> Fixnum" "== Constants" "= class Regexp < Object" "refm/api/src/_builtin/Regexp")
(find-rurima "= class LoadError < ScriptError" "refm/api/src/_builtin/LoadError")
(find-rurima "= module Process::UID" "refm/api/src/_builtin/Process__UID")
(find-rurima "== Module Functions" "= module Process::UID" "refm/api/src/_builtin/Process__UID")
(find-rurima "--- rid    -> Integer" "== Module Functions" "= module Process::UID" "refm/api/src/_builtin/Process__UID")
(find-rurima "--- eid    -> Integer" "== Module Functions" "= module Process::UID" "refm/api/src/_builtin/Process__UID")
(find-rurima "--- change_privilege(id)    -> Integer" "== Module Functions" "= module Process::UID" "refm/api/src/_builtin/Process__UID")
(find-rurima "--- grant_privilege(id)    -> Integer" "== Module Functions" "= module Process::UID" "refm/api/src/_builtin/Process__UID")
(find-rurima "--- eid=(id)              " "== Module Functions" "= module Process::UID" "refm/api/src/_builtin/Process__UID")
(find-rurima "--- re_exchange    -> Integer" "== Module Functions" "= module Process::UID" "refm/api/src/_builtin/Process__UID")
(find-rurima "--- re_exchangeable?    -> bool" "== Module Functions" "= module Process::UID" "refm/api/src/_builtin/Process__UID")
(find-rurima "--- sid_available?    -> bool" "== Module Functions" "= module Process::UID" "refm/api/src/_builtin/Process__UID")
(find-rurima "--- switch          -> Integer" "== Module Functions" "= module Process::UID" "refm/api/src/_builtin/Process__UID")
(find-rurima "--- switch { .... } -> object" "== Module Functions" "= module Process::UID" "refm/api/src/_builtin/Process__UID")
(find-rurima "= class SystemStackError < Exception" "refm/api/src/_builtin/SystemStackError")
(find-rurima "= class SystemStackError < StandardError" "refm/api/src/_builtin/SystemStackError")
(find-rurima "== Constants" "refm/api/src/_builtin/constants")
(find-rurima "--- TRUE -> TrueClass" "== Constants" "refm/api/src/_builtin/constants")
(find-rurima "--- FALSE -> FalseClass" "== Constants" "refm/api/src/_builtin/constants")
(find-rurima "--- NIL -> NilClass" "== Constants" "refm/api/src/_builtin/constants")
(find-rurima "--- STDIN -> IO" "== Constants" "refm/api/src/_builtin/constants")
(find-rurima "==== 注意" "== Constants" "refm/api/src/_builtin/constants")
(find-rurima "--- STDOUT -> IO" "==== 注意" "== Constants" "refm/api/src/_builtin/constants")
(find-rurima "==== 注意" "== Constants" "refm/api/src/_builtin/constants")
(find-rurima "--- STDERR -> IO" "==== 注意" "== Constants" "refm/api/src/_builtin/constants")
(find-rurima "==== 注意" "== Constants" "refm/api/src/_builtin/constants")
(find-rurima "--- ENV -> Object" "==== 注意" "== Constants" "refm/api/src/_builtin/constants")
(find-rurima "--- ARGF -> Object" "==== 注意" "== Constants" "refm/api/src/_builtin/constants")
(find-rurima "--- ARGV -> Array" "==== 注意" "== Constants" "refm/api/src/_builtin/constants")
(find-rurima "--- DATA -> File" "==== 注意" "== Constants" "refm/api/src/_builtin/constants")
(find-rurima "==== 注意" "== Constants" "refm/api/src/_builtin/constants")
(find-rurima "==== 例1" "== Constants" "refm/api/src/_builtin/constants")
(find-rurima "==== 例2" "== Constants" "refm/api/src/_builtin/constants")
(find-rurima "==== 例3" "== Constants" "refm/api/src/_builtin/constants")
(find-rurima "==== 例4" "== Constants" "refm/api/src/_builtin/constants")
(find-rurima "--- TOPLEVEL_BINDING -> Binding" "==== 例4" "== Constants" "refm/api/src/_builtin/constants")
(find-rurima "--- RUBY_VERSION -> String" "==== 例4" "== Constants" "refm/api/src/_builtin/constants")
(find-rurima "--- RUBY_RELEASE_DATE -> String" "==== 例4" "== Constants" "refm/api/src/_builtin/constants")
(find-rurima "--- RUBY_PLATFORM -> String" "==== 例4" "== Constants" "refm/api/src/_builtin/constants")
(find-rurima "--- RUBY_COPYRIGHT -> String" "==== 例4" "== Constants" "refm/api/src/_builtin/constants")
(find-rurima "--- RUBY_DESCRIPTION -> String" "==== 例4" "== Constants" "refm/api/src/_builtin/constants")
(find-rurima "--- RUBY_PATCHLEVEL -> Fixnum" "==== 例4" "== Constants" "refm/api/src/_builtin/constants")
(find-rurima "--- RUBY_ENGINE -> String" "==== 例4" "== Constants" "refm/api/src/_builtin/constants")
(find-rurima "--- VERSION -> String" "==== 例4" "== Constants" "refm/api/src/_builtin/constants")
(find-rurima "--- RELEASE_DATE -> String" "==== 例4" "== Constants" "refm/api/src/_builtin/constants")
(find-rurima "--- PLATFORM -> String" "==== 例4" "== Constants" "refm/api/src/_builtin/constants")
(find-rurima "--- SCRIPT_LINES__ -> Hash" "==== 例4" "== Constants" "refm/api/src/_builtin/constants")
(find-rurima "=== 注意" "refm/api/src/_builtin/Enumerator.inside")
(find-rurima "== Class Methods" "refm/api/src/_builtin/Enumerator.inside")
(find-rurima "--- new(obj, method = :each, *args) -> Enumerator" "== Class Methods" "refm/api/src/_builtin/Enumerator.inside")
(find-rurima "--- new(obj, method = :each, *args) -> Enumerable::Enumerator" "== Class Methods" "refm/api/src/_builtin/Enumerator.inside")
(find-rurima "--- new{|y| ... }                   -> Enumerator" "== Class Methods" "refm/api/src/_builtin/Enumerator.inside")
(find-rurima "== Methods" "refm/api/src/_builtin/Enumerator.inside")
(find-rurima "--- each {...} -> object" "== Methods" "refm/api/src/_builtin/Enumerator.inside")
(find-rurima "--- next -> object" "== Methods" "refm/api/src/_builtin/Enumerator.inside")
(find-rurima "--- feed(obj) -> nil" "== Methods" "refm/api/src/_builtin/Enumerator.inside")
(find-rurima "--- next_values -> Array" "== Methods" "refm/api/src/_builtin/Enumerator.inside")
(find-rurima "--- peek -> object" "== Methods" "refm/api/src/_builtin/Enumerator.inside")
(find-rurima "--- peek_values -> Array" "== Methods" "refm/api/src/_builtin/Enumerator.inside")
(find-rurima "--- rewind -> self" "== Methods" "refm/api/src/_builtin/Enumerator.inside")
(find-rurima "--- with_index(offset = 0) {|(*args), idx| ... } -> object" "== Methods" "refm/api/src/_builtin/Enumerator.inside")
(find-rurima "--- with_index(offset = 0) -> Enumerator" "== Methods" "refm/api/src/_builtin/Enumerator.inside")
(find-rurima "--- with_index {|(*args), idx| ... } -> object" "== Methods" "refm/api/src/_builtin/Enumerator.inside")
(find-rurima "--- with_index -> Enumerator" "== Methods" "refm/api/src/_builtin/Enumerator.inside")
(find-rurima "--- with_object(obj) -> Enumerator" "== Methods" "refm/api/src/_builtin/Enumerator.inside")
(find-rurima "--- with_object(obj) {|(*args), memo_obj| ... } -> object" "== Methods" "refm/api/src/_builtin/Enumerator.inside")
(find-rurima "==== 例" "== Methods" "refm/api/src/_builtin/Enumerator.inside")
(find-rurima "= class Class < Module" "refm/api/src/_builtin/Class")
(find-rurima "== Class Methods" "= class Class < Module" "refm/api/src/_builtin/Class")
(find-rurima "--- new(superclass = Object)                -> Class" "== Class Methods" "= class Class < Module" "refm/api/src/_builtin/Class")
(find-rurima "--- new(superclass = Object) {|klass| ... } -> Class" "== Class Methods" "= class Class < Module" "refm/api/src/_builtin/Class")
(find-rurima "== Instance Methods" "= class Class < Module" "refm/api/src/_builtin/Class")
(find-rurima "--- allocate    -> object" "== Instance Methods" "= class Class < Module" "refm/api/src/_builtin/Class")
(find-rurima "--- new(*args, &block)    -> object" "== Instance Methods" "= class Class < Module" "refm/api/src/_builtin/Class")
(find-rurima "--- superclass    -> Class | nil" "== Instance Methods" "= class Class < Module" "refm/api/src/_builtin/Class")
(find-rurima "--- _load(str)    -> Class" "== Instance Methods" "= class Class < Module" "refm/api/src/_builtin/Class")
(find-rurima "== Private Instance Methods" "= class Class < Module" "refm/api/src/_builtin/Class")
(find-rurima "--- inherited(subclass)     -> ()" "== Private Instance Methods" "= class Class < Module" "refm/api/src/_builtin/Class")
(find-rurima "= class Struct::Tms < Struct" "refm/api/src/_builtin/Struct__Tms")
(find-rurima "== Instance Methods" "= class Struct::Tms < Struct" "refm/api/src/_builtin/Struct__Tms")
(find-rurima "--- cstime -> Float" "== Instance Methods" "= class Struct::Tms < Struct" "refm/api/src/_builtin/Struct__Tms")
(find-rurima "--- cstime=(n)" "== Instance Methods" "= class Struct::Tms < Struct" "refm/api/src/_builtin/Struct__Tms")
(find-rurima "--- cutime -> Float" "== Instance Methods" "= class Struct::Tms < Struct" "refm/api/src/_builtin/Struct__Tms")
(find-rurima "--- cutime=(n)" "== Instance Methods" "= class Struct::Tms < Struct" "refm/api/src/_builtin/Struct__Tms")
(find-rurima "--- stime -> Float" "== Instance Methods" "= class Struct::Tms < Struct" "refm/api/src/_builtin/Struct__Tms")
(find-rurima "--- stime=(n)" "== Instance Methods" "= class Struct::Tms < Struct" "refm/api/src/_builtin/Struct__Tms")
(find-rurima "--- utime -> Float" "== Instance Methods" "= class Struct::Tms < Struct" "refm/api/src/_builtin/Struct__Tms")
(find-rurima "--- utime=(n)" "== Instance Methods" "= class Struct::Tms < Struct" "refm/api/src/_builtin/Struct__Tms")
(find-rurima "=== 実装" "refm/api/src/_builtin/thread.inc")
(find-rurima "=== スケジューリング" "refm/api/src/_builtin/thread.inc")
(find-rurima "=== メインスレッド" "refm/api/src/_builtin/thread.inc")
(find-rurima "=== スレッドの終了" "refm/api/src/_builtin/thread.inc")
(find-rurima "===[a:exception] 例外発生時のスレッドの振る舞い" "refm/api/src/_builtin/thread.inc")
(find-rurima "=== スレッド終了時の ensure 節の実行" "refm/api/src/_builtin/thread.inc")
(find-rurima "=== スレッドの状態" "refm/api/src/_builtin/thread.inc")
(find-rurima "=== デッドロックの検出" "refm/api/src/_builtin/thread.inc")
(find-rurima "= module Process::GID" "refm/api/src/_builtin/Process__GID")
(find-rurima "== Module Functions" "= module Process::GID" "refm/api/src/_builtin/Process__GID")
(find-rurima "--- change_privilege(id)    -> Integer" "== Module Functions" "= module Process::GID" "refm/api/src/_builtin/Process__GID")
(find-rurima "--- eid    -> Integer" "== Module Functions" "= module Process::GID" "refm/api/src/_builtin/Process__GID")
(find-rurima "--- grant_privilege(id)    -> Integer" "== Module Functions" "= module Process::GID" "refm/api/src/_builtin/Process__GID")
(find-rurima "--- eid=(id)" "== Module Functions" "= module Process::GID" "refm/api/src/_builtin/Process__GID")
(find-rurima "--- re_exchange    -> Integer" "== Module Functions" "= module Process::GID" "refm/api/src/_builtin/Process__GID")
(find-rurima "--- re_exchangeable?    -> bool" "== Module Functions" "= module Process::GID" "refm/api/src/_builtin/Process__GID")
(find-rurima "--- rid    -> Integer" "== Module Functions" "= module Process::GID" "refm/api/src/_builtin/Process__GID")
(find-rurima "--- sid_available?    -> bool" "== Module Functions" "= module Process::GID" "refm/api/src/_builtin/Process__GID")
(find-rurima "--- switch               -> Integer" "== Module Functions" "= module Process::GID" "refm/api/src/_builtin/Process__GID")
(find-rurima "--- switch {...}    -> object" "== Module Functions" "= module Process::GID" "refm/api/src/_builtin/Process__GID")
(find-rurima "==== sprintf フォーマット" "refm/api/src/_builtin/printf-format")
(find-rurima "==== フラグ" "refm/api/src/_builtin/printf-format")
(find-rurima "==== 幅" "refm/api/src/_builtin/printf-format")
(find-rurima "==== 精度" "refm/api/src/_builtin/printf-format")
(find-rurima "==== 指示子" "refm/api/src/_builtin/printf-format")
(find-rurima "==== 引数指定" "refm/api/src/_builtin/printf-format")
(find-rurima "= class NilClass < Object" "refm/api/src/_builtin/NilClass")
(find-rurima "== Instance Methods" "= class NilClass < Object" "refm/api/src/_builtin/NilClass")
(find-rurima "--- &(other) -> false" "== Instance Methods" "= class NilClass < Object" "refm/api/src/_builtin/NilClass")
(find-rurima "--- |(other) -> bool" "== Instance Methods" "= class NilClass < Object" "refm/api/src/_builtin/NilClass")
(find-rurima "--- ^(other) -> bool" "== Instance Methods" "= class NilClass < Object" "refm/api/src/_builtin/NilClass")
(find-rurima "--- nil? -> bool" "== Instance Methods" "= class NilClass < Object" "refm/api/src/_builtin/NilClass")
(find-rurima "--- to_a -> Array" "== Instance Methods" "= class NilClass < Object" "refm/api/src/_builtin/NilClass")
(find-rurima "--- to_f -> Float" "== Instance Methods" "= class NilClass < Object" "refm/api/src/_builtin/NilClass")
(find-rurima "--- to_i -> Fixnum" "== Instance Methods" "= class NilClass < Object" "refm/api/src/_builtin/NilClass")
(find-rurima "--- to_s -> String" "== Instance Methods" "= class NilClass < Object" "refm/api/src/_builtin/NilClass")
(find-rurima "--- to_c -> Complex" "== Instance Methods" "= class NilClass < Object" "refm/api/src/_builtin/NilClass")
(find-rurima "--- to_r -> Rational" "== Instance Methods" "= class NilClass < Object" "refm/api/src/_builtin/NilClass")
(find-rurima "--- rationalize      -> Rational" "== Instance Methods" "= class NilClass < Object" "refm/api/src/_builtin/NilClass")
(find-rurima "--- rationalize(eps) -> Rational" "== Instance Methods" "= class NilClass < Object" "refm/api/src/_builtin/NilClass")
(find-rurima "= class Method < Object" "refm/api/src/_builtin/Method")
(find-rurima "=== Proc との差" "= class Method < Object" "refm/api/src/_builtin/Method")
(find-rurima "== Instance Methods" "= class Method < Object" "refm/api/src/_builtin/Method")
(find-rurima "--- [](*args) -> object" "== Instance Methods" "= class Method < Object" "refm/api/src/_builtin/Method")
(find-rurima "--- call(*args) -> object" "== Instance Methods" "= class Method < Object" "refm/api/src/_builtin/Method")
(find-rurima "--- call(*args) { ... } -> object" "== Instance Methods" "= class Method < Object" "refm/api/src/_builtin/Method")
(find-rurima "--- arity -> Fixnum" "== Instance Methods" "= class Method < Object" "refm/api/src/_builtin/Method")
(find-rurima "--- inspect -> String" "== Instance Methods" "= class Method < Object" "refm/api/src/_builtin/Method")
(find-rurima "--- to_proc -> Proc" "== Instance Methods" "= class Method < Object" "refm/api/src/_builtin/Method")
(find-rurima "--- unbind -> UnboundMethod" "== Instance Methods" "= class Method < Object" "refm/api/src/_builtin/Method")
(find-rurima "--- ==(other)     -> bool" "== Instance Methods" "= class Method < Object" "refm/api/src/_builtin/Method")
(find-rurima "--- ===(other)    -> bool" "== Instance Methods" "= class Method < Object" "refm/api/src/_builtin/Method")
(find-rurima "--- eql?(other)     -> bool" "== Instance Methods" "= class Method < Object" "refm/api/src/_builtin/Method")
(find-rurima "--- equal?(other)   -> bool" "== Instance Methods" "= class Method < Object" "refm/api/src/_builtin/Method")
(find-rurima "--- hash    -> Integer" "== Instance Methods" "= class Method < Object" "refm/api/src/_builtin/Method")
(find-rurima "--- name    -> Symbol" "== Instance Methods" "= class Method < Object" "refm/api/src/_builtin/Method")
(find-rurima "--- name    -> String" "== Instance Methods" "= class Method < Object" "refm/api/src/_builtin/Method")
(find-rurima "--- owner    -> Class | Module" "== Instance Methods" "= class Method < Object" "refm/api/src/_builtin/Method")
(find-rurima "--- receiver    -> object" "== Instance Methods" "= class Method < Object" "refm/api/src/_builtin/Method")
(find-rurima "--- source_location -> [String, Fixnum] | nil" "== Instance Methods" "= class Method < Object" "refm/api/src/_builtin/Method")
(find-rurima "--- parameters -> [object]" "== Instance Methods" "= class Method < Object" "refm/api/src/_builtin/Method")
(find-rurima "= class MatchData < Object" "refm/api/src/_builtin/MatchData")
(find-rurima "== Instance Methods" "= class MatchData < Object" "refm/api/src/_builtin/MatchData")
(find-rurima "--- [](n) -> String | nil" "== Instance Methods" "= class MatchData < Object" "refm/api/src/_builtin/MatchData")
(find-rurima "--- [](range) -> [String]" "== Instance Methods" "= class MatchData < Object" "refm/api/src/_builtin/MatchData")
(find-rurima "--- [](start, length) -> [String]" "== Instance Methods" "= class MatchData < Object" "refm/api/src/_builtin/MatchData")
(find-rurima "--- begin(n) -> Fixnum | nil" "== Instance Methods" "= class MatchData < Object" "refm/api/src/_builtin/MatchData")
(find-rurima "--- end(n) -> Fixnum | nil" "== Instance Methods" "= class MatchData < Object" "refm/api/src/_builtin/MatchData")
(find-rurima "--- captures -> [String]" "== Instance Methods" "= class MatchData < Object" "refm/api/src/_builtin/MatchData")
(find-rurima "--- length -> Fixnum" "== Instance Methods" "= class MatchData < Object" "refm/api/src/_builtin/MatchData")
(find-rurima "--- size -> Fixnum" "== Instance Methods" "= class MatchData < Object" "refm/api/src/_builtin/MatchData")
(find-rurima "--- offset(n) -> [Fixnum]" "== Instance Methods" "= class MatchData < Object" "refm/api/src/_builtin/MatchData")
(find-rurima "--- post_match -> String" "== Instance Methods" "= class MatchData < Object" "refm/api/src/_builtin/MatchData")
(find-rurima "--- pre_match -> String" "== Instance Methods" "= class MatchData < Object" "refm/api/src/_builtin/MatchData")
(find-rurima "--- select(*index)    -> [String]" "== Instance Methods" "= class MatchData < Object" "refm/api/src/_builtin/MatchData")
(find-rurima "--- select {|s| ... } -> [String]" "== Instance Methods" "= class MatchData < Object" "refm/api/src/_builtin/MatchData")
(find-rurima "--- string -> String" "== Instance Methods" "= class MatchData < Object" "refm/api/src/_builtin/MatchData")
(find-rurima "--- to_a -> [String]" "== Instance Methods" "= class MatchData < Object" "refm/api/src/_builtin/MatchData")
(find-rurima "--- to_s -> String" "== Instance Methods" "= class MatchData < Object" "refm/api/src/_builtin/MatchData")
(find-rurima "--- values_at(*index) -> [String]" "== Instance Methods" "= class MatchData < Object" "refm/api/src/_builtin/MatchData")
(find-rurima "--- names -> [Array]" "== Instance Methods" "= class MatchData < Object" "refm/api/src/_builtin/MatchData")
(find-rurima "--- regexp -> Regexp" "== Instance Methods" "= class MatchData < Object" "refm/api/src/_builtin/MatchData")
(find-rurima "= class TypeError < StandardError" "refm/api/src/_builtin/TypeError")
(find-rurima "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $_ -> String | nil" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $& -> String | nil" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $~ -> MatchData | nil" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $` -> String | nil" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $' -> String | nil" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $+ -> String | nil" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $1 -> String | nil" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $2 -> String | nil" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $3 -> String | nil" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $4 -> String | nil" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $5 -> String | nil" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $6 -> String | nil" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $7 -> String | nil" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $8 -> String | nil" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $9 -> String | nil" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $10 -> String | nil" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $11 -> String | nil" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $? -> Process::Status | nil" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $! -> Exception | nil" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $@ -> [String] | nil" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $SAFE -> Fixnum" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $= -> bool" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $/  -> String | nil" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $-0 -> String | nil" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $\\ -> String | nil" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $, -> String | nil" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $;  -> Regexp | String | nil" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $-F -> Regexp | String | nil" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $. -> Fixnum" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $< -> IO" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $0 -> String" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $PROGRAM_NAME -> String" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $* -> [String]" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $$ -> Fixnum" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $:         -> [String]" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $LOAD_PATH -> [String]" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $-I        -> [String]" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $\"               -> [String]" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $LOADED_FEATURES -> [String]" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $DEBUG -> bool" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $-d    -> bool" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $FILENAME -> String" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $stdin -> object" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $>      -> object" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $stdout -> object" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $defout  -> object" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $stderr -> object" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $deferr -> object" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $VERBOSE -> bool | nil" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $-v      -> bool | nil" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $-w      -> bool | nil" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $KCODE -> nil" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $-K    -> nil" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $KCODE -> String" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $-K    -> String" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $-a -> bool" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $-i -> bool" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $-l -> bool" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $-p -> bool" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "--- $-W -> 0 | 1 | 2" "=== 例" "== Special Variables" "refm/api/src/_builtin/specialvars")
(find-rurima "= module Precision" "refm/api/src/_builtin/Precision")
(find-rurima "== Singleton Methods" "= module Precision" "refm/api/src/_builtin/Precision")
(find-rurima "--- included(module_or_class) -> Precision" "== Singleton Methods" "= module Precision" "refm/api/src/_builtin/Precision")
(find-rurima "--- induced_from(number) -> object" "== Singleton Methods" "= module Precision" "refm/api/src/_builtin/Precision")
(find-rurima "== Instance Methods" "= module Precision" "refm/api/src/_builtin/Precision")
(find-rurima "--- prec(klass) -> object" "== Instance Methods" "= module Precision" "refm/api/src/_builtin/Precision")
(find-rurima "--- prec_i -> Fixnum" "== Instance Methods" "= module Precision" "refm/api/src/_builtin/Precision")
(find-rurima "--- prec_f -> Float" "== Instance Methods" "= module Precision" "refm/api/src/_builtin/Precision")
(find-rurima "= class ZeroDivisionError < StandardError" "refm/api/src/_builtin/ZeroDivisionError")
(find-rurima "= class KeyError < IndexError" "refm/api/src/_builtin/KeyError")
(find-rurima "= class NoMemoryError < Exception" "refm/api/src/_builtin/NoMemoryError")
(find-rurima "= class FalseClass < Object" "refm/api/src/_builtin/FalseClass")
(find-rurima "== Instance Methods" "= class FalseClass < Object" "refm/api/src/_builtin/FalseClass")
(find-rurima "--- &(other)    -> false" "== Instance Methods" "= class FalseClass < Object" "refm/api/src/_builtin/FalseClass")
(find-rurima "--- |(other)    -> bool" "== Instance Methods" "= class FalseClass < Object" "refm/api/src/_builtin/FalseClass")
(find-rurima "--- ^(other)    -> bool" "== Instance Methods" "= class FalseClass < Object" "refm/api/src/_builtin/FalseClass")
(find-rurima "--- to_s    -> String" "== Instance Methods" "= class FalseClass < Object" "refm/api/src/_builtin/FalseClass")
(find-rurima "= class Data < Object" "refm/api/src/_builtin/Data")
(find-rurima "= module GC" "refm/api/src/_builtin/GC")
(find-rurima "== Singleton Methods" "= module GC" "refm/api/src/_builtin/GC")
(find-rurima "--- disable -> bool" "== Singleton Methods" "= module GC" "refm/api/src/_builtin/GC")
(find-rurima "--- enable -> bool" "== Singleton Methods" "= module GC" "refm/api/src/_builtin/GC")
(find-rurima "--- start -> nil" "== Singleton Methods" "= module GC" "refm/api/src/_builtin/GC")
(find-rurima "--- stress -> bool" "== Singleton Methods" "= module GC" "refm/api/src/_builtin/GC")
(find-rurima "--- stress=(value)" "== Singleton Methods" "= module GC" "refm/api/src/_builtin/GC")
(find-rurima "== Instance Methods" "= module GC" "refm/api/src/_builtin/GC")
(find-rurima "--- garbage_collect -> nil" "== Instance Methods" "= module GC" "refm/api/src/_builtin/GC")
(find-rurima "= class ThreadError < StandardError" "refm/api/src/_builtin/ThreadError")
(find-rurima "= class Enumerable::Enumerator < Object" "refm/api/src/_builtin/Enumerable__Enumerator")
(find-rurima "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "== Class Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "--- induced_from(num) -> Integer" "== Class Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "== Instance Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "--- chr -> String" "== Instance Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "--- chr -> String" "== Instance Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "--- chr(encoding) -> String" "== Instance Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "--- downto(min) {|n| ... } -> self" "== Instance Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "--- downto(min) -> Enumerator" "== Instance Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "--- downto(min) -> Enumerable::Enumerator" "== Instance Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "--- next -> Fixnum | Bignum" "== Instance Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "--- succ -> Fixnum | Bignum" "== Instance Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "--- times {|n| ... } -> self" "== Instance Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "--- times -> Enumerator" "== Instance Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "--- times -> Enumerable::Enumerator" "== Instance Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "--- to_i   -> self" "== Instance Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "--- to_int -> self" "== Instance Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "--- to_s -> String" "== Instance Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "--- to_s(base) -> String" "== Instance Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "--- upto(max) {|n| ... } -> Fixnum | Bignum" "== Instance Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "--- upto(max) -> Enumerator" "== Instance Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "--- upto(max) -> Enumerable::Enumerator" "== Instance Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "--- integer? -> true" "== Instance Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "--- even? -> bool" "== Instance Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "--- odd? -> bool" "== Instance Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "--- ord    -> Integer" "== Instance Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "--- pred    -> Integer" "== Instance Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "--- denominator -> Integer" "== Instance Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "--- gcd(n) -> Integer" "== Instance Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "--- gcdlcm(n) -> [Integer]" "== Instance Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "--- lcm(n) -> Integer" "== Instance Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "--- numerator -> Integer" "== Instance Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "--- to_r -> Rational" "== Instance Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "--- rationalize      -> Rational" "== Instance Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "--- rationalize(eps) -> Rational" "== Instance Methods" "= class Integer < Numeric" "refm/api/src/_builtin/Integer")
(find-rurima "===[a:should_use_next] 手続きを中断して値を返す" "refm/api/src/_builtin/lambda_proc")
(find-rurima "===[a:block] Proc オブジェクトをブロック付きメソッド呼び出しに使う" "refm/api/src/_builtin/lambda_proc")
(find-rurima "===[a:lambda_proc] lambda と proc と Proc.new とイテレータの違い" "refm/api/src/_builtin/lambda_proc")
(find-rurima "==== 引数の扱い" "===[a:lambda_proc] lambda と proc と Proc.new とイテレータの違い" "refm/api/src/_builtin/lambda_proc")
(find-rurima "==== ジャンプ構文の挙動の違い" "===[a:lambda_proc] lambda と proc と Proc.new とイテレータの違い" "refm/api/src/_builtin/lambda_proc")
(find-rurima "===[a:orphan] orphan な手続きオブジェクトの挙動" "refm/api/src/_builtin/lambda_proc")
(find-rurima "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "== Class Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- constants -> [Symbol]" "== Class Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- constants -> [String]" "== Class Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- nesting -> [Class, Module]" "== Class Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- new -> Module" "== Class Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- new {|mod| ... } -> Module" "== Class Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- <=>(other) -> Integer | nil" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- <(other)  -> bool | nil" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- <=(other) -> bool | nil" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- >(other)  -> bool | nil" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- >=(other) -> bool | nil" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- ===(obj) -> bool" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- ancestors -> [Class, Module]" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- autoload(const_name, feature) -> nil" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- autoload?(const_name) -> String | nil" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- class_variables -> [Symbol]" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- class_variables -> [String]" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- const_defined?(name, inherit = true) -> bool" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- const_defined?(name) -> bool" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- const_get(name, inherit = true) -> object" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- const_get(name) -> object" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- const_missing(name)" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- const_set(name, value) -> object" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- constants(inherit = true) -> [Symbol]" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- constants -> [String]" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- include?(mod) -> bool" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- included_modules -> [Module]" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- instance_method(name) -> UnboundMethod" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- method_defined?(name) -> bool" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- module_eval(expr, fname = \"(eval)\", lineno = 1) -> object" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- module_eval{|mod| ... }                         -> object" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- class_eval(expr, fname = \"(eval)\", lineno = 1)  -> object" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- class_eval{|mod| ... }                          -> object" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "==== 注意" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- name -> String" "==== 注意" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- to_s -> String" "==== 注意" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- instance_methods(inherited_too = true) -> [Symbol]" "==== 注意" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- instance_methods(inherited_too = true) -> [String]" "==== 注意" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- public_instance_methods(inherited_too = true) -> [Symbol]" "==== 注意" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- public_instance_methods(inherited_too = true) -> [String]" "==== 注意" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- private_instance_methods(inherited_too = true) -> [Symbol]" "==== 注意" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- private_instance_methods(inherited_too = true) -> [String]" "==== 注意" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- protected_instance_methods(inherited_too = true) -> [Symbol]" "==== 注意" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- protected_instance_methods(inherited_too = true) -> [String]" "==== 注意" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- private_class_method(*name) -> self" "==== 注意" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- public_class_method(*name) -> self" "==== 注意" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- private_method_defined?(name) -> bool" "==== 注意" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- protected_method_defined?(name) -> bool" "==== 注意" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- public_method_defined?(name) -> bool" "==== 注意" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- class_variable_defined?(name) -> bool" "==== 注意" "== Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "== Private Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- alias_method(new, original) -> self" "== Private Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- append_features(module_or_class) -> self" "== Private Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- attr(name, assignable = false) -> nil" "== Private Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- attr_accessor(*name) -> nil" "== Private Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- attr_reader(*name) -> nil" "== Private Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- attr_writer(*name) -> nil" "== Private Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- class_variable_get(name) -> object" "== Private Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- class_variable_set(name, val) -> object" "== Private Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- define_method(name, method) -> Proc | Method | UnboundMethod" "== Private Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- define_method(name) { ... } -> Proc" "== Private Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- extend_object(module) -> Module" "== Private Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- extended(class_or_module) -> ()" "== Private Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- include(*mod) -> self" "== Private Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- included(class_or_module) -> ()" "== Private Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- method_added(name) -> ()" "== Private Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- method_removed(name) -> ()" "== Private Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- method_undefined(name) -> ()" "== Private Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- module_function(*name) -> self" "== Private Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "=== 注意" "== Private Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- private(*name) -> self" "=== 注意" "== Private Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- protected(*name) -> self" "=== 注意" "== Private Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- public(*name) -> self" "=== 注意" "== Private Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- remove_class_variable(name) -> object" "=== 注意" "== Private Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- remove_const(name) -> object" "=== 注意" "== Private Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- remove_method(*name) -> self" "=== 注意" "== Private Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- undef_method(*name) -> self" "=== 注意" "== Private Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "=== 「未定義にする」とは" "== Private Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- module_exec(*args) {|*vars| ... }       -> object" "=== 「未定義にする」とは" "== Private Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- class_exec(*args) {|*vars| ... }        -> object" "=== 「未定義にする」とは" "== Private Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- private_constant(*name) -> Module" "=== 「未定義にする」とは" "== Private Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "--- public_constant(*name) -> Module" "=== 「未定義にする」とは" "== Private Instance Methods" "= class Module < Object" "refm/api/src/_builtin/Module")
(find-rurima "= module Marshal" "refm/api/src/_builtin/Marshal")
(find-rurima "== Module Functions" "= module Marshal" "refm/api/src/_builtin/Marshal")
(find-rurima "--- dump(obj, port, limit = -1) -> IO" "== Module Functions" "= module Marshal" "refm/api/src/_builtin/Marshal")
(find-rurima "--- dump(obj, limit = -1) -> String" "== Module Functions" "= module Marshal" "refm/api/src/_builtin/Marshal")
(find-rurima "--- load(port, proc = nil)      -> object" "== Module Functions" "= module Marshal" "refm/api/src/_builtin/Marshal")
(find-rurima "--- restore(port, proc = nil)   -> object" "== Module Functions" "= module Marshal" "refm/api/src/_builtin/Marshal")
(find-rurima "== Constants" "= module Marshal" "refm/api/src/_builtin/Marshal")
(find-rurima "--- MAJOR_VERSION -> Fixnum" "== Constants" "= module Marshal" "refm/api/src/_builtin/Marshal")
(find-rurima "--- MINOR_VERSION -> Fixnum" "== Constants" "= module Marshal" "refm/api/src/_builtin/Marshal")
(find-rurima "= class Interrupt < SignalException" "refm/api/src/_builtin/Interrupt")
(find-rurima "= class Interrupt < Exception" "refm/api/src/_builtin/Interrupt")
(find-rurima "= class Object < BasicObject" "refm/api/src/_builtin/Object")
(find-rurima "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "== Class Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- new -> Object" "== Class Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- ==(other) -> bool" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- eql?(other) -> bool" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- equal?(other) -> bool" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- methods(include_inherited = true) -> [Symbol]" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- methods(include_inherited = true) -> [String]" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- methods -> [String]" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- public_methods(include_inherited = true) -> [Symbol]" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- public_methods(include_inherited = true) -> [String]" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- public_methods -> [String]" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- private_methods(include_inherited = true) -> [Symbol]" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- private_methods(include_inherited = true) -> [String]" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- private_methods -> [String]" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- protected_methods(include_inherited = true) -> [Symbol]" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- protected_methods(include_inherited = true) -> [String]" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- protected_methods -> [String]" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- singleton_methods(inherited_too = true) -> [Symbol]" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- singleton_methods(inherited_too = true) -> [String]" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- singleton_methods(inherited_too = false) -> [String]" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- singleton_methods -> [String]" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- to_a -> Array" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- to_s -> String" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- to_str -> String" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- to_ary -> Array" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- to_hash -> Hash" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- to_int -> Integer" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- to_proc -> Proc" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- to_io -> IO" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- to_regexp -> Regexp" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- to_enum(method = :each, *args) -> Enumerator" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- enum_for(method = :each, *args) -> Enumerator" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- to_enum(method = :each, *args) -> Enumerable::Enumerator" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- enum_for(method = :each, *args) -> Enumerable::Enumerator" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- tap{|x| ... } -> self" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- __id__ -> Integer" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- object_id -> Integer" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- id -> Integer" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- hash -> Fixnum" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- ===(other) -> bool" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- =~(other) -> nil" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- =~(other) -> false" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- display(out = $stdout) -> nil" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- extend(*modules) -> self" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- inspect -> String" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- instance_variable_get(var) -> object|nil" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- instance_variable_set(var, value) -> object" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- instance_variables -> [Symbol]" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- instance_variables -> [String]" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- instance_variable_defined?(var) -> bool" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- send(name, *args) -> object" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- send(name, *args) { .... } -> object" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- __send__(name, *args) -> object" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- __send__(name, *args) { .... } -> object" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- public_send(name, *args) -> object" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- _dump(limit) -> String" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- marshal_dump -> object" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- marshal_load(obj) -> object" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- clone -> object" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- dup -> object" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "==== 深いコピーと浅いコピー" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- freeze -> self" "==== 深いコピーと浅いコピー" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- frozen? -> bool" "==== 深いコピーと浅いコピー" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- method(name) -> Method" "==== 深いコピーと浅いコピー" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- respond_to?(name, include_private = false) -> bool" "==== 深いコピーと浅いコピー" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- respond_to_missing?(symbol, include_private) -> bool" "==== 深いコピーと浅いコピー" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- method_missing(name, *args) -> object" "==== 深いコピーと浅いコピー" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- instance_of?(klass) -> bool" "==== 深いコピーと浅いコピー" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- is_a?(mod) -> bool" "==== 深いコピーと浅いコピー" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- kind_of?(mod) -> bool" "==== 深いコピーと浅いコピー" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- instance_eval(expr, filename = \"(eval)\", lineno = 1) -> object" "==== 深いコピーと浅いコピー" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- instance_eval {|obj| ... }                           -> object" "==== 深いコピーと浅いコピー" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "==== メソッド定義のネストに関する注意" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- nil? -> bool" "==== メソッド定義のネストに関する注意" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- class -> Class" "==== メソッド定義のネストに関する注意" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- type -> Class" "==== メソッド定義のネストに関する注意" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- taint -> self" "==== メソッド定義のネストに関する注意" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- tainted? -> bool" "==== メソッド定義のネストに関する注意" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- untaint -> self" "==== メソッド定義のネストに関する注意" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- trust -> self" "==== メソッド定義のネストに関する注意" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- untrusted? -> bool" "==== メソッド定義のネストに関する注意" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- untrust -> self" "==== メソッド定義のネストに関する注意" "== Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "== Private Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- initialize(*args, &block) -> object" "== Private Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- initialize_copy(obj) -> object" "== Private Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- remove_instance_variable(name) -> object" "== Private Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- singleton_method_added(name) -> object" "== Private Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- singleton_method_removed(name) -> object" "== Private Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- singleton_method_undefined(name) -> object" "== Private Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- instance_exec(*args) {|*vars| ... } -> object" "== Private Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "--- singleton_class -> Class" "== Private Instance Methods" "= class Object" "refm/api/src/_builtin/Object")
(find-rurima "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- atime(filename)    -> Time" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- ctime(filename)    -> Time" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- mtime(filename)    -> Time" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- basename(filename, suffix = \"\")     -> String" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- chmod(mode, *filename)    -> Integer" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- lchmod(mode, *filename)    -> Integer" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- chown(owner, group, *filename)    -> Integer" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- lchown(owner, group, *filename)    -> Integer" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- delete(*filename)    -> Integer" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- unlink(*filename)    -> Integer" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- dirname(filename)    -> String" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- expand_path(path, default_dir = '.')    -> String" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- absolute_path(file_name, dir_string=nil)" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- extname(filename)    -> String" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- fnmatch(pattern, path, flags = 0)     -> bool " "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- fnmatch?(pattern, path, flags = 0)    -> bool" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- ftype(filename)    -> String" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- join(*item)    -> String" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- link(old, new)    -> 0" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- new(path, mode = \"r\", perm = 0666)                -> File " "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- open(path, mode = \"r\", perm = 0666)               -> File " "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- open(path, mode = \"r\", perm = 0666) {|file| ... } -> object" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- path(filename)    -> String" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- readlink(path)    -> String" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- realpath(pathname, basedir = nil) -> String" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- realdirpath(pathname, basedir = nil) -> String" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- rename(from, to)    -> 0" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- split(pathname)    -> [String]" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- stat(filename)    -> File::Stat" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- lstat(filename)   -> File::Stat" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- symlink(old, new)    -> 0" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- truncate(path, length)    -> 0" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- umask           -> Integer" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- umask(umask)    -> Integer" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- utime(atime, mtime, *filename)    -> Integer" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- blockdev?(path)    -> bool" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- chardev?(path)    -> bool" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- directory?(path)    -> bool" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- executable?(path)    -> bool" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- executable_real?(path)    -> bool" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- exist?(path)    -> bool" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- exists?(path)    -> bool" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- file?(path)    -> bool" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- grpowned?(path)    -> bool" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- owned?(path)    -> bool" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- identical?(filename1, filename2)    -> bool" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- pipe?(path)    -> bool" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- readable?(path)    -> bool" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- readable_real?(path)    -> bool" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- setgid?(path)    -> bool" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- setuid?(path)    -> bool" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- size(path)    -> Integer" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- size?(path)    -> bool" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- socket?(path)    -> bool" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- sticky?(path)    -> bool" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- symlink?(path)    -> bool" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- writable?(path)    -> bool" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- writable_real?(path)    -> bool" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- zero?(path)    -> bool" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- world_readable?(path)    -> Integer | nil" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- world_writable?(path)    -> bool" "== Class Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "== Instance Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- atime    -> Time" "== Instance Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- ctime    -> Time" "== Instance Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- mtime    -> Time" "== Instance Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- size     -> Integer" "== Instance Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- chmod(mode)    -> 0" "== Instance Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- chown(owner, group)    -> 0" "== Instance Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- flock(operation)    -> 0 | false" "== Instance Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- path    -> String" "== Instance Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- to_path -> String" "== Instance Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- lstat    -> File::Stat" "== Instance Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- truncate(length)    -> 0" "== Instance Methods" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "== Constants" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- ALT_SEPARATOR" "== Constants" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- PATH_SEPARATOR" "== Constants" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- SEPARATOR" "== Constants" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "--- Separator" "== Constants" "= class File < IO" "refm/api/src/_builtin/File")
(find-rurima "= class SyntaxError < ScriptError" "refm/api/src/_builtin/SyntaxError")
(find-rurima "= class Struct < Object" "refm/api/src/_builtin/Struct")
(find-rurima "== Class Methods" "= class Struct < Object" "refm/api/src/_builtin/Struct")
(find-rurima "--- new(*args) -> Class" "== Class Methods" "= class Struct < Object" "refm/api/src/_builtin/Struct")
(find-rurima "==== 第一引数が String の場合" "== Class Methods" "= class Struct < Object" "refm/api/src/_builtin/Struct")
(find-rurima "==== 第一引数が Symbol の場合" "== Class Methods" "= class Struct < Object" "refm/api/src/_builtin/Struct")
(find-rurima "--- new(*args) -> Struct" "==== 第一引数が Symbol の場合" "== Class Methods" "= class Struct < Object" "refm/api/src/_builtin/Struct")
(find-rurima "--- [](*args) -> Struct" "==== 第一引数が Symbol の場合" "== Class Methods" "= class Struct < Object" "refm/api/src/_builtin/Struct")
(find-rurima "--- members -> [Symbol]" "==== 第一引数が Symbol の場合" "== Class Methods" "= class Struct < Object" "refm/api/src/_builtin/Struct")
(find-rurima "--- members -> [String]" "==== 第一引数が Symbol の場合" "== Class Methods" "= class Struct < Object" "refm/api/src/_builtin/Struct")
(find-rurima "== Instance Methods" "= class Struct < Object" "refm/api/src/_builtin/Struct")
(find-rurima "--- [](member) -> object" "== Instance Methods" "= class Struct < Object" "refm/api/src/_builtin/Struct")
(find-rurima "--- []=(member, value)" "== Instance Methods" "= class Struct < Object" "refm/api/src/_builtin/Struct")
(find-rurima "--- each {|value| ... } -> self" "== Instance Methods" "= class Struct < Object" "refm/api/src/_builtin/Struct")
(find-rurima "--- each -> Enumerator" "== Instance Methods" "= class Struct < Object" "refm/api/src/_builtin/Struct")
(find-rurima "--- each -> Enumerable::Enumerator" "== Instance Methods" "= class Struct < Object" "refm/api/src/_builtin/Struct")
(find-rurima "--- each_pair {|member, value| ... } -> self" "== Instance Methods" "= class Struct < Object" "refm/api/src/_builtin/Struct")
(find-rurima "--- each_pair -> Enumerator" "== Instance Methods" "= class Struct < Object" "refm/api/src/_builtin/Struct")
(find-rurima "--- each_pair -> Enumerable::Enumerator" "== Instance Methods" "= class Struct < Object" "refm/api/src/_builtin/Struct")
(find-rurima "--- length -> Fixnum" "== Instance Methods" "= class Struct < Object" "refm/api/src/_builtin/Struct")
(find-rurima "--- size -> Fixnum" "== Instance Methods" "= class Struct < Object" "refm/api/src/_builtin/Struct")
(find-rurima "--- members -> [String]" "== Instance Methods" "= class Struct < Object" "refm/api/src/_builtin/Struct")
(find-rurima "--- values -> [object]" "== Instance Methods" "= class Struct < Object" "refm/api/src/_builtin/Struct")
(find-rurima "--- to_a -> [object]" "== Instance Methods" "= class Struct < Object" "refm/api/src/_builtin/Struct")
(find-rurima "--- values_at(*members) -> [object]" "== Instance Methods" "= class Struct < Object" "refm/api/src/_builtin/Struct")
(find-rurima "--- ==(other)    -> bool" "== Instance Methods" "= class Struct < Object" "refm/api/src/_builtin/Struct")
(find-rurima "--- eql?(other)    -> bool" "== Instance Methods" "= class Struct < Object" "refm/api/src/_builtin/Struct")
(find-rurima "--- equal?(other)   -> bool" "== Instance Methods" "= class Struct < Object" "refm/api/src/_builtin/Struct")
(find-rurima "--- hash    -> Integer" "== Instance Methods" "= class Struct < Object" "refm/api/src/_builtin/Struct")
(find-rurima "= class EOFError < IOError" "refm/api/src/_builtin/EOFError")
(find-rurima "= class StandardError < Exception" "refm/api/src/_builtin/StandardError")
(find-rurima "= class TrueClass < Object" "refm/api/src/_builtin/TrueClass")
(find-rurima "== Instance Methods" "= class TrueClass < Object" "refm/api/src/_builtin/TrueClass")
(find-rurima "--- &(other)    -> bool" "== Instance Methods" "= class TrueClass < Object" "refm/api/src/_builtin/TrueClass")
(find-rurima "--- |(other)    -> bool" "== Instance Methods" "= class TrueClass < Object" "refm/api/src/_builtin/TrueClass")
(find-rurima "--- ^(other)    -> bool" "== Instance Methods" "= class TrueClass < Object" "refm/api/src/_builtin/TrueClass")
(find-rurima "--- to_s    -> String" "== Instance Methods" "= class TrueClass < Object" "refm/api/src/_builtin/TrueClass")
(find-rurima "= class StopIteration < IndexError" "refm/api/src/_builtin/StopIteration")
(find-rurima "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- all?               -> bool" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- all? {|item| ... } -> bool" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- any?               -> bool" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- any? {|item| ... } -> bool" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- collect  -> Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- map      -> Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- collect {|item| ... } -> [object]" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- map {|item| ... }     -> [object]" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- each_with_index                      -> Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- enum_with_index                      -> Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- each_with_index                      -> Enumerable::Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- enum_with_index                      -> Enumerable::Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- each_with_index {|item, index| ... } -> self" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- find(ifnone = nil)   -> Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- detect(ifnone = nil) -> Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- find(ifnone = nil)   -> Enumerable::Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- detect(ifnone = nil) -> Enumerable::Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- find(ifnone = nil) {|item| ... }   -> object" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- detect(ifnone = nil) {|item| ... } -> object" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- find_all  -> Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- select    -> Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- find_all  -> Enumerable::Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- select    -> Enumerable::Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- find_all {|item| ... } -> [object]" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- select {|item| ... }   -> [object]" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- grep(pattern)                -> [object]" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- grep(pattern) {|item| ... }  -> [object]" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- inject(init = self.first) {|result, item| ... } -> object" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- inject(sym)                                     -> object" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- inject(init, sym)                               -> object" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- reduce(init = self.first) {|result, item| ... } -> object" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- reduce(sym)                                     -> object" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- reduce(init, sym)                               -> object" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- member?(val)  -> bool" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- include?(val) -> bool" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- max -> object" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- max {|a, b| ... } -> object" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- max_by              -> Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- max_by              -> Enumerable::Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- max_by{|item| ... } -> object" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- min -> object" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- min {|a, b| ... } -> object" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- min_by               -> Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- min_by               -> Enumerable::Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- min_by {|item| ... } -> object" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- partition               -> Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- partition               -> Enumerable::Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- partition {|item| ... } -> [[object], [object]]" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- reject               -> Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- reject               -> Enumerable::Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- reject {|item| ... } -> [object]" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- sort               -> [object]" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- sort {|a, b| ... } -> [object]" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- sort_by               -> Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- sort_by               -> Enumerable::Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- sort_by {|item| ... } -> [object]" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- to_a    -> [object]" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- entries -> [object]" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- zip(*lists)  -> [[object]]" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- zip(*lists) {|v1, v2, ...| ...} -> nil" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- each_slice(n)               -> Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- enum_slice(n)               -> Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- each_slice(n)               -> Enumerable::Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- enum_slice(n)               -> Enumerable::Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- each_slice(n) {|list| ... } -> nil" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- enum_slice(n) {|list| ... } -> nil" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- each_cons(n)               -> Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- enum_cons(n)               -> Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- each_cons(n)               -> Enumerable::Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- enum_cons(n)               -> Enumerable::Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- each_cons(n) {|list| ... } -> nil" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- enum_cons(n) {|list| ... } -> nil" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- count                   -> Integer" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- count(item)             -> Integer" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- count {|obj| ... }  -> Integer" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- cycle(n=nil)       -> Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- cycle(n=nil)       -> Enumerable::Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- cycle(n=nil) {|obj| ... } -> object | nil" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- drop(n)               -> Array" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- drop_while                    -> Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- drop_while                    -> Enumerable::Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- drop_while {|element| ... }   -> Array" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- find_index                    -> Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- find_index                    -> Enumerable::Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- find_index{|obj| ... }  -> Integer | nil" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- first      -> object | nil" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- first(n)   -> Array" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- group_by               -> Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- group_by               -> Enumerable::Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- group_by {|obj| ... }  -> Hash" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- minmax                 -> [object, object]" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- minmax{|a, b| ... }    -> [object, object]" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- minmax_by                -> Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- minmax_by                -> Enumerable::Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- minmax_by {|obj| ... }   -> [object, object]" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- none?               -> bool" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- none?{|obj| ... }   -> bool" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- one?                -> bool" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- one?{|obj| ... }    -> bool" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- take(n)               -> Array" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- take_while                    -> Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- take_while                    -> Enumerable::Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- take_while {|element| ... }   -> Array" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- reverse_each -> Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- reverse_each -> Enumerable::Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- reverse_each {|element| ... } -> self" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- each_with_object(obj) -> Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- each_with_object(obj) {|(*args), memo_obj| ... } -> object" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- flat_map       -> Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- collect_concat -> Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- flat_map       {| obj | block }  -> Array" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- collect_concat {| obj | block }  -> Array" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- chunk {|elt| ... } -> Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- chunk(initial_state) {|elt, state| ... } -> Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- each_entry -> Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- each_entry {|obj| block} -> self" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- slice_before(pattern) -> Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- slice_before {|elt| bool } -> Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "--- slice_before(initial_state) {|elt, state| bool } -> Enumerator" "== Instance Methods" "= module Enumerable" "refm/api/src/_builtin/Enumerable")
(find-rurima "=class Encoding::Converter" "refm/api/src/_builtin/Encoding__Converter")
(find-rurima "== Class Methods" "=class Encoding::Converter" "refm/api/src/_builtin/Encoding__Converter")
(find-rurima "--- new(source_encoding, destination_encoding) -> Encoding::Converter" "== Class Methods" "=class Encoding::Converter" "refm/api/src/_builtin/Encoding__Converter")
(find-rurima "--- new(source_encoding, destination_encoding, options) -> Encoding::Converter" "== Class Methods" "=class Encoding::Converter" "refm/api/src/_builtin/Encoding__Converter")
(find-rurima "--- new(convpath) -> Encoding::Converter" "== Class Methods" "=class Encoding::Converter" "refm/api/src/_builtin/Encoding__Converter")
(find-rurima "--- asciicompat_encoding(string) -> Encoding | nil" "== Class Methods" "=class Encoding::Converter" "refm/api/src/_builtin/Encoding__Converter")
(find-rurima "--- asciicompat_encoding(encoding) -> Encoding | nil" "== Class Methods" "=class Encoding::Converter" "refm/api/src/_builtin/Encoding__Converter")
(find-rurima "== Instance Methods" "=class Encoding::Converter" "refm/api/src/_builtin/Encoding__Converter")
(find-rurima "--- inspect -> String" "== Instance Methods" "=class Encoding::Converter" "refm/api/src/_builtin/Encoding__Converter")
(find-rurima "--- source_encoding -> Encoding" "== Instance Methods" "=class Encoding::Converter" "refm/api/src/_builtin/Encoding__Converter")
(find-rurima "--- destination_encoding -> Encoding" "== Instance Methods" "=class Encoding::Converter" "refm/api/src/_builtin/Encoding__Converter")
(find-rurima "--- convpath -> Array" "== Instance Methods" "=class Encoding::Converter" "refm/api/src/_builtin/Encoding__Converter")
(find-rurima "--- replacement -> String" "== Instance Methods" "=class Encoding::Converter" "refm/api/src/_builtin/Encoding__Converter")
(find-rurima "--- replacement=(string)" "== Instance Methods" "=class Encoding::Converter" "refm/api/src/_builtin/Encoding__Converter")
(find-rurima "--- convert(source_string) -> String" "== Instance Methods" "=class Encoding::Converter" "refm/api/src/_builtin/Encoding__Converter")
(find-rurima "--- last_error -> Exception | nil" "== Instance Methods" "=class Encoding::Converter" "refm/api/src/_builtin/Encoding__Converter")
(find-rurima "--- finish -> String" "== Instance Methods" "=class Encoding::Converter" "refm/api/src/_builtin/Encoding__Converter")
(find-rurima "--- primitive_convert(source_buffer, destination_buffer) -> Symbol" "== Instance Methods" "=class Encoding::Converter" "refm/api/src/_builtin/Encoding__Converter")
(find-rurima "--- primitive_convert(source_buffer, destination_buffer, destination_byteoffset) -> Symbol" "== Instance Methods" "=class Encoding::Converter" "refm/api/src/_builtin/Encoding__Converter")
(find-rurima "--- primitive_convert(source_buffer, destination_buffer, destination_byteoffset, destination_bytesize) -> Symbol" "== Instance Methods" "=class Encoding::Converter" "refm/api/src/_builtin/Encoding__Converter")
(find-rurima "--- primitive_convert(source_buffer, destination_buffer, destination_byteoffset, destination_bytesize, options) -> Symbol" "== Instance Methods" "=class Encoding::Converter" "refm/api/src/_builtin/Encoding__Converter")
(find-rurima "--- primitive_errinfo -> Array" "== Instance Methods" "=class Encoding::Converter" "refm/api/src/_builtin/Encoding__Converter")
(find-rurima "--- insert_output(string) -> nil" "== Instance Methods" "=class Encoding::Converter" "refm/api/src/_builtin/Encoding__Converter")
(find-rurima "--- putback -> String" "== Instance Methods" "=class Encoding::Converter" "refm/api/src/_builtin/Encoding__Converter")
(find-rurima "--- putback(max_numbytes) -> String" "== Instance Methods" "=class Encoding::Converter" "refm/api/src/_builtin/Encoding__Converter")
(find-rurima "= class RangeError < StandardError" "refm/api/src/_builtin/RangeError")
(find-rurima "= class SystemExit < Exception" "refm/api/src/_builtin/SystemExit")
(find-rurima "== Class Methods" "= class SystemExit < Exception" "refm/api/src/_builtin/SystemExit")
(find-rurima "--- new(status = 0, error_message = \"\") -> SystemExit" "== Class Methods" "= class SystemExit < Exception" "refm/api/src/_builtin/SystemExit")
(find-rurima "== Instance Methods" "= class SystemExit < Exception" "refm/api/src/_builtin/SystemExit")
(find-rurima "--- status -> Fixnum" "== Instance Methods" "= class SystemExit < Exception" "refm/api/src/_builtin/SystemExit")
(find-rurima "--- success? -> bool" "== Instance Methods" "= class SystemExit < Exception" "refm/api/src/_builtin/SystemExit")
(find-rurima "= class NotImplementedError < ScriptError" "refm/api/src/_builtin/NotImplementedError")
(find-rurima "= class Random < Object" "refm/api/src/_builtin/Random")
(find-rurima "=== 参考" "= class Random < Object" "refm/api/src/_builtin/Random")
(find-rurima "== Class Methods" "= class Random < Object" "refm/api/src/_builtin/Random")
(find-rurima "--- new(seed = Random.new_seed) -> Random" "== Class Methods" "= class Random < Object" "refm/api/src/_builtin/Random")
(find-rurima "--- new_seed -> Integer" "== Class Methods" "= class Random < Object" "refm/api/src/_builtin/Random")
(find-rurima "--- rand(max=0) -> Float" "== Class Methods" "= class Random < Object" "refm/api/src/_builtin/Random")
(find-rurima "--- srand(number=0) -> Integer" "== Class Methods" "= class Random < Object" "refm/api/src/_builtin/Random")
(find-rurima "== Instance Methods" "= class Random < Object" "refm/api/src/_builtin/Random")
(find-rurima "--- ==(other) -> bool" "== Instance Methods" "= class Random < Object" "refm/api/src/_builtin/Random")
(find-rurima "--- bytes(size) -> String" "== Instance Methods" "= class Random < Object" "refm/api/src/_builtin/Random")
(find-rurima "--- marshal_dump -> Array" "== Instance Methods" "= class Random < Object" "refm/api/src/_builtin/Random")
(find-rurima "--- marshal_load(array) -> Random" "== Instance Methods" "= class Random < Object" "refm/api/src/_builtin/Random")
(find-rurima "--- rand -> Float" "== Instance Methods" "= class Random < Object" "refm/api/src/_builtin/Random")
(find-rurima "--- rand(arg) -> Integer " "== Instance Methods" "= class Random < Object" "refm/api/src/_builtin/Random")
(find-rurima "--- seed -> Integer" "== Instance Methods" "= class Random < Object" "refm/api/src/_builtin/Random")
(find-rurima "== Private Instance Methods" "= class Random < Object" "refm/api/src/_builtin/Random")
(find-rurima "--- state -> Integer" "== Private Instance Methods" "= class Random < Object" "refm/api/src/_builtin/Random")
(find-rurima "--- left -> Integer" "== Private Instance Methods" "= class Random < Object" "refm/api/src/_builtin/Random")
(find-rurima "== Private Singleton Methods" "= class Random < Object" "refm/api/src/_builtin/Random")
(find-rurima "--- state -> Integer" "== Private Singleton Methods" "= class Random < Object" "refm/api/src/_builtin/Random")
(find-rurima "--- left -> Integer" "== Private Singleton Methods" "= class Random < Object" "refm/api/src/_builtin/Random")
(find-rurima "= module Kernel" "refm/api/src/_builtin/Kernel")
(find-rurima "= class NoMethodError < NameError" "refm/api/src/_builtin/NoMethodError")
(find-rurima "== Class Methods" "= class NoMethodError < NameError" "refm/api/src/_builtin/NoMethodError")
(find-rurima "--- new(error_message = \"\", name = nil, args = nil) -> NoMethodError" "== Class Methods" "= class NoMethodError < NameError" "refm/api/src/_builtin/NoMethodError")
(find-rurima "== Instance Methods" "= class NoMethodError < NameError" "refm/api/src/_builtin/NoMethodError")
(find-rurima "--- args -> [object]" "== Instance Methods" "= class NoMethodError < NameError" "refm/api/src/_builtin/NoMethodError")
(find-rurima "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- exit(status = true) -> ()" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- exit(status = 0) -> ()" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- exit!(status = false) -> ()" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- exit!(status = -1) -> ()" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- abort(message = $!.message) -> ()" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- abort -> ()" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- `(command) -> String" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- system(command) -> bool" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- system(command, options={}) -> bool | nil" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- system(env, command, options={}) -> bool | nil" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "==== 引数の解釈" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- system(program, *args) -> bool" "==== 引数の解釈" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- system(program, *args, options={}) -> bool | nil" "==== 引数の解釈" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- system(env, program, *args, options={}) -> bool | nil" "==== 引数の解釈" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "==== 引数の解釈" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- spawn(command, options={}) -> Integer" "==== 引数の解釈" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- spawn(env, command, options={}) -> Integer" "==== 引数の解釈" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "==== 引数の解釈" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- spawn(program, *args) -> Integer" "==== 引数の解釈" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- spawn(env, program, *args, options={}) -> Integer" "==== 引数の解釈" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "==== 引数の解釈" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "==== option引数の概要" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "==== option引数によるリダイレクトの概要" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "==== option引数の詳細および例" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- exec(command) -> ()" "==== option引数の詳細および例" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- exec(command, options={}) -> ()" "==== option引数の詳細および例" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- exec(env, command, options={}) -> ()" "==== option引数の詳細および例" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "==== 引数の解釈" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- exec(program, *args) -> ()" "==== 引数の解釈" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- exec(program, *args, options={}) -> ()" "==== 引数の解釈" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- exec(evn, program, *args, options={}) -> ()" "==== 引数の解釈" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "==== 引数の解釈" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- fork -> Integer | nil" "==== 引数の解釈" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- fork { ... } -> Integer | nil" "==== 引数の解釈" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- syscall(num, *arg ) -> Integer" "==== 引数の解釈" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- open(file, mode_enc = \"r\", perm = 0666) -> IO" "==== 引数の解釈" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- open(file, mode_enc = \"r\", perm = 0666) {|io| ... } -> object" "==== 引数の解釈" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- open(file, mode = \"r\", perm = 0666) -> IO" "==== 引数の解釈" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- open(file, mode = \"r\", perm = 0666) {|io| ... } -> object" "==== 引数の解釈" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "==== 第二引数のオープンモード・エンコーディング" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "==== Universal Newline" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "==== エンコーディングの指定" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- select(reads, writes = [], excepts = [], timeout = nil) -> [[IO]] | nil" "==== エンコーディングの指定" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- test(cmd, file) -> bool | Time | Integer | nil" "==== エンコーディングの指定" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- test(cmd, file1, file2) -> bool" "==== エンコーディングの指定" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- load(file, priv = false) -> true" "==== エンコーディングの指定" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "==== require と load の違い" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- require(feature) -> bool" "==== require と load の違い" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- require_relative(relative_feature) -> bool" "==== require と load の違い" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "==== require と load のスコープ" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- autoload(const_name, feature) -> nil" "==== require と load のスコープ" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "==== ネストした定義内の定数" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- autoload?(const_name) -> String | nil" "==== ネストした定義内の定数" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- set_trace_func(proc)                                         -> object" "==== ネストした定義内の定数" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- set_trace_func{|event, file, line, id, binding, klass| ... } -> Proc" "==== ネストした定義内の定数" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- caller(level_num = 1) -> [String] | nil" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- gets(rs = $/) -> String | nil" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- readline(rs = $/) -> String" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- readlines(rs = $/) -> [String] | nil" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- getc -> Fixnum | nil" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- putc(ch) -> object" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- p(*arg) -> object | Array" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- p(*arg) -> nil" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- print(*arg) -> nil" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- puts(*arg) -> nil" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- warn(message) -> nil" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- Array(arg) -> Array" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- Float(arg) -> Float" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- Integer(arg) -> Integer" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- String(arg) -> String" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- at_exit{ ... } -> Proc" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- loop { ... } -> object" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- loop { ... } -> nil" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- sleep -> Integer" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- sleep(sec) -> Integer" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- block_given? -> bool" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- iterator? -> bool" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- callcc {|cont| .... } -> object" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- catch {|tag| .... } -> object" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- catch(tag) {|tag| .... } -> object" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- throw(tag, value = nil) -> ()" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- rand(max = 0) -> Integer|Float" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- srand -> Integer" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- srand(seed) -> Integer" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- global_variables -> [Symbol]" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- global_variables -> [String]" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- local_variables -> [Symbol]" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- local_variables -> [String]" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- sub(pattern, replace)          -> String" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- sub!(pattern, replace)         -> String" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- sub(pattern) {|matched| ... }  -> String" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- sub!(pattern) {|matched| ... } -> String" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- gsub(pattern, replace)          -> String" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- gsub!(pattern, replace)         -> String" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- gsub(pattern) {|matched| ... }  -> String" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- gsub!(pattern) {|matched| ... } -> String" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- chop  -> String" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- chop! -> String | nil" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- chomp(rs = $/)  -> String" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- chomp!(rs = $/) -> String | nil" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- split(sep = $/, limit = 0) -> [String]" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- scan(re)                  -> [String] | [[String]]" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- scan(re) {|matched| ... } -> [String] | [[String]]" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- trap(signal, command) -> object" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- trap(signal) { ... } -> object" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- trace_var(varname, hook) -> nil" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- trace_var(varname){|new_val| .... } -> nil" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- trace_var(varname, hook) -> [String|Proc]" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- untrace_var(varname, hook = nil) -> [String|Proc]" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- raise -> ()" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- fail  -> ()" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- raise(message) -> ()" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- fail(message)  -> ()" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- raise(error_type, message = nil, backtrace = caller(0)) -> ()" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- fail(error_type, message = nil, backtrace = caller(0))  -> ()" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- printf(format, *arg) -> nil" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- printf(port, format, *arg) -> nil" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- sprintf(format, *arg) -> String" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- format(format, *arg) -> String" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- binding -> Binding" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- eval(expr) -> object" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- eval(expr, bind, fname = __FILE__, lineno = 1) -> object" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- proc { ... } -> Proc" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- lambda { ... } -> Proc" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- proc -> Proc" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- lambda -> Proc" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- __method__ -> Symbol | nil" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- __callee__ -> Symbol | nil" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- Complex(r, i = 0) -> Complex" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- Complex(s)        -> Complex" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "--- Rational(x, y = 1) -> Rational" "==== ブロックパラメータの意味" "== Module Functions" "refm/api/src/_builtin/functions")
(find-rurima "= class ScriptError < Exception" "refm/api/src/_builtin/ScriptError")
(find-rurima "= class NameError < StandardError" "refm/api/src/_builtin/NameError")
(find-rurima "== Class Methods" "= class NameError < StandardError" "refm/api/src/_builtin/NameError")
(find-rurima "--- new(error_message = \"\", name = nil) -> NameError" "== Class Methods" "= class NameError < StandardError" "refm/api/src/_builtin/NameError")
(find-rurima "== Instance Methods" "= class NameError < StandardError" "refm/api/src/_builtin/NameError")
(find-rurima "--- name -> Symbol" "== Instance Methods" "= class NameError < StandardError" "refm/api/src/_builtin/NameError")
(find-rurima "--- to_s -> String" "== Instance Methods" "= class NameError < StandardError" "refm/api/src/_builtin/NameError")
(find-rurima "= class SystemCallError < StandardError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "== Class Methods" "= class SystemCallError < StandardError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "--- new(error_message) -> SystemCallError" "== Class Methods" "= class SystemCallError < StandardError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "--- new(error_message, errno) -> SystemCallError" "== Class Methods" "= class SystemCallError < StandardError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "--- new(errno) -> SystemCallError" "== Class Methods" "= class SystemCallError < StandardError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "== Instance Methods" "= class SystemCallError < StandardError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "--- errno -> Fixnum | nil" "== Instance Methods" "= class SystemCallError < StandardError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= module Errno" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EXXX < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "=== エラー名リスト" "= class Errno::EXXX < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "== Class Methods" "= class Errno::EXXX < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "--- new() -> Errno::EXXX" "== Class Methods" "= class Errno::EXXX < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "--- new(error_message) -> Errno::EXXX" "== Class Methods" "= class Errno::EXXX < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "--- ===(other) -> bool" "== Class Methods" "= class Errno::EXXX < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "== Constants" "= class Errno::EXXX < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "--- Errno" "== Constants" "= class Errno::EXXX < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ERROR < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EPERM < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ENOENT < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ESRCH < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EINTR < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EIO < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ENXIO < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::E2BIG < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ENOEXEC < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EBADF < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ECHILD < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EAGAIN < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ENOMEM < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EACCES < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EFAULT < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ENOTBLK < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EBUSY < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EEXIST < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EXDEV < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ENODEV < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ENOTDIR < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EISDIR < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EINVAL < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ENFILE < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EMFILE < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ENOTTY < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ETXTBSY < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EFBIG < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ENOSPC < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ESPIPE < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EROFS < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EMLINK < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EPIPE < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EDOM < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ERANGE < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EDEADLK < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ENAMETOOLONG < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ENOLCK < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ENOSYS < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ENOTEMPTY < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ELOOP < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EWOULDBLOCK < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ENOMSG < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EIDRM < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ECHRNG < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EL2NSYNC < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EL3HLT < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EL3RST < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ELNRNG < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EUNATCH < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ENOCSI < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EL2HLT < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EBADE < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EBADR < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EXFULL < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ENOANO < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EBADRQC < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EBADSLT < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EDEADLOCK < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EBFONT < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ENOSTR < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ENODATA < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ETIME < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ENOSR < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ENONET < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ENOPKG < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EREMOTE < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ENOLINK < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EADV < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ESRMNT < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ECOMM < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EPROTO < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EMULTIHOP < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EDOTDOT < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EBADMSG < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EOVERFLOW < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ENOTUNIQ < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EBADFD < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EREMCHG < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ELIBACC < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ELIBBAD < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ELIBSCN < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ELIBMAX < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ELIBEXEC < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EILSEQ < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ERESTART < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ESTRPIPE < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EUSERS < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ENOTSOCK < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EDESTADDRREQ < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EMSGSIZE < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EPROTOTYPE < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ENOPROTOOPT < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EPROTONOSUPPORT < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ESOCKTNOSUPPORT < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EOPNOTSUPP < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EPFNOSUPPORT < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EAFNOSUPPORT < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EADDRINUSE < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EADDRNOTAVAIL < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ENETDOWN < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ENETUNREACH < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ENETRESET < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ECONNABORTED < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ECONNRESET < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ENOBUFS < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EISCONN < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ENOTCONN < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ESHUTDOWN < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ETOOMANYREFS < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ETIMEDOUT < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ECONNREFUSED < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EHOSTDOWN < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EHOSTUNREACH < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EALREADY < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EINPROGRESS < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ESTALE < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EUCLEAN < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ENOTNAM < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::ENAVAIL < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EISNAM < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EREMOTEIO < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::EDQUOT < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Errno::NOERROR < SystemCallError" "refm/api/src/_builtin/SystemCallError")
(find-rurima "= class Continuation < Object" "refm/api/src/_builtin/Continuation")
(find-rurima "== Instance Methods" "= class Continuation < Object" "refm/api/src/_builtin/Continuation")
(find-rurima "--- [](*ret)      -> ()" "== Instance Methods" "= class Continuation < Object" "refm/api/src/_builtin/Continuation")
(find-rurima "--- call(*ret)    -> ()" "== Instance Methods" "= class Continuation < Object" "refm/api/src/_builtin/Continuation")
(find-rurima "= module FileTest" "refm/api/src/_builtin/FileTest")
(find-rurima "=== 注意" "= module FileTest" "refm/api/src/_builtin/FileTest")
(find-rurima "== Module Functions" "= module FileTest" "refm/api/src/_builtin/FileTest")
(find-rurima "--- blockdev?(file)    -> bool" "== Module Functions" "= module FileTest" "refm/api/src/_builtin/FileTest")
(find-rurima "--- chardev?(file)    -> bool" "== Module Functions" "= module FileTest" "refm/api/src/_builtin/FileTest")
(find-rurima "--- executable?(file)    -> bool" "== Module Functions" "= module FileTest" "refm/api/src/_builtin/FileTest")
(find-rurima "--- executable_real?(file)    -> bool" "== Module Functions" "= module FileTest" "refm/api/src/_builtin/FileTest")
(find-rurima "--- exist?(file)    -> bool" "== Module Functions" "= module FileTest" "refm/api/src/_builtin/FileTest")
(find-rurima "--- exists?(file)    -> bool" "== Module Functions" "= module FileTest" "refm/api/src/_builtin/FileTest")
(find-rurima "--- grpowned?(file)    -> bool" "== Module Functions" "= module FileTest" "refm/api/src/_builtin/FileTest")
(find-rurima "--- directory?(file)    -> bool" "== Module Functions" "= module FileTest" "refm/api/src/_builtin/FileTest")
(find-rurima "--- file?(file)    -> bool" "== Module Functions" "= module FileTest" "refm/api/src/_builtin/FileTest")
(find-rurima "--- identical?(file1, file2)    -> bool" "== Module Functions" "= module FileTest" "refm/api/src/_builtin/FileTest")
(find-rurima "--- pipe?(file)    -> bool" "== Module Functions" "= module FileTest" "refm/api/src/_builtin/FileTest")
(find-rurima "--- socket?(file)    -> bool" "== Module Functions" "= module FileTest" "refm/api/src/_builtin/FileTest")
(find-rurima "--- owned?(file)    -> bool" "== Module Functions" "= module FileTest" "refm/api/src/_builtin/FileTest")
(find-rurima "--- readable?(file)    -> bool" "== Module Functions" "= module FileTest" "refm/api/src/_builtin/FileTest")
(find-rurima "--- readable_real?(file)    -> bool" "== Module Functions" "= module FileTest" "refm/api/src/_builtin/FileTest")
(find-rurima "--- setuid?(file)    -> bool" "== Module Functions" "= module FileTest" "refm/api/src/_builtin/FileTest")
(find-rurima "--- setgid?(file)    -> bool" "== Module Functions" "= module FileTest" "refm/api/src/_builtin/FileTest")
(find-rurima "--- size(file)    -> Integer" "== Module Functions" "= module FileTest" "refm/api/src/_builtin/FileTest")
(find-rurima "--- size?(file)    -> Integer | nil" "== Module Functions" "= module FileTest" "refm/api/src/_builtin/FileTest")
(find-rurima "--- sticky?(file)    -> bool" "== Module Functions" "= module FileTest" "refm/api/src/_builtin/FileTest")
(find-rurima "--- symlink?(file)    -> bool" "== Module Functions" "= module FileTest" "refm/api/src/_builtin/FileTest")
(find-rurima "--- writable?(file)    -> bool" "== Module Functions" "= module FileTest" "refm/api/src/_builtin/FileTest")
(find-rurima "--- writable_real?(file)    -> bool" "== Module Functions" "= module FileTest" "refm/api/src/_builtin/FileTest")
(find-rurima "--- zero?(file)    -> bool" "== Module Functions" "= module FileTest" "refm/api/src/_builtin/FileTest")
(find-rurima "--- world_readable?(path)    -> Integer | nil" "== Module Functions" "= module FileTest" "refm/api/src/_builtin/FileTest")
(find-rurima "--- world_writable?(path)    -> bool" "== Module Functions" "= module FileTest" "refm/api/src/_builtin/FileTest")
(find-rurima "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- %(other)      -> Rational | Float" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- modulo(other) -> Rational | Float" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- *(other) -> Rational | Float" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- **(other) -> Rational | Float" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- +(other) -> Rational | Float" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- -(other) -> Rational | Float" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- /(other)   -> Rational | Float" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- quo(other) -> Rational | Float" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- <=>(other) -> -1 | 0 | 1 | nil" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- <=>(other) -> -1 | 0 | 1" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- ==(other) -> bool" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- abs -> Rational" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- ceil(precision = 0) -> Integer | Rational" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- ceil                -> Integer" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- coerce(other) -> Array" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- denominator -> Integer" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- div(other) -> Integer" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- divmod(other) -> [Integer, Float | Rational]" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- fdiv(other) -> Float" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- floor(precision = 0) -> Integer | Rational" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- floor -> Integer" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- hash -> Integer" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- inspect -> String" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- marshal_dump -> Array" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- marshal_load -> Rational" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- numerator -> Integer" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- rationalize(eps = 0) -> Rational" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- remainder(other) -> Rational" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- round(precision = 0) -> Integer | Rational" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- round -> Integer" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- to_f -> Float" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- to_i -> Integer" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- truncate(precision = 0) -> Rational | Integer" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- truncate                -> Integer" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- to_r -> Rational" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- to_s -> String" "== Public Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "== Private Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "--- convert(*arg) -> Rational" "== Private Instance Methods" "= class Rational < Numeric" "refm/api/src/_builtin/Rational")
(find-rurima "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "== Class Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- new(path)    -> File::Stat" "== Class Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- <=>(o) -> Fixnum | nil" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- ftype -> String" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- dev -> String" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- dev_major -> Integer" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- dev_minor -> Integer" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- ino -> Integer" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- mode -> Integer" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- nlink -> Integer" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- uid -> Integer" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- gid -> Integer" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- rdev -> Integer" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- rdev_major -> Integer" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- rdev_minor -> Integer" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- size -> Integer" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- blksize -> Integer" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- blocks -> Integer" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- atime -> Time" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- mtime -> Time" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- ctime -> Time" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- directory? -> bool" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- readable? -> bool" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- readable_real? -> bool" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- writable? -> bool" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- writable_real? -> bool" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- executable? -> bool" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- executable_real? -> bool" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- file? -> bool" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- zero? -> bool" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- size? -> Integer | nil" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- owned? -> bool" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- grpowned? -> bool" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- pipe? -> bool" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- symlink? -> false" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- socket? -> bool" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- blockdev? -> bool" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- chardev? -> bool" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- setuid? -> bool" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- setgid? -> bool" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- sticky? -> bool" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- world_readable? -> Fixnum | nil" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "--- world_writable? -> Fixnum | nil" "== Instance Methods" "= class File::Stat < Object" "refm/api/src/_builtin/File__Stat")
(find-rurima "= class Binding < Object" "refm/api/src/_builtin/Binding")
(find-rurima "== Instance Methods" "= class Binding < Object" "refm/api/src/_builtin/Binding")
(find-rurima "--- eval(expr, fname = __FILE__, lineno = 1)    -> object" "== Instance Methods" "= class Binding < Object" "refm/api/src/_builtin/Binding")
(find-rurima "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "=== C 言語との違いに注意" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "== Class Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- at(time)    -> Time" "== Class Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- at(time, usec)    -> Time" "== Class Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- gm(year, mon = 1, day = 1, hour = 0, min = 0, sec = 0, usec = 0)             -> Time" "== Class Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- utc(year, mon = 1, day = 1, hour = 0, min = 0, sec = 0, usec = 0)            -> Time" "== Class Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- gm(sec, min, hour, mday, mon, year, wday, yday, isdst, zone)     -> Time" "== Class Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- utc(sec, min, hour, mday, mon, year, wday, yday, isdst, zone)    -> Time" "== Class Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- local(year, mon = 1, day = 1, hour = 0, min = 0, sec = 0, usec = 0)      -> Time" "== Class Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- mktime(year, mon = 1, day = 1, hour = 0, min = 0, sec = 0, usec = 0)     -> Time" "== Class Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- local(sec, min, hour, mday, mon, year, wday, yday, isdst, zone)     -> Time" "== Class Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- mktime(sec, min, hour, mday, mon, year, wday, yday, isdst, zone)    -> Time" "== Class Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- new    -> Time" "== Class Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- now    -> Time" "== Class Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- times    -> Struct::Tms" "== Class Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- +(other)    -> Time" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- -(time)    -> Float" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- -(sec)    -> Time" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- <=>(other) -> -1 | 0 | 1 | nil" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- eql?(other)    -> bool" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- asctime    -> String" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- ctime      -> String" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- gmt?    -> bool" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- utc?    -> bool" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- getgm     -> Time" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- getutc    -> Time" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- getlocal     -> Time" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- gmtime    -> self" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- utc       -> self" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- localtime     -> self" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- strftime(format)    -> String" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- sec    -> Integer" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- min    -> Integer" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- hour    -> Integer" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- mday    -> Integer" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- day     -> Integer" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- mon      -> Integer" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- month    -> Integer" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- year    -> Integer  " "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- wday    -> Integer  " "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- yday    -> Integer  " "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- isdst    -> bool" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- dst?     -> bool" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- zone    -> String" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- succ    -> Time" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- utc_offset     -> Integer" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- gmt_offset     -> Integer" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- gmtoff         -> Integer" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- to_a     -> Array" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- to_f    -> Float" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- to_r    -> Rational" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- to_i      -> Integer" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- tv_sec    -> Integer" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- to_s     -> String" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- usec         -> Integer" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- tv_usec      -> Integer" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- friday? -> bool" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- monday? -> bool" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- saturday? -> bool" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- sunday? -> bool" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- thursday? -> bool" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- tuesday? -> bool" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- wednesday? -> bool" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- nsec    -> Integer" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- tv_nsec -> Integer" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- round(ndigits=0) -> Time" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "--- subsec -> Integer | Rational" "== Instance Methods" "= class Time < Object" "refm/api/src/_builtin/Time")
(find-rurima "= class Exception < Object" "refm/api/src/_builtin/Exception")
(find-rurima "== Class Methods" "= class Exception < Object" "refm/api/src/_builtin/Exception")
(find-rurima "--- new(error_message = nil)" "== Class Methods" "= class Exception < Object" "refm/api/src/_builtin/Exception")
(find-rurima "--- exception(error_message = nil)" "== Class Methods" "= class Exception < Object" "refm/api/src/_builtin/Exception")
(find-rurima "== Instance Methods" "= class Exception < Object" "refm/api/src/_builtin/Exception")
(find-rurima "--- exception                   -> self" "== Instance Methods" "= class Exception < Object" "refm/api/src/_builtin/Exception")
(find-rurima "--- exception(error_message)    -> Exception" "== Instance Methods" "= class Exception < Object" "refm/api/src/_builtin/Exception")
(find-rurima "--- backtrace    -> [String]" "== Instance Methods" "= class Exception < Object" "refm/api/src/_builtin/Exception")
(find-rurima "--- message    -> String" "== Instance Methods" "= class Exception < Object" "refm/api/src/_builtin/Exception")
(find-rurima "--- to_s       -> String" "== Instance Methods" "= class Exception < Object" "refm/api/src/_builtin/Exception")
(find-rurima "--- to_str    -> String" "== Instance Methods" "= class Exception < Object" "refm/api/src/_builtin/Exception")
(find-rurima "--- set_backtrace(errinfo)    -> nil | String | [String]" "== Instance Methods" "= class Exception < Object" "refm/api/src/_builtin/Exception")
(find-rurima "--- ==(other)    -> bool" "== Instance Methods" "= class Exception < Object" "refm/api/src/_builtin/Exception")
(find-rurima "= class fatal < Exception" "refm/api/src/_builtin/fatal")
(find-rurima "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "===[a:mutable] 破壊的な変更" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "===[a:m17n] 多言語化と文字列のエンコーディング" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "==== 文字列同士の比較・結合" "===[a:m17n] 多言語化と文字列のエンコーディング" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "==== 7bit クリーンな文字列" "===[a:m17n] 多言語化と文字列のエンコーディング" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "==== バイト列を表す文字列" "===[a:m17n] 多言語化と文字列のエンコーディング" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "===[a:multi] マルチバイト文字列の処理" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "== Class Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- try_convert(obj) -> String | nil" "== Class Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- new(string = \"\") -> String" "== Class Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- +(other) -> String" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- *(times) -> String" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- %(args) -> String" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- <=>(other) -> Integer | nil" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- ==(other) -> bool" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- ===(other) -> bool" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- <<(other) -> self" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- concat(other) -> self" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- =~(other) -> Integer" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- ~ -> Integer" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- [](nth) -> String | nil" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- slice(nth) -> String | nil" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- [](nth) -> Integer | nil" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- slice(nth) -> Integer | nil" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- [](nth, len) -> String | nil" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- slice(nth, len) -> String | nil" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- [](substr) -> String | nil" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- slice(substr) -> String | nil" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- [](regexp, nth = 0) -> String" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- slice(regexp, nth = 0) -> String" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- [](regexp) -> String" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- slice(regexp) -> String" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- [](regexp, name) -> String" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- slice(regexp, name) -> String" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- [](range) -> String" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- slice(range) -> String" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "=== rangeオブジェクトが終端を含む場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- []=(nth, val)" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- []=(nth, len, val)" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- []=(substr, val)" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- []=(regexp, nth, val)" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- []=(regexp, name, val)" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- []=(regexp, val)" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- []=(range, val)" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- capitalize -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- capitalize! -> self | nil" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- casecmp(other) -> Integer | nil" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- center(width, padding = ' ') -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- center(width) -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- ljust(width, padding = ' ') -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- ljust(width) -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- rjust(width, padding = ' ') -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- rjust(width) -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- chomp(rs = $/) -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- chomp!(rs = $/) -> self | nil" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- chop -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- chop! -> self | nil" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- clear -> ()" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- count(*chars) -> Integer" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- crypt(salt) -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- delete(*strs) -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- delete!(*strs) -> self | nil" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- downcase -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- downcase! -> self | nil" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- dump -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- each(rs = $/)      {|line| ... } -> ()" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- each_line(rs = $/) {|line| ... } -> ()" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- lines(rs = $/)     {|line| ... } -> ()" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- each_line(rs = $/)  -> Enumerator" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- lines(rs = $/)      -> Enumerator" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- each(rs = $/)       -> Enumerable::Enumerator" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- each_line(rs = $/)  -> Enumerable::Enumerator" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- lines(rs = $/)      -> Enumerable::Enumerator" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- each_byte {|byte| ... } -> self" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- bytes {|byte| ... } -> self" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- each_byte -> Enumerator" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- bytes     -> Enumerator" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- each_byte -> Enumerable::Enumerator" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- bytes     -> Enumerable::Enumerator" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- empty? -> bool" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- getbyte(index) -> Integer | nil" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- setbyte(index, b) -> Integer" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- gsub(pattern, replace) -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- gsub(pattern) {|matched| .... } -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- gsub(pattern) -> Enumerator" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- gsub(pattern) -> Enumerable::Enumerator" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- gsub(pattern, hash) -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- gsub!(pattern, replace) -> self | nil" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- gsub!(pattern) {|matched| .... } -> self | nil" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- gsub!(pattern) -> Enumerator" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- gsub!(pattern) -> Enumerable::Enumerator" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- gsub!(pattern, hash) -> self | nil" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- hex -> Integer" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- include?(substr) -> bool" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- index(pattern, pos = 0) -> Integer" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- insert(pos, other) -> ()" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- intern -> Symbol" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- to_sym -> Symbol" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- length -> Integer" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- size -> Integer" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- match(regexp, pos = 0) -> MatchData" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- match(regexp) -> MatchData" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- succ -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- next -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- succ! -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- next! -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- oct -> Integer" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- replace(other) -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- reverse -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- reverse! -> ()" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- rindex(pattern, pos = self.size) -> Integer | nil" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- scan(re) -> [String] | [[String]]" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- scan(re) {|s| ... } -> ()" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- slice!(nth) -> Integer" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- slice!(pos, len) -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- slice!(substr) -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- slice!(regexp, nth = 0) -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- slice!(regexp) -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- slice!(first..last) -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- slice!(first...last) -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- slice!(regexp, nth = 0) -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- split(sep = $;, limit = 0) -> [String] | [[String]]" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- squeeze(*chars) -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- squeeze!(*chars) -> ()" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- strip -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- strip! -> self | nil" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- lstrip -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- lstrip! -> self | nil" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- rstrip -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- rstrip! -> self | nil" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- sub(pattern, replace) -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- sub(pattern) {|matched| .... } -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- sub(pattern, hash) -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- sub!(pattern, replace) -> self | nil" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- sub!(pattern) {|matched| .... } -> self | nil" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- sub!(pattern, hash) -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- sum(bits = 16) -> Integer" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- swapcase -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- swapcase! -> self | nil" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- to_f -> Float" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- to_i(base = 10) -> Integer" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- to_s -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- to_str -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- tr(pattern, replace) -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- tr!(pattern, replace) -> self | nil" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- tr_s(pattern, replace) -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- tr_s!(pattern, replace) -> self | nil" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- unpack(template) -> Array" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- upcase -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- upcase! -> self | nil" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- upto(max, exclusive = false) {|s| ... } -> self" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- upto(max) {|s| ... } -> self" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- eql?(other) -> bool" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- hash -> Integer" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- inspect -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- chr -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- start_with?(str) -> bool" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- end_with?(str) -> bool" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- partition(sep) -> [String, String, String]" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- rpartition(sep) -> [String, String, String]" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- each_char {|cstr| block } -> self" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- chars {|cstr| block }     -> self" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- each_char -> Enumerator" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- chars     -> Enumerator" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- each_char -> Enumerable::Enumerator" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- chars     -> Enumerable::Enumerator" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- each_codepoint {|codepoint| block } -> self" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- codepoints {|codepoint| block }     -> self" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- each_codepoint -> Enumerator" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- codepoints     -> Enumerator" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- bytesize -> Integer" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- ord -> Integer" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- encoding   -> Encoding" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- force_encoding(encoding)   -> self" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- ascii_only?  -> bool" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- valid_encoding?  -> bool" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- encode(encoding, options = nil) -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- encode(encoding, from_encoding, options = nil) -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- encode(options = nil) -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- encode!(encoding, options = nil)                -> self" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- encode!(encoding, from_encoding, options = nil) -> self" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- to_c -> Complex" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- to_r -> Rational" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- byteslice(nth)         -> String | nil" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- byteslice(nth, len) -> String | nil" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- byteslice(range)          -> String | nil" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "--- prepend(other_str) -> String" "=== rangeオブジェクトが終端を含まない場合" "== Instance Methods" "= class String < Object" "refm/api/src/_builtin/String")
(find-rurima "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "== Class Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- induced_from(num) -> Float" "== Class Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- +(other) -> Float" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- -(other) -> Float" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- *(other) -> Float" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- /(other) -> Float" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- %(other) -> Float" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- modulo(other) -> Float" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- **(other) -> Float" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- <=>(other) -> nil | 1 | 0 | -1" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- ==(other) -> bool" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- <(other)  -> bool" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- <=(other) -> bool" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- >(other)  -> bool" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- >=(other) -> bool" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- finite? -> bool" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- infinite? -> 1 | -1 | nil" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- nan? -> bool" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- to_f -> self" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- to_i -> Integer" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- truncate -> Integer" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- hash -> Fixnum" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- abs    -> Float" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- ceil   -> Integer" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- divmod(other) -> [Numeric]" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- floor  -> Integer" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- eql?(other)   -> bool" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- round(ndigits = 0)  -> Fixnum | Float" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- round  -> Fixnum" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- zero?  -> bool" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- to_s -> String" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- arg   -> 0 | Float" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- angle -> 0 | Float" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- phase -> 0 | Float" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- denominator -> Integer" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- numerator -> Integer" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- to_r -> Rational" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- rationalize      -> Rational" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- rationalize(eps) -> Rational" "== Instance Methods" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "== Constants" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- DIG -> Fixnum" "== Constants" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- EPSILON -> Float" "== Constants" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- MANT_DIG -> Fixnum" "== Constants" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- MAX -> Float" "== Constants" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- MIN -> Float" "== Constants" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- MAX_10_EXP -> Fixnum" "== Constants" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- MIN_10_EXP -> Fixnum" "== Constants" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- MAX_EXP -> Fixnum" "== Constants" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- MIN_EXP -> Fixnum" "== Constants" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- RADIX -> Fixnum" "== Constants" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- ROUNDS -> Fixnum" "== Constants" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- INFINITY -> Float" "== Constants" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "--- NAN -> Float" "== Constants" "= class Float < Numeric" "refm/api/src/_builtin/Float")
(find-rurima "= module Process::Sys" "refm/api/src/_builtin/Process__Sys")
(find-rurima "== Module Functions" "= module Process::Sys" "refm/api/src/_builtin/Process__Sys")
(find-rurima "--- getuid    -> Integer" "== Module Functions" "= module Process::Sys" "refm/api/src/_builtin/Process__Sys")
(find-rurima "--- geteuid    -> Integer" "== Module Functions" "= module Process::Sys" "refm/api/src/_builtin/Process__Sys")
(find-rurima "--- getgid    -> Integer" "== Module Functions" "= module Process::Sys" "refm/api/src/_builtin/Process__Sys")
(find-rurima "--- getegid    -> Integer" "== Module Functions" "= module Process::Sys" "refm/api/src/_builtin/Process__Sys")
(find-rurima "--- setuid(id)    -> nil" "== Module Functions" "= module Process::Sys" "refm/api/src/_builtin/Process__Sys")
(find-rurima "--- setgid(id)    -> nil" "== Module Functions" "= module Process::Sys" "refm/api/src/_builtin/Process__Sys")
(find-rurima "--- setruid(id)    -> nil" "== Module Functions" "= module Process::Sys" "refm/api/src/_builtin/Process__Sys")
(find-rurima "--- setrgid(id)    -> nil" "== Module Functions" "= module Process::Sys" "refm/api/src/_builtin/Process__Sys")
(find-rurima "--- seteuid(id)    -> nil" "== Module Functions" "= module Process::Sys" "refm/api/src/_builtin/Process__Sys")
(find-rurima "--- setegid(id)    -> nil" "== Module Functions" "= module Process::Sys" "refm/api/src/_builtin/Process__Sys")
(find-rurima "--- setreuid(rid, eid)    -> nil" "== Module Functions" "= module Process::Sys" "refm/api/src/_builtin/Process__Sys")
(find-rurima "--- setregid(rid, eid)    -> nil" "== Module Functions" "= module Process::Sys" "refm/api/src/_builtin/Process__Sys")
(find-rurima "--- setresuid(rid, eid, sid)    -> nil" "== Module Functions" "= module Process::Sys" "refm/api/src/_builtin/Process__Sys")
(find-rurima "--- setresgid(rid, eid, sid)    -> nil" "== Module Functions" "= module Process::Sys" "refm/api/src/_builtin/Process__Sys")
(find-rurima "--- issetugid    -> bool" "== Module Functions" "= module Process::Sys" "refm/api/src/_builtin/Process__Sys")
(find-rurima "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "+@, -@ は単項演算子 +, - を表しメソッド定義などではこの記法を利用します。" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "=== 数値関連のメソッドを実際に定義しているクラス一覧" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "=== 丸めメソッドの動作一覧" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "=== 丸めメソッドの拡張例" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- +@    -> self" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- -@    -> Numeric" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- ==(other)    -> bool" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- abs    -> Numeric" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- ceil   -> Integer" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- floor   -> Integer" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- round   -> Integer" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- truncate   -> Integer" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- clone" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- dup" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- coerce(other)    -> [Numeric]" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "+ 演算子を呼んでいます。" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- div(other)    -> Integer" "+ 演算子を呼んでいます。" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- quo(other)    -> Float" "+ 演算子を呼んでいます。" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- fdiv(other)   -> Float" "+ 演算子を呼んでいます。" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- divmod(other)    -> [Numeric]" "+ 演算子を呼んでいます。" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- integer?    -> bool" "+ 演算子を呼んでいます。" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- modulo(other)    -> Numeric" "+ 演算子を呼んでいます。" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- remainder(other)    -> Numeric" "+ 演算子を呼んでいます。" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- nonzero?    -> self | nil" "+ 演算子を呼んでいます。" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- to_int    -> Integer" "+ 演算子を呼んでいます。" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- zero?    -> bool" "+ 演算子を呼んでいます。" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- step(limit, step = 1) {|n| ... }    -> self" "+ 演算子を呼んでいます。" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- step(limit, step = 1) -> Enumerator" "+ 演算子を呼んでいます。" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- step(limit, step = 1) -> Enumerable::Enumerator" "+ 演算子を呼んでいます。" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- <=>(other) -> -1 | 0 | 1 | nil" "+ 演算子を呼んでいます。" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- eql?(other) -> bool" "+ 演算子を呼んでいます。" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- abs2 -> Numeric" "+ 演算子を呼んでいます。" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- arg   -> 0 | Math::PI" "+ 演算子を呼んでいます。" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- angle -> 0 | Math::PI" "+ 演算子を呼んでいます。" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- phase -> 0 | Math::PI" "+ 演算子を呼んでいます。" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- conj      -> Numeric" "+ 演算子を呼んでいます。" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- conjugate -> Numeric" "+ 演算子を呼んでいます。" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- denominator -> Integer" "+ 演算子を呼んでいます。" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- imag      -> 0" "+ 演算子を呼んでいます。" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- imaginary -> 0" "+ 演算子を呼んでいます。" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- numerator -> Integer" "+ 演算子を呼んでいます。" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- polar -> [Numeric, Numeric]" "+ 演算子を呼んでいます。" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- real     -> Numeric" "+ 演算子を呼んでいます。" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- real?    -> bool" "+ 演算子を呼んでいます。" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- rect        -> [Numeric, Numeric]" "+ 演算子を呼んでいます。" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- rectangular -> [Numeric, Numeric]" "+ 演算子を呼んでいます。" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- to_c -> Complex" "+ 演算子を呼んでいます。" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "--- i    -> Complex" "+ 演算子を呼んでいます。" "== Instance Methods" "= class Numeric < Object" "refm/api/src/_builtin/Numeric")
(find-rurima "= module Process::Status" "refm/api/src/_builtin/Process__Status")
(find-rurima "=== 使用例" "= module Process::Status" "refm/api/src/_builtin/Process__Status")
(find-rurima "== Instance Methods" "= module Process::Status" "refm/api/src/_builtin/Process__Status")
(find-rurima "--- ==(other)    -> bool" "== Instance Methods" "= module Process::Status" "refm/api/src/_builtin/Process__Status")
(find-rurima "--- &(other)    -> Integer" "== Instance Methods" "= module Process::Status" "refm/api/src/_builtin/Process__Status")
(find-rurima "--- pid    -> Integer" "== Instance Methods" "= module Process::Status" "refm/api/src/_builtin/Process__Status")
(find-rurima "--- to_i    -> Integer" "== Instance Methods" "= module Process::Status" "refm/api/src/_builtin/Process__Status")
(find-rurima "--- to_int    -> Integer" "== Instance Methods" "= module Process::Status" "refm/api/src/_builtin/Process__Status")
(find-rurima "--- to_s    -> String" "== Instance Methods" "= module Process::Status" "refm/api/src/_builtin/Process__Status")
(find-rurima "--- exited?    -> bool" "== Instance Methods" "= module Process::Status" "refm/api/src/_builtin/Process__Status")
(find-rurima "--- exitstatus    -> nil | Integer" "== Instance Methods" "= module Process::Status" "refm/api/src/_builtin/Process__Status")
(find-rurima "--- inspect    -> String" "== Instance Methods" "= module Process::Status" "refm/api/src/_builtin/Process__Status")
(find-rurima "--- stopped?    -> bool" "== Instance Methods" "= module Process::Status" "refm/api/src/_builtin/Process__Status")
(find-rurima "--- stopsig    -> nil | Integer" "== Instance Methods" "= module Process::Status" "refm/api/src/_builtin/Process__Status")
(find-rurima "--- signaled?    -> bool" "== Instance Methods" "= module Process::Status" "refm/api/src/_builtin/Process__Status")
(find-rurima "--- termsig    -> nil | Integer" "== Instance Methods" "= module Process::Status" "refm/api/src/_builtin/Process__Status")
(find-rurima "--- coredump?    -> bool" "== Instance Methods" "= module Process::Status" "refm/api/src/_builtin/Process__Status")
(find-rurima "--- >>(num)    -> Integer" "== Instance Methods" "= module Process::Status" "refm/api/src/_builtin/Process__Status")
(find-rurima "--- success?    -> bool" "== Instance Methods" "= module Process::Status" "refm/api/src/_builtin/Process__Status")
(find-rurima "= module File::Constants" "refm/api/src/_builtin/File__Constants")
(find-rurima "== Constants" "= module File::Constants" "refm/api/src/_builtin/File__Constants")
(find-rurima "--- LOCK_SH -> Integer" "== Constants" "= module File::Constants" "refm/api/src/_builtin/File__Constants")
(find-rurima "--- LOCK_EX -> Integer" "== Constants" "= module File::Constants" "refm/api/src/_builtin/File__Constants")
(find-rurima "--- LOCK_UN -> Integer" "== Constants" "= module File::Constants" "refm/api/src/_builtin/File__Constants")
(find-rurima "--- LOCK_NB -> Integer" "== Constants" "= module File::Constants" "refm/api/src/_builtin/File__Constants")
(find-rurima "--- RDONLY -> Integer" "== Constants" "= module File::Constants" "refm/api/src/_builtin/File__Constants")
(find-rurima "--- WRONLY -> Integer" "== Constants" "= module File::Constants" "refm/api/src/_builtin/File__Constants")
(find-rurima "--- RDWR -> Integer" "== Constants" "= module File::Constants" "refm/api/src/_builtin/File__Constants")
(find-rurima "--- APPEND -> Integer" "== Constants" "= module File::Constants" "refm/api/src/_builtin/File__Constants")
(find-rurima "--- CREAT -> Integer" "== Constants" "= module File::Constants" "refm/api/src/_builtin/File__Constants")
(find-rurima "--- EXCL -> Integer" "== Constants" "= module File::Constants" "refm/api/src/_builtin/File__Constants")
(find-rurima "--- NONBLOCK -> Integer" "== Constants" "= module File::Constants" "refm/api/src/_builtin/File__Constants")
(find-rurima "--- TRUNC -> Integer" "== Constants" "= module File::Constants" "refm/api/src/_builtin/File__Constants")
(find-rurima "--- NOCTTY -> Integer" "== Constants" "= module File::Constants" "refm/api/src/_builtin/File__Constants")
(find-rurima "--- BINARY -> Integer" "== Constants" "= module File::Constants" "refm/api/src/_builtin/File__Constants")
(find-rurima "--- SYNC -> Integer" "== Constants" "= module File::Constants" "refm/api/src/_builtin/File__Constants")
(find-rurima "--- DSYNC -> Integer" "== Constants" "= module File::Constants" "refm/api/src/_builtin/File__Constants")
(find-rurima "--- NOFOLLOW -> Integer" "== Constants" "= module File::Constants" "refm/api/src/_builtin/File__Constants")
(find-rurima "--- RSYNC -> Integer" "== Constants" "= module File::Constants" "refm/api/src/_builtin/File__Constants")
(find-rurima "--- NOATIME -> Integer" "== Constants" "= module File::Constants" "refm/api/src/_builtin/File__Constants")
(find-rurima "--- DIRECT -> Integer" "== Constants" "= module File::Constants" "refm/api/src/_builtin/File__Constants")
(find-rurima "--- FNM_NOESCAPE -> Integer" "== Constants" "= module File::Constants" "refm/api/src/_builtin/File__Constants")
(find-rurima "--- FNM_PATHNAME -> Integer" "== Constants" "= module File::Constants" "refm/api/src/_builtin/File__Constants")
(find-rurima "--- FNM_DOTMATCH -> Integer" "== Constants" "= module File::Constants" "refm/api/src/_builtin/File__Constants")
(find-rurima "--- FNM_PERIOD -> Integer" "== Constants" "= module File::Constants" "refm/api/src/_builtin/File__Constants")
(find-rurima "--- FNM_CASEFOLD -> Integer" "== Constants" "= module File::Constants" "refm/api/src/_builtin/File__Constants")
(find-rurima "--- FNM_SYSCASE -> Integer" "== Constants" "= module File::Constants" "refm/api/src/_builtin/File__Constants")
(find-rurima "--- NULL -> String" "== Constants" "= module File::Constants" "refm/api/src/_builtin/File__Constants")
(find-rurima "= class IOError < StandardError" "refm/api/src/_builtin/IOError")
(find-rurima "= class Range < Object" "refm/api/src/_builtin/Range")
(find-rurima "=== 例" "= class Range < Object" "refm/api/src/_builtin/Range")
(find-rurima "=== 破壊的な変更" "= class Range < Object" "refm/api/src/_builtin/Range")
(find-rurima "== Class Methods" "= class Range < Object" "refm/api/src/_builtin/Range")
(find-rurima "--- new(first, last, exclude_end = false) -> Range" "== Class Methods" "= class Range < Object" "refm/api/src/_builtin/Range")
(find-rurima "== Instance Methods" "= class Range < Object" "refm/api/src/_builtin/Range")
(find-rurima "--- ===(obj) -> bool" "== Instance Methods" "= class Range < Object" "refm/api/src/_builtin/Range")
(find-rurima "--- include?(obj) -> bool" "== Instance Methods" "= class Range < Object" "refm/api/src/_builtin/Range")
(find-rurima "--- member?(obj) -> bool" "== Instance Methods" "= class Range < Object" "refm/api/src/_builtin/Range")
(find-rurima "--- cover?(obj) -> bool" "== Instance Methods" "= class Range < Object" "refm/api/src/_builtin/Range")
(find-rurima "--- cover?(obj) -> bool" "== Instance Methods" "= class Range < Object" "refm/api/src/_builtin/Range")
(find-rurima "--- begin -> object" "== Instance Methods" "= class Range < Object" "refm/api/src/_builtin/Range")
(find-rurima "--- first -> object" "== Instance Methods" "= class Range < Object" "refm/api/src/_builtin/Range")
(find-rurima "--- each {|item|  ... } -> self" "== Instance Methods" "= class Range < Object" "refm/api/src/_builtin/Range")
(find-rurima "--- each -> Enumerator" "== Instance Methods" "= class Range < Object" "refm/api/src/_builtin/Range")
(find-rurima "--- each -> Enumerable::Enumerator" "== Instance Methods" "= class Range < Object" "refm/api/src/_builtin/Range")
(find-rurima "--- end -> object" "== Instance Methods" "= class Range < Object" "refm/api/src/_builtin/Range")
(find-rurima "--- last -> object" "== Instance Methods" "= class Range < Object" "refm/api/src/_builtin/Range")
(find-rurima "--- exclude_end? -> bool" "== Instance Methods" "= class Range < Object" "refm/api/src/_builtin/Range")
(find-rurima "--- step(s = 1) {|item| ... } -> self" "== Instance Methods" "= class Range < Object" "refm/api/src/_builtin/Range")
(find-rurima "--- step(s = 1) -> Enumerator" "== Instance Methods" "= class Range < Object" "refm/api/src/_builtin/Range")
(find-rurima "--- step(s = 1) -> Enumerable::Enumerator" "== Instance Methods" "= class Range < Object" "refm/api/src/_builtin/Range")
(find-rurima "--- ==(other)     -> bool" "== Instance Methods" "= class Range < Object" "refm/api/src/_builtin/Range")
(find-rurima "--- eql?(other)   -> bool" "== Instance Methods" "= class Range < Object" "refm/api/src/_builtin/Range")
(find-rurima "--- equal?(other)    -> bool" "== Instance Methods" "= class Range < Object" "refm/api/src/_builtin/Range")
(find-rurima "--- hash    -> Integer" "== Instance Methods" "= class Range < Object" "refm/api/src/_builtin/Range")
(find-rurima "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "== Class Methods" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- aliases    -> Hash" "== Class Methods" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- compatible?(obj1, obj2) -> Encoding | nil" "== Class Methods" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- find(name) -> Encoding" "== Class Methods" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- list -> [Encoding]" "== Class Methods" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- name_list    -> [String]" "== Class Methods" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- default_external -> Encoding" "== Class Methods" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- default_external=(encoding)" "== Class Methods" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- default_internal -> Encoding | nil" "== Class Methods" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- default_internal=(encoding)" "== Class Methods" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- locale_charmap -> String | nil" "== Class Methods" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "== Instance Methods" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- inspect -> String" "== Instance Methods" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- name -> String" "== Instance Methods" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- to_s -> String" "== Instance Methods" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- names -> String" "== Instance Methods" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- dummy? -> bool" "== Instance Methods" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ascii_compatible? -> bool" "== Instance Methods" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- replicate(name) -> Encoding" "== Instance Methods" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ASCII_8BIT -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- BINARY -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- EUC_JP -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- EucJP -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- EUCJP -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO_2022_JP -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO2022_JP -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- Shift_JIS -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- SHIFT_JIS -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- SJIS -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- US_ASCII -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ASCII -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ANSI_X3_4_1968 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- UTF_16" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- UTF_32" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- UTF_16BE -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- UCS_2BE -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- UTF_16LE -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- UTF_32BE -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- UCS_4BE -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- UTF_32LE -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- UCS_4LE -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- UTF_8 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP65001 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- UTF8_MAC -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- UTF_8_MAC -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- UTF_8_HFS -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- UTF_7 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP65000 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- Big5 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- BIG5 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP950 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- Big5_HKSCS -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- BIG5_HKSCS -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- BIG5_HKSCS_2008 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- Big5_HKSCS_2008 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP951 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- BIG5_UAO -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- Big5_UAO -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP51932 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP50220 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP50221 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- EUC_CN -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- EUCCN -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- EucCN -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- EUC_KR -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- EUCKR -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- EucKR -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- EUC_TW -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- EUCTW -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- EucTW -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- GB18030 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- GB1988 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- GBK -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP936 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- GB12345 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- IBM437 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP437 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- IBM737 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP737 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- IBM775 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP775 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP850 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- IBM850 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- IBM852 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP852 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- IBM855 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP855 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- IBM857 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP857 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- IBM860 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP860 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- IBM861 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP861 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- IBM862 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP862 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- IBM863 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP863 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- IBM864 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP864 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- IBM865 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP865 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- IBM866 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP866 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- IBM869 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP869 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP949 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO_2022_JP_2 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO2022_JP2 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO_8859_1 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO8859_1 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO_8859_2 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO8859_2 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO_8859_3 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO8859_3 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO_8859_4 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO8859_4 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO_8859_5 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO8859_5 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO_8859_6 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO8859_6 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO_8859_7 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO8859_7 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO_8859_8 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO8859_8 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO_8859_9 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO8859_9 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO_8859_10 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO8859_10 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO_8859_11 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO8859_11 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO_8859_13 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO8859_13 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO_8859_14 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO8859_14 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO_8859_15 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO8859_15 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO_8859_16 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO8859_16 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- KOI8_R -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP878 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- KOI8_U -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- MacJapanese -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- MACJAPAN -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- MACJAPANESE -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- MacJapan -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- SJIS_DOCOMO -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- SJIS_DoCoMo -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- SJIS_KDDI -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- SJIS_SOFTBANK -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- SJIS_SoftBank -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- UTF8_DOCOMO -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- UTF8_DoCoMo -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- UTF8_KDDI -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- UTF8_SOFTBANK -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- UTF8_SoftBank -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- STATELESS_ISO_2022_JP -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- Stateless_ISO_2022_JP -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- ISO_2022_JP_KDDI -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- STATELESS_ISO_2022_JP_KDDI -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- Stateless_ISO_2022_JP_KDDI -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- TIS_620 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- Windows_1250 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP1250 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- WINDOWS_1250 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- Windows_1251 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP1251 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- WINDOWS_1251 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- Windows_1252 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP1252 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- WINDOWS_1252 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- Windows_1253 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP1253 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- WINDOWS_1253 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- Windows_1254 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP1254 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- WINDOWS_1254 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- Windows_1255 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP1255 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- WINDOWS_1255 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- Windows_1256 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP1256 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- WINDOWS_1256 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- Windows_1257 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP1257 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- WINDOWS_1257 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- Windows_1258 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP1258 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- WINDOWS_1258 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- Windows_31J -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP932 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CSWINDOWS31J -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CsWindows31J -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- WINDOWS_31J -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- PCK -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- Windows_874 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- CP874 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- WINDOWS_874 -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- EUCJP_MS -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- EucJP_ms -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- EUC_JP_MS -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- MacCentEuro -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- MACCENTEURO -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- MacCroatian -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- MACCROATIAN -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- MacCyrillic -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- MACCYRILLIC -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- MacGreek -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- MACGREEK -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- MacIceland -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- MACICELAND -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- MacRoman -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- MACROMAN -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- MacRomania -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- MACROMANIA -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- MacThai -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- MACTHAI -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- MacTurkish -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- MACTURKISH -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- MacUkraine -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- MACUKRAINE -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- EMACS_MULE -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "--- Emacs_Mule -> Encoding" "== Constants" "=class Encoding" "refm/api/src/_builtin/Encoding")
(find-rurima "= class EncodingError < StandardError" "refm/api/src/_builtin/Encoding")
(find-rurima "= class Encoding::CompatibilityError < EncodingError" "refm/api/src/_builtin/Encoding")
(find-rurima "= class Encoding::UndefinedConversionError < EncodingError" "refm/api/src/_builtin/Encoding")
(find-rurima "== Instance Methods" "= class Encoding::UndefinedConversionError < EncodingError" "refm/api/src/_builtin/Encoding")
(find-rurima "--- destination_encoding -> Encoding" "== Instance Methods" "= class Encoding::UndefinedConversionError < EncodingError" "refm/api/src/_builtin/Encoding")
(find-rurima "--- destination_encoding_name -> String" "== Instance Methods" "= class Encoding::UndefinedConversionError < EncodingError" "refm/api/src/_builtin/Encoding")
(find-rurima "--- error_char -> String" "== Instance Methods" "= class Encoding::UndefinedConversionError < EncodingError" "refm/api/src/_builtin/Encoding")
(find-rurima "--- source_encoding -> Encoding" "== Instance Methods" "= class Encoding::UndefinedConversionError < EncodingError" "refm/api/src/_builtin/Encoding")
(find-rurima "--- source_encoding_name -> Encoding" "== Instance Methods" "= class Encoding::UndefinedConversionError < EncodingError" "refm/api/src/_builtin/Encoding")
(find-rurima "= class Encoding::InvalidByteSequenceError < EncodingError" "refm/api/src/_builtin/Encoding")
(find-rurima "== Instance Methods" "= class Encoding::InvalidByteSequenceError < EncodingError" "refm/api/src/_builtin/Encoding")
(find-rurima "--- destination_encoding -> Encoding" "== Instance Methods" "= class Encoding::InvalidByteSequenceError < EncodingError" "refm/api/src/_builtin/Encoding")
(find-rurima "--- destination_encoding_name -> String" "== Instance Methods" "= class Encoding::InvalidByteSequenceError < EncodingError" "refm/api/src/_builtin/Encoding")
(find-rurima "--- source_encoding -> Encoding" "== Instance Methods" "= class Encoding::InvalidByteSequenceError < EncodingError" "refm/api/src/_builtin/Encoding")
(find-rurima "--- source_encoding_name -> Encoding" "== Instance Methods" "= class Encoding::InvalidByteSequenceError < EncodingError" "refm/api/src/_builtin/Encoding")
(find-rurima "--- error_bytes -> String" "== Instance Methods" "= class Encoding::InvalidByteSequenceError < EncodingError" "refm/api/src/_builtin/Encoding")
(find-rurima "--- readagain_bytes -> String" "== Instance Methods" "= class Encoding::InvalidByteSequenceError < EncodingError" "refm/api/src/_builtin/Encoding")
(find-rurima "--- incomplete_input? -> bool" "== Instance Methods" "= class Encoding::InvalidByteSequenceError < EncodingError" "refm/api/src/_builtin/Encoding")
(find-rurima "= class Encoding::ConverterNotFoundError < EncodingError" "refm/api/src/_builtin/Encoding")
(find-rurima "= class Enumerator < Object" "refm/api/src/_builtin/Enumerator")
(find-rurima "= class BasicObject" "refm/api/src/_builtin/BasicObject")
(find-rurima "==== 性質" "= class BasicObject" "refm/api/src/_builtin/BasicObject")
(find-rurima "==== 用途" "= class BasicObject" "refm/api/src/_builtin/BasicObject")
(find-rurima "==== 注意" "= class BasicObject" "refm/api/src/_builtin/BasicObject")
(find-rurima "==== 例" "= class BasicObject" "refm/api/src/_builtin/BasicObject")
(find-rurima "== Instance Methods" "= class BasicObject" "refm/api/src/_builtin/BasicObject")
(find-rurima "--- ==(other) -> bool" "== Instance Methods" "= class BasicObject" "refm/api/src/_builtin/BasicObject")
(find-rurima "--- equal?(other) -> bool" "== Instance Methods" "= class BasicObject" "refm/api/src/_builtin/BasicObject")
(find-rurima "--- ! -> bool" "== Instance Methods" "= class BasicObject" "refm/api/src/_builtin/BasicObject")
(find-rurima "--- !=(other) -> bool" "== Instance Methods" "= class BasicObject" "refm/api/src/_builtin/BasicObject")
(find-rurima "--- __send__(name, *args) -> object" "== Instance Methods" "= class BasicObject" "refm/api/src/_builtin/BasicObject")
(find-rurima "--- __send__(name, *args) { .... } -> object" "== Instance Methods" "= class BasicObject" "refm/api/src/_builtin/BasicObject")
(find-rurima "--- __id__ -> Integer" "== Instance Methods" "= class BasicObject" "refm/api/src/_builtin/BasicObject")
(find-rurima "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "== Class Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- try_convert(obj) -> Hash | nil" "== Class Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- [](other) -> Hash" "== Class Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- [](*key_and_value)  -> Hash" "== Class Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- new(ifnone = nil) -> Hash" "== Class Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- new {|hash, key| ... } -> Hash" "== Class Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- values -> [object]" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- to_a -> [Array]" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- keys -> [object]" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- to_hash -> self" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- length -> Integer" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- size -> Integer" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- empty? -> bool" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- invert -> Hash" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- fetch(key, default = nil) {|key| ... } -> object" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- has_key?(key) -> bool" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- include?(key) -> bool" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- key?(key)     -> bool" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- member?(key)  -> bool" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- has_value?(value) -> bool" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- value?(value)     -> bool" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- []=(key, value)" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- store(key, value) -> object" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- clear -> self" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- compare_by_identity -> self" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- compare_by_identity? -> bool" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- shift -> [object, object]" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- replace(other) -> self" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- [](key) -> object | nil" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- default -> object | nil" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- default(key) -> object | nil" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- default=(value)" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- default_proc -> Proc | nil" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- default_proc=(pr)" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- clone -> Hash" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- dup -> Hash" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- delete(key) -> object | nil" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- delete(key) {|key| ... } -> object" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- reject {|key, value| ... } -> Hash" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- reject                     -> Enumerable::Enumerator" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- delete_if -> Enumerator" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- reject!   -> Enumerator" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- delete_if -> Enumerable::Enumerator" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- reject!   -> Enumerable::Enumerator" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- delete_if {|key, value| ... } -> self" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- reject! {|key, value| ... } -> self|nil" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- each {|key, value| ... } -> self" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- each_pair {|key, value| ... } -> self" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- each      -> Enumerator" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- each_pair -> Enumerator" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- each      -> Enumerable::Enumerator" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- each_pair -> Enumerable::Enumerator" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- each_key {|key| ... } -> self" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- each_key -> Enumerator" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- each_key -> Enumerable::Enumerator" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- each_value {|value| ... } -> self" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- each_value -> Enumerator" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- each_value -> Enumerable::Enumerator" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- index(val) -> object" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- key(val) -> object" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- index(val) -> object" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- values_at(*keys) -> [object]" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- indexes(*keys) -> [object]" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- indices(*keys) -> [object]" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- rehash -> self" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- merge(other) -> Hash" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- merge(other) {|key, self_val, other_val| ... } -> Hash" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- merge!(other) -> self" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- merge!(other) {|key, self_val, other_val| ... } -> self" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- update(other) -> self" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- update(other) {|key, self_val, other_val| ... } -> self" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- update(other) -> self" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- ==(other) -> bool" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- ===(other) -> bool" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- eql?(other) -> bool" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- eql?(other) -> bool" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- equal?(other) -> bool" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- hash    -> Integer" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- assoc(key)   ->  Array | nil" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- flatten(level = 1) -> Array" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- rassoc(value) -> Array | nil" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- select                        -> Enumerator" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- select                        -> Enumerable::Enumerator" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- select {|key, value| ... }   -> Hash" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- select {|key, value| ... }   -> Array" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- to_s     -> String" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- inspect  -> String" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- to_s     -> String" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- sort              -> Array" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- sort{|a, b| ... } -> Array" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- keep_if {|key, value| ... } -> self" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- select! {|key, value| ... } -> self | nil" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- keep_if -> Enumerator" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "--- select! -> Enumerator" "==== 参考" "== Instance Methods" "= class Hash < Object" "refm/api/src/_builtin/Hash")
(find-rurima "= class UnboundMethod < Object" "refm/api/src/_builtin/UnboundMethod")
(find-rurima "= class UnboundMethod < Method" "refm/api/src/_builtin/UnboundMethod")
(find-rurima "== Instance Methods" "= class UnboundMethod < Method" "refm/api/src/_builtin/UnboundMethod")
(find-rurima "--- [](*args)            " "== Instance Methods" "= class UnboundMethod < Method" "refm/api/src/_builtin/UnboundMethod")
(find-rurima "--- call(*args)          " "== Instance Methods" "= class UnboundMethod < Method" "refm/api/src/_builtin/UnboundMethod")
(find-rurima "--- call(*args) { ... }  " "== Instance Methods" "= class UnboundMethod < Method" "refm/api/src/_builtin/UnboundMethod")
(find-rurima "--- bind(obj)    -> Method" "== Instance Methods" "= class UnboundMethod < Method" "refm/api/src/_builtin/UnboundMethod")
(find-rurima "--- to_proc    -> Proc" "== Instance Methods" "= class UnboundMethod < Method" "refm/api/src/_builtin/UnboundMethod")
(find-rurima "--- unbind    -> self" "== Instance Methods" "= class UnboundMethod < Method" "refm/api/src/_builtin/UnboundMethod")
(find-rurima "--- arity    -> Integer" "== Instance Methods" "= class UnboundMethod < Method" "refm/api/src/_builtin/UnboundMethod")
(find-rurima "--- ==(other)     -> bool" "== Instance Methods" "= class UnboundMethod < Method" "refm/api/src/_builtin/UnboundMethod")
(find-rurima "--- ===(other)    -> bool" "== Instance Methods" "= class UnboundMethod < Method" "refm/api/src/_builtin/UnboundMethod")
(find-rurima "--- eql?(other)     -> bool" "== Instance Methods" "= class UnboundMethod < Method" "refm/api/src/_builtin/UnboundMethod")
(find-rurima "--- equal?(other)   -> bool" "== Instance Methods" "= class UnboundMethod < Method" "refm/api/src/_builtin/UnboundMethod")
(find-rurima "--- hash    -> Integer" "== Instance Methods" "= class UnboundMethod < Method" "refm/api/src/_builtin/UnboundMethod")
(find-rurima "--- name    -> String" "== Instance Methods" "= class UnboundMethod < Method" "refm/api/src/_builtin/UnboundMethod")
(find-rurima "--- name    -> Symbol" "== Instance Methods" "= class UnboundMethod < Method" "refm/api/src/_builtin/UnboundMethod")
(find-rurima "--- owner    -> Class | Module" "== Instance Methods" "= class UnboundMethod < Method" "refm/api/src/_builtin/UnboundMethod")
(find-rurima "= class IndexError < StandardError" "refm/api/src/_builtin/IndexError")
(find-rurima "= class RuntimeError < StandardError" "refm/api/src/_builtin/RuntimeError")
(find-rurima "= class SecurityError < Exception" "refm/api/src/_builtin/SecurityError")
(find-rurima "= class SecurityError < StandardError" "refm/api/src/_builtin/SecurityError")
(find-rurima "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "=== シンボルの実装と用途" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "==== 実装" "=== シンボルの実装と用途" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "==== 用途" "=== シンボルの実装と用途" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "== Class Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- all_symbols -> [Symbol]" "== Class Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- intern -> self" "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- to_sym -> self" "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- id2name -> String" "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- to_s -> String" "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- to_i -> Integer" "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- to_int -> Integer" "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- to_proc -> Proc" "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- ==(other)        -> true | false" "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- succ -> Symbol" "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- next -> Symbol" "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- <=>(other) -> -1 | 0 | 1" "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- casecmp(other) -> -1 | 0 | 1" "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- =~(other) -> Integer | nil" "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- match(other) -> Integer | nil" "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- [](nth) -> String | nil" "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- slice(nth) -> String | nil" "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- [](nth, len) -> String | nil" "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- slice(nth, len) -> String | nil" "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- [](substr) -> String | nil" "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- slice(substr) -> String | nil" "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- [](regexp, nth = 0) -> String | nil" "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- slice(regexp, nth = 0) -> String | nil" "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- [](range) -> String | nil" "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- slice(range) -> String | nil" "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- length -> Integer" "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- size -> Integer" "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- empty? -> bool" "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- upcase -> Symbol" "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- downcase -> Symbol" "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- capitalize -> Symbol" "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- swapcase -> Symbol" "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- encoding   -> Encoding" "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "--- inspect    -> String" "== Instance Methods" "= class Symbol < Object" "refm/api/src/_builtin/Symbol")
(find-rurima "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "===[a:m17n] 多言語化と IO のエンコーディング" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "==== エンコーディングの影響を受けるメソッドと受けないメソッド" "===[a:m17n] 多言語化と IO のエンコーディング" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "====[a:io_encoding] IO のエンコーディングとエンコーディングの変換" "===[a:m17n] 多言語化と IO のエンコーディング" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "===== まとめ" "====[a:io_encoding] IO のエンコーディングとエンコーディングの変換" "===[a:m17n] 多言語化と IO のエンコーディング" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "==== デフォルトの外部エンコーディングの指定" "===[a:m17n] 多言語化と IO のエンコーディング" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "==== ファイル名のエンコーディング" "===[a:m17n] 多言語化と IO のエンコーディング" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "==== binmode" "===[a:m17n] 多言語化と IO のエンコーディング" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "=== EOF での読み込みメソッドの振る舞いの違い" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- copy_stream(src, dst, copy_length = nil)             -> Integer" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- copy_stream(src, dst, copy_length, src_offset) -> Integer" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- try_convert(obj) -> IO | nil" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- new(fd, mode = \"r\")                -> IO" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- for_fd(fd, mode = \"r\")             -> IO" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- open(fd, mode = \"r\")               -> IO" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- open(fd, mode = \"r\") {|io| ... }   -> object" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- new(fd, mode = \"r\", opt={})                -> IO" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- for_fd(fd, mode = \"r\", opt={})             -> IO" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- open(fd, mode = \"r\", opt={})               -> IO" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- open(fd, mode = \"r\" opt={}) {|io| ... }   -> object" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "=== オプション引数" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- foreach(path, rs = $/) {|line| ... }    -> nil" "=== オプション引数" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- foreach(path, rs = $/)                  -> Enumerator" "=== オプション引数" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- foreach(path, rs = $/)                  -> Enumerable::Enumerator" "=== オプション引数" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- pipe                    -> [IO]" "=== オプション引数" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- pipe(ext_enc)           -> [IO]" "=== オプション引数" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- pipe(enc_str, opts={})           -> [IO]" "=== オプション引数" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- pipe(ext_enc, int_enc, opts={})  -> [IO]" "=== オプション引数" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- pipe{|read_iom write_io| ... } -> object" "=== オプション引数" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- pipe(ext_enc){|read_iom write_io| ... } -> object" "=== オプション引数" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- pipe(enc_str, opt={}){|read_iom write_io| ... }           -> object" "=== オプション引数" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- pipe(ext_enc, int_enc, opt={}){|read_iom write_io| ... }  -> object" "=== オプション引数" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- popen(command, mode = \"r\")                -> IO" "=== オプション引数" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- popen(command, mode = \"r\") {|io| ... }    -> object" "=== オプション引数" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- popen(command, mode = \"r\", opt={})                -> IO" "=== オプション引数" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- popen(command, mode = \"r\", opt={}) {|io| ... }    -> object" "=== オプション引数" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- popen(\"-\", mode = \"r\")                -> IO" "=== オプション引数" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- popen(\"-\", mode = \"r\") {|io| ... }    -> object" "=== オプション引数" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- popen(\"-\", mode = \"r\", opt={})                -> IO" "=== オプション引数" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- popen(\"-\", mode = \"r\", opt={}) {|io| ... }    -> object" "=== オプション引数" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- read(path, opt = {})     -> String | nil" "=== オプション引数" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- read(path, length = nil, opt = {})     -> String | nil" "=== オプション引数" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- read(path, length = nil, offset = 0, opt = {})     -> String | nil" "=== オプション引数" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- read(path, length = nil, offset = 0)     -> String | nil" "=== オプション引数" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- binread(path, length = nil, offset = 0)     -> String | nil" "=== オプション引数" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- readlines(path, rs = $/)    -> [String]" "=== オプション引数" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- select(reads, writes = [], excepts = [], timeout = nil)    -> [[IO]] | nil" "=== オプション引数" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- sysopen(path, mode = \"r\", perm = 0666)     -> Integer" "=== オプション引数" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- write(path, string, offset=nil, opt={}) -> Integer" "=== オプション引数" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- binwrite(path, string, offset=nil) -> Integer" "=== オプション引数" "== Class Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- <<(object)    -> self" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- binmode    -> self" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- clone    -> IO" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- dup      -> IO" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- close    -> nil" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- close_read    -> nil" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- close_write    -> nil" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- closed?    -> bool" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- each(rs = $/) {|line| ... }         -> self" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- each(limit) {|line| ... }           -> self" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- each(rs, limit) {|line| ... }       -> self" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- each(rs = $/)                       -> Enumerable::Enumerator" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- each(rs = $/)                       -> Enumerator" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- each(limit)                         -> Enumerator" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- each(rs, limit)                     -> Enumerator" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- each_line(rs = $/) {|line| ... }    -> self" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- each_line(limit) {|line| ... }      -> self" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- each_line(rs, limit) {|line| ... }  -> self" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- each_line(rs = $/)                  -> Enumerable::Enumerator" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- each_line(rs = $/)                  -> Enumerator" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- each_line(limit)                    -> Enumerator" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- each_line(rs, limit)                -> Enumerator" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- lines(rs = $/) {|line| ... }        -> self" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- lines(limit) {|line| ... }          -> self" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- lines(rs, limit) {|line| ... }      -> self" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- lines(rs = $/)                      -> Enumerator" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- lines(limit)                        -> Enumerator" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- lines(rs, limit)                    -> Enumerator" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- each_byte {|ch| ... }    -> self" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- each_byte                -> Enumerator" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- each_byte                -> Enumerable::Enumerator" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- eof     -> bool" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- eof?    -> bool" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- fcntl(cmd, arg = 0)    -> Integer" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- fsync    -> 0 | nil" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- fileno    -> Integer" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- to_i      -> Integer" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- flush    -> self" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- getc    -> String | nil" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- getc    -> Integer | nil" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- gets(rs = $/, limit)    -> String | nil" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- gets(rs = $/)    -> String | nil" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- ioctl(cmd, arg = 0)    -> Integer" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- isatty    -> bool" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- tty?      -> bool" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- lineno    -> Integer" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- lineno=(number)" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- pid    -> Integer | nil" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- pos    -> Integer" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- tell   -> Integer" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- pos=(n)" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- print(*arg)    -> nil" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- printf(format, *arg)    -> nil" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- putc(ch)    -> object" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- puts(*obj)    -> nil" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- read(length = nil, outbuf = \"\")    -> String | nil" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- read(length = nil)            -> String | nil" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- readchar    -> String" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- readchar    -> Integer" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- readline(rs = $/)    -> String" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- readlines(rs = $/)    -> [String]" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- readlines(limit)    -> [String]" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- readlines(rs = $/, limit)    -> [String]" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- read_nonblock(maxlen, outbuf = \"\")    -> String" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- readpartial(maxlen, outbuf = \"\")    -> String" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- reopen(io)                   -> self" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- reopen(path)                 -> self" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- reopen(path, mode)     -> self" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- rewind    -> 0" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- seek(offset, whence = IO::SEEK_SET)    -> 0" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- stat    -> File::Stat" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- sync    -> bool" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- sync=(newstate)" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- sysread(maxlen, outbuf = \"\")   -> String" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- sysread(maxlen)           -> String" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- sysseek(offset, whence = IO::SEEK_SET)    -> Integer" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- syswrite(string)    -> Integer    " "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- to_io    -> self" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- ungetc(char)     -> nil" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- write(str)     -> Integer" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- write_nonblock(string)    -> Integer" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- bytes    -> Enumerator" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- bytes    -> Enumerable::Enumerator" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- lines(rs = $/)    -> Enumerable::Enumerator" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- getbyte   -> Integer | nil" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- readbyte   -> Integer" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- each_char{|c| ... }     -> self" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- chars{|c| ... }         -> self" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- each_char               -> Enumerator" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- chars                   -> Enumerator" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- each_char               -> Enumerable::Enumerator" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- chars                   -> Enumerable::Enumerator" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- ungetbyte(c) -> nil" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- binmode? -> bool" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- close_on_exec=(bool)" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- close_on_exec?   -> bool" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- external_encoding   -> Encoding | nil" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- internal_encoding   -> Encoding | nil" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- set_encoding(enc_str, opt={})           -> self" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- set_encoding(ext_enc)           -> self" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- set_encoding(ext_enc, int_enc, opt={})  -> self" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- autoclose=(bool)" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- autoclose? -> bool" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- each_codepoint{|c| ... }     -> self" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- codepoints{|c| ... }         -> self" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- each_codepoint               -> Enumerator" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- codepoints                   -> Enumerator" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- fdatasync -> 0 | nil" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- advise(advice, offset=0, len=0) -> nil" "== Instance Methods" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "== Constants" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- SEEK_CUR -> Fixnum" "== Constants" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- SEEK_END -> Fixnum" "== Constants" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- SEEK_SET -> Fixnum" "== Constants" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- WaitReadable -> Module" "== Constants" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "--- WaitWritable -> Module" "== Constants" "= class IO < Object" "refm/api/src/_builtin/IO")
(find-rurima "= class RegexpError < StandardError" "refm/api/src/_builtin/RegexpError")
(find-rurima "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "=== 例" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "--- acos(x) -> Float" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "--- asin(x) -> Float" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "--- atan(x) -> Float" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "--- atan2(x, y) -> Float" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "--- acosh(x) -> Float" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "=== 定義" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "--- asinh(x) -> Float" "=== 定義" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "=== 定義" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "--- atanh(x) -> Float" "=== 定義" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "=== 定義" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "--- cos(x) -> Float" "=== 定義" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "--- sin(x) -> Float" "=== 定義" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "--- tan(x) -> Float" "=== 定義" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "--- cosh(x) -> Float" "=== 定義" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "=== 定義" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "--- sinh(x) -> Float" "=== 定義" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "=== 定義" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "--- tanh(x) -> Float" "=== 定義" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "=== 定義" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "--- erf(x) -> Float" "=== 定義" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "--- erfc(x) -> Float" "=== 定義" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "--- exp(x) -> Float" "=== 定義" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "--- frexp(x) -> [Float, Fixnum]" "=== 定義" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "--- hypot(x, y) -> Float" "=== 定義" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "--- ldexp(x, exp) -> Float" "=== 定義" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "--- log(x) -> Float" "=== 定義" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "--- log(x, b) -> Float" "=== 定義" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "--- log(x) -> Float" "=== 定義" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "--- log2(x) -> Float" "=== 定義" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "--- log10(x) -> Float" "=== 定義" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "--- sqrt(x) -> Float" "=== 定義" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "--- cbrt(x) -> Float" "=== 定義" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "--- gamma(x) -> Float" "=== 定義" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "--- lgamma(x) -> [Float, Integer]" "=== 定義" "== Module Functions" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "== Constants" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "--- E -> Float" "== Constants" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "--- PI -> Float" "== Constants" "= module Math" "refm/api/src/_builtin/Math")
(find-rurima "= class Math::DomainError < StandardError" "refm/api/src/_builtin/Math")
(find-rurima "= class SignalException < Exception" "refm/api/src/_builtin/SignalException")
(find-rurima "= class ArgumentError < StandardError" "refm/api/src/_builtin/ArgumentError")
(find-rurima "= class FloatDomainError < RangeError" "refm/api/src/_builtin/FloatDomainError")
(find-rurima "= module Signal" "refm/api/src/_builtin/Signal")
(find-rurima "== Module Functions" "= module Signal" "refm/api/src/_builtin/Signal")
(find-rurima "--- list    -> Hash" "== Module Functions" "= module Signal" "refm/api/src/_builtin/Signal")
(find-rurima "--- trap(signal, command)    -> String | Proc | nil" "== Module Functions" "= module Signal" "refm/api/src/_builtin/Signal")
(find-rurima "--- trap(signal) { ... }     -> String | Proc | nil" "== Module Functions" "= module Signal" "refm/api/src/_builtin/Signal")
(find-rurima "=== 使い方" "refm/api/src/prettyprint.rd")
(find-rurima "=== References" "refm/api/src/prettyprint.rd")
(find-rurima "= class PrettyPrint < Object" "refm/api/src/prettyprint.rd")
(find-rurima "== Class Methods" "= class PrettyPrint < Object" "refm/api/src/prettyprint.rd")
(find-rurima "--- new(output = '', maxwidth = 79, newline = \"\\n\")               -> PrettyPrint" "== Class Methods" "= class PrettyPrint < Object" "refm/api/src/prettyprint.rd")
(find-rurima "--- new(output = '', maxwidth = 79, newline = \"\\n\"){|width| ...}  -> PrettyPrint" "== Class Methods" "= class PrettyPrint < Object" "refm/api/src/prettyprint.rd")
(find-rurima "--- format(output = '', maxwidth = 79, newline = \"\\n\", genspace = lambda{|n| ' ' * n}) {|pp| ...}    -> object" "== Class Methods" "= class PrettyPrint < Object" "refm/api/src/prettyprint.rd")
(find-rurima "--- singleline_format(output = '', maxwidth = 79, newline = \"\\n\", genspace = lambda{|n| ' ' * n}) {|pp| ...}    -> object" "== Class Methods" "= class PrettyPrint < Object" "refm/api/src/prettyprint.rd")
(find-rurima "== Instance Methods" "= class PrettyPrint < Object" "refm/api/src/prettyprint.rd")
(find-rurima "--- text(obj)           -> ()" "== Instance Methods" "= class PrettyPrint < Object" "refm/api/src/prettyprint.rd")
(find-rurima "--- text(obj, width = obj.length)    -> ()" "== Instance Methods" "= class PrettyPrint < Object" "refm/api/src/prettyprint.rd")
(find-rurima "--- breakable(sep = ' ')     -> ()" "== Instance Methods" "= class PrettyPrint < Object" "refm/api/src/prettyprint.rd")
(find-rurima "--- breakable(sep, width = sep.length)    -> ()" "== Instance Methods" "= class PrettyPrint < Object" "refm/api/src/prettyprint.rd")
(find-rurima "--- nest(indent) {...}     -> ()" "== Instance Methods" "= class PrettyPrint < Object" "refm/api/src/prettyprint.rd")
(find-rurima "--- group(indent = 0, open_obj = '', close_obj = '', open_width = open_obj.length, close_width = close_obj.length){...}      -> ()" "== Instance Methods" "= class PrettyPrint < Object" "refm/api/src/prettyprint.rd")
(find-rurima "--- flush     -> ()" "== Instance Methods" "= class PrettyPrint < Object" "refm/api/src/prettyprint.rd")
(find-rurima "--- first?    -> bool" "== Instance Methods" "= class PrettyPrint < Object" "refm/api/src/prettyprint.rd")
(find-rurima "--- output    -> object" "== Instance Methods" "= class PrettyPrint < Object" "refm/api/src/prettyprint.rd")
(find-rurima "--- maxwidth    -> Integer" "== Instance Methods" "= class PrettyPrint < Object" "refm/api/src/prettyprint.rd")
(find-rurima "--- newline    -> String" "== Instance Methods" "= class PrettyPrint < Object" "refm/api/src/prettyprint.rd")
(find-rurima "--- genspace    -> Proc" "== Instance Methods" "= class PrettyPrint < Object" "refm/api/src/prettyprint.rd")
(find-rurima "--- indent    -> Integer" "== Instance Methods" "= class PrettyPrint < Object" "refm/api/src/prettyprint.rd")
(find-rurima "= reopen TclTkIp" "refm/api/src/multi-tk/TclTkIp")
(find-rurima "== Class Methods" "= reopen TclTkIp" "refm/api/src/multi-tk/TclTkIp")
(find-rurima "--- new(*args)" "== Class Methods" "= reopen TclTkIp" "refm/api/src/multi-tk/TclTkIp")
(find-rurima "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "== Constants" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- BASE_DIR" "== Constants" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- SAFE_OPT_LIST" "== Constants" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- SLAVE_IP_ID" "== Constants" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- __getip" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _conv_listelement(arg)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _create_console" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _eval(str)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _eval_with_enc(str)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _eval_without_enc(str)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _fromUTF8(str, encoding = nil)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _get_global_var(var)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _get_global_var2(var, idx)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _get_variable(var, flag)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _get_variable2(var, idx, flag)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _invoke(*args)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _invoke_with_enc(*args)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _invoke_without_enc(*args)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _ip_id_" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _make_menu_embeddable(menu_path)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _merge_tklist(*args)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _return_value" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _set_global_var(var, value)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _set_global_var2(var, idx, value)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _set_variable(var, value, flag)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _set_variable2(var, idx, value, flag)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _split_tklist(str)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _thread_tkwait(mode, target)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _thread_vwait(var)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _toUTF8(str, encoding = nil)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _unset_global_var(var)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _unset_global_var2(var, idx)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _unset_variable(var, flag)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _unset_variable2(var, idx, flag)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- abort(msg = nil)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- add_tk_procs(name, args = nil, body = nil)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- alias_delete(slave, cmd_name)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- alias_info(slave, cmd_name)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- alias_target(aliascmd, slave = '')" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- aliases(slave = '')" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- alive?" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- allow_ruby_exit=(mode)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- allow_ruby_exit?" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- bg_eval(*args, &block)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- background_eval(*args, &block)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- bg_eval_proc(*args)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- bg_call(*args)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- background_call(*args)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- background_eval_proc(*args)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- thread_eval_proc(*args)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- bg_eval_string(cmd, *eval_args)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- bg_eval_str(cmd, *eval_args)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- background_eval_string(cmd, *eval_args)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- background_eval_str(cmd, *eval_args)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- bgerror(cmd = Proc.new, slave = nil, &block)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- cb_entry_class" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- create_table" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- def_alias(slave, new_cmd, org_cmd, *args)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- delete" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- delete_cmd(slave, cmd)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- delete_slaves(*args)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- deleted?" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- deleteed?" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- do_one_event(flag = TclTkLib::EventFlag::ALL)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- eval(*args, &block)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- eval_proc" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- call" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- eval_string(cmd, *eval_args)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- eval_str(cmd, *eval_args)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- exist?(slave = '')" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- exit(st = true)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- exit!(st = false)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- expose_cmd(slave, cmd, aliasname = nil)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- get_cb_entry(cmd)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- get_eventloop_tick" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- get_eventloop_weight" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- get_limit(limit_type, slave = '', slot = nil)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- get_no_event_wait" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- has_mainwindow?" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- hidden_cmds(slave = '')" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- hide_cmd(slave, cmd, aliasname = nil)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- inherited(subclass)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- init_ip_env(script = Proc.new)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- init_ip_internal" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- invalid_namespace?" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- invoke_hidden(slave, cmd, *args)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- invoke_hidden_on_global(slave, cmd, *args)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- invoke_hidden_on_namespace(slave, ns, cmd, *args)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- ip_name" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- mainloop(check_root = true)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- mainloop_abort_on_exception" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- mainloop_abort_on_exception=(mode)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- mainloop_watchdog(check_root = true)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- make_safe" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- manipulable?" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- mark_trusted(slave = '')" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- master?" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- method_missing" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- new_master(safe = nil, keys = {})" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- new(safe=nil, keys={})" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- new_safe_slave(safe = 4, keys = {})" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- new_safeTk(safe = 4, keys = {})" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- new_slave(safe = nil, keys = {})" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- new_trusted_slave(safe = nil, keys = {})" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- path" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- recursion_limit(slave = '', limit = Tk::None)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- remove_tk_procs(*names)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- restart(app_name = nil, keys = {})" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- safe?" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- safe_base?" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- safe_level" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- safe_level=(safe)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- set_eventloop_tick(tick)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- set_eventloop_weight(loop_max, no_event_tick)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- set_limit(limit_type, slave = '', opts = {})" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- set_no_event_wait(tick)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- set_safe_level(safe)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- share_stderr(dist, src = '')" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- share_stdin(dist, src = '')" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- share_stdio(dist, src = '')" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- share_stdout(dist, src = '')" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- slave?" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- slaves(all = false)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- tk_cmd_tbl" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- tk_object_table(id)" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- tk_windows" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- to_eval" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- transfer_stderr(dist, src = '')" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- transfer_stdin(dist, src = '')" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- transfer_stdio(dist, src = '')" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- transfer_stdout(dist, src = '')" "== Class Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- __create_safe_slave_obj(safe_opts, app_name, tk_opts)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- __create_trusted_slave_obj(name, keys)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- __eval(str)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- __invoke(*args)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- __pseudo_toplevel" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- __pseudo_toplevel=(m)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- __pseudo_toplevel_evaluable=(mode)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- __pseudo_toplevel_evaluable?" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _add_new_tables" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _add_tk_procs(name, args, body)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _conv_listelement(arg)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _create_slave_object(keys = {})" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _default_delete_hook(slave)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _destroy_slaves_of_slaveIP(ip)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _eval(str)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _eval_with_enc(str)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _eval_without_enc(str)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _fromUTF8(str, encoding = nil)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _get_global_var(var)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _get_global_var2(var, idx)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _get_variable(var, flag)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _get_variable2(varm idx, flag)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _init_ip_env(script)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _init_ip_internal(init_ip_env, add_tk_procs)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _invoke(*args)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _invoke_with_enc(*args)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _invoke_without_enc(*args)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _ip_id_" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _is_master_of?(tcltkip_obj)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _make_menu_embeddable" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _merge_tklist(*args)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _receiver_mainloop(check_root)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _remove_tk_procs(*names)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _return_value" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _set_global_var(var, value)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _set_global_var2(var, idx, value)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _set_variable(var, value, flag)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _set_variable2(var, idx, value, flag)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _split_tklist(str)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _thread_tkwait(mode, target)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _thread_vwait(var)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _tk_cmd_tbl" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _tk_table_list" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _tk_windows" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _toUTF8(str, encoding=nil)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _unset_global_var(var)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _unset_global_var2(var, idx)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _unset_variable(var, flag)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- _unset_variable2(var, idx, flag)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- abort(msg = nil)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- alias_delete(slave, cmd_name)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- alias_info(slave, cmd_name)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- alias_target(aliascmd, slave = '')" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- aliases(slave = '')" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- alive?" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- allow_ruby_exit=(mode)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- allow_ruby_exit?" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- bg_eval(*args, &block)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- background_eval(*args, &block)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- bg_eval_proc(*args)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- background_eval_proc(*args)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- background_call(*args)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- bg_call(*args)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- thread_eval_proc(*args)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- bg_eval_string(cmd, *eval_args)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- bg_eval_str(cmd, *eval_args)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- background_eval_string(cmd, *eval_args)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- background_eval_str(cmd, *eval_args)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- call(*args)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- cb_error(e)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- cb_eval(cmd, *args)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- def_alias(slave, new_cmd, org_cmd, *args)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- delete(idx, &block)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- delete_cmd(slave, cmd)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- delete_slaves(*args)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- deleted?" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- encoding" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- encoding=(enc)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- encoding_convertfrom(str, enc = Tk::None)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- encoding_convert_from(str, enc = Tk::None)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- encoding_convertto(str, enc = Tk::None)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- encoding_convert_to(str, enc = Tk::None)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- eval(*args, &block)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- eval_callback(*args)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- eval_proc(*args)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- eval_string(cmd, *eval_args)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- eval_str(cmd, *eval_args)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- exist?(slave = '')" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- exit(st = true)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- exit!(st = false)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- expose_cmd(slave, cmd, aliasname = nil)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- get_bgerror_handler(slave = '')" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- get_limit(limit_type, slave = '', slot = nil)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- has_mainwindow?" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- hidden_cmds(slave = '')" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- hide_cmd(slave, cmd, aliasname = nil)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- inspect" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- invalid_namespace?" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- invoke_hidden(slave, cmd, *args)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- invoke_hidden_on_global(slave, cmd, *args)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- invoke_hidden_on_namespace(slave, ns, cmd, *args)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- ip_name" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- mainloop(check_root = true, restart_on_dead = true)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- make_safe" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- manipulable?" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- mark_trusted(slave = '')" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- master?" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- path" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- recursion_limit(slave = '', limit = Tk::None)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- restart(*args)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- running_mainloop?" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- safe?" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- safe_base?" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- safe_level" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- safe_level=(safe)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- safeip_add_to_access_path(dir)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- safeip_configinfo(slot = nil)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- safeip_configure(slot, value = Tk::None)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- safeip_delete" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- safeip_find_in_access_path(dir)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- safeip_set_log_cmd(cmd = Proc.new)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- set_bgerror_handler(cmd = Proc.new, slave = nil, &block)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- set_cb_error(cmd = Proc.new)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- set_limit(limit_type, slave = '', opts = {})" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- set_safe_level(safe)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- share_stderr(dist, src = '')" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- share_stdin(dist, src = '')" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- share_stdio(dist, src = '')" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- share_stdout(dist, src = '')" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- slave?" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- slaves(all = false)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- to_eval" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- transfer_stderr(dist, src = '')" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- transfer_stdin(dist, src = '')" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- transfer_stdio(dist, src = '')" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- transfer_stdout(dist, src = '')" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- wait_on_mainloop=(bool)" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "--- wait_on_mainloop?" "== Instance Methods" "= class MultiTkIp < Object" "refm/api/src/multi-tk/MultiTkIp")
(find-rurima "= reopen Object" "refm/api/src/multi-tk/Object")
(find-rurima "== Instance Methods" "= reopen Object" "refm/api/src/multi-tk/Object")
(find-rurima "--- method_missing(id, *args)" "== Instance Methods" "= reopen Object" "refm/api/src/multi-tk/Object")
(find-rurima "= redefine TkCore" "refm/api/src/multi-tk/TkCore")
(find-rurima "== Constants" "= redefine TkCore" "refm/api/src/multi-tk/TkCore")
(find-rurima "--- INTERP" "== Constants" "= redefine TkCore" "refm/api/src/multi-tk/TkCore")
(find-rurima "= class MultiTkIp_OK < Exception" "refm/api/src/multi-tk/MultiTkIp_OK")
(find-rurima "== Class Methods" "= class MultiTkIp_OK < Exception" "refm/api/src/multi-tk/MultiTkIp_OK")
(find-rurima "--- new(ret = nil)" "== Class Methods" "= class MultiTkIp_OK < Exception" "refm/api/src/multi-tk/MultiTkIp_OK")
(find-rurima "--- send(thread, ret = nil)" "== Class Methods" "= class MultiTkIp_OK < Exception" "refm/api/src/multi-tk/MultiTkIp_OK")
(find-rurima "== Instance Methods" "= class MultiTkIp_OK < Exception" "refm/api/src/multi-tk/MultiTkIp_OK")
(find-rurima "--- return_value" "== Instance Methods" "= class MultiTkIp_OK < Exception" "refm/api/src/multi-tk/MultiTkIp_OK")
(find-rurima "--- value" "== Instance Methods" "= class MultiTkIp_OK < Exception" "refm/api/src/multi-tk/MultiTkIp_OK")
(find-rurima "= module MultiTkIp_PseudoToplevel_Evaluable" "refm/api/src/multi-tk/MultiTkIp_PseudoToplevel_Evaluable")
(find-rurima "== Class Methods" "= module MultiTkIp_PseudoToplevel_Evaluable" "refm/api/src/multi-tk/MultiTkIp_PseudoToplevel_Evaluable")
(find-rurima "--- extend(mod)" "== Class Methods" "= module MultiTkIp_PseudoToplevel_Evaluable" "refm/api/src/multi-tk/MultiTkIp_PseudoToplevel_Evaluable")
(find-rurima "== Instance Methods" "= module MultiTkIp_PseudoToplevel_Evaluable" "refm/api/src/multi-tk/MultiTkIp_PseudoToplevel_Evaluable")
(find-rurima "--- pseudo_toplevel_evaluable=(mode)" "== Instance Methods" "= module MultiTkIp_PseudoToplevel_Evaluable" "refm/api/src/multi-tk/MultiTkIp_PseudoToplevel_Evaluable")
(find-rurima "--- pseudo_toplevel_evaluable?" "== Instance Methods" "= module MultiTkIp_PseudoToplevel_Evaluable" "refm/api/src/multi-tk/MultiTkIp_PseudoToplevel_Evaluable")
(find-rurima "=== 使い方" "refm/api/src/find.rd")
(find-rurima "= module Find" "refm/api/src/find.rd")
(find-rurima "== Module Functions" "= module Find" "refm/api/src/find.rd")
(find-rurima "--- find(*dirs){|file| ... } -> nil" "== Module Functions" "= module Find" "refm/api/src/find.rd")
(find-rurima "--- prune -> ()" "== Module Functions" "= module Find" "refm/api/src/find.rd")
(find-rurima "= class Tk::ICONS" "refm/api/src/tkextlib/ICONS.rd")
(find-rurima "== Class Methods" "= class Tk::ICONS" "refm/api/src/tkextlib/ICONS.rd")
(find-rurima "--- create(*args)" "== Class Methods" "= class Tk::ICONS" "refm/api/src/tkextlib/ICONS.rd")
(find-rurima "--- delete(*icons)" "== Class Methods" "= class Tk::ICONS" "refm/api/src/tkextlib/ICONS.rd")
(find-rurima "--- new(name, keys = nil)" "== Class Methods" "= class Tk::ICONS" "refm/api/src/tkextlib/ICONS.rd")
(find-rurima "--- package_name" "== Class Methods" "= class Tk::ICONS" "refm/api/src/tkextlib/ICONS.rd")
(find-rurima "--- package_version" "== Class Methods" "= class Tk::ICONS" "refm/api/src/tkextlib/ICONS.rd")
(find-rurima "--- query(*args)" "== Class Methods" "= class Tk::ICONS" "refm/api/src/tkextlib/ICONS.rd")
(find-rurima "== Instance Methods" "= class Tk::ICONS" "refm/api/src/tkextlib/ICONS.rd")
(find-rurima "--- delete" "== Instance Methods" "= class Tk::ICONS" "refm/api/src/tkextlib/ICONS.rd")
(find-rurima "--- name" "== Instance Methods" "= class Tk::ICONS" "refm/api/src/tkextlib/ICONS.rd")
(find-rurima "--- query(keys = {})" "== Instance Methods" "= class Tk::ICONS" "refm/api/src/tkextlib/ICONS.rd")
(find-rurima "= module Tk::Vu" "refm/api/src/tkextlib/vu.rd")
(find-rurima "== Singleton Methods" "= module Tk::Vu" "refm/api/src/tkextlib/vu.rd")
(find-rurima "--- package_version" "== Singleton Methods" "= module Tk::Vu" "refm/api/src/tkextlib/vu.rd")
(find-rurima "= module Tk::Img::BMP" "refm/api/src/tkextlib/tkimg/bmp.rd")
(find-rurima "== Singleton Methods" "= module Tk::Img::BMP" "refm/api/src/tkextlib/tkimg/bmp.rd")
(find-rurima "--- package_name" "== Singleton Methods" "= module Tk::Img::BMP" "refm/api/src/tkextlib/tkimg/bmp.rd")
(find-rurima "--- package_version" "== Singleton Methods" "= module Tk::Img::BMP" "refm/api/src/tkextlib/tkimg/bmp.rd")
(find-rurima "= module Tk::Img::SUN" "refm/api/src/tkextlib/tkimg/sun.rd")
(find-rurima "== Singleton Methods" "= module Tk::Img::SUN" "refm/api/src/tkextlib/tkimg/sun.rd")
(find-rurima "--- package_name" "== Singleton Methods" "= module Tk::Img::SUN" "refm/api/src/tkextlib/tkimg/sun.rd")
(find-rurima "--- package_version" "== Singleton Methods" "= module Tk::Img::SUN" "refm/api/src/tkextlib/tkimg/sun.rd")
(find-rurima "= module Tk::Img::TGA" "refm/api/src/tkextlib/tkimg/tga.rd")
(find-rurima "== Singleton Methods" "= module Tk::Img::TGA" "refm/api/src/tkextlib/tkimg/tga.rd")
(find-rurima "--- package_name" "== Singleton Methods" "= module Tk::Img::TGA" "refm/api/src/tkextlib/tkimg/tga.rd")
(find-rurima "--- package_version" "== Singleton Methods" "= module Tk::Img::TGA" "refm/api/src/tkextlib/tkimg/tga.rd")
(find-rurima "= module Tk::Img::JPEG" "refm/api/src/tkextlib/tkimg/jpeg.rd")
(find-rurima "== Singleton Methods" "= module Tk::Img::JPEG" "refm/api/src/tkextlib/tkimg/jpeg.rd")
(find-rurima "--- package_name" "== Singleton Methods" "= module Tk::Img::JPEG" "refm/api/src/tkextlib/tkimg/jpeg.rd")
(find-rurima "--- package_version" "== Singleton Methods" "= module Tk::Img::JPEG" "refm/api/src/tkextlib/tkimg/jpeg.rd")
(find-rurima "= module Tk::Img::PCX" "refm/api/src/tkextlib/tkimg/pcx.rd")
(find-rurima "== Singleton Methods" "= module Tk::Img::PCX" "refm/api/src/tkextlib/tkimg/pcx.rd")
(find-rurima "--- package_name" "== Singleton Methods" "= module Tk::Img::PCX" "refm/api/src/tkextlib/tkimg/pcx.rd")
(find-rurima "--- package_version" "== Singleton Methods" "= module Tk::Img::PCX" "refm/api/src/tkextlib/tkimg/pcx.rd")
(find-rurima "= module Tk::Img::PNG" "refm/api/src/tkextlib/tkimg/png.rd")
(find-rurima "== Singleton Methods" "= module Tk::Img::PNG" "refm/api/src/tkextlib/tkimg/png.rd")
(find-rurima "--- package_name" "== Singleton Methods" "= module Tk::Img::PNG" "refm/api/src/tkextlib/tkimg/png.rd")
(find-rurima "--- package_version" "== Singleton Methods" "= module Tk::Img::PNG" "refm/api/src/tkextlib/tkimg/png.rd")
(find-rurima "= module Tk::Img::TIFF" "refm/api/src/tkextlib/tkimg/tiff.rd")
(find-rurima "== Singleton Methods" "= module Tk::Img::TIFF" "refm/api/src/tkextlib/tkimg/tiff.rd")
(find-rurima "--- package_name" "== Singleton Methods" "= module Tk::Img::TIFF" "refm/api/src/tkextlib/tkimg/tiff.rd")
(find-rurima "--- package_version" "== Singleton Methods" "= module Tk::Img::TIFF" "refm/api/src/tkextlib/tkimg/tiff.rd")
(find-rurima "= module Tk::Img::PS" "refm/api/src/tkextlib/tkimg/ps.rd")
(find-rurima "== Singleton Methods" "= module Tk::Img::PS" "refm/api/src/tkextlib/tkimg/ps.rd")
(find-rurima "--- package_name" "== Singleton Methods" "= module Tk::Img::PS" "refm/api/src/tkextlib/tkimg/ps.rd")
(find-rurima "--- package_version" "== Singleton Methods" "= module Tk::Img::PS" "refm/api/src/tkextlib/tkimg/ps.rd")
(find-rurima "= module Tk::Img::WINDOW" "refm/api/src/tkextlib/tkimg/window.rd")
(find-rurima "== Singleton Methods" "= module Tk::Img::WINDOW" "refm/api/src/tkextlib/tkimg/window.rd")
(find-rurima "--- package_name" "== Singleton Methods" "= module Tk::Img::WINDOW" "refm/api/src/tkextlib/tkimg/window.rd")
(find-rurima "--- package_version" "== Singleton Methods" "= module Tk::Img::WINDOW" "refm/api/src/tkextlib/tkimg/window.rd")
(find-rurima "= module Tk::Img::XBM" "refm/api/src/tkextlib/tkimg/xbm.rd")
(find-rurima "== Singleton Methods" "= module Tk::Img::XBM" "refm/api/src/tkextlib/tkimg/xbm.rd")
(find-rurima "--- package_name" "== Singleton Methods" "= module Tk::Img::XBM" "refm/api/src/tkextlib/tkimg/xbm.rd")
(find-rurima "--- package_version" "== Singleton Methods" "= module Tk::Img::XBM" "refm/api/src/tkextlib/tkimg/xbm.rd")
(find-rurima "= module Tk::Img::SGI" "refm/api/src/tkextlib/tkimg/sgi.rd")
(find-rurima "== Singleton Methods" "= module Tk::Img::SGI" "refm/api/src/tkextlib/tkimg/sgi.rd")
(find-rurima "--- package_name" "== Singleton Methods" "= module Tk::Img::SGI" "refm/api/src/tkextlib/tkimg/sgi.rd")
(find-rurima "--- package_version" "== Singleton Methods" "= module Tk::Img::SGI" "refm/api/src/tkextlib/tkimg/sgi.rd")
(find-rurima "= module Tk::Img::PIXMAP" "refm/api/src/tkextlib/tkimg/PIXMAP")
(find-rurima "== Singleton Methods" "= module Tk::Img::PIXMAP" "refm/api/src/tkextlib/tkimg/PIXMAP")
(find-rurima "--- package_name" "== Singleton Methods" "= module Tk::Img::PIXMAP" "refm/api/src/tkextlib/tkimg/PIXMAP")
(find-rurima "--- package_version" "== Singleton Methods" "= module Tk::Img::PIXMAP" "refm/api/src/tkextlib/tkimg/PIXMAP")
(find-rurima "= module Tk::Img::ICO" "refm/api/src/tkextlib/tkimg/ico.rd")
(find-rurima "== Singleton Methods" "= module Tk::Img::ICO" "refm/api/src/tkextlib/tkimg/ico.rd")
(find-rurima "--- package_name" "== Singleton Methods" "= module Tk::Img::ICO" "refm/api/src/tkextlib/tkimg/ico.rd")
(find-rurima "--- package_version" "== Singleton Methods" "= module Tk::Img::ICO" "refm/api/src/tkextlib/tkimg/ico.rd")
(find-rurima "= module Tk::Img::GIF" "refm/api/src/tkextlib/tkimg/gif.rd")
(find-rurima "== Singleton Methods" "= module Tk::Img::GIF" "refm/api/src/tkextlib/tkimg/gif.rd")
(find-rurima "--- package_name" "== Singleton Methods" "= module Tk::Img::GIF" "refm/api/src/tkextlib/tkimg/gif.rd")
(find-rurima "--- package_version" "== Singleton Methods" "= module Tk::Img::GIF" "refm/api/src/tkextlib/tkimg/gif.rd")
(find-rurima "= class TkPixmapImage < TkImage" "refm/api/src/tkextlib/tkimg/TkPixmapImage")
(find-rurima "== Class Methods" "= class TkPixmapImage < TkImage" "refm/api/src/tkextlib/tkimg/TkPixmapImage")
(find-rurima "--- version" "== Class Methods" "= class TkPixmapImage < TkImage" "refm/api/src/tkextlib/tkimg/TkPixmapImage")
(find-rurima "--- new(*args)" "== Class Methods" "= class TkPixmapImage < TkImage" "refm/api/src/tkextlib/tkimg/TkPixmapImage")
(find-rurima "= module Tk::Img::XPM" "refm/api/src/tkextlib/tkimg/xpm.rd")
(find-rurima "== Singleton Methods" "= module Tk::Img::XPM" "refm/api/src/tkextlib/tkimg/xpm.rd")
(find-rurima "--- package_name" "== Singleton Methods" "= module Tk::Img::XPM" "refm/api/src/tkextlib/tkimg/xpm.rd")
(find-rurima "--- package_version" "== Singleton Methods" "= module Tk::Img::XPM" "refm/api/src/tkextlib/tkimg/xpm.rd")
(find-rurima "= module Tk::Img::PPM" "refm/api/src/tkextlib/tkimg/ppm.rd")
(find-rurima "== Singleton Methods" "= module Tk::Img::PPM" "refm/api/src/tkextlib/tkimg/ppm.rd")
(find-rurima "--- package_name" "== Singleton Methods" "= module Tk::Img::PPM" "refm/api/src/tkextlib/tkimg/ppm.rd")
(find-rurima "--- package_version" "== Singleton Methods" "= module Tk::Img::PPM" "refm/api/src/tkextlib/tkimg/ppm.rd")
(find-rurima "= module Tk::BLT" "refm/api/src/tkextlib/blt.rd")
(find-rurima "== Singleton Methods" "= module Tk::BLT" "refm/api/src/tkextlib/blt.rd")
(find-rurima "--- active_legend(graph)" "== Singleton Methods" "= module Tk::BLT" "refm/api/src/tkextlib/blt.rd")
(find-rurima "--- beep(percent = 50)" "== Singleton Methods" "= module Tk::BLT" "refm/api/src/tkextlib/blt.rd")
(find-rurima "--- bgexec(*args)" "== Singleton Methods" "= module Tk::BLT" "refm/api/src/tkextlib/blt.rd")
(find-rurima "--- bltdebug(lvl = nil)" "== Singleton Methods" "= module Tk::BLT" "refm/api/src/tkextlib/blt.rd")
(find-rurima "--- closest_point(graph)" "== Singleton Methods" "= module Tk::BLT" "refm/api/src/tkextlib/blt.rd")
(find-rurima "--- crc32_data(dat)" "== Singleton Methods" "= module Tk::BLT" "refm/api/src/tkextlib/blt.rd")
(find-rurima "--- crc32_file(name)" "== Singleton Methods" "= module Tk::BLT" "refm/api/src/tkextlib/blt.rd")
(find-rurima "--- crosshairs(graph)" "== Singleton Methods" "= module Tk::BLT" "refm/api/src/tkextlib/blt.rd")
(find-rurima "--- detach_bgexec(*args)" "== Singleton Methods" "= module Tk::BLT" "refm/api/src/tkextlib/blt.rd")
(find-rurima "--- package_name" "== Singleton Methods" "= module Tk::BLT" "refm/api/src/tkextlib/blt.rd")
(find-rurima "--- package_version" "== Singleton Methods" "= module Tk::BLT" "refm/api/src/tkextlib/blt.rd")
(find-rurima "--- print_key(graph)" "== Singleton Methods" "= module Tk::BLT" "refm/api/src/tkextlib/blt.rd")
(find-rurima "--- zoom_stack(graph)" "== Singleton Methods" "= module Tk::BLT" "refm/api/src/tkextlib/blt.rd")
(find-rurima "== Instance Methods" "= module Tk::BLT" "refm/api/src/tkextlib/blt.rd")
(find-rurima "--- find_command(pat)" "== Instance Methods" "= module Tk::BLT" "refm/api/src/tkextlib/blt.rd")
(find-rurima "--- find_name(pat)" "== Instance Methods" "= module Tk::BLT" "refm/api/src/tkextlib/blt.rd")
(find-rurima "= class Tk::Tcllib::Tkpiechart::PeripheralLabeler < TkcItem" "refm/api/src/tkextlib/tcllib/Tkpiechart__PeripheralLabeler")
(find-rurima "= class Tk::Tcllib::Plotchart::Gnattchart < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__Gnattchart")
(find-rurima "== Class Methods" "= class Tk::Tcllib::Plotchart::Gnattchart < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__Gnattchart")
(find-rurima "--- new(*args)" "== Class Methods" "= class Tk::Tcllib::Plotchart::Gnattchart < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__Gnattchart")
(find-rurima "== Instance Methods" "= class Tk::Tcllib::Plotchart::Gnattchart < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__Gnattchart")
(find-rurima "--- task(txt, time_begin, time_end, completed = 0.0)" "== Instance Methods" "= class Tk::Tcllib::Plotchart::Gnattchart < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__Gnattchart")
(find-rurima "--- milestone(txt, time, col = None)" "== Instance Methods" "= class Tk::Tcllib::Plotchart::Gnattchart < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__Gnattchart")
(find-rurima "--- vertline(txt, time)" "== Instance Methods" "= class Tk::Tcllib::Plotchart::Gnattchart < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__Gnattchart")
(find-rurima "--- connect(from_task, to_task)" "== Instance Methods" "= class Tk::Tcllib::Plotchart::Gnattchart < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__Gnattchart")
(find-rurima "--- summary(txt, tasks)" "== Instance Methods" "= class Tk::Tcllib::Plotchart::Gnattchart < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__Gnattchart")
(find-rurima "--- color_of_part(keyword, newcolor)" "== Instance Methods" "= class Tk::Tcllib::Plotchart::Gnattchart < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__Gnattchart")
(find-rurima "--- font_of_part(keyword, newfont)" "== Instance Methods" "= class Tk::Tcllib::Plotchart::Gnattchart < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__Gnattchart")
(find-rurima "= class Tk::Tcllib::Plotchart::Timechart < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__Timechart")
(find-rurima "== Class Methods" "= class Tk::Tcllib::Plotchart::Timechart < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__Timechart")
(find-rurima "--- new(*args)" "== Class Methods" "= class Tk::Tcllib::Plotchart::Timechart < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__Timechart")
(find-rurima "== Instance Methods" "= class Tk::Tcllib::Plotchart::Timechart < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__Timechart")
(find-rurima "--- period(txt, time_begin, time_end, col = None)" "== Instance Methods" "= class Tk::Tcllib::Plotchart::Timechart < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__Timechart")
(find-rurima "--- milestone(txt, time, col = None)" "== Instance Methods" "= class Tk::Tcllib::Plotchart::Timechart < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__Timechart")
(find-rurima "--- vertline(txt, time)" "== Instance Methods" "= class Tk::Tcllib::Plotchart::Timechart < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__Timechart")
(find-rurima "= class Tk::Tcllib::Tkpiechart::PieChartObj < TkcItem" "refm/api/src/tkextlib/tcllib/Tkpiechart__PieChartObj")
(find-rurima "= class Tk::Tcllib::Tkpiechart::Label < TkcItem" "refm/api/src/tkextlib/tcllib/Tkpiechart__Label")
(find-rurima "= module Tk::Tcllib::TablelistItemConfig" "refm/api/src/tkextlib/tcllib/TablelistItemConfig")
(find-rurima "== Instance Methods" "= module Tk::Tcllib::TablelistItemConfig" "refm/api/src/tkextlib/tcllib/TablelistItemConfig")
(find-rurima "--- cell_cget(tagOrId, option)" "== Instance Methods" "= module Tk::Tcllib::TablelistItemConfig" "refm/api/src/tkextlib/tcllib/TablelistItemConfig")
(find-rurima "--- cell_configure(tagOrId, slot, value = None)" "== Instance Methods" "= module Tk::Tcllib::TablelistItemConfig" "refm/api/src/tkextlib/tcllib/TablelistItemConfig")
(find-rurima "--- cell_configinfo(tagOrId, slot = nil)" "== Instance Methods" "= module Tk::Tcllib::TablelistItemConfig" "refm/api/src/tkextlib/tcllib/TablelistItemConfig")
(find-rurima "--- current_cell_configinfo(tagOrId, slot = nil)" "== Instance Methods" "= module Tk::Tcllib::TablelistItemConfig" "refm/api/src/tkextlib/tcllib/TablelistItemConfig")
(find-rurima "--- cellcget(tagOrId, slot = nil)" "== Instance Methods" "= module Tk::Tcllib::TablelistItemConfig" "refm/api/src/tkextlib/tcllib/TablelistItemConfig")
(find-rurima "--- cellconfigure(tagOrId, slot = nil)" "== Instance Methods" "= module Tk::Tcllib::TablelistItemConfig" "refm/api/src/tkextlib/tcllib/TablelistItemConfig")
(find-rurima "--- cellconfiginfo(tagOrId, slot = nil)" "== Instance Methods" "= module Tk::Tcllib::TablelistItemConfig" "refm/api/src/tkextlib/tcllib/TablelistItemConfig")
(find-rurima "--- current_cellconfiginfo(tagOrId, slot = nil)" "== Instance Methods" "= module Tk::Tcllib::TablelistItemConfig" "refm/api/src/tkextlib/tcllib/TablelistItemConfig")
(find-rurima "--- column_cget(tagOrId, option)" "== Instance Methods" "= module Tk::Tcllib::TablelistItemConfig" "refm/api/src/tkextlib/tcllib/TablelistItemConfig")
(find-rurima "--- column_configure(tagOrId, slot, value = None)" "== Instance Methods" "= module Tk::Tcllib::TablelistItemConfig" "refm/api/src/tkextlib/tcllib/TablelistItemConfig")
(find-rurima "--- column_configinfo(tagOrId, slot = nil)" "== Instance Methods" "= module Tk::Tcllib::TablelistItemConfig" "refm/api/src/tkextlib/tcllib/TablelistItemConfig")
(find-rurima "--- current_column_configinfo(tagOrId, slot = nil)" "== Instance Methods" "= module Tk::Tcllib::TablelistItemConfig" "refm/api/src/tkextlib/tcllib/TablelistItemConfig")
(find-rurima "--- columncget(tagOrId, slot = nil)" "== Instance Methods" "= module Tk::Tcllib::TablelistItemConfig" "refm/api/src/tkextlib/tcllib/TablelistItemConfig")
(find-rurima "--- columnconfigure(tagOrId, slot = nil)" "== Instance Methods" "= module Tk::Tcllib::TablelistItemConfig" "refm/api/src/tkextlib/tcllib/TablelistItemConfig")
(find-rurima "--- columnconfiginfo(tagOrId, slot = nil)" "== Instance Methods" "= module Tk::Tcllib::TablelistItemConfig" "refm/api/src/tkextlib/tcllib/TablelistItemConfig")
(find-rurima "--- current_columnconfiginfo(tagOrId, slot = nil)" "== Instance Methods" "= module Tk::Tcllib::TablelistItemConfig" "refm/api/src/tkextlib/tcllib/TablelistItemConfig")
(find-rurima "--- row_cget(tagOrId, option)" "== Instance Methods" "= module Tk::Tcllib::TablelistItemConfig" "refm/api/src/tkextlib/tcllib/TablelistItemConfig")
(find-rurima "--- row_configure(tagOrId, slot, value = None)" "== Instance Methods" "= module Tk::Tcllib::TablelistItemConfig" "refm/api/src/tkextlib/tcllib/TablelistItemConfig")
(find-rurima "--- row_configinfo(tagOrId, slot = nil)" "== Instance Methods" "= module Tk::Tcllib::TablelistItemConfig" "refm/api/src/tkextlib/tcllib/TablelistItemConfig")
(find-rurima "--- current_row_configinfo(tagOrId, slot = nil)" "== Instance Methods" "= module Tk::Tcllib::TablelistItemConfig" "refm/api/src/tkextlib/tcllib/TablelistItemConfig")
(find-rurima "--- rowcget(tagOrId, slot = nil)" "== Instance Methods" "= module Tk::Tcllib::TablelistItemConfig" "refm/api/src/tkextlib/tcllib/TablelistItemConfig")
(find-rurima "--- rowconfigure(tagOrId, slot = nil)" "== Instance Methods" "= module Tk::Tcllib::TablelistItemConfig" "refm/api/src/tkextlib/tcllib/TablelistItemConfig")
(find-rurima "--- rowconfiginfo(tagOrId, slot = nil)" "== Instance Methods" "= module Tk::Tcllib::TablelistItemConfig" "refm/api/src/tkextlib/tcllib/TablelistItemConfig")
(find-rurima "--- current_rowconfiginfo(tagOrId, slot = nil)" "== Instance Methods" "= module Tk::Tcllib::TablelistItemConfig" "refm/api/src/tkextlib/tcllib/TablelistItemConfig")
(find-rurima "= class Tk::Tcllib::Ruler < TkWindow" "refm/api/src/tkextlib/tcllib/ruler.rd")
(find-rurima "== Class Methods" "= class Tk::Tcllib::Ruler < TkWindow" "refm/api/src/tkextlib/tcllib/ruler.rd")
(find-rurima "--- package_name" "== Class Methods" "= class Tk::Tcllib::Ruler < TkWindow" "refm/api/src/tkextlib/tcllib/ruler.rd")
(find-rurima "--- package_version" "== Class Methods" "= class Tk::Tcllib::Ruler < TkWindow" "refm/api/src/tkextlib/tcllib/ruler.rd")
(find-rurima "== Instance Methods" "= class Tk::Tcllib::Ruler < TkWindow" "refm/api/src/tkextlib/tcllib/ruler.rd")
(find-rurima "--- redraw" "== Instance Methods" "= class Tk::Tcllib::Ruler < TkWindow" "refm/api/src/tkextlib/tcllib/ruler.rd")
(find-rurima "--- shade(org, dest, frac)" "== Instance Methods" "= class Tk::Tcllib::Ruler < TkWindow" "refm/api/src/tkextlib/tcllib/ruler.rd")
(find-rurima "= class Tk::Tcllib::Plotchart::IsometricPlot < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__IsometricPlot")
(find-rurima "== Class Methods" "= class Tk::Tcllib::Plotchart::IsometricPlot < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__IsometricPlot")
(find-rurima "--- new(*args)" "== Class Methods" "= class Tk::Tcllib::Plotchart::IsometricPlot < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__IsometricPlot")
(find-rurima "== Instance Methods" "= class Tk::Tcllib::Plotchart::IsometricPlot < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__IsometricPlot")
(find-rurima "--- plot(type, *args)" "== Instance Methods" "= class Tk::Tcllib::Plotchart::IsometricPlot < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__IsometricPlot")
(find-rurima "--- plot_rectangle(*args)" "== Instance Methods" "= class Tk::Tcllib::Plotchart::IsometricPlot < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__IsometricPlot")
(find-rurima "--- plot_filled_rectangle(*args)" "== Instance Methods" "= class Tk::Tcllib::Plotchart::IsometricPlot < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__IsometricPlot")
(find-rurima "--- plot_circle(*args)" "== Instance Methods" "= class Tk::Tcllib::Plotchart::IsometricPlot < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__IsometricPlot")
(find-rurima "--- plot_filled_circle(*args)" "== Instance Methods" "= class Tk::Tcllib::Plotchart::IsometricPlot < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__IsometricPlot")
(find-rurima "= class Tk::Tcllib::Plotchart::Isometricplot" "refm/api/src/tkextlib/tcllib/Plotchart__IsometricPlot")
(find-rurima "= class Tk::Tcllib::PanelFrame < TkWindow" "refm/api/src/tkextlib/tcllib/panelframe.rd")
(find-rurima "== Class Methods" "= class Tk::Tcllib::PanelFrame < TkWindow" "refm/api/src/tkextlib/tcllib/panelframe.rd")
(find-rurima "--- package_name" "== Class Methods" "= class Tk::Tcllib::PanelFrame < TkWindow" "refm/api/src/tkextlib/tcllib/panelframe.rd")
(find-rurima "--- package_version" "== Class Methods" "= class Tk::Tcllib::PanelFrame < TkWindow" "refm/api/src/tkextlib/tcllib/panelframe.rd")
(find-rurima "== Instance Methods" "= class Tk::Tcllib::PanelFrame < TkWindow" "refm/api/src/tkextlib/tcllib/panelframe.rd")
(find-rurima "--- set_widget(widget)" "== Instance Methods" "= class Tk::Tcllib::PanelFrame < TkWindow" "refm/api/src/tkextlib/tcllib/panelframe.rd")
(find-rurima "--- remove(*wins)" "== Instance Methods" "= class Tk::Tcllib::PanelFrame < TkWindow" "refm/api/src/tkextlib/tcllib/panelframe.rd")
(find-rurima "--- remove_destroy(*wins)" "== Instance Methods" "= class Tk::Tcllib::PanelFrame < TkWindow" "refm/api/src/tkextlib/tcllib/panelframe.rd")
(find-rurima "--- delete(*wins)" "== Instance Methods" "= class Tk::Tcllib::PanelFrame < TkWindow" "refm/api/src/tkextlib/tcllib/panelframe.rd")
(find-rurima "--- items" "== Instance Methods" "= class Tk::Tcllib::PanelFrame < TkWindow" "refm/api/src/tkextlib/tcllib/panelframe.rd")
(find-rurima "= class Tk::Tcllib::Panelframe" "refm/api/src/tkextlib/tcllib/panelframe.rd")
(find-rurima "= class Tk::Tcllib::ScrolledWindow < TkWindow" "refm/api/src/tkextlib/tcllib/scrollwin.rd")
(find-rurima "== Class Methods" "= class Tk::Tcllib::ScrolledWindow < TkWindow" "refm/api/src/tkextlib/tcllib/scrollwin.rd")
(find-rurima "--- package_name" "== Class Methods" "= class Tk::Tcllib::ScrolledWindow < TkWindow" "refm/api/src/tkextlib/tcllib/scrollwin.rd")
(find-rurima "--- package_version" "== Class Methods" "= class Tk::Tcllib::ScrolledWindow < TkWindow" "refm/api/src/tkextlib/tcllib/scrollwin.rd")
(find-rurima "== Instance Methods" "= class Tk::Tcllib::ScrolledWindow < TkWindow" "refm/api/src/tkextlib/tcllib/scrollwin.rd")
(find-rurima "--- get_frame" "== Instance Methods" "= class Tk::Tcllib::ScrolledWindow < TkWindow" "refm/api/src/tkextlib/tcllib/scrollwin.rd")
(find-rurima "--- set_widget(widget)" "== Instance Methods" "= class Tk::Tcllib::ScrolledWindow < TkWindow" "refm/api/src/tkextlib/tcllib/scrollwin.rd")
(find-rurima "= class Tk::Tcllib::Scrolledwindow" "refm/api/src/tkextlib/tcllib/scrollwin.rd")
(find-rurima "= class Tk::Tcllib::IP_Entry < TkEntry" "refm/api/src/tkextlib/tcllib/ip_entry.rd")
(find-rurima "== Class Methods" "= class Tk::Tcllib::IP_Entry < TkEntry" "refm/api/src/tkextlib/tcllib/ip_entry.rd")
(find-rurima "--- package_name" "== Class Methods" "= class Tk::Tcllib::IP_Entry < TkEntry" "refm/api/src/tkextlib/tcllib/ip_entry.rd")
(find-rurima "--- package_version" "== Class Methods" "= class Tk::Tcllib::IP_Entry < TkEntry" "refm/api/src/tkextlib/tcllib/ip_entry.rd")
(find-rurima "== Instance Methods" "= class Tk::Tcllib::IP_Entry < TkEntry" "refm/api/src/tkextlib/tcllib/ip_entry.rd")
(find-rurima "--- complete?" "== Instance Methods" "= class Tk::Tcllib::IP_Entry < TkEntry" "refm/api/src/tkextlib/tcllib/ip_entry.rd")
(find-rurima "--- insert(*ip)" "== Instance Methods" "= class Tk::Tcllib::IP_Entry < TkEntry" "refm/api/src/tkextlib/tcllib/ip_entry.rd")
(find-rurima "= class Tk::Tcllib::IPEntry" "refm/api/src/tkextlib/tcllib/ip_entry.rd")
(find-rurima "= class Tk::Tcllib::Tkpiechart::Pie < TkcItem" "refm/api/src/tkextlib/tcllib/Tkpiechart__Pie")
(find-rurima "== Instance Methods" "= class Tk::Tcllib::Tkpiechart::Pie < TkcItem" "refm/api/src/tkextlib/tcllib/Tkpiechart__Pie")
(find-rurima "--- tag_key" "== Instance Methods" "= class Tk::Tcllib::Tkpiechart::Pie < TkcItem" "refm/api/src/tkextlib/tcllib/Tkpiechart__Pie")
(find-rurima "--- tag" "== Instance Methods" "= class Tk::Tcllib::Tkpiechart::Pie < TkcItem" "refm/api/src/tkextlib/tcllib/Tkpiechart__Pie")
(find-rurima "--- canvas" "== Instance Methods" "= class Tk::Tcllib::Tkpiechart::Pie < TkcItem" "refm/api/src/tkextlib/tcllib/Tkpiechart__Pie")
(find-rurima "--- delete" "== Instance Methods" "= class Tk::Tcllib::Tkpiechart::Pie < TkcItem" "refm/api/src/tkextlib/tcllib/Tkpiechart__Pie")
(find-rurima "--- new_slice(text = None)" "== Instance Methods" "= class Tk::Tcllib::Tkpiechart::Pie < TkcItem" "refm/api/src/tkextlib/tcllib/Tkpiechart__Pie")
(find-rurima "--- delete_slice(slice)" "== Instance Methods" "= class Tk::Tcllib::Tkpiechart::Pie < TkcItem" "refm/api/src/tkextlib/tcllib/Tkpiechart__Pie")
(find-rurima "--- selected_slices" "== Instance Methods" "= class Tk::Tcllib::Tkpiechart::Pie < TkcItem" "refm/api/src/tkextlib/tcllib/Tkpiechart__Pie")
(find-rurima "= module Tk::Tcllib::Tooltip" "refm/api/src/tkextlib/tcllib/tooltip.rd")
(find-rurima "== Class Methods" "= module Tk::Tcllib::Tooltip" "refm/api/src/tkextlib/tcllib/tooltip.rd")
(find-rurima "--- package_name" "== Class Methods" "= module Tk::Tcllib::Tooltip" "refm/api/src/tkextlib/tcllib/tooltip.rd")
(find-rurima "--- package_version" "== Class Methods" "= module Tk::Tcllib::Tooltip" "refm/api/src/tkextlib/tcllib/tooltip.rd")
(find-rurima "--- database_classname" "== Class Methods" "= module Tk::Tcllib::Tooltip" "refm/api/src/tkextlib/tcllib/tooltip.rd")
(find-rurima "--- database_class" "== Class Methods" "= module Tk::Tcllib::Tooltip" "refm/api/src/tkextlib/tcllib/tooltip.rd")
(find-rurima "--- clear(glob_path_pat = None)" "== Class Methods" "= module Tk::Tcllib::Tooltip" "refm/api/src/tkextlib/tcllib/tooltip.rd")
(find-rurima "--- clear_glob(glob_path_pat)" "== Class Methods" "= module Tk::Tcllib::Tooltip" "refm/api/src/tkextlib/tcllib/tooltip.rd")
(find-rurima "--- clear_widgets(*args)" "== Class Methods" "= module Tk::Tcllib::Tooltip" "refm/api/src/tkextlib/tcllib/tooltip.rd")
(find-rurima "--- clear_children(*args)" "== Class Methods" "= module Tk::Tcllib::Tooltip" "refm/api/src/tkextlib/tcllib/tooltip.rd")
(find-rurima "--- delay(millisecs = None)" "== Class Methods" "= module Tk::Tcllib::Tooltip" "refm/api/src/tkextlib/tcllib/tooltip.rd")
(find-rurima "--- delay=(millisecs)" "== Class Methods" "= module Tk::Tcllib::Tooltip" "refm/api/src/tkextlib/tcllib/tooltip.rd")
(find-rurima "--- disable" "== Class Methods" "= module Tk::Tcllib::Tooltip" "refm/api/src/tkextlib/tcllib/tooltip.rd")
(find-rurima "--- off" "== Class Methods" "= module Tk::Tcllib::Tooltip" "refm/api/src/tkextlib/tcllib/tooltip.rd")
(find-rurima "--- enable" "== Class Methods" "= module Tk::Tcllib::Tooltip" "refm/api/src/tkextlib/tcllib/tooltip.rd")
(find-rurima "--- on" "== Class Methods" "= module Tk::Tcllib::Tooltip" "refm/api/src/tkextlib/tcllib/tooltip.rd")
(find-rurima "--- register(widget, msg, keys = nil)" "== Class Methods" "= module Tk::Tcllib::Tooltip" "refm/api/src/tkextlib/tcllib/tooltip.rd")
(find-rurima "--- erase(widget)" "== Class Methods" "= module Tk::Tcllib::Tooltip" "refm/api/src/tkextlib/tcllib/tooltip.rd")
(find-rurima "= class Tk::Tcllib::Plotchart::Piechart < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__Piechart")
(find-rurima "== Class Methods" "= class Tk::Tcllib::Plotchart::Piechart < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__Piechart")
(find-rurima "--- new(*args)" "== Class Methods" "= class Tk::Tcllib::Plotchart::Piechart < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__Piechart")
(find-rurima "== Instance Methods" "= class Tk::Tcllib::Plotchart::Piechart < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__Piechart")
(find-rurima "--- plot(*dat)" "== Instance Methods" "= class Tk::Tcllib::Plotchart::Piechart < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__Piechart")
(find-rurima "= class Tk::Tcllib::SuperFrame < TkWindow" "refm/api/src/tkextlib/tcllib/superframe.rd")
(find-rurima "== Class Methods" "= class Tk::Tcllib::SuperFrame < TkWindow" "refm/api/src/tkextlib/tcllib/superframe.rd")
(find-rurima "--- package_name" "== Class Methods" "= class Tk::Tcllib::SuperFrame < TkWindow" "refm/api/src/tkextlib/tcllib/superframe.rd")
(find-rurima "--- package_version" "== Class Methods" "= class Tk::Tcllib::SuperFrame < TkWindow" "refm/api/src/tkextlib/tcllib/superframe.rd")
(find-rurima "== Instance Methods" "= class Tk::Tcllib::SuperFrame < TkWindow" "refm/api/src/tkextlib/tcllib/superframe.rd")
(find-rurima "--- labelwidget" "== Instance Methods" "= class Tk::Tcllib::SuperFrame < TkWindow" "refm/api/src/tkextlib/tcllib/superframe.rd")
(find-rurima "= class Tk::Tcllib::Superframe" "refm/api/src/tkextlib/tcllib/superframe.rd")
(find-rurima "= class Tk::Tcllib::Plotchart::HorizontalBarchart < Barchart" "refm/api/src/tkextlib/tcllib/Plotchart__HorizontalBarchart")
(find-rurima "= class Tk::Tcllib::ScreenRuler < TkWindow" "refm/api/src/tkextlib/tcllib/screenruler.rd")
(find-rurima "== Class Methods" "= class Tk::Tcllib::ScreenRuler < TkWindow" "refm/api/src/tkextlib/tcllib/screenruler.rd")
(find-rurima "--- package_name" "== Class Methods" "= class Tk::Tcllib::ScreenRuler < TkWindow" "refm/api/src/tkextlib/tcllib/screenruler.rd")
(find-rurima "--- package_version" "== Class Methods" "= class Tk::Tcllib::ScreenRuler < TkWindow" "refm/api/src/tkextlib/tcllib/screenruler.rd")
(find-rurima "== Instance Methods" "= class Tk::Tcllib::ScreenRuler < TkWindow" "refm/api/src/tkextlib/tcllib/screenruler.rd")
(find-rurima "--- display" "== Instance Methods" "= class Tk::Tcllib::ScreenRuler < TkWindow" "refm/api/src/tkextlib/tcllib/screenruler.rd")
(find-rurima "--- hide" "== Instance Methods" "= class Tk::Tcllib::ScreenRuler < TkWindow" "refm/api/src/tkextlib/tcllib/screenruler.rd")
(find-rurima "= class Tk::Tcllib::Screenruler" "refm/api/src/tkextlib/tcllib/screenruler.rd")
(find-rurima "= module Tk::Tcllib::Style" "refm/api/src/tkextlib/tcllib/style.rd")
(find-rurima "== Singleton Methods" "= module Tk::Tcllib::Style" "refm/api/src/tkextlib/tcllib/style.rd")
(find-rurima "--- package_name" "== Singleton Methods" "= module Tk::Tcllib::Style" "refm/api/src/tkextlib/tcllib/style.rd")
(find-rurima "--- package_version" "== Singleton Methods" "= module Tk::Tcllib::Style" "refm/api/src/tkextlib/tcllib/style.rd")
(find-rurima "--- names" "== Singleton Methods" "= module Tk::Tcllib::Style" "refm/api/src/tkextlib/tcllib/style.rd")
(find-rurima "--- use(style)" "== Singleton Methods" "= module Tk::Tcllib::Style" "refm/api/src/tkextlib/tcllib/style.rd")
(find-rurima "= module Tk::Tcllib::Tkpiechart" "refm/api/src/tkextlib/tcllib/tkpiechart.rd")
(find-rurima "== Singleton Methods" "= module Tk::Tcllib::Tkpiechart" "refm/api/src/tkextlib/tcllib/tkpiechart.rd")
(find-rurima "--- package_name" "== Singleton Methods" "= module Tk::Tcllib::Tkpiechart" "refm/api/src/tkextlib/tcllib/tkpiechart.rd")
(find-rurima "--- package_version" "== Singleton Methods" "= module Tk::Tcllib::Tkpiechart" "refm/api/src/tkextlib/tcllib/tkpiechart.rd")
(find-rurima "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "== Class Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- package_name" "== Class Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- package_version" "== Class Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- use_Tile?" "== Class Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- getTablelistPath(descendant)" "== Class Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- convEventFields(descendant, x, y)" "== Class Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- addBWidgetEntry(name = None)" "== Class Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- addBWidgetSpinBox(name = None)" "== Class Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- addBWidgetComboBox(name = None)" "== Class Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- addIncrEntryfield(name = None)" "== Class Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- addIncrDateTimeWidget(type, seconds = false, name = None)" "== Class Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- addIncrSpinner(name = None)" "== Class Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- addIncrSpinint(name = None)" "== Class Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- addIncrCombobox(name = None)" "== Class Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- addOakleyCombobox(name = None)" "== Class Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- addDateMentry(format, separator, gmt = false, name = None)" "== Class Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- addTimeMentry(format, separator, gmt = false, name = None)" "== Class Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- addFixedPointMentry(count1, count2, comma = false, name = None)" "== Class Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- addIPAddrMentry(name = None)" "== Class Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- activate(index)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- activate_cell(index)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- activatecell(index)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- get_attrib(name = nil)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- set_attrib(*args)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- bbox(index)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- bodypath" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- bodytag" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- cancel_editing " "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- cancelediting" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- cellindex(idx)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- cellselection_anchor(idx)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- cellselection_clear(first, last = nil)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- cellselection_includes(idx)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- cellselection_set(first, last = nil)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- columncount" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- columnindex(idx)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- containing(y)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- containing_cell(x, y)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- containingcell(x, y)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- containing_column(x)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- containingcolumn(x)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- curcellselection" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- curselection" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- delete_items(first, last = nil)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- delete(first, last = nil)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- deleteitems(first, last = nil)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- delete_columns(first, last = nil)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- deletecolumns(first, last = nil)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- edit_cell(idx)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- editcell(idx)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- editwinpath" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- entrypath" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- fill_column(idx, txt)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- fillcolumn(idx, txt)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- finish_editing" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- finishediting" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- get(first, last = nil)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- get_cells(first, last = nil)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- getcells(first, last = nil)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- get_columns(first, last = nil)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- getcolumns(first, last = nil)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- get_keys(first, last = nil)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- getkeys(first, last = nil)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- imagelabelpath(idx)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- index(idx)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- insert(idx, *items)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- insert_columnlist(idx, columnlist)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- insertcolumnlist(idx, columnlist)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- insert_columns(idx, *args)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- insertcolumns(idx, *args)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- insert_list(idx, list)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- insertlist(idx, list)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- itemlistvar" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- labelpath(idx)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- labels" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- move(src, target)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- move_column(src, target)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- movecolumn(src, target)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- nearest(y)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- nearest_cell(x, y)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- nearestcell(x, y)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- nearest_column(x)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- nearestcolumn(x)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- reject_input" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- rejectinput" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- reset_sortinfo" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- resetsortinfo" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- scan_mark(x, y)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- scan_dragto(x, y)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- see(idx)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- see_cell(idx)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- seecell(idx)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- see_column(idx)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- seecolumn(idx)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- selection_anchor(idx)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- selection_clear(first, last = nil)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- selection_includes(idx)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- selection_set(first, last = nil)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- separatorpath(idx = nil)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- separators" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- size" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- sort(order = nil)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- sort_increasing" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- sort_decreasing" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- sort_by_column(idx, order = nil)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- sort_by_column_increasing(idx)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- sort_by_column_decreasing(idx)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- sortcolumn" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- sortorder" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- toggle_visibility(first, last = nil)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- togglevisibility(first, last = nil)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "--- windowpath(idx)" "== Instance Methods" "= class Tk::Tcllib::Tablelist < TkWindow" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "= class Tk::Tcllib::TableList" "refm/api/src/tkextlib/tcllib/tablelist_core.rd")
(find-rurima "= class Tk::Tcllib::Plotchart::PolarPlot < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__PolarPlot")
(find-rurima "== Class Methods" "= class Tk::Tcllib::Plotchart::PolarPlot < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__PolarPlot")
(find-rurima "--- new(*args)" "== Class Methods" "= class Tk::Tcllib::Plotchart::PolarPlot < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__PolarPlot")
(find-rurima "== Instance Methods" "= class Tk::Tcllib::Plotchart::PolarPlot < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__PolarPlot")
(find-rurima "--- plot(series, radius, angle)" "== Instance Methods" "= class Tk::Tcllib::Plotchart::PolarPlot < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__PolarPlot")
(find-rurima "--- dataconfig(series, key, value = None)" "== Instance Methods" "= class Tk::Tcllib::Plotchart::PolarPlot < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__PolarPlot")
(find-rurima "= class Tk::Tcllib::Plotchart::Polarplot" "refm/api/src/tkextlib/tcllib/Plotchart__PolarPlot")
(find-rurima "= class Tk::Tcllib::Plotchart::Stripchart < XYPlot" "refm/api/src/tkextlib/tcllib/Plotchart__Stripchart")
(find-rurima "= module Tk::Tcllib::Tkpiechart::ConfigMethod" "refm/api/src/tkextlib/tcllib/Tkpiechart__ConfigMethod")
(find-rurima "= class Tk::Tcllib::ICO < TkImage" "refm/api/src/tkextlib/tcllib/ico.rd")
(find-rurima "== Class Methods" "= class Tk::Tcllib::ICO < TkImage" "refm/api/src/tkextlib/tcllib/ico.rd")
(find-rurima "--- package_name" "== Class Methods" "= class Tk::Tcllib::ICO < TkImage" "refm/api/src/tkextlib/tcllib/ico.rd")
(find-rurima "--- package_version" "== Class Methods" "= class Tk::Tcllib::ICO < TkImage" "refm/api/src/tkextlib/tcllib/ico.rd")
(find-rurima "--- list(file, keys = nil)" "== Class Methods" "= class Tk::Tcllib::ICO < TkImage" "refm/api/src/tkextlib/tcllib/ico.rd")
(find-rurima "--- get(file, index, keys = nil)" "== Class Methods" "= class Tk::Tcllib::ICO < TkImage" "refm/api/src/tkextlib/tcllib/ico.rd")
(find-rurima "--- get_image(file, index, keys = {})" "== Class Methods" "= class Tk::Tcllib::ICO < TkImage" "refm/api/src/tkextlib/tcllib/ico.rd")
(find-rurima "--- get_data(file, index, keys = {})" "== Class Methods" "= class Tk::Tcllib::ICO < TkImage" "refm/api/src/tkextlib/tcllib/ico.rd")
(find-rurima "--- write(file, index, depth, data, keys = nil)" "== Class Methods" "= class Tk::Tcllib::ICO < TkImage" "refm/api/src/tkextlib/tcllib/ico.rd")
(find-rurima "--- copy(from_file, from_index, to_file, to_index, keys = nil)" "== Class Methods" "= class Tk::Tcllib::ICO < TkImage" "refm/api/src/tkextlib/tcllib/ico.rd")
(find-rurima "--- exe_to_ico(exe_file, ico_file, keys = nil)" "== Class Methods" "= class Tk::Tcllib::ICO < TkImage" "refm/api/src/tkextlib/tcllib/ico.rd")
(find-rurima "--- clear_cache(file = None)" "== Class Methods" "= class Tk::Tcllib::ICO < TkImage" "refm/api/src/tkextlib/tcllib/ico.rd")
(find-rurima "--- transparent_color(image, color)" "== Class Methods" "= class Tk::Tcllib::ICO < TkImage" "refm/api/src/tkextlib/tcllib/ico.rd")
(find-rurima "--- show(file, keys = nil)" "== Class Methods" "= class Tk::Tcllib::ICO < TkImage" "refm/api/src/tkextlib/tcllib/ico.rd")
(find-rurima "--- new(file, index, keys = nil)" "== Class Methods" "= class Tk::Tcllib::ICO < TkImage" "refm/api/src/tkextlib/tcllib/ico.rd")
(find-rurima "== Instance Methods" "= class Tk::Tcllib::ICO < TkImage" "refm/api/src/tkextlib/tcllib/ico.rd")
(find-rurima "--- write(file, index, depth, keys = nil)" "== Instance Methods" "= class Tk::Tcllib::ICO < TkImage" "refm/api/src/tkextlib/tcllib/ico.rd")
(find-rurima "--- transparent_color(color)" "== Instance Methods" "= class Tk::Tcllib::ICO < TkImage" "refm/api/src/tkextlib/tcllib/ico.rd")
(find-rurima "= class Tk::Tcllib::GetString_Dialog < TkWindow" "refm/api/src/tkextlib/tcllib/getstring.rd")
(find-rurima "== Class Methods" "= class Tk::Tcllib::GetString_Dialog < TkWindow" "refm/api/src/tkextlib/tcllib/getstring.rd")
(find-rurima "--- package_name" "== Class Methods" "= class Tk::Tcllib::GetString_Dialog < TkWindow" "refm/api/src/tkextlib/tcllib/getstring.rd")
(find-rurima "--- package_version" "== Class Methods" "= class Tk::Tcllib::GetString_Dialog < TkWindow" "refm/api/src/tkextlib/tcllib/getstring.rd")
(find-rurima "--- show(*args)" "== Class Methods" "= class Tk::Tcllib::GetString_Dialog < TkWindow" "refm/api/src/tkextlib/tcllib/getstring.rd")
(find-rurima "--- display(*args)" "== Class Methods" "= class Tk::Tcllib::GetString_Dialog < TkWindow" "refm/api/src/tkextlib/tcllib/getstring.rd")
(find-rurima "--- new(*args)" "== Class Methods" "= class Tk::Tcllib::GetString_Dialog < TkWindow" "refm/api/src/tkextlib/tcllib/getstring.rd")
(find-rurima "== Instance Methods" "= class Tk::Tcllib::GetString_Dialog < TkWindow" "refm/api/src/tkextlib/tcllib/getstring.rd")
(find-rurima "--- show" "== Instance Methods" "= class Tk::Tcllib::GetString_Dialog < TkWindow" "refm/api/src/tkextlib/tcllib/getstring.rd")
(find-rurima "--- status" "== Instance Methods" "= class Tk::Tcllib::GetString_Dialog < TkWindow" "refm/api/src/tkextlib/tcllib/getstring.rd")
(find-rurima "--- value" "== Instance Methods" "= class Tk::Tcllib::GetString_Dialog < TkWindow" "refm/api/src/tkextlib/tcllib/getstring.rd")
(find-rurima "--- cget(slot)" "== Instance Methods" "= class Tk::Tcllib::GetString_Dialog < TkWindow" "refm/api/src/tkextlib/tcllib/getstring.rd")
(find-rurima "--- configure(slot, value = None)" "== Instance Methods" "= class Tk::Tcllib::GetString_Dialog < TkWindow" "refm/api/src/tkextlib/tcllib/getstring.rd")
(find-rurima "--- configinfo(slot = nil)" "== Instance Methods" "= class Tk::Tcllib::GetString_Dialog < TkWindow" "refm/api/src/tkextlib/tcllib/getstring.rd")
(find-rurima "= class Tk::Tcllib::Plotchart::Plot3D < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__Plot3D")
(find-rurima "== Class Methods" "= class Tk::Tcllib::Plotchart::Plot3D < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__Plot3D")
(find-rurima "--- new(*args)" "== Class Methods" "= class Tk::Tcllib::Plotchart::Plot3D < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__Plot3D")
(find-rurima "== Instance Methods" "= class Tk::Tcllib::Plotchart::Plot3D < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__Plot3D")
(find-rurima "--- plot_function(cmd = Proc.new)" "== Instance Methods" "= class Tk::Tcllib::Plotchart::Plot3D < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__Plot3D")
(find-rurima "--- plot_funcont(conts, cmd = Proc.new)" "== Instance Methods" "= class Tk::Tcllib::Plotchart::Plot3D < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__Plot3D")
(find-rurima "--- grid_size(nxcells, nycells)" "== Instance Methods" "= class Tk::Tcllib::Plotchart::Plot3D < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__Plot3D")
(find-rurima "--- plot_data(dat)" "== Instance Methods" "= class Tk::Tcllib::Plotchart::Plot3D < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__Plot3D")
(find-rurima "--- colour(fill, border)" "== Instance Methods" "= class Tk::Tcllib::Plotchart::Plot3D < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__Plot3D")
(find-rurima "--- colours(fill, border)" "== Instance Methods" "= class Tk::Tcllib::Plotchart::Plot3D < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__Plot3D")
(find-rurima "--- colors(fill, border)" "== Instance Methods" "= class Tk::Tcllib::Plotchart::Plot3D < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__Plot3D")
(find-rurima "--- color(fill, border)" "== Instance Methods" "= class Tk::Tcllib::Plotchart::Plot3D < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__Plot3D")
(find-rurima "= class Tk::Tcllib::CText < TkText" "refm/api/src/tkextlib/tcllib/ctext.rd")
(find-rurima "== Class Methods" "= class Tk::Tcllib::CText < TkText" "refm/api/src/tkextlib/tcllib/ctext.rd")
(find-rurima "--- package_name" "== Class Methods" "= class Tk::Tcllib::CText < TkText" "refm/api/src/tkextlib/tcllib/ctext.rd")
(find-rurima "--- package_version" "== Class Methods" "= class Tk::Tcllib::CText < TkText" "refm/api/src/tkextlib/tcllib/ctext.rd")
(find-rurima "== Instance Methods" "= class Tk::Tcllib::CText < TkText" "refm/api/src/tkextlib/tcllib/ctext.rd")
(find-rurima "--- append(*args)" "== Instance Methods" "= class Tk::Tcllib::CText < TkText" "refm/api/src/tkextlib/tcllib/ctext.rd")
(find-rurima "--- copy" "== Instance Methods" "= class Tk::Tcllib::CText < TkText" "refm/api/src/tkextlib/tcllib/ctext.rd")
(find-rurima "--- cut" "== Instance Methods" "= class Tk::Tcllib::CText < TkText" "refm/api/src/tkextlib/tcllib/ctext.rd")
(find-rurima "--- fast_delete(*args)" "== Instance Methods" "= class Tk::Tcllib::CText < TkText" "refm/api/src/tkextlib/tcllib/ctext.rd")
(find-rurima "--- fast_insert(*args)" "== Instance Methods" "= class Tk::Tcllib::CText < TkText" "refm/api/src/tkextlib/tcllib/ctext.rd")
(find-rurima "--- highlight(*args)" "== Instance Methods" "= class Tk::Tcllib::CText < TkText" "refm/api/src/tkextlib/tcllib/ctext.rd")
(find-rurima "--- paste" "== Instance Methods" "= class Tk::Tcllib::CText < TkText" "refm/api/src/tkextlib/tcllib/ctext.rd")
(find-rurima "--- edit(*args)" "== Instance Methods" "= class Tk::Tcllib::CText < TkText" "refm/api/src/tkextlib/tcllib/ctext.rd")
(find-rurima "--- add_highlight_class(klass, col, *keywords)" "== Instance Methods" "= class Tk::Tcllib::CText < TkText" "refm/api/src/tkextlib/tcllib/ctext.rd")
(find-rurima "--- add_highlight_class_for_special_chars(klass, col, *chrs)" "== Instance Methods" "= class Tk::Tcllib::CText < TkText" "refm/api/src/tkextlib/tcllib/ctext.rd")
(find-rurima "--- add_highlight_class_for_regexp(klass, col, tcl_regexp)" "== Instance Methods" "= class Tk::Tcllib::CText < TkText" "refm/api/src/tkextlib/tcllib/ctext.rd")
(find-rurima "--- add_highlight_class_with_only_char_start(klass, col, chr)" "== Instance Methods" "= class Tk::Tcllib::CText < TkText" "refm/api/src/tkextlib/tcllib/ctext.rd")
(find-rurima "--- clear_highlight_classes" "== Instance Methods" "= class Tk::Tcllib::CText < TkText" "refm/api/src/tkextlib/tcllib/ctext.rd")
(find-rurima "--- get_highlight_classes" "== Instance Methods" "= class Tk::Tcllib::CText < TkText" "refm/api/src/tkextlib/tcllib/ctext.rd")
(find-rurima "--- delete_highlight_class(klass)" "== Instance Methods" "= class Tk::Tcllib::CText < TkText" "refm/api/src/tkextlib/tcllib/ctext.rd")
(find-rurima "--- enable_C_comments" "== Instance Methods" "= class Tk::Tcllib::CText < TkText" "refm/api/src/tkextlib/tcllib/ctext.rd")
(find-rurima "--- disable_C_comments" "== Instance Methods" "= class Tk::Tcllib::CText < TkText" "refm/api/src/tkextlib/tcllib/ctext.rd")
(find-rurima "--- find_next_char(idx, chr)" "== Instance Methods" "= class Tk::Tcllib::CText < TkText" "refm/api/src/tkextlib/tcllib/ctext.rd")
(find-rurima "--- find_next_space(idx)" "== Instance Methods" "= class Tk::Tcllib::CText < TkText" "refm/api/src/tkextlib/tcllib/ctext.rd")
(find-rurima "--- find_previous_space(idx)" "== Instance Methods" "= class Tk::Tcllib::CText < TkText" "refm/api/src/tkextlib/tcllib/ctext.rd")
(find-rurima "--- set_update_proc(cmd = Proc.new)" "== Instance Methods" "= class Tk::Tcllib::CText < TkText" "refm/api/src/tkextlib/tcllib/ctext.rd")
(find-rurima "--- modified?(mode)" "== Instance Methods" "= class Tk::Tcllib::CText < TkText" "refm/api/src/tkextlib/tcllib/ctext.rd")
(find-rurima "= module Tk::Tcllib::Autoscroll" "refm/api/src/tkextlib/tcllib/autoscroll.rd")
(find-rurima "== Singleton Methods" "= module Tk::Tcllib::Autoscroll" "refm/api/src/tkextlib/tcllib/autoscroll.rd")
(find-rurima "--- package_name" "== Singleton Methods" "= module Tk::Tcllib::Autoscroll" "refm/api/src/tkextlib/tcllib/autoscroll.rd")
(find-rurima "--- package_version" "== Singleton Methods" "= module Tk::Tcllib::Autoscroll" "refm/api/src/tkextlib/tcllib/autoscroll.rd")
(find-rurima "--- autoscroll(win)" "== Singleton Methods" "= module Tk::Tcllib::Autoscroll" "refm/api/src/tkextlib/tcllib/autoscroll.rd")
(find-rurima "--- unautoscroll(win)" "== Singleton Methods" "= module Tk::Tcllib::Autoscroll" "refm/api/src/tkextlib/tcllib/autoscroll.rd")
(find-rurima "--- wrap" "== Singleton Methods" "= module Tk::Tcllib::Autoscroll" "refm/api/src/tkextlib/tcllib/autoscroll.rd")
(find-rurima "--- unwrap" "== Singleton Methods" "= module Tk::Tcllib::Autoscroll" "refm/api/src/tkextlib/tcllib/autoscroll.rd")
(find-rurima "= reopen Tk::Scrollable" "refm/api/src/tkextlib/tcllib/autoscroll.rd")
(find-rurima "== Instance Methods" "= reopen Tk::Scrollable" "refm/api/src/tkextlib/tcllib/autoscroll.rd")
(find-rurima "--- autoscroll(mode = nil)" "== Instance Methods" "= reopen Tk::Scrollable" "refm/api/src/tkextlib/tcllib/autoscroll.rd")
(find-rurima "--- unautoscroll(mode = nil)" "== Instance Methods" "= reopen Tk::Scrollable" "refm/api/src/tkextlib/tcllib/autoscroll.rd")
(find-rurima "= reopen TkScrollbar" "refm/api/src/tkextlib/tcllib/autoscroll.rd")
(find-rurima "== Instance Methods" "= reopen TkScrollbar" "refm/api/src/tkextlib/tcllib/autoscroll.rd")
(find-rurima "--- autoscroll" "== Instance Methods" "= reopen TkScrollbar" "refm/api/src/tkextlib/tcllib/autoscroll.rd")
(find-rurima "--- unautoscroll" "== Instance Methods" "= reopen TkScrollbar" "refm/api/src/tkextlib/tcllib/autoscroll.rd")
(find-rurima "= module Tk::Tcllib::Plotchart::ChartMethod" "refm/api/src/tkextlib/tcllib/Plotchart__ChartMethod")
(find-rurima "== Instance Methods" "= module Tk::Tcllib::Plotchart::ChartMethod" "refm/api/src/tkextlib/tcllib/Plotchart__ChartMethod")
(find-rurima "--- title(str)" "== Instance Methods" "= module Tk::Tcllib::Plotchart::ChartMethod" "refm/api/src/tkextlib/tcllib/Plotchart__ChartMethod")
(find-rurima "--- save_plot(filename)" "== Instance Methods" "= module Tk::Tcllib::Plotchart::ChartMethod" "refm/api/src/tkextlib/tcllib/Plotchart__ChartMethod")
(find-rurima "--- xtext(str)" "== Instance Methods" "= module Tk::Tcllib::Plotchart::ChartMethod" "refm/api/src/tkextlib/tcllib/Plotchart__ChartMethod")
(find-rurima "--- ytext(str)" "== Instance Methods" "= module Tk::Tcllib::Plotchart::ChartMethod" "refm/api/src/tkextlib/tcllib/Plotchart__ChartMethod")
(find-rurima "--- xconfig(key, value = None)" "== Instance Methods" "= module Tk::Tcllib::Plotchart::ChartMethod" "refm/api/src/tkextlib/tcllib/Plotchart__ChartMethod")
(find-rurima "--- yconfig(key, value = None)" "== Instance Methods" "= module Tk::Tcllib::Plotchart::ChartMethod" "refm/api/src/tkextlib/tcllib/Plotchart__ChartMethod")
(find-rurima "--- view_port(*args)" "== Instance Methods" "= module Tk::Tcllib::Plotchart::ChartMethod" "refm/api/src/tkextlib/tcllib/Plotchart__ChartMethod")
(find-rurima "--- world_coordinates(*args)" "== Instance Methods" "= module Tk::Tcllib::Plotchart::ChartMethod" "refm/api/src/tkextlib/tcllib/Plotchart__ChartMethod")
(find-rurima "--- world_3D_coordinates(*args) " "== Instance Methods" "= module Tk::Tcllib::Plotchart::ChartMethod" "refm/api/src/tkextlib/tcllib/Plotchart__ChartMethod")
(find-rurima "--- coords_to_pixel(x, y)" "== Instance Methods" "= module Tk::Tcllib::Plotchart::ChartMethod" "refm/api/src/tkextlib/tcllib/Plotchart__ChartMethod")
(find-rurima "--- coords_3D_to_pixel(x, y, z)" "== Instance Methods" "= module Tk::Tcllib::Plotchart::ChartMethod" "refm/api/src/tkextlib/tcllib/Plotchart__ChartMethod")
(find-rurima "--- polar_coordinates(radmax)" "== Instance Methods" "= module Tk::Tcllib::Plotchart::ChartMethod" "refm/api/src/tkextlib/tcllib/Plotchart__ChartMethod")
(find-rurima "--- polar_to_pixel(rad, phi)" "== Instance Methods" "= module Tk::Tcllib::Plotchart::ChartMethod" "refm/api/src/tkextlib/tcllib/Plotchart__ChartMethod")
(find-rurima "--- pixel_to_coords(x, y)" "== Instance Methods" "= module Tk::Tcllib::Plotchart::ChartMethod" "refm/api/src/tkextlib/tcllib/Plotchart__ChartMethod")
(find-rurima "--- determine_scale(xmax, ymax)" "== Instance Methods" "= module Tk::Tcllib::Plotchart::ChartMethod" "refm/api/src/tkextlib/tcllib/Plotchart__ChartMethod")
(find-rurima "--- set_zoom_pan" "== Instance Methods" "= module Tk::Tcllib::Plotchart::ChartMethod" "refm/api/src/tkextlib/tcllib/Plotchart__ChartMethod")
(find-rurima "= class Tk::Tcllib::Tkpiechart::Slice < TkcItem" "refm/api/src/tkextlib/tcllib/Tkpiechart__Slice")
(find-rurima "== Class Methods" "= class Tk::Tcllib::Tkpiechart::Slice < TkcItem" "refm/api/src/tkextlib/tcllib/Tkpiechart__Slice")
(find-rurima "--- new(pie, *args)" "== Class Methods" "= class Tk::Tcllib::Tkpiechart::Slice < TkcItem" "refm/api/src/tkextlib/tcllib/Tkpiechart__Slice")
(find-rurima "== Instance Methods" "= class Tk::Tcllib::Tkpiechart::Slice < TkcItem" "refm/api/src/tkextlib/tcllib/Tkpiechart__Slice")
(find-rurima "--- tag_key" "== Instance Methods" "= class Tk::Tcllib::Tkpiechart::Slice < TkcItem" "refm/api/src/tkextlib/tcllib/Tkpiechart__Slice")
(find-rurima "--- tag" "== Instance Methods" "= class Tk::Tcllib::Tkpiechart::Slice < TkcItem" "refm/api/src/tkextlib/tcllib/Tkpiechart__Slice")
(find-rurima "--- pie" "== Instance Methods" "= class Tk::Tcllib::Tkpiechart::Slice < TkcItem" "refm/api/src/tkextlib/tcllib/Tkpiechart__Slice")
(find-rurima "--- delete" "== Instance Methods" "= class Tk::Tcllib::Tkpiechart::Slice < TkcItem" "refm/api/src/tkextlib/tcllib/Tkpiechart__Slice")
(find-rurima "--- size(share, disp = None)" "== Instance Methods" "= class Tk::Tcllib::Tkpiechart::Slice < TkcItem" "refm/api/src/tkextlib/tcllib/Tkpiechart__Slice")
(find-rurima "--- label(text)" "== Instance Methods" "= class Tk::Tcllib::Tkpiechart::Slice < TkcItem" "refm/api/src/tkextlib/tcllib/Tkpiechart__Slice")
(find-rurima "= class Tk::Tcllib::Plotchart::PlotSeries < TkObject" "refm/api/src/tkextlib/tcllib/Plotchart__PlotSeries")
(find-rurima "== Class Methods" "= class Tk::Tcllib::Plotchart::PlotSeries < TkObject" "refm/api/src/tkextlib/tcllib/Plotchart__PlotSeries")
(find-rurima "--- id2obj(chart, id)" "== Class Methods" "= class Tk::Tcllib::Plotchart::PlotSeries < TkObject" "refm/api/src/tkextlib/tcllib/Plotchart__PlotSeries")
(find-rurima "--- new(chart, keys = nil)" "== Class Methods" "= class Tk::Tcllib::Plotchart::PlotSeries < TkObject" "refm/api/src/tkextlib/tcllib/Plotchart__PlotSeries")
(find-rurima "== Instance Methods" "= class Tk::Tcllib::Plotchart::PlotSeries < TkObject" "refm/api/src/tkextlib/tcllib/Plotchart__PlotSeries")
(find-rurima "--- plot(*args)" "== Instance Methods" "= class Tk::Tcllib::Plotchart::PlotSeries < TkObject" "refm/api/src/tkextlib/tcllib/Plotchart__PlotSeries")
(find-rurima "--- dataconfig(key, value = None)" "== Instance Methods" "= class Tk::Tcllib::Plotchart::PlotSeries < TkObject" "refm/api/src/tkextlib/tcllib/Plotchart__PlotSeries")
(find-rurima "= module Tk::Tcllib::Widget" "refm/api/src/tkextlib/tcllib/widget.rd")
(find-rurima "== Singleton Methods" "= module Tk::Tcllib::Widget" "refm/api/src/tkextlib/tcllib/widget.rd")
(find-rurima "--- package_name" "== Singleton Methods" "= module Tk::Tcllib::Widget" "refm/api/src/tkextlib/tcllib/widget.rd")
(find-rurima "--- package_version" "== Singleton Methods" "= module Tk::Tcllib::Widget" "refm/api/src/tkextlib/tcllib/widget.rd")
(find-rurima "= class Tk::Tcllib::Datefield < TkEntry" "refm/api/src/tkextlib/tcllib/datefield.rd")
(find-rurima "== Class Methods" "= class Tk::Tcllib::Datefield < TkEntry" "refm/api/src/tkextlib/tcllib/datefield.rd")
(find-rurima "--- package_name" "== Class Methods" "= class Tk::Tcllib::Datefield < TkEntry" "refm/api/src/tkextlib/tcllib/datefield.rd")
(find-rurima "--- package_version" "== Class Methods" "= class Tk::Tcllib::Datefield < TkEntry" "refm/api/src/tkextlib/tcllib/datefield.rd")
(find-rurima "= class Tk::Tcllib::DateField" "refm/api/src/tkextlib/tcllib/datefield.rd")
(find-rurima "= module Tk::Tcllib::Plotchart" "refm/api/src/tkextlib/tcllib/Plotchart")
(find-rurima "== Singleton Methods" "= module Tk::Tcllib::Plotchart" "refm/api/src/tkextlib/tcllib/Plotchart")
(find-rurima "--- package_name" "== Singleton Methods" "= module Tk::Tcllib::Plotchart" "refm/api/src/tkextlib/tcllib/Plotchart")
(find-rurima "--- package_version" "== Singleton Methods" "= module Tk::Tcllib::Plotchart" "refm/api/src/tkextlib/tcllib/Plotchart")
(find-rurima "--- view_port(w, *args)" "== Singleton Methods" "= module Tk::Tcllib::Plotchart" "refm/api/src/tkextlib/tcllib/Plotchart")
(find-rurima "--- world_coordinates(w, *args)" "== Singleton Methods" "= module Tk::Tcllib::Plotchart" "refm/api/src/tkextlib/tcllib/Plotchart")
(find-rurima "--- world_3D_coordinates(w, *args) " "== Singleton Methods" "= module Tk::Tcllib::Plotchart" "refm/api/src/tkextlib/tcllib/Plotchart")
(find-rurima "--- coords_to_pixel(w, x, y)" "== Singleton Methods" "= module Tk::Tcllib::Plotchart" "refm/api/src/tkextlib/tcllib/Plotchart")
(find-rurima "--- coords_3D_to_pixel(w, x, y, z)" "== Singleton Methods" "= module Tk::Tcllib::Plotchart" "refm/api/src/tkextlib/tcllib/Plotchart")
(find-rurima "--- polar_coordinates(w, radmax)" "== Singleton Methods" "= module Tk::Tcllib::Plotchart" "refm/api/src/tkextlib/tcllib/Plotchart")
(find-rurima "--- polar_to_pixel(w, rad, phi)" "== Singleton Methods" "= module Tk::Tcllib::Plotchart" "refm/api/src/tkextlib/tcllib/Plotchart")
(find-rurima "--- pixel_to_coords(w, x, y)" "== Singleton Methods" "= module Tk::Tcllib::Plotchart" "refm/api/src/tkextlib/tcllib/Plotchart")
(find-rurima "--- determine_scale(w, xmax, ymax)" "== Singleton Methods" "= module Tk::Tcllib::Plotchart" "refm/api/src/tkextlib/tcllib/Plotchart")
(find-rurima "--- set_zoom_pan(w)" "== Singleton Methods" "= module Tk::Tcllib::Plotchart" "refm/api/src/tkextlib/tcllib/Plotchart")
(find-rurima "= class Tk::Tcllib::Widget::Dialog < TkWindow" "refm/api/src/tkextlib/tcllib/dialog.rd")
(find-rurima "== Class Methods" "= class Tk::Tcllib::Widget::Dialog < TkWindow" "refm/api/src/tkextlib/tcllib/dialog.rd")
(find-rurima "--- package_name" "== Class Methods" "= class Tk::Tcllib::Widget::Dialog < TkWindow" "refm/api/src/tkextlib/tcllib/dialog.rd")
(find-rurima "--- package_version" "== Class Methods" "= class Tk::Tcllib::Widget::Dialog < TkWindow" "refm/api/src/tkextlib/tcllib/dialog.rd")
(find-rurima "== Instance Methods" "= class Tk::Tcllib::Widget::Dialog < TkWindow" "refm/api/src/tkextlib/tcllib/dialog.rd")
(find-rurima "--- add(what, *args)" "== Instance Methods" "= class Tk::Tcllib::Widget::Dialog < TkWindow" "refm/api/src/tkextlib/tcllib/dialog.rd")
(find-rurima "--- get_frame" "== Instance Methods" "= class Tk::Tcllib::Widget::Dialog < TkWindow" "refm/api/src/tkextlib/tcllib/dialog.rd")
(find-rurima "--- set_widget(widget)" "== Instance Methods" "= class Tk::Tcllib::Widget::Dialog < TkWindow" "refm/api/src/tkextlib/tcllib/dialog.rd")
(find-rurima "--- display" "== Instance Methods" "= class Tk::Tcllib::Widget::Dialog < TkWindow" "refm/api/src/tkextlib/tcllib/dialog.rd")
(find-rurima "--- cancel" "== Instance Methods" "= class Tk::Tcllib::Widget::Dialog < TkWindow" "refm/api/src/tkextlib/tcllib/dialog.rd")
(find-rurima "--- close(reason = None)" "== Instance Methods" "= class Tk::Tcllib::Widget::Dialog < TkWindow" "refm/api/src/tkextlib/tcllib/dialog.rd")
(find-rurima "--- withdraw" "== Instance Methods" "= class Tk::Tcllib::Widget::Dialog < TkWindow" "refm/api/src/tkextlib/tcllib/dialog.rd")
(find-rurima "= class Tk::Tcllib::Widget::Swaplist_Dialog < TkWindow" "refm/api/src/tkextlib/tcllib/swaplist.rd")
(find-rurima "== Class Methods" "= class Tk::Tcllib::Widget::Swaplist_Dialog < TkWindow" "refm/api/src/tkextlib/tcllib/swaplist.rd")
(find-rurima "--- package_name" "== Class Methods" "= class Tk::Tcllib::Widget::Swaplist_Dialog < TkWindow" "refm/api/src/tkextlib/tcllib/swaplist.rd")
(find-rurima "--- package_version" "== Class Methods" "= class Tk::Tcllib::Widget::Swaplist_Dialog < TkWindow" "refm/api/src/tkextlib/tcllib/swaplist.rd")
(find-rurima "--- show(*args)" "== Class Methods" "= class Tk::Tcllib::Widget::Swaplist_Dialog < TkWindow" "refm/api/src/tkextlib/tcllib/swaplist.rd")
(find-rurima "--- display(*args)" "== Class Methods" "= class Tk::Tcllib::Widget::Swaplist_Dialog < TkWindow" "refm/api/src/tkextlib/tcllib/swaplist.rd")
(find-rurima "--- new(*args)" "== Class Methods" "= class Tk::Tcllib::Widget::Swaplist_Dialog < TkWindow" "refm/api/src/tkextlib/tcllib/swaplist.rd")
(find-rurima "== Instance Methods" "= class Tk::Tcllib::Widget::Swaplist_Dialog < TkWindow" "refm/api/src/tkextlib/tcllib/swaplist.rd")
(find-rurima "--- show" "== Instance Methods" "= class Tk::Tcllib::Widget::Swaplist_Dialog < TkWindow" "refm/api/src/tkextlib/tcllib/swaplist.rd")
(find-rurima "--- display" "== Instance Methods" "= class Tk::Tcllib::Widget::Swaplist_Dialog < TkWindow" "refm/api/src/tkextlib/tcllib/swaplist.rd")
(find-rurima "--- value" "== Instance Methods" "= class Tk::Tcllib::Widget::Swaplist_Dialog < TkWindow" "refm/api/src/tkextlib/tcllib/swaplist.rd")
(find-rurima "--- selected" "== Instance Methods" "= class Tk::Tcllib::Widget::Swaplist_Dialog < TkWindow" "refm/api/src/tkextlib/tcllib/swaplist.rd")
(find-rurima "--- cget(slot)" "== Instance Methods" "= class Tk::Tcllib::Widget::Swaplist_Dialog < TkWindow" "refm/api/src/tkextlib/tcllib/swaplist.rd")
(find-rurima "--- configure(slot, value = None)" "== Instance Methods" "= class Tk::Tcllib::Widget::Swaplist_Dialog < TkWindow" "refm/api/src/tkextlib/tcllib/swaplist.rd")
(find-rurima "--- configinfo(slot = nil)" "== Instance Methods" "= class Tk::Tcllib::Widget::Swaplist_Dialog < TkWindow" "refm/api/src/tkextlib/tcllib/swaplist.rd")
(find-rurima "= class Tk::Tcllib::Plotchart::Barchart < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__Barchart")
(find-rurima "== Class Methods" "= class Tk::Tcllib::Plotchart::Barchart < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__Barchart")
(find-rurima "--- new(*args)" "== Class Methods" "= class Tk::Tcllib::Plotchart::Barchart < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__Barchart")
(find-rurima "== Instance Methods" "= class Tk::Tcllib::Plotchart::Barchart < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__Barchart")
(find-rurima "--- plot(series, dat, col = None)" "== Instance Methods" "= class Tk::Tcllib::Plotchart::Barchart < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__Barchart")
(find-rurima "--- colours(*cols)" "== Instance Methods" "= class Tk::Tcllib::Plotchart::Barchart < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__Barchart")
(find-rurima "--- colour(*cols)" "== Instance Methods" "= class Tk::Tcllib::Plotchart::Barchart < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__Barchart")
(find-rurima "--- colors(*cols)" "== Instance Methods" "= class Tk::Tcllib::Plotchart::Barchart < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__Barchart")
(find-rurima "--- color(*cols)" "== Instance Methods" "= class Tk::Tcllib::Plotchart::Barchart < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__Barchart")
(find-rurima "= module Tk::Tcllib::History" "refm/api/src/tkextlib/tcllib/history.rd")
(find-rurima "== Singleton Methods" "= module Tk::Tcllib::History" "refm/api/src/tkextlib/tcllib/history.rd")
(find-rurima "--- package_name" "== Singleton Methods" "= module Tk::Tcllib::History" "refm/api/src/tkextlib/tcllib/history.rd")
(find-rurima "--- package_version" "== Singleton Methods" "= module Tk::Tcllib::History" "refm/api/src/tkextlib/tcllib/history.rd")
(find-rurima "--- init(entry, length = None)" "== Singleton Methods" "= module Tk::Tcllib::History" "refm/api/src/tkextlib/tcllib/history.rd")
(find-rurima "--- remove(entry)" "== Singleton Methods" "= module Tk::Tcllib::History" "refm/api/src/tkextlib/tcllib/history.rd")
(find-rurima "== Instance Methods" "= module Tk::Tcllib::History" "refm/api/src/tkextlib/tcllib/history.rd")
(find-rurima "--- history_remove" "== Instance Methods" "= module Tk::Tcllib::History" "refm/api/src/tkextlib/tcllib/history.rd")
(find-rurima "--- history_add(text)" "== Instance Methods" "= module Tk::Tcllib::History" "refm/api/src/tkextlib/tcllib/history.rd")
(find-rurima "--- history_get" "== Instance Methods" "= module Tk::Tcllib::History" "refm/api/src/tkextlib/tcllib/history.rd")
(find-rurima "--- history_clear" "== Instance Methods" "= module Tk::Tcllib::History" "refm/api/src/tkextlib/tcllib/history.rd")
(find-rurima "--- history_configure(opt, value)" "== Instance Methods" "= module Tk::Tcllib::History" "refm/api/src/tkextlib/tcllib/history.rd")
(find-rurima "--- history_configinfo(opt)" "== Instance Methods" "= module Tk::Tcllib::History" "refm/api/src/tkextlib/tcllib/history.rd")
(find-rurima "= class Tk::Tcllib::Tablelist_Tile" "refm/api/src/tkextlib/tcllib/tablelist_tile.rd")
(find-rurima "= class Tk::Tcllib::TableList_Tile" "refm/api/src/tkextlib/tcllib/tablelist_tile.rd")
(find-rurima "= class Tk::Tcllib::Plotchart::XYPlot < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__XYPlot")
(find-rurima "== Class Methods" "= class Tk::Tcllib::Plotchart::XYPlot < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__XYPlot")
(find-rurima "--- new(*args)" "== Class Methods" "= class Tk::Tcllib::Plotchart::XYPlot < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__XYPlot")
(find-rurima "== Instance Methods" "= class Tk::Tcllib::Plotchart::XYPlot < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__XYPlot")
(find-rurima "--- plot(series, x, y)" "== Instance Methods" "= class Tk::Tcllib::Plotchart::XYPlot < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__XYPlot")
(find-rurima "--- contourlines(xcrd, ycrd, vals, clss = None)" "== Instance Methods" "= class Tk::Tcllib::Plotchart::XYPlot < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__XYPlot")
(find-rurima "--- contourfill(xcrd, ycrd, vals, klasses = None)" "== Instance Methods" "= class Tk::Tcllib::Plotchart::XYPlot < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__XYPlot")
(find-rurima "--- contourbox(xcrd, ycrd, vals, klasses = None)" "== Instance Methods" "= class Tk::Tcllib::Plotchart::XYPlot < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__XYPlot")
(find-rurima "--- color_map(colors)" "== Instance Methods" "= class Tk::Tcllib::Plotchart::XYPlot < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__XYPlot")
(find-rurima "--- grid_cells(xcrd, ycrd)" "== Instance Methods" "= class Tk::Tcllib::Plotchart::XYPlot < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__XYPlot")
(find-rurima "--- dataconfig(series, key, value = None)" "== Instance Methods" "= class Tk::Tcllib::Plotchart::XYPlot < TkCanvas" "refm/api/src/tkextlib/tcllib/Plotchart__XYPlot")
(find-rurima "= class Tk::Tcllib::Tkpiechart::BoxLabeler < TkcItem" "refm/api/src/tkextlib/tcllib/Tkpiechart__BoxLabeler")
(find-rurima "= module Tk::Tcllib::Cursor" "refm/api/src/tkextlib/tcllib/cursor.rd")
(find-rurima "== Singleton Methods" "= module Tk::Tcllib::Cursor" "refm/api/src/tkextlib/tcllib/cursor.rd")
(find-rurima "--- package_name" "== Singleton Methods" "= module Tk::Tcllib::Cursor" "refm/api/src/tkextlib/tcllib/cursor.rd")
(find-rurima "--- package_version" "== Singleton Methods" "= module Tk::Tcllib::Cursor" "refm/api/src/tkextlib/tcllib/cursor.rd")
(find-rurima "--- cursor_display(win = None)" "== Singleton Methods" "= module Tk::Tcllib::Cursor" "refm/api/src/tkextlib/tcllib/cursor.rd")
(find-rurima "--- cursor_propagate(win, cursor)" "== Singleton Methods" "= module Tk::Tcllib::Cursor" "refm/api/src/tkextlib/tcllib/cursor.rd")
(find-rurima "--- cursor_restore(win, cursor = None)" "== Singleton Methods" "= module Tk::Tcllib::Cursor" "refm/api/src/tkextlib/tcllib/cursor.rd")
(find-rurima "= reopen Tk::Tcllib" "refm/api/src/tkextlib/tcllib/cursor.rd")
(find-rurima "== Singleton Methods" "= reopen Tk::Tcllib" "refm/api/src/tkextlib/tcllib/cursor.rd")
(find-rurima "--- cursor_display(parent = None)" "== Singleton Methods" "= reopen Tk::Tcllib" "refm/api/src/tkextlib/tcllib/cursor.rd")
(find-rurima "= reopen TkWindow" "refm/api/src/tkextlib/tcllib/cursor.rd")
(find-rurima "== Instance Methods" "= reopen TkWindow" "refm/api/src/tkextlib/tcllib/cursor.rd")
(find-rurima "--- cursor_propagate(cursor)" "== Instance Methods" "= reopen TkWindow" "refm/api/src/tkextlib/tcllib/cursor.rd")
(find-rurima "--- cursor_restore(cursor = None)" "== Instance Methods" "= reopen TkWindow" "refm/api/src/tkextlib/tcllib/cursor.rd")
(find-rurima "= reopen TkWindow" "refm/api/src/tkextlib/tktrans/tktrans.rd")
(find-rurima "== Instance Methods" "= reopen TkWindow" "refm/api/src/tkextlib/tktrans/tktrans.rd")
(find-rurima "--- tktrans_set_image(img)" "== Instance Methods" "= reopen TkWindow" "refm/api/src/tkextlib/tktrans/tktrans.rd")
(find-rurima "--- tktrans_get_image" "== Instance Methods" "= reopen TkWindow" "refm/api/src/tkextlib/tktrans/tktrans.rd")
(find-rurima "= reopen TkRoot" "refm/api/src/tkextlib/tktrans/tktrans.rd")
(find-rurima "== Instance Methods" "= reopen TkRoot" "refm/api/src/tkextlib/tktrans/tktrans.rd")
(find-rurima "--- tktrans_set_image(img)" "== Instance Methods" "= reopen TkRoot" "refm/api/src/tkextlib/tktrans/tktrans.rd")
(find-rurima "--- tktrans_get_image" "== Instance Methods" "= reopen TkRoot" "refm/api/src/tkextlib/tktrans/tktrans.rd")
(find-rurima "= reopen TkToplevel" "refm/api/src/tkextlib/tktrans/tktrans.rd")
(find-rurima "--- tktrans_set_image" "= reopen TkToplevel" "refm/api/src/tkextlib/tktrans/tktrans.rd")
(find-rurima "--- tktrans_get_image" "= reopen TkToplevel" "refm/api/src/tkextlib/tktrans/tktrans.rd")
(find-rurima "= module Tk::TkTrans" "refm/api/src/tkextlib/tktrans/TkTrans")
(find-rurima "== Singleton Methods" "= module Tk::TkTrans" "refm/api/src/tkextlib/tktrans/TkTrans")
(find-rurima "--- package_name" "== Singleton Methods" "= module Tk::TkTrans" "refm/api/src/tkextlib/tktrans/TkTrans")
(find-rurima "--- package_version" "== Singleton Methods" "= module Tk::TkTrans" "refm/api/src/tkextlib/tktrans/TkTrans")
(find-rurima "= module Tk::TclX" "refm/api/src/tkextlib/tclx/tclx.rd")
(find-rurima "== Singleton Methods" "= module Tk::TclX" "refm/api/src/tkextlib/tclx/tclx.rd")
(find-rurima "--- package_name" "== Singleton Methods" "= module Tk::TclX" "refm/api/src/tkextlib/tclx/tclx.rd")
(find-rurima "--- package_version" "== Singleton Methods" "= module Tk::TclX" "refm/api/src/tkextlib/tclx/tclx.rd")
(find-rurima "--- infox" "== Singleton Methods" "= module Tk::TclX" "refm/api/src/tkextlib/tclx/tclx.rd")
(find-rurima "--- signal(*args)" "== Singleton Methods" "= module Tk::TclX" "refm/api/src/tkextlib/tclx/tclx.rd")
(find-rurima "--- signal_restart(*args)" "== Singleton Methods" "= module Tk::TclX" "refm/api/src/tkextlib/tclx/tclx.rd")
(find-rurima "= class Tk::TclX::XPG3_MsgCat" "refm/api/src/tkextlib/tclx/XPG3_MsgCat")
(find-rurima "== Class Methods" "= class Tk::TclX::XPG3_MsgCat" "refm/api/src/tkextlib/tclx/XPG3_MsgCat")
(find-rurima "--- new(catname, fail_mode = false)" "== Class Methods" "= class Tk::TclX::XPG3_MsgCat" "refm/api/src/tkextlib/tclx/XPG3_MsgCat")
(find-rurima "--- open(catname, fail_mode = false)" "== Class Methods" "= class Tk::TclX::XPG3_MsgCat" "refm/api/src/tkextlib/tclx/XPG3_MsgCat")
(find-rurima "== Instance Methods" "= class Tk::TclX::XPG3_MsgCat" "refm/api/src/tkextlib/tclx/XPG3_MsgCat")
(find-rurima "--- close(fail_mode = false)" "== Instance Methods" "= class Tk::TclX::XPG3_MsgCat" "refm/api/src/tkextlib/tclx/XPG3_MsgCat")
(find-rurima "--- get(setnum, msgnum, defaultstr)" "== Instance Methods" "= class Tk::TclX::XPG3_MsgCat" "refm/api/src/tkextlib/tclx/XPG3_MsgCat")
(find-rurima "= class Tk::Itcl::ItclObject < TkObject" "refm/api/src/tkextlib/itcl/Itcl__ItclObject")
(find-rurima "== Class Methods" "= class Tk::Itcl::ItclObject < TkObject" "refm/api/src/tkextlib/itcl/Itcl__ItclObject")
(find-rurima "--- new(*args)" "== Class Methods" "= class Tk::Itcl::ItclObject < TkObject" "refm/api/src/tkextlib/itcl/Itcl__ItclObject")
(find-rurima "--- call_proc(name, *args)" "== Class Methods" "= class Tk::Itcl::ItclObject < TkObject" "refm/api/src/tkextlib/itcl/Itcl__ItclObject")
(find-rurima "== Instance Methods" "= class Tk::Itcl::ItclObject < TkObject" "refm/api/src/tkextlib/itcl/Itcl__ItclObject")
(find-rurima "--- call_method(name, *args)" "== Instance Methods" "= class Tk::Itcl::ItclObject < TkObject" "refm/api/src/tkextlib/itcl/Itcl__ItclObject")
(find-rurima "--- isa(klass)" "== Instance Methods" "= class Tk::Itcl::ItclObject < TkObject" "refm/api/src/tkextlib/itcl/Itcl__ItclObject")
(find-rurima "--- itcl_kind_of?(klass)" "== Instance Methods" "= class Tk::Itcl::ItclObject < TkObject" "refm/api/src/tkextlib/itcl/Itcl__ItclObject")
(find-rurima "--- info_class" "== Instance Methods" "= class Tk::Itcl::ItclObject < TkObject" "refm/api/src/tkextlib/itcl/Itcl__ItclObject")
(find-rurima "--- info_inherit" "== Instance Methods" "= class Tk::Itcl::ItclObject < TkObject" "refm/api/src/tkextlib/itcl/Itcl__ItclObject")
(find-rurima "--- info_heritage" "== Instance Methods" "= class Tk::Itcl::ItclObject < TkObject" "refm/api/src/tkextlib/itcl/Itcl__ItclObject")
(find-rurima "--- info_function(*args)" "== Instance Methods" "= class Tk::Itcl::ItclObject < TkObject" "refm/api/src/tkextlib/itcl/Itcl__ItclObject")
(find-rurima "--- info_variable(*args)" "== Instance Methods" "= class Tk::Itcl::ItclObject < TkObject" "refm/api/src/tkextlib/itcl/Itcl__ItclObject")
(find-rurima "= module Tk::Itcl" "refm/api/src/tkextlib/itcl/Itcl")
(find-rurima "== Singleton Methods" "= module Tk::Itcl" "refm/api/src/tkextlib/itcl/Itcl")
(find-rurima "--- package_name" "== Singleton Methods" "= module Tk::Itcl" "refm/api/src/tkextlib/itcl/Itcl")
(find-rurima "--- package_version" "== Singleton Methods" "= module Tk::Itcl" "refm/api/src/tkextlib/itcl/Itcl")
(find-rurima "--- body(klass, func, args, body)" "== Singleton Methods" "= module Tk::Itcl" "refm/api/src/tkextlib/itcl/Itcl")
(find-rurima "--- code(cmd, *args)" "== Singleton Methods" "= module Tk::Itcl" "refm/api/src/tkextlib/itcl/Itcl")
(find-rurima "--- code_in_namespace(namespace, cmd, *args)" "== Singleton Methods" "= module Tk::Itcl" "refm/api/src/tkextlib/itcl/Itcl")
(find-rurima "--- configbody(klass, var, body)" "== Singleton Methods" "= module Tk::Itcl" "refm/api/src/tkextlib/itcl/Itcl")
(find-rurima "--- create_itcl_class(name, body)" "== Singleton Methods" "= module Tk::Itcl" "refm/api/src/tkextlib/itcl/Itcl")
(find-rurima "--- delete_itcl_class(*names)" "== Singleton Methods" "= module Tk::Itcl" "refm/api/src/tkextlib/itcl/Itcl")
(find-rurima "--- delete_itcl_object(*names)" "== Singleton Methods" "= module Tk::Itcl" "refm/api/src/tkextlib/itcl/Itcl")
(find-rurima "--- delete_namespace(*names)" "== Singleton Methods" "= module Tk::Itcl" "refm/api/src/tkextlib/itcl/Itcl")
(find-rurima "--- ensemble(name, *args)" "== Singleton Methods" "= module Tk::Itcl" "refm/api/src/tkextlib/itcl/Itcl")
(find-rurima "--- find_classes(pat = None)" "== Singleton Methods" "= module Tk::Itcl" "refm/api/src/tkextlib/itcl/Itcl")
(find-rurima "--- find_objects(*args)" "== Singleton Methods" "= module Tk::Itcl" "refm/api/src/tkextlib/itcl/Itcl")
(find-rurima "--- is_itcl_class(target)" "== Singleton Methods" "= module Tk::Itcl" "refm/api/src/tkextlib/itcl/Itcl")
(find-rurima "--- is_itcl_object(target)" "== Singleton Methods" "= module Tk::Itcl" "refm/api/src/tkextlib/itcl/Itcl")
(find-rurima "--- create_local_obj(klass, name, *args)" "== Singleton Methods" "= module Tk::Itcl" "refm/api/src/tkextlib/itcl/Itcl")
(find-rurima "--- is_itcl_instance(klass, target)" "== Singleton Methods" "= module Tk::Itcl" "refm/api/src/tkextlib/itcl/Itcl")
(find-rurima "--- scope(var)" "== Singleton Methods" "= module Tk::Itcl" "refm/api/src/tkextlib/itcl/Itcl")
(find-rurima "= class Tk::BWidget::ListBox::Item < TkObject" "refm/api/src/tkextlib/bwidget/listbox/ListBox__Item")
(find-rurima "== Class Methods" "= class Tk::BWidget::ListBox::Item < TkObject" "refm/api/src/tkextlib/bwidget/listbox/ListBox__Item")
(find-rurima "--- id2obj(lbox, id)" "== Class Methods" "= class Tk::BWidget::ListBox::Item < TkObject" "refm/api/src/tkextlib/bwidget/listbox/ListBox__Item")
(find-rurima "--- new(lbox, *args)" "== Class Methods" "= class Tk::BWidget::ListBox::Item < TkObject" "refm/api/src/tkextlib/bwidget/listbox/ListBox__Item")
(find-rurima "== Instance Methods" "= class Tk::BWidget::ListBox::Item < TkObject" "refm/api/src/tkextlib/bwidget/listbox/ListBox__Item")
(find-rurima "--- [](key)" "== Instance Methods" "= class Tk::BWidget::ListBox::Item < TkObject" "refm/api/src/tkextlib/bwidget/listbox/ListBox__Item")
(find-rurima "--- []=(key, val)" "== Instance Methods" "= class Tk::BWidget::ListBox::Item < TkObject" "refm/api/src/tkextlib/bwidget/listbox/ListBox__Item")
(find-rurima "--- cget(key)" "== Instance Methods" "= class Tk::BWidget::ListBox::Item < TkObject" "refm/api/src/tkextlib/bwidget/listbox/ListBox__Item")
(find-rurima "--- configinfo(key = nil)" "== Instance Methods" "= class Tk::BWidget::ListBox::Item < TkObject" "refm/api/src/tkextlib/bwidget/listbox/ListBox__Item")
(find-rurima "--- configure(key, val = None)" "== Instance Methods" "= class Tk::BWidget::ListBox::Item < TkObject" "refm/api/src/tkextlib/bwidget/listbox/ListBox__Item")
(find-rurima "--- current_configinfo(key = nil)" "== Instance Methods" "= class Tk::BWidget::ListBox::Item < TkObject" "refm/api/src/tkextlib/bwidget/listbox/ListBox__Item")
(find-rurima "--- delete" "== Instance Methods" "= class Tk::BWidget::ListBox::Item < TkObject" "refm/api/src/tkextlib/bwidget/listbox/ListBox__Item")
(find-rurima "--- edit(*args)" "== Instance Methods" "= class Tk::BWidget::ListBox::Item < TkObject" "refm/api/src/tkextlib/bwidget/listbox/ListBox__Item")
(find-rurima "--- exist?" "== Instance Methods" "= class Tk::BWidget::ListBox::Item < TkObject" "refm/api/src/tkextlib/bwidget/listbox/ListBox__Item")
(find-rurima "--- id" "== Instance Methods" "= class Tk::BWidget::ListBox::Item < TkObject" "refm/api/src/tkextlib/bwidget/listbox/ListBox__Item")
(find-rurima "--- index" "== Instance Methods" "= class Tk::BWidget::ListBox::Item < TkObject" "refm/api/src/tkextlib/bwidget/listbox/ListBox__Item")
(find-rurima "--- listbox" "== Instance Methods" "= class Tk::BWidget::ListBox::Item < TkObject" "refm/api/src/tkextlib/bwidget/listbox/ListBox__Item")
(find-rurima "--- move(index)" "== Instance Methods" "= class Tk::BWidget::ListBox::Item < TkObject" "refm/api/src/tkextlib/bwidget/listbox/ListBox__Item")
(find-rurima "--- see" "== Instance Methods" "= class Tk::BWidget::ListBox::Item < TkObject" "refm/api/src/tkextlib/bwidget/listbox/ListBox__Item")
(find-rurima "--- selection_add" "== Instance Methods" "= class Tk::BWidget::ListBox::Item < TkObject" "refm/api/src/tkextlib/bwidget/listbox/ListBox__Item")
(find-rurima "--- selection_remove" "== Instance Methods" "= class Tk::BWidget::ListBox::Item < TkObject" "refm/api/src/tkextlib/bwidget/listbox/ListBox__Item")
(find-rurima "--- selection_set" "== Instance Methods" "= class Tk::BWidget::ListBox::Item < TkObject" "refm/api/src/tkextlib/bwidget/listbox/ListBox__Item")
(find-rurima "--- selection_toggle" "== Instance Methods" "= class Tk::BWidget::ListBox::Item < TkObject" "refm/api/src/tkextlib/bwidget/listbox/ListBox__Item")
(find-rurima "= class Tk::BWidget::ListBox::Event_for_Items < TkEvent::Event" "refm/api/src/tkextlib/bwidget/listbox/ListBox__Event_for_Items")
(find-rurima "== Class Methods" "= class Tk::BWidget::ListBox::Event_for_Items < TkEvent::Event" "refm/api/src/tkextlib/bwidget/listbox/ListBox__Event_for_Items")
(find-rurima "--- _get_extra_args_tbl" "== Class Methods" "= class Tk::BWidget::ListBox::Event_for_Items < TkEvent::Event" "refm/api/src/tkextlib/bwidget/listbox/ListBox__Event_for_Items")
(find-rurima "= module Tk::BWidget::DynamicHelp" "refm/api/src/tkextlib/bwidget/dynamichelp.rd")
(find-rurima "== Singleton Methods" "= module Tk::BWidget::DynamicHelp" "refm/api/src/tkextlib/bwidget/dynamichelp.rd")
(find-rurima "--- __cget_cmd" "== Singleton Methods" "= module Tk::BWidget::DynamicHelp" "refm/api/src/tkextlib/bwidget/dynamichelp.rd")
(find-rurima "--- __config_cmd" "== Singleton Methods" "= module Tk::BWidget::DynamicHelp" "refm/api/src/tkextlib/bwidget/dynamichelp.rd")
(find-rurima "--- __pathname" "== Singleton Methods" "= module Tk::BWidget::DynamicHelp" "refm/api/src/tkextlib/bwidget/dynamichelp.rd")
(find-rurima "--- add(widget, keys = {})" "== Singleton Methods" "= module Tk::BWidget::DynamicHelp" "refm/api/src/tkextlib/bwidget/dynamichelp.rd")
(find-rurima "--- cget(slot)" "== Singleton Methods" "= module Tk::BWidget::DynamicHelp" "refm/api/src/tkextlib/bwidget/dynamichelp.rd")
(find-rurima "--- delete(widget)" "== Singleton Methods" "= module Tk::BWidget::DynamicHelp" "refm/api/src/tkextlib/bwidget/dynamichelp.rd")
(find-rurima "--- include(klass, type)" "== Singleton Methods" "= module Tk::BWidget::DynamicHelp" "refm/api/src/tkextlib/bwidget/dynamichelp.rd")
(find-rurima "--- sethelp(path, subpath, force = None)" "== Singleton Methods" "= module Tk::BWidget::DynamicHelp" "refm/api/src/tkextlib/bwidget/dynamichelp.rd")
(find-rurima "= class Tk::BWidget::MainFrame < TkWindow" "refm/api/src/tkextlib/bwidget/mainframe.rd")
(find-rurima "== Instance Methods" "= class Tk::BWidget::MainFrame < TkWindow" "refm/api/src/tkextlib/bwidget/mainframe.rd")
(find-rurima "--- add_indicator(keys = {}, &b)" "== Instance Methods" "= class Tk::BWidget::MainFrame < TkWindow" "refm/api/src/tkextlib/bwidget/mainframe.rd")
(find-rurima "--- add_toolbar(&b)" "== Instance Methods" "= class Tk::BWidget::MainFrame < TkWindow" "refm/api/src/tkextlib/bwidget/mainframe.rd")
(find-rurima "--- get_frame(&b)" "== Instance Methods" "= class Tk::BWidget::MainFrame < TkWindow" "refm/api/src/tkextlib/bwidget/mainframe.rd")
(find-rurima "--- get_indicator(idx, &b)" "== Instance Methods" "= class Tk::BWidget::MainFrame < TkWindow" "refm/api/src/tkextlib/bwidget/mainframe.rd")
(find-rurima "--- get_menu(menu_id, &b)" "== Instance Methods" "= class Tk::BWidget::MainFrame < TkWindow" "refm/api/src/tkextlib/bwidget/mainframe.rd")
(find-rurima "--- get_toolbar(idx, &b)" "== Instance Methods" "= class Tk::BWidget::MainFrame < TkWindow" "refm/api/src/tkextlib/bwidget/mainframe.rd")
(find-rurima "--- set_menustate(tag, state)" "== Instance Methods" "= class Tk::BWidget::MainFrame < TkWindow" "refm/api/src/tkextlib/bwidget/mainframe.rd")
(find-rurima "--- show_statusbar(name)" "== Instance Methods" "= class Tk::BWidget::MainFrame < TkWindow" "refm/api/src/tkextlib/bwidget/mainframe.rd")
(find-rurima "--- show_toolbar(idx, mode)" "== Instance Methods" "= class Tk::BWidget::MainFrame < TkWindow" "refm/api/src/tkextlib/bwidget/mainframe.rd")
(find-rurima "= class Tk::BWidget::Entry < TkEntry" "refm/api/src/tkextlib/bwidget/entry.rd")
(find-rurima "== Instance Methods" "= class Tk::BWidget::Entry < TkEntry" "refm/api/src/tkextlib/bwidget/entry.rd")
(find-rurima "--- invoke" "== Instance Methods" "= class Tk::BWidget::Entry < TkEntry" "refm/api/src/tkextlib/bwidget/entry.rd")
(find-rurima "= class Tk::BWidget::PagesManager < TkWindow" "refm/api/src/tkextlib/bwidget/pagesmanager.rd")
(find-rurima "== Instance Methods" "= class Tk::BWidget::PagesManager < TkWindow" "refm/api/src/tkextlib/bwidget/pagesmanager.rd")
(find-rurima "--- add(page, &b)" "== Instance Methods" "= class Tk::BWidget::PagesManager < TkWindow" "refm/api/src/tkextlib/bwidget/pagesmanager.rd")
(find-rurima "--- compute_size" "== Instance Methods" "= class Tk::BWidget::PagesManager < TkWindow" "refm/api/src/tkextlib/bwidget/pagesmanager.rd")
(find-rurima "--- delete(page)" "== Instance Methods" "= class Tk::BWidget::PagesManager < TkWindow" "refm/api/src/tkextlib/bwidget/pagesmanager.rd")
(find-rurima "--- get_frame(page, &b)" "== Instance Methods" "= class Tk::BWidget::PagesManager < TkWindow" "refm/api/src/tkextlib/bwidget/pagesmanager.rd")
(find-rurima "--- get_page(page)" "== Instance Methods" "= class Tk::BWidget::PagesManager < TkWindow" "refm/api/src/tkextlib/bwidget/pagesmanager.rd")
(find-rurima "--- pages(first = None, last = None)" "== Instance Methods" "= class Tk::BWidget::PagesManager < TkWindow" "refm/api/src/tkextlib/bwidget/pagesmanager.rd")
(find-rurima "--- raise(page = None)" "== Instance Methods" "= class Tk::BWidget::PagesManager < TkWindow" "refm/api/src/tkextlib/bwidget/pagesmanager.rd")
(find-rurima "--- tagid(id)" "== Instance Methods" "= class Tk::BWidget::PagesManager < TkWindow" "refm/api/src/tkextlib/bwidget/pagesmanager.rd")
(find-rurima "= class Tk::BWidget::LabelFrame < TkWindow" "refm/api/src/tkextlib/bwidget/labelframe.rd")
(find-rurima "== Class Methods" "= class Tk::BWidget::LabelFrame < TkWindow" "refm/api/src/tkextlib/bwidget/labelframe.rd")
(find-rurima "--- align(*args)" "== Class Methods" "= class Tk::BWidget::LabelFrame < TkWindow" "refm/api/src/tkextlib/bwidget/labelframe.rd")
(find-rurima "== Instance Methods" "= class Tk::BWidget::LabelFrame < TkWindow" "refm/api/src/tkextlib/bwidget/labelframe.rd")
(find-rurima "--- get_frame(&b)" "== Instance Methods" "= class Tk::BWidget::LabelFrame < TkWindow" "refm/api/src/tkextlib/bwidget/labelframe.rd")
(find-rurima "= class Tk::BWidget::PanelFrame < TkWindow" "refm/api/src/tkextlib/bwidget/panelframe.rd")
(find-rurima "== Instance Methods" "= class Tk::BWidget::PanelFrame < TkWindow" "refm/api/src/tkextlib/bwidget/panelframe.rd")
(find-rurima "--- add(win, keys = {})" "== Instance Methods" "= class Tk::BWidget::PanelFrame < TkWindow" "refm/api/src/tkextlib/bwidget/panelframe.rd")
(find-rurima "--- delete(*wins)" "== Instance Methods" "= class Tk::BWidget::PanelFrame < TkWindow" "refm/api/src/tkextlib/bwidget/panelframe.rd")
(find-rurima "--- get_frame(&b)" "== Instance Methods" "= class Tk::BWidget::PanelFrame < TkWindow" "refm/api/src/tkextlib/bwidget/panelframe.rd")
(find-rurima "--- items" "== Instance Methods" "= class Tk::BWidget::PanelFrame < TkWindow" "refm/api/src/tkextlib/bwidget/panelframe.rd")
(find-rurima "--- remove(*wins)" "== Instance Methods" "= class Tk::BWidget::PanelFrame < TkWindow" "refm/api/src/tkextlib/bwidget/panelframe.rd")
(find-rurima "= class Tk::BWidget::MessageDlg < TkWindow" "refm/api/src/tkextlib/bwidget/messagedlg.rd")
(find-rurima "== Class Methods" "= class Tk::BWidget::MessageDlg < TkWindow" "refm/api/src/tkextlib/bwidget/messagedlg.rd")
(find-rurima "--- new(parent = nil, keys = nil)" "== Class Methods" "= class Tk::BWidget::MessageDlg < TkWindow" "refm/api/src/tkextlib/bwidget/messagedlg.rd")
(find-rurima "== Instance Methods" "= class Tk::BWidget::MessageDlg < TkWindow" "refm/api/src/tkextlib/bwidget/messagedlg.rd")
(find-rurima "--- cget(slot)" "== Instance Methods" "= class Tk::BWidget::MessageDlg < TkWindow" "refm/api/src/tkextlib/bwidget/messagedlg.rd")
(find-rurima "--- configinfo(slot = nil)" "== Instance Methods" "= class Tk::BWidget::MessageDlg < TkWindow" "refm/api/src/tkextlib/bwidget/messagedlg.rd")
(find-rurima "--- configure(slot, value = None)" "== Instance Methods" "= class Tk::BWidget::MessageDlg < TkWindow" "refm/api/src/tkextlib/bwidget/messagedlg.rd")
(find-rurima "--- create" "== Instance Methods" "= class Tk::BWidget::MessageDlg < TkWindow" "refm/api/src/tkextlib/bwidget/messagedlg.rd")
(find-rurima "= class Tk::BWidget::ScrollView < TkWindow" "refm/api/src/tkextlib/bwidget/scrollview.rd")
(find-rurima "= class Tk::BWidget::StatusBar < TkWindow" "refm/api/src/tkextlib/bwidget/statusbar.rd")
(find-rurima "== Instance Methods" "= class Tk::BWidget::StatusBar < TkWindow" "refm/api/src/tkextlib/bwidget/statusbar.rd")
(find-rurima "--- add(win, keys = {})" "== Instance Methods" "= class Tk::BWidget::StatusBar < TkWindow" "refm/api/src/tkextlib/bwidget/statusbar.rd")
(find-rurima "--- delete(*wins)" "== Instance Methods" "= class Tk::BWidget::StatusBar < TkWindow" "refm/api/src/tkextlib/bwidget/statusbar.rd")
(find-rurima "--- get_frame(&b)" "== Instance Methods" "= class Tk::BWidget::StatusBar < TkWindow" "refm/api/src/tkextlib/bwidget/statusbar.rd")
(find-rurima "--- items" "== Instance Methods" "= class Tk::BWidget::StatusBar < TkWindow" "refm/api/src/tkextlib/bwidget/statusbar.rd")
(find-rurima "= class Tk::BWidget::SpinBox < TkEntry" "refm/api/src/tkextlib/bwidget/spinbox.rd")
(find-rurima "== Instance Methods" "= class Tk::BWidget::SpinBox < TkEntry" "refm/api/src/tkextlib/bwidget/spinbox.rd")
(find-rurima "--- entrybind(context, *args)" "== Instance Methods" "= class Tk::BWidget::SpinBox < TkEntry" "refm/api/src/tkextlib/bwidget/spinbox.rd")
(find-rurima "--- entrybind_append(context, *args)" "== Instance Methods" "= class Tk::BWidget::SpinBox < TkEntry" "refm/api/src/tkextlib/bwidget/spinbox.rd")
(find-rurima "--- entrybind_remove(*args)" "== Instance Methods" "= class Tk::BWidget::SpinBox < TkEntry" "refm/api/src/tkextlib/bwidget/spinbox.rd")
(find-rurima "--- entrybindinfo(*args)" "== Instance Methods" "= class Tk::BWidget::SpinBox < TkEntry" "refm/api/src/tkextlib/bwidget/spinbox.rd")
(find-rurima "--- get_index_of_value" "== Instance Methods" "= class Tk::BWidget::SpinBox < TkEntry" "refm/api/src/tkextlib/bwidget/spinbox.rd")
(find-rurima "--- get_value" "== Instance Methods" "= class Tk::BWidget::SpinBox < TkEntry" "refm/api/src/tkextlib/bwidget/spinbox.rd")
(find-rurima "--- get_value_index" "== Instance Methods" "= class Tk::BWidget::SpinBox < TkEntry" "refm/api/src/tkextlib/bwidget/spinbox.rd")
(find-rurima "--- set_index_value(idx)" "== Instance Methods" "= class Tk::BWidget::SpinBox < TkEntry" "refm/api/src/tkextlib/bwidget/spinbox.rd")
(find-rurima "--- set_value(idx)" "== Instance Methods" "= class Tk::BWidget::SpinBox < TkEntry" "refm/api/src/tkextlib/bwidget/spinbox.rd")
(find-rurima "--- set_value_by_index(idx)" "== Instance Methods" "= class Tk::BWidget::SpinBox < TkEntry" "refm/api/src/tkextlib/bwidget/spinbox.rd")
(find-rurima "= class Tk::BWidget::Bitmap < TkPhotoImage" "refm/api/src/tkextlib/bwidget/bitmap.rd")
(find-rurima "== Class Methods" "= class Tk::BWidget::Bitmap < TkPhotoImage" "refm/api/src/tkextlib/bwidget/bitmap.rd")
(find-rurima "--- new(name)" "== Class Methods" "= class Tk::BWidget::Bitmap < TkPhotoImage" "refm/api/src/tkextlib/bwidget/bitmap.rd")
(find-rurima "= class Tk::BWidget::NoteBook < TkWindow" "refm/api/src/tkextlib/bwidget/notebook.rd")
(find-rurima "== Instance Methods" "= class Tk::BWidget::NoteBook < TkWindow" "refm/api/src/tkextlib/bwidget/notebook.rd")
(find-rurima "--- add(page, &b)" "== Instance Methods" "= class Tk::BWidget::NoteBook < TkWindow" "refm/api/src/tkextlib/bwidget/notebook.rd")
(find-rurima "--- compute_size" "== Instance Methods" "= class Tk::BWidget::NoteBook < TkWindow" "refm/api/src/tkextlib/bwidget/notebook.rd")
(find-rurima "--- delete(page, destroyframe = None)" "== Instance Methods" "= class Tk::BWidget::NoteBook < TkWindow" "refm/api/src/tkextlib/bwidget/notebook.rd")
(find-rurima "--- get_frame(page, &b)" "== Instance Methods" "= class Tk::BWidget::NoteBook < TkWindow" "refm/api/src/tkextlib/bwidget/notebook.rd")
(find-rurima "--- get_page(page)" "== Instance Methods" "= class Tk::BWidget::NoteBook < TkWindow" "refm/api/src/tkextlib/bwidget/notebook.rd")
(find-rurima "--- index(page)" "== Instance Methods" "= class Tk::BWidget::NoteBook < TkWindow" "refm/api/src/tkextlib/bwidget/notebook.rd")
(find-rurima "--- insert(index, page, keys = {}, &b)" "== Instance Methods" "= class Tk::BWidget::NoteBook < TkWindow" "refm/api/src/tkextlib/bwidget/notebook.rd")
(find-rurima "--- move(page, index)" "== Instance Methods" "= class Tk::BWidget::NoteBook < TkWindow" "refm/api/src/tkextlib/bwidget/notebook.rd")
(find-rurima "--- pages(first = None, last = None)" "== Instance Methods" "= class Tk::BWidget::NoteBook < TkWindow" "refm/api/src/tkextlib/bwidget/notebook.rd")
(find-rurima "--- raise(page = nil)" "== Instance Methods" "= class Tk::BWidget::NoteBook < TkWindow" "refm/api/src/tkextlib/bwidget/notebook.rd")
(find-rurima "--- see(page)" "== Instance Methods" "= class Tk::BWidget::NoteBook < TkWindow" "refm/api/src/tkextlib/bwidget/notebook.rd")
(find-rurima "--- tabbind(context, *args)" "== Instance Methods" "= class Tk::BWidget::NoteBook < TkWindow" "refm/api/src/tkextlib/bwidget/notebook.rd")
(find-rurima "--- tabbind_append(context, *args)" "== Instance Methods" "= class Tk::BWidget::NoteBook < TkWindow" "refm/api/src/tkextlib/bwidget/notebook.rd")
(find-rurima "--- tabbind_remove(*args)" "== Instance Methods" "= class Tk::BWidget::NoteBook < TkWindow" "refm/api/src/tkextlib/bwidget/notebook.rd")
(find-rurima "--- tabbindinfo(*args)" "== Instance Methods" "= class Tk::BWidget::NoteBook < TkWindow" "refm/api/src/tkextlib/bwidget/notebook.rd")
(find-rurima "--- tagid(id)" "== Instance Methods" "= class Tk::BWidget::NoteBook < TkWindow" "refm/api/src/tkextlib/bwidget/notebook.rd")
(find-rurima "= class Tk::BWidget::Tree < TkWindow" "refm/api/src/tkextlib/bwidget/tree.rd")
(find-rurima "== Instance Methods" "= class Tk::BWidget::Tree < TkWindow" "refm/api/src/tkextlib/bwidget/tree.rd")
(find-rurima "--- close_tree(node, recurse = None)" "== Instance Methods" "= class Tk::BWidget::Tree < TkWindow" "refm/api/src/tkextlib/bwidget/tree.rd")
(find-rurima "--- delete(*args)" "== Instance Methods" "= class Tk::BWidget::Tree < TkWindow" "refm/api/src/tkextlib/bwidget/tree.rd")
(find-rurima "--- edit(node, text, *args)" "== Instance Methods" "= class Tk::BWidget::Tree < TkWindow" "refm/api/src/tkextlib/bwidget/tree.rd")
(find-rurima "--- exist?(node)" "== Instance Methods" "= class Tk::BWidget::Tree < TkWindow" "refm/api/src/tkextlib/bwidget/tree.rd")
(find-rurima "--- get_node(node, idx)" "== Instance Methods" "= class Tk::BWidget::Tree < TkWindow" "refm/api/src/tkextlib/bwidget/tree.rd")
(find-rurima "--- imagebind(context, *args)" "== Instance Methods" "= class Tk::BWidget::Tree < TkWindow" "refm/api/src/tkextlib/bwidget/tree.rd")
(find-rurima "--- imagebind_append(context, *args)" "== Instance Methods" "= class Tk::BWidget::Tree < TkWindow" "refm/api/src/tkextlib/bwidget/tree.rd")
(find-rurima "--- imagebind_remove(*args)" "== Instance Methods" "= class Tk::BWidget::Tree < TkWindow" "refm/api/src/tkextlib/bwidget/tree.rd")
(find-rurima "--- imagebindinfo(*args)" "== Instance Methods" "= class Tk::BWidget::Tree < TkWindow" "refm/api/src/tkextlib/bwidget/tree.rd")
(find-rurima "--- index(node)" "== Instance Methods" "= class Tk::BWidget::Tree < TkWindow" "refm/api/src/tkextlib/bwidget/tree.rd")
(find-rurima "--- insert(idx, parent, node, keys = {})" "== Instance Methods" "= class Tk::BWidget::Tree < TkWindow" "refm/api/src/tkextlib/bwidget/tree.rd")
(find-rurima "--- move(parent, node, idx)" "== Instance Methods" "= class Tk::BWidget::Tree < TkWindow" "refm/api/src/tkextlib/bwidget/tree.rd")
(find-rurima "--- nodes(node, first = None, last = None)" "== Instance Methods" "= class Tk::BWidget::Tree < TkWindow" "refm/api/src/tkextlib/bwidget/tree.rd")
(find-rurima "--- open?(node)" "== Instance Methods" "= class Tk::BWidget::Tree < TkWindow" "refm/api/src/tkextlib/bwidget/tree.rd")
(find-rurima "--- open_tree(node, recurse = None)" "== Instance Methods" "= class Tk::BWidget::Tree < TkWindow" "refm/api/src/tkextlib/bwidget/tree.rd")
(find-rurima "--- parent(node)" "== Instance Methods" "= class Tk::BWidget::Tree < TkWindow" "refm/api/src/tkextlib/bwidget/tree.rd")
(find-rurima "--- reorder(node, neworder)" "== Instance Methods" "= class Tk::BWidget::Tree < TkWindow" "refm/api/src/tkextlib/bwidget/tree.rd")
(find-rurima "--- see(node)" "== Instance Methods" "= class Tk::BWidget::Tree < TkWindow" "refm/api/src/tkextlib/bwidget/tree.rd")
(find-rurima "--- selection_add(*args)" "== Instance Methods" "= class Tk::BWidget::Tree < TkWindow" "refm/api/src/tkextlib/bwidget/tree.rd")
(find-rurima "--- selection_clear" "== Instance Methods" "= class Tk::BWidget::Tree < TkWindow" "refm/api/src/tkextlib/bwidget/tree.rd")
(find-rurima "--- selection_get" "== Instance Methods" "= class Tk::BWidget::Tree < TkWindow" "refm/api/src/tkextlib/bwidget/tree.rd")
(find-rurima "--- selection_include?(*args)" "== Instance Methods" "= class Tk::BWidget::Tree < TkWindow" "refm/api/src/tkextlib/bwidget/tree.rd")
(find-rurima "--- selection_range(*args)" "== Instance Methods" "= class Tk::BWidget::Tree < TkWindow" "refm/api/src/tkextlib/bwidget/tree.rd")
(find-rurima "--- selection_remove(*args)" "== Instance Methods" "= class Tk::BWidget::Tree < TkWindow" "refm/api/src/tkextlib/bwidget/tree.rd")
(find-rurima "--- selection_set(*args)" "== Instance Methods" "= class Tk::BWidget::Tree < TkWindow" "refm/api/src/tkextlib/bwidget/tree.rd")
(find-rurima "--- selection_toggle(*args)" "== Instance Methods" "= class Tk::BWidget::Tree < TkWindow" "refm/api/src/tkextlib/bwidget/tree.rd")
(find-rurima "--- tagid(tag)" "== Instance Methods" "= class Tk::BWidget::Tree < TkWindow" "refm/api/src/tkextlib/bwidget/tree.rd")
(find-rurima "--- textbind(context, *args)" "== Instance Methods" "= class Tk::BWidget::Tree < TkWindow" "refm/api/src/tkextlib/bwidget/tree.rd")
(find-rurima "--- textbind_append(context, *args)" "== Instance Methods" "= class Tk::BWidget::Tree < TkWindow" "refm/api/src/tkextlib/bwidget/tree.rd")
(find-rurima "--- textbind_remove(*args)" "== Instance Methods" "= class Tk::BWidget::Tree < TkWindow" "refm/api/src/tkextlib/bwidget/tree.rd")
(find-rurima "--- textbindinfo(*args)" "== Instance Methods" "= class Tk::BWidget::Tree < TkWindow" "refm/api/src/tkextlib/bwidget/tree.rd")
(find-rurima "--- toggle(node)" "== Instance Methods" "= class Tk::BWidget::Tree < TkWindow" "refm/api/src/tkextlib/bwidget/tree.rd")
(find-rurima "--- visible(node)" "== Instance Methods" "= class Tk::BWidget::Tree < TkWindow" "refm/api/src/tkextlib/bwidget/tree.rd")
(find-rurima "= class Tk::BWidget::Label < TkLabel" "refm/api/src/tkextlib/bwidget/label.rd")
(find-rurima "== Instance Methods" "= class Tk::BWidget::Label < TkLabel" "refm/api/src/tkextlib/bwidget/label.rd")
(find-rurima "--- set_focus" "== Instance Methods" "= class Tk::BWidget::Label < TkLabel" "refm/api/src/tkextlib/bwidget/label.rd")
(find-rurima "= class Tk::BWidget::Button < TkButton" "refm/api/src/tkextlib/bwidget/button.rd")
(find-rurima "= class Tk::BWidget::ComboBox < Tk::BWidget::SpinBox" "refm/api/src/tkextlib/bwidget/combobox.rd")
(find-rurima "== Instance Methods" "= class Tk::BWidget::ComboBox < Tk::BWidget::SpinBox" "refm/api/src/tkextlib/bwidget/combobox.rd")
(find-rurima "--- get_listbox(&b)" "== Instance Methods" "= class Tk::BWidget::ComboBox < Tk::BWidget::SpinBox" "refm/api/src/tkextlib/bwidget/combobox.rd")
(find-rurima "--- icursor(idx)" "== Instance Methods" "= class Tk::BWidget::ComboBox < Tk::BWidget::SpinBox" "refm/api/src/tkextlib/bwidget/combobox.rd")
(find-rurima "--- post" "== Instance Methods" "= class Tk::BWidget::ComboBox < Tk::BWidget::SpinBox" "refm/api/src/tkextlib/bwidget/combobox.rd")
(find-rurima "--- unpost" "== Instance Methods" "= class Tk::BWidget::ComboBox < Tk::BWidget::SpinBox" "refm/api/src/tkextlib/bwidget/combobox.rd")
(find-rurima "= class Tk::BWidget::SelectColor < Tk::BWidget::MessageDlg" "refm/api/src/tkextlib/bwidget/selectcolor.rd")
(find-rurima "== Class Methods" "= class Tk::BWidget::SelectColor < Tk::BWidget::MessageDlg" "refm/api/src/tkextlib/bwidget/selectcolor.rd")
(find-rurima "--- set_color(idx, color)" "== Class Methods" "= class Tk::BWidget::SelectColor < Tk::BWidget::MessageDlg" "refm/api/src/tkextlib/bwidget/selectcolor.rd")
(find-rurima "== Instance Methods" "= class Tk::BWidget::SelectColor < Tk::BWidget::MessageDlg" "refm/api/src/tkextlib/bwidget/selectcolor.rd")
(find-rurima "--- dialog(keys = {})" "== Instance Methods" "= class Tk::BWidget::SelectColor < Tk::BWidget::MessageDlg" "refm/api/src/tkextlib/bwidget/selectcolor.rd")
(find-rurima "--- menu(*args)" "== Instance Methods" "= class Tk::BWidget::SelectColor < Tk::BWidget::MessageDlg" "refm/api/src/tkextlib/bwidget/selectcolor.rd")
(find-rurima "= class Tk::BWidget::ScrolledWindow < TkWindow" "refm/api/src/tkextlib/bwidget/scrolledwindow.rd")
(find-rurima "== Instance Methods" "= class Tk::BWidget::ScrolledWindow < TkWindow" "refm/api/src/tkextlib/bwidget/scrolledwindow.rd")
(find-rurima "--- get_frame(&b)" "== Instance Methods" "= class Tk::BWidget::ScrolledWindow < TkWindow" "refm/api/src/tkextlib/bwidget/scrolledwindow.rd")
(find-rurima "--- set_widget(win)" "== Instance Methods" "= class Tk::BWidget::ScrolledWindow < TkWindow" "refm/api/src/tkextlib/bwidget/scrolledwindow.rd")
(find-rurima "= class Tk::BWidget::SelectFont::Dialog < Tk::BWidget::SelectFont" "refm/api/src/tkextlib/bwidget/selectfont/SelectFont__Dialog")
(find-rurima "== Instance Methods" "= class Tk::BWidget::SelectFont::Dialog < Tk::BWidget::SelectFont" "refm/api/src/tkextlib/bwidget/selectfont/SelectFont__Dialog")
(find-rurima "--- __font_optkeys" "== Instance Methods" "= class Tk::BWidget::SelectFont::Dialog < Tk::BWidget::SelectFont" "refm/api/src/tkextlib/bwidget/selectfont/SelectFont__Dialog")
(find-rurima "--- configure(slot, value = None)" "== Instance Methods" "= class Tk::BWidget::SelectFont::Dialog < Tk::BWidget::SelectFont" "refm/api/src/tkextlib/bwidget/selectfont/SelectFont__Dialog")
(find-rurima "--- create" "== Instance Methods" "= class Tk::BWidget::SelectFont::Dialog < Tk::BWidget::SelectFont" "refm/api/src/tkextlib/bwidget/selectfont/SelectFont__Dialog")
(find-rurima "--- create_self(keys)" "== Instance Methods" "= class Tk::BWidget::SelectFont::Dialog < Tk::BWidget::SelectFont" "refm/api/src/tkextlib/bwidget/selectfont/SelectFont__Dialog")
(find-rurima "= class Tk::BWidget::SelectFont::Toolbar < TkWindow" "refm/api/src/tkextlib/bwidget/selectfont/SelectFont__Toolbar")
(find-rurima "== Instance Methods" "= class Tk::BWidget::SelectFont::Toolbar < TkWindow" "refm/api/src/tkextlib/bwidget/selectfont/SelectFont__Toolbar")
(find-rurima "--- __font_optkeys" "== Instance Methods" "= class Tk::BWidget::SelectFont::Toolbar < TkWindow" "refm/api/src/tkextlib/bwidget/selectfont/SelectFont__Toolbar")
(find-rurima "--- create_self(keys)" "== Instance Methods" "= class Tk::BWidget::SelectFont::Toolbar < TkWindow" "refm/api/src/tkextlib/bwidget/selectfont/SelectFont__Toolbar")
(find-rurima "= class Tk::BWidget::LabelEntry < TkEntry" "refm/api/src/tkextlib/bwidget/labelentry.rd")
(find-rurima "== Instance Methods" "= class Tk::BWidget::LabelEntry < TkEntry" "refm/api/src/tkextlib/bwidget/labelentry.rd")
(find-rurima "--- entrybind(context, *args)" "== Instance Methods" "= class Tk::BWidget::LabelEntry < TkEntry" "refm/api/src/tkextlib/bwidget/labelentry.rd")
(find-rurima "--- entrybind_append(context, *args)" "== Instance Methods" "= class Tk::BWidget::LabelEntry < TkEntry" "refm/api/src/tkextlib/bwidget/labelentry.rd")
(find-rurima "--- entrybind_remove(*args)" "== Instance Methods" "= class Tk::BWidget::LabelEntry < TkEntry" "refm/api/src/tkextlib/bwidget/labelentry.rd")
(find-rurima "--- entrybindinfo(*args)" "== Instance Methods" "= class Tk::BWidget::LabelEntry < TkEntry" "refm/api/src/tkextlib/bwidget/labelentry.rd")
(find-rurima "= class Tk::BWidget::PasswdDlg < Tk::BWidget::MessageDlg" "refm/api/src/tkextlib/bwidget/passwddlg.rd")
(find-rurima "== Instance Methods" "= class Tk::BWidget::PasswdDlg < Tk::BWidget::MessageDlg" "refm/api/src/tkextlib/bwidget/passwddlg.rd")
(find-rurima "--- create" "== Instance Methods" "= class Tk::BWidget::PasswdDlg < Tk::BWidget::MessageDlg" "refm/api/src/tkextlib/bwidget/passwddlg.rd")
(find-rurima "= class Tk::BWidget::ProgressDlg < Tk::BWidget::MessageDlg" "refm/api/src/tkextlib/bwidget/progressdlg.rd")
(find-rurima "== Instance Methods" "= class Tk::BWidget::ProgressDlg < Tk::BWidget::MessageDlg" "refm/api/src/tkextlib/bwidget/progressdlg.rd")
(find-rurima "--- create_self(keys)" "== Instance Methods" "= class Tk::BWidget::ProgressDlg < Tk::BWidget::MessageDlg" "refm/api/src/tkextlib/bwidget/progressdlg.rd")
(find-rurima "--- text" "== Instance Methods" "= class Tk::BWidget::ProgressDlg < Tk::BWidget::MessageDlg" "refm/api/src/tkextlib/bwidget/progressdlg.rd")
(find-rurima "--- text=(txt)" "== Instance Methods" "= class Tk::BWidget::ProgressDlg < Tk::BWidget::MessageDlg" "refm/api/src/tkextlib/bwidget/progressdlg.rd")
(find-rurima "--- textvariable" "== Instance Methods" "= class Tk::BWidget::ProgressDlg < Tk::BWidget::MessageDlg" "refm/api/src/tkextlib/bwidget/progressdlg.rd")
(find-rurima "--- value" "== Instance Methods" "= class Tk::BWidget::ProgressDlg < Tk::BWidget::MessageDlg" "refm/api/src/tkextlib/bwidget/progressdlg.rd")
(find-rurima "--- value=(val)" "== Instance Methods" "= class Tk::BWidget::ProgressDlg < Tk::BWidget::MessageDlg" "refm/api/src/tkextlib/bwidget/progressdlg.rd")
(find-rurima "--- variable" "== Instance Methods" "= class Tk::BWidget::ProgressDlg < Tk::BWidget::MessageDlg" "refm/api/src/tkextlib/bwidget/progressdlg.rd")
(find-rurima "= class Tk::BWidget::SelectFont < Tk::BWidget::MessageDlg" "refm/api/src/tkextlib/bwidget/selectfont.rd")
(find-rurima "== Class Methods" "= class Tk::BWidget::SelectFont < Tk::BWidget::MessageDlg" "refm/api/src/tkextlib/bwidget/selectfont.rd")
(find-rurima "--- load_font" "== Class Methods" "= class Tk::BWidget::SelectFont < Tk::BWidget::MessageDlg" "refm/api/src/tkextlib/bwidget/selectfont.rd")
(find-rurima "== Instance Methods" "= class Tk::BWidget::SelectFont < Tk::BWidget::MessageDlg" "refm/api/src/tkextlib/bwidget/selectfont.rd")
(find-rurima "--- create" "== Instance Methods" "= class Tk::BWidget::SelectFont < Tk::BWidget::MessageDlg" "refm/api/src/tkextlib/bwidget/selectfont.rd")
(find-rurima "= class Tk::BWidget::ButtonBox < TkWindow" "refm/api/src/tkextlib/bwidget/buttonbox.rd")
(find-rurima "== Instance Methods" "= class Tk::BWidget::ButtonBox < TkWindow" "refm/api/src/tkextlib/bwidget/buttonbox.rd")
(find-rurima "--- add(keys = {}, &b)" "== Instance Methods" "= class Tk::BWidget::ButtonBox < TkWindow" "refm/api/src/tkextlib/bwidget/buttonbox.rd")
(find-rurima "--- delete(idx)" "== Instance Methods" "= class Tk::BWidget::ButtonBox < TkWindow" "refm/api/src/tkextlib/bwidget/buttonbox.rd")
(find-rurima "--- index(idx)" "== Instance Methods" "= class Tk::BWidget::ButtonBox < TkWindow" "refm/api/src/tkextlib/bwidget/buttonbox.rd")
(find-rurima "--- insert(idx, keys = {}, &b)" "== Instance Methods" "= class Tk::BWidget::ButtonBox < TkWindow" "refm/api/src/tkextlib/bwidget/buttonbox.rd")
(find-rurima "--- invoke(idx)" "== Instance Methods" "= class Tk::BWidget::ButtonBox < TkWindow" "refm/api/src/tkextlib/bwidget/buttonbox.rd")
(find-rurima "--- set_focus(idx)" "== Instance Methods" "= class Tk::BWidget::ButtonBox < TkWindow" "refm/api/src/tkextlib/bwidget/buttonbox.rd")
(find-rurima "--- tagid(tagOrId)" "== Instance Methods" "= class Tk::BWidget::ButtonBox < TkWindow" "refm/api/src/tkextlib/bwidget/buttonbox.rd")
(find-rurima "= class Tk::BWidget::TitleFrame < TkWindow" "refm/api/src/tkextlib/bwidget/titleframe.rd")
(find-rurima "== Instance Methods" "= class Tk::BWidget::TitleFrame < TkWindow" "refm/api/src/tkextlib/bwidget/titleframe.rd")
(find-rurima "--- get_frame(&b)" "== Instance Methods" "= class Tk::BWidget::TitleFrame < TkWindow" "refm/api/src/tkextlib/bwidget/titleframe.rd")
(find-rurima "= class Tk::BWidget::NoteBook::Event_for_Tabs < TkEvent::Event" "refm/api/src/tkextlib/bwidget/notebook/NoteBook__Event_for_Tabs")
(find-rurima "== Class Methods" "= class Tk::BWidget::NoteBook::Event_for_Tabs < TkEvent::Event" "refm/api/src/tkextlib/bwidget/notebook/NoteBook__Event_for_Tabs")
(find-rurima "--- _get_extra_args_tbl" "== Class Methods" "= class Tk::BWidget::NoteBook::Event_for_Tabs < TkEvent::Event" "refm/api/src/tkextlib/bwidget/notebook/NoteBook__Event_for_Tabs")
(find-rurima "= class Tk::BWidget::Separator < TkWindow" "refm/api/src/tkextlib/bwidget/separator.rd")
(find-rurima "= class Tk::BWidget::Tree::Node < TkObject" "refm/api/src/tkextlib/bwidget/tree/Tree__Node")
(find-rurima "== Class Methods" "= class Tk::BWidget::Tree::Node < TkObject" "refm/api/src/tkextlib/bwidget/tree/Tree__Node")
(find-rurima "--- id2obj(tree, id)" "== Class Methods" "= class Tk::BWidget::Tree::Node < TkObject" "refm/api/src/tkextlib/bwidget/tree/Tree__Node")
(find-rurima "--- new(tree, *args)" "== Class Methods" "= class Tk::BWidget::Tree::Node < TkObject" "refm/api/src/tkextlib/bwidget/tree/Tree__Node")
(find-rurima "== Instance Methods" "= class Tk::BWidget::Tree::Node < TkObject" "refm/api/src/tkextlib/bwidget/tree/Tree__Node")
(find-rurima "--- [](key)" "== Instance Methods" "= class Tk::BWidget::Tree::Node < TkObject" "refm/api/src/tkextlib/bwidget/tree/Tree__Node")
(find-rurima "--- []=(key, val)" "== Instance Methods" "= class Tk::BWidget::Tree::Node < TkObject" "refm/api/src/tkextlib/bwidget/tree/Tree__Node")
(find-rurima "--- cget(key)" "== Instance Methods" "= class Tk::BWidget::Tree::Node < TkObject" "refm/api/src/tkextlib/bwidget/tree/Tree__Node")
(find-rurima "--- close_tree(recurse = None)" "== Instance Methods" "= class Tk::BWidget::Tree::Node < TkObject" "refm/api/src/tkextlib/bwidget/tree/Tree__Node")
(find-rurima "--- configinfo(key = nil)" "== Instance Methods" "= class Tk::BWidget::Tree::Node < TkObject" "refm/api/src/tkextlib/bwidget/tree/Tree__Node")
(find-rurima "--- configure(key, val = None)" "== Instance Methods" "= class Tk::BWidget::Tree::Node < TkObject" "refm/api/src/tkextlib/bwidget/tree/Tree__Node")
(find-rurima "--- current_configinfo(key = nil)" "== Instance Methods" "= class Tk::BWidget::Tree::Node < TkObject" "refm/api/src/tkextlib/bwidget/tree/Tree__Node")
(find-rurima "--- delete" "== Instance Methods" "= class Tk::BWidget::Tree::Node < TkObject" "refm/api/src/tkextlib/bwidget/tree/Tree__Node")
(find-rurima "--- edit(*args)" "== Instance Methods" "= class Tk::BWidget::Tree::Node < TkObject" "refm/api/src/tkextlib/bwidget/tree/Tree__Node")
(find-rurima "--- exist?" "== Instance Methods" "= class Tk::BWidget::Tree::Node < TkObject" "refm/api/src/tkextlib/bwidget/tree/Tree__Node")
(find-rurima "--- id" "== Instance Methods" "= class Tk::BWidget::Tree::Node < TkObject" "refm/api/src/tkextlib/bwidget/tree/Tree__Node")
(find-rurima "--- index" "== Instance Methods" "= class Tk::BWidget::Tree::Node < TkObject" "refm/api/src/tkextlib/bwidget/tree/Tree__Node")
(find-rurima "--- move(index, parent = nil)" "== Instance Methods" "= class Tk::BWidget::Tree::Node < TkObject" "refm/api/src/tkextlib/bwidget/tree/Tree__Node")
(find-rurima "--- open?" "== Instance Methods" "= class Tk::BWidget::Tree::Node < TkObject" "refm/api/src/tkextlib/bwidget/tree/Tree__Node")
(find-rurima "--- open_tree(recurse = None)" "== Instance Methods" "= class Tk::BWidget::Tree::Node < TkObject" "refm/api/src/tkextlib/bwidget/tree/Tree__Node")
(find-rurima "--- parent" "== Instance Methods" "= class Tk::BWidget::Tree::Node < TkObject" "refm/api/src/tkextlib/bwidget/tree/Tree__Node")
(find-rurima "--- reorder(neworder)" "== Instance Methods" "= class Tk::BWidget::Tree::Node < TkObject" "refm/api/src/tkextlib/bwidget/tree/Tree__Node")
(find-rurima "--- see" "== Instance Methods" "= class Tk::BWidget::Tree::Node < TkObject" "refm/api/src/tkextlib/bwidget/tree/Tree__Node")
(find-rurima "--- selection_add" "== Instance Methods" "= class Tk::BWidget::Tree::Node < TkObject" "refm/api/src/tkextlib/bwidget/tree/Tree__Node")
(find-rurima "--- selection_remove" "== Instance Methods" "= class Tk::BWidget::Tree::Node < TkObject" "refm/api/src/tkextlib/bwidget/tree/Tree__Node")
(find-rurima "--- selection_set" "== Instance Methods" "= class Tk::BWidget::Tree::Node < TkObject" "refm/api/src/tkextlib/bwidget/tree/Tree__Node")
(find-rurima "--- selection_toggle" "== Instance Methods" "= class Tk::BWidget::Tree::Node < TkObject" "refm/api/src/tkextlib/bwidget/tree/Tree__Node")
(find-rurima "--- toggle" "== Instance Methods" "= class Tk::BWidget::Tree::Node < TkObject" "refm/api/src/tkextlib/bwidget/tree/Tree__Node")
(find-rurima "--- tree" "== Instance Methods" "= class Tk::BWidget::Tree::Node < TkObject" "refm/api/src/tkextlib/bwidget/tree/Tree__Node")
(find-rurima "--- visible" "== Instance Methods" "= class Tk::BWidget::Tree::Node < TkObject" "refm/api/src/tkextlib/bwidget/tree/Tree__Node")
(find-rurima "= class Tk::BWidget::Tree::Event_for_Items < TkEvent::Event" "refm/api/src/tkextlib/bwidget/tree/Tree__Event_for_Items")
(find-rurima "== Class Methods" "= class Tk::BWidget::Tree::Event_for_Items < TkEvent::Event" "refm/api/src/tkextlib/bwidget/tree/Tree__Event_for_Items")
(find-rurima "--- _get_extra_args_tbl" "== Class Methods" "= class Tk::BWidget::Tree::Event_for_Items < TkEvent::Event" "refm/api/src/tkextlib/bwidget/tree/Tree__Event_for_Items")
(find-rurima "= class Tk::BWidget::ListBox < TkWindow" "refm/api/src/tkextlib/bwidget/listbox.rd")
(find-rurima "== Instance Methods" "= class Tk::BWidget::ListBox < TkWindow" "refm/api/src/tkextlib/bwidget/listbox.rd")
(find-rurima "--- delete(*args)" "== Instance Methods" "= class Tk::BWidget::ListBox < TkWindow" "refm/api/src/tkextlib/bwidget/listbox.rd")
(find-rurima "--- edit(item, text, *args)" "== Instance Methods" "= class Tk::BWidget::ListBox < TkWindow" "refm/api/src/tkextlib/bwidget/listbox.rd")
(find-rurima "--- exist?(item)" "== Instance Methods" "= class Tk::BWidget::ListBox < TkWindow" "refm/api/src/tkextlib/bwidget/listbox.rd")
(find-rurima "--- get_item(idx)" "== Instance Methods" "= class Tk::BWidget::ListBox < TkWindow" "refm/api/src/tkextlib/bwidget/listbox.rd")
(find-rurima "--- imagebind(context, *args)" "== Instance Methods" "= class Tk::BWidget::ListBox < TkWindow" "refm/api/src/tkextlib/bwidget/listbox.rd")
(find-rurima "--- imagebind_append(context, *args)" "== Instance Methods" "= class Tk::BWidget::ListBox < TkWindow" "refm/api/src/tkextlib/bwidget/listbox.rd")
(find-rurima "--- imagebind_remove(*args)" "== Instance Methods" "= class Tk::BWidget::ListBox < TkWindow" "refm/api/src/tkextlib/bwidget/listbox.rd")
(find-rurima "--- imagebindinfo(*args)" "== Instance Methods" "= class Tk::BWidget::ListBox < TkWindow" "refm/api/src/tkextlib/bwidget/listbox.rd")
(find-rurima "--- index(item)" "== Instance Methods" "= class Tk::BWidget::ListBox < TkWindow" "refm/api/src/tkextlib/bwidget/listbox.rd")
(find-rurima "--- insert(idx, item, keys = {})" "== Instance Methods" "= class Tk::BWidget::ListBox < TkWindow" "refm/api/src/tkextlib/bwidget/listbox.rd")
(find-rurima "--- items(first = None, last = None)" "== Instance Methods" "= class Tk::BWidget::ListBox < TkWindow" "refm/api/src/tkextlib/bwidget/listbox.rd")
(find-rurima "--- move(item, idx)" "== Instance Methods" "= class Tk::BWidget::ListBox < TkWindow" "refm/api/src/tkextlib/bwidget/listbox.rd")
(find-rurima "--- reorder(neworder)" "== Instance Methods" "= class Tk::BWidget::ListBox < TkWindow" "refm/api/src/tkextlib/bwidget/listbox.rd")
(find-rurima "--- see(item)" "== Instance Methods" "= class Tk::BWidget::ListBox < TkWindow" "refm/api/src/tkextlib/bwidget/listbox.rd")
(find-rurima "--- selection_add(*args)" "== Instance Methods" "= class Tk::BWidget::ListBox < TkWindow" "refm/api/src/tkextlib/bwidget/listbox.rd")
(find-rurima "--- selection_clear" "== Instance Methods" "= class Tk::BWidget::ListBox < TkWindow" "refm/api/src/tkextlib/bwidget/listbox.rd")
(find-rurima "--- selection_get(*args)" "== Instance Methods" "= class Tk::BWidget::ListBox < TkWindow" "refm/api/src/tkextlib/bwidget/listbox.rd")
(find-rurima "--- selection_remove(*args)" "== Instance Methods" "= class Tk::BWidget::ListBox < TkWindow" "refm/api/src/tkextlib/bwidget/listbox.rd")
(find-rurima "--- selection_set(*args)" "== Instance Methods" "= class Tk::BWidget::ListBox < TkWindow" "refm/api/src/tkextlib/bwidget/listbox.rd")
(find-rurima "--- tagid(tag)" "== Instance Methods" "= class Tk::BWidget::ListBox < TkWindow" "refm/api/src/tkextlib/bwidget/listbox.rd")
(find-rurima "--- textbind(context, *args)" "== Instance Methods" "= class Tk::BWidget::ListBox < TkWindow" "refm/api/src/tkextlib/bwidget/listbox.rd")
(find-rurima "--- textbind_append(context, *args)" "== Instance Methods" "= class Tk::BWidget::ListBox < TkWindow" "refm/api/src/tkextlib/bwidget/listbox.rd")
(find-rurima "--- textbind_remove(*args)" "== Instance Methods" "= class Tk::BWidget::ListBox < TkWindow" "refm/api/src/tkextlib/bwidget/listbox.rd")
(find-rurima "--- textbindinfo(*args)" "== Instance Methods" "= class Tk::BWidget::ListBox < TkWindow" "refm/api/src/tkextlib/bwidget/listbox.rd")
(find-rurima "= module Tk::BWidget::Widget" "refm/api/src/tkextlib/bwidget/widget.rd")
(find-rurima "== Singleton Methods" "= module Tk::BWidget::Widget" "refm/api/src/tkextlib/bwidget/widget.rd")
(find-rurima "--- __cget_cmd" "== Singleton Methods" "= module Tk::BWidget::Widget" "refm/api/src/tkextlib/bwidget/widget.rd")
(find-rurima "--- __config_cmd" "== Singleton Methods" "= module Tk::BWidget::Widget" "refm/api/src/tkextlib/bwidget/widget.rd")
(find-rurima "--- __pathname" "== Singleton Methods" "= module Tk::BWidget::Widget" "refm/api/src/tkextlib/bwidget/widget.rd")
(find-rurima "--- add_map(klass, subclass, subpath, opts)" "== Singleton Methods" "= module Tk::BWidget::Widget" "refm/api/src/tkextlib/bwidget/widget.rd")
(find-rurima "--- bwinclude(klass, subclass, subpath, *args)" "== Singleton Methods" "= module Tk::BWidget::Widget" "refm/api/src/tkextlib/bwidget/widget.rd")
(find-rurima "--- cget(slot)" "== Singleton Methods" "= module Tk::BWidget::Widget" "refm/api/src/tkextlib/bwidget/widget.rd")
(find-rurima "--- create(klass, path, rename = None, &b)" "== Singleton Methods" "= module Tk::BWidget::Widget" "refm/api/src/tkextlib/bwidget/widget.rd")
(find-rurima "--- declare(klass, optlist)" "== Singleton Methods" "= module Tk::BWidget::Widget" "refm/api/src/tkextlib/bwidget/widget.rd")
(find-rurima "--- define(klass, filename, *args)" "== Singleton Methods" "= module Tk::BWidget::Widget" "refm/api/src/tkextlib/bwidget/widget.rd")
(find-rurima "--- destroy(win)" "== Singleton Methods" "= module Tk::BWidget::Widget" "refm/api/src/tkextlib/bwidget/widget.rd")
(find-rurima "--- focus_next(win)" "== Singleton Methods" "= module Tk::BWidget::Widget" "refm/api/src/tkextlib/bwidget/widget.rd")
(find-rurima "--- focus_ok(win)" "== Singleton Methods" "= module Tk::BWidget::Widget" "refm/api/src/tkextlib/bwidget/widget.rd")
(find-rurima "--- focus_prev(win)" "== Singleton Methods" "= module Tk::BWidget::Widget" "refm/api/src/tkextlib/bwidget/widget.rd")
(find-rurima "--- generate_doc(dir, widgetlist)" "== Singleton Methods" "= module Tk::BWidget::Widget" "refm/api/src/tkextlib/bwidget/widget.rd")
(find-rurima "--- generate_widget_doc(klass, iscmd, file)" "== Singleton Methods" "= module Tk::BWidget::Widget" "refm/api/src/tkextlib/bwidget/widget.rd")
(find-rurima "--- get_option(win, option)" "== Singleton Methods" "= module Tk::BWidget::Widget" "refm/api/src/tkextlib/bwidget/widget.rd")
(find-rurima "--- get_variable(win, varname, my_varname = None)" "== Singleton Methods" "= module Tk::BWidget::Widget" "refm/api/src/tkextlib/bwidget/widget.rd")
(find-rurima "--- has_changed(win, option, pvalue)" "== Singleton Methods" "= module Tk::BWidget::Widget" "refm/api/src/tkextlib/bwidget/widget.rd")
(find-rurima "--- init(klass, win, options)" "== Singleton Methods" "= module Tk::BWidget::Widget" "refm/api/src/tkextlib/bwidget/widget.rd")
(find-rurima "--- set_option(win, option, value)" "== Singleton Methods" "= module Tk::BWidget::Widget" "refm/api/src/tkextlib/bwidget/widget.rd")
(find-rurima "--- sub_cget(win, subwidget)" "== Singleton Methods" "= module Tk::BWidget::Widget" "refm/api/src/tkextlib/bwidget/widget.rd")
(find-rurima "--- sync_options(klass, subclass, subpath, options)" "== Singleton Methods" "= module Tk::BWidget::Widget" "refm/api/src/tkextlib/bwidget/widget.rd")
(find-rurima "--- tkinclude(klass, tkwidget, subpath, *args)" "== Singleton Methods" "= module Tk::BWidget::Widget" "refm/api/src/tkextlib/bwidget/widget.rd")
(find-rurima "= class Tk::BWidget::ArrowButton < Tk::BWidget::Button" "refm/api/src/tkextlib/bwidget/arrowbutton.rd")
(find-rurima "= class Tk::BWidget::Dialog < TkWindow" "refm/api/src/tkextlib/bwidget/dialog.rd")
(find-rurima "== Class Methods" "= class Tk::BWidget::Dialog < TkWindow" "refm/api/src/tkextlib/bwidget/dialog.rd")
(find-rurima "--- new(parent = nil, keys = nil)" "== Class Methods" "= class Tk::BWidget::Dialog < TkWindow" "refm/api/src/tkextlib/bwidget/dialog.rd")
(find-rurima "== Instance Methods" "= class Tk::BWidget::Dialog < TkWindow" "refm/api/src/tkextlib/bwidget/dialog.rd")
(find-rurima "--- add(keys = {}, &b)" "== Instance Methods" "= class Tk::BWidget::Dialog < TkWindow" "refm/api/src/tkextlib/bwidget/dialog.rd")
(find-rurima "--- cget(slot)" "== Instance Methods" "= class Tk::BWidget::Dialog < TkWindow" "refm/api/src/tkextlib/bwidget/dialog.rd")
(find-rurima "--- configinfo(slot = nil)" "== Instance Methods" "= class Tk::BWidget::Dialog < TkWindow" "refm/api/src/tkextlib/bwidget/dialog.rd")
(find-rurima "--- configure(slot, value = None)" "== Instance Methods" "= class Tk::BWidget::Dialog < TkWindow" "refm/api/src/tkextlib/bwidget/dialog.rd")
(find-rurima "--- create_self(keys)" "== Instance Methods" "= class Tk::BWidget::Dialog < TkWindow" "refm/api/src/tkextlib/bwidget/dialog.rd")
(find-rurima "--- draw(focus_win = None)" "== Instance Methods" "= class Tk::BWidget::Dialog < TkWindow" "refm/api/src/tkextlib/bwidget/dialog.rd")
(find-rurima "--- enddialog(ret)" "== Instance Methods" "= class Tk::BWidget::Dialog < TkWindow" "refm/api/src/tkextlib/bwidget/dialog.rd")
(find-rurima "--- get_buttonbox(&b)" "== Instance Methods" "= class Tk::BWidget::Dialog < TkWindow" "refm/api/src/tkextlib/bwidget/dialog.rd")
(find-rurima "--- get_frame(&b)" "== Instance Methods" "= class Tk::BWidget::Dialog < TkWindow" "refm/api/src/tkextlib/bwidget/dialog.rd")
(find-rurima "--- index(idx)" "== Instance Methods" "= class Tk::BWidget::Dialog < TkWindow" "refm/api/src/tkextlib/bwidget/dialog.rd")
(find-rurima "--- invoke(idx)" "== Instance Methods" "= class Tk::BWidget::Dialog < TkWindow" "refm/api/src/tkextlib/bwidget/dialog.rd")
(find-rurima "--- set_focus(idx)" "== Instance Methods" "= class Tk::BWidget::Dialog < TkWindow" "refm/api/src/tkextlib/bwidget/dialog.rd")
(find-rurima "--- tagid(tagOrId)" "== Instance Methods" "= class Tk::BWidget::Dialog < TkWindow" "refm/api/src/tkextlib/bwidget/dialog.rd")
(find-rurima "--- withdraw" "== Instance Methods" "= class Tk::BWidget::Dialog < TkWindow" "refm/api/src/tkextlib/bwidget/dialog.rd")
(find-rurima "= module Tk::BWidget::DragSite" "refm/api/src/tkextlib/bwidget/dragsite.rd")
(find-rurima "== Singleton Methods" "= module Tk::BWidget::DragSite" "refm/api/src/tkextlib/bwidget/dragsite.rd")
(find-rurima "--- include(klass, type, event)" "== Singleton Methods" "= module Tk::BWidget::DragSite" "refm/api/src/tkextlib/bwidget/dragsite.rd")
(find-rurima "--- register(path, keys = {})" "== Singleton Methods" "= module Tk::BWidget::DragSite" "refm/api/src/tkextlib/bwidget/dragsite.rd")
(find-rurima "--- set_drag(path, subpath, initcmd, endcmd, force = None)" "== Singleton Methods" "= module Tk::BWidget::DragSite" "refm/api/src/tkextlib/bwidget/dragsite.rd")
(find-rurima "= class Tk::BWidget::PanedWindow < TkWindow" "refm/api/src/tkextlib/bwidget/panedwindow.rd")
(find-rurima "== Instance Methods" "= class Tk::BWidget::PanedWindow < TkWindow" "refm/api/src/tkextlib/bwidget/panedwindow.rd")
(find-rurima "--- add(keys = {})" "== Instance Methods" "= class Tk::BWidget::PanedWindow < TkWindow" "refm/api/src/tkextlib/bwidget/panedwindow.rd")
(find-rurima "--- get_frame(idx, &b)" "== Instance Methods" "= class Tk::BWidget::PanedWindow < TkWindow" "refm/api/src/tkextlib/bwidget/panedwindow.rd")
(find-rurima "= class Tk::BWidget::ScrollableFrame < TkWindow" "refm/api/src/tkextlib/bwidget/scrollableframe.rd")
(find-rurima "== Instance Methods" "= class Tk::BWidget::ScrollableFrame < TkWindow" "refm/api/src/tkextlib/bwidget/scrollableframe.rd")
(find-rurima "--- get_frame(&b)" "== Instance Methods" "= class Tk::BWidget::ScrollableFrame < TkWindow" "refm/api/src/tkextlib/bwidget/scrollableframe.rd")
(find-rurima "--- see(win, vert = None, horiz = None)" "== Instance Methods" "= class Tk::BWidget::ScrollableFrame < TkWindow" "refm/api/src/tkextlib/bwidget/scrollableframe.rd")
(find-rurima "= module Tk::BWidget::DropSite" "refm/api/src/tkextlib/bwidget/dropsite.rd")
(find-rurima "== Singleton Methods" "= module Tk::BWidget::DropSite" "refm/api/src/tkextlib/bwidget/dropsite.rd")
(find-rurima "--- include(klass, type)" "== Singleton Methods" "= module Tk::BWidget::DropSite" "refm/api/src/tkextlib/bwidget/dropsite.rd")
(find-rurima "--- register(path, keys = {})" "== Singleton Methods" "= module Tk::BWidget::DropSite" "refm/api/src/tkextlib/bwidget/dropsite.rd")
(find-rurima "--- set_cursor(cursor)" "== Singleton Methods" "= module Tk::BWidget::DropSite" "refm/api/src/tkextlib/bwidget/dropsite.rd")
(find-rurima "--- set_drop(path, subpath, dropover, drop, force = None)" "== Singleton Methods" "= module Tk::BWidget::DropSite" "refm/api/src/tkextlib/bwidget/dropsite.rd")
(find-rurima "--- set_operation(op)" "== Singleton Methods" "= module Tk::BWidget::DropSite" "refm/api/src/tkextlib/bwidget/dropsite.rd")
(find-rurima "= class Tk::BWidget::ProgressBar < TkWindow" "refm/api/src/tkextlib/bwidget/progressbar.rd")
(find-rurima "= module Tk::Img" "refm/api/src/tkextlib/tkimg.rd")
(find-rurima "== Singleton Methods" "= module Tk::Img" "refm/api/src/tkextlib/tkimg.rd")
(find-rurima "--- package_name" "== Singleton Methods" "= module Tk::Img" "refm/api/src/tkextlib/tkimg.rd")
(find-rurima "--- package_version" "== Singleton Methods" "= module Tk::Img" "refm/api/src/tkextlib/tkimg.rd")
(find-rurima "= class Tk::TkTable::BrowseCommand::ValidateArgs < TkUtil::CallbackSubst" "refm/api/src/tkextlib/tktable/TkTable__BrowseCommand__ValidateArgs")
(find-rurima "== Class Methods" "= class Tk::TkTable::BrowseCommand::ValidateArgs < TkUtil::CallbackSubst" "refm/api/src/tkextlib/tktable/TkTable__BrowseCommand__ValidateArgs")
(find-rurima "--- ret_val(val)" "== Class Methods" "= class Tk::TkTable::BrowseCommand::ValidateArgs < TkUtil::CallbackSubst" "refm/api/src/tkextlib/tktable/TkTable__BrowseCommand__ValidateArgs")
(find-rurima "= class Tk::TkTable::BrowseCommand < TkValidateCommand" "refm/api/src/tkextlib/tktable/TkTable__BrowseCommand")
(find-rurima "= class Tk::TkTable::SelectionCommand::ValidateArgs < TkUtil::CallbackSubst" "refm/api/src/tkextlib/tktable/TkTable__SelectionCommand__ValidateArgs")
(find-rurima "== Class Methods" "= class Tk::TkTable::SelectionCommand::ValidateArgs < TkUtil::CallbackSubst" "refm/api/src/tkextlib/tktable/TkTable__SelectionCommand__ValidateArgs")
(find-rurima "--- ret_val(val)" "== Class Methods" "= class Tk::TkTable::SelectionCommand::ValidateArgs < TkUtil::CallbackSubst" "refm/api/src/tkextlib/tktable/TkTable__SelectionCommand__ValidateArgs")
(find-rurima "= class Tk::TkTable::ValidateCommand < TkValidateCommand" "refm/api/src/tkextlib/tktable/TkTable__ValidateCommand")
(find-rurima "= class Tk::TkTable::ValidateCommand::ValidateArgs < TkUtil::CallbackSubst" "refm/api/src/tkextlib/tktable/TkTable__ValidateCommand__ValidateArgs")
(find-rurima "== Class Methods" "= class Tk::TkTable::ValidateCommand::ValidateArgs < TkUtil::CallbackSubst" "refm/api/src/tkextlib/tktable/TkTable__ValidateCommand__ValidateArgs")
(find-rurima "--- ret_val(val)" "== Class Methods" "= class Tk::TkTable::ValidateCommand::ValidateArgs < TkUtil::CallbackSubst" "refm/api/src/tkextlib/tktable/TkTable__ValidateCommand__ValidateArgs")
(find-rurima "= class Tk::TkTable::CellCommand < TkValidateCommand" "refm/api/src/tkextlib/tktable/TkTable__CellCommand")
(find-rurima "= module Tk::TkTable::ConfigMethod" "refm/api/src/tkextlib/tktable/TkTable__ConfigMethod")
(find-rurima "== Instance Methods" "= module Tk::TkTable::ConfigMethod" "refm/api/src/tkextlib/tktable/TkTable__ConfigMethod")
(find-rurima "--- tag_cget(tagOrId, option)" "== Instance Methods" "= module Tk::TkTable::ConfigMethod" "refm/api/src/tkextlib/tktable/TkTable__ConfigMethod")
(find-rurima "--- tag_configure(tagOrId, slot, value = None)" "== Instance Methods" "= module Tk::TkTable::ConfigMethod" "refm/api/src/tkextlib/tktable/TkTable__ConfigMethod")
(find-rurima "--- tag_configinfo(tagOrId, slot = nil)" "== Instance Methods" "= module Tk::TkTable::ConfigMethod" "refm/api/src/tkextlib/tktable/TkTable__ConfigMethod")
(find-rurima "--- current_tag_configinfo(tagOrId, slot = nil)" "== Instance Methods" "= module Tk::TkTable::ConfigMethod" "refm/api/src/tkextlib/tktable/TkTable__ConfigMethod")
(find-rurima "--- window_cget(tagOrId, option)" "== Instance Methods" "= module Tk::TkTable::ConfigMethod" "refm/api/src/tkextlib/tktable/TkTable__ConfigMethod")
(find-rurima "--- window_configure(tagOrId, slot, value = None)" "== Instance Methods" "= module Tk::TkTable::ConfigMethod" "refm/api/src/tkextlib/tktable/TkTable__ConfigMethod")
(find-rurima "--- window_configinfo(tagOrId, slot = nil)" "== Instance Methods" "= module Tk::TkTable::ConfigMethod" "refm/api/src/tkextlib/tktable/TkTable__ConfigMethod")
(find-rurima "--- current_window_configinfo(tagOrId, slot = nil)" "== Instance Methods" "= module Tk::TkTable::ConfigMethod" "refm/api/src/tkextlib/tktable/TkTable__ConfigMethod")
(find-rurima "= class Tk::TkTable::CellTag < TkObject" "refm/api/src/tkextlib/tktable/TkTable__CellTag")
(find-rurima "== Class Methods" "= class Tk::TkTable::CellTag < TkObject" "refm/api/src/tkextlib/tktable/TkTable__CellTag")
(find-rurima "--- id2obj(table, id)" "== Class Methods" "= class Tk::TkTable::CellTag < TkObject" "refm/api/src/tkextlib/tktable/TkTable__CellTag")
(find-rurima "--- new(parent, keys = nil)" "== Class Methods" "= class Tk::TkTable::CellTag < TkObject" "refm/api/src/tkextlib/tktable/TkTable__CellTag")
(find-rurima "== Instance Methods" "= class Tk::TkTable::CellTag < TkObject" "refm/api/src/tkextlib/tktable/TkTable__CellTag")
(find-rurima "--- id" "== Instance Methods" "= class Tk::TkTable::CellTag < TkObject" "refm/api/src/tkextlib/tktable/TkTable__CellTag")
(find-rurima "--- destroy" "== Instance Methods" "= class Tk::TkTable::CellTag < TkObject" "refm/api/src/tkextlib/tktable/TkTable__CellTag")
(find-rurima "--- delete" "== Instance Methods" "= class Tk::TkTable::CellTag < TkObject" "refm/api/src/tkextlib/tktable/TkTable__CellTag")
(find-rurima "--- exist?" "== Instance Methods" "= class Tk::TkTable::CellTag < TkObject" "refm/api/src/tkextlib/tktable/TkTable__CellTag")
(find-rurima "--- include?(idx)" "== Instance Methods" "= class Tk::TkTable::CellTag < TkObject" "refm/api/src/tkextlib/tktable/TkTable__CellTag")
(find-rurima "--- add_cell(*args)" "== Instance Methods" "= class Tk::TkTable::CellTag < TkObject" "refm/api/src/tkextlib/tktable/TkTable__CellTag")
(find-rurima "--- add_col(*args)" "== Instance Methods" "= class Tk::TkTable::CellTag < TkObject" "refm/api/src/tkextlib/tktable/TkTable__CellTag")
(find-rurima "--- add_row(*args)" "== Instance Methods" "= class Tk::TkTable::CellTag < TkObject" "refm/api/src/tkextlib/tktable/TkTable__CellTag")
(find-rurima "--- raise(target = None)" "== Instance Methods" "= class Tk::TkTable::CellTag < TkObject" "refm/api/src/tkextlib/tktable/TkTable__CellTag")
(find-rurima "--- lower(target = None)" "== Instance Methods" "= class Tk::TkTable::CellTag < TkObject" "refm/api/src/tkextlib/tktable/TkTable__CellTag")
(find-rurima "--- cget(key)" "== Instance Methods" "= class Tk::TkTable::CellTag < TkObject" "refm/api/src/tkextlib/tktable/TkTable__CellTag")
(find-rurima "--- configure(key, val = None)" "== Instance Methods" "= class Tk::TkTable::CellTag < TkObject" "refm/api/src/tkextlib/tktable/TkTable__CellTag")
(find-rurima "--- configinfo(key = nil)" "== Instance Methods" "= class Tk::TkTable::CellTag < TkObject" "refm/api/src/tkextlib/tktable/TkTable__CellTag")
(find-rurima "--- current_configinfo(key = nil)" "== Instance Methods" "= class Tk::TkTable::CellTag < TkObject" "refm/api/src/tkextlib/tktable/TkTable__CellTag")
(find-rurima "= class Tk::TkTable::CellCommand::ValidateArgs < TkUtil::CallbackSubst" "refm/api/src/tkextlib/tktable/TkTable__CellCommand__ValidateArgs")
(find-rurima "== Class Methods" "= class Tk::TkTable::CellCommand::ValidateArgs < TkUtil::CallbackSubst" "refm/api/src/tkextlib/tktable/TkTable__CellCommand__ValidateArgs")
(find-rurima "--- ret_val(val)" "== Class Methods" "= class Tk::TkTable::CellCommand::ValidateArgs < TkUtil::CallbackSubst" "refm/api/src/tkextlib/tktable/TkTable__CellCommand__ValidateArgs")
(find-rurima "= class Tk::TkTable::NamedCellTag < Tk::TkTable::CellTag" "refm/api/src/tkextlib/tktable/TkTable__NamedCellTag")
(find-rurima "== Class Methods" "= class Tk::TkTable::NamedCellTag < Tk::TkTable::CellTag" "refm/api/src/tkextlib/tktable/TkTable__NamedCellTag")
(find-rurima "--- new(parent, name, keys = nil)" "== Class Methods" "= class Tk::TkTable::NamedCellTag < Tk::TkTable::CellTag" "refm/api/src/tkextlib/tktable/TkTable__NamedCellTag")
(find-rurima "= class Tk::TkTable::SelectionCommand < TkValidateCommand" "refm/api/src/tkextlib/tktable/TkTable__SelectionCommand")
(find-rurima "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "== Class Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- package_name" "== Class Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- package_version" "== Class Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- activate(idx)" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- bbox(idx)" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- border_mark(x, y)" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- border_mark_row(x, y)" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- border_mark_col(x, y)" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- border_dragto(x, y)" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- clear_cache(first = None, last = None)" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- clear_sizes(first = None, last = None)" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- clear_tags(first = None, last = None)" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- clear_all(first = None, last = None)" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- curselection" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- curselection=(val)" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- curvalue" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- curvalue=(val)" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- delete_active(idx1, idx2 = None)" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- delete_cols(*args)" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- delete_rows(*args)" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- get(idx)" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- get_area(idx1, idx2)" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- height_list" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- height(row)" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- set_height(*pairs)" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- hidden_list" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- hidden?(idx, *args)" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- icursor" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- icursor_set(idx)" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- index(idx)" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- row_index(idx)" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- col_index(idx)" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- insert_active(idx, val)" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- insert_cols(*args)" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- insert_rows(*args)" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- reread" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- scan_mark(x, y)" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- scan_dragto(x, y)" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- see(idx)" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- selection_anchor(idx)" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- selection_clear(first, last = None)" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- selection_clear_all" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- selection_include?(idx)" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- selection_present" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- selection_set(first, last = None)" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- set(*pairs)" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- set_row(*pairs)" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- set_col(*pairs)" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- spans" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- span_list" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- set_spans(*pairs)" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- tagid(tag)" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- tagid2obj(tagid)" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- tag_cell(tag, *cells)" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- tag_reset(*cells)" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- tag_col(tag, *cols)" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- tag_col_reset(*cols)" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- tag_delete(tag)" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- tag_exist?(tag)" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- tag_include?(tag, idx)" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- tag_lower(tag, target = None)" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- tag_names(pat = None)" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- tag_raise(tag, target = None)" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- tag_row(tag, *rows)" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- tag_row_reset(*rows)" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- validate(idx)" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- width_list" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- width(row)" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- set_width(*pairs)" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- window_delete(*args)" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- window_move(from_idx, to_idx)" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "--- window_names(pat = None)" "== Instance Methods" "= class Tk::TkTable < TkWindow" "refm/api/src/tkextlib/tktable/TkTable")
(find-rurima "= module Tk::BWidget" "refm/api/src/tkextlib/bwidget.rd")
(find-rurima "== Singleton Methods" "= module Tk::BWidget" "refm/api/src/tkextlib/bwidget.rd")
(find-rurima "--- XLFDfont(cmd, *args)" "== Singleton Methods" "= module Tk::BWidget" "refm/api/src/tkextlib/bwidget.rd")
(find-rurima "--- assert(exp, msg = None)" "== Singleton Methods" "= module Tk::BWidget" "refm/api/src/tkextlib/bwidget.rd")
(find-rurima "--- badOptionString(type, value, list)" "== Singleton Methods" "= module Tk::BWidget" "refm/api/src/tkextlib/bwidget.rd")
(find-rurima "--- bindMouseWheel(widget)" "== Singleton Methods" "= module Tk::BWidget" "refm/api/src/tkextlib/bwidget.rd")
(find-rurima "--- classes(klass)" "== Singleton Methods" "= module Tk::BWidget" "refm/api/src/tkextlib/bwidget.rd")
(find-rurima "--- clonename(menu)" "== Singleton Methods" "= module Tk::BWidget" "refm/api/src/tkextlib/bwidget.rd")
(find-rurima "--- focus(opt, path)" "== Singleton Methods" "= module Tk::BWidget" "refm/api/src/tkextlib/bwidget.rd")
(find-rurima "--- get3dcolor(path, bgcolor)" "== Singleton Methods" "= module Tk::BWidget" "refm/api/src/tkextlib/bwidget.rd")
(find-rurima "--- getname(name)" "== Singleton Methods" "= module Tk::BWidget" "refm/api/src/tkextlib/bwidget.rd")
(find-rurima "--- grab(opt, path)" "== Singleton Methods" "= module Tk::BWidget" "refm/api/src/tkextlib/bwidget.rd")
(find-rurima "--- inuse(klass)" "== Singleton Methods" "= module Tk::BWidget" "refm/api/src/tkextlib/bwidget.rd")
(find-rurima "--- library(klass, *klasses)" "== Singleton Methods" "= module Tk::BWidget" "refm/api/src/tkextlib/bwidget.rd")
(find-rurima "--- lreorder(list, neworder)" "== Singleton Methods" "= module Tk::BWidget" "refm/api/src/tkextlib/bwidget.rd")
(find-rurima "--- package_name" "== Singleton Methods" "= module Tk::BWidget" "refm/api/src/tkextlib/bwidget.rd")
(find-rurima "--- package_version" "== Singleton Methods" "= module Tk::BWidget" "refm/api/src/tkextlib/bwidget.rd")
(find-rurima "--- parsetext(text)" "== Singleton Methods" "= module Tk::BWidget" "refm/api/src/tkextlib/bwidget.rd")
(find-rurima "--- place(path, w, h, *args)" "== Singleton Methods" "= module Tk::BWidget" "refm/api/src/tkextlib/bwidget.rd")
(find-rurima "--- write(file, mode = None)" "== Singleton Methods" "= module Tk::BWidget" "refm/api/src/tkextlib/bwidget.rd")
(find-rurima "--- wrongNumArgsString(str)" "== Singleton Methods" "= module Tk::BWidget" "refm/api/src/tkextlib/bwidget.rd")
(find-rurima "= module Tk::Tcllib" "refm/api/src/tkextlib/tcllib.rd")
(find-rurima "= class Tk::HTML_Widget::ClippingWindow < TkWindow" "refm/api/src/tkextlib/tkHTML/ClippingWindow")
(find-rurima "== Class Methods" "= class Tk::HTML_Widget::ClippingWindow < TkWindow" "refm/api/src/tkextlib/tkHTML/ClippingWindow")
(find-rurima "--- new(parent, keys = {})" "== Class Methods" "= class Tk::HTML_Widget::ClippingWindow < TkWindow" "refm/api/src/tkextlib/tkHTML/ClippingWindow")
(find-rurima "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "== Class Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- package_name" "== Class Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- package_version" "== Class Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- reformat(src, dst, txt)" "== Class Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- url_join(*args)" "== Class Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- url_split(uri)" "== Class Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- lockcopy(src, dst)" "== Class Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- gzip_file(file, dat)" "== Class Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- gunzip_file(file, dat)" "== Class Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- gzip_data(dat)" "== Class Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- gunzip_data(dat)" "== Class Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- base64_encode(dat)" "== Class Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- base64_decode(dat)" "== Class Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- text_format(dat, len)" "== Class Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- xor(cmd, *args)" "== Class Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- stdchan(cmd, channel)" "== Class Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- clipping_window" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- clipwin" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- htmlclip" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- bgimage(image, tid = None)" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- clear" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- coords(index = None, percent = None)" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- forminfo(*args)" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- href(x, y)" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- image_add(id, img)" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- image_at(x, y)" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- images" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- image_set(id, num)" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- image_update(id, imgs)" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- index(idx, count = None, unit = None)" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- insert_cursor(idx)" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- names" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- on_screen(id, x, y)" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- over" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- over_markup(x, y)" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- over_attr(x, y, attrs)" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- parse(txt)" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- resolver(*uri_args)" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- selection_clear" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- selection_set(first, last)" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- refresh(*opts)" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- layout" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- sizewindow(*args)" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- postscript(*args)" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- source" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- plain_text(first, last)" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- ascii_text(first, last)" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- text_ascii(first, last)" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- text_delete(first, last)" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- html_text(first, last)" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- text_html(first, last)" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- text_insert(idx, txt)" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- break_text(idx)" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- text_find(txt, *args)" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- text_table(idx, imgs = None, attrs = None)" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- token_append(tag, *args)" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- token_delete(first, last = None)" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- token_define(*args)" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- token_find(tag, *args)" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- token_get(first, last = None)" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- token_list(first, last = None)" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- token_markup(first, last = None)" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- token_DOM(first, last = None)" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- token_dom(first, last = None)" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- token_domtokens(first, last = None)" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- token_dom_tokens(first, last = None)" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- token_get_end(idx)" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- token_getend(idx)" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- token_offset(start, num1, num2)" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- token_get_attr(idx, name = None)" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- token_set_attr(idx, name = None, val = None)" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- token_handler(tag, cmd = nil, &b)" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- token_insert(idx, tag, *args)" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- token_attrs(*args)" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- token_unique(*args)" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- token_on_events(*args)" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- dom_nameidx(tag, name)" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- dom_name_index(tag, name)" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- dom_radioidx(tag, name)" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- dom_radio_index(tag, name)" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- dom_id(*spec)" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- dom_ids(*spec)" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- dom_value(*spec)" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- dom_attr(idx)" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- dom_formel(name)" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- dom_form_element(name)" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "--- dom_tree(idx, val)" "== Instance Methods" "= class Tk::HTML_Widget < TkWindow" "refm/api/src/tkextlib/tkHTML/HTML_Widget")
(find-rurima "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "== Class Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- package_name" "== Class Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- package_version" "== Class Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- loupe(img, x, y, w, h, zoom)" "== Class Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- install_bind(cmd, *args)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- activate(desc)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- canvasx(x)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- canvasy(y)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- collapse(*dsc) " "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- collapse_recurse(*dsc)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- column_bbox(idx)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- column_delete(idx)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- column_index(idx)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- column_move(idx, to)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- column_needed_width(idx)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- column_neededwidth(idx)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- column_width(idx)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- compare(item1, op, item2)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- contentbox" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- depth(item = None)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- dragimage_add(item, *args)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- dragimage_clear" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- dragimage_offset(*args)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- dragimage_visible(*args)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- dragimage_visible?" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- element_create(elem, type, keys = nil)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- element_delete(*elems)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- element_names" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- element_type(elem)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- expand(*dsc)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- expand_recurse(*dsc)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- identify(x, y)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- index(idx)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- item_ancestors(item)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- item_bbox(item, *args)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- item_children(item)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- item_complex(item, *args)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- item_create" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- item_delete(first, last = None)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- item_dump(item)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- item_element_actual(item, column, elem, key)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- item_firstchild(parent, child = nil)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- item_first_child(parent, child = nil)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- item_hashbutton(item, st = None)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- item_hashbutton?(item)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- item_index(item)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- item_isancestor(item, des)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- item_is_ancestor(item, des)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- item_isancestor?(item, des)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- item_is_ancestor?(item, des)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- item_isopen(item)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- item_is_open(item)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- item_isopen?(item)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- item_is_open?(item)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- item_isopened?(item)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- item_is_opened?(item)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- item_lastchild(parent, child = nil)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- item_last_child(parent, child = nil)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- item_nextsibling(sibling, nxt = nil)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- item_next_sibling(sibling, nxt = nil)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- item_numchildren" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- item_num_children" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- item_children_size" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- item_parent(item)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- item_prevsibling(sibling, prev = nil)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- item_prev_sibling(sibling, prev = nil)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- item_remove(item)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- item_rnc(item)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- item_sort(item, *opts)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- item_state_get(item, *args)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- item_state_set(item, *args)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- item_style_elements(item, colun)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- item_style_map(item, column, style, map)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- item_style_set(item, column = nil, *args)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- item_text(item, column, txt = nil, *args)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- item_visible(item, st = None)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- item_visible?(item)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- marquee_anchor(*args)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- marquee_coords(*args)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- marquee_corner(*args)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- marquee_identify" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- marquee_visible(st = None)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- marquee_visible?" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- notify_bind(obj, event, *args)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- notify_bind_append(obj, event, *args)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- notify_bindremove(obj, event)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- notify_bindinfo(obj, event = nil)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- notify_detailnames(event)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- notify_eventnames" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- notify_generate(pattern, char_map = None)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- notify_install_detail(event, detail, percents_cmd = nil, &b)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- notify_install_event(event, percents_cmd = nil, &b)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- notify_linkage(event, detail = None)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- notify_uninstall_detail(event, detail)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- notify_uninstall_event(event)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- numcolumns" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- numitems" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- orphans" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- range(first, last)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- state_define(name)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- state_linkage(name)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- state_names" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- state_undefine(*names)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- see(item)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- selection_add(first, last = None)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- selection_anchor(item = None)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- selection_clear(*args)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- selection_count" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- selection_get" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- selection_includes(item)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- selection_modify(sel, desel)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- style_create(style, keys = None)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- style_delete(*args)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- style_elements(style, *elems)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- style_layout(style, elem, keys = None)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- style_names" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- toggle(*items)" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "--- toggle_recurse" "== Instance Methods" "= class Tk::TreeCtrl < TkWindow" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "= class Tk::TreeCtrl_Widget" "refm/api/src/tkextlib/treectrl/TreeCtrl")
(find-rurima "= class Tk::TreeCtrl::NotifyEvent < TkUtil::CallbackSubst" "refm/api/src/tkextlib/treectrl/TreeCtrl__NotifyEvent")
(find-rurima "= module Tk::TreeCtrl::ConfigMethod" "refm/api/src/tkextlib/treectrl/TreeCtrl__ConfigMethod")
(find-rurima "== Instance Methods" "= module Tk::TreeCtrl::ConfigMethod" "refm/api/src/tkextlib/treectrl/TreeCtrl__ConfigMethod")
(find-rurima "--- treectrl_tagid(key, obj)" "== Instance Methods" "= module Tk::TreeCtrl::ConfigMethod" "refm/api/src/tkextlib/treectrl/TreeCtrl__ConfigMethod")
(find-rurima "--- tagid(mixed_id)" "== Instance Methods" "= module Tk::TreeCtrl::ConfigMethod" "refm/api/src/tkextlib/treectrl/TreeCtrl__ConfigMethod")
(find-rurima "--- column_cget(tagOrId, option)" "== Instance Methods" "= module Tk::TreeCtrl::ConfigMethod" "refm/api/src/tkextlib/treectrl/TreeCtrl__ConfigMethod")
(find-rurima "--- column_configure(tagOrId, slot, value = None)" "== Instance Methods" "= module Tk::TreeCtrl::ConfigMethod" "refm/api/src/tkextlib/treectrl/TreeCtrl__ConfigMethod")
(find-rurima "--- column_configinfo(tagOrId, slot = nil)" "== Instance Methods" "= module Tk::TreeCtrl::ConfigMethod" "refm/api/src/tkextlib/treectrl/TreeCtrl__ConfigMethod")
(find-rurima "--- current_column_configinfo(tagOrId, slot = nil)" "== Instance Methods" "= module Tk::TreeCtrl::ConfigMethod" "refm/api/src/tkextlib/treectrl/TreeCtrl__ConfigMethod")
(find-rurima "--- dragimage_cget(tagOrId, option)" "== Instance Methods" "= module Tk::TreeCtrl::ConfigMethod" "refm/api/src/tkextlib/treectrl/TreeCtrl__ConfigMethod")
(find-rurima "--- dragimage_configure(tagOrId, slot, value = None)" "== Instance Methods" "= module Tk::TreeCtrl::ConfigMethod" "refm/api/src/tkextlib/treectrl/TreeCtrl__ConfigMethod")
(find-rurima "--- dragimage_configinfo(tagOrId, slot = nil)" "== Instance Methods" "= module Tk::TreeCtrl::ConfigMethod" "refm/api/src/tkextlib/treectrl/TreeCtrl__ConfigMethod")
(find-rurima "--- current_dragimage_configinfo(tagOrId, slot = nil)" "== Instance Methods" "= module Tk::TreeCtrl::ConfigMethod" "refm/api/src/tkextlib/treectrl/TreeCtrl__ConfigMethod")
(find-rurima "--- element_cget(tagOrId, option)" "== Instance Methods" "= module Tk::TreeCtrl::ConfigMethod" "refm/api/src/tkextlib/treectrl/TreeCtrl__ConfigMethod")
(find-rurima "--- element_configure(tagOrId, slot, value = None)" "== Instance Methods" "= module Tk::TreeCtrl::ConfigMethod" "refm/api/src/tkextlib/treectrl/TreeCtrl__ConfigMethod")
(find-rurima "--- element_configinfo(tagOrId, slot = nil)" "== Instance Methods" "= module Tk::TreeCtrl::ConfigMethod" "refm/api/src/tkextlib/treectrl/TreeCtrl__ConfigMethod")
(find-rurima "--- current_element_configinfo(tagOrId, slot = nil)" "== Instance Methods" "= module Tk::TreeCtrl::ConfigMethod" "refm/api/src/tkextlib/treectrl/TreeCtrl__ConfigMethod")
(find-rurima "--- item_element_cget(tagOrId, option)" "== Instance Methods" "= module Tk::TreeCtrl::ConfigMethod" "refm/api/src/tkextlib/treectrl/TreeCtrl__ConfigMethod")
(find-rurima "--- item_element_configure(tagOrId, slot, value = None)" "== Instance Methods" "= module Tk::TreeCtrl::ConfigMethod" "refm/api/src/tkextlib/treectrl/TreeCtrl__ConfigMethod")
(find-rurima "--- item_element_configinfo(tagOrId, slot = nil)" "== Instance Methods" "= module Tk::TreeCtrl::ConfigMethod" "refm/api/src/tkextlib/treectrl/TreeCtrl__ConfigMethod")
(find-rurima "--- current_item_element_configinfo(tagOrId, slot = nil)" "== Instance Methods" "= module Tk::TreeCtrl::ConfigMethod" "refm/api/src/tkextlib/treectrl/TreeCtrl__ConfigMethod")
(find-rurima "--- marquee_cget(tagOrId, option)" "== Instance Methods" "= module Tk::TreeCtrl::ConfigMethod" "refm/api/src/tkextlib/treectrl/TreeCtrl__ConfigMethod")
(find-rurima "--- marquee_configure(tagOrId, slot, value = None)" "== Instance Methods" "= module Tk::TreeCtrl::ConfigMethod" "refm/api/src/tkextlib/treectrl/TreeCtrl__ConfigMethod")
(find-rurima "--- marquee_configinfo(tagOrId, slot = nil)" "== Instance Methods" "= module Tk::TreeCtrl::ConfigMethod" "refm/api/src/tkextlib/treectrl/TreeCtrl__ConfigMethod")
(find-rurima "--- current_marquee_configinfo(tagOrId, slot = nil)" "== Instance Methods" "= module Tk::TreeCtrl::ConfigMethod" "refm/api/src/tkextlib/treectrl/TreeCtrl__ConfigMethod")
(find-rurima "--- notify_cget(win, pattern, option)" "== Instance Methods" "= module Tk::TreeCtrl::ConfigMethod" "refm/api/src/tkextlib/treectrl/TreeCtrl__ConfigMethod")
(find-rurima "--- notify_configure(win, pattern, slot, value = None)" "== Instance Methods" "= module Tk::TreeCtrl::ConfigMethod" "refm/api/src/tkextlib/treectrl/TreeCtrl__ConfigMethod")
(find-rurima "--- notify_configinfo(win, pattern, slot = nil)" "== Instance Methods" "= module Tk::TreeCtrl::ConfigMethod" "refm/api/src/tkextlib/treectrl/TreeCtrl__ConfigMethod")
(find-rurima "--- current_notify_configinfo(win, pattern, slot = nil)" "== Instance Methods" "= module Tk::TreeCtrl::ConfigMethod" "refm/api/src/tkextlib/treectrl/TreeCtrl__ConfigMethod")
(find-rurima "--- style_cget(tagOrId, option)" "== Instance Methods" "= module Tk::TreeCtrl::ConfigMethod" "refm/api/src/tkextlib/treectrl/TreeCtrl__ConfigMethod")
(find-rurima "--- style_configure(tagOrId, slot, value = None)" "== Instance Methods" "= module Tk::TreeCtrl::ConfigMethod" "refm/api/src/tkextlib/treectrl/TreeCtrl__ConfigMethod")
(find-rurima "--- style_configinfo(tagOrId, slot = nil)" "== Instance Methods" "= module Tk::TreeCtrl::ConfigMethod" "refm/api/src/tkextlib/treectrl/TreeCtrl__ConfigMethod")
(find-rurima "--- current_style_configinfo(tagOrId, slot = nil)" "== Instance Methods" "= module Tk::TreeCtrl::ConfigMethod" "refm/api/src/tkextlib/treectrl/TreeCtrl__ConfigMethod")
(find-rurima "=== コマンドラインオプション" "refm/api/src/tkextlib/pkg_checker.rd")
(find-rurima "= module Tk::Iwidgets" "refm/api/src/tkextlib/iwidgets.rd")
(find-rurima "== Singleton Methods" "= module Tk::Iwidgets" "refm/api/src/tkextlib/iwidgets.rd")
(find-rurima "--- package_name" "== Singleton Methods" "= module Tk::Iwidgets" "refm/api/src/tkextlib/iwidgets.rd")
(find-rurima "--- package_version" "== Singleton Methods" "= module Tk::Iwidgets" "refm/api/src/tkextlib/iwidgets.rd")
(find-rurima "= module Tk::Itk" "refm/api/src/tkextlib/itk/Itk")
(find-rurima "== Singleton Methods" "= module Tk::Itk" "refm/api/src/tkextlib/itk/Itk")
(find-rurima "--- package_name" "== Singleton Methods" "= module Tk::Itk" "refm/api/src/tkextlib/itk/Itk")
(find-rurima "--- package_version" "== Singleton Methods" "= module Tk::Itk" "refm/api/src/tkextlib/itk/Itk")
(find-rurima "--- usual(arg, *args)" "== Singleton Methods" "= module Tk::Itk" "refm/api/src/tkextlib/itk/Itk")
(find-rurima "--- usual_names" "== Singleton Methods" "= module Tk::Itk" "refm/api/src/tkextlib/itk/Itk")
(find-rurima "= class Tk::Itk::Archetype < TkWindow" "refm/api/src/tkextlib/itk/Itk__Archetype")
(find-rurima "== Class Methods" "= class Tk::Itk::Archetype < TkWindow" "refm/api/src/tkextlib/itk/Itk__Archetype")
(find-rurima "--- to_eval" "== Class Methods" "= class Tk::Itk::Archetype < TkWindow" "refm/api/src/tkextlib/itk/Itk__Archetype")
(find-rurima "== Instance Methods" "= class Tk::Itk::Archetype < TkWindow" "refm/api/src/tkextlib/itk/Itk__Archetype")
(find-rurima "--- component" "== Instance Methods" "= class Tk::Itk::Archetype < TkWindow" "refm/api/src/tkextlib/itk/Itk__Archetype")
(find-rurima "--- component_path(name)" "== Instance Methods" "= class Tk::Itk::Archetype < TkWindow" "refm/api/src/tkextlib/itk/Itk__Archetype")
(find-rurima "--- component_widget(name)" "== Instance Methods" "= class Tk::Itk::Archetype < TkWindow" "refm/api/src/tkextlib/itk/Itk__Archetype")
(find-rurima "--- component_invoke(name, cmd, *args)" "== Instance Methods" "= class Tk::Itk::Archetype < TkWindow" "refm/api/src/tkextlib/itk/Itk__Archetype")
(find-rurima "--- component_obj(*names)" "== Instance Methods" "= class Tk::Itk::Archetype < TkWindow" "refm/api/src/tkextlib/itk/Itk__Archetype")
(find-rurima "= class Tk::Itk::Component < TkObject" "refm/api/src/tkextlib/itk/Itk__Component")
(find-rurima "== Class Methods" "= class Tk::Itk::Component < TkObject" "refm/api/src/tkextlib/itk/Itk__Component")
(find-rurima "--- id2obj(master, id)" "== Class Methods" "= class Tk::Itk::Component < TkObject" "refm/api/src/tkextlib/itk/Itk__Component")
(find-rurima "--- new(master, component = nil)" "== Class Methods" "= class Tk::Itk::Component < TkObject" "refm/api/src/tkextlib/itk/Itk__Component")
(find-rurima "== Instance Methods" "= class Tk::Itk::Component < TkObject" "refm/api/src/tkextlib/itk/Itk__Component")
(find-rurima "--- path" "== Instance Methods" "= class Tk::Itk::Component < TkObject" "refm/api/src/tkextlib/itk/Itk__Component")
(find-rurima "--- epath" "== Instance Methods" "= class Tk::Itk::Component < TkObject" "refm/api/src/tkextlib/itk/Itk__Component")
(find-rurima "--- to_eval" "== Instance Methods" "= class Tk::Itk::Component < TkObject" "refm/api/src/tkextlib/itk/Itk__Component")
(find-rurima "--- master" "== Instance Methods" "= class Tk::Itk::Component < TkObject" "refm/api/src/tkextlib/itk/Itk__Component")
(find-rurima "--- name" "== Instance Methods" "= class Tk::Itk::Component < TkObject" "refm/api/src/tkextlib/itk/Itk__Component")
(find-rurima "--- widget" "== Instance Methods" "= class Tk::Itk::Component < TkObject" "refm/api/src/tkextlib/itk/Itk__Component")
(find-rurima "--- widget_class" "== Instance Methods" "= class Tk::Itk::Component < TkObject" "refm/api/src/tkextlib/itk/Itk__Component")
(find-rurima "--- method_missing(id, *args)" "== Instance Methods" "= class Tk::Itk::Component < TkObject" "refm/api/src/tkextlib/itk/Itk__Component")
(find-rurima "--- tk_send(cmd, *rest)" "== Instance Methods" "= class Tk::Itk::Component < TkObject" "refm/api/src/tkextlib/itk/Itk__Component")
(find-rurima "--- tk_send_without_enc(cmd, *rest)" "== Instance Methods" "= class Tk::Itk::Component < TkObject" "refm/api/src/tkextlib/itk/Itk__Component")
(find-rurima "--- tk_send_with_enc(cmd, *rest)" "== Instance Methods" "= class Tk::Itk::Component < TkObject" "refm/api/src/tkextlib/itk/Itk__Component")
(find-rurima "--- bind(context, *args)" "== Instance Methods" "= class Tk::Itk::Component < TkObject" "refm/api/src/tkextlib/itk/Itk__Component")
(find-rurima "--- bind_append(context, *args)" "== Instance Methods" "= class Tk::Itk::Component < TkObject" "refm/api/src/tkextlib/itk/Itk__Component")
(find-rurima "--- bind_remove(*args)" "== Instance Methods" "= class Tk::Itk::Component < TkObject" "refm/api/src/tkextlib/itk/Itk__Component")
(find-rurima "--- bindinfo(*args)" "== Instance Methods" "= class Tk::Itk::Component < TkObject" "refm/api/src/tkextlib/itk/Itk__Component")
(find-rurima "= class Tk::Itk::Widget < Archetype" "refm/api/src/tkextlib/itk/Itk__Widget")
(find-rurima "= class Tk::Itk::Toplevel < Archetype" "refm/api/src/tkextlib/itk/Itk__Toplevel")
(find-rurima "= class Tk::Winico::Winico_callback::ValidateArgs < TkUtil::CallbackSubst" "refm/api/src/tkextlib/winico/Winico_callback__ValidateArgs")
(find-rurima "== Class Methods" "= class Tk::Winico::Winico_callback::ValidateArgs < TkUtil::CallbackSubst" "refm/api/src/tkextlib/winico/Winico_callback__ValidateArgs")
(find-rurima "--- ret_val(val)" "== Class Methods" "= class Tk::Winico::Winico_callback::ValidateArgs < TkUtil::CallbackSubst" "refm/api/src/tkextlib/winico/Winico_callback__ValidateArgs")
(find-rurima "= class Tk::Winico::Winico_callback < TkValidateCommand" "refm/api/src/tkextlib/winico/Winico_callback")
(find-rurima "== Class Methods" "= class Tk::Winico::Winico_callback < TkValidateCommand" "refm/api/src/tkextlib/winico/Winico_callback")
(find-rurima "= class Tk::Winico < TkObject" "refm/api/src/tkextlib/winico/winico.rd")
(find-rurima "== Class Methods" "= class Tk::Winico < TkObject" "refm/api/src/tkextlib/winico/winico.rd")
(find-rurima "--- package_version" "== Class Methods" "= class Tk::Winico < TkObject" "refm/api/src/tkextlib/winico/winico.rd")
(find-rurima "--- id2obj(id)" "== Class Methods" "= class Tk::Winico < TkObject" "refm/api/src/tkextlib/winico/winico.rd")
(find-rurima "--- info" "== Class Methods" "= class Tk::Winico < TkObject" "refm/api/src/tkextlib/winico/winico.rd")
(find-rurima "--- icon_info(id)" "== Class Methods" "= class Tk::Winico < TkObject" "refm/api/src/tkextlib/winico/winico.rd")
(find-rurima "--- new_from_file(file_name)" "== Class Methods" "= class Tk::Winico < TkObject" "refm/api/src/tkextlib/winico/winico.rd")
(find-rurima "--- new_from_resource(resource_name, file_name = nil)" "== Class Methods" "= class Tk::Winico < TkObject" "refm/api/src/tkextlib/winico/winico.rd")
(find-rurima "--- new(file_name, resource_name = nil, winico_id = nil)" "== Class Methods" "= class Tk::Winico < TkObject" "refm/api/src/tkextlib/winico/winico.rd")
(find-rurima "== Instance Methods" "= class Tk::Winico < TkObject" "refm/api/src/tkextlib/winico/winico.rd")
(find-rurima "--- id" "== Instance Methods" "= class Tk::Winico < TkObject" "refm/api/src/tkextlib/winico/winico.rd")
(find-rurima "--- set_window(win_id, *opts)" "== Instance Methods" "= class Tk::Winico < TkObject" "refm/api/src/tkextlib/winico/winico.rd")
(find-rurima "--- delete" "== Instance Methods" "= class Tk::Winico < TkObject" "refm/api/src/tkextlib/winico/winico.rd")
(find-rurima "--- info" "== Instance Methods" "= class Tk::Winico < TkObject" "refm/api/src/tkextlib/winico/winico.rd")
(find-rurima "--- add_to_taskbar(keys = {})" "== Instance Methods" "= class Tk::Winico < TkObject" "refm/api/src/tkextlib/winico/winico.rd")
(find-rurima "--- taskbar_add(keys = {})" "== Instance Methods" "= class Tk::Winico < TkObject" "refm/api/src/tkextlib/winico/winico.rd")
(find-rurima "--- modify_taskbar(keys = {})" "== Instance Methods" "= class Tk::Winico < TkObject" "refm/api/src/tkextlib/winico/winico.rd")
(find-rurima "--- taskbar_modify(keys = {})" "== Instance Methods" "= class Tk::Winico < TkObject" "refm/api/src/tkextlib/winico/winico.rd")
(find-rurima "--- delete_from_taskbar" "== Instance Methods" "= class Tk::Winico < TkObject" "refm/api/src/tkextlib/winico/winico.rd")
(find-rurima "--- taskbar_delete" "== Instance Methods" "= class Tk::Winico < TkObject" "refm/api/src/tkextlib/winico/winico.rd")
(find-rurima "= class Tk::Iwidgets::Watch < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/watch.rd")
(find-rurima "== Instance Methods" "= class Tk::Iwidgets::Watch < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/watch.rd")
(find-rurima "--- get" "== Instance Methods" "= class Tk::Iwidgets::Watch < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/watch.rd")
(find-rurima "--- get_clicks" "== Instance Methods" "= class Tk::Iwidgets::Watch < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/watch.rd")
(find-rurima "--- get_string" "== Instance Methods" "= class Tk::Iwidgets::Watch < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/watch.rd")
(find-rurima "--- show(time = None)" "== Instance Methods" "= class Tk::Iwidgets::Watch < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/watch.rd")
(find-rurima "--- show_now" "== Instance Methods" "= class Tk::Iwidgets::Watch < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/watch.rd")
(find-rurima "--- watch(*args)" "== Instance Methods" "= class Tk::Iwidgets::Watch < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/watch.rd")
(find-rurima "= class Tk::Iwidgets::Messagebox < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/messagebox.rd")
(find-rurima "== Instance Methods" "= class Tk::Iwidgets::Messagebox < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/messagebox.rd")
(find-rurima "--- clear" "== Instance Methods" "= class Tk::Iwidgets::Messagebox < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/messagebox.rd")
(find-rurima "--- export(file)" "== Instance Methods" "= class Tk::Iwidgets::Messagebox < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/messagebox.rd")
(find-rurima "--- issue(string, type = None, *args)" "== Instance Methods" "= class Tk::Iwidgets::Messagebox < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/messagebox.rd")
(find-rurima "--- tagid(tagOrId)" "== Instance Methods" "= class Tk::Iwidgets::Messagebox < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/messagebox.rd")
(find-rurima "--- type_add(tag = nil, keys = {})" "== Instance Methods" "= class Tk::Iwidgets::Messagebox < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/messagebox.rd")
(find-rurima "= class Tk::Iwidgets::Finddialog < Tk::Iwidgets::Dialogshell" "refm/api/src/tkextlib/iwidgets/finddialog.rd")
(find-rurima "== Instance Methods" "= class Tk::Iwidgets::Finddialog < Tk::Iwidgets::Dialogshell" "refm/api/src/tkextlib/iwidgets/finddialog.rd")
(find-rurima "--- clear" "== Instance Methods" "= class Tk::Iwidgets::Finddialog < Tk::Iwidgets::Dialogshell" "refm/api/src/tkextlib/iwidgets/finddialog.rd")
(find-rurima "--- find" "== Instance Methods" "= class Tk::Iwidgets::Finddialog < Tk::Iwidgets::Dialogshell" "refm/api/src/tkextlib/iwidgets/finddialog.rd")
(find-rurima "= class Tk::Iwidgets::Spintime < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/spintime.rd")
(find-rurima "== Instance Methods" "= class Tk::Iwidgets::Spintime < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/spintime.rd")
(find-rurima "--- get" "== Instance Methods" "= class Tk::Iwidgets::Spintime < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/spintime.rd")
(find-rurima "--- get_clicks" "== Instance Methods" "= class Tk::Iwidgets::Spintime < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/spintime.rd")
(find-rurima "--- get_string" "== Instance Methods" "= class Tk::Iwidgets::Spintime < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/spintime.rd")
(find-rurima "--- show(date = None)" "== Instance Methods" "= class Tk::Iwidgets::Spintime < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/spintime.rd")
(find-rurima "--- show_now" "== Instance Methods" "= class Tk::Iwidgets::Spintime < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/spintime.rd")
(find-rurima "= class Tk::Iwidgets::Feedback < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/feedback.rd")
(find-rurima "== Instance Methods" "= class Tk::Iwidgets::Feedback < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/feedback.rd")
(find-rurima "--- reset" "== Instance Methods" "= class Tk::Iwidgets::Feedback < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/feedback.rd")
(find-rurima "--- step(inc = 1)" "== Instance Methods" "= class Tk::Iwidgets::Feedback < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/feedback.rd")
(find-rurima "= class Tk::Iwidgets::Menubar < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/menubar.rd")
(find-rurima "== Instance Methods" "= class Tk::Iwidgets::Menubar < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/menubar.rd")
(find-rurima "--- __methodcall_optkeys" "== Instance Methods" "= class Tk::Iwidgets::Menubar < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/menubar.rd")
(find-rurima "--- _parse_menu_spec(menu_spec)" "== Instance Methods" "= class Tk::Iwidgets::Menubar < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/menubar.rd")
(find-rurima "--- add(type, tag = nil, keys = {})" "== Instance Methods" "= class Tk::Iwidgets::Menubar < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/menubar.rd")
(find-rurima "--- delete(path1, path2 = nil)" "== Instance Methods" "= class Tk::Iwidgets::Menubar < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/menubar.rd")
(find-rurima "--- index(idx)" "== Instance Methods" "= class Tk::Iwidgets::Menubar < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/menubar.rd")
(find-rurima "--- insert(idx, type, tag = nil, keys = {})" "== Instance Methods" "= class Tk::Iwidgets::Menubar < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/menubar.rd")
(find-rurima "--- invoke(idx)" "== Instance Methods" "= class Tk::Iwidgets::Menubar < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/menubar.rd")
(find-rurima "--- menubuttons(val = nil)" "== Instance Methods" "= class Tk::Iwidgets::Menubar < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/menubar.rd")
(find-rurima "--- menupath(pat)" "== Instance Methods" "= class Tk::Iwidgets::Menubar < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/menubar.rd")
(find-rurima "--- menupath_glob(pat)" "== Instance Methods" "= class Tk::Iwidgets::Menubar < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/menubar.rd")
(find-rurima "--- menupath_tclregexp(pat)" "== Instance Methods" "= class Tk::Iwidgets::Menubar < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/menubar.rd")
(find-rurima "--- tagid(tagOrId)" "== Instance Methods" "= class Tk::Iwidgets::Menubar < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/menubar.rd")
(find-rurima "--- type(path)" "== Instance Methods" "= class Tk::Iwidgets::Menubar < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/menubar.rd")
(find-rurima "--- yposition(path)" "== Instance Methods" "= class Tk::Iwidgets::Menubar < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/menubar.rd")
(find-rurima "= class Tk::Iwidgets::Canvasprintdialog < Tk::Iwidgets::Dialog" "refm/api/src/tkextlib/iwidgets/canvasprintdialog.rd")
(find-rurima "== Instance Methods" "= class Tk::Iwidgets::Canvasprintdialog < Tk::Iwidgets::Dialog" "refm/api/src/tkextlib/iwidgets/canvasprintdialog.rd")
(find-rurima "--- get_output" "== Instance Methods" "= class Tk::Iwidgets::Canvasprintdialog < Tk::Iwidgets::Dialog" "refm/api/src/tkextlib/iwidgets/canvasprintdialog.rd")
(find-rurima "--- print" "== Instance Methods" "= class Tk::Iwidgets::Canvasprintdialog < Tk::Iwidgets::Dialog" "refm/api/src/tkextlib/iwidgets/canvasprintdialog.rd")
(find-rurima "--- refresh" "== Instance Methods" "= class Tk::Iwidgets::Canvasprintdialog < Tk::Iwidgets::Dialog" "refm/api/src/tkextlib/iwidgets/canvasprintdialog.rd")
(find-rurima "--- set_canvas(win)" "== Instance Methods" "= class Tk::Iwidgets::Canvasprintdialog < Tk::Iwidgets::Dialog" "refm/api/src/tkextlib/iwidgets/canvasprintdialog.rd")
(find-rurima "= class Tk::Iwidgets::Extfileselectiondialog < Tk::Iwidgets::Dialog" "refm/api/src/tkextlib/iwidgets/extfileselectiondialog.rd")
(find-rurima "== Instance Methods" "= class Tk::Iwidgets::Extfileselectiondialog < Tk::Iwidgets::Dialog" "refm/api/src/tkextlib/iwidgets/extfileselectiondialog.rd")
(find-rurima "--- child_site" "== Instance Methods" "= class Tk::Iwidgets::Extfileselectiondialog < Tk::Iwidgets::Dialog" "refm/api/src/tkextlib/iwidgets/extfileselectiondialog.rd")
(find-rurima "--- filter" "== Instance Methods" "= class Tk::Iwidgets::Extfileselectiondialog < Tk::Iwidgets::Dialog" "refm/api/src/tkextlib/iwidgets/extfileselectiondialog.rd")
(find-rurima "--- get" "== Instance Methods" "= class Tk::Iwidgets::Extfileselectiondialog < Tk::Iwidgets::Dialog" "refm/api/src/tkextlib/iwidgets/extfileselectiondialog.rd")
(find-rurima "= class Tk::Iwidgets::Scrolledhtml < Tk::Iwidgets::Scrolledtext" "refm/api/src/tkextlib/iwidgets/scrolledhtml.rd")
(find-rurima "== Instance Methods" "= class Tk::Iwidgets::Scrolledhtml < Tk::Iwidgets::Scrolledtext" "refm/api/src/tkextlib/iwidgets/scrolledhtml.rd")
(find-rurima "--- import(href)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledhtml < Tk::Iwidgets::Scrolledtext" "refm/api/src/tkextlib/iwidgets/scrolledhtml.rd")
(find-rurima "--- import_link(href)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledhtml < Tk::Iwidgets::Scrolledtext" "refm/api/src/tkextlib/iwidgets/scrolledhtml.rd")
(find-rurima "--- pwd" "== Instance Methods" "= class Tk::Iwidgets::Scrolledhtml < Tk::Iwidgets::Scrolledtext" "refm/api/src/tkextlib/iwidgets/scrolledhtml.rd")
(find-rurima "--- render(htmltext, workdir = None)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledhtml < Tk::Iwidgets::Scrolledtext" "refm/api/src/tkextlib/iwidgets/scrolledhtml.rd")
(find-rurima "--- title" "== Instance Methods" "= class Tk::Iwidgets::Scrolledhtml < Tk::Iwidgets::Scrolledtext" "refm/api/src/tkextlib/iwidgets/scrolledhtml.rd")
(find-rurima "= class Tk::Iwidgets::Extbutton < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/extbutton.rd")
(find-rurima "== Instance Methods" "= class Tk::Iwidgets::Extbutton < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/extbutton.rd")
(find-rurima "--- flash" "== Instance Methods" "= class Tk::Iwidgets::Extbutton < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/extbutton.rd")
(find-rurima "--- invoke" "== Instance Methods" "= class Tk::Iwidgets::Extbutton < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/extbutton.rd")
(find-rurima "= class Tk::Iwidgets::Spinint < Tk::Iwidgets::Spinner" "refm/api/src/tkextlib/iwidgets/spinint.rd")
(find-rurima "= class Tk::Iwidgets::Messagedialog < Tk::Iwidgets::Dialog" "refm/api/src/tkextlib/iwidgets/messagedialog.rd")
(find-rurima "= class Tk::Iwidgets::Scopedobject < TkObject" "refm/api/src/tkextlib/iwidgets/scopedobject.rd")
(find-rurima "== Class Methods" "= class Tk::Iwidgets::Scopedobject < TkObject" "refm/api/src/tkextlib/iwidgets/scopedobject.rd")
(find-rurima "--- new(obj_name, keys = {})" "== Class Methods" "= class Tk::Iwidgets::Scopedobject < TkObject" "refm/api/src/tkextlib/iwidgets/scopedobject.rd")
(find-rurima "= class Tk::Iwidgets::Entryfield::EntryfieldValidate < TkValidateCommand" "refm/api/src/tkextlib/iwidgets/entryfield/Entryfield__EntryfieldValidate")
(find-rurima "== Class Methods" "= class Tk::Iwidgets::Entryfield::EntryfieldValidate < TkValidateCommand" "refm/api/src/tkextlib/iwidgets/entryfield/Entryfield__EntryfieldValidate")
(find-rurima "--- _config_keys" "== Class Methods" "= class Tk::Iwidgets::Entryfield::EntryfieldValidate < TkValidateCommand" "refm/api/src/tkextlib/iwidgets/entryfield/Entryfield__EntryfieldValidate")
(find-rurima "= class Tk::Iwidgets::Entryfield::EntryfieldValidate::ValidateArgs < TkUtil::CallbackSubst" "refm/api/src/tkextlib/iwidgets/entryfield/Entryfield__EntryfieldValidate__ValidateArgs")
(find-rurima "= class Tk::Iwidgets::Spinner::EntryfieldValidate::ValidateArgs < TkUtil::CallbackSubst" "refm/api/src/tkextlib/iwidgets/spinner/Spinner__EntryfieldValidate__ValidateArgs")
(find-rurima "= class Tk::Iwidgets::Spinner::EntryfieldValidate < TkValidateCommand" "refm/api/src/tkextlib/iwidgets/spinner/Spinner__EntryfieldValidate")
(find-rurima "== Class Methods" "= class Tk::Iwidgets::Spinner::EntryfieldValidate < TkValidateCommand" "refm/api/src/tkextlib/iwidgets/spinner/Spinner__EntryfieldValidate")
(find-rurima "--- _config_keys" "== Class Methods" "= class Tk::Iwidgets::Spinner::EntryfieldValidate < TkValidateCommand" "refm/api/src/tkextlib/iwidgets/spinner/Spinner__EntryfieldValidate")
(find-rurima "= class Tk::Iwidgets::Pushbutton < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/pushbutton.rd")
(find-rurima "== Instance Methods" "= class Tk::Iwidgets::Pushbutton < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/pushbutton.rd")
(find-rurima "--- flash" "== Instance Methods" "= class Tk::Iwidgets::Pushbutton < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/pushbutton.rd")
(find-rurima "--- invoke" "== Instance Methods" "= class Tk::Iwidgets::Pushbutton < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/pushbutton.rd")
(find-rurima "= class Tk::Iwidgets::Notebook < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/notebook.rd")
(find-rurima "== Instance Methods" "= class Tk::Iwidgets::Notebook < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/notebook.rd")
(find-rurima "--- add(keys = {})" "== Instance Methods" "= class Tk::Iwidgets::Notebook < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/notebook.rd")
(find-rurima "--- child_site(idx)" "== Instance Methods" "= class Tk::Iwidgets::Notebook < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/notebook.rd")
(find-rurima "--- child_site_list" "== Instance Methods" "= class Tk::Iwidgets::Notebook < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/notebook.rd")
(find-rurima "--- delete(idx1, idx2 = nil)" "== Instance Methods" "= class Tk::Iwidgets::Notebook < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/notebook.rd")
(find-rurima "--- index(idx)" "== Instance Methods" "= class Tk::Iwidgets::Notebook < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/notebook.rd")
(find-rurima "--- insert(idx, keys = {})" "== Instance Methods" "= class Tk::Iwidgets::Notebook < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/notebook.rd")
(find-rurima "--- next" "== Instance Methods" "= class Tk::Iwidgets::Notebook < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/notebook.rd")
(find-rurima "--- prev" "== Instance Methods" "= class Tk::Iwidgets::Notebook < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/notebook.rd")
(find-rurima "--- scrollbar(bar = nil)" "== Instance Methods" "= class Tk::Iwidgets::Notebook < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/notebook.rd")
(find-rurima "--- scrollcommand(cmd = Proc.new)" "== Instance Methods" "= class Tk::Iwidgets::Notebook < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/notebook.rd")
(find-rurima "--- select(idx)" "== Instance Methods" "= class Tk::Iwidgets::Notebook < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/notebook.rd")
(find-rurima "--- tagid(tagOrId)" "== Instance Methods" "= class Tk::Iwidgets::Notebook < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/notebook.rd")
(find-rurima "--- view(*idxs)" "== Instance Methods" "= class Tk::Iwidgets::Notebook < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/notebook.rd")
(find-rurima "--- view_moveto(*idxs)" "== Instance Methods" "= class Tk::Iwidgets::Notebook < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/notebook.rd")
(find-rurima "--- view_scroll(*idxs)" "== Instance Methods" "= class Tk::Iwidgets::Notebook < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/notebook.rd")
(find-rurima "--- xscrollbar(bar = nil)" "== Instance Methods" "= class Tk::Iwidgets::Notebook < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/notebook.rd")
(find-rurima "--- xscrollcommand(cmd = Proc.new)" "== Instance Methods" "= class Tk::Iwidgets::Notebook < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/notebook.rd")
(find-rurima "--- xview(*idxs)" "== Instance Methods" "= class Tk::Iwidgets::Notebook < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/notebook.rd")
(find-rurima "--- xview_moveto(*idxs)" "== Instance Methods" "= class Tk::Iwidgets::Notebook < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/notebook.rd")
(find-rurima "--- xview_scroll(*idxs)" "== Instance Methods" "= class Tk::Iwidgets::Notebook < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/notebook.rd")
(find-rurima "--- yscrollbar(bar = nil)" "== Instance Methods" "= class Tk::Iwidgets::Notebook < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/notebook.rd")
(find-rurima "--- yscrollcommand(cmd = Proc.new)" "== Instance Methods" "= class Tk::Iwidgets::Notebook < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/notebook.rd")
(find-rurima "--- yview(*idxs)" "== Instance Methods" "= class Tk::Iwidgets::Notebook < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/notebook.rd")
(find-rurima "--- yview_moveto(*idxs)" "== Instance Methods" "= class Tk::Iwidgets::Notebook < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/notebook.rd")
(find-rurima "--- yview_scroll(*idxs)" "== Instance Methods" "= class Tk::Iwidgets::Notebook < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/notebook.rd")
(find-rurima "= class Tk::Iwidgets::Optionmenu < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/optionmenu.rd")
(find-rurima "== Instance Methods" "= class Tk::Iwidgets::Optionmenu < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/optionmenu.rd")
(find-rurima "--- delete(first, last = nil)" "== Instance Methods" "= class Tk::Iwidgets::Optionmenu < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/optionmenu.rd")
(find-rurima "--- disable(idx)" "== Instance Methods" "= class Tk::Iwidgets::Optionmenu < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/optionmenu.rd")
(find-rurima "--- enable(idx)" "== Instance Methods" "= class Tk::Iwidgets::Optionmenu < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/optionmenu.rd")
(find-rurima "--- get(first = nil, last = nil)" "== Instance Methods" "= class Tk::Iwidgets::Optionmenu < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/optionmenu.rd")
(find-rurima "--- get_range(first, last)" "== Instance Methods" "= class Tk::Iwidgets::Optionmenu < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/optionmenu.rd")
(find-rurima "--- get_selected" "== Instance Methods" "= class Tk::Iwidgets::Optionmenu < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/optionmenu.rd")
(find-rurima "--- index(idx)" "== Instance Methods" "= class Tk::Iwidgets::Optionmenu < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/optionmenu.rd")
(find-rurima "--- insert(idx, *args)" "== Instance Methods" "= class Tk::Iwidgets::Optionmenu < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/optionmenu.rd")
(find-rurima "--- select(idx)" "== Instance Methods" "= class Tk::Iwidgets::Optionmenu < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/optionmenu.rd")
(find-rurima "--- sort(*params, &b)" "== Instance Methods" "= class Tk::Iwidgets::Optionmenu < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/optionmenu.rd")
(find-rurima "--- sort_ascending" "== Instance Methods" "= class Tk::Iwidgets::Optionmenu < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/optionmenu.rd")
(find-rurima "--- sort_descending" "== Instance Methods" "= class Tk::Iwidgets::Optionmenu < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/optionmenu.rd")
(find-rurima "= class Tk::Iwidgets::Canvasprintbox < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/canvasprintbox.rd")
(find-rurima "== Instance Methods" "= class Tk::Iwidgets::Canvasprintbox < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/canvasprintbox.rd")
(find-rurima "--- get_output" "== Instance Methods" "= class Tk::Iwidgets::Canvasprintbox < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/canvasprintbox.rd")
(find-rurima "--- print" "== Instance Methods" "= class Tk::Iwidgets::Canvasprintbox < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/canvasprintbox.rd")
(find-rurima "--- refresh" "== Instance Methods" "= class Tk::Iwidgets::Canvasprintbox < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/canvasprintbox.rd")
(find-rurima "--- set_canvas(win)" "== Instance Methods" "= class Tk::Iwidgets::Canvasprintbox < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/canvasprintbox.rd")
(find-rurima "--- stop" "== Instance Methods" "= class Tk::Iwidgets::Canvasprintbox < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/canvasprintbox.rd")
(find-rurima "= class Tk::Iwidgets::Checkbox < Tk::Iwidgets::Labeledframe" "refm/api/src/tkextlib/iwidgets/checkbox.rd")
(find-rurima "== Instance Methods" "= class Tk::Iwidgets::Checkbox < Tk::Iwidgets::Labeledframe" "refm/api/src/tkextlib/iwidgets/checkbox.rd")
(find-rurima "--- add(tag = nil, keys = {})" "== Instance Methods" "= class Tk::Iwidgets::Checkbox < Tk::Iwidgets::Labeledframe" "refm/api/src/tkextlib/iwidgets/checkbox.rd")
(find-rurima "--- delete(idx)" "== Instance Methods" "= class Tk::Iwidgets::Checkbox < Tk::Iwidgets::Labeledframe" "refm/api/src/tkextlib/iwidgets/checkbox.rd")
(find-rurima "--- deselect(idx)" "== Instance Methods" "= class Tk::Iwidgets::Checkbox < Tk::Iwidgets::Labeledframe" "refm/api/src/tkextlib/iwidgets/checkbox.rd")
(find-rurima "--- flash(idx)" "== Instance Methods" "= class Tk::Iwidgets::Checkbox < Tk::Iwidgets::Labeledframe" "refm/api/src/tkextlib/iwidgets/checkbox.rd")
(find-rurima "--- get(idx)" "== Instance Methods" "= class Tk::Iwidgets::Checkbox < Tk::Iwidgets::Labeledframe" "refm/api/src/tkextlib/iwidgets/checkbox.rd")
(find-rurima "--- index(idx)" "== Instance Methods" "= class Tk::Iwidgets::Checkbox < Tk::Iwidgets::Labeledframe" "refm/api/src/tkextlib/iwidgets/checkbox.rd")
(find-rurima "--- insert(idx, tag = nil, keys = {})" "== Instance Methods" "= class Tk::Iwidgets::Checkbox < Tk::Iwidgets::Labeledframe" "refm/api/src/tkextlib/iwidgets/checkbox.rd")
(find-rurima "--- select(idx)" "== Instance Methods" "= class Tk::Iwidgets::Checkbox < Tk::Iwidgets::Labeledframe" "refm/api/src/tkextlib/iwidgets/checkbox.rd")
(find-rurima "--- tagid(tagOrId)" "== Instance Methods" "= class Tk::Iwidgets::Checkbox < Tk::Iwidgets::Labeledframe" "refm/api/src/tkextlib/iwidgets/checkbox.rd")
(find-rurima "= class Tk::Iwidgets::Dateentry < Tk::Iwidgets::Datefield" "refm/api/src/tkextlib/iwidgets/dateentry.rd")
(find-rurima "= class Tk::Iwidgets::Labeledframe < Tk::Itk::Archetype" "refm/api/src/tkextlib/iwidgets/labeledframe.rd")
(find-rurima "== Instance Methods" "= class Tk::Iwidgets::Labeledframe < Tk::Itk::Archetype" "refm/api/src/tkextlib/iwidgets/labeledframe.rd")
(find-rurima "--- child_site" "== Instance Methods" "= class Tk::Iwidgets::Labeledframe < Tk::Itk::Archetype" "refm/api/src/tkextlib/iwidgets/labeledframe.rd")
(find-rurima "= class Tk::Iwidgets::Toolbar < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/toolbar.rd")
(find-rurima "== Instance Methods" "= class Tk::Iwidgets::Toolbar < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/toolbar.rd")
(find-rurima "--- add(type, tag = nil, keys = {})" "== Instance Methods" "= class Tk::Iwidgets::Toolbar < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/toolbar.rd")
(find-rurima "--- delete(idx1, idx2 = nil)" "== Instance Methods" "= class Tk::Iwidgets::Toolbar < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/toolbar.rd")
(find-rurima "--- index(idx)" "== Instance Methods" "= class Tk::Iwidgets::Toolbar < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/toolbar.rd")
(find-rurima "--- insert(idx, type, tag = nil, keys = {})" "== Instance Methods" "= class Tk::Iwidgets::Toolbar < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/toolbar.rd")
(find-rurima "--- tagid(tagOrId)" "== Instance Methods" "= class Tk::Iwidgets::Toolbar < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/toolbar.rd")
(find-rurima "= class Tk::Iwidgets::Scrolledframe < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledframe.rd")
(find-rurima "== Instance Methods" "= class Tk::Iwidgets::Scrolledframe < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledframe.rd")
(find-rurima "--- child_site" "== Instance Methods" "= class Tk::Iwidgets::Scrolledframe < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledframe.rd")
(find-rurima "--- justify(dir)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledframe < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledframe.rd")
(find-rurima "--- xview(*index)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledframe < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledframe.rd")
(find-rurima "--- xview_moveto(*index)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledframe < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledframe.rd")
(find-rurima "--- xview_scroll(*index)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledframe < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledframe.rd")
(find-rurima "--- yview(*index)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledframe < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledframe.rd")
(find-rurima "--- yview_moveto(*index)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledframe < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledframe.rd")
(find-rurima "--- yview_scroll(*index)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledframe < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledframe.rd")
(find-rurima "= class Tk::Iwidgets::Disjointlistbox < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/disjointlistbox.rd")
(find-rurima "== Instance Methods" "= class Tk::Iwidgets::Disjointlistbox < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/disjointlistbox.rd")
(find-rurima "--- get_lhs" "== Instance Methods" "= class Tk::Iwidgets::Disjointlistbox < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/disjointlistbox.rd")
(find-rurima "--- get_rhs" "== Instance Methods" "= class Tk::Iwidgets::Disjointlistbox < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/disjointlistbox.rd")
(find-rurima "--- insert_lhs(*items)" "== Instance Methods" "= class Tk::Iwidgets::Disjointlistbox < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/disjointlistbox.rd")
(find-rurima "--- insert_rhs(*items)" "== Instance Methods" "= class Tk::Iwidgets::Disjointlistbox < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/disjointlistbox.rd")
(find-rurima "--- set_lhs(*items)" "== Instance Methods" "= class Tk::Iwidgets::Disjointlistbox < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/disjointlistbox.rd")
(find-rurima "--- set_rhs(*items)" "== Instance Methods" "= class Tk::Iwidgets::Disjointlistbox < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/disjointlistbox.rd")
(find-rurima "= class Tk::Iwidgets::Combobox < Tk::Iwidgets::Entryfield" "refm/api/src/tkextlib/iwidgets/combobox.rd")
(find-rurima "== Instance Methods" "= class Tk::Iwidgets::Combobox < Tk::Iwidgets::Entryfield" "refm/api/src/tkextlib/iwidgets/combobox.rd")
(find-rurima "--- clear(component = None)" "== Instance Methods" "= class Tk::Iwidgets::Combobox < Tk::Iwidgets::Entryfield" "refm/api/src/tkextlib/iwidgets/combobox.rd")
(find-rurima "--- delete_entry(first, last = None)" "== Instance Methods" "= class Tk::Iwidgets::Combobox < Tk::Iwidgets::Entryfield" "refm/api/src/tkextlib/iwidgets/combobox.rd")
(find-rurima "--- delete_list(first, last = None)" "== Instance Methods" "= class Tk::Iwidgets::Combobox < Tk::Iwidgets::Entryfield" "refm/api/src/tkextlib/iwidgets/combobox.rd")
(find-rurima "--- get_curselection" "== Instance Methods" "= class Tk::Iwidgets::Combobox < Tk::Iwidgets::Entryfield" "refm/api/src/tkextlib/iwidgets/combobox.rd")
(find-rurima "--- get_list_contents(index)" "== Instance Methods" "= class Tk::Iwidgets::Combobox < Tk::Iwidgets::Entryfield" "refm/api/src/tkextlib/iwidgets/combobox.rd")
(find-rurima "--- insert_entry(idx, *elems)" "== Instance Methods" "= class Tk::Iwidgets::Combobox < Tk::Iwidgets::Entryfield" "refm/api/src/tkextlib/iwidgets/combobox.rd")
(find-rurima "--- insert_list(idx, *elems)" "== Instance Methods" "= class Tk::Iwidgets::Combobox < Tk::Iwidgets::Entryfield" "refm/api/src/tkextlib/iwidgets/combobox.rd")
(find-rurima "--- justify(dir)" "== Instance Methods" "= class Tk::Iwidgets::Combobox < Tk::Iwidgets::Entryfield" "refm/api/src/tkextlib/iwidgets/combobox.rd")
(find-rurima "--- see(index)" "== Instance Methods" "= class Tk::Iwidgets::Combobox < Tk::Iwidgets::Entryfield" "refm/api/src/tkextlib/iwidgets/combobox.rd")
(find-rurima "--- selection_anchor(index)" "== Instance Methods" "= class Tk::Iwidgets::Combobox < Tk::Iwidgets::Entryfield" "refm/api/src/tkextlib/iwidgets/combobox.rd")
(find-rurima "--- selection_clear(first, last = None)" "== Instance Methods" "= class Tk::Iwidgets::Combobox < Tk::Iwidgets::Entryfield" "refm/api/src/tkextlib/iwidgets/combobox.rd")
(find-rurima "--- selection_includes(index)" "== Instance Methods" "= class Tk::Iwidgets::Combobox < Tk::Iwidgets::Entryfield" "refm/api/src/tkextlib/iwidgets/combobox.rd")
(find-rurima "--- selection_set(first, last = None)" "== Instance Methods" "= class Tk::Iwidgets::Combobox < Tk::Iwidgets::Entryfield" "refm/api/src/tkextlib/iwidgets/combobox.rd")
(find-rurima "--- size" "== Instance Methods" "= class Tk::Iwidgets::Combobox < Tk::Iwidgets::Entryfield" "refm/api/src/tkextlib/iwidgets/combobox.rd")
(find-rurima "--- sort(*params, &b)" "== Instance Methods" "= class Tk::Iwidgets::Combobox < Tk::Iwidgets::Entryfield" "refm/api/src/tkextlib/iwidgets/combobox.rd")
(find-rurima "--- sort_ascending" "== Instance Methods" "= class Tk::Iwidgets::Combobox < Tk::Iwidgets::Entryfield" "refm/api/src/tkextlib/iwidgets/combobox.rd")
(find-rurima "--- sort_descending" "== Instance Methods" "= class Tk::Iwidgets::Combobox < Tk::Iwidgets::Entryfield" "refm/api/src/tkextlib/iwidgets/combobox.rd")
(find-rurima "= class Tk::Iwidgets::Entryfield < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/entryfield.rd")
(find-rurima "== Instance Methods" "= class Tk::Iwidgets::Entryfield < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/entryfield.rd")
(find-rurima "--- __validation_class_list" "== Instance Methods" "= class Tk::Iwidgets::Entryfield < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/entryfield.rd")
(find-rurima "--- clear" "== Instance Methods" "= class Tk::Iwidgets::Entryfield < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/entryfield.rd")
(find-rurima "--- cursor=(index)" "== Instance Methods" "= class Tk::Iwidgets::Entryfield < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/entryfield.rd")
(find-rurima "--- delete(first, last = None)" "== Instance Methods" "= class Tk::Iwidgets::Entryfield < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/entryfield.rd")
(find-rurima "--- dragto(pos)" "== Instance Methods" "= class Tk::Iwidgets::Entryfield < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/entryfield.rd")
(find-rurima "--- get" "== Instance Methods" "= class Tk::Iwidgets::Entryfield < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/entryfield.rd")
(find-rurima "--- icursor(index)" "== Instance Methods" "= class Tk::Iwidgets::Entryfield < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/entryfield.rd")
(find-rurima "--- index(index)" "== Instance Methods" "= class Tk::Iwidgets::Entryfield < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/entryfield.rd")
(find-rurima "--- insert(pos, text)" "== Instance Methods" "= class Tk::Iwidgets::Entryfield < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/entryfield.rd")
(find-rurima "--- mark(pos)" "== Instance Methods" "= class Tk::Iwidgets::Entryfield < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/entryfield.rd")
(find-rurima "--- selection_adjust(index)" "== Instance Methods" "= class Tk::Iwidgets::Entryfield < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/entryfield.rd")
(find-rurima "--- selection_clear" "== Instance Methods" "= class Tk::Iwidgets::Entryfield < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/entryfield.rd")
(find-rurima "--- selection_from(index)" "== Instance Methods" "= class Tk::Iwidgets::Entryfield < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/entryfield.rd")
(find-rurima "--- selection_present" "== Instance Methods" "= class Tk::Iwidgets::Entryfield < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/entryfield.rd")
(find-rurima "--- selection_range(s, e)" "== Instance Methods" "= class Tk::Iwidgets::Entryfield < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/entryfield.rd")
(find-rurima "--- selection_to(index)" "== Instance Methods" "= class Tk::Iwidgets::Entryfield < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/entryfield.rd")
(find-rurima "--- set(val)" "== Instance Methods" "= class Tk::Iwidgets::Entryfield < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/entryfield.rd")
(find-rurima "--- value" "== Instance Methods" "= class Tk::Iwidgets::Entryfield < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/entryfield.rd")
(find-rurima "--- value=(val)" "== Instance Methods" "= class Tk::Iwidgets::Entryfield < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/entryfield.rd")
(find-rurima "--- xview(*index)" "== Instance Methods" "= class Tk::Iwidgets::Entryfield < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/entryfield.rd")
(find-rurima "--- xview_moveto(*index)" "== Instance Methods" "= class Tk::Iwidgets::Entryfield < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/entryfield.rd")
(find-rurima "--- xview_scroll(*index)" "== Instance Methods" "= class Tk::Iwidgets::Entryfield < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/entryfield.rd")
(find-rurima "= class Tk::Iwidgets::Spindate < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/spindate.rd")
(find-rurima "== Instance Methods" "= class Tk::Iwidgets::Spindate < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/spindate.rd")
(find-rurima "--- get" "== Instance Methods" "= class Tk::Iwidgets::Spindate < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/spindate.rd")
(find-rurima "--- get_clicks" "== Instance Methods" "= class Tk::Iwidgets::Spindate < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/spindate.rd")
(find-rurima "--- get_string" "== Instance Methods" "= class Tk::Iwidgets::Spindate < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/spindate.rd")
(find-rurima "--- show(date = None)" "== Instance Methods" "= class Tk::Iwidgets::Spindate < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/spindate.rd")
(find-rurima "--- show_now" "== Instance Methods" "= class Tk::Iwidgets::Spindate < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/spindate.rd")
(find-rurima "= class Tk::Iwidgets::Dialogshell < Tk::Iwidgets::Shell" "refm/api/src/tkextlib/iwidgets/dialogshell.rd")
(find-rurima "== Instance Methods" "= class Tk::Iwidgets::Dialogshell < Tk::Iwidgets::Shell" "refm/api/src/tkextlib/iwidgets/dialogshell.rd")
(find-rurima "--- add(tag = nil, keys = {})" "== Instance Methods" "= class Tk::Iwidgets::Dialogshell < Tk::Iwidgets::Shell" "refm/api/src/tkextlib/iwidgets/dialogshell.rd")
(find-rurima "--- default(idx)" "== Instance Methods" "= class Tk::Iwidgets::Dialogshell < Tk::Iwidgets::Shell" "refm/api/src/tkextlib/iwidgets/dialogshell.rd")
(find-rurima "--- delete(idx)" "== Instance Methods" "= class Tk::Iwidgets::Dialogshell < Tk::Iwidgets::Shell" "refm/api/src/tkextlib/iwidgets/dialogshell.rd")
(find-rurima "--- hide(idx)" "== Instance Methods" "= class Tk::Iwidgets::Dialogshell < Tk::Iwidgets::Shell" "refm/api/src/tkextlib/iwidgets/dialogshell.rd")
(find-rurima "--- index(idx)" "== Instance Methods" "= class Tk::Iwidgets::Dialogshell < Tk::Iwidgets::Shell" "refm/api/src/tkextlib/iwidgets/dialogshell.rd")
(find-rurima "--- insert(idx, tag = nil, keys = {})" "== Instance Methods" "= class Tk::Iwidgets::Dialogshell < Tk::Iwidgets::Shell" "refm/api/src/tkextlib/iwidgets/dialogshell.rd")
(find-rurima "--- invoke(idx = nil)" "== Instance Methods" "= class Tk::Iwidgets::Dialogshell < Tk::Iwidgets::Shell" "refm/api/src/tkextlib/iwidgets/dialogshell.rd")
(find-rurima "--- show(idx)" "== Instance Methods" "= class Tk::Iwidgets::Dialogshell < Tk::Iwidgets::Shell" "refm/api/src/tkextlib/iwidgets/dialogshell.rd")
(find-rurima "--- tagid(tagOrId)" "== Instance Methods" "= class Tk::Iwidgets::Dialogshell < Tk::Iwidgets::Shell" "refm/api/src/tkextlib/iwidgets/dialogshell.rd")
(find-rurima "= class Tk::Iwidgets::Scrolledcanvas < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledcanvas.rd")
(find-rurima "== Class Methods" "= class Tk::Iwidgets::Scrolledcanvas < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledcanvas.rd")
(find-rurima "--- new(*args)" "== Class Methods" "= class Tk::Iwidgets::Scrolledcanvas < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledcanvas.rd")
(find-rurima "== Instance Methods" "= class Tk::Iwidgets::Scrolledcanvas < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledcanvas.rd")
(find-rurima "--- addtag(tag, mode, *args)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledcanvas < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledcanvas.rd")
(find-rurima "--- addtag_above(tagOrId, target)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledcanvas < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledcanvas.rd")
(find-rurima "--- addtag_all(tagOrId)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledcanvas < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledcanvas.rd")
(find-rurima "--- addtag_below(tagOrId, target)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledcanvas < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledcanvas.rd")
(find-rurima "--- addtag_closest(tagOrId, x, y, halo = None, start = None)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledcanvas < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledcanvas.rd")
(find-rurima "--- addtag_enclosed(tagOrId, x1, y1, x2, y2)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledcanvas < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledcanvas.rd")
(find-rurima "--- addtag_overlapping(tagOrId, x1, y1, x2, y2)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledcanvas < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledcanvas.rd")
(find-rurima "--- addtag_withtag(tagOrId, tag)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledcanvas < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledcanvas.rd")
(find-rurima "--- bbox(tagOrId, *tags)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledcanvas < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledcanvas.rd")
(find-rurima "--- canvasx(screen_x, *args)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledcanvas < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledcanvas.rd")
(find-rurima "--- canvasy(screen_y, *args)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledcanvas < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledcanvas.rd")
(find-rurima "--- child_site" "== Instance Methods" "= class Tk::Iwidgets::Scrolledcanvas < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledcanvas.rd")
(find-rurima "--- coords(tag, *args)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledcanvas < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledcanvas.rd")
(find-rurima "--- create(type, *args)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledcanvas < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledcanvas.rd")
(find-rurima "--- dchars(tag, first, last = None)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledcanvas < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledcanvas.rd")
(find-rurima "--- delete(*args)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledcanvas < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledcanvas.rd")
(find-rurima "--- dtag(tag, tag_to_del = None)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledcanvas < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledcanvas.rd")
(find-rurima "--- find(mode, *args)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledcanvas < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledcanvas.rd")
(find-rurima "--- find_above(target)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledcanvas < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledcanvas.rd")
(find-rurima "--- find_all" "== Instance Methods" "= class Tk::Iwidgets::Scrolledcanvas < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledcanvas.rd")
(find-rurima "--- find_below(target)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledcanvas < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledcanvas.rd")
(find-rurima "--- find_closest(x, y, halo = None, start = None)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledcanvas < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledcanvas.rd")
(find-rurima "--- find_enclosed(x1, y1, x2, y2)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledcanvas < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledcanvas.rd")
(find-rurima "--- find_overlapping(x1, y1, x2, y2)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledcanvas < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledcanvas.rd")
(find-rurima "--- find_withtag(tag)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledcanvas < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledcanvas.rd")
(find-rurima "--- gettags(tagOrId)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledcanvas < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledcanvas.rd")
(find-rurima "--- icursor(tagOrId, index)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledcanvas < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledcanvas.rd")
(find-rurima "--- index(tagOrId, idx)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledcanvas < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledcanvas.rd")
(find-rurima "--- insert(tagOrId, index, string)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledcanvas < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledcanvas.rd")
(find-rurima "--- itembind(tag, context, *args)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledcanvas < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledcanvas.rd")
(find-rurima "--- itembind_append(tag, context, *args)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledcanvas < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledcanvas.rd")
(find-rurima "--- itembind_remove(tag, context)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledcanvas < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledcanvas.rd")
(find-rurima "--- itembindinfo(tag, context = nil)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledcanvas < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledcanvas.rd")
(find-rurima "--- itemfocus(tagOrId = nil)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledcanvas < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledcanvas.rd")
(find-rurima "--- itemtype(tag)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledcanvas < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledcanvas.rd")
(find-rurima "--- justify(dir)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledcanvas < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledcanvas.rd")
(find-rurima "--- lower(tag, below = nil)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledcanvas < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledcanvas.rd")
(find-rurima "--- method_missing(id, *args)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledcanvas < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledcanvas.rd")
(find-rurima "--- move(tag, x, y)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledcanvas < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledcanvas.rd")
(find-rurima "--- postscript(keys)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledcanvas < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledcanvas.rd")
(find-rurima "--- raise(tag, above = nil)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledcanvas < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledcanvas.rd")
(find-rurima "--- remove(*args)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledcanvas < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledcanvas.rd")
(find-rurima "--- scale(tag, x, y, xs, ys)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledcanvas < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledcanvas.rd")
(find-rurima "--- scan_dragto(x, y)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledcanvas < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledcanvas.rd")
(find-rurima "--- scan_mark(x, y)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledcanvas < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledcanvas.rd")
(find-rurima "--- select(mode, *args)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledcanvas < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledcanvas.rd")
(find-rurima "--- select_adjust(tagOrId, index)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledcanvas < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledcanvas.rd")
(find-rurima "--- select_clear" "== Instance Methods" "= class Tk::Iwidgets::Scrolledcanvas < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledcanvas.rd")
(find-rurima "--- select_from(tagOrId, index)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledcanvas < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledcanvas.rd")
(find-rurima "--- select_item" "== Instance Methods" "= class Tk::Iwidgets::Scrolledcanvas < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledcanvas.rd")
(find-rurima "--- select_to(tagOrId, index)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledcanvas < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledcanvas.rd")
(find-rurima "--- xview(*index)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledcanvas < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledcanvas.rd")
(find-rurima "--- xview_moveto(*index)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledcanvas < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledcanvas.rd")
(find-rurima "--- xview_scroll(*index)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledcanvas < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledcanvas.rd")
(find-rurima "--- yview(*index)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledcanvas < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledcanvas.rd")
(find-rurima "--- yview_moveto(*index)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledcanvas < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledcanvas.rd")
(find-rurima "--- yview_scroll(*index)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledcanvas < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledcanvas.rd")
(find-rurima "= class Tk::Iwidgets::Selectionbox < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/selectionbox.rd")
(find-rurima "== Instance Methods" "= class Tk::Iwidgets::Selectionbox < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/selectionbox.rd")
(find-rurima "--- child_site" "== Instance Methods" "= class Tk::Iwidgets::Selectionbox < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/selectionbox.rd")
(find-rurima "--- clear_items" "== Instance Methods" "= class Tk::Iwidgets::Selectionbox < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/selectionbox.rd")
(find-rurima "--- clear_selection" "== Instance Methods" "= class Tk::Iwidgets::Selectionbox < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/selectionbox.rd")
(find-rurima "--- curselection" "== Instance Methods" "= class Tk::Iwidgets::Selectionbox < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/selectionbox.rd")
(find-rurima "--- delete(first, last = None)" "== Instance Methods" "= class Tk::Iwidgets::Selectionbox < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/selectionbox.rd")
(find-rurima "--- get" "== Instance Methods" "= class Tk::Iwidgets::Selectionbox < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/selectionbox.rd")
(find-rurima "--- index(idx)" "== Instance Methods" "= class Tk::Iwidgets::Selectionbox < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/selectionbox.rd")
(find-rurima "--- insert_items(idx, *args)" "== Instance Methods" "= class Tk::Iwidgets::Selectionbox < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/selectionbox.rd")
(find-rurima "--- insert_selection(pos, text)" "== Instance Methods" "= class Tk::Iwidgets::Selectionbox < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/selectionbox.rd")
(find-rurima "--- nearest(y)" "== Instance Methods" "= class Tk::Iwidgets::Selectionbox < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/selectionbox.rd")
(find-rurima "--- scan_dragto(x, y)" "== Instance Methods" "= class Tk::Iwidgets::Selectionbox < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/selectionbox.rd")
(find-rurima "--- scan_mark(x, y)" "== Instance Methods" "= class Tk::Iwidgets::Selectionbox < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/selectionbox.rd")
(find-rurima "--- select_item" "== Instance Methods" "= class Tk::Iwidgets::Selectionbox < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/selectionbox.rd")
(find-rurima "--- selection_anchor(index)" "== Instance Methods" "= class Tk::Iwidgets::Selectionbox < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/selectionbox.rd")
(find-rurima "--- selection_clear(first, last = None)" "== Instance Methods" "= class Tk::Iwidgets::Selectionbox < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/selectionbox.rd")
(find-rurima "--- selection_includes(index)" "== Instance Methods" "= class Tk::Iwidgets::Selectionbox < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/selectionbox.rd")
(find-rurima "--- selection_set(first, last = None)" "== Instance Methods" "= class Tk::Iwidgets::Selectionbox < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/selectionbox.rd")
(find-rurima "--- size" "== Instance Methods" "= class Tk::Iwidgets::Selectionbox < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/selectionbox.rd")
(find-rurima "= class Tk::Iwidgets::Labeledwidget < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/labeledwidget.rd")
(find-rurima "== Class Methods" "= class Tk::Iwidgets::Labeledwidget < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/labeledwidget.rd")
(find-rurima "--- alignlabels(*wins)" "== Class Methods" "= class Tk::Iwidgets::Labeledwidget < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/labeledwidget.rd")
(find-rurima "== Instance Methods" "= class Tk::Iwidgets::Labeledwidget < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/labeledwidget.rd")
(find-rurima "--- child_site" "== Instance Methods" "= class Tk::Iwidgets::Labeledwidget < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/labeledwidget.rd")
(find-rurima "= class Tk::Iwidgets::Tabnotebook < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/tabnotebook.rd")
(find-rurima "== Class Methods" "= class Tk::Iwidgets::Tabnotebook < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/tabnotebook.rd")
(find-rurima "--- new(*args)" "== Class Methods" "= class Tk::Iwidgets::Tabnotebook < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/tabnotebook.rd")
(find-rurima "== Instance Methods" "= class Tk::Iwidgets::Tabnotebook < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/tabnotebook.rd")
(find-rurima "--- add(keys = {})" "== Instance Methods" "= class Tk::Iwidgets::Tabnotebook < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/tabnotebook.rd")
(find-rurima "--- child_site(idx)" "== Instance Methods" "= class Tk::Iwidgets::Tabnotebook < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/tabnotebook.rd")
(find-rurima "--- child_site_list" "== Instance Methods" "= class Tk::Iwidgets::Tabnotebook < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/tabnotebook.rd")
(find-rurima "--- delete(idx1, idx2 = nil)" "== Instance Methods" "= class Tk::Iwidgets::Tabnotebook < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/tabnotebook.rd")
(find-rurima "--- index(idx)" "== Instance Methods" "= class Tk::Iwidgets::Tabnotebook < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/tabnotebook.rd")
(find-rurima "--- insert(idx, keys = {})" "== Instance Methods" "= class Tk::Iwidgets::Tabnotebook < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/tabnotebook.rd")
(find-rurima "--- next" "== Instance Methods" "= class Tk::Iwidgets::Tabnotebook < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/tabnotebook.rd")
(find-rurima "--- prev" "== Instance Methods" "= class Tk::Iwidgets::Tabnotebook < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/tabnotebook.rd")
(find-rurima "--- scrollbar(bar = nil)" "== Instance Methods" "= class Tk::Iwidgets::Tabnotebook < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/tabnotebook.rd")
(find-rurima "--- scrollcommand(cmd = Proc.new)" "== Instance Methods" "= class Tk::Iwidgets::Tabnotebook < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/tabnotebook.rd")
(find-rurima "--- select(idx)" "== Instance Methods" "= class Tk::Iwidgets::Tabnotebook < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/tabnotebook.rd")
(find-rurima "--- tagid(tagOrId)" "== Instance Methods" "= class Tk::Iwidgets::Tabnotebook < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/tabnotebook.rd")
(find-rurima "--- view(*index)" "== Instance Methods" "= class Tk::Iwidgets::Tabnotebook < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/tabnotebook.rd")
(find-rurima "--- view_moveto(*index)" "== Instance Methods" "= class Tk::Iwidgets::Tabnotebook < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/tabnotebook.rd")
(find-rurima "--- view_scroll(*index)" "== Instance Methods" "= class Tk::Iwidgets::Tabnotebook < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/tabnotebook.rd")
(find-rurima "--- xscrollbar(bar = nil)" "== Instance Methods" "= class Tk::Iwidgets::Tabnotebook < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/tabnotebook.rd")
(find-rurima "--- xscrollcommand(cmd = Proc.new)" "== Instance Methods" "= class Tk::Iwidgets::Tabnotebook < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/tabnotebook.rd")
(find-rurima "--- xview(*index)" "== Instance Methods" "= class Tk::Iwidgets::Tabnotebook < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/tabnotebook.rd")
(find-rurima "--- xview_moveto(*index)" "== Instance Methods" "= class Tk::Iwidgets::Tabnotebook < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/tabnotebook.rd")
(find-rurima "--- xview_scroll(*index)" "== Instance Methods" "= class Tk::Iwidgets::Tabnotebook < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/tabnotebook.rd")
(find-rurima "--- yscrollbar(bar = nil)" "== Instance Methods" "= class Tk::Iwidgets::Tabnotebook < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/tabnotebook.rd")
(find-rurima "--- yscrollcommand(cmd = Proc.new)" "== Instance Methods" "= class Tk::Iwidgets::Tabnotebook < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/tabnotebook.rd")
(find-rurima "--- yview(*index)" "== Instance Methods" "= class Tk::Iwidgets::Tabnotebook < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/tabnotebook.rd")
(find-rurima "--- yview_moveto(*index)" "== Instance Methods" "= class Tk::Iwidgets::Tabnotebook < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/tabnotebook.rd")
(find-rurima "--- yview_scroll(*index)" "== Instance Methods" "= class Tk::Iwidgets::Tabnotebook < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/tabnotebook.rd")
(find-rurima "= class Tk::Iwidgets::Hierarchy::QueryCommand < TkValidateCommand" "refm/api/src/tkextlib/iwidgets/hierarchy/Hierarchy__QueryCommand")
(find-rurima "== Class Methods" "= class Tk::Iwidgets::Hierarchy::QueryCommand < TkValidateCommand" "refm/api/src/tkextlib/iwidgets/hierarchy/Hierarchy__QueryCommand")
(find-rurima "--- _config_keys" "== Class Methods" "= class Tk::Iwidgets::Hierarchy::QueryCommand < TkValidateCommand" "refm/api/src/tkextlib/iwidgets/hierarchy/Hierarchy__QueryCommand")
(find-rurima "= class Tk::Iwidgets::Hierarchy::IndicatorCommand::ValidateArgs < TkUtil::CallbackSubst" "refm/api/src/tkextlib/iwidgets/hierarchy/Hierarchy__IndicatorCommand__ValidateArgs")
(find-rurima "== Class Methods" "= class Tk::Iwidgets::Hierarchy::IndicatorCommand::ValidateArgs < TkUtil::CallbackSubst" "refm/api/src/tkextlib/iwidgets/hierarchy/Hierarchy__IndicatorCommand__ValidateArgs")
(find-rurima "--- ret_val(val)" "== Class Methods" "= class Tk::Iwidgets::Hierarchy::IndicatorCommand::ValidateArgs < TkUtil::CallbackSubst" "refm/api/src/tkextlib/iwidgets/hierarchy/Hierarchy__IndicatorCommand__ValidateArgs")
(find-rurima "= class Tk::Iwidgets::Hierarchy::IconCommand::ValidateArgs < TkUtil::CallbackSubst" "refm/api/src/tkextlib/iwidgets/hierarchy/Hierarchy__IconCommand__ValidateArgs")
(find-rurima "== Class Methods" "= class Tk::Iwidgets::Hierarchy::IconCommand::ValidateArgs < TkUtil::CallbackSubst" "refm/api/src/tkextlib/iwidgets/hierarchy/Hierarchy__IconCommand__ValidateArgs")
(find-rurima "--- ret_val(val)" "== Class Methods" "= class Tk::Iwidgets::Hierarchy::IconCommand::ValidateArgs < TkUtil::CallbackSubst" "refm/api/src/tkextlib/iwidgets/hierarchy/Hierarchy__IconCommand__ValidateArgs")
(find-rurima "= class Tk::Iwidgets::Hierarchy::IndicatorCommand < TkValidateCommand" "refm/api/src/tkextlib/iwidgets/hierarchy/Hierarchy__IndicatorCommand")
(find-rurima "== Class Methods" "= class Tk::Iwidgets::Hierarchy::IndicatorCommand < TkValidateCommand" "refm/api/src/tkextlib/iwidgets/hierarchy/Hierarchy__IndicatorCommand")
(find-rurima "--- _config_keys" "== Class Methods" "= class Tk::Iwidgets::Hierarchy::IndicatorCommand < TkValidateCommand" "refm/api/src/tkextlib/iwidgets/hierarchy/Hierarchy__IndicatorCommand")
(find-rurima "= class Tk::Iwidgets::Hierarchy::QueryCommand::ValidateArgs < TkUtil::CallbackSubst" "refm/api/src/tkextlib/iwidgets/hierarchy/Hierarchy__QueryCommand__ValidateArgs")
(find-rurima "== Class Methods" "= class Tk::Iwidgets::Hierarchy::QueryCommand::ValidateArgs < TkUtil::CallbackSubst" "refm/api/src/tkextlib/iwidgets/hierarchy/Hierarchy__QueryCommand__ValidateArgs")
(find-rurima "--- ret_val(val)" "== Class Methods" "= class Tk::Iwidgets::Hierarchy::QueryCommand::ValidateArgs < TkUtil::CallbackSubst" "refm/api/src/tkextlib/iwidgets/hierarchy/Hierarchy__QueryCommand__ValidateArgs")
(find-rurima "= class Tk::Iwidgets::Hierarchy::IconCommand < TkValidateCommand" "refm/api/src/tkextlib/iwidgets/hierarchy/Hierarchy__IconCommand")
(find-rurima "== Class Methods" "= class Tk::Iwidgets::Hierarchy::IconCommand < TkValidateCommand" "refm/api/src/tkextlib/iwidgets/hierarchy/Hierarchy__IconCommand")
(find-rurima "--- _config_keys" "== Class Methods" "= class Tk::Iwidgets::Hierarchy::IconCommand < TkValidateCommand" "refm/api/src/tkextlib/iwidgets/hierarchy/Hierarchy__IconCommand")
(find-rurima "= class Tk::Iwidgets::Extfileselectionbox < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/extfileselectionbox.rd")
(find-rurima "== Instance Methods" "= class Tk::Iwidgets::Extfileselectionbox < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/extfileselectionbox.rd")
(find-rurima "--- child_site" "== Instance Methods" "= class Tk::Iwidgets::Extfileselectionbox < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/extfileselectionbox.rd")
(find-rurima "--- filter" "== Instance Methods" "= class Tk::Iwidgets::Extfileselectionbox < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/extfileselectionbox.rd")
(find-rurima "--- get" "== Instance Methods" "= class Tk::Iwidgets::Extfileselectionbox < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/extfileselectionbox.rd")
(find-rurima "= class Tk::Iwidgets::Scrolledtext < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledtext.rd")
(find-rurima "== Class Methods" "= class Tk::Iwidgets::Scrolledtext < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledtext.rd")
(find-rurima "--- new(*args)" "== Class Methods" "= class Tk::Iwidgets::Scrolledtext < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledtext.rd")
(find-rurima "== Instance Methods" "= class Tk::Iwidgets::Scrolledtext < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledtext.rd")
(find-rurima "--- bbox(index)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledtext < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledtext.rd")
(find-rurima "--- child_site" "== Instance Methods" "= class Tk::Iwidgets::Scrolledtext < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledtext.rd")
(find-rurima "--- clear" "== Instance Methods" "= class Tk::Iwidgets::Scrolledtext < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledtext.rd")
(find-rurima "--- compare(idx1, op, idx2)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledtext < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledtext.rd")
(find-rurima "--- current_image_configinfo(index, slot = nil)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledtext < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledtext.rd")
(find-rurima "--- debug" "== Instance Methods" "= class Tk::Iwidgets::Scrolledtext < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledtext.rd")
(find-rurima "--- debug=(boolean)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledtext < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledtext.rd")
(find-rurima "--- delete(first, last = None)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledtext < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledtext.rd")
(find-rurima "--- dlineinfo(index)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledtext < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledtext.rd")
(find-rurima "--- export(file)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledtext < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledtext.rd")
(find-rurima "--- get(*index)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledtext < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledtext.rd")
(find-rurima "--- get_displaychars(*index)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledtext < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledtext.rd")
(find-rurima "--- image_cget(index, slot)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledtext < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledtext.rd")
(find-rurima "--- image_configinfo(index, slot = nil)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledtext < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledtext.rd")
(find-rurima "--- image_configure(index, slot, value = None)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledtext < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledtext.rd")
(find-rurima "--- image_names" "== Instance Methods" "= class Tk::Iwidgets::Scrolledtext < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledtext.rd")
(find-rurima "--- import(file, idx = nil)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledtext < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledtext.rd")
(find-rurima "--- index(idx)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledtext < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledtext.rd")
(find-rurima "--- insert(index, *args)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledtext < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledtext.rd")
(find-rurima "--- mark_gravity(mark, direction = nil)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledtext < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledtext.rd")
(find-rurima "--- mark_names" "== Instance Methods" "= class Tk::Iwidgets::Scrolledtext < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledtext.rd")
(find-rurima "--- mark_next(index)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledtext < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledtext.rd")
(find-rurima "--- mark_previous(index)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledtext < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledtext.rd")
(find-rurima "--- mark_set(mark, index)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledtext < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledtext.rd")
(find-rurima "--- mark_unset(*marks)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledtext < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledtext.rd")
(find-rurima "--- method_missing(id, *args)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledtext < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledtext.rd")
(find-rurima "--- next_mark(index)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledtext < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledtext.rd")
(find-rurima "--- previous_mark(index)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledtext < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledtext.rd")
(find-rurima "--- rsearch(pat, start, stop = None)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledtext < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledtext.rd")
(find-rurima "--- rsearch_with_length(pat, start, stop = None)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledtext < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledtext.rd")
(find-rurima "--- scan_dragto(x, y)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledtext < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledtext.rd")
(find-rurima "--- scan_mark(x, y)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledtext < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledtext.rd")
(find-rurima "--- search(pat, start, stop = None)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledtext < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledtext.rd")
(find-rurima "--- search_with_length(pat, start, stop = None)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledtext < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledtext.rd")
(find-rurima "--- see(index)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledtext < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledtext.rd")
(find-rurima "--- set_mark(mark, index)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledtext < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledtext.rd")
(find-rurima "--- tksearch(*args)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledtext < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledtext.rd")
(find-rurima "--- tksearch_with_count(*args)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledtext < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledtext.rd")
(find-rurima "--- unset_mark(*marks)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledtext < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledtext.rd")
(find-rurima "--- xview(*index)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledtext < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledtext.rd")
(find-rurima "--- xview_moveto(*index)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledtext < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledtext.rd")
(find-rurima "--- xview_scroll(*index)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledtext < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledtext.rd")
(find-rurima "--- yview(*index)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledtext < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledtext.rd")
(find-rurima "--- yview_moveto(*index)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledtext < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledtext.rd")
(find-rurima "--- yview_scroll(*index)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledtext < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledtext.rd")
(find-rurima "= class Tk::Iwidgets::Shell < Tk::Itk::Toplevel" "refm/api/src/tkextlib/iwidgets/shell.rd")
(find-rurima "== Instance Methods" "= class Tk::Iwidgets::Shell < Tk::Itk::Toplevel" "refm/api/src/tkextlib/iwidgets/shell.rd")
(find-rurima "--- activate" "== Instance Methods" "= class Tk::Iwidgets::Shell < Tk::Itk::Toplevel" "refm/api/src/tkextlib/iwidgets/shell.rd")
(find-rurima "--- center(win = None)" "== Instance Methods" "= class Tk::Iwidgets::Shell < Tk::Itk::Toplevel" "refm/api/src/tkextlib/iwidgets/shell.rd")
(find-rurima "--- child_site" "== Instance Methods" "= class Tk::Iwidgets::Shell < Tk::Itk::Toplevel" "refm/api/src/tkextlib/iwidgets/shell.rd")
(find-rurima "--- deactivate(val = None)" "== Instance Methods" "= class Tk::Iwidgets::Shell < Tk::Itk::Toplevel" "refm/api/src/tkextlib/iwidgets/shell.rd")
(find-rurima "= class Tk::Iwidgets::Buttonbox < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/buttonbox.rd")
(find-rurima "== Instance Methods" "= class Tk::Iwidgets::Buttonbox < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/buttonbox.rd")
(find-rurima "--- add(tag = nil, keys = {})" "== Instance Methods" "= class Tk::Iwidgets::Buttonbox < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/buttonbox.rd")
(find-rurima "--- default(idx)" "== Instance Methods" "= class Tk::Iwidgets::Buttonbox < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/buttonbox.rd")
(find-rurima "--- delete(idx)" "== Instance Methods" "= class Tk::Iwidgets::Buttonbox < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/buttonbox.rd")
(find-rurima "--- hide(idx)" "== Instance Methods" "= class Tk::Iwidgets::Buttonbox < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/buttonbox.rd")
(find-rurima "--- index(idx)" "== Instance Methods" "= class Tk::Iwidgets::Buttonbox < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/buttonbox.rd")
(find-rurima "--- insert(idx, tag = nil, keys = {})" "== Instance Methods" "= class Tk::Iwidgets::Buttonbox < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/buttonbox.rd")
(find-rurima "--- invoke(idx = nil)" "== Instance Methods" "= class Tk::Iwidgets::Buttonbox < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/buttonbox.rd")
(find-rurima "--- show(idx)" "== Instance Methods" "= class Tk::Iwidgets::Buttonbox < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/buttonbox.rd")
(find-rurima "--- tagid(tagOrId)" "== Instance Methods" "= class Tk::Iwidgets::Buttonbox < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/buttonbox.rd")
(find-rurima "= class Tk::Iwidgets::Hierarchy < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/hierarchy.rd")
(find-rurima "== Instance Methods" "= class Tk::Iwidgets::Hierarchy < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/hierarchy.rd")
(find-rurima "--- __validation_class_list" "== Instance Methods" "= class Tk::Iwidgets::Hierarchy < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/hierarchy.rd")
(find-rurima "--- bbox(index)" "== Instance Methods" "= class Tk::Iwidgets::Hierarchy < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/hierarchy.rd")
(find-rurima "--- clear" "== Instance Methods" "= class Tk::Iwidgets::Hierarchy < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/hierarchy.rd")
(find-rurima "--- collapse(node)" "== Instance Methods" "= class Tk::Iwidgets::Hierarchy < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/hierarchy.rd")
(find-rurima "--- compare(idx1, op, idx2)" "== Instance Methods" "= class Tk::Iwidgets::Hierarchy < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/hierarchy.rd")
(find-rurima "--- current" "== Instance Methods" "= class Tk::Iwidgets::Hierarchy < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/hierarchy.rd")
(find-rurima "--- debug" "== Instance Methods" "= class Tk::Iwidgets::Hierarchy < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/hierarchy.rd")
(find-rurima "--- debug=(boolean)" "== Instance Methods" "= class Tk::Iwidgets::Hierarchy < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/hierarchy.rd")
(find-rurima "--- delete(first, last = None)" "== Instance Methods" "= class Tk::Iwidgets::Hierarchy < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/hierarchy.rd")
(find-rurima "--- dlineinfo(index)" "== Instance Methods" "= class Tk::Iwidgets::Hierarchy < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/hierarchy.rd")
(find-rurima "--- draw(mode = None)" "== Instance Methods" "= class Tk::Iwidgets::Hierarchy < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/hierarchy.rd")
(find-rurima "--- exp_state" "== Instance Methods" "= class Tk::Iwidgets::Hierarchy < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/hierarchy.rd")
(find-rurima "--- expand(node)" "== Instance Methods" "= class Tk::Iwidgets::Hierarchy < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/hierarchy.rd")
(find-rurima "--- expand_state" "== Instance Methods" "= class Tk::Iwidgets::Hierarchy < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/hierarchy.rd")
(find-rurima "--- expanded?(node)" "== Instance Methods" "= class Tk::Iwidgets::Hierarchy < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/hierarchy.rd")
(find-rurima "--- expanded_list" "== Instance Methods" "= class Tk::Iwidgets::Hierarchy < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/hierarchy.rd")
(find-rurima "--- get(*index)" "== Instance Methods" "= class Tk::Iwidgets::Hierarchy < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/hierarchy.rd")
(find-rurima "--- index(index)" "== Instance Methods" "= class Tk::Iwidgets::Hierarchy < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/hierarchy.rd")
(find-rurima "--- insert(index, chars, *tags)" "== Instance Methods" "= class Tk::Iwidgets::Hierarchy < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/hierarchy.rd")
(find-rurima "--- mark_add(*nodes)" "== Instance Methods" "= class Tk::Iwidgets::Hierarchy < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/hierarchy.rd")
(find-rurima "--- mark_clear" "== Instance Methods" "= class Tk::Iwidgets::Hierarchy < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/hierarchy.rd")
(find-rurima "--- mark_get" "== Instance Methods" "= class Tk::Iwidgets::Hierarchy < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/hierarchy.rd")
(find-rurima "--- mark_remove(*nodes)" "== Instance Methods" "= class Tk::Iwidgets::Hierarchy < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/hierarchy.rd")
(find-rurima "--- prune(node)" "== Instance Methods" "= class Tk::Iwidgets::Hierarchy < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/hierarchy.rd")
(find-rurima "--- refresh(node)" "== Instance Methods" "= class Tk::Iwidgets::Hierarchy < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/hierarchy.rd")
(find-rurima "--- scan_dragto(x, y)" "== Instance Methods" "= class Tk::Iwidgets::Hierarchy < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/hierarchy.rd")
(find-rurima "--- scan_mark(x, y)" "== Instance Methods" "= class Tk::Iwidgets::Hierarchy < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/hierarchy.rd")
(find-rurima "--- see(index)" "== Instance Methods" "= class Tk::Iwidgets::Hierarchy < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/hierarchy.rd")
(find-rurima "--- selection_add(*nodes)" "== Instance Methods" "= class Tk::Iwidgets::Hierarchy < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/hierarchy.rd")
(find-rurima "--- selection_clear" "== Instance Methods" "= class Tk::Iwidgets::Hierarchy < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/hierarchy.rd")
(find-rurima "--- selection_get" "== Instance Methods" "= class Tk::Iwidgets::Hierarchy < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/hierarchy.rd")
(find-rurima "--- selection_remove(*nodes)" "== Instance Methods" "= class Tk::Iwidgets::Hierarchy < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/hierarchy.rd")
(find-rurima "--- toggle(node)" "== Instance Methods" "= class Tk::Iwidgets::Hierarchy < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/hierarchy.rd")
(find-rurima "--- xview(*index)" "== Instance Methods" "= class Tk::Iwidgets::Hierarchy < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/hierarchy.rd")
(find-rurima "--- xview_moveto(*index)" "== Instance Methods" "= class Tk::Iwidgets::Hierarchy < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/hierarchy.rd")
(find-rurima "--- xview_scroll(*index)" "== Instance Methods" "= class Tk::Iwidgets::Hierarchy < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/hierarchy.rd")
(find-rurima "--- yview(*index)" "== Instance Methods" "= class Tk::Iwidgets::Hierarchy < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/hierarchy.rd")
(find-rurima "--- yview_moveto(*index)" "== Instance Methods" "= class Tk::Iwidgets::Hierarchy < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/hierarchy.rd")
(find-rurima "--- yview_scroll(*index)" "== Instance Methods" "= class Tk::Iwidgets::Hierarchy < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/hierarchy.rd")
(find-rurima "= class Tk::Iwidgets::Radiobox < Tk::Iwidgets::Labeledframe" "refm/api/src/tkextlib/iwidgets/radiobox.rd")
(find-rurima "== Instance Methods" "= class Tk::Iwidgets::Radiobox < Tk::Iwidgets::Labeledframe" "refm/api/src/tkextlib/iwidgets/radiobox.rd")
(find-rurima "--- add(tag = nil, keys = {})" "== Instance Methods" "= class Tk::Iwidgets::Radiobox < Tk::Iwidgets::Labeledframe" "refm/api/src/tkextlib/iwidgets/radiobox.rd")
(find-rurima "--- delete(idx)" "== Instance Methods" "= class Tk::Iwidgets::Radiobox < Tk::Iwidgets::Labeledframe" "refm/api/src/tkextlib/iwidgets/radiobox.rd")
(find-rurima "--- deselect(idx)" "== Instance Methods" "= class Tk::Iwidgets::Radiobox < Tk::Iwidgets::Labeledframe" "refm/api/src/tkextlib/iwidgets/radiobox.rd")
(find-rurima "--- flash(idx)" "== Instance Methods" "= class Tk::Iwidgets::Radiobox < Tk::Iwidgets::Labeledframe" "refm/api/src/tkextlib/iwidgets/radiobox.rd")
(find-rurima "--- get(idx)" "== Instance Methods" "= class Tk::Iwidgets::Radiobox < Tk::Iwidgets::Labeledframe" "refm/api/src/tkextlib/iwidgets/radiobox.rd")
(find-rurima "--- index(idx)" "== Instance Methods" "= class Tk::Iwidgets::Radiobox < Tk::Iwidgets::Labeledframe" "refm/api/src/tkextlib/iwidgets/radiobox.rd")
(find-rurima "--- insert(idx, tag = nil, keys = {})" "== Instance Methods" "= class Tk::Iwidgets::Radiobox < Tk::Iwidgets::Labeledframe" "refm/api/src/tkextlib/iwidgets/radiobox.rd")
(find-rurima "--- select(idx)" "== Instance Methods" "= class Tk::Iwidgets::Radiobox < Tk::Iwidgets::Labeledframe" "refm/api/src/tkextlib/iwidgets/radiobox.rd")
(find-rurima "--- tagid(tagOrId)" "== Instance Methods" "= class Tk::Iwidgets::Radiobox < Tk::Iwidgets::Labeledframe" "refm/api/src/tkextlib/iwidgets/radiobox.rd")
(find-rurima "= class Tk::Iwidgets::Fileselectiondialog < Tk::Iwidgets::Dialog" "refm/api/src/tkextlib/iwidgets/fileselectiondialog.rd")
(find-rurima "== Instance Methods" "= class Tk::Iwidgets::Fileselectiondialog < Tk::Iwidgets::Dialog" "refm/api/src/tkextlib/iwidgets/fileselectiondialog.rd")
(find-rurima "--- child_site" "== Instance Methods" "= class Tk::Iwidgets::Fileselectiondialog < Tk::Iwidgets::Dialog" "refm/api/src/tkextlib/iwidgets/fileselectiondialog.rd")
(find-rurima "--- filter" "== Instance Methods" "= class Tk::Iwidgets::Fileselectiondialog < Tk::Iwidgets::Dialog" "refm/api/src/tkextlib/iwidgets/fileselectiondialog.rd")
(find-rurima "--- get" "== Instance Methods" "= class Tk::Iwidgets::Fileselectiondialog < Tk::Iwidgets::Dialog" "refm/api/src/tkextlib/iwidgets/fileselectiondialog.rd")
(find-rurima "= class Tk::Iwidgets::Mainwindow < Tk::Iwidgets::Shell" "refm/api/src/tkextlib/iwidgets/mainwindow.rd")
(find-rurima "== Instance Methods" "= class Tk::Iwidgets::Mainwindow < Tk::Iwidgets::Shell" "refm/api/src/tkextlib/iwidgets/mainwindow.rd")
(find-rurima "--- child_site" "== Instance Methods" "= class Tk::Iwidgets::Mainwindow < Tk::Iwidgets::Shell" "refm/api/src/tkextlib/iwidgets/mainwindow.rd")
(find-rurima "--- menubar(*args)" "== Instance Methods" "= class Tk::Iwidgets::Mainwindow < Tk::Iwidgets::Shell" "refm/api/src/tkextlib/iwidgets/mainwindow.rd")
(find-rurima "--- mousebar(*args)" "== Instance Methods" "= class Tk::Iwidgets::Mainwindow < Tk::Iwidgets::Shell" "refm/api/src/tkextlib/iwidgets/mainwindow.rd")
(find-rurima "--- msgd(*args)" "== Instance Methods" "= class Tk::Iwidgets::Mainwindow < Tk::Iwidgets::Shell" "refm/api/src/tkextlib/iwidgets/mainwindow.rd")
(find-rurima "--- toolbar(*args)" "== Instance Methods" "= class Tk::Iwidgets::Mainwindow < Tk::Iwidgets::Shell" "refm/api/src/tkextlib/iwidgets/mainwindow.rd")
(find-rurima "= class Tk::Iwidgets::Promptdialog < Tk::Iwidgets::Dialog" "refm/api/src/tkextlib/iwidgets/promptdialog.rd")
(find-rurima "== Instance Methods" "= class Tk::Iwidgets::Promptdialog < Tk::Iwidgets::Dialog" "refm/api/src/tkextlib/iwidgets/promptdialog.rd")
(find-rurima "--- clear" "== Instance Methods" "= class Tk::Iwidgets::Promptdialog < Tk::Iwidgets::Dialog" "refm/api/src/tkextlib/iwidgets/promptdialog.rd")
(find-rurima "--- cursor=(index)" "== Instance Methods" "= class Tk::Iwidgets::Promptdialog < Tk::Iwidgets::Dialog" "refm/api/src/tkextlib/iwidgets/promptdialog.rd")
(find-rurima "--- default(name)" "== Instance Methods" "= class Tk::Iwidgets::Promptdialog < Tk::Iwidgets::Dialog" "refm/api/src/tkextlib/iwidgets/promptdialog.rd")
(find-rurima "--- delete(first, last = None)" "== Instance Methods" "= class Tk::Iwidgets::Promptdialog < Tk::Iwidgets::Dialog" "refm/api/src/tkextlib/iwidgets/promptdialog.rd")
(find-rurima "--- dragto(pos)" "== Instance Methods" "= class Tk::Iwidgets::Promptdialog < Tk::Iwidgets::Dialog" "refm/api/src/tkextlib/iwidgets/promptdialog.rd")
(find-rurima "--- get" "== Instance Methods" "= class Tk::Iwidgets::Promptdialog < Tk::Iwidgets::Dialog" "refm/api/src/tkextlib/iwidgets/promptdialog.rd")
(find-rurima "--- hide(name)" "== Instance Methods" "= class Tk::Iwidgets::Promptdialog < Tk::Iwidgets::Dialog" "refm/api/src/tkextlib/iwidgets/promptdialog.rd")
(find-rurima "--- icursor(index)" "== Instance Methods" "= class Tk::Iwidgets::Promptdialog < Tk::Iwidgets::Dialog" "refm/api/src/tkextlib/iwidgets/promptdialog.rd")
(find-rurima "--- index(idx)" "== Instance Methods" "= class Tk::Iwidgets::Promptdialog < Tk::Iwidgets::Dialog" "refm/api/src/tkextlib/iwidgets/promptdialog.rd")
(find-rurima "--- insert(pos, text)" "== Instance Methods" "= class Tk::Iwidgets::Promptdialog < Tk::Iwidgets::Dialog" "refm/api/src/tkextlib/iwidgets/promptdialog.rd")
(find-rurima "--- invoke(name = nil)" "== Instance Methods" "= class Tk::Iwidgets::Promptdialog < Tk::Iwidgets::Dialog" "refm/api/src/tkextlib/iwidgets/promptdialog.rd")
(find-rurima "--- mark(pos)" "== Instance Methods" "= class Tk::Iwidgets::Promptdialog < Tk::Iwidgets::Dialog" "refm/api/src/tkextlib/iwidgets/promptdialog.rd")
(find-rurima "--- selection_adjust(index)" "== Instance Methods" "= class Tk::Iwidgets::Promptdialog < Tk::Iwidgets::Dialog" "refm/api/src/tkextlib/iwidgets/promptdialog.rd")
(find-rurima "--- selection_clear" "== Instance Methods" "= class Tk::Iwidgets::Promptdialog < Tk::Iwidgets::Dialog" "refm/api/src/tkextlib/iwidgets/promptdialog.rd")
(find-rurima "--- selection_from(index)" "== Instance Methods" "= class Tk::Iwidgets::Promptdialog < Tk::Iwidgets::Dialog" "refm/api/src/tkextlib/iwidgets/promptdialog.rd")
(find-rurima "--- selection_present" "== Instance Methods" "= class Tk::Iwidgets::Promptdialog < Tk::Iwidgets::Dialog" "refm/api/src/tkextlib/iwidgets/promptdialog.rd")
(find-rurima "--- selection_range(s, e)" "== Instance Methods" "= class Tk::Iwidgets::Promptdialog < Tk::Iwidgets::Dialog" "refm/api/src/tkextlib/iwidgets/promptdialog.rd")
(find-rurima "--- selection_to(index)" "== Instance Methods" "= class Tk::Iwidgets::Promptdialog < Tk::Iwidgets::Dialog" "refm/api/src/tkextlib/iwidgets/promptdialog.rd")
(find-rurima "--- set(val)" "== Instance Methods" "= class Tk::Iwidgets::Promptdialog < Tk::Iwidgets::Dialog" "refm/api/src/tkextlib/iwidgets/promptdialog.rd")
(find-rurima "--- show(name)" "== Instance Methods" "= class Tk::Iwidgets::Promptdialog < Tk::Iwidgets::Dialog" "refm/api/src/tkextlib/iwidgets/promptdialog.rd")
(find-rurima "--- value" "== Instance Methods" "= class Tk::Iwidgets::Promptdialog < Tk::Iwidgets::Dialog" "refm/api/src/tkextlib/iwidgets/promptdialog.rd")
(find-rurima "--- value=(val)" "== Instance Methods" "= class Tk::Iwidgets::Promptdialog < Tk::Iwidgets::Dialog" "refm/api/src/tkextlib/iwidgets/promptdialog.rd")
(find-rurima "--- xview(*index)" "== Instance Methods" "= class Tk::Iwidgets::Promptdialog < Tk::Iwidgets::Dialog" "refm/api/src/tkextlib/iwidgets/promptdialog.rd")
(find-rurima "--- xview_moveto(*index)" "== Instance Methods" "= class Tk::Iwidgets::Promptdialog < Tk::Iwidgets::Dialog" "refm/api/src/tkextlib/iwidgets/promptdialog.rd")
(find-rurima "--- xview_scroll(*index)" "== Instance Methods" "= class Tk::Iwidgets::Promptdialog < Tk::Iwidgets::Dialog" "refm/api/src/tkextlib/iwidgets/promptdialog.rd")
(find-rurima "= class Tk::Iwidgets::Fileselectionbox < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/fileselectionbox.rd")
(find-rurima "== Instance Methods" "= class Tk::Iwidgets::Fileselectionbox < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/fileselectionbox.rd")
(find-rurima "--- child_site" "== Instance Methods" "= class Tk::Iwidgets::Fileselectionbox < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/fileselectionbox.rd")
(find-rurima "--- filter" "== Instance Methods" "= class Tk::Iwidgets::Fileselectionbox < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/fileselectionbox.rd")
(find-rurima "--- get" "== Instance Methods" "= class Tk::Iwidgets::Fileselectionbox < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/fileselectionbox.rd")
(find-rurima "= class Tk::Iwidgets::Spinner < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/spinner.rd")
(find-rurima "== Instance Methods" "= class Tk::Iwidgets::Spinner < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/spinner.rd")
(find-rurima "--- __validation_class_list" "== Instance Methods" "= class Tk::Iwidgets::Spinner < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/spinner.rd")
(find-rurima "--- clear" "== Instance Methods" "= class Tk::Iwidgets::Spinner < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/spinner.rd")
(find-rurima "--- cursor=(index)" "== Instance Methods" "= class Tk::Iwidgets::Spinner < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/spinner.rd")
(find-rurima "--- delete(first, last = None)" "== Instance Methods" "= class Tk::Iwidgets::Spinner < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/spinner.rd")
(find-rurima "--- down" "== Instance Methods" "= class Tk::Iwidgets::Spinner < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/spinner.rd")
(find-rurima "--- dragto(pos)" "== Instance Methods" "= class Tk::Iwidgets::Spinner < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/spinner.rd")
(find-rurima "--- get" "== Instance Methods" "= class Tk::Iwidgets::Spinner < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/spinner.rd")
(find-rurima "--- icursor(index)" "== Instance Methods" "= class Tk::Iwidgets::Spinner < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/spinner.rd")
(find-rurima "--- index(idx)" "== Instance Methods" "= class Tk::Iwidgets::Spinner < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/spinner.rd")
(find-rurima "--- insert(pos, text)" "== Instance Methods" "= class Tk::Iwidgets::Spinner < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/spinner.rd")
(find-rurima "--- mark(pos)" "== Instance Methods" "= class Tk::Iwidgets::Spinner < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/spinner.rd")
(find-rurima "--- selection_adjust(index)" "== Instance Methods" "= class Tk::Iwidgets::Spinner < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/spinner.rd")
(find-rurima "--- selection_clear" "== Instance Methods" "= class Tk::Iwidgets::Spinner < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/spinner.rd")
(find-rurima "--- selection_from(index)" "== Instance Methods" "= class Tk::Iwidgets::Spinner < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/spinner.rd")
(find-rurima "--- selection_present" "== Instance Methods" "= class Tk::Iwidgets::Spinner < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/spinner.rd")
(find-rurima "--- selection_range(s, e)" "== Instance Methods" "= class Tk::Iwidgets::Spinner < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/spinner.rd")
(find-rurima "--- selection_to(index)" "== Instance Methods" "= class Tk::Iwidgets::Spinner < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/spinner.rd")
(find-rurima "--- set(val)" "== Instance Methods" "= class Tk::Iwidgets::Spinner < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/spinner.rd")
(find-rurima "--- up" "== Instance Methods" "= class Tk::Iwidgets::Spinner < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/spinner.rd")
(find-rurima "--- value" "== Instance Methods" "= class Tk::Iwidgets::Spinner < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/spinner.rd")
(find-rurima "--- value=(val)" "== Instance Methods" "= class Tk::Iwidgets::Spinner < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/spinner.rd")
(find-rurima "--- xview(*index)" "== Instance Methods" "= class Tk::Iwidgets::Spinner < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/spinner.rd")
(find-rurima "--- xview_moveto(*index)" "== Instance Methods" "= class Tk::Iwidgets::Spinner < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/spinner.rd")
(find-rurima "--- xview_scroll(*index)" "== Instance Methods" "= class Tk::Iwidgets::Spinner < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/spinner.rd")
(find-rurima "= class Tk::Iwidgets::Datefield < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/datefield.rd")
(find-rurima "== Instance Methods" "= class Tk::Iwidgets::Datefield < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/datefield.rd")
(find-rurima "--- get" "== Instance Methods" "= class Tk::Iwidgets::Datefield < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/datefield.rd")
(find-rurima "--- get_clicks" "== Instance Methods" "= class Tk::Iwidgets::Datefield < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/datefield.rd")
(find-rurima "--- get_string" "== Instance Methods" "= class Tk::Iwidgets::Datefield < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/datefield.rd")
(find-rurima "--- isvalid?" "== Instance Methods" "= class Tk::Iwidgets::Datefield < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/datefield.rd")
(find-rurima "--- show(date = None)" "== Instance Methods" "= class Tk::Iwidgets::Datefield < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/datefield.rd")
(find-rurima "--- show_now" "== Instance Methods" "= class Tk::Iwidgets::Datefield < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/datefield.rd")
(find-rurima "--- valid?" "== Instance Methods" "= class Tk::Iwidgets::Datefield < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/datefield.rd")
(find-rurima "= class Tk::Iwidgets::Timeentry < Tk::Iwidgets::Timefield" "refm/api/src/tkextlib/iwidgets/timeentry.rd")
(find-rurima "= class Tk::Iwidgets::Dialog < Tk::Iwidgets::Dialogshell" "refm/api/src/tkextlib/iwidgets/dialog.rd")
(find-rurima "= class Tk::Iwidgets::Timefield < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/timefield.rd")
(find-rurima "== Instance Methods" "= class Tk::Iwidgets::Timefield < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/timefield.rd")
(find-rurima "--- get" "== Instance Methods" "= class Tk::Iwidgets::Timefield < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/timefield.rd")
(find-rurima "--- get_clicks" "== Instance Methods" "= class Tk::Iwidgets::Timefield < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/timefield.rd")
(find-rurima "--- get_string" "== Instance Methods" "= class Tk::Iwidgets::Timefield < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/timefield.rd")
(find-rurima "--- isvalid?" "== Instance Methods" "= class Tk::Iwidgets::Timefield < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/timefield.rd")
(find-rurima "--- show(time = None)" "== Instance Methods" "= class Tk::Iwidgets::Timefield < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/timefield.rd")
(find-rurima "--- show_now" "== Instance Methods" "= class Tk::Iwidgets::Timefield < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/timefield.rd")
(find-rurima "--- valid?" "== Instance Methods" "= class Tk::Iwidgets::Timefield < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/timefield.rd")
(find-rurima "= class Tk::Iwidgets::Calendar::CalendarCommand < TkValidateCommand" "refm/api/src/tkextlib/iwidgets/calendar/Calendar__CalendarCommand")
(find-rurima "== Class Methods" "= class Tk::Iwidgets::Calendar::CalendarCommand < TkValidateCommand" "refm/api/src/tkextlib/iwidgets/calendar/Calendar__CalendarCommand")
(find-rurima "--- _config_keys" "== Class Methods" "= class Tk::Iwidgets::Calendar::CalendarCommand < TkValidateCommand" "refm/api/src/tkextlib/iwidgets/calendar/Calendar__CalendarCommand")
(find-rurima "= class Tk::Iwidgets::Calendar::CalendarCommand::ValidateArgs < TkUtil::CallbackSubst" "refm/api/src/tkextlib/iwidgets/calendar/Calendar__CalendarCommand__ValidateArgs")
(find-rurima "== Class Methods" "= class Tk::Iwidgets::Calendar::CalendarCommand::ValidateArgs < TkUtil::CallbackSubst" "refm/api/src/tkextlib/iwidgets/calendar/Calendar__CalendarCommand__ValidateArgs")
(find-rurima "--- ret_val(val)" "== Class Methods" "= class Tk::Iwidgets::Calendar::CalendarCommand::ValidateArgs < TkUtil::CallbackSubst" "refm/api/src/tkextlib/iwidgets/calendar/Calendar__CalendarCommand__ValidateArgs")
(find-rurima "= class Tk::Iwidgets::Panedwindow < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/panedwindow.rd")
(find-rurima "== Instance Methods" "= class Tk::Iwidgets::Panedwindow < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/panedwindow.rd")
(find-rurima "--- add(tag = nil, keys = {})" "== Instance Methods" "= class Tk::Iwidgets::Panedwindow < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/panedwindow.rd")
(find-rurima "--- child_site(idx)" "== Instance Methods" "= class Tk::Iwidgets::Panedwindow < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/panedwindow.rd")
(find-rurima "--- child_site_list" "== Instance Methods" "= class Tk::Iwidgets::Panedwindow < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/panedwindow.rd")
(find-rurima "--- delete(idx)" "== Instance Methods" "= class Tk::Iwidgets::Panedwindow < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/panedwindow.rd")
(find-rurima "--- fraction(*percentages)" "== Instance Methods" "= class Tk::Iwidgets::Panedwindow < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/panedwindow.rd")
(find-rurima "--- hide(idx)" "== Instance Methods" "= class Tk::Iwidgets::Panedwindow < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/panedwindow.rd")
(find-rurima "--- index(idx)" "== Instance Methods" "= class Tk::Iwidgets::Panedwindow < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/panedwindow.rd")
(find-rurima "--- insert(idx, tag = nil, keys = {})" "== Instance Methods" "= class Tk::Iwidgets::Panedwindow < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/panedwindow.rd")
(find-rurima "--- invoke(idx = nil)" "== Instance Methods" "= class Tk::Iwidgets::Panedwindow < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/panedwindow.rd")
(find-rurima "--- reset" "== Instance Methods" "= class Tk::Iwidgets::Panedwindow < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/panedwindow.rd")
(find-rurima "--- show(idx)" "== Instance Methods" "= class Tk::Iwidgets::Panedwindow < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/panedwindow.rd")
(find-rurima "--- tagid(tagOrId)" "== Instance Methods" "= class Tk::Iwidgets::Panedwindow < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/panedwindow.rd")
(find-rurima "= class Tk::Iwidgets::Calendar < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/calendar.rd")
(find-rurima "== Instance Methods" "= class Tk::Iwidgets::Calendar < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/calendar.rd")
(find-rurima "--- __validation_class_list" "== Instance Methods" "= class Tk::Iwidgets::Calendar < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/calendar.rd")
(find-rurima "--- get" "== Instance Methods" "= class Tk::Iwidgets::Calendar < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/calendar.rd")
(find-rurima "--- get_clicks" "== Instance Methods" "= class Tk::Iwidgets::Calendar < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/calendar.rd")
(find-rurima "--- get_string" "== Instance Methods" "= class Tk::Iwidgets::Calendar < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/calendar.rd")
(find-rurima "--- select(date)" "== Instance Methods" "= class Tk::Iwidgets::Calendar < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/calendar.rd")
(find-rurima "--- show(date)" "== Instance Methods" "= class Tk::Iwidgets::Calendar < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/calendar.rd")
(find-rurima "--- show_now" "== Instance Methods" "= class Tk::Iwidgets::Calendar < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/calendar.rd")
(find-rurima "= class Tk::Iwidgets::Scrolledwidget < Tk::Iwidgets::Labeledwidget" "refm/api/src/tkextlib/iwidgets/scrolledwidget.rd")
(find-rurima "= class Tk::Iwidgets::Hyperhelp < Tk::Iwidgets::Shell" "refm/api/src/tkextlib/iwidgets/hyperhelp.rd")
(find-rurima "== Instance Methods" "= class Tk::Iwidgets::Hyperhelp < Tk::Iwidgets::Shell" "refm/api/src/tkextlib/iwidgets/hyperhelp.rd")
(find-rurima "--- back" "== Instance Methods" "= class Tk::Iwidgets::Hyperhelp < Tk::Iwidgets::Shell" "refm/api/src/tkextlib/iwidgets/hyperhelp.rd")
(find-rurima "--- follow_link(href)" "== Instance Methods" "= class Tk::Iwidgets::Hyperhelp < Tk::Iwidgets::Shell" "refm/api/src/tkextlib/iwidgets/hyperhelp.rd")
(find-rurima "--- forward" "== Instance Methods" "= class Tk::Iwidgets::Hyperhelp < Tk::Iwidgets::Shell" "refm/api/src/tkextlib/iwidgets/hyperhelp.rd")
(find-rurima "--- show_topic(topic)" "== Instance Methods" "= class Tk::Iwidgets::Hyperhelp < Tk::Iwidgets::Shell" "refm/api/src/tkextlib/iwidgets/hyperhelp.rd")
(find-rurima "= class Tk::Iwidgets::Selectiondialog < Tk::Iwidgets::Dialog" "refm/api/src/tkextlib/iwidgets/selectiondialog.rd")
(find-rurima "== Instance Methods" "= class Tk::Iwidgets::Selectiondialog < Tk::Iwidgets::Dialog" "refm/api/src/tkextlib/iwidgets/selectiondialog.rd")
(find-rurima "--- child_site" "== Instance Methods" "= class Tk::Iwidgets::Selectiondialog < Tk::Iwidgets::Dialog" "refm/api/src/tkextlib/iwidgets/selectiondialog.rd")
(find-rurima "--- clear_items" "== Instance Methods" "= class Tk::Iwidgets::Selectiondialog < Tk::Iwidgets::Dialog" "refm/api/src/tkextlib/iwidgets/selectiondialog.rd")
(find-rurima "--- clear_selection" "== Instance Methods" "= class Tk::Iwidgets::Selectiondialog < Tk::Iwidgets::Dialog" "refm/api/src/tkextlib/iwidgets/selectiondialog.rd")
(find-rurima "--- curselection" "== Instance Methods" "= class Tk::Iwidgets::Selectiondialog < Tk::Iwidgets::Dialog" "refm/api/src/tkextlib/iwidgets/selectiondialog.rd")
(find-rurima "--- delete(first, last = None)" "== Instance Methods" "= class Tk::Iwidgets::Selectiondialog < Tk::Iwidgets::Dialog" "refm/api/src/tkextlib/iwidgets/selectiondialog.rd")
(find-rurima "--- get" "== Instance Methods" "= class Tk::Iwidgets::Selectiondialog < Tk::Iwidgets::Dialog" "refm/api/src/tkextlib/iwidgets/selectiondialog.rd")
(find-rurima "--- index(idx)" "== Instance Methods" "= class Tk::Iwidgets::Selectiondialog < Tk::Iwidgets::Dialog" "refm/api/src/tkextlib/iwidgets/selectiondialog.rd")
(find-rurima "--- insert_items(idx, *args)" "== Instance Methods" "= class Tk::Iwidgets::Selectiondialog < Tk::Iwidgets::Dialog" "refm/api/src/tkextlib/iwidgets/selectiondialog.rd")
(find-rurima "--- insert_selection(pos, text)" "== Instance Methods" "= class Tk::Iwidgets::Selectiondialog < Tk::Iwidgets::Dialog" "refm/api/src/tkextlib/iwidgets/selectiondialog.rd")
(find-rurima "--- nearest(y)" "== Instance Methods" "= class Tk::Iwidgets::Selectiondialog < Tk::Iwidgets::Dialog" "refm/api/src/tkextlib/iwidgets/selectiondialog.rd")
(find-rurima "--- scan_dragto(x, y)" "== Instance Methods" "= class Tk::Iwidgets::Selectiondialog < Tk::Iwidgets::Dialog" "refm/api/src/tkextlib/iwidgets/selectiondialog.rd")
(find-rurima "--- scan_mark(x, y)" "== Instance Methods" "= class Tk::Iwidgets::Selectiondialog < Tk::Iwidgets::Dialog" "refm/api/src/tkextlib/iwidgets/selectiondialog.rd")
(find-rurima "--- select_item" "== Instance Methods" "= class Tk::Iwidgets::Selectiondialog < Tk::Iwidgets::Dialog" "refm/api/src/tkextlib/iwidgets/selectiondialog.rd")
(find-rurima "--- selection_anchor(index)" "== Instance Methods" "= class Tk::Iwidgets::Selectiondialog < Tk::Iwidgets::Dialog" "refm/api/src/tkextlib/iwidgets/selectiondialog.rd")
(find-rurima "--- selection_clear(first, last = None)" "== Instance Methods" "= class Tk::Iwidgets::Selectiondialog < Tk::Iwidgets::Dialog" "refm/api/src/tkextlib/iwidgets/selectiondialog.rd")
(find-rurima "--- selection_includes(index)" "== Instance Methods" "= class Tk::Iwidgets::Selectiondialog < Tk::Iwidgets::Dialog" "refm/api/src/tkextlib/iwidgets/selectiondialog.rd")
(find-rurima "--- selection_set(first, last = None)" "== Instance Methods" "= class Tk::Iwidgets::Selectiondialog < Tk::Iwidgets::Dialog" "refm/api/src/tkextlib/iwidgets/selectiondialog.rd")
(find-rurima "--- size" "== Instance Methods" "= class Tk::Iwidgets::Selectiondialog < Tk::Iwidgets::Dialog" "refm/api/src/tkextlib/iwidgets/selectiondialog.rd")
(find-rurima "= class Tk::Iwidgets::Scrolledlistbox < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledlistbox.rd")
(find-rurima "== Class Methods" "= class Tk::Iwidgets::Scrolledlistbox < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledlistbox.rd")
(find-rurima "--- new(*args)" "== Class Methods" "= class Tk::Iwidgets::Scrolledlistbox < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledlistbox.rd")
(find-rurima "== Instance Methods" "= class Tk::Iwidgets::Scrolledlistbox < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledlistbox.rd")
(find-rurima "--- activate(y)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledlistbox < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledlistbox.rd")
(find-rurima "--- bbox(index)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledlistbox < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledlistbox.rd")
(find-rurima "--- clear" "== Instance Methods" "= class Tk::Iwidgets::Scrolledlistbox < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledlistbox.rd")
(find-rurima "--- curselection" "== Instance Methods" "= class Tk::Iwidgets::Scrolledlistbox < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledlistbox.rd")
(find-rurima "--- delete(first, last = None)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledlistbox < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledlistbox.rd")
(find-rurima "--- get(*index)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledlistbox < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledlistbox.rd")
(find-rurima "--- get_curselection" "== Instance Methods" "= class Tk::Iwidgets::Scrolledlistbox < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledlistbox.rd")
(find-rurima "--- index(idx)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledlistbox < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledlistbox.rd")
(find-rurima "--- insert(index, *args)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledlistbox < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledlistbox.rd")
(find-rurima "--- justify(dir)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledlistbox < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledlistbox.rd")
(find-rurima "--- method_missing(id, *args)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledlistbox < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledlistbox.rd")
(find-rurima "--- nearest(y)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledlistbox < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledlistbox.rd")
(find-rurima "--- scan_dragto(x, y)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledlistbox < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledlistbox.rd")
(find-rurima "--- scan_mark(x, y)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledlistbox < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledlistbox.rd")
(find-rurima "--- see(index)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledlistbox < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledlistbox.rd")
(find-rurima "--- selected_item_count" "== Instance Methods" "= class Tk::Iwidgets::Scrolledlistbox < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledlistbox.rd")
(find-rurima "--- selection_anchor(index)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledlistbox < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledlistbox.rd")
(find-rurima "--- selection_clear(first, last = None)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledlistbox < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledlistbox.rd")
(find-rurima "--- selection_includes(index)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledlistbox < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledlistbox.rd")
(find-rurima "--- selection_set(first, last = None)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledlistbox < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledlistbox.rd")
(find-rurima "--- size" "== Instance Methods" "= class Tk::Iwidgets::Scrolledlistbox < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledlistbox.rd")
(find-rurima "--- sort(*params, &b)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledlistbox < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledlistbox.rd")
(find-rurima "--- sort_ascending" "== Instance Methods" "= class Tk::Iwidgets::Scrolledlistbox < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledlistbox.rd")
(find-rurima "--- sort_descending" "== Instance Methods" "= class Tk::Iwidgets::Scrolledlistbox < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledlistbox.rd")
(find-rurima "--- xview(*index)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledlistbox < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledlistbox.rd")
(find-rurima "--- xview_moveto(*index)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledlistbox < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledlistbox.rd")
(find-rurima "--- xview_scroll(*index)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledlistbox < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledlistbox.rd")
(find-rurima "--- yview(*index)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledlistbox < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledlistbox.rd")
(find-rurima "--- yview_moveto(*index)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledlistbox < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledlistbox.rd")
(find-rurima "--- yview_scroll(*index)" "== Instance Methods" "= class Tk::Iwidgets::Scrolledlistbox < Tk::Iwidgets::Scrolledwidget" "refm/api/src/tkextlib/iwidgets/scrolledlistbox.rd")
(find-rurima "= class Tk::Iwidgets::Tabset < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/tabset.rd")
(find-rurima "== Instance Methods" "= class Tk::Iwidgets::Tabset < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/tabset.rd")
(find-rurima "--- add(keys = {})" "== Instance Methods" "= class Tk::Iwidgets::Tabset < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/tabset.rd")
(find-rurima "--- delete(idx1, idx2 = nil)" "== Instance Methods" "= class Tk::Iwidgets::Tabset < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/tabset.rd")
(find-rurima "--- index(idx)" "== Instance Methods" "= class Tk::Iwidgets::Tabset < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/tabset.rd")
(find-rurima "--- insert(idx, keys = {})" "== Instance Methods" "= class Tk::Iwidgets::Tabset < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/tabset.rd")
(find-rurima "--- next" "== Instance Methods" "= class Tk::Iwidgets::Tabset < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/tabset.rd")
(find-rurima "--- prev" "== Instance Methods" "= class Tk::Iwidgets::Tabset < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/tabset.rd")
(find-rurima "--- select(idx)" "== Instance Methods" "= class Tk::Iwidgets::Tabset < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/tabset.rd")
(find-rurima "--- tagid(tagOrId)" "== Instance Methods" "= class Tk::Iwidgets::Tabset < Tk::Itk::Widget" "refm/api/src/tkextlib/iwidgets/tabset.rd")
(find-rurima "= class Tk::Vu::TkcBarchart < TkcItem" "refm/api/src/tkextlib/vu/TkcBarchart")
(find-rurima "= class Tk::Vu::TkcStripchart < TkcItem" "refm/api/src/tkextlib/vu/TkcStripchart")
(find-rurima "= class Tk::Vu::PieSlice < TkObject" "refm/api/src/tkextlib/vu/PieSlice")
(find-rurima "== Class Methods" "= class Tk::Vu::PieSlice < TkObject" "refm/api/src/tkextlib/vu/PieSlice")
(find-rurima "--- id2obj(pie, id)" "== Class Methods" "= class Tk::Vu::PieSlice < TkObject" "refm/api/src/tkextlib/vu/PieSlice")
(find-rurima "--- new(parent, *args)" "== Class Methods" "= class Tk::Vu::PieSlice < TkObject" "refm/api/src/tkextlib/vu/PieSlice")
(find-rurima "== Instance Methods" "= class Tk::Vu::PieSlice < TkObject" "refm/api/src/tkextlib/vu/PieSlice")
(find-rurima "--- id" "== Instance Methods" "= class Tk::Vu::PieSlice < TkObject" "refm/api/src/tkextlib/vu/PieSlice")
(find-rurima "--- [](key)" "== Instance Methods" "= class Tk::Vu::PieSlice < TkObject" "refm/api/src/tkextlib/vu/PieSlice")
(find-rurima "--- []=(key, val)" "== Instance Methods" "= class Tk::Vu::PieSlice < TkObject" "refm/api/src/tkextlib/vu/PieSlice")
(find-rurima "--- cget(slot)" "== Instance Methods" "= class Tk::Vu::PieSlice < TkObject" "refm/api/src/tkextlib/vu/PieSlice")
(find-rurima "--- configure(*args)" "== Instance Methods" "= class Tk::Vu::PieSlice < TkObject" "refm/api/src/tkextlib/vu/PieSlice")
(find-rurima "--- configinfo(*args)" "== Instance Methods" "= class Tk::Vu::PieSlice < TkObject" "refm/api/src/tkextlib/vu/PieSlice")
(find-rurima "--- current_configinfo(*args)" "== Instance Methods" "= class Tk::Vu::PieSlice < TkObject" "refm/api/src/tkextlib/vu/PieSlice")
(find-rurima "--- delete" "== Instance Methods" "= class Tk::Vu::PieSlice < TkObject" "refm/api/src/tkextlib/vu/PieSlice")
(find-rurima "--- explode(value)" "== Instance Methods" "= class Tk::Vu::PieSlice < TkObject" "refm/api/src/tkextlib/vu/PieSlice")
(find-rurima "--- explode_value" "== Instance Methods" "= class Tk::Vu::PieSlice < TkObject" "refm/api/src/tkextlib/vu/PieSlice")
(find-rurima "--- lower(other = None)" "== Instance Methods" "= class Tk::Vu::PieSlice < TkObject" "refm/api/src/tkextlib/vu/PieSlice")
(find-rurima "--- raise(other = None)" "== Instance Methods" "= class Tk::Vu::PieSlice < TkObject" "refm/api/src/tkextlib/vu/PieSlice")
(find-rurima "--- set(value)" "== Instance Methods" "= class Tk::Vu::PieSlice < TkObject" "refm/api/src/tkextlib/vu/PieSlice")
(find-rurima "--- set_value(value)" "== Instance Methods" "= class Tk::Vu::PieSlice < TkObject" "refm/api/src/tkextlib/vu/PieSlice")
(find-rurima "--- value" "== Instance Methods" "= class Tk::Vu::PieSlice < TkObject" "refm/api/src/tkextlib/vu/PieSlice")
(find-rurima "= module Tk::Vu::PieSliceConfigMethod" "refm/api/src/tkextlib/vu/PieSliceConfigMethod")
(find-rurima "= class Tk::Vu::Pie < TkWindow" "refm/api/src/tkextlib/vu/Pie")
(find-rurima "== Instance Methods" "= class Tk::Vu::Pie < TkWindow" "refm/api/src/tkextlib/vu/Pie")
(find-rurima "--- tagid(tag)" "== Instance Methods" "= class Tk::Vu::Pie < TkWindow" "refm/api/src/tkextlib/vu/Pie")
(find-rurima "--- delete(*glob_pats)" "== Instance Methods" "= class Tk::Vu::Pie < TkWindow" "refm/api/src/tkextlib/vu/Pie")
(find-rurima "--- explode(slice, *args)" "== Instance Methods" "= class Tk::Vu::Pie < TkWindow" "refm/api/src/tkextlib/vu/Pie")
(find-rurima "--- explode_value(slice)" "== Instance Methods" "= class Tk::Vu::Pie < TkWindow" "refm/api/src/tkextlib/vu/Pie")
(find-rurima "--- lower(slice, below = None)" "== Instance Methods" "= class Tk::Vu::Pie < TkWindow" "refm/api/src/tkextlib/vu/Pie")
(find-rurima "--- names(*glob_pats)" "== Instance Methods" "= class Tk::Vu::Pie < TkWindow" "refm/api/src/tkextlib/vu/Pie")
(find-rurima "--- slices(*glob_pats)" "== Instance Methods" "= class Tk::Vu::Pie < TkWindow" "refm/api/src/tkextlib/vu/Pie")
(find-rurima "--- order(*args)" "== Instance Methods" "= class Tk::Vu::Pie < TkWindow" "refm/api/src/tkextlib/vu/Pie")
(find-rurima "--- raise(slice, above = None)" "== Instance Methods" "= class Tk::Vu::Pie < TkWindow" "refm/api/src/tkextlib/vu/Pie")
(find-rurima "--- swap(slice1, slice2)" "== Instance Methods" "= class Tk::Vu::Pie < TkWindow" "refm/api/src/tkextlib/vu/Pie")
(find-rurima "--- set(slice, *args)" "== Instance Methods" "= class Tk::Vu::Pie < TkWindow" "refm/api/src/tkextlib/vu/Pie")
(find-rurima "--- set_value(slice, *args)" "== Instance Methods" "= class Tk::Vu::Pie < TkWindow" "refm/api/src/tkextlib/vu/Pie")
(find-rurima "--- set_values(slice, *args)" "== Instance Methods" "= class Tk::Vu::Pie < TkWindow" "refm/api/src/tkextlib/vu/Pie")
(find-rurima "--- create(slice, *args)" "== Instance Methods" "= class Tk::Vu::Pie < TkWindow" "refm/api/src/tkextlib/vu/Pie")
(find-rurima "--- slice_value(slice)" "== Instance Methods" "= class Tk::Vu::Pie < TkWindow" "refm/api/src/tkextlib/vu/Pie")
(find-rurima "--- value(val = None)" "== Instance Methods" "= class Tk::Vu::Pie < TkWindow" "refm/api/src/tkextlib/vu/Pie")
(find-rurima "--- sum_value(val = None)" "== Instance Methods" "= class Tk::Vu::Pie < TkWindow" "refm/api/src/tkextlib/vu/Pie")
(find-rurima "= class  Tk::Vu::Spinbox" "refm/api/src/tkextlib/vu/spinbox.rd")
(find-rurima "= module Tk::Vu::ChartsConfig" "refm/api/src/tkextlib/vu/ChartsConfig")
(find-rurima "= class Tk::Vu::Dial < TkWindow" "refm/api/src/tkextlib/vu/dial.rd")
(find-rurima "== Instance Methods" "= class Tk::Vu::Dial < TkWindow" "refm/api/src/tkextlib/vu/dial.rd")
(find-rurima "--- coords(val = nil)" "== Instance Methods" "= class Tk::Vu::Dial < TkWindow" "refm/api/src/tkextlib/vu/dial.rd")
(find-rurima "--- constrain(val = None)" "== Instance Methods" "= class Tk::Vu::Dial < TkWindow" "refm/api/src/tkextlib/vu/dial.rd")
(find-rurima "--- get" "== Instance Methods" "= class Tk::Vu::Dial < TkWindow" "refm/api/src/tkextlib/vu/dial.rd")
(find-rurima "--- identify(x, y)" "== Instance Methods" "= class Tk::Vu::Dial < TkWindow" "refm/api/src/tkextlib/vu/dial.rd")
(find-rurima "--- get_label(val = nil)" "== Instance Methods" "= class Tk::Vu::Dial < TkWindow" "refm/api/src/tkextlib/vu/dial.rd")
(find-rurima "--- set_label(val, str, *args)" "== Instance Methods" "= class Tk::Vu::Dial < TkWindow" "refm/api/src/tkextlib/vu/dial.rd")
(find-rurima "--- set_label_constrain(val, str, *args)" "== Instance Methods" "= class Tk::Vu::Dial < TkWindow" "refm/api/src/tkextlib/vu/dial.rd")
(find-rurima "--- get_tag(val = nil)" "== Instance Methods" "= class Tk::Vu::Dial < TkWindow" "refm/api/src/tkextlib/vu/dial.rd")
(find-rurima "--- set_tag(val, str, *args)" "== Instance Methods" "= class Tk::Vu::Dial < TkWindow" "refm/api/src/tkextlib/vu/dial.rd")
(find-rurima "--- set_tag_constrain(val, str, *args)" "== Instance Methods" "= class Tk::Vu::Dial < TkWindow" "refm/api/src/tkextlib/vu/dial.rd")
(find-rurima "--- set(val = None)" "== Instance Methods" "= class Tk::Vu::Dial < TkWindow" "refm/api/src/tkextlib/vu/dial.rd")
(find-rurima "= class Tk::Vu::Bargraph < TkWindow" "refm/api/src/tkextlib/vu/bargraph.rd")
(find-rurima "== Instance Methods" "= class Tk::Vu::Bargraph < TkWindow" "refm/api/src/tkextlib/vu/bargraph.rd")
(find-rurima "--- set(val = None)" "== Instance Methods" "= class Tk::Vu::Bargraph < TkWindow" "refm/api/src/tkextlib/vu/bargraph.rd")
(find-rurima "--- get" "== Instance Methods" "= class Tk::Vu::Bargraph < TkWindow" "refm/api/src/tkextlib/vu/bargraph.rd")
(find-rurima "= class Tk::Vu::TkcSticker < TkcItem" "refm/api/src/tkextlib/vu/TkcSticker")
(find-rurima "= class Tk::Vu::NamedPieSlice < PieSlice" "refm/api/src/tkextlib/vu/NamedPieSlice")
(find-rurima "== Class Methods" "= class Tk::Vu::NamedPieSlice < PieSlice" "refm/api/src/tkextlib/vu/NamedPieSlice")
(find-rurima "--- new(parent, name, *args)" "== Class Methods" "= class Tk::Vu::NamedPieSlice < PieSlice" "refm/api/src/tkextlib/vu/NamedPieSlice")
(find-rurima "= class Tk::Tile::TScale < TkScale" "refm/api/src/tkextlib/tile/Tile__TScale")
(find-rurima "== Class Methods" "= class Tk::Tile::TScale < TkScale" "refm/api/src/tkextlib/tile/Tile__TScale")
(find-rurima "--- style(*args)" "== Class Methods" "= class Tk::Tile::TScale < TkScale" "refm/api/src/tkextlib/tile/Tile__TScale")
(find-rurima "= class Tk::Tile::Scale" "refm/api/src/tkextlib/tile/Tile__TScale")
(find-rurima "= class Tk::Tile::TPaned < TkWindow" "refm/api/src/tkextlib/tile/tpaned.rd")
(find-rurima "== Class Methods" "= class Tk::Tile::TPaned < TkWindow" "refm/api/src/tkextlib/tile/tpaned.rd")
(find-rurima "--- style(*args)" "== Class Methods" "= class Tk::Tile::TPaned < TkWindow" "refm/api/src/tkextlib/tile/tpaned.rd")
(find-rurima "== Instance Methods" "= class Tk::Tile::TPaned < TkWindow" "refm/api/src/tkextlib/tile/tpaned.rd")
(find-rurima "--- add(win, keys)" "== Instance Methods" "= class Tk::Tile::TPaned < TkWindow" "refm/api/src/tkextlib/tile/tpaned.rd")
(find-rurima "--- forget(pane)" "== Instance Methods" "= class Tk::Tile::TPaned < TkWindow" "refm/api/src/tkextlib/tile/tpaned.rd")
(find-rurima "--- insert(pos, win, keys)" "== Instance Methods" "= class Tk::Tile::TPaned < TkWindow" "refm/api/src/tkextlib/tile/tpaned.rd")
(find-rurima "--- panecget(pane, slot)" "== Instance Methods" "= class Tk::Tile::TPaned < TkWindow" "refm/api/src/tkextlib/tile/tpaned.rd")
(find-rurima "--- paneconfigure(pane, key, value = nil)" "== Instance Methods" "= class Tk::Tile::TPaned < TkWindow" "refm/api/src/tkextlib/tile/tpaned.rd")
(find-rurima "--- paneconfiginfo(win)" "== Instance Methods" "= class Tk::Tile::TPaned < TkWindow" "refm/api/src/tkextlib/tile/tpaned.rd")
(find-rurima "--- current_paneconfiginfo(win, key = nil)" "== Instance Methods" "= class Tk::Tile::TPaned < TkWindow" "refm/api/src/tkextlib/tile/tpaned.rd")
(find-rurima "--- identify(x, y)" "== Instance Methods" "= class Tk::Tile::TPaned < TkWindow" "refm/api/src/tkextlib/tile/tpaned.rd")
(find-rurima "--- sashpos(idx, newpos = None)" "== Instance Methods" "= class Tk::Tile::TPaned < TkWindow" "refm/api/src/tkextlib/tile/tpaned.rd")
(find-rurima "= class Tk::Tile::Paned" "refm/api/src/tkextlib/tile/tpaned.rd")
(find-rurima "= class Tk::Tile::TSeparator < TkWindow" "refm/api/src/tkextlib/tile/tseparator.td")
(find-rurima "== Class Methods" "= class Tk::Tile::TSeparator < TkWindow" "refm/api/src/tkextlib/tile/tseparator.td")
(find-rurima "--- style(*args)" "== Class Methods" "= class Tk::Tile::TSeparator < TkWindow" "refm/api/src/tkextlib/tile/tseparator.td")
(find-rurima "= class Tk::Tile::Separator" "refm/api/src/tkextlib/tile/tseparator.td")
(find-rurima "= class Tk::Tile::TSquare < TkWindow" "refm/api/src/tkextlib/tile/tsquare.td")
(find-rurima "== Class Methods" "= class Tk::Tile::TSquare < TkWindow" "refm/api/src/tkextlib/tile/tsquare.td")
(find-rurima "--- style(*args)" "== Class Methods" "= class Tk::Tile::TSquare < TkWindow" "refm/api/src/tkextlib/tile/tsquare.td")
(find-rurima "= class Tk::Tile::Square" "refm/api/src/tkextlib/tile/tsquare.td")
(find-rurima "= class Tk::Tile::TCombobox < Tk::Tile::TEntry" "refm/api/src/tkextlib/tile/tcombobox.rd")
(find-rurima "== Class Methods" "= class Tk::Tile::TCombobox < Tk::Tile::TEntry" "refm/api/src/tkextlib/tile/tcombobox.rd")
(find-rurima "--- style(*args)" "== Class Methods" "= class Tk::Tile::TCombobox < Tk::Tile::TEntry" "refm/api/src/tkextlib/tile/tcombobox.rd")
(find-rurima "== Instance Methods" "= class Tk::Tile::TCombobox < Tk::Tile::TEntry" "refm/api/src/tkextlib/tile/tcombobox.rd")
(find-rurima "--- current" "== Instance Methods" "= class Tk::Tile::TCombobox < Tk::Tile::TEntry" "refm/api/src/tkextlib/tile/tcombobox.rd")
(find-rurima "--- current=(idx)" "== Instance Methods" "= class Tk::Tile::TCombobox < Tk::Tile::TEntry" "refm/api/src/tkextlib/tile/tcombobox.rd")
(find-rurima "--- identify(x, y)" "== Instance Methods" "= class Tk::Tile::TCombobox < Tk::Tile::TEntry" "refm/api/src/tkextlib/tile/tcombobox.rd")
(find-rurima "--- set(val)" "== Instance Methods" "= class Tk::Tile::TCombobox < Tk::Tile::TEntry" "refm/api/src/tkextlib/tile/tcombobox.rd")
(find-rurima "= class Tk::Tile::Combobox" "refm/api/src/tkextlib/tile/tcombobox.rd")
(find-rurima "= class Tk::Tile::TScrollbar < TkWindow" "refm/api/src/tkextlib/tile/tscrollbar.td")
(find-rurima "== Class Methods" "= class Tk::Tile::TScrollbar < TkWindow" "refm/api/src/tkextlib/tile/tscrollbar.td")
(find-rurima "--- style(*args)" "== Class Methods" "= class Tk::Tile::TScrollbar < TkWindow" "refm/api/src/tkextlib/tile/tscrollbar.td")
(find-rurima "= class Tk::Tile::Scrollbar" "refm/api/src/tkextlib/tile/tscrollbar.td")
(find-rurima "= class Tk::Tile::TProgress < TkScale" "refm/api/src/tkextlib/tile/Tile__TProgress")
(find-rurima "== Class Methods" "= class Tk::Tile::TProgress < TkScale" "refm/api/src/tkextlib/tile/Tile__TProgress")
(find-rurima "--- style(*args)" "== Class Methods" "= class Tk::Tile::TProgress < TkScale" "refm/api/src/tkextlib/tile/Tile__TProgress")
(find-rurima "= class Tk::Tile::Progress" "refm/api/src/tkextlib/tile/Tile__TProgress")
(find-rurima "= class Tk::Tile::TCheckButton < TkCheckButton" "refm/api/src/tkextlib/tile/tcheckbutton.rd")
(find-rurima "= class Tk::Tile::TCheckbutton" "refm/api/src/tkextlib/tile/tcheckbutton.rd")
(find-rurima "= module Tk::Tile::TileWidget" "refm/api/src/tkextlib/tile/Tk__Tile__TileWidget")
(find-rurima "== Instance Methods" "= module Tk::Tile::TileWidget" "refm/api/src/tkextlib/tile/Tk__Tile__TileWidget")
(find-rurima "--- instate(state, script = nil, &b)" "== Instance Methods" "= module Tk::Tile::TileWidget" "refm/api/src/tkextlib/tile/Tk__Tile__TileWidget")
(find-rurima "--- state(state = nil)" "== Instance Methods" "= module Tk::Tile::TileWidget" "refm/api/src/tkextlib/tile/Tk__Tile__TileWidget")
(find-rurima "= class Tk::Tile::TFrame < TkFrame" "refm/api/src/tkextlib/tile/tframe.rd")
(find-rurima "== Class Methods" "= class Tk::Tile::TFrame < TkFrame" "refm/api/src/tkextlib/tile/tframe.rd")
(find-rurima "--- style(*args)" "== Class Methods" "= class Tk::Tile::TFrame < TkFrame" "refm/api/src/tkextlib/tile/tframe.rd")
(find-rurima "= class Tk::Tile::Frame" "refm/api/src/tkextlib/tile/tframe.rd")
(find-rurima "= module Tk::Tile::Style" "refm/api/src/tkextlib/tile/style.rd")
(find-rurima "== Singleton Methods" "= module Tk::Tile::Style" "refm/api/src/tkextlib/tile/style.rd")
(find-rurima "--- default(style, keys = nil)" "== Singleton Methods" "= module Tk::Tile::Style" "refm/api/src/tkextlib/tile/style.rd")
(find-rurima "--- configure(style, keys = nil)" "== Singleton Methods" "= module Tk::Tile::Style" "refm/api/src/tkextlib/tile/style.rd")
(find-rurima "--- map(style, keys = nil)" "== Singleton Methods" "= module Tk::Tile::Style" "refm/api/src/tkextlib/tile/style.rd")
(find-rurima "--- layout(style, spec = nil)" "== Singleton Methods" "= module Tk::Tile::Style" "refm/api/src/tkextlib/tile/style.rd")
(find-rurima "--- element_create(name, type, *args)" "== Singleton Methods" "= module Tk::Tile::Style" "refm/api/src/tkextlib/tile/style.rd")
(find-rurima "--- element_names" "== Singleton Methods" "= module Tk::Tile::Style" "refm/api/src/tkextlib/tile/style.rd")
(find-rurima "--- theme_create(name, keys = nil)" "== Singleton Methods" "= module Tk::Tile::Style" "refm/api/src/tkextlib/tile/style.rd")
(find-rurima "--- theme_settings(name, cmd = nil, &b)" "== Singleton Methods" "= module Tk::Tile::Style" "refm/api/src/tkextlib/tile/style.rd")
(find-rurima "--- theme_names" "== Singleton Methods" "= module Tk::Tile::Style" "refm/api/src/tkextlib/tile/style.rd")
(find-rurima "--- theme_use(name)" "== Singleton Methods" "= module Tk::Tile::Style" "refm/api/src/tkextlib/tile/style.rd")
(find-rurima "= class Tk::Tile::TreeView < TkWindow" "refm/api/src/tkextlib/tile/Tile__Treeview")
(find-rurima "== Class Methods" "= class Tk::Tile::TreeView < TkWindow" "refm/api/src/tkextlib/tile/Tile__Treeview")
(find-rurima "--- style(*args)" "== Class Methods" "= class Tk::Tile::TreeView < TkWindow" "refm/api/src/tkextlib/tile/Tile__Treeview")
(find-rurima "== Instance Methods" "= class Tk::Tile::TreeView < TkWindow" "refm/api/src/tkextlib/tile/Tile__Treeview")
(find-rurima "--- tagid(id)" "== Instance Methods" "= class Tk::Tile::TreeView < TkWindow" "refm/api/src/tkextlib/tile/Tile__Treeview")
(find-rurima "--- children(item)" "== Instance Methods" "= class Tk::Tile::TreeView < TkWindow" "refm/api/src/tkextlib/tile/Tile__Treeview")
(find-rurima "--- set_children(item, *items)" "== Instance Methods" "= class Tk::Tile::TreeView < TkWindow" "refm/api/src/tkextlib/tile/Tile__Treeview")
(find-rurima "--- delete(*items)" "== Instance Methods" "= class Tk::Tile::TreeView < TkWindow" "refm/api/src/tkextlib/tile/Tile__Treeview")
(find-rurima "--- detach(*items)" "== Instance Methods" "= class Tk::Tile::TreeView < TkWindow" "refm/api/src/tkextlib/tile/Tile__Treeview")
(find-rurima "--- exist?(item)" "== Instance Methods" "= class Tk::Tile::TreeView < TkWindow" "refm/api/src/tkextlib/tile/Tile__Treeview")
(find-rurima "--- focus_item(item  =  None)" "== Instance Methods" "= class Tk::Tile::TreeView < TkWindow" "refm/api/src/tkextlib/tile/Tile__Treeview")
(find-rurima "--- identify(x, y)" "== Instance Methods" "= class Tk::Tile::TreeView < TkWindow" "refm/api/src/tkextlib/tile/Tile__Treeview")
(find-rurima "--- index(item)" "== Instance Methods" "= class Tk::Tile::TreeView < TkWindow" "refm/api/src/tkextlib/tile/Tile__Treeview")
(find-rurima "--- insert(parent, idx, keys = {})" "== Instance Methods" "= class Tk::Tile::TreeView < TkWindow" "refm/api/src/tkextlib/tile/Tile__Treeview")
(find-rurima "--- instate(spec, cmd = Proc.new)" "== Instance Methods" "= class Tk::Tile::TreeView < TkWindow" "refm/api/src/tkextlib/tile/Tile__Treeview")
(find-rurima "--- state(spec = None)" "== Instance Methods" "= class Tk::Tile::TreeView < TkWindow" "refm/api/src/tkextlib/tile/Tile__Treeview")
(find-rurima "--- move(item, parent, idx)" "== Instance Methods" "= class Tk::Tile::TreeView < TkWindow" "refm/api/src/tkextlib/tile/Tile__Treeview")
(find-rurima "--- next(item)" "== Instance Methods" "= class Tk::Tile::TreeView < TkWindow" "refm/api/src/tkextlib/tile/Tile__Treeview")
(find-rurima "--- parent(item)" "== Instance Methods" "= class Tk::Tile::TreeView < TkWindow" "refm/api/src/tkextlib/tile/Tile__Treeview")
(find-rurima "--- prev(item)" "== Instance Methods" "= class Tk::Tile::TreeView < TkWindow" "refm/api/src/tkextlib/tile/Tile__Treeview")
(find-rurima "--- see(item)" "== Instance Methods" "= class Tk::Tile::TreeView < TkWindow" "refm/api/src/tkextlib/tile/Tile__Treeview")
(find-rurima "--- selection" "== Instance Methods" "= class Tk::Tile::TreeView < TkWindow" "refm/api/src/tkextlib/tile/Tile__Treeview")
(find-rurima "--- selection_get" "== Instance Methods" "= class Tk::Tile::TreeView < TkWindow" "refm/api/src/tkextlib/tile/Tile__Treeview")
(find-rurima "--- selection_add(*items)" "== Instance Methods" "= class Tk::Tile::TreeView < TkWindow" "refm/api/src/tkextlib/tile/Tile__Treeview")
(find-rurima "--- selection_remove(*items)" "== Instance Methods" "= class Tk::Tile::TreeView < TkWindow" "refm/api/src/tkextlib/tile/Tile__Treeview")
(find-rurima "--- selection_set(*items)" "== Instance Methods" "= class Tk::Tile::TreeView < TkWindow" "refm/api/src/tkextlib/tile/Tile__Treeview")
(find-rurima "--- selection_toggle(*items)" "== Instance Methods" "= class Tk::Tile::TreeView < TkWindow" "refm/api/src/tkextlib/tile/Tile__Treeview")
(find-rurima "--- get_directory(item)" "== Instance Methods" "= class Tk::Tile::TreeView < TkWindow" "refm/api/src/tkextlib/tile/Tile__Treeview")
(find-rurima "--- get(item, col)" "== Instance Methods" "= class Tk::Tile::TreeView < TkWindow" "refm/api/src/tkextlib/tile/Tile__Treeview")
(find-rurima "--- set(item, col, value)" "== Instance Methods" "= class Tk::Tile::TreeView < TkWindow" "refm/api/src/tkextlib/tile/Tile__Treeview")
(find-rurima "= class Tk::Tile::TProgressbar < TkWindow" "refm/api/src/tkextlib/tile/tprogressbar.rd")
(find-rurima "== Class Methods" "= class Tk::Tile::TProgressbar < TkWindow" "refm/api/src/tkextlib/tile/tprogressbar.rd")
(find-rurima "--- style(*args)" "== Class Methods" "= class Tk::Tile::TProgressbar < TkWindow" "refm/api/src/tkextlib/tile/tprogressbar.rd")
(find-rurima "== Instance Methods" "= class Tk::Tile::TProgressbar < TkWindow" "refm/api/src/tkextlib/tile/tprogressbar.rd")
(find-rurima "--- step" "== Instance Methods" "= class Tk::Tile::TProgressbar < TkWindow" "refm/api/src/tkextlib/tile/tprogressbar.rd")
(find-rurima "--- step=(amount)" "== Instance Methods" "= class Tk::Tile::TProgressbar < TkWindow" "refm/api/src/tkextlib/tile/tprogressbar.rd")
(find-rurima "--- step(amount = None)" "== Instance Methods" "= class Tk::Tile::TProgressbar < TkWindow" "refm/api/src/tkextlib/tile/tprogressbar.rd")
(find-rurima "--- start(interval = None)" "== Instance Methods" "= class Tk::Tile::TProgressbar < TkWindow" "refm/api/src/tkextlib/tile/tprogressbar.rd")
(find-rurima "--- stop" "== Instance Methods" "= class Tk::Tile::TProgressbar < TkWindow" "refm/api/src/tkextlib/tile/tprogressbar.rd")
(find-rurima "--- stop(amount = None)" "== Instance Methods" "= class Tk::Tile::TProgressbar < TkWindow" "refm/api/src/tkextlib/tile/tprogressbar.rd")
(find-rurima "= class Tk::Tile::Progressbar" "refm/api/src/tkextlib/tile/tprogressbar.rd")
(find-rurima "= class Tk::Tile::TMenubutton < TkMenubutton" "refm/api/src/tkextlib/tile/tmenubutton.rd")
(find-rurima "= class Tk::Tile::TEntry < TkEntry" "refm/api/src/tkextlib/tile/tentry.rd")
(find-rurima "== Class Methods" "= class Tk::Tile::TEntry < TkEntry" "refm/api/src/tkextlib/tile/tentry.rd")
(find-rurima "--- style(*args)" "== Class Methods" "= class Tk::Tile::TEntry < TkEntry" "refm/api/src/tkextlib/tile/tentry.rd")
(find-rurima "= class Tk::Tile::Entry" "refm/api/src/tkextlib/tile/tentry.rd")
(find-rurima "= class Tk::Tile::Dialog < TkWindow" "refm/api/src/tkextlib/tile/dialog.rd")
(find-rurima "== Class Methods" "= class Tk::Tile::Dialog < TkWindow" "refm/api/src/tkextlib/tile/dialog.rd")
(find-rurima "--- show(*args)" "== Class Methods" "= class Tk::Tile::Dialog < TkWindow" "refm/api/src/tkextlib/tile/dialog.rd")
(find-rurima "--- display(*args)" "== Class Methods" "= class Tk::Tile::Dialog < TkWindow" "refm/api/src/tkextlib/tile/dialog.rd")
(find-rurima "--- define_dialog_type(name, keys)" "== Class Methods" "= class Tk::Tile::Dialog < TkWindow" "refm/api/src/tkextlib/tile/dialog.rd")
(find-rurima "--- style(*args)" "== Class Methods" "= class Tk::Tile::Dialog < TkWindow" "refm/api/src/tkextlib/tile/dialog.rd")
(find-rurima "--- new(keys = {})" "== Class Methods" "= class Tk::Tile::Dialog < TkWindow" "refm/api/src/tkextlib/tile/dialog.rd")
(find-rurima "== Instance Methods" "= class Tk::Tile::Dialog < TkWindow" "refm/api/src/tkextlib/tile/dialog.rd")
(find-rurima "--- show" "== Instance Methods" "= class Tk::Tile::Dialog < TkWindow" "refm/api/src/tkextlib/tile/dialog.rd")
(find-rurima "--- display" "== Instance Methods" "= class Tk::Tile::Dialog < TkWindow" "refm/api/src/tkextlib/tile/dialog.rd")
(find-rurima "--- client_frame" "== Instance Methods" "= class Tk::Tile::Dialog < TkWindow" "refm/api/src/tkextlib/tile/dialog.rd")
(find-rurima "--- cget(slot)" "== Instance Methods" "= class Tk::Tile::Dialog < TkWindow" "refm/api/src/tkextlib/tile/dialog.rd")
(find-rurima "--- configure(slot, value = None)" "== Instance Methods" "= class Tk::Tile::Dialog < TkWindow" "refm/api/src/tkextlib/tile/dialog.rd")
(find-rurima "--- configinfo(slot = nil)" "== Instance Methods" "= class Tk::Tile::Dialog < TkWindow" "refm/api/src/tkextlib/tile/dialog.rd")
(find-rurima "= class Tk::Tile::TRadioButton < TkRadioButton" "refm/api/src/tkextlib/tile/tradiobutton.rd")
(find-rurima "= class Tk::Tile::TRadiobutton" "refm/api/src/tkextlib/tile/tradiobutton.rd")
(find-rurima "= module Tk::Tile::TreeviewConfig" "refm/api/src/tkextlib/tile/Tile__TreeviewConfig")
(find-rurima "== Instance Methods" "= module Tk::Tile::TreeviewConfig" "refm/api/src/tkextlib/tile/Tile__TreeviewConfig")
(find-rurima "--- itemcget(tagOrId, option)" "== Instance Methods" "= module Tk::Tile::TreeviewConfig" "refm/api/src/tkextlib/tile/Tile__TreeviewConfig")
(find-rurima "--- itemconfigure(tagOrId, slot, value = None)" "== Instance Methods" "= module Tk::Tile::TreeviewConfig" "refm/api/src/tkextlib/tile/Tile__TreeviewConfig")
(find-rurima "--- itemconfiginfo(tagOrId, slot = nil)" "== Instance Methods" "= module Tk::Tile::TreeviewConfig" "refm/api/src/tkextlib/tile/Tile__TreeviewConfig")
(find-rurima "--- current_itemconfiginfo(tagOrId, slot = nil)" "== Instance Methods" "= module Tk::Tile::TreeviewConfig" "refm/api/src/tkextlib/tile/Tile__TreeviewConfig")
(find-rurima "--- columncget(tagOrId, option)" "== Instance Methods" "= module Tk::Tile::TreeviewConfig" "refm/api/src/tkextlib/tile/Tile__TreeviewConfig")
(find-rurima "--- column_cget(tagOrId, option)" "== Instance Methods" "= module Tk::Tile::TreeviewConfig" "refm/api/src/tkextlib/tile/Tile__TreeviewConfig")
(find-rurima "--- columnconfigure(tagOrId, slot, value = None)" "== Instance Methods" "= module Tk::Tile::TreeviewConfig" "refm/api/src/tkextlib/tile/Tile__TreeviewConfig")
(find-rurima "--- column_configure(tagOrId, slot, value = None)" "== Instance Methods" "= module Tk::Tile::TreeviewConfig" "refm/api/src/tkextlib/tile/Tile__TreeviewConfig")
(find-rurima "--- columnconfiginfo(tagOrId, slot = nil)" "== Instance Methods" "= module Tk::Tile::TreeviewConfig" "refm/api/src/tkextlib/tile/Tile__TreeviewConfig")
(find-rurima "--- column_configinfo(tagOrId, slot = nil)" "== Instance Methods" "= module Tk::Tile::TreeviewConfig" "refm/api/src/tkextlib/tile/Tile__TreeviewConfig")
(find-rurima "--- current_columnconfiginfo(tagOrId, slot=nil)" "== Instance Methods" "= module Tk::Tile::TreeviewConfig" "refm/api/src/tkextlib/tile/Tile__TreeviewConfig")
(find-rurima "--- current_column_configinfo(tagOrId, slot=nil)" "== Instance Methods" "= module Tk::Tile::TreeviewConfig" "refm/api/src/tkextlib/tile/Tile__TreeviewConfig")
(find-rurima "--- headingcget(tagOrId, option)" "== Instance Methods" "= module Tk::Tile::TreeviewConfig" "refm/api/src/tkextlib/tile/Tile__TreeviewConfig")
(find-rurima "--- heading_cget(tagOrId, option)" "== Instance Methods" "= module Tk::Tile::TreeviewConfig" "refm/api/src/tkextlib/tile/Tile__TreeviewConfig")
(find-rurima "--- headingconfigure(tagOrId, slot, value = None)" "== Instance Methods" "= module Tk::Tile::TreeviewConfig" "refm/api/src/tkextlib/tile/Tile__TreeviewConfig")
(find-rurima "--- heading_configure(tagOrId, slot, value = None)" "== Instance Methods" "= module Tk::Tile::TreeviewConfig" "refm/api/src/tkextlib/tile/Tile__TreeviewConfig")
(find-rurima "--- headingconfiginfo(tagOrId, slot = nil)" "== Instance Methods" "= module Tk::Tile::TreeviewConfig" "refm/api/src/tkextlib/tile/Tile__TreeviewConfig")
(find-rurima "--- heading_configinfo(tagOrId, slot = nil)" "== Instance Methods" "= module Tk::Tile::TreeviewConfig" "refm/api/src/tkextlib/tile/Tile__TreeviewConfig")
(find-rurima "--- current_headingconfiginfo(tagOrId, slot = nil)" "== Instance Methods" "= module Tk::Tile::TreeviewConfig" "refm/api/src/tkextlib/tile/Tile__TreeviewConfig")
(find-rurima "--- current_heading_configinfo(tagOrId, slot = nil)" "== Instance Methods" "= module Tk::Tile::TreeviewConfig" "refm/api/src/tkextlib/tile/Tile__TreeviewConfig")
(find-rurima "= class Tk::Tile::TLabel < TkLabel" "refm/api/src/tkextlib/tile/tlabel.rd")
(find-rurima "= class Tk::Tile::TLabelFrame < Tk::Tile::TFrame" "refm/api/src/tkextlib/tile/tlabelframe.rd")
(find-rurima "== Class Methods" "= class Tk::Tile::TLabelFrame < Tk::Tile::TFrame" "refm/api/src/tkextlib/tile/tlabelframe.rd")
(find-rurima "--- style(*args)" "== Class Methods" "= class Tk::Tile::TLabelFrame < Tk::Tile::TFrame" "refm/api/src/tkextlib/tile/tlabelframe.rd")
(find-rurima "= class Tk::Tile::LabelFrame" "refm/api/src/tkextlib/tile/tlabelframe.rd")
(find-rurima "= module Tk::Tile" "refm/api/src/tkextlib/tile/Tk__Tile")
(find-rurima "== Singleton Methods" "= module Tk::Tile" "refm/api/src/tkextlib/tile/Tk__Tile")
(find-rurima "--- package_name" "== Singleton Methods" "= module Tk::Tile" "refm/api/src/tkextlib/tile/Tk__Tile")
(find-rurima "--- package_version" "== Singleton Methods" "= module Tk::Tile" "refm/api/src/tkextlib/tile/Tk__Tile")
(find-rurima "= class Tk::Tile::TButton < TkButton" "refm/api/src/tkextlib/tile/tbutton.rd")
(find-rurima "= class Tk::Tile::TNotebook < TkWindow" "refm/api/src/tkextlib/tile/tnotebook.rd")
(find-rurima "== Instance Methods" "= class Tk::Tile::TNotebook < TkWindow" "refm/api/src/tkextlib/tile/tnotebook.rd")
(find-rurima "--- tabcget" "== Instance Methods" "= class Tk::Tile::TNotebook < TkWindow" "refm/api/src/tkextlib/tile/tnotebook.rd")
(find-rurima "--- tabconfigure" "== Instance Methods" "= class Tk::Tile::TNotebook < TkWindow" "refm/api/src/tkextlib/tile/tnotebook.rd")
(find-rurima "--- tabconfiginfo" "== Instance Methods" "= class Tk::Tile::TNotebook < TkWindow" "refm/api/src/tkextlib/tile/tnotebook.rd")
(find-rurima "--- current_tabconfiginfo" "== Instance Methods" "= class Tk::Tile::TNotebook < TkWindow" "refm/api/src/tkextlib/tile/tnotebook.rd")
(find-rurima "--- enable_traversal" "== Instance Methods" "= class Tk::Tile::TNotebook < TkWindow" "refm/api/src/tkextlib/tile/tnotebook.rd")
(find-rurima "--- add(child, keys = nil)" "== Instance Methods" "= class Tk::Tile::TNotebook < TkWindow" "refm/api/src/tkextlib/tile/tnotebook.rd")
(find-rurima "--- forget(idx)" "== Instance Methods" "= class Tk::Tile::TNotebook < TkWindow" "refm/api/src/tkextlib/tile/tnotebook.rd")
(find-rurima "--- index(idx)" "== Instance Methods" "= class Tk::Tile::TNotebook < TkWindow" "refm/api/src/tkextlib/tile/tnotebook.rd")
(find-rurima "--- insert(idx, subwin, keys = nil)" "== Instance Methods" "= class Tk::Tile::TNotebook < TkWindow" "refm/api/src/tkextlib/tile/tnotebook.rd")
(find-rurima "--- select(idx)" "== Instance Methods" "= class Tk::Tile::TNotebook < TkWindow" "refm/api/src/tkextlib/tile/tnotebook.rd")
(find-rurima "--- tabs" "== Instance Methods" "= class Tk::Tile::TNotebook < TkWindow" "refm/api/src/tkextlib/tile/tnotebook.rd")
(find-rurima "= class Tk::BLT::Stripchart < TkWindow" "refm/api/src/tkextlib/blt/stripchart.rd")
(find-rurima "== Instance Methods" "= class Tk::BLT::Stripchart < TkWindow" "refm/api/src/tkextlib/blt/stripchart.rd")
(find-rurima "--- extents(item)" "== Instance Methods" "= class Tk::BLT::Stripchart < TkWindow" "refm/api/src/tkextlib/blt/stripchart.rd")
(find-rurima "--- inside(x, y)" "== Instance Methods" "= class Tk::BLT::Stripchart < TkWindow" "refm/api/src/tkextlib/blt/stripchart.rd")
(find-rurima "--- invtransform(x, y)" "== Instance Methods" "= class Tk::BLT::Stripchart < TkWindow" "refm/api/src/tkextlib/blt/stripchart.rd")
(find-rurima "--- metafile(file = None)" "== Instance Methods" "= class Tk::BLT::Stripchart < TkWindow" "refm/api/src/tkextlib/blt/stripchart.rd")
(find-rurima "--- snap(output, keys = {})" "== Instance Methods" "= class Tk::BLT::Stripchart < TkWindow" "refm/api/src/tkextlib/blt/stripchart.rd")
(find-rurima "--- transform(x, y)" "== Instance Methods" "= class Tk::BLT::Stripchart < TkWindow" "refm/api/src/tkextlib/blt/stripchart.rd")
(find-rurima "= class Tk::BLT::Watch < TkObject" "refm/api/src/tkextlib/blt/watch.rd")
(find-rurima "== Class Methods" "= class Tk::BLT::Watch < TkObject" "refm/api/src/tkextlib/blt/watch.rd")
(find-rurima "--- names(state = None)" "== Class Methods" "= class Tk::BLT::Watch < TkObject" "refm/api/src/tkextlib/blt/watch.rd")
(find-rurima "--- new(name = nil, keys = {})" "== Class Methods" "= class Tk::BLT::Watch < TkObject" "refm/api/src/tkextlib/blt/watch.rd")
(find-rurima "== Instance Methods" "= class Tk::BLT::Watch < TkObject" "refm/api/src/tkextlib/blt/watch.rd")
(find-rurima "--- activate" "== Instance Methods" "= class Tk::BLT::Watch < TkObject" "refm/api/src/tkextlib/blt/watch.rd")
(find-rurima "--- cget(key)" "== Instance Methods" "= class Tk::BLT::Watch < TkObject" "refm/api/src/tkextlib/blt/watch.rd")
(find-rurima "--- configinfo(slot = nil)" "== Instance Methods" "= class Tk::BLT::Watch < TkObject" "refm/api/src/tkextlib/blt/watch.rd")
(find-rurima "--- deactivate" "== Instance Methods" "= class Tk::BLT::Watch < TkObject" "refm/api/src/tkextlib/blt/watch.rd")
(find-rurima "--- delete" "== Instance Methods" "= class Tk::BLT::Watch < TkObject" "refm/api/src/tkextlib/blt/watch.rd")
(find-rurima "--- info" "== Instance Methods" "= class Tk::BLT::Watch < TkObject" "refm/api/src/tkextlib/blt/watch.rd")
(find-rurima "= module Tk::BLT::Tile" "refm/api/src/tkextlib/blt/tile.rd")
(find-rurima "= class Tk::BLT::Htext < TkWindow" "refm/api/src/tkextlib/blt/htext.rd")
(find-rurima "== Instance Methods" "= class Tk::BLT::Htext < TkWindow" "refm/api/src/tkextlib/blt/htext.rd")
(find-rurima "--- append(win, keys = {})" "== Instance Methods" "= class Tk::BLT::Htext < TkWindow" "refm/api/src/tkextlib/blt/htext.rd")
(find-rurima "--- current_line" "== Instance Methods" "= class Tk::BLT::Htext < TkWindow" "refm/api/src/tkextlib/blt/htext.rd")
(find-rurima "--- goto_line(idx)" "== Instance Methods" "= class Tk::BLT::Htext < TkWindow" "refm/api/src/tkextlib/blt/htext.rd")
(find-rurima "--- index(str)" "== Instance Methods" "= class Tk::BLT::Htext < TkWindow" "refm/api/src/tkextlib/blt/htext.rd")
(find-rurima "--- line_pos(str)" "== Instance Methods" "= class Tk::BLT::Htext < TkWindow" "refm/api/src/tkextlib/blt/htext.rd")
(find-rurima "--- range(from = None, to = None)" "== Instance Methods" "= class Tk::BLT::Htext < TkWindow" "refm/api/src/tkextlib/blt/htext.rd")
(find-rurima "--- scan_dragto(pos)" "== Instance Methods" "= class Tk::BLT::Htext < TkWindow" "refm/api/src/tkextlib/blt/htext.rd")
(find-rurima "--- scan_mark(pos)" "== Instance Methods" "= class Tk::BLT::Htext < TkWindow" "refm/api/src/tkextlib/blt/htext.rd")
(find-rurima "--- search(pat, from = None, to = None)" "== Instance Methods" "= class Tk::BLT::Htext < TkWindow" "refm/api/src/tkextlib/blt/htext.rd")
(find-rurima "--- selection_adjust(index)" "== Instance Methods" "= class Tk::BLT::Htext < TkWindow" "refm/api/src/tkextlib/blt/htext.rd")
(find-rurima "--- selection_clear" "== Instance Methods" "= class Tk::BLT::Htext < TkWindow" "refm/api/src/tkextlib/blt/htext.rd")
(find-rurima "--- selection_from(index)" "== Instance Methods" "= class Tk::BLT::Htext < TkWindow" "refm/api/src/tkextlib/blt/htext.rd")
(find-rurima "--- selection_line(index)" "== Instance Methods" "= class Tk::BLT::Htext < TkWindow" "refm/api/src/tkextlib/blt/htext.rd")
(find-rurima "--- selection_present" "== Instance Methods" "= class Tk::BLT::Htext < TkWindow" "refm/api/src/tkextlib/blt/htext.rd")
(find-rurima "--- selection_range(first, last)" "== Instance Methods" "= class Tk::BLT::Htext < TkWindow" "refm/api/src/tkextlib/blt/htext.rd")
(find-rurima "--- selection_to(index)" "== Instance Methods" "= class Tk::BLT::Htext < TkWindow" "refm/api/src/tkextlib/blt/htext.rd")
(find-rurima "--- selection_word(index)" "== Instance Methods" "= class Tk::BLT::Htext < TkWindow" "refm/api/src/tkextlib/blt/htext.rd")
(find-rurima "--- windows(pat = None)" "== Instance Methods" "= class Tk::BLT::Htext < TkWindow" "refm/api/src/tkextlib/blt/htext.rd")
(find-rurima "= class Tk::BLT::Vector < TkVariable" "refm/api/src/tkextlib/blt/vector.rd")
(find-rurima "== Class Methods" "= class Tk::BLT::Vector < TkVariable" "refm/api/src/tkextlib/blt/vector.rd")
(find-rurima "--- create(*args)" "== Class Methods" "= class Tk::BLT::Vector < TkVariable" "refm/api/src/tkextlib/blt/vector.rd")
(find-rurima "--- destroy(*args)" "== Class Methods" "= class Tk::BLT::Vector < TkVariable" "refm/api/src/tkextlib/blt/vector.rd")
(find-rurima "--- expr(expression)" "== Class Methods" "= class Tk::BLT::Vector < TkVariable" "refm/api/src/tkextlib/blt/vector.rd")
(find-rurima "--- names(pat = None)" "== Class Methods" "= class Tk::BLT::Vector < TkVariable" "refm/api/src/tkextlib/blt/vector.rd")
(find-rurima "--- new(size = nil, keys = {})" "== Class Methods" "= class Tk::BLT::Vector < TkVariable" "refm/api/src/tkextlib/blt/vector.rd")
(find-rurima "== Instance Methods" "= class Tk::BLT::Vector < TkVariable" "refm/api/src/tkextlib/blt/vector.rd")
(find-rurima "--- *(item)" "== Instance Methods" "= class Tk::BLT::Vector < TkVariable" "refm/api/src/tkextlib/blt/vector.rd")
(find-rurima "--- +(item)" "== Instance Methods" "= class Tk::BLT::Vector < TkVariable" "refm/api/src/tkextlib/blt/vector.rd")
(find-rurima "--- -(item)" "== Instance Methods" "= class Tk::BLT::Vector < TkVariable" "refm/api/src/tkextlib/blt/vector.rd")
(find-rurima "--- /(item)" "== Instance Methods" "= class Tk::BLT::Vector < TkVariable" "refm/api/src/tkextlib/blt/vector.rd")
(find-rurima "--- [](idx)" "== Instance Methods" "= class Tk::BLT::Vector < TkVariable" "refm/api/src/tkextlib/blt/vector.rd")
(find-rurima "--- []=(idx, val)" "== Instance Methods" "= class Tk::BLT::Vector < TkVariable" "refm/api/src/tkextlib/blt/vector.rd")
(find-rurima "--- append(*vectors)" "== Instance Methods" "= class Tk::BLT::Vector < TkVariable" "refm/api/src/tkextlib/blt/vector.rd")
(find-rurima "--- binread(channel, len = None, keys = {})" "== Instance Methods" "= class Tk::BLT::Vector < TkVariable" "refm/api/src/tkextlib/blt/vector.rd")
(find-rurima "--- clear" "== Instance Methods" "= class Tk::BLT::Vector < TkVariable" "refm/api/src/tkextlib/blt/vector.rd")
(find-rurima "--- delete(*indices)" "== Instance Methods" "= class Tk::BLT::Vector < TkVariable" "refm/api/src/tkextlib/blt/vector.rd")
(find-rurima "--- destroy" "== Instance Methods" "= class Tk::BLT::Vector < TkVariable" "refm/api/src/tkextlib/blt/vector.rd")
(find-rurima "--- dup_vector(vec)" "== Instance Methods" "= class Tk::BLT::Vector < TkVariable" "refm/api/src/tkextlib/blt/vector.rd")
(find-rurima "--- expr(expression)" "== Instance Methods" "= class Tk::BLT::Vector < TkVariable" "refm/api/src/tkextlib/blt/vector.rd")
(find-rurima "--- index(idx, val = None)" "== Instance Methods" "= class Tk::BLT::Vector < TkVariable" "refm/api/src/tkextlib/blt/vector.rd")
(find-rurima "--- inspect" "== Instance Methods" "= class Tk::BLT::Vector < TkVariable" "refm/api/src/tkextlib/blt/vector.rd")
(find-rurima "--- length" "== Instance Methods" "= class Tk::BLT::Vector < TkVariable" "refm/api/src/tkextlib/blt/vector.rd")
(find-rurima "--- length=(size)" "== Instance Methods" "= class Tk::BLT::Vector < TkVariable" "refm/api/src/tkextlib/blt/vector.rd")
(find-rurima "--- merge(*vectors)" "== Instance Methods" "= class Tk::BLT::Vector < TkVariable" "refm/api/src/tkextlib/blt/vector.rd")
(find-rurima "--- normalize(vec = None)" "== Instance Methods" "= class Tk::BLT::Vector < TkVariable" "refm/api/src/tkextlib/blt/vector.rd")
(find-rurima "--- notify(keyword)" "== Instance Methods" "= class Tk::BLT::Vector < TkVariable" "refm/api/src/tkextlib/blt/vector.rd")
(find-rurima "--- offset" "== Instance Methods" "= class Tk::BLT::Vector < TkVariable" "refm/api/src/tkextlib/blt/vector.rd")
(find-rurima "--- offset=(val)" "== Instance Methods" "= class Tk::BLT::Vector < TkVariable" "refm/api/src/tkextlib/blt/vector.rd")
(find-rurima "--- populate(vector, density = None)" "== Instance Methods" "= class Tk::BLT::Vector < TkVariable" "refm/api/src/tkextlib/blt/vector.rd")
(find-rurima "--- random" "== Instance Methods" "= class Tk::BLT::Vector < TkVariable" "refm/api/src/tkextlib/blt/vector.rd")
(find-rurima "--- range(first, last = None)" "== Instance Methods" "= class Tk::BLT::Vector < TkVariable" "refm/api/src/tkextlib/blt/vector.rd")
(find-rurima "--- search(val1, val2 = None)" "== Instance Methods" "= class Tk::BLT::Vector < TkVariable" "refm/api/src/tkextlib/blt/vector.rd")
(find-rurima "--- seq(start, finish = None, step = None)" "== Instance Methods" "= class Tk::BLT::Vector < TkVariable" "refm/api/src/tkextlib/blt/vector.rd")
(find-rurima "--- set(item)" "== Instance Methods" "= class Tk::BLT::Vector < TkVariable" "refm/api/src/tkextlib/blt/vector.rd")
(find-rurima "--- sort(*vectors)" "== Instance Methods" "= class Tk::BLT::Vector < TkVariable" "refm/api/src/tkextlib/blt/vector.rd")
(find-rurima "--- sort_reverse(*vectors)" "== Instance Methods" "= class Tk::BLT::Vector < TkVariable" "refm/api/src/tkextlib/blt/vector.rd")
(find-rurima "--- split(*vectors)" "== Instance Methods" "= class Tk::BLT::Vector < TkVariable" "refm/api/src/tkextlib/blt/vector.rd")
(find-rurima "--- to_s" "== Instance Methods" "= class Tk::BLT::Vector < TkVariable" "refm/api/src/tkextlib/blt/vector.rd")
(find-rurima "--- variable(var)" "== Instance Methods" "= class Tk::BLT::Vector < TkVariable" "refm/api/src/tkextlib/blt/vector.rd")
(find-rurima "= class Tk::BLT::VectorAccess < Tk::BLT::Vector" "refm/api/src/tkextlib/blt/vector.rd")
(find-rurima "== Class Methods" "= class Tk::BLT::VectorAccess < Tk::BLT::Vector" "refm/api/src/tkextlib/blt/vector.rd")
(find-rurima "--- new(vec_name)" "== Class Methods" "= class Tk::BLT::VectorAccess < Tk::BLT::Vector" "refm/api/src/tkextlib/blt/vector.rd")
(find-rurima "= module Tk::BLT::Table" "refm/api/src/tkextlib/blt/table.rd")
(find-rurima "== Singleton Methods" "= module Tk::BLT::Table" "refm/api/src/tkextlib/blt/table.rd")
(find-rurima "--- add(container, *args)" "== Singleton Methods" "= module Tk::BLT::Table" "refm/api/src/tkextlib/blt/table.rd")
(find-rurima "--- arrange(container)" "== Singleton Methods" "= module Tk::BLT::Table" "refm/api/src/tkextlib/blt/table.rd")
(find-rurima "--- cget(container, option)" "== Singleton Methods" "= module Tk::BLT::Table" "refm/api/src/tkextlib/blt/table.rd")
(find-rurima "--- configinfo(container, *args)" "== Singleton Methods" "= module Tk::BLT::Table" "refm/api/src/tkextlib/blt/table.rd")
(find-rurima "--- configure(container, *args)" "== Singleton Methods" "= module Tk::BLT::Table" "refm/api/src/tkextlib/blt/table.rd")
(find-rurima "--- containers(arg = {})" "== Singleton Methods" "= module Tk::BLT::Table" "refm/api/src/tkextlib/blt/table.rd")
(find-rurima "--- containers_pattern(pat)" "== Singleton Methods" "= module Tk::BLT::Table" "refm/api/src/tkextlib/blt/table.rd")
(find-rurima "--- containers_slave(win)" "== Singleton Methods" "= module Tk::BLT::Table" "refm/api/src/tkextlib/blt/table.rd")
(find-rurima "--- create_container(container)" "== Singleton Methods" "= module Tk::BLT::Table" "refm/api/src/tkextlib/blt/table.rd")
(find-rurima "--- current_configinfo(container, *args)" "== Singleton Methods" "= module Tk::BLT::Table" "refm/api/src/tkextlib/blt/table.rd")
(find-rurima "--- delete(container, *args)" "== Singleton Methods" "= module Tk::BLT::Table" "refm/api/src/tkextlib/blt/table.rd")
(find-rurima "--- extents(container, item)" "== Singleton Methods" "= module Tk::BLT::Table" "refm/api/src/tkextlib/blt/table.rd")
(find-rurima "--- forget(*wins)" "== Singleton Methods" "= module Tk::BLT::Table" "refm/api/src/tkextlib/blt/table.rd")
(find-rurima "--- info(container)" "== Singleton Methods" "= module Tk::BLT::Table" "refm/api/src/tkextlib/blt/table.rd")
(find-rurima "--- insert(container, *args)" "== Singleton Methods" "= module Tk::BLT::Table" "refm/api/src/tkextlib/blt/table.rd")
(find-rurima "--- insert_after(container, *args)" "== Singleton Methods" "= module Tk::BLT::Table" "refm/api/src/tkextlib/blt/table.rd")
(find-rurima "--- insert_before(container, *args)" "== Singleton Methods" "= module Tk::BLT::Table" "refm/api/src/tkextlib/blt/table.rd")
(find-rurima "--- itemcget(container, item, option)" "== Singleton Methods" "= module Tk::BLT::Table" "refm/api/src/tkextlib/blt/table.rd")
(find-rurima "--- itemconfiginfo(container, *args)" "== Singleton Methods" "= module Tk::BLT::Table" "refm/api/src/tkextlib/blt/table.rd")
(find-rurima "--- itemconfigure(container, *args)" "== Singleton Methods" "= module Tk::BLT::Table" "refm/api/src/tkextlib/blt/table.rd")
(find-rurima "--- iteminfo(container, item)" "== Singleton Methods" "= module Tk::BLT::Table" "refm/api/src/tkextlib/blt/table.rd")
(find-rurima "--- join(container, first, last)" "== Singleton Methods" "= module Tk::BLT::Table" "refm/api/src/tkextlib/blt/table.rd")
(find-rurima "--- locate(container, x, y)" "== Singleton Methods" "= module Tk::BLT::Table" "refm/api/src/tkextlib/blt/table.rd")
(find-rurima "--- save(container)" "== Singleton Methods" "= module Tk::BLT::Table" "refm/api/src/tkextlib/blt/table.rd")
(find-rurima "--- search(container, keys = {})" "== Singleton Methods" "= module Tk::BLT::Table" "refm/api/src/tkextlib/blt/table.rd")
(find-rurima "--- split(container, *args)" "== Singleton Methods" "= module Tk::BLT::Table" "refm/api/src/tkextlib/blt/table.rd")
(find-rurima "--- tagid(tag)" "== Singleton Methods" "= module Tk::BLT::Table" "refm/api/src/tkextlib/blt/table.rd")
(find-rurima "--- tagid2obj(tagid)" "== Singleton Methods" "= module Tk::BLT::Table" "refm/api/src/tkextlib/blt/table.rd")
(find-rurima "= module Tk::BLT::DragDrop" "refm/api/src/tkextlib/blt/dragdrop.rd")
(find-rurima "== Singleton Methods" "= module Tk::BLT::DragDrop" "refm/api/src/tkextlib/blt/dragdrop.rd")
(find-rurima "--- __validation_class_list" "== Singleton Methods" "= module Tk::BLT::DragDrop" "refm/api/src/tkextlib/blt/dragdrop.rd")
(find-rurima "--- active" "== Singleton Methods" "= module Tk::BLT::DragDrop" "refm/api/src/tkextlib/blt/dragdrop.rd")
(find-rurima "--- current_source_configinfo(win, slot = nil)" "== Singleton Methods" "= module Tk::BLT::DragDrop" "refm/api/src/tkextlib/blt/dragdrop.rd")
(find-rurima "--- drag(win, x, y)" "== Singleton Methods" "= module Tk::BLT::DragDrop" "refm/api/src/tkextlib/blt/dragdrop.rd")
(find-rurima "--- drop(win, x, y)" "== Singleton Methods" "= module Tk::BLT::DragDrop" "refm/api/src/tkextlib/blt/dragdrop.rd")
(find-rurima "--- errors(cmd = Proc.new)" "== Singleton Methods" "= module Tk::BLT::DragDrop" "refm/api/src/tkextlib/blt/dragdrop.rd")
(find-rurima "--- handle_target(win, type, val = None)" "== Singleton Methods" "= module Tk::BLT::DragDrop" "refm/api/src/tkextlib/blt/dragdrop.rd")
(find-rurima "--- init_source(win)" "== Singleton Methods" "= module Tk::BLT::DragDrop" "refm/api/src/tkextlib/blt/dragdrop.rd")
(find-rurima "--- location(x = None, y = None)" "== Singleton Methods" "= module Tk::BLT::DragDrop" "refm/api/src/tkextlib/blt/dragdrop.rd")
(find-rurima "--- source" "== Singleton Methods" "= module Tk::BLT::DragDrop" "refm/api/src/tkextlib/blt/dragdrop.rd")
(find-rurima "--- source_configinfo(win, slot = nil)" "== Singleton Methods" "= module Tk::BLT::DragDrop" "refm/api/src/tkextlib/blt/dragdrop.rd")
(find-rurima "--- source_configure(win, slot, value = None)" "== Singleton Methods" "= module Tk::BLT::DragDrop" "refm/api/src/tkextlib/blt/dragdrop.rd")
(find-rurima "--- source_handler(win, datatype, cmd = Proc.new, *args)" "== Singleton Methods" "= module Tk::BLT::DragDrop" "refm/api/src/tkextlib/blt/dragdrop.rd")
(find-rurima "--- source_handler_info(win, type)" "== Singleton Methods" "= module Tk::BLT::DragDrop" "refm/api/src/tkextlib/blt/dragdrop.rd")
(find-rurima "--- source_handler_list(win)" "== Singleton Methods" "= module Tk::BLT::DragDrop" "refm/api/src/tkextlib/blt/dragdrop.rd")
(find-rurima "--- target" "== Singleton Methods" "= module Tk::BLT::DragDrop" "refm/api/src/tkextlib/blt/dragdrop.rd")
(find-rurima "--- target_handler(win, datatype, cmd = Proc.new, *args)" "== Singleton Methods" "= module Tk::BLT::DragDrop" "refm/api/src/tkextlib/blt/dragdrop.rd")
(find-rurima "--- target_handler_list(win)" "== Singleton Methods" "= module Tk::BLT::DragDrop" "refm/api/src/tkextlib/blt/dragdrop.rd")
(find-rurima "--- token(win)" "== Singleton Methods" "= module Tk::BLT::DragDrop" "refm/api/src/tkextlib/blt/dragdrop.rd")
(find-rurima "= class Tk::BLT::Graph < TkWindow" "refm/api/src/tkextlib/blt/graph.rd")
(find-rurima "== Instance Methods" "= class Tk::BLT::Graph < TkWindow" "refm/api/src/tkextlib/blt/graph.rd")
(find-rurima "--- extents(item)" "== Instance Methods" "= class Tk::BLT::Graph < TkWindow" "refm/api/src/tkextlib/blt/graph.rd")
(find-rurima "--- inside(x, y)" "== Instance Methods" "= class Tk::BLT::Graph < TkWindow" "refm/api/src/tkextlib/blt/graph.rd")
(find-rurima "--- invtransform(x, y)" "== Instance Methods" "= class Tk::BLT::Graph < TkWindow" "refm/api/src/tkextlib/blt/graph.rd")
(find-rurima "--- snap(output, keys = {})" "== Instance Methods" "= class Tk::BLT::Graph < TkWindow" "refm/api/src/tkextlib/blt/graph.rd")
(find-rurima "--- transform(x, y)" "== Instance Methods" "= class Tk::BLT::Graph < TkWindow" "refm/api/src/tkextlib/blt/graph.rd")
(find-rurima "= class Tk::BLT::Bitmap < TkObject" "refm/api/src/tkextlib/blt/bitmap.rd")
(find-rurima "== Class Methods" "= class Tk::BLT::Bitmap < TkObject" "refm/api/src/tkextlib/blt/bitmap.rd")
(find-rurima "--- compose(text, keys = {})" "== Class Methods" "= class Tk::BLT::Bitmap < TkObject" "refm/api/src/tkextlib/blt/bitmap.rd")
(find-rurima "--- compose_with_name(name, text, keys = {})" "== Class Methods" "= class Tk::BLT::Bitmap < TkObject" "refm/api/src/tkextlib/blt/bitmap.rd")
(find-rurima "--- data(name)" "== Class Methods" "= class Tk::BLT::Bitmap < TkObject" "refm/api/src/tkextlib/blt/bitmap.rd")
(find-rurima "--- exist?(name)" "== Class Methods" "= class Tk::BLT::Bitmap < TkObject" "refm/api/src/tkextlib/blt/bitmap.rd")
(find-rurima "--- height(name)" "== Class Methods" "= class Tk::BLT::Bitmap < TkObject" "refm/api/src/tkextlib/blt/bitmap.rd")
(find-rurima "--- new(type, name, data, keys = {})" "== Class Methods" "= class Tk::BLT::Bitmap < TkObject" "refm/api/src/tkextlib/blt/bitmap.rd")
(find-rurima "--- new_with_name(name, data, keys = {})" "== Class Methods" "= class Tk::BLT::Bitmap < TkObject" "refm/api/src/tkextlib/blt/bitmap.rd")
(find-rurima "--- source(name)" "== Class Methods" "= class Tk::BLT::Bitmap < TkObject" "refm/api/src/tkextlib/blt/bitmap.rd")
(find-rurima "--- width(name)" "== Class Methods" "= class Tk::BLT::Bitmap < TkObject" "refm/api/src/tkextlib/blt/bitmap.rd")
(find-rurima "== Instance Methods" "= class Tk::BLT::Bitmap < TkObject" "refm/api/src/tkextlib/blt/bitmap.rd")
(find-rurima "--- exist?" "== Instance Methods" "= class Tk::BLT::Bitmap < TkObject" "refm/api/src/tkextlib/blt/bitmap.rd")
(find-rurima "--- height" "== Instance Methods" "= class Tk::BLT::Bitmap < TkObject" "refm/api/src/tkextlib/blt/bitmap.rd")
(find-rurima "--- source" "== Instance Methods" "= class Tk::BLT::Bitmap < TkObject" "refm/api/src/tkextlib/blt/bitmap.rd")
(find-rurima "--- width" "== Instance Methods" "= class Tk::BLT::Bitmap < TkObject" "refm/api/src/tkextlib/blt/bitmap.rd")
(find-rurima "= module Tk::BLT::Busy" "refm/api/src/tkextlib/blt/busy.rd")
(find-rurima "== Singleton Methods" "= module Tk::BLT::Busy" "refm/api/src/tkextlib/blt/busy.rd")
(find-rurima "--- check(win)" "== Singleton Methods" "= module Tk::BLT::Busy" "refm/api/src/tkextlib/blt/busy.rd")
(find-rurima "--- forget(*wins)" "== Singleton Methods" "= module Tk::BLT::Busy" "refm/api/src/tkextlib/blt/busy.rd")
(find-rurima "--- hold(win, keys = {})" "== Singleton Methods" "= module Tk::BLT::Busy" "refm/api/src/tkextlib/blt/busy.rd")
(find-rurima "--- is_busy(pat = None)" "== Singleton Methods" "= module Tk::BLT::Busy" "refm/api/src/tkextlib/blt/busy.rd")
(find-rurima "--- names(pat = None)" "== Singleton Methods" "= module Tk::BLT::Busy" "refm/api/src/tkextlib/blt/busy.rd")
(find-rurima "--- release(*wins)" "== Singleton Methods" "= module Tk::BLT::Busy" "refm/api/src/tkextlib/blt/busy.rd")
(find-rurima "--- shield_path(win)" "== Singleton Methods" "= module Tk::BLT::Busy" "refm/api/src/tkextlib/blt/busy.rd")
(find-rurima "--- status(win)" "== Singleton Methods" "= module Tk::BLT::Busy" "refm/api/src/tkextlib/blt/busy.rd")
(find-rurima "= class Tk::BLT::Busy::Shield < TkWindow" "refm/api/src/tkextlib/blt/busy.rd")
(find-rurima "== Class Methods" "= class Tk::BLT::Busy::Shield < TkWindow" "refm/api/src/tkextlib/blt/busy.rd")
(find-rurima "--- new(win)" "== Class Methods" "= class Tk::BLT::Busy::Shield < TkWindow" "refm/api/src/tkextlib/blt/busy.rd")
(find-rurima "--- shield_path(win)" "== Class Methods" "= class Tk::BLT::Busy::Shield < TkWindow" "refm/api/src/tkextlib/blt/busy.rd")
(find-rurima "= class Tk::BLT::Tabset::Tab < TkObject" "refm/api/src/tkextlib/blt/tabset/Tabset__Tab")
(find-rurima "== Class Methods" "= class Tk::BLT::Tabset::Tab < TkObject" "refm/api/src/tkextlib/blt/tabset/Tabset__Tab")
(find-rurima "--- id2obj(tabset, id)" "== Class Methods" "= class Tk::BLT::Tabset::Tab < TkObject" "refm/api/src/tkextlib/blt/tabset/Tabset__Tab")
(find-rurima "--- new(parent, pos = nil, name = nil, keys = {})" "== Class Methods" "= class Tk::BLT::Tabset::Tab < TkObject" "refm/api/src/tkextlib/blt/tabset/Tabset__Tab")
(find-rurima "== Instance Methods" "= class Tk::BLT::Tabset::Tab < TkObject" "refm/api/src/tkextlib/blt/tabset/Tabset__Tab")
(find-rurima "--- bind(context, *args)" "== Instance Methods" "= class Tk::BLT::Tabset::Tab < TkObject" "refm/api/src/tkextlib/blt/tabset/Tabset__Tab")
(find-rurima "--- bind_append(context, *args)" "== Instance Methods" "= class Tk::BLT::Tabset::Tab < TkObject" "refm/api/src/tkextlib/blt/tabset/Tabset__Tab")
(find-rurima "--- bind_remove(context)" "== Instance Methods" "= class Tk::BLT::Tabset::Tab < TkObject" "refm/api/src/tkextlib/blt/tabset/Tabset__Tab")
(find-rurima "--- bindinfo(context = nil)" "== Instance Methods" "= class Tk::BLT::Tabset::Tab < TkObject" "refm/api/src/tkextlib/blt/tabset/Tabset__Tab")
(find-rurima "--- cget(*args)" "== Instance Methods" "= class Tk::BLT::Tabset::Tab < TkObject" "refm/api/src/tkextlib/blt/tabset/Tabset__Tab")
(find-rurima "--- configinfo(*args)" "== Instance Methods" "= class Tk::BLT::Tabset::Tab < TkObject" "refm/api/src/tkextlib/blt/tabset/Tabset__Tab")
(find-rurima "--- configure(*args)" "== Instance Methods" "= class Tk::BLT::Tabset::Tab < TkObject" "refm/api/src/tkextlib/blt/tabset/Tabset__Tab")
(find-rurima "--- current_configinfo(*args)" "== Instance Methods" "= class Tk::BLT::Tabset::Tab < TkObject" "refm/api/src/tkextlib/blt/tabset/Tabset__Tab")
(find-rurima "--- delete" "== Instance Methods" "= class Tk::BLT::Tabset::Tab < TkObject" "refm/api/src/tkextlib/blt/tabset/Tabset__Tab")
(find-rurima "--- focus" "== Instance Methods" "= class Tk::BLT::Tabset::Tab < TkObject" "refm/api/src/tkextlib/blt/tabset/Tabset__Tab")
(find-rurima "--- get_name" "== Instance Methods" "= class Tk::BLT::Tabset::Tab < TkObject" "refm/api/src/tkextlib/blt/tabset/Tabset__Tab")
(find-rurima "--- index" "== Instance Methods" "= class Tk::BLT::Tabset::Tab < TkObject" "refm/api/src/tkextlib/blt/tabset/Tabset__Tab")
(find-rurima "--- invoke" "== Instance Methods" "= class Tk::BLT::Tabset::Tab < TkObject" "refm/api/src/tkextlib/blt/tabset/Tabset__Tab")
(find-rurima "--- move_after(idx)" "== Instance Methods" "= class Tk::BLT::Tabset::Tab < TkObject" "refm/api/src/tkextlib/blt/tabset/Tabset__Tab")
(find-rurima "--- move_before(idx)" "== Instance Methods" "= class Tk::BLT::Tabset::Tab < TkObject" "refm/api/src/tkextlib/blt/tabset/Tabset__Tab")
(find-rurima "--- perforation_highlight(mode)" "== Instance Methods" "= class Tk::BLT::Tabset::Tab < TkObject" "refm/api/src/tkextlib/blt/tabset/Tabset__Tab")
(find-rurima "--- perforation_invoke" "== Instance Methods" "= class Tk::BLT::Tabset::Tab < TkObject" "refm/api/src/tkextlib/blt/tabset/Tabset__Tab")
(find-rurima "--- see" "== Instance Methods" "= class Tk::BLT::Tabset::Tab < TkObject" "refm/api/src/tkextlib/blt/tabset/Tabset__Tab")
(find-rurima "--- tearoff(name = None)" "== Instance Methods" "= class Tk::BLT::Tabset::Tab < TkObject" "refm/api/src/tkextlib/blt/tabset/Tabset__Tab")
(find-rurima "= class Tk::BLT::Tabset::NamedTab < Tk::BLT::Tabset::Tab" "refm/api/src/tkextlib/blt/tabset/Tabset__NamedTab")
(find-rurima "== Class Methods" "= class Tk::BLT::Tabset::NamedTab < Tk::BLT::Tabset::Tab" "refm/api/src/tkextlib/blt/tabset/Tabset__NamedTab")
(find-rurima "--- new(parent, name)" "== Class Methods" "= class Tk::BLT::Tabset::NamedTab < Tk::BLT::Tabset::Tab" "refm/api/src/tkextlib/blt/tabset/Tabset__NamedTab")
(find-rurima "= module Tk::BLT::Spline" "refm/api/src/tkextlib/blt/spline.rd")
(find-rurima "== Singleton Methods" "= module Tk::BLT::Spline" "refm/api/src/tkextlib/blt/spline.rd")
(find-rurima "--- natural(x, y, sx, sy)" "== Singleton Methods" "= module Tk::BLT::Spline" "refm/api/src/tkextlib/blt/spline.rd")
(find-rurima "--- quadratic(x, y, sx, sy)" "== Singleton Methods" "= module Tk::BLT::Spline" "refm/api/src/tkextlib/blt/spline.rd")
(find-rurima "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "== Class Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- destroy(*names)" "== Class Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- id2obj(id)" "== Class Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- names(pat = None)" "== Class Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- new(name = nil)" "== Class Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- __destroy_hook__" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- __keyonly_optkeys" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- ancestor(node1, node2)" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- ancestor?(node1, node2)" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- apply(node, keys = {})" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- attach(tree_obj)" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- before?(node1, node2)" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- children(node)" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- copy(src, parent, keys = {})" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- copy_to(src, dest_tree, parent, keys = {})" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- degree(node)" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- delete(*nodes)" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- depth(node)" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- destroy" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- dump(node)" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- dump_to_file(node, file)" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- exist?(node, key = None)" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- find(node, keys = {})" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- find_child(node, label)" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- first_child(node)" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- fullpath(node)" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- get(node)" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- get_value(node, key, default_val = None)" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- index(node)" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- initialize(name = nil)" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- insert(parent, keys = {})" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- keys(node, *nodes)" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- label(node, text = nil)" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- last_child(node)" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- leaf?(node)" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- link(parent, node, keys = {})" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- link?(node)" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- move(node, dest, keys = {})" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- next(node)" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- next_sibling(node)" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- notify_create(*args, &b)" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- notify_delete(id)" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- notify_info(id)" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- notify_names" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- parent(node)" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- position(node)" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- prev_sibling(node)" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- previous(node)" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- restore(node, str, keys = {})" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- restore_from_file(node, file, keys = {})" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- restore_overwrite(node, str, keys = {})" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- restore_overwrite_from_file(node, file, keys = {})" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- root(node = None)" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- root?(node)" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- set(node, data)" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- size(node)" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- sort(node, keys = {})" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- tag_add(tag, *nodes)" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- tag_delete(tag, *nodes)" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- tag_forget(tag)" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- tag_get(node, *patterns)" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- tag_names(node = None)" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- tag_nodes(tag)" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- tag_set(node, *tags)" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- tag_unset(node, *tags)" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- tagid(tag)" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- trace_create(*args, &b)" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- trace_delete(*args)" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- trace_info(id)" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- trace_names" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- type(node, key)" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- unset(node, *keys)" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "--- values(node, key = None)" "== Instance Methods" "= class Tk::BLT::Tree < TkObject" "refm/api/src/tkextlib/blt/tree.rd")
(find-rurima "= class Tk::BLT::Barchart < TkWindow" "refm/api/src/tkextlib/blt/barchart.rd")
(find-rurima "== Instance Methods" "= class Tk::BLT::Barchart < TkWindow" "refm/api/src/tkextlib/blt/barchart.rd")
(find-rurima "--- extents(item)" "== Instance Methods" "= class Tk::BLT::Barchart < TkWindow" "refm/api/src/tkextlib/blt/barchart.rd")
(find-rurima "--- inside(x, y)" "== Instance Methods" "= class Tk::BLT::Barchart < TkWindow" "refm/api/src/tkextlib/blt/barchart.rd")
(find-rurima "--- invtransform(x, y)" "== Instance Methods" "= class Tk::BLT::Barchart < TkWindow" "refm/api/src/tkextlib/blt/barchart.rd")
(find-rurima "--- metafile(file = None)" "== Instance Methods" "= class Tk::BLT::Barchart < TkWindow" "refm/api/src/tkextlib/blt/barchart.rd")
(find-rurima "--- snap(output, keys = {})" "== Instance Methods" "= class Tk::BLT::Barchart < TkWindow" "refm/api/src/tkextlib/blt/barchart.rd")
(find-rurima "--- transform(x, y)" "== Instance Methods" "= class Tk::BLT::Barchart < TkWindow" "refm/api/src/tkextlib/blt/barchart.rd")
(find-rurima "= class Tk::BLT::Container < TkWindow" "refm/api/src/tkextlib/blt/container.rd")
(find-rurima "= class Tk::BLT::EPS < TkcItem" "refm/api/src/tkextlib/blt/eps.rd")
(find-rurima "= class Tk::BLT::DragDrop::PackageCommand < TkValidateCommand" "refm/api/src/tkextlib/blt/dragdrop/DragDrop__PackageCommand")
(find-rurima "== Class Methods" "= class Tk::BLT::DragDrop::PackageCommand < TkValidateCommand" "refm/api/src/tkextlib/blt/dragdrop/DragDrop__PackageCommand")
(find-rurima "--- _config_keys" "== Class Methods" "= class Tk::BLT::DragDrop::PackageCommand < TkValidateCommand" "refm/api/src/tkextlib/blt/dragdrop/DragDrop__PackageCommand")
(find-rurima "= class Tk::BLT::DragDrop::DnD_Handle < TkUtil::CallbackSubst" "refm/api/src/tkextlib/blt/dragdrop/DragDrop__DnD_Handle")
(find-rurima "= class Tk::BLT::DragDrop::SiteCommand < TkValidateCommand" "refm/api/src/tkextlib/blt/dragdrop/DragDrop__SiteCommand")
(find-rurima "== Class Methods" "= class Tk::BLT::DragDrop::SiteCommand < TkValidateCommand" "refm/api/src/tkextlib/blt/dragdrop/DragDrop__SiteCommand")
(find-rurima "--- _config_keys" "== Class Methods" "= class Tk::BLT::DragDrop::SiteCommand < TkValidateCommand" "refm/api/src/tkextlib/blt/dragdrop/DragDrop__SiteCommand")
(find-rurima "= class Tk::BLT::DragDrop::Token < TkWindow" "refm/api/src/tkextlib/blt/dragdrop/DragDrop__Token")
(find-rurima "== Class Methods" "= class Tk::BLT::DragDrop::Token < TkWindow" "refm/api/src/tkextlib/blt/dragdrop/DragDrop__Token")
(find-rurima "--- new(arg)" "== Class Methods" "= class Tk::BLT::DragDrop::Token < TkWindow" "refm/api/src/tkextlib/blt/dragdrop/DragDrop__Token")
(find-rurima "= class Tk::BLT::DragDrop::PackageCommand::ValidateArgs < TkUtil::CallbackSubst" "refm/api/src/tkextlib/blt/dragdrop/DragDrop__PackageCommand__ValidateArgs")
(find-rurima "== Class Methods" "= class Tk::BLT::DragDrop::PackageCommand::ValidateArgs < TkUtil::CallbackSubst" "refm/api/src/tkextlib/blt/dragdrop/DragDrop__PackageCommand__ValidateArgs")
(find-rurima "--- ret_val(val)" "== Class Methods" "= class Tk::BLT::DragDrop::PackageCommand::ValidateArgs < TkUtil::CallbackSubst" "refm/api/src/tkextlib/blt/dragdrop/DragDrop__PackageCommand__ValidateArgs")
(find-rurima "= class Tk::BLT::DragDrop::SiteCommand::ValidateArgs < TkUtil::CallbackSubst" "refm/api/src/tkextlib/blt/dragdrop/DragDrop__SiteCommand__ValidateArgs")
(find-rurima "== Class Methods" "= class Tk::BLT::DragDrop::SiteCommand::ValidateArgs < TkUtil::CallbackSubst" "refm/api/src/tkextlib/blt/dragdrop/DragDrop__SiteCommand__ValidateArgs")
(find-rurima "--- ret_val(val)" "== Class Methods" "= class Tk::BLT::DragDrop::SiteCommand::ValidateArgs < TkUtil::CallbackSubst" "refm/api/src/tkextlib/blt/dragdrop/DragDrop__SiteCommand__ValidateArgs")
(find-rurima "= class Tk::BLT::PlotComponent::ImageMarker < Tk::BLT::PlotComponent::Marker" "refm/api/src/tkextlib/blt/component/PlotComponent__ImageMarker")
(find-rurima "= class Tk::BLT::PlotComponent::Pen < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Pen")
(find-rurima "== Class Methods" "= class Tk::BLT::PlotComponent::Pen < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Pen")
(find-rurima "--- id2obj(chart, id)" "== Class Methods" "= class Tk::BLT::PlotComponent::Pen < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Pen")
(find-rurima "--- new(chart, pen = nil, keys = {})" "== Class Methods" "= class Tk::BLT::PlotComponent::Pen < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Pen")
(find-rurima "== Instance Methods" "= class Tk::BLT::PlotComponent::Pen < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Pen")
(find-rurima "--- cget(option)" "== Instance Methods" "= class Tk::BLT::PlotComponent::Pen < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Pen")
(find-rurima "--- configinfo(key = nil)" "== Instance Methods" "= class Tk::BLT::PlotComponent::Pen < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Pen")
(find-rurima "--- configure(key, value = None)" "== Instance Methods" "= class Tk::BLT::PlotComponent::Pen < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Pen")
(find-rurima "--- current_configinfo(key = nil)" "== Instance Methods" "= class Tk::BLT::PlotComponent::Pen < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Pen")
(find-rurima "--- delete" "== Instance Methods" "= class Tk::BLT::PlotComponent::Pen < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Pen")
(find-rurima "--- id" "== Instance Methods" "= class Tk::BLT::PlotComponent::Pen < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Pen")
(find-rurima "--- name" "== Instance Methods" "= class Tk::BLT::PlotComponent::Pen < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Pen")
(find-rurima "--- to_eval" "== Instance Methods" "= class Tk::BLT::PlotComponent::Pen < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Pen")
(find-rurima "= class Tk::BLT::PlotComponent::Crosshairs < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Crosshairs")
(find-rurima "== Class Methods" "= class Tk::BLT::PlotComponent::Crosshairs < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Crosshairs")
(find-rurima "--- new(chart, keys = {})" "== Class Methods" "= class Tk::BLT::PlotComponent::Crosshairs < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Crosshairs")
(find-rurima "== Instance Methods" "= class Tk::BLT::PlotComponent::Crosshairs < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Crosshairs")
(find-rurima "--- cget(option)" "== Instance Methods" "= class Tk::BLT::PlotComponent::Crosshairs < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Crosshairs")
(find-rurima "--- configinfo(key = nil)" "== Instance Methods" "= class Tk::BLT::PlotComponent::Crosshairs < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Crosshairs")
(find-rurima "--- configure(key, value = None)" "== Instance Methods" "= class Tk::BLT::PlotComponent::Crosshairs < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Crosshairs")
(find-rurima "--- current_configinfo(key = nil)" "== Instance Methods" "= class Tk::BLT::PlotComponent::Crosshairs < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Crosshairs")
(find-rurima "--- id" "== Instance Methods" "= class Tk::BLT::PlotComponent::Crosshairs < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Crosshairs")
(find-rurima "--- off" "== Instance Methods" "= class Tk::BLT::PlotComponent::Crosshairs < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Crosshairs")
(find-rurima "--- on" "== Instance Methods" "= class Tk::BLT::PlotComponent::Crosshairs < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Crosshairs")
(find-rurima "--- to_eval" "== Instance Methods" "= class Tk::BLT::PlotComponent::Crosshairs < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Crosshairs")
(find-rurima "--- toggle" "== Instance Methods" "= class Tk::BLT::PlotComponent::Crosshairs < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Crosshairs")
(find-rurima "= class Tk::BLT::PlotComponent::Element < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Element")
(find-rurima "== Class Methods" "= class Tk::BLT::PlotComponent::Element < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Element")
(find-rurima "--- id2obj(chart, id)" "== Class Methods" "= class Tk::BLT::PlotComponent::Element < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Element")
(find-rurima "--- new(chart, element = nil, keys = {})" "== Class Methods" "= class Tk::BLT::PlotComponent::Element < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Element")
(find-rurima "--- type2class(type)" "== Class Methods" "= class Tk::BLT::PlotComponent::Element < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Element")
(find-rurima "== Instance Methods" "= class Tk::BLT::PlotComponent::Element < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Element")
(find-rurima "--- activate(*args)" "== Instance Methods" "= class Tk::BLT::PlotComponent::Element < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Element")
(find-rurima "--- cget(option)" "== Instance Methods" "= class Tk::BLT::PlotComponent::Element < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Element")
(find-rurima "--- closest(x, y, var, keys = {})" "== Instance Methods" "= class Tk::BLT::PlotComponent::Element < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Element")
(find-rurima "--- configinfo(key = nil)" "== Instance Methods" "= class Tk::BLT::PlotComponent::Element < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Element")
(find-rurima "--- configure(key, value = None)" "== Instance Methods" "= class Tk::BLT::PlotComponent::Element < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Element")
(find-rurima "--- current_configinfo(key = nil)" "== Instance Methods" "= class Tk::BLT::PlotComponent::Element < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Element")
(find-rurima "--- data(*args)" "== Instance Methods" "= class Tk::BLT::PlotComponent::Element < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Element")
(find-rurima "--- deactivate" "== Instance Methods" "= class Tk::BLT::PlotComponent::Element < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Element")
(find-rurima "--- delete" "== Instance Methods" "= class Tk::BLT::PlotComponent::Element < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Element")
(find-rurima "--- exist?" "== Instance Methods" "= class Tk::BLT::PlotComponent::Element < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Element")
(find-rurima "--- id" "== Instance Methods" "= class Tk::BLT::PlotComponent::Element < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Element")
(find-rurima "--- name" "== Instance Methods" "= class Tk::BLT::PlotComponent::Element < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Element")
(find-rurima "--- to_eval" "== Instance Methods" "= class Tk::BLT::PlotComponent::Element < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Element")
(find-rurima "--- type" "== Instance Methods" "= class Tk::BLT::PlotComponent::Element < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Element")
(find-rurima "= class Tk::BLT::PlotComponent::Line < Tk::BLT::PlotComponent::Element" "refm/api/src/tkextlib/blt/component/PlotComponent__Line")
(find-rurima "= class Tk::BLT::PlotComponent::Marker < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Marker")
(find-rurima "== Class Methods" "= class Tk::BLT::PlotComponent::Marker < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Marker")
(find-rurima "--- create(chart, keys = {})" "== Class Methods" "= class Tk::BLT::PlotComponent::Marker < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Marker")
(find-rurima "--- create_type(chart, type, keys = {})" "== Class Methods" "= class Tk::BLT::PlotComponent::Marker < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Marker")
(find-rurima "--- id2obj(chart, id)" "== Class Methods" "= class Tk::BLT::PlotComponent::Marker < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Marker")
(find-rurima "--- new(parent, *args)" "== Class Methods" "= class Tk::BLT::PlotComponent::Marker < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Marker")
(find-rurima "--- type2class(type)" "== Class Methods" "= class Tk::BLT::PlotComponent::Marker < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Marker")
(find-rurima "== Instance Methods" "= class Tk::BLT::PlotComponent::Marker < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Marker")
(find-rurima "--- after(target = None)" "== Instance Methods" "= class Tk::BLT::PlotComponent::Marker < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Marker")
(find-rurima "--- before(target = None)" "== Instance Methods" "= class Tk::BLT::PlotComponent::Marker < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Marker")
(find-rurima "--- cget(option)" "== Instance Methods" "= class Tk::BLT::PlotComponent::Marker < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Marker")
(find-rurima "--- configinfo(key = nil)" "== Instance Methods" "= class Tk::BLT::PlotComponent::Marker < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Marker")
(find-rurima "--- configure(key, value = None)" "== Instance Methods" "= class Tk::BLT::PlotComponent::Marker < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Marker")
(find-rurima "--- current_configinfo(key = nil)" "== Instance Methods" "= class Tk::BLT::PlotComponent::Marker < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Marker")
(find-rurima "--- delete" "== Instance Methods" "= class Tk::BLT::PlotComponent::Marker < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Marker")
(find-rurima "--- exist?" "== Instance Methods" "= class Tk::BLT::PlotComponent::Marker < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Marker")
(find-rurima "--- id" "== Instance Methods" "= class Tk::BLT::PlotComponent::Marker < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Marker")
(find-rurima "--- to_eval" "== Instance Methods" "= class Tk::BLT::PlotComponent::Marker < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Marker")
(find-rurima "--- type" "== Instance Methods" "= class Tk::BLT::PlotComponent::Marker < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Marker")
(find-rurima "= class Tk::BLT::PlotComponent::Postscript < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Postscript")
(find-rurima "== Class Methods" "= class Tk::BLT::PlotComponent::Postscript < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Postscript")
(find-rurima "--- new(chart, keys = {})" "== Class Methods" "= class Tk::BLT::PlotComponent::Postscript < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Postscript")
(find-rurima "== Instance Methods" "= class Tk::BLT::PlotComponent::Postscript < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Postscript")
(find-rurima "--- cget(option)" "== Instance Methods" "= class Tk::BLT::PlotComponent::Postscript < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Postscript")
(find-rurima "--- configinfo(key = nil)" "== Instance Methods" "= class Tk::BLT::PlotComponent::Postscript < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Postscript")
(find-rurima "--- configure(key, value = None)" "== Instance Methods" "= class Tk::BLT::PlotComponent::Postscript < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Postscript")
(find-rurima "--- current_configinfo(key = nil)" "== Instance Methods" "= class Tk::BLT::PlotComponent::Postscript < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Postscript")
(find-rurima "--- id" "== Instance Methods" "= class Tk::BLT::PlotComponent::Postscript < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Postscript")
(find-rurima "--- output(file = nil, keys = {})" "== Instance Methods" "= class Tk::BLT::PlotComponent::Postscript < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Postscript")
(find-rurima "--- to_eval" "== Instance Methods" "= class Tk::BLT::PlotComponent::Postscript < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Postscript")
(find-rurima "= class Tk::BLT::PlotComponent::Bar < Tk::BLT::PlotComponent::Element" "refm/api/src/tkextlib/blt/component/PlotComponent__Bar")
(find-rurima "= class Tk::BLT::PlotComponent::Legend < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Legend")
(find-rurima "== Class Methods" "= class Tk::BLT::PlotComponent::Legend < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Legend")
(find-rurima "--- new(chart, keys = {})" "== Class Methods" "= class Tk::BLT::PlotComponent::Legend < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Legend")
(find-rurima "== Instance Methods" "= class Tk::BLT::PlotComponent::Legend < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Legend")
(find-rurima "--- activate(*args)" "== Instance Methods" "= class Tk::BLT::PlotComponent::Legend < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Legend")
(find-rurima "--- cget(option)" "== Instance Methods" "= class Tk::BLT::PlotComponent::Legend < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Legend")
(find-rurima "--- configinfo(key = nil)" "== Instance Methods" "= class Tk::BLT::PlotComponent::Legend < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Legend")
(find-rurima "--- configure(key, value = None)" "== Instance Methods" "= class Tk::BLT::PlotComponent::Legend < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Legend")
(find-rurima "--- current_configinfo(key = nil)" "== Instance Methods" "= class Tk::BLT::PlotComponent::Legend < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Legend")
(find-rurima "--- deactivate(*args)" "== Instance Methods" "= class Tk::BLT::PlotComponent::Legend < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Legend")
(find-rurima "--- get(pos, y = nil)" "== Instance Methods" "= class Tk::BLT::PlotComponent::Legend < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Legend")
(find-rurima "--- id" "== Instance Methods" "= class Tk::BLT::PlotComponent::Legend < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Legend")
(find-rurima "--- to_eval" "== Instance Methods" "= class Tk::BLT::PlotComponent::Legend < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Legend")
(find-rurima "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- __destroy_hook__" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- axis_bind(tag, context, *args)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- axis_bind_append(tag, context, *args)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- axis_bind_remove(tag, context)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- axis_bindinfo(tag, context = nil)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- axis_cget(id, option)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- axis_configinfo(id, slot = nil)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- axis_configure(*args)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- axis_create(id = nil, keys = {})" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- axis_delete(*ids)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- axis_invtransform(id, val)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- axis_limits(id)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- axis_names(*pats)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- axis_transform(id, val)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- axis_use(id, target = nil)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- axis_view(id)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- bar(id = nil, keys = {})" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- bar_activate(*args)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- bar_bind(tag, context, *args)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- bar_bind_append(tag, context, *args)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- bar_bind_remove(tag, context)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- bar_bindinfo(tag, context = nil)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- bar_cget(id, option)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- bar_closest(x, y, var, *args)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- bar_configinfo(id, slot = nil)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- bar_configure(*args)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- bar_create(id = nil, keys = {})" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- bar_deactivate(*ids)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- bar_delete(*ids)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- bar_exist?(id)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- bar_names(*pats)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- bar_show(*names)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- bar_type(id)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- crosshairs_cget(option)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- crosshairs_configinfo(slot = nil)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- crosshairs_configure(slot, value = None)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- crosshairs_off" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- crosshairs_on" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- crosshairs_toggle" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- current_axis_configinfo(id, slot = nil)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- current_bar_configinfo(id, slot = nil)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- current_crosshairs_configinfo(slot = nil)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- current_element_configinfo(id, slot = nil)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- current_gridline_configinfo(slot = nil)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- current_legend_configinfo(slot = nil)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- current_line_configinfo(id, slot = nil)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- current_marker_configinfo(id, slot = nil)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- current_pen_configinfo(id, slot = nil)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- current_postscript_configinfo(slot = nil)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- current_x2axis_configinfo(slot = nil)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- current_xaxis_configinfo(slot = nil)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- current_y2axis_configinfo(slot = nil)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- current_yaxis_configinfo(slot = nil)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- element_activate(*args)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- element_bind(tag, context, *args)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- element_bind_append(tag, context, *args)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- element_bind_remove(tag, context)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- element_bindinfo(tag, context = nil)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- element_cget(id, option)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- element_closest(x, y, var, *args)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- element_configinfo(id, slot = nil)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- element_configure(*args)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- element_create(id = nil, keys = {})" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- element_deactivate(*ids)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- element_delete(*ids)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- element_exist?(id)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- element_names(*pats)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- element_show(*names)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- element_type(id)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- gridline_cget(option)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- gridline_configinfo(slot = nil)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- gridline_configure(slot, value = None)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- gridline_off" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- gridline_on" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- gridline_toggle" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- legend_activate(*pats)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- legend_bind(tag, context, *args)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- legend_bind_append(tag, context, *args)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- legend_bind_remove(tag, context)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- legend_bindinfo(tag, context = nil)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- legend_cget(option)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- legend_configinfo(slot = nil)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- legend_configure(slot, value = None)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- legend_deactivate(*pats)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- legend_get(pos, y = nil)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- legend_window_create(parent = nil, keys = nil)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- line_activate(*args)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- line_bind(tag, context, *args)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- line_bind_append(tag, context, *args)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- line_bind_remove(tag, context)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- line_bindinfo(tag, context = nil)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- line_cget(id, option)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- line_closest(x, y, var, *args)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- line_configinfo(id, slot = nil)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- line_configure(*args)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- line_create(id = nil, keys = {})" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- line_deactivate(*ids)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- line_delete(*ids)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- line_exist?(id)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- line_names(*pats)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- line_show(*names)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- line_type(id)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- marker_after(id, target = nil)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- marker_before(id, target = None)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- marker_bind(tag, context, *args)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- marker_bind_append(tag, context, *args)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- marker_bind_remove(tag, context)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- marker_bindinfo(tag, context = nil)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- marker_cget(id, option)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- marker_configinfo(id, slot = nil)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- marker_configure(*args)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- marker_create(type, keys = {})" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- marker_delete(*ids)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- marker_exist?(id)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- marker_names(*pats)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- marker_type(id)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- pen_cget(id, option)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- pen_configinfo(id, slot = nil)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- pen_configure(*args)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- pen_create(id = nil, keys = {})" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- pen_delete(*ids)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- pen_names(*pats)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- postscript_cget(option)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- postscript_configinfo(slot = nil)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- postscript_configure(slot, value = None)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- postscript_output(file = nil, keys = {})" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- tagid(tag)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- x2axis_bind(context, *args)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- x2axis_bind_append(context, *args)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- x2axis_bind_remove(context)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- x2axis_bindinfo(context = nil)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- x2axis_cget(option)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- x2axis_configinfo(slot = nil)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- x2axis_configure(slot, value = None)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- x2axis_invtransform(val)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- x2axis_limits" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- x2axis_transform(val)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- x2axis_use(target = nil)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- xaxis_bind(context, *args)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- xaxis_bind_append(context, *args)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- xaxis_bind_remove(context)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- xaxis_bindinfo(context = nil)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- xaxis_cget(option)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- xaxis_configinfo(slot = nil)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- xaxis_configure(slot, value = None)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- xaxis_invtransform(val)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- xaxis_limits" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- xaxis_transform(val)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- xaxis_use(target = nil)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- y2axis_bind(context, *args)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- y2axis_bind_append(context, *args)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- y2axis_bind_remove(context)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- y2axis_bindinfo(context = nil)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- y2axis_cget(option)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- y2axis_configinfo(slot = nil)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- y2axis_configure(slot, value = None)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- y2axis_invtransform(val)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- y2axis_limits" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- y2axis_transform(val)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- y2axis_use(target = nil)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- yaxis_bind(context, *args)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- yaxis_bind_append(context, *args)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- yaxis_bind_remove(context)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- yaxis_bindinfo(context = nil)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- yaxis_cget(option)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- yaxis_configinfo(slot = nil)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- yaxis_configure(slot, value = None)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- yaxis_invtransform(val)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- yaxis_limits" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- yaxis_transform(val)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "--- yaxis_use(target = nil)" "== Instance Methods" "= module Tk::BLT::PlotComponent" "refm/api/src/tkextlib/blt/component/PlotComponent")
(find-rurima "= module Tk::BLT::PlotComponent::OptKeys" "refm/api/src/tkextlib/blt/component/PlotComponent__OptKeys")
(find-rurima "= class Tk::BLT::PlotComponent::LineMarker < Tk::BLT::PlotComponent::Marker" "refm/api/src/tkextlib/blt/component/PlotComponent__LineMarker")
(find-rurima "= class Tk::BLT::PlotComponent::GridLine < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__GridLine")
(find-rurima "== Class Methods" "= class Tk::BLT::PlotComponent::GridLine < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__GridLine")
(find-rurima "--- new(chart, keys = {})" "== Class Methods" "= class Tk::BLT::PlotComponent::GridLine < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__GridLine")
(find-rurima "== Instance Methods" "= class Tk::BLT::PlotComponent::GridLine < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__GridLine")
(find-rurima "--- cget(option)" "== Instance Methods" "= class Tk::BLT::PlotComponent::GridLine < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__GridLine")
(find-rurima "--- configinfo(key = nil)" "== Instance Methods" "= class Tk::BLT::PlotComponent::GridLine < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__GridLine")
(find-rurima "--- configure(key, value = None)" "== Instance Methods" "= class Tk::BLT::PlotComponent::GridLine < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__GridLine")
(find-rurima "--- current_configinfo(key = nil)" "== Instance Methods" "= class Tk::BLT::PlotComponent::GridLine < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__GridLine")
(find-rurima "--- id" "== Instance Methods" "= class Tk::BLT::PlotComponent::GridLine < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__GridLine")
(find-rurima "--- off" "== Instance Methods" "= class Tk::BLT::PlotComponent::GridLine < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__GridLine")
(find-rurima "--- on" "== Instance Methods" "= class Tk::BLT::PlotComponent::GridLine < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__GridLine")
(find-rurima "--- to_eval" "== Instance Methods" "= class Tk::BLT::PlotComponent::GridLine < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__GridLine")
(find-rurima "--- toggle" "== Instance Methods" "= class Tk::BLT::PlotComponent::GridLine < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__GridLine")
(find-rurima "= class Tk::BLT::PlotComponent::Axis < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Axis")
(find-rurima "== Class Methods" "= class Tk::BLT::PlotComponent::Axis < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Axis")
(find-rurima "--- id2obj(chart, id)" "== Class Methods" "= class Tk::BLT::PlotComponent::Axis < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Axis")
(find-rurima "--- new(chart, axis = nil, keys = {})" "== Class Methods" "= class Tk::BLT::PlotComponent::Axis < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Axis")
(find-rurima "== Instance Methods" "= class Tk::BLT::PlotComponent::Axis < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Axis")
(find-rurima "--- cget(option)" "== Instance Methods" "= class Tk::BLT::PlotComponent::Axis < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Axis")
(find-rurima "--- command(cmd = nil, &b)" "== Instance Methods" "= class Tk::BLT::PlotComponent::Axis < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Axis")
(find-rurima "--- configinfo(key = nil)" "== Instance Methods" "= class Tk::BLT::PlotComponent::Axis < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Axis")
(find-rurima "--- configure(key, value = None)" "== Instance Methods" "= class Tk::BLT::PlotComponent::Axis < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Axis")
(find-rurima "--- current_configinfo(key = nil)" "== Instance Methods" "= class Tk::BLT::PlotComponent::Axis < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Axis")
(find-rurima "--- delete" "== Instance Methods" "= class Tk::BLT::PlotComponent::Axis < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Axis")
(find-rurima "--- id" "== Instance Methods" "= class Tk::BLT::PlotComponent::Axis < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Axis")
(find-rurima "--- invtransform(val)" "== Instance Methods" "= class Tk::BLT::PlotComponent::Axis < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Axis")
(find-rurima "--- limits" "== Instance Methods" "= class Tk::BLT::PlotComponent::Axis < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Axis")
(find-rurima "--- name" "== Instance Methods" "= class Tk::BLT::PlotComponent::Axis < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Axis")
(find-rurima "--- to_eval" "== Instance Methods" "= class Tk::BLT::PlotComponent::Axis < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Axis")
(find-rurima "--- transform(val)" "== Instance Methods" "= class Tk::BLT::PlotComponent::Axis < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Axis")
(find-rurima "--- use(name = None)" "== Instance Methods" "= class Tk::BLT::PlotComponent::Axis < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Axis")
(find-rurima "--- use_as(axis)" "== Instance Methods" "= class Tk::BLT::PlotComponent::Axis < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Axis")
(find-rurima "--- view" "== Instance Methods" "= class Tk::BLT::PlotComponent::Axis < TkObject" "refm/api/src/tkextlib/blt/component/PlotComponent__Axis")
(find-rurima "= class Tk::BLT::PlotComponent::WindowMarker < Tk::BLT::PlotComponent::Marker" "refm/api/src/tkextlib/blt/component/PlotComponent__WindowMarker")
(find-rurima "= class Tk::BLT::PlotComponent::BitmapMarker < Tk::BLT::PlotComponent::Marker" "refm/api/src/tkextlib/blt/component/PlotComponent__BitmapMarker")
(find-rurima "= class Tk::BLT::PlotComponent::TextMarker < Tk::BLT::PlotComponent::Marker" "refm/api/src/tkextlib/blt/component/PlotComponent__TextMarker")
(find-rurima "= class Tk::BLT::PlotComponent::PolygonMarker < Tk::BLT::PlotComponent::Marker" "refm/api/src/tkextlib/blt/component/PlotComponent__PolygonMarker")
(find-rurima "= class Tk::BLT::Tabnotebook < Tk::BLT::Tabset" "refm/api/src/tkextlib/blt/tabnotebook.rd")
(find-rurima "== Instance Methods" "= class Tk::BLT::Tabnotebook < Tk::BLT::Tabset" "refm/api/src/tkextlib/blt/tabnotebook.rd")
(find-rurima "--- get_id(index)" "== Instance Methods" "= class Tk::BLT::Tabnotebook < Tk::BLT::Tabset" "refm/api/src/tkextlib/blt/tabnotebook.rd")
(find-rurima "--- get_tab(index)" "== Instance Methods" "= class Tk::BLT::Tabnotebook < Tk::BLT::Tabset" "refm/api/src/tkextlib/blt/tabnotebook.rd")
(find-rurima "= module Tk::BLT::GraphCommand" "refm/api/src/tkextlib/blt/GraphCommand")
(find-rurima "== Instance Methods" "= module Tk::BLT::GraphCommand" "refm/api/src/tkextlib/blt/GraphCommand")
(find-rurima "--- active_legend" "== Instance Methods" "= module Tk::BLT::GraphCommand" "refm/api/src/tkextlib/blt/GraphCommand")
(find-rurima "--- closest_point" "== Instance Methods" "= module Tk::BLT::GraphCommand" "refm/api/src/tkextlib/blt/GraphCommand")
(find-rurima "--- crosshairs" "== Instance Methods" "= module Tk::BLT::GraphCommand" "refm/api/src/tkextlib/blt/GraphCommand")
(find-rurima "--- print_key" "== Instance Methods" "= module Tk::BLT::GraphCommand" "refm/api/src/tkextlib/blt/GraphCommand")
(find-rurima "--- zoom_stack" "== Instance Methods" "= module Tk::BLT::GraphCommand" "refm/api/src/tkextlib/blt/GraphCommand")
(find-rurima "= class Tk::BLT::Tree::Node < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Node")
(find-rurima "== Class Methods" "= class Tk::BLT::Tree::Node < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Node")
(find-rurima "--- id2obj(tree, id)" "== Class Methods" "= class Tk::BLT::Tree::Node < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Node")
(find-rurima "--- new(tree, parent, keys = {})" "== Class Methods" "= class Tk::BLT::Tree::Node < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Node")
(find-rurima "== Instance Methods" "= class Tk::BLT::Tree::Node < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Node")
(find-rurima "--- apply(keys = {})" "== Instance Methods" "= class Tk::BLT::Tree::Node < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Node")
(find-rurima "--- children" "== Instance Methods" "= class Tk::BLT::Tree::Node < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Node")
(find-rurima "--- copy(parent, keys = {})" "== Instance Methods" "= class Tk::BLT::Tree::Node < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Node")
(find-rurima "--- copy_to(dest_tree, parent, keys = {})" "== Instance Methods" "= class Tk::BLT::Tree::Node < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Node")
(find-rurima "--- degree" "== Instance Methods" "= class Tk::BLT::Tree::Node < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Node")
(find-rurima "--- delete" "== Instance Methods" "= class Tk::BLT::Tree::Node < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Node")
(find-rurima "--- depth" "== Instance Methods" "= class Tk::BLT::Tree::Node < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Node")
(find-rurima "--- dump" "== Instance Methods" "= class Tk::BLT::Tree::Node < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Node")
(find-rurima "--- dump_to_file(file)" "== Instance Methods" "= class Tk::BLT::Tree::Node < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Node")
(find-rurima "--- exist?(keys = {})" "== Instance Methods" "= class Tk::BLT::Tree::Node < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Node")
(find-rurima "--- find(keys = {})" "== Instance Methods" "= class Tk::BLT::Tree::Node < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Node")
(find-rurima "--- find_child(label)" "== Instance Methods" "= class Tk::BLT::Tree::Node < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Node")
(find-rurima "--- first_child" "== Instance Methods" "= class Tk::BLT::Tree::Node < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Node")
(find-rurima "--- fullpath" "== Instance Methods" "= class Tk::BLT::Tree::Node < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Node")
(find-rurima "--- get" "== Instance Methods" "= class Tk::BLT::Tree::Node < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Node")
(find-rurima "--- get_value(key, default_val = None)" "== Instance Methods" "= class Tk::BLT::Tree::Node < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Node")
(find-rurima "--- id" "== Instance Methods" "= class Tk::BLT::Tree::Node < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Node")
(find-rurima "--- index" "== Instance Methods" "= class Tk::BLT::Tree::Node < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Node")
(find-rurima "--- keys" "== Instance Methods" "= class Tk::BLT::Tree::Node < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Node")
(find-rurima "--- label(text = nil)" "== Instance Methods" "= class Tk::BLT::Tree::Node < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Node")
(find-rurima "--- label=(text)" "== Instance Methods" "= class Tk::BLT::Tree::Node < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Node")
(find-rurima "--- last_child" "== Instance Methods" "= class Tk::BLT::Tree::Node < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Node")
(find-rurima "--- leaf?" "== Instance Methods" "= class Tk::BLT::Tree::Node < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Node")
(find-rurima "--- link?" "== Instance Methods" "= class Tk::BLT::Tree::Node < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Node")
(find-rurima "--- move(dest, keys = {})" "== Instance Methods" "= class Tk::BLT::Tree::Node < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Node")
(find-rurima "--- next" "== Instance Methods" "= class Tk::BLT::Tree::Node < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Node")
(find-rurima "--- next_sibling" "== Instance Methods" "= class Tk::BLT::Tree::Node < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Node")
(find-rurima "--- parent" "== Instance Methods" "= class Tk::BLT::Tree::Node < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Node")
(find-rurima "--- position" "== Instance Methods" "= class Tk::BLT::Tree::Node < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Node")
(find-rurima "--- prev_sibling" "== Instance Methods" "= class Tk::BLT::Tree::Node < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Node")
(find-rurima "--- previous" "== Instance Methods" "= class Tk::BLT::Tree::Node < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Node")
(find-rurima "--- restore(str, keys = {})" "== Instance Methods" "= class Tk::BLT::Tree::Node < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Node")
(find-rurima "--- restore_from_file(file, keys = {})" "== Instance Methods" "= class Tk::BLT::Tree::Node < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Node")
(find-rurima "--- restore_overwrite(str, keys = {})" "== Instance Methods" "= class Tk::BLT::Tree::Node < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Node")
(find-rurima "--- restore_overwrite_from_file(file, keys = {})" "== Instance Methods" "= class Tk::BLT::Tree::Node < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Node")
(find-rurima "--- root" "== Instance Methods" "= class Tk::BLT::Tree::Node < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Node")
(find-rurima "--- root?" "== Instance Methods" "= class Tk::BLT::Tree::Node < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Node")
(find-rurima "--- set(data)" "== Instance Methods" "= class Tk::BLT::Tree::Node < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Node")
(find-rurima "--- size" "== Instance Methods" "= class Tk::BLT::Tree::Node < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Node")
(find-rurima "--- sort(keys = {})" "== Instance Methods" "= class Tk::BLT::Tree::Node < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Node")
(find-rurima "--- type(key)" "== Instance Methods" "= class Tk::BLT::Tree::Node < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Node")
(find-rurima "--- unset(*keys)" "== Instance Methods" "= class Tk::BLT::Tree::Node < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Node")
(find-rurima "--- values(key = None)" "== Instance Methods" "= class Tk::BLT::Tree::Node < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Node")
(find-rurima "= class Tk::BLT::Tree::Trace < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Trace")
(find-rurima "== Class Methods" "= class Tk::BLT::Tree::Trace < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Trace")
(find-rurima "--- id2obj(tree, id)" "== Class Methods" "= class Tk::BLT::Tree::Trace < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Trace")
(find-rurima "--- new(create, tree, node, key, opts, cmd = nil, &b)" "== Class Methods" "= class Tk::BLT::Tree::Trace < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Trace")
(find-rurima "== Instance Methods" "= class Tk::BLT::Tree::Trace < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Trace")
(find-rurima "--- delete" "== Instance Methods" "= class Tk::BLT::Tree::Trace < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Trace")
(find-rurima "--- id" "== Instance Methods" "= class Tk::BLT::Tree::Trace < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Trace")
(find-rurima "--- info" "== Instance Methods" "= class Tk::BLT::Tree::Trace < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Trace")
(find-rurima "= class Tk::BLT::Tree::Tag < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Tag")
(find-rurima "== Class Methods" "= class Tk::BLT::Tree::Tag < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Tag")
(find-rurima "--- id2obj(tree, id)" "== Class Methods" "= class Tk::BLT::Tree::Tag < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Tag")
(find-rurima "--- new(tree, tag_str = nil)" "== Class Methods" "= class Tk::BLT::Tree::Tag < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Tag")
(find-rurima "== Instance Methods" "= class Tk::BLT::Tree::Tag < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Tag")
(find-rurima "--- add(*nodes)" "== Instance Methods" "= class Tk::BLT::Tree::Tag < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Tag")
(find-rurima "--- delete(*nodes)" "== Instance Methods" "= class Tk::BLT::Tree::Tag < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Tag")
(find-rurima "--- forget" "== Instance Methods" "= class Tk::BLT::Tree::Tag < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Tag")
(find-rurima "--- id" "== Instance Methods" "= class Tk::BLT::Tree::Tag < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Tag")
(find-rurima "--- nodes" "== Instance Methods" "= class Tk::BLT::Tree::Tag < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Tag")
(find-rurima "--- set(node)" "== Instance Methods" "= class Tk::BLT::Tree::Tag < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Tag")
(find-rurima "--- unset(node)" "== Instance Methods" "= class Tk::BLT::Tree::Tag < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Tag")
(find-rurima "= class Tk::BLT::Tree::Notify < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Notify")
(find-rurima "== Class Methods" "= class Tk::BLT::Tree::Notify < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Notify")
(find-rurima "--- id2obj(tree, id)" "== Class Methods" "= class Tk::BLT::Tree::Notify < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Notify")
(find-rurima "--- new(create, tree, *args, &b)" "== Class Methods" "= class Tk::BLT::Tree::Notify < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Notify")
(find-rurima "== Instance Methods" "= class Tk::BLT::Tree::Notify < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Notify")
(find-rurima "--- delete" "== Instance Methods" "= class Tk::BLT::Tree::Notify < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Notify")
(find-rurima "--- id" "== Instance Methods" "= class Tk::BLT::Tree::Notify < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Notify")
(find-rurima "--- info" "== Instance Methods" "= class Tk::BLT::Tree::Notify < TkObject" "refm/api/src/tkextlib/blt/tree/Tree__Notify")
(find-rurima "= module Tk::BLT::Ted" "refm/api/src/tkextlib/blt/ted.rd")
(find-rurima "== Singleton Methods" "= module Tk::BLT::Ted" "refm/api/src/tkextlib/blt/ted.rd")
(find-rurima "--- cget(master, option)" "== Singleton Methods" "= module Tk::BLT::Ted" "refm/api/src/tkextlib/blt/ted.rd")
(find-rurima "--- configinfo(master, slot = nil)" "== Singleton Methods" "= module Tk::BLT::Ted" "refm/api/src/tkextlib/blt/ted.rd")
(find-rurima "--- configure(master, slot, value = None)" "== Singleton Methods" "= module Tk::BLT::Ted" "refm/api/src/tkextlib/blt/ted.rd")
(find-rurima "--- current_configinfo(master, slot = nil)" "== Singleton Methods" "= module Tk::BLT::Ted" "refm/api/src/tkextlib/blt/ted.rd")
(find-rurima "--- edit(master, *args)" "== Singleton Methods" "= module Tk::BLT::Ted" "refm/api/src/tkextlib/blt/ted.rd")
(find-rurima "--- rep(master, *args)" "== Singleton Methods" "= module Tk::BLT::Ted" "refm/api/src/tkextlib/blt/ted.rd")
(find-rurima "--- select(master, *args)" "== Singleton Methods" "= module Tk::BLT::Ted" "refm/api/src/tkextlib/blt/ted.rd")
(find-rurima "= class Tk::BLT::Treeview::Node < TkObject" "refm/api/src/tkextlib/blt/treeview/Treeview__Node")
(find-rurima "== Class Methods" "= class Tk::BLT::Treeview::Node < TkObject" "refm/api/src/tkextlib/blt/treeview/Treeview__Node")
(find-rurima "--- id2obj(tree, id)" "== Class Methods" "= class Tk::BLT::Treeview::Node < TkObject" "refm/api/src/tkextlib/blt/treeview/Treeview__Node")
(find-rurima "--- new(tree, pos, parent, keys)" "== Class Methods" "= class Tk::BLT::Treeview::Node < TkObject" "refm/api/src/tkextlib/blt/treeview/Treeview__Node")
(find-rurima "== Instance Methods" "= class Tk::BLT::Treeview::Node < TkObject" "refm/api/src/tkextlib/blt/treeview/Treeview__Node")
(find-rurima "--- id" "== Instance Methods" "= class Tk::BLT::Treeview::Node < TkObject" "refm/api/src/tkextlib/blt/treeview/Treeview__Node")
(find-rurima "= class Tk::BLT::Hiertable < Tk::BLT::Treeview" "refm/api/src/tkextlib/blt/treeview/Hiertable")
(find-rurima "= class Tk::BLT::Treeview::OpenCloseCommand::ValidateArgs < TkUtil::CallbackSubst" "refm/api/src/tkextlib/blt/treeview/Treeview__OpenCloseCommand__ValidateArgs")
(find-rurima "== Class Methods" "= class Tk::BLT::Treeview::OpenCloseCommand::ValidateArgs < TkUtil::CallbackSubst" "refm/api/src/tkextlib/blt/treeview/Treeview__OpenCloseCommand__ValidateArgs")
(find-rurima "--- ret_val(val)" "== Class Methods" "= class Tk::BLT::Treeview::OpenCloseCommand::ValidateArgs < TkUtil::CallbackSubst" "refm/api/src/tkextlib/blt/treeview/Treeview__OpenCloseCommand__ValidateArgs")
(find-rurima "= class Tk::BLT::Treeview::OpenCloseCommand < TkValidateCommand" "refm/api/src/tkextlib/blt/treeview/Treeview__OpenCloseCommand")
(find-rurima "== Class Methods" "= class Tk::BLT::Treeview::OpenCloseCommand < TkValidateCommand" "refm/api/src/tkextlib/blt/treeview/Treeview__OpenCloseCommand")
(find-rurima "--- _config_keys" "== Class Methods" "= class Tk::BLT::Treeview::OpenCloseCommand < TkValidateCommand" "refm/api/src/tkextlib/blt/treeview/Treeview__OpenCloseCommand")
(find-rurima "= module Tk::BLT::Treeview::ConfigMethod" "refm/api/src/tkextlib/blt/treeview/Treeview__ConfigMethod")
(find-rurima "== Instance Methods" "= module Tk::BLT::Treeview::ConfigMethod" "refm/api/src/tkextlib/blt/treeview/Treeview__ConfigMethod")
(find-rurima "--- button_cget(option)" "== Instance Methods" "= module Tk::BLT::Treeview::ConfigMethod" "refm/api/src/tkextlib/blt/treeview/Treeview__ConfigMethod")
(find-rurima "--- button_configinfo(slot = nil)" "== Instance Methods" "= module Tk::BLT::Treeview::ConfigMethod" "refm/api/src/tkextlib/blt/treeview/Treeview__ConfigMethod")
(find-rurima "--- button_configure(slot, value = None)" "== Instance Methods" "= module Tk::BLT::Treeview::ConfigMethod" "refm/api/src/tkextlib/blt/treeview/Treeview__ConfigMethod")
(find-rurima "--- column_cget(name, option)" "== Instance Methods" "= module Tk::BLT::Treeview::ConfigMethod" "refm/api/src/tkextlib/blt/treeview/Treeview__ConfigMethod")
(find-rurima "--- column_configinfo(name, slot = nil)" "== Instance Methods" "= module Tk::BLT::Treeview::ConfigMethod" "refm/api/src/tkextlib/blt/treeview/Treeview__ConfigMethod")
(find-rurima "--- column_configure(name, slot, value = None)" "== Instance Methods" "= module Tk::BLT::Treeview::ConfigMethod" "refm/api/src/tkextlib/blt/treeview/Treeview__ConfigMethod")
(find-rurima "--- current_button_configinfo(slot = nil)" "== Instance Methods" "= module Tk::BLT::Treeview::ConfigMethod" "refm/api/src/tkextlib/blt/treeview/Treeview__ConfigMethod")
(find-rurima "--- current_column_configinfo(name, slot = nil)" "== Instance Methods" "= module Tk::BLT::Treeview::ConfigMethod" "refm/api/src/tkextlib/blt/treeview/Treeview__ConfigMethod")
(find-rurima "--- current_entry_configinfo(slot = nil)" "== Instance Methods" "= module Tk::BLT::Treeview::ConfigMethod" "refm/api/src/tkextlib/blt/treeview/Treeview__ConfigMethod")
(find-rurima "--- current_sort_configinfo(slot = nil)" "== Instance Methods" "= module Tk::BLT::Treeview::ConfigMethod" "refm/api/src/tkextlib/blt/treeview/Treeview__ConfigMethod")
(find-rurima "--- current_text_configinfo(slot = nil)" "== Instance Methods" "= module Tk::BLT::Treeview::ConfigMethod" "refm/api/src/tkextlib/blt/treeview/Treeview__ConfigMethod")
(find-rurima "--- entry_cget(option)" "== Instance Methods" "= module Tk::BLT::Treeview::ConfigMethod" "refm/api/src/tkextlib/blt/treeview/Treeview__ConfigMethod")
(find-rurima "--- entry_configinfo(slot = nil)" "== Instance Methods" "= module Tk::BLT::Treeview::ConfigMethod" "refm/api/src/tkextlib/blt/treeview/Treeview__ConfigMethod")
(find-rurima "--- entry_configure(slot, value = None)" "== Instance Methods" "= module Tk::BLT::Treeview::ConfigMethod" "refm/api/src/tkextlib/blt/treeview/Treeview__ConfigMethod")
(find-rurima "--- sort_cget(option)" "== Instance Methods" "= module Tk::BLT::Treeview::ConfigMethod" "refm/api/src/tkextlib/blt/treeview/Treeview__ConfigMethod")
(find-rurima "--- sort_configinfo(slot = nil)" "== Instance Methods" "= module Tk::BLT::Treeview::ConfigMethod" "refm/api/src/tkextlib/blt/treeview/Treeview__ConfigMethod")
(find-rurima "--- sort_configure(slot, value = None)" "== Instance Methods" "= module Tk::BLT::Treeview::ConfigMethod" "refm/api/src/tkextlib/blt/treeview/Treeview__ConfigMethod")
(find-rurima "--- text_cget(option)" "== Instance Methods" "= module Tk::BLT::Treeview::ConfigMethod" "refm/api/src/tkextlib/blt/treeview/Treeview__ConfigMethod")
(find-rurima "--- text_configinfo(slot = nil)" "== Instance Methods" "= module Tk::BLT::Treeview::ConfigMethod" "refm/api/src/tkextlib/blt/treeview/Treeview__ConfigMethod")
(find-rurima "--- text_configure(slot, value = None)" "== Instance Methods" "= module Tk::BLT::Treeview::ConfigMethod" "refm/api/src/tkextlib/blt/treeview/Treeview__ConfigMethod")
(find-rurima "= class Tk::BLT::Treeview::FindExecFlagValue::ValidateArgs < TkUtil::CallbackSubst" "refm/api/src/tkextlib/blt/treeview/Treeview__FindExecFlagValue__ValidateArgs")
(find-rurima "== Class Methods" "= class Tk::BLT::Treeview::FindExecFlagValue::ValidateArgs < TkUtil::CallbackSubst" "refm/api/src/tkextlib/blt/treeview/Treeview__FindExecFlagValue__ValidateArgs")
(find-rurima "--- ret_val(val)" "== Class Methods" "= class Tk::BLT::Treeview::FindExecFlagValue::ValidateArgs < TkUtil::CallbackSubst" "refm/api/src/tkextlib/blt/treeview/Treeview__FindExecFlagValue__ValidateArgs")
(find-rurima "= class Tk::BLT::Treeview::Tag < TkObject" "refm/api/src/tkextlib/blt/treeview/Treeview__Tag")
(find-rurima "== Class Methods" "= class Tk::BLT::Treeview::Tag < TkObject" "refm/api/src/tkextlib/blt/treeview/Treeview__Tag")
(find-rurima "--- id2obj(tree, id)" "== Class Methods" "= class Tk::BLT::Treeview::Tag < TkObject" "refm/api/src/tkextlib/blt/treeview/Treeview__Tag")
(find-rurima "--- new(tree, *ids)" "== Class Methods" "= class Tk::BLT::Treeview::Tag < TkObject" "refm/api/src/tkextlib/blt/treeview/Treeview__Tag")
(find-rurima "--- new_by_name(tree, name, *ids)" "== Class Methods" "= class Tk::BLT::Treeview::Tag < TkObject" "refm/api/src/tkextlib/blt/treeview/Treeview__Tag")
(find-rurima "== Instance Methods" "= class Tk::BLT::Treeview::Tag < TkObject" "refm/api/src/tkextlib/blt/treeview/Treeview__Tag")
(find-rurima "--- add(*ids)" "== Instance Methods" "= class Tk::BLT::Treeview::Tag < TkObject" "refm/api/src/tkextlib/blt/treeview/Treeview__Tag")
(find-rurima "--- forget" "== Instance Methods" "= class Tk::BLT::Treeview::Tag < TkObject" "refm/api/src/tkextlib/blt/treeview/Treeview__Tag")
(find-rurima "--- id" "== Instance Methods" "= class Tk::BLT::Treeview::Tag < TkObject" "refm/api/src/tkextlib/blt/treeview/Treeview__Tag")
(find-rurima "--- nodes" "== Instance Methods" "= class Tk::BLT::Treeview::Tag < TkObject" "refm/api/src/tkextlib/blt/treeview/Treeview__Tag")
(find-rurima "--- remove(*ids)" "== Instance Methods" "= class Tk::BLT::Treeview::Tag < TkObject" "refm/api/src/tkextlib/blt/treeview/Treeview__Tag")
(find-rurima "= class Tk::BLT::Treeview::FindExecFlagValue < TkValidateCommand" "refm/api/src/tkextlib/blt/treeview/Treeview__FindExecFlagValue")
(find-rurima "== Class Methods" "= class Tk::BLT::Treeview::FindExecFlagValue < TkValidateCommand" "refm/api/src/tkextlib/blt/treeview/Treeview__FindExecFlagValue")
(find-rurima "--- _config_keys" "== Class Methods" "= class Tk::BLT::Treeview::FindExecFlagValue < TkValidateCommand" "refm/api/src/tkextlib/blt/treeview/Treeview__FindExecFlagValue")
(find-rurima "= module Tk::BLT::Treeview::TagOrID_Methods" "refm/api/src/tkextlib/blt/treeview/Treeview__TagOrID_Methods")
(find-rurima "== Instance Methods" "= module Tk::BLT::Treeview::TagOrID_Methods" "refm/api/src/tkextlib/blt/treeview/Treeview__TagOrID_Methods")
(find-rurima "--- bbox" "== Instance Methods" "= module Tk::BLT::Treeview::TagOrID_Methods" "refm/api/src/tkextlib/blt/treeview/Treeview__TagOrID_Methods")
(find-rurima "--- bind(seq, *args)" "== Instance Methods" "= module Tk::BLT::Treeview::TagOrID_Methods" "refm/api/src/tkextlib/blt/treeview/Treeview__TagOrID_Methods")
(find-rurima "--- bind_append(seq, *args)" "== Instance Methods" "= module Tk::BLT::Treeview::TagOrID_Methods" "refm/api/src/tkextlib/blt/treeview/Treeview__TagOrID_Methods")
(find-rurima "--- bind_remove(seq)" "== Instance Methods" "= module Tk::BLT::Treeview::TagOrID_Methods" "refm/api/src/tkextlib/blt/treeview/Treeview__TagOrID_Methods")
(find-rurima "--- bindinfo(seq = nil)" "== Instance Methods" "= module Tk::BLT::Treeview::TagOrID_Methods" "refm/api/src/tkextlib/blt/treeview/Treeview__TagOrID_Methods")
(find-rurima "--- button_activate" "== Instance Methods" "= module Tk::BLT::Treeview::TagOrID_Methods" "refm/api/src/tkextlib/blt/treeview/Treeview__TagOrID_Methods")
(find-rurima "--- button_bind(seq, *args)" "== Instance Methods" "= module Tk::BLT::Treeview::TagOrID_Methods" "refm/api/src/tkextlib/blt/treeview/Treeview__TagOrID_Methods")
(find-rurima "--- button_bind_append(seq, *args)" "== Instance Methods" "= module Tk::BLT::Treeview::TagOrID_Methods" "refm/api/src/tkextlib/blt/treeview/Treeview__TagOrID_Methods")
(find-rurima "--- button_bind_remove(seq)" "== Instance Methods" "= module Tk::BLT::Treeview::TagOrID_Methods" "refm/api/src/tkextlib/blt/treeview/Treeview__TagOrID_Methods")
(find-rurima "--- button_bindinfo(seq = nil)" "== Instance Methods" "= module Tk::BLT::Treeview::TagOrID_Methods" "refm/api/src/tkextlib/blt/treeview/Treeview__TagOrID_Methods")
(find-rurima "--- close" "== Instance Methods" "= module Tk::BLT::Treeview::TagOrID_Methods" "refm/api/src/tkextlib/blt/treeview/Treeview__TagOrID_Methods")
(find-rurima "--- close_recurse" "== Instance Methods" "= module Tk::BLT::Treeview::TagOrID_Methods" "refm/api/src/tkextlib/blt/treeview/Treeview__TagOrID_Methods")
(find-rurima "--- delete" "== Instance Methods" "= module Tk::BLT::Treeview::TagOrID_Methods" "refm/api/src/tkextlib/blt/treeview/Treeview__TagOrID_Methods")
(find-rurima "--- entry_activate" "== Instance Methods" "= module Tk::BLT::Treeview::TagOrID_Methods" "refm/api/src/tkextlib/blt/treeview/Treeview__TagOrID_Methods")
(find-rurima "--- entry_before?(tag)" "== Instance Methods" "= module Tk::BLT::Treeview::TagOrID_Methods" "refm/api/src/tkextlib/blt/treeview/Treeview__TagOrID_Methods")
(find-rurima "--- entry_children(first = None, last = None)" "== Instance Methods" "= module Tk::BLT::Treeview::TagOrID_Methods" "refm/api/src/tkextlib/blt/treeview/Treeview__TagOrID_Methods")
(find-rurima "--- entry_delete(first = None, last = None)" "== Instance Methods" "= module Tk::BLT::Treeview::TagOrID_Methods" "refm/api/src/tkextlib/blt/treeview/Treeview__TagOrID_Methods")
(find-rurima "--- entry_hidden?" "== Instance Methods" "= module Tk::BLT::Treeview::TagOrID_Methods" "refm/api/src/tkextlib/blt/treeview/Treeview__TagOrID_Methods")
(find-rurima "--- entry_open?" "== Instance Methods" "= module Tk::BLT::Treeview::TagOrID_Methods" "refm/api/src/tkextlib/blt/treeview/Treeview__TagOrID_Methods")
(find-rurima "--- entry_size" "== Instance Methods" "= module Tk::BLT::Treeview::TagOrID_Methods" "refm/api/src/tkextlib/blt/treeview/Treeview__TagOrID_Methods")
(find-rurima "--- entry_size_recurse" "== Instance Methods" "= module Tk::BLT::Treeview::TagOrID_Methods" "refm/api/src/tkextlib/blt/treeview/Treeview__TagOrID_Methods")
(find-rurima "--- focus" "== Instance Methods" "= module Tk::BLT::Treeview::TagOrID_Methods" "refm/api/src/tkextlib/blt/treeview/Treeview__TagOrID_Methods")
(find-rurima "--- get" "== Instance Methods" "= module Tk::BLT::Treeview::TagOrID_Methods" "refm/api/src/tkextlib/blt/treeview/Treeview__TagOrID_Methods")
(find-rurima "--- get_full" "== Instance Methods" "= module Tk::BLT::Treeview::TagOrID_Methods" "refm/api/src/tkextlib/blt/treeview/Treeview__TagOrID_Methods")
(find-rurima "--- hide" "== Instance Methods" "= module Tk::BLT::Treeview::TagOrID_Methods" "refm/api/src/tkextlib/blt/treeview/Treeview__TagOrID_Methods")
(find-rurima "--- index(str)" "== Instance Methods" "= module Tk::BLT::Treeview::TagOrID_Methods" "refm/api/src/tkextlib/blt/treeview/Treeview__TagOrID_Methods")
(find-rurima "--- index_path(str)" "== Instance Methods" "= module Tk::BLT::Treeview::TagOrID_Methods" "refm/api/src/tkextlib/blt/treeview/Treeview__TagOrID_Methods")
(find-rurima "--- insert(pos, parent = nil, keys = {})" "== Instance Methods" "= module Tk::BLT::Treeview::TagOrID_Methods" "refm/api/src/tkextlib/blt/treeview/Treeview__TagOrID_Methods")
(find-rurima "--- move_after(dest)" "== Instance Methods" "= module Tk::BLT::Treeview::TagOrID_Methods" "refm/api/src/tkextlib/blt/treeview/Treeview__TagOrID_Methods")
(find-rurima "--- move_before(dest)" "== Instance Methods" "= module Tk::BLT::Treeview::TagOrID_Methods" "refm/api/src/tkextlib/blt/treeview/Treeview__TagOrID_Methods")
(find-rurima "--- move_into(dest)" "== Instance Methods" "= module Tk::BLT::Treeview::TagOrID_Methods" "refm/api/src/tkextlib/blt/treeview/Treeview__TagOrID_Methods")
(find-rurima "--- open" "== Instance Methods" "= module Tk::BLT::Treeview::TagOrID_Methods" "refm/api/src/tkextlib/blt/treeview/Treeview__TagOrID_Methods")
(find-rurima "--- open_recurse" "== Instance Methods" "= module Tk::BLT::Treeview::TagOrID_Methods" "refm/api/src/tkextlib/blt/treeview/Treeview__TagOrID_Methods")
(find-rurima "--- range_open_to(tag)" "== Instance Methods" "= module Tk::BLT::Treeview::TagOrID_Methods" "refm/api/src/tkextlib/blt/treeview/Treeview__TagOrID_Methods")
(find-rurima "--- range_to(tag)" "== Instance Methods" "= module Tk::BLT::Treeview::TagOrID_Methods" "refm/api/src/tkextlib/blt/treeview/Treeview__TagOrID_Methods")
(find-rurima "--- screen_bbox" "== Instance Methods" "= module Tk::BLT::Treeview::TagOrID_Methods" "refm/api/src/tkextlib/blt/treeview/Treeview__TagOrID_Methods")
(find-rurima "--- see" "== Instance Methods" "= module Tk::BLT::Treeview::TagOrID_Methods" "refm/api/src/tkextlib/blt/treeview/Treeview__TagOrID_Methods")
(find-rurima "--- see_anchor(anchor)" "== Instance Methods" "= module Tk::BLT::Treeview::TagOrID_Methods" "refm/api/src/tkextlib/blt/treeview/Treeview__TagOrID_Methods")
(find-rurima "--- selection_anchor" "== Instance Methods" "= module Tk::BLT::Treeview::TagOrID_Methods" "refm/api/src/tkextlib/blt/treeview/Treeview__TagOrID_Methods")
(find-rurima "--- selection_clear" "== Instance Methods" "= module Tk::BLT::Treeview::TagOrID_Methods" "refm/api/src/tkextlib/blt/treeview/Treeview__TagOrID_Methods")
(find-rurima "--- selection_include?" "== Instance Methods" "= module Tk::BLT::Treeview::TagOrID_Methods" "refm/api/src/tkextlib/blt/treeview/Treeview__TagOrID_Methods")
(find-rurima "--- selection_mark" "== Instance Methods" "= module Tk::BLT::Treeview::TagOrID_Methods" "refm/api/src/tkextlib/blt/treeview/Treeview__TagOrID_Methods")
(find-rurima "--- selection_set" "== Instance Methods" "= module Tk::BLT::Treeview::TagOrID_Methods" "refm/api/src/tkextlib/blt/treeview/Treeview__TagOrID_Methods")
(find-rurima "--- selection_toggle" "== Instance Methods" "= module Tk::BLT::Treeview::TagOrID_Methods" "refm/api/src/tkextlib/blt/treeview/Treeview__TagOrID_Methods")
(find-rurima "--- show" "== Instance Methods" "= module Tk::BLT::Treeview::TagOrID_Methods" "refm/api/src/tkextlib/blt/treeview/Treeview__TagOrID_Methods")
(find-rurima "--- sort_once" "== Instance Methods" "= module Tk::BLT::Treeview::TagOrID_Methods" "refm/api/src/tkextlib/blt/treeview/Treeview__TagOrID_Methods")
(find-rurima "--- sort_once_recurse" "== Instance Methods" "= module Tk::BLT::Treeview::TagOrID_Methods" "refm/api/src/tkextlib/blt/treeview/Treeview__TagOrID_Methods")
(find-rurima "--- toggle" "== Instance Methods" "= module Tk::BLT::Treeview::TagOrID_Methods" "refm/api/src/tkextlib/blt/treeview/Treeview__TagOrID_Methods")
(find-rurima "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- __destroy_hook__" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- __item_validation_class_list(id)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- __validation_class_list" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- _find_exec_flag_value(val)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- bbox(*tags)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- button_activate(tag)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- button_bind(tag, seq, *args)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- button_bind_append(tag, seq, *args)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- button_bind_remove(tag, seq)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- button_bindinfo(tag, seq = nil)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- close(*tags)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- close_recurse(*tags)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- column_activate(column = None)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- column_delete(*fields)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- column_insert(pos, field, *opts)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- column_invoke(field)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- column_move(name, dest)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- column_names" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- column_nearest(x, y = None)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- curselection" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- delete(*tags)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- entry_activate(tag)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- entry_before?(tag1, tag2)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- entry_children(tag, first = None, last = None)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- entry_delete(tag, first = None, last = None)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- entry_hidden?(tag)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- entry_open?(tag)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- entry_size(tag)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- entry_size_recurse(tag)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- find(first, last, keys = {})" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- get(*tags)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- get_full(*tags)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- hide(*tags)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- index(str)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- index_at(tag, str)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- index_at_path(tag, str)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- insert(pos, parent = nil, keys = {})" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- insert_at(tag, pos, parent = nil, keys = {})" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- move_after(tag, dest)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- move_before(tag, dest)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- move_into(tag, dest)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- nearest(x, y, var = None)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- open(*tags)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- open_recurse(*tags)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- range(first, last)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- range_open(first, last)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- scan_dragto(x, y)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- scan_mark(x, y)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- screen_bbox(*tags)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- see(tag)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- see_anchor(anchor, tag)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- selection_anchor(tag)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- selection_cancel" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- selection_clear(first, last = None)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- selection_clear_all" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- selection_include?(tag)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- selection_mark(tag)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- selection_present?" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- selection_set(first, last = None)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- selection_toggle(first, last = None)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- show(*tags)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- sort_auto(mode)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- sort_auto=(mode)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- sort_auto?" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- sort_once(*tags)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- sort_once_recurse(*tags)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- tag_add(tag, *ids)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- tag_bind(tag, seq, *args)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- tag_bind_append(tag, seq, *args)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- tag_bind_remove(tag, seq)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- tag_bindinfo(tag, seq = nil)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- tag_delete(tag, *ids)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- tag_focus(tag)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- tag_forget(tag)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- tag_names(id = nil)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- tag_nodes(tag)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- tagid2obj(tagid)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- text_apply" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- text_cancel" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- text_delete(first, last)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- text_get(x, y)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- text_get_root(x, y)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- text_icursor(idx)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- text_index(idx)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- text_insert(idx, str)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- text_selection_adjust(idx)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- text_selection_clear" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- text_selection_from(idx)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- text_selection_present" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- text_selection_range(start, last)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- text_selection_to(idx)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "--- toggle(tag)" "== Instance Methods" "= class Tk::BLT::Treeview < TkWindow" "refm/api/src/tkextlib/blt/treeview.rd")
(find-rurima "= class Tk::BLT::Printer < TkObject" "refm/api/src/tkextlib/blt/win_printer.rd")
(find-rurima "== Class Methods" "= class Tk::BLT::Printer < TkObject" "refm/api/src/tkextlib/blt/win_printer.rd")
(find-rurima "--- enum(attribute)" "== Class Methods" "= class Tk::BLT::Printer < TkObject" "refm/api/src/tkextlib/blt/win_printer.rd")
(find-rurima "--- names(pat = None)" "== Class Methods" "= class Tk::BLT::Printer < TkObject" "refm/api/src/tkextlib/blt/win_printer.rd")
(find-rurima "--- new(printer)" "== Class Methods" "= class Tk::BLT::Printer < TkObject" "refm/api/src/tkextlib/blt/win_printer.rd")
(find-rurima "--- open(printer)" "== Class Methods" "= class Tk::BLT::Printer < TkObject" "refm/api/src/tkextlib/blt/win_printer.rd")
(find-rurima "== Instance Methods" "= class Tk::BLT::Printer < TkObject" "refm/api/src/tkextlib/blt/win_printer.rd")
(find-rurima "--- close" "== Instance Methods" "= class Tk::BLT::Printer < TkObject" "refm/api/src/tkextlib/blt/win_printer.rd")
(find-rurima "--- get_attrs(var)" "== Instance Methods" "= class Tk::BLT::Printer < TkObject" "refm/api/src/tkextlib/blt/win_printer.rd")
(find-rurima "--- set_attrs(var)" "== Instance Methods" "= class Tk::BLT::Printer < TkObject" "refm/api/src/tkextlib/blt/win_printer.rd")
(find-rurima "--- snap(win)" "== Instance Methods" "= class Tk::BLT::Printer < TkObject" "refm/api/src/tkextlib/blt/win_printer.rd")
(find-rurima "--- write(str)" "== Instance Methods" "= class Tk::BLT::Printer < TkObject" "refm/api/src/tkextlib/blt/win_printer.rd")
(find-rurima "--- write_with_title(title, str)" "== Instance Methods" "= class Tk::BLT::Printer < TkObject" "refm/api/src/tkextlib/blt/win_printer.rd")
(find-rurima "= class Tk::BLT::Tile::Toplevel < TkToplevel" "refm/api/src/tkextlib/blt/tile/toplevel.rd")
(find-rurima "= class Tk::BLT::Tile::Label < TkLabel" "refm/api/src/tkextlib/blt/tile/label.rd")
(find-rurima "= class Tk::BLT::Tile::Button < TkButton" "refm/api/src/tkextlib/blt/tile/button.rd")
(find-rurima "= class Tk::BLT::Tile::Frame < TkFrame" "refm/api/src/tkextlib/blt/tile/frame.rd")
(find-rurima "= class Tk::BLT::Tile::Scrollbar < TkScrollbar" "refm/api/src/tkextlib/blt/tile/scrollbar.rd")
(find-rurima "= module Tk::BLT::Table::TableContainer" "refm/api/src/tkextlib/blt/table/Table__TableContainer")
(find-rurima "== Instance Methods" "= module Tk::BLT::Table::TableContainer" "refm/api/src/tkextlib/blt/table/Table__TableContainer")
(find-rurima "--- blt_table_add(*args)" "== Instance Methods" "= module Tk::BLT::Table::TableContainer" "refm/api/src/tkextlib/blt/table/Table__TableContainer")
(find-rurima "--- blt_table_arrange" "== Instance Methods" "= module Tk::BLT::Table::TableContainer" "refm/api/src/tkextlib/blt/table/Table__TableContainer")
(find-rurima "--- blt_table_cget(*args)" "== Instance Methods" "= module Tk::BLT::Table::TableContainer" "refm/api/src/tkextlib/blt/table/Table__TableContainer")
(find-rurima "--- blt_table_configinfo(*args)" "== Instance Methods" "= module Tk::BLT::Table::TableContainer" "refm/api/src/tkextlib/blt/table/Table__TableContainer")
(find-rurima "--- blt_table_configure(*args)" "== Instance Methods" "= module Tk::BLT::Table::TableContainer" "refm/api/src/tkextlib/blt/table/Table__TableContainer")
(find-rurima "--- blt_table_current_configinfo(*args)" "== Instance Methods" "= module Tk::BLT::Table::TableContainer" "refm/api/src/tkextlib/blt/table/Table__TableContainer")
(find-rurima "--- blt_table_current_itemconfiginfo(*args)" "== Instance Methods" "= module Tk::BLT::Table::TableContainer" "refm/api/src/tkextlib/blt/table/Table__TableContainer")
(find-rurima "--- blt_table_delete(*args)" "== Instance Methods" "= module Tk::BLT::Table::TableContainer" "refm/api/src/tkextlib/blt/table/Table__TableContainer")
(find-rurima "--- blt_table_extents(item)" "== Instance Methods" "= module Tk::BLT::Table::TableContainer" "refm/api/src/tkextlib/blt/table/Table__TableContainer")
(find-rurima "--- blt_table_insert(*args)" "== Instance Methods" "= module Tk::BLT::Table::TableContainer" "refm/api/src/tkextlib/blt/table/Table__TableContainer")
(find-rurima "--- blt_table_insert_after(*args)" "== Instance Methods" "= module Tk::BLT::Table::TableContainer" "refm/api/src/tkextlib/blt/table/Table__TableContainer")
(find-rurima "--- blt_table_insert_before(*args)" "== Instance Methods" "= module Tk::BLT::Table::TableContainer" "refm/api/src/tkextlib/blt/table/Table__TableContainer")
(find-rurima "--- blt_table_itemcget(*args)" "== Instance Methods" "= module Tk::BLT::Table::TableContainer" "refm/api/src/tkextlib/blt/table/Table__TableContainer")
(find-rurima "--- blt_table_itemconfiginfo(*args)" "== Instance Methods" "= module Tk::BLT::Table::TableContainer" "refm/api/src/tkextlib/blt/table/Table__TableContainer")
(find-rurima "--- blt_table_itemconfigure(*args)" "== Instance Methods" "= module Tk::BLT::Table::TableContainer" "refm/api/src/tkextlib/blt/table/Table__TableContainer")
(find-rurima "--- blt_table_iteminfo(item)" "== Instance Methods" "= module Tk::BLT::Table::TableContainer" "refm/api/src/tkextlib/blt/table/Table__TableContainer")
(find-rurima "--- blt_table_join(first, last)" "== Instance Methods" "= module Tk::BLT::Table::TableContainer" "refm/api/src/tkextlib/blt/table/Table__TableContainer")
(find-rurima "--- blt_table_locate(x, y)" "== Instance Methods" "= module Tk::BLT::Table::TableContainer" "refm/api/src/tkextlib/blt/table/Table__TableContainer")
(find-rurima "--- blt_table_save" "== Instance Methods" "= module Tk::BLT::Table::TableContainer" "refm/api/src/tkextlib/blt/table/Table__TableContainer")
(find-rurima "--- blt_table_search(*args)" "== Instance Methods" "= module Tk::BLT::Table::TableContainer" "refm/api/src/tkextlib/blt/table/Table__TableContainer")
(find-rurima "--- blt_table_split(*args)" "== Instance Methods" "= module Tk::BLT::Table::TableContainer" "refm/api/src/tkextlib/blt/table/Table__TableContainer")
(find-rurima "= module Tk::BLT::Winop" "refm/api/src/tkextlib/blt/winop.rd")
(find-rurima "== Singleton Methods" "= module Tk::BLT::Winop" "refm/api/src/tkextlib/blt/winop.rd")
(find-rurima "--- changes(win)" "== Singleton Methods" "= module Tk::BLT::Winop" "refm/api/src/tkextlib/blt/winop.rd")
(find-rurima "--- colormap(win)" "== Singleton Methods" "= module Tk::BLT::Winop" "refm/api/src/tkextlib/blt/winop.rd")
(find-rurima "--- convolve(src, dest, filter)" "== Singleton Methods" "= module Tk::BLT::Winop" "refm/api/src/tkextlib/blt/winop.rd")
(find-rurima "--- image_convolve(src, dest, filter)" "== Singleton Methods" "= module Tk::BLT::Winop" "refm/api/src/tkextlib/blt/winop.rd")
(find-rurima "--- image_gradient(photo, left, right, type)" "== Singleton Methods" "= module Tk::BLT::Winop" "refm/api/src/tkextlib/blt/winop.rd")
(find-rurima "--- image_read_jpeg(file, photo)" "== Singleton Methods" "= module Tk::BLT::Winop" "refm/api/src/tkextlib/blt/winop.rd")
(find-rurima "--- image_resample(src, dest, horiz_filter = None, vert_filter = None)" "== Singleton Methods" "= module Tk::BLT::Winop" "refm/api/src/tkextlib/blt/winop.rd")
(find-rurima "--- image_rotate(src, dest, angle)" "== Singleton Methods" "= module Tk::BLT::Winop" "refm/api/src/tkextlib/blt/winop.rd")
(find-rurima "--- image_snap(win, photo, width = None, height = None)" "== Singleton Methods" "= module Tk::BLT::Winop" "refm/api/src/tkextlib/blt/winop.rd")
(find-rurima "--- image_subsample(src, dest, x, y, width, height, horiz_filter = None, vert_filter = None)" "== Singleton Methods" "= module Tk::BLT::Winop" "refm/api/src/tkextlib/blt/winop.rd")
(find-rurima "--- lower(*wins)" "== Singleton Methods" "= module Tk::BLT::Winop" "refm/api/src/tkextlib/blt/winop.rd")
(find-rurima "--- map(*wins)" "== Singleton Methods" "= module Tk::BLT::Winop" "refm/api/src/tkextlib/blt/winop.rd")
(find-rurima "--- move(win, x, y)" "== Singleton Methods" "= module Tk::BLT::Winop" "refm/api/src/tkextlib/blt/winop.rd")
(find-rurima "--- quantize(src, dest, colors)" "== Singleton Methods" "= module Tk::BLT::Winop" "refm/api/src/tkextlib/blt/winop.rd")
(find-rurima "--- query" "== Singleton Methods" "= module Tk::BLT::Winop" "refm/api/src/tkextlib/blt/winop.rd")
(find-rurima "--- raise(*wins)" "== Singleton Methods" "= module Tk::BLT::Winop" "refm/api/src/tkextlib/blt/winop.rd")
(find-rurima "--- read_jpeg(file, photo)" "== Singleton Methods" "= module Tk::BLT::Winop" "refm/api/src/tkextlib/blt/winop.rd")
(find-rurima "--- resample(src, dest, horiz_filter = None, vert_filter = None)" "== Singleton Methods" "= module Tk::BLT::Winop" "refm/api/src/tkextlib/blt/winop.rd")
(find-rurima "--- snap(win, photo)" "== Singleton Methods" "= module Tk::BLT::Winop" "refm/api/src/tkextlib/blt/winop.rd")
(find-rurima "--- subsample(src, dest, x, y, width, height, horiz_filter = None, vert_filter = None)" "== Singleton Methods" "= module Tk::BLT::Winop" "refm/api/src/tkextlib/blt/winop.rd")
(find-rurima "--- unmap(*wins)" "== Singleton Methods" "= module Tk::BLT::Winop" "refm/api/src/tkextlib/blt/winop.rd")
(find-rurima "--- warpto(win = None)" "== Singleton Methods" "= module Tk::BLT::Winop" "refm/api/src/tkextlib/blt/winop.rd")
(find-rurima "= module Tk::BLT::DnD" "refm/api/src/tkextlib/blt/unix_dnd.rd")
(find-rurima "== Singleton Methods" "= module Tk::BLT::DnD" "refm/api/src/tkextlib/blt/unix_dnd.rd")
(find-rurima "--- cancel(win)" "== Singleton Methods" "= module Tk::BLT::DnD" "refm/api/src/tkextlib/blt/unix_dnd.rd")
(find-rurima "--- cget(win, option)" "== Singleton Methods" "= module Tk::BLT::DnD" "refm/api/src/tkextlib/blt/unix_dnd.rd")
(find-rurima "--- configinfo(win, slot = nil)" "== Singleton Methods" "= module Tk::BLT::DnD" "refm/api/src/tkextlib/blt/unix_dnd.rd")
(find-rurima "--- configure(win, slot, value = None)" "== Singleton Methods" "= module Tk::BLT::DnD" "refm/api/src/tkextlib/blt/unix_dnd.rd")
(find-rurima "--- current_configinfo(win, slot = nil)" "== Singleton Methods" "= module Tk::BLT::DnD" "refm/api/src/tkextlib/blt/unix_dnd.rd")
(find-rurima "--- current_token_configinfo(win, slot = nil)" "== Singleton Methods" "= module Tk::BLT::DnD" "refm/api/src/tkextlib/blt/unix_dnd.rd")
(find-rurima "--- current_token_windowconfiginfo(win, slot = nil)" "== Singleton Methods" "= module Tk::BLT::DnD" "refm/api/src/tkextlib/blt/unix_dnd.rd")
(find-rurima "--- delete(*wins)" "== Singleton Methods" "= module Tk::BLT::DnD" "refm/api/src/tkextlib/blt/unix_dnd.rd")
(find-rurima "--- delete_source(*wins)" "== Singleton Methods" "= module Tk::BLT::DnD" "refm/api/src/tkextlib/blt/unix_dnd.rd")
(find-rurima "--- delete_target(*wins)" "== Singleton Methods" "= module Tk::BLT::DnD" "refm/api/src/tkextlib/blt/unix_dnd.rd")
(find-rurima "--- drag(win, x, y, token = None)" "== Singleton Methods" "= module Tk::BLT::DnD" "refm/api/src/tkextlib/blt/unix_dnd.rd")
(find-rurima "--- drop(win, x, y, token = None)" "== Singleton Methods" "= module Tk::BLT::DnD" "refm/api/src/tkextlib/blt/unix_dnd.rd")
(find-rurima "--- get_data(win, fmt = nil, cmd = nil)" "== Singleton Methods" "= module Tk::BLT::DnD" "refm/api/src/tkextlib/blt/unix_dnd.rd")
(find-rurima "--- names(pat = None)" "== Singleton Methods" "= module Tk::BLT::DnD" "refm/api/src/tkextlib/blt/unix_dnd.rd")
(find-rurima "--- pull(win, fmt)" "== Singleton Methods" "= module Tk::BLT::DnD" "refm/api/src/tkextlib/blt/unix_dnd.rd")
(find-rurima "--- register(win, keys = {})" "== Singleton Methods" "= module Tk::BLT::DnD" "refm/api/src/tkextlib/blt/unix_dnd.rd")
(find-rurima "--- select(win, x, y, timestamp)" "== Singleton Methods" "= module Tk::BLT::DnD" "refm/api/src/tkextlib/blt/unix_dnd.rd")
(find-rurima "--- set_data(win, fmt = nil, cmd = nil)" "== Singleton Methods" "= module Tk::BLT::DnD" "refm/api/src/tkextlib/blt/unix_dnd.rd")
(find-rurima "--- source_names(pat = None)" "== Singleton Methods" "= module Tk::BLT::DnD" "refm/api/src/tkextlib/blt/unix_dnd.rd")
(find-rurima "--- target_names(pat = None)" "== Singleton Methods" "= module Tk::BLT::DnD" "refm/api/src/tkextlib/blt/unix_dnd.rd")
(find-rurima "--- token(*args)" "== Singleton Methods" "= module Tk::BLT::DnD" "refm/api/src/tkextlib/blt/unix_dnd.rd")
(find-rurima "--- token_configinfo(win, slot = nil)" "== Singleton Methods" "= module Tk::BLT::DnD" "refm/api/src/tkextlib/blt/unix_dnd.rd")
(find-rurima "--- token_configure(win, slot, value = None)" "== Singleton Methods" "= module Tk::BLT::DnD" "refm/api/src/tkextlib/blt/unix_dnd.rd")
(find-rurima "--- token_windowconfiginfo(win, slot = nil)" "== Singleton Methods" "= module Tk::BLT::DnD" "refm/api/src/tkextlib/blt/unix_dnd.rd")
(find-rurima "--- token_windowconfigure(win, slot, value = None)" "== Singleton Methods" "= module Tk::BLT::DnD" "refm/api/src/tkextlib/blt/unix_dnd.rd")
(find-rurima "--- tokwn_cget(win, option)" "== Singleton Methods" "= module Tk::BLT::DnD" "refm/api/src/tkextlib/blt/unix_dnd.rd")
(find-rurima "= module Tk::BLT::CutBuffer" "refm/api/src/tkextlib/blt/cutbuffer.rd")
(find-rurima "== Singleton Methods" "= module Tk::BLT::CutBuffer" "refm/api/src/tkextlib/blt/cutbuffer.rd")
(find-rurima "--- get(num = 0)" "== Singleton Methods" "= module Tk::BLT::CutBuffer" "refm/api/src/tkextlib/blt/cutbuffer.rd")
(find-rurima "--- rotate(count = 1)" "== Singleton Methods" "= module Tk::BLT::CutBuffer" "refm/api/src/tkextlib/blt/cutbuffer.rd")
(find-rurima "--- set(val, num = 0)" "== Singleton Methods" "= module Tk::BLT::CutBuffer" "refm/api/src/tkextlib/blt/cutbuffer.rd")
(find-rurima "= class Tk::BLT::Tabset < TkWindow" "refm/api/src/tkextlib/blt/tabset.rd")
(find-rurima "== Instance Methods" "= class Tk::BLT::Tabset < TkWindow" "refm/api/src/tkextlib/blt/tabset.rd")
(find-rurima "--- __boolval_optkeys" "== Instance Methods" "= class Tk::BLT::Tabset < TkWindow" "refm/api/src/tkextlib/blt/tabset.rd")
(find-rurima "--- __destroy_hook__" "== Instance Methods" "= class Tk::BLT::Tabset < TkWindow" "refm/api/src/tkextlib/blt/tabset.rd")
(find-rurima "--- activate(index)" "== Instance Methods" "= class Tk::BLT::Tabset < TkWindow" "refm/api/src/tkextlib/blt/tabset.rd")
(find-rurima "--- delete(first, last = None)" "== Instance Methods" "= class Tk::BLT::Tabset < TkWindow" "refm/api/src/tkextlib/blt/tabset.rd")
(find-rurima "--- focus(index)" "== Instance Methods" "= class Tk::BLT::Tabset < TkWindow" "refm/api/src/tkextlib/blt/tabset.rd")
(find-rurima "--- get_tab(index)" "== Instance Methods" "= class Tk::BLT::Tabset < TkWindow" "refm/api/src/tkextlib/blt/tabset.rd")
(find-rurima "--- highlight(index)" "== Instance Methods" "= class Tk::BLT::Tabset < TkWindow" "refm/api/src/tkextlib/blt/tabset.rd")
(find-rurima "--- index(str)" "== Instance Methods" "= class Tk::BLT::Tabset < TkWindow" "refm/api/src/tkextlib/blt/tabset.rd")
(find-rurima "--- index_name(tab)" "== Instance Methods" "= class Tk::BLT::Tabset < TkWindow" "refm/api/src/tkextlib/blt/tabset.rd")
(find-rurima "--- insert(pos, tab, keys = {})" "== Instance Methods" "= class Tk::BLT::Tabset < TkWindow" "refm/api/src/tkextlib/blt/tabset.rd")
(find-rurima "--- invoke(index)" "== Instance Methods" "= class Tk::BLT::Tabset < TkWindow" "refm/api/src/tkextlib/blt/tabset.rd")
(find-rurima "--- move_after(index, base_idx)" "== Instance Methods" "= class Tk::BLT::Tabset < TkWindow" "refm/api/src/tkextlib/blt/tabset.rd")
(find-rurima "--- move_before(index, base_idx)" "== Instance Methods" "= class Tk::BLT::Tabset < TkWindow" "refm/api/src/tkextlib/blt/tabset.rd")
(find-rurima "--- nearest(x, y)" "== Instance Methods" "= class Tk::BLT::Tabset < TkWindow" "refm/api/src/tkextlib/blt/tabset.rd")
(find-rurima "--- perforation_highlight(index, mode)" "== Instance Methods" "= class Tk::BLT::Tabset < TkWindow" "refm/api/src/tkextlib/blt/tabset.rd")
(find-rurima "--- perforation_invoke(index)" "== Instance Methods" "= class Tk::BLT::Tabset < TkWindow" "refm/api/src/tkextlib/blt/tabset.rd")
(find-rurima "--- scan_dragto(x, y)" "== Instance Methods" "= class Tk::BLT::Tabset < TkWindow" "refm/api/src/tkextlib/blt/tabset.rd")
(find-rurima "--- scan_mark(x, y)" "== Instance Methods" "= class Tk::BLT::Tabset < TkWindow" "refm/api/src/tkextlib/blt/tabset.rd")
(find-rurima "--- scrollcommand(cmd = Proc.new)" "== Instance Methods" "= class Tk::BLT::Tabset < TkWindow" "refm/api/src/tkextlib/blt/tabset.rd")
(find-rurima "--- see(index)" "== Instance Methods" "= class Tk::BLT::Tabset < TkWindow" "refm/api/src/tkextlib/blt/tabset.rd")
(find-rurima "--- select(index)" "== Instance Methods" "= class Tk::BLT::Tabset < TkWindow" "refm/api/src/tkextlib/blt/tabset.rd")
(find-rurima "--- size" "== Instance Methods" "= class Tk::BLT::Tabset < TkWindow" "refm/api/src/tkextlib/blt/tabset.rd")
(find-rurima "--- tab_names(pat = None)" "== Instance Methods" "= class Tk::BLT::Tabset < TkWindow" "refm/api/src/tkextlib/blt/tabset.rd")
(find-rurima "--- tab_tearoff(index, name = None)" "== Instance Methods" "= class Tk::BLT::Tabset < TkWindow" "refm/api/src/tkextlib/blt/tabset.rd")
(find-rurima "--- tabbind(tag, context, *args)" "== Instance Methods" "= class Tk::BLT::Tabset < TkWindow" "refm/api/src/tkextlib/blt/tabset.rd")
(find-rurima "--- tabbind_append(tag, context, *args)" "== Instance Methods" "= class Tk::BLT::Tabset < TkWindow" "refm/api/src/tkextlib/blt/tabset.rd")
(find-rurima "--- tabbind_remove(tag, context)" "== Instance Methods" "= class Tk::BLT::Tabset < TkWindow" "refm/api/src/tkextlib/blt/tabset.rd")
(find-rurima "--- tabbindinfo(tag, context = nil)" "== Instance Methods" "= class Tk::BLT::Tabset < TkWindow" "refm/api/src/tkextlib/blt/tabset.rd")
(find-rurima "--- tagid(tab)" "== Instance Methods" "= class Tk::BLT::Tabset < TkWindow" "refm/api/src/tkextlib/blt/tabset.rd")
(find-rurima "--- tagindex(tab)" "== Instance Methods" "= class Tk::BLT::Tabset < TkWindow" "refm/api/src/tkextlib/blt/tabset.rd")
(find-rurima "--- view(*index)" "== Instance Methods" "= class Tk::BLT::Tabset < TkWindow" "refm/api/src/tkextlib/blt/tabset.rd")
(find-rurima "--- xscrollcommand(cmd = Proc.new)" "== Instance Methods" "= class Tk::BLT::Tabset < TkWindow" "refm/api/src/tkextlib/blt/tabset.rd")
(find-rurima "--- xview(*index)" "== Instance Methods" "= class Tk::BLT::Tabset < TkWindow" "refm/api/src/tkextlib/blt/tabset.rd")
(find-rurima "= class Tk::TkDND::DND_Subst < TkUtil::CallbackSubst" "refm/api/src/tkextlib/tkDND/DND_Subst")
(find-rurima "= Module Tk::TkDND" "refm/api/src/tkextlib/tkDND/tkdnd.rd")
(find-rurima "== Class Methods" "= Module Tk::TkDND" "refm/api/src/tkextlib/tkDND/tkdnd.rd")
(find-rurima "--- package_version" "== Class Methods" "= Module Tk::TkDND" "refm/api/src/tkextlib/tkDND/tkdnd.rd")
(find-rurima "--- package_name" "== Class Methods" "= Module Tk::TkDND" "refm/api/src/tkextlib/tkDND/tkdnd.rd")
(find-rurima "= reopen TkWindow" "refm/api/src/tkextlib/tkDND/tkdnd.rd")
(find-rurima "= Module Tk::TkDND::Shape" "refm/api/src/tkextlib/tkDND/shape.rd")
(find-rurima "== Class Methods" "= Module Tk::TkDND::Shape" "refm/api/src/tkextlib/tkDND/shape.rd")
(find-rurima "--- package_version" "== Class Methods" "= Module Tk::TkDND::Shape" "refm/api/src/tkextlib/tkDND/shape.rd")
(find-rurima "--- package_patchlevel" "== Class Methods" "= Module Tk::TkDND::Shape" "refm/api/src/tkextlib/tkDND/shape.rd")
(find-rurima "--- version" "== Class Methods" "= Module Tk::TkDND::Shape" "refm/api/src/tkextlib/tkDND/shape.rd")
(find-rurima "== Instance Methods" "= Module Tk::TkDND::Shape" "refm/api/src/tkextlib/tkDND/shape.rd")
(find-rurima "--- shape_bounds(kind = nil)" "== Instance Methods" "= Module Tk::TkDND::Shape" "refm/api/src/tkextlib/tkDND/shape.rd")
(find-rurima "--- shape_get(kind = nil)" "== Instance Methods" "= Module Tk::TkDND::Shape" "refm/api/src/tkextlib/tkDND/shape.rd")
(find-rurima "--- shape_offset(x, y, kind = nil)" "== Instance Methods" "= Module Tk::TkDND::Shape" "refm/api/src/tkextlib/tkDND/shape.rd")
(find-rurima "--- shape_set(*args)" "== Instance Methods" "= Module Tk::TkDND::Shape" "refm/api/src/tkextlib/tkDND/shape.rd")
(find-rurima "--- shape_update(op, *args)" "== Instance Methods" "= Module Tk::TkDND::Shape" "refm/api/src/tkextlib/tkDND/shape.rd")
(find-rurima "= reopen TkWindow" "refm/api/src/tkextlib/tkDND/shape.rd")
(find-rurima "= module Tk::TkDND::DND" "refm/api/src/tkextlib/tkDND/DND")
(find-rurima "== Singleton Methods" "= module Tk::TkDND::DND" "refm/api/src/tkextlib/tkDND/DND")
(find-rurima "--- version" "== Singleton Methods" "= module Tk::TkDND::DND" "refm/api/src/tkextlib/tkDND/DND")
(find-rurima "== Instance Methods" "= module Tk::TkDND::DND" "refm/api/src/tkextlib/tkDND/DND")
(find-rurima "--- dnd_bindtarget_info(type = nil, event = nil)" "== Instance Methods" "= module Tk::TkDND::DND" "refm/api/src/tkextlib/tkDND/DND")
(find-rurima "--- dnd_bindtarget(type, event, *args)" "== Instance Methods" "= module Tk::TkDND::DND" "refm/api/src/tkextlib/tkDND/DND")
(find-rurima "--- dnd_cleartarget" "== Instance Methods" "= module Tk::TkDND::DND" "refm/api/src/tkextlib/tkDND/DND")
(find-rurima "--- dnd_bindsource_info(type = nil)" "== Instance Methods" "= module Tk::TkDND::DND" "refm/api/src/tkextlib/tkDND/DND")
(find-rurima "--- dnd_bindsource(type, *args)" "== Instance Methods" "= module Tk::TkDND::DND" "refm/api/src/tkextlib/tkDND/DND")
(find-rurima "--- dnd_clearsource" "== Instance Methods" "= module Tk::TkDND::DND" "refm/api/src/tkextlib/tkDND/DND")
(find-rurima "--- dnd_drag(keys = nil)" "== Instance Methods" "= module Tk::TkDND::DND" "refm/api/src/tkextlib/tkDND/DND")
(find-rurima "=== 使用例" "refm/api/src/kconv.rd")
(find-rurima "= reopen String" "refm/api/src/kconv.rd")
(find-rurima "== Instance Methods" "= reopen String" "refm/api/src/kconv.rd")
(find-rurima "--- kconv(out_code, in_code = Kconv::AUTO) -> String" "== Instance Methods" "= reopen String" "refm/api/src/kconv.rd")
(find-rurima "--- tojis -> String" "== Instance Methods" "= reopen String" "refm/api/src/kconv.rd")
(find-rurima "--- toeuc -> String" "== Instance Methods" "= reopen String" "refm/api/src/kconv.rd")
(find-rurima "--- tosjis -> String" "== Instance Methods" "= reopen String" "refm/api/src/kconv.rd")
(find-rurima "--- toutf8 -> String" "== Instance Methods" "= reopen String" "refm/api/src/kconv.rd")
(find-rurima "--- toutf16 -> String" "== Instance Methods" "= reopen String" "refm/api/src/kconv.rd")
(find-rurima "--- toutf32 -> String" "== Instance Methods" "= reopen String" "refm/api/src/kconv.rd")
(find-rurima "--- tolocale -> String" "== Instance Methods" "= reopen String" "refm/api/src/kconv.rd")
(find-rurima "--- iseuc -> bool" "== Instance Methods" "= reopen String" "refm/api/src/kconv.rd")
(find-rurima "--- issjis -> bool" "== Instance Methods" "= reopen String" "refm/api/src/kconv.rd")
(find-rurima "--- isutf8 -> bool" "== Instance Methods" "= reopen String" "refm/api/src/kconv.rd")
(find-rurima "--- isjis -> bool" "== Instance Methods" "= reopen String" "refm/api/src/kconv.rd")
(find-rurima "= module Kconv" "refm/api/src/kconv.rd")
(find-rurima "== Module Functions" "= module Kconv" "refm/api/src/kconv.rd")
(find-rurima "--- kconv(str, out_code, in_code = Kconv::AUTO) -> String" "== Module Functions" "= module Kconv" "refm/api/src/kconv.rd")
(find-rurima "--- tojis(str) -> String" "== Module Functions" "= module Kconv" "refm/api/src/kconv.rd")
(find-rurima "--- toeuc(str) -> String" "== Module Functions" "= module Kconv" "refm/api/src/kconv.rd")
(find-rurima "--- tosjis(str) -> String" "== Module Functions" "= module Kconv" "refm/api/src/kconv.rd")
(find-rurima "--- guess(str) -> Integer" "== Module Functions" "= module Kconv" "refm/api/src/kconv.rd")
(find-rurima "--- guess(str) -> Encoding | nil" "== Module Functions" "= module Kconv" "refm/api/src/kconv.rd")
(find-rurima "--- guess_old(str) -> Integer" "== Module Functions" "= module Kconv" "refm/api/src/kconv.rd")
(find-rurima "--- toutf8(str) -> String" "== Module Functions" "= module Kconv" "refm/api/src/kconv.rd")
(find-rurima "--- toutf16(str) -> String" "== Module Functions" "= module Kconv" "refm/api/src/kconv.rd")
(find-rurima "--- toutf32(str)" "== Module Functions" "= module Kconv" "refm/api/src/kconv.rd")
(find-rurima "--- tolocale(str)" "== Module Functions" "= module Kconv" "refm/api/src/kconv.rd")
(find-rurima "--- iseuc(str) -> bool" "== Module Functions" "= module Kconv" "refm/api/src/kconv.rd")
(find-rurima "--- issjis(str) -> bool" "== Module Functions" "= module Kconv" "refm/api/src/kconv.rd")
(find-rurima "--- isutf8(str) -> bool" "== Module Functions" "= module Kconv" "refm/api/src/kconv.rd")
(find-rurima "--- isjis(str) -> bool" "== Module Functions" "= module Kconv" "refm/api/src/kconv.rd")
(find-rurima "== Constants" "= module Kconv" "refm/api/src/kconv.rd")
(find-rurima "--- AUTO -> Integer" "== Constants" "= module Kconv" "refm/api/src/kconv.rd")
(find-rurima "--- AUTO -> nil" "== Constants" "= module Kconv" "refm/api/src/kconv.rd")
(find-rurima "--- JIS -> Integer" "== Constants" "= module Kconv" "refm/api/src/kconv.rd")
(find-rurima "--- JIS -> Encoding" "== Constants" "= module Kconv" "refm/api/src/kconv.rd")
(find-rurima "--- EUC -> Integer" "== Constants" "= module Kconv" "refm/api/src/kconv.rd")
(find-rurima "--- EUC -> Encoding" "== Constants" "= module Kconv" "refm/api/src/kconv.rd")
(find-rurima "--- SJIS -> Integer" "== Constants" "= module Kconv" "refm/api/src/kconv.rd")
(find-rurima "--- SJIS -> Encoding" "== Constants" "= module Kconv" "refm/api/src/kconv.rd")
(find-rurima "--- BINARY -> Integer" "== Constants" "= module Kconv" "refm/api/src/kconv.rd")
(find-rurima "--- BINARY -> Encoding" "== Constants" "= module Kconv" "refm/api/src/kconv.rd")
(find-rurima "--- UNKNOWN -> Integer" "== Constants" "= module Kconv" "refm/api/src/kconv.rd")
(find-rurima "--- UNKNOWN -> nil" "== Constants" "= module Kconv" "refm/api/src/kconv.rd")
(find-rurima "--- NOCONV -> Integer" "== Constants" "= module Kconv" "refm/api/src/kconv.rd")
(find-rurima "--- NOCONV -> nil" "== Constants" "= module Kconv" "refm/api/src/kconv.rd")
(find-rurima "--- ASCII -> Integer" "== Constants" "= module Kconv" "refm/api/src/kconv.rd")
(find-rurima "--- ASCII -> Encoding" "== Constants" "= module Kconv" "refm/api/src/kconv.rd")
(find-rurima "--- UTF8 -> Integer" "== Constants" "= module Kconv" "refm/api/src/kconv.rd")
(find-rurima "--- UTF8 -> Encoding" "== Constants" "= module Kconv" "refm/api/src/kconv.rd")
(find-rurima "--- UTF16 -> Integer" "== Constants" "= module Kconv" "refm/api/src/kconv.rd")
(find-rurima "--- UTF16 -> Encoding" "== Constants" "= module Kconv" "refm/api/src/kconv.rd")
(find-rurima "--- UTF32 -> Integer" "== Constants" "= module Kconv" "refm/api/src/kconv.rd")
(find-rurima "--- UTF32 -> Encoding" "== Constants" "= module Kconv" "refm/api/src/kconv.rd")
(find-rurima "--- RegexpShiftjis -> Regexp" "== Constants" "= module Kconv" "refm/api/src/kconv.rd")
(find-rurima "--- RegexpEucjp -> Regexp" "== Constants" "= module Kconv" "refm/api/src/kconv.rd")
(find-rurima "--- RegexpUtf8 -> Regexp" "== Constants" "= module Kconv" "refm/api/src/kconv.rd")
(find-rurima "--- REVISION -> String" "== Constants" "= module Kconv" "refm/api/src/kconv.rd")
(find-rurima "--- Iconv_EUC_JP -> Regexp" "== Constants" "= module Kconv" "refm/api/src/kconv.rd")
(find-rurima "--- Iconv_Shift_JIS -> Regexp" "== Constants" "= module Kconv" "refm/api/src/kconv.rd")
(find-rurima "--- Iconv_UTF8 -> Regexp" "== Constants" "= module Kconv" "refm/api/src/kconv.rd")
(find-rurima "=== GNU getopt_long() とは?" "refm/api/src/getoptlong.rd")
(find-rurima "=== 順序形式 (ordering)" "refm/api/src/getoptlong.rd")
(find-rurima "=== POSIXLY_CORRECT" "refm/api/src/getoptlong.rd")
(find-rurima "=== 使い方" "refm/api/src/getoptlong.rd")
(find-rurima "=== 順序形式の設定" "refm/api/src/getoptlong.rd")
(find-rurima "=== エラー" "refm/api/src/getoptlong.rd")
(find-rurima "=== 静粛フラグ" "refm/api/src/getoptlong.rd")
(find-rurima "= class GetoptLong < Object" "refm/api/src/getoptlong.rd")
(find-rurima "== Class Methods" "= class GetoptLong < Object" "refm/api/src/getoptlong.rd")
(find-rurima "--- new(*arguments)" "== Class Methods" "= class GetoptLong < Object" "refm/api/src/getoptlong.rd")
(find-rurima "== Instance Methods" "= class GetoptLong < Object" "refm/api/src/getoptlong.rd")
(find-rurima "--- each {|optname, optarg|...}" "== Instance Methods" "= class GetoptLong < Object" "refm/api/src/getoptlong.rd")
(find-rurima "--- each_option {|optname, optarg|...}" "== Instance Methods" "= class GetoptLong < Object" "refm/api/src/getoptlong.rd")
(find-rurima "--- get        -> [String, String]" "== Instance Methods" "= class GetoptLong < Object" "refm/api/src/getoptlong.rd")
(find-rurima "--- get_option -> [String, String]" "== Instance Methods" "= class GetoptLong < Object" "refm/api/src/getoptlong.rd")
(find-rurima "--- error  -> Class | nil" "== Instance Methods" "= class GetoptLong < Object" "refm/api/src/getoptlong.rd")
(find-rurima "--- error? -> Class | nil" "== Instance Methods" "= class GetoptLong < Object" "refm/api/src/getoptlong.rd")
(find-rurima "--- error_message -> String | nil" "== Instance Methods" "= class GetoptLong < Object" "refm/api/src/getoptlong.rd")
(find-rurima "--- ordering=(ordering)" "== Instance Methods" "= class GetoptLong < Object" "refm/api/src/getoptlong.rd")
(find-rurima "--- ordering -> Fixnum" "== Instance Methods" "= class GetoptLong < Object" "refm/api/src/getoptlong.rd")
(find-rurima "--- quiet=(flag)" "== Instance Methods" "= class GetoptLong < Object" "refm/api/src/getoptlong.rd")
(find-rurima "--- quiet  -> true | false" "== Instance Methods" "= class GetoptLong < Object" "refm/api/src/getoptlong.rd")
(find-rurima "--- quiet? -> true | false" "== Instance Methods" "= class GetoptLong < Object" "refm/api/src/getoptlong.rd")
(find-rurima "--- set_options(*arguments) -> self" "== Instance Methods" "= class GetoptLong < Object" "refm/api/src/getoptlong.rd")
(find-rurima "--- terminate -> self" "== Instance Methods" "= class GetoptLong < Object" "refm/api/src/getoptlong.rd")
(find-rurima "--- terminated? -> true | false" "== Instance Methods" "= class GetoptLong < Object" "refm/api/src/getoptlong.rd")
(find-rurima "== Protected Instance Methods" "= class GetoptLong < Object" "refm/api/src/getoptlong.rd")
(find-rurima "--- set_error(type, message) -> ()" "== Protected Instance Methods" "= class GetoptLong < Object" "refm/api/src/getoptlong.rd")
(find-rurima "== Constants" "= class GetoptLong < Object" "refm/api/src/getoptlong.rd")
(find-rurima "--- ORDERINGS -> Array" "== Constants" "= class GetoptLong < Object" "refm/api/src/getoptlong.rd")
(find-rurima "--- REQUIRE_ORDER -> 0" "== Constants" "= class GetoptLong < Object" "refm/api/src/getoptlong.rd")
(find-rurima "--- PERMUTE -> 1" "== Constants" "= class GetoptLong < Object" "refm/api/src/getoptlong.rd")
(find-rurima "--- RETURN_IN_ORDER -> 2" "== Constants" "= class GetoptLong < Object" "refm/api/src/getoptlong.rd")
(find-rurima "--- ARGUMENT_FLAGS -> Array" "== Constants" "= class GetoptLong < Object" "refm/api/src/getoptlong.rd")
(find-rurima "--- NO_ARGUMENT -> 0" "== Constants" "= class GetoptLong < Object" "refm/api/src/getoptlong.rd")
(find-rurima "--- REQUIRED_ARGUMENT -> 1" "== Constants" "= class GetoptLong < Object" "refm/api/src/getoptlong.rd")
(find-rurima "--- OPTIONAL_ARGUMENT -> 2" "== Constants" "= class GetoptLong < Object" "refm/api/src/getoptlong.rd")
(find-rurima "--- STATUS_YET        -> 0" "== Constants" "= class GetoptLong < Object" "refm/api/src/getoptlong.rd")
(find-rurima "--- STATUS_STARTED    -> 1" "== Constants" "= class GetoptLong < Object" "refm/api/src/getoptlong.rd")
(find-rurima "--- STATUS_TERMINATED -> 2" "== Constants" "= class GetoptLong < Object" "refm/api/src/getoptlong.rd")
(find-rurima "= class GetoptLong::Error < StandardError" "refm/api/src/getoptlong.rd")
(find-rurima "= class GetoptLong::AmbigousOption < GetoptLong::Error" "refm/api/src/getoptlong.rd")
(find-rurima "= class GetoptLong::AmbiguousOption < GetoptLong::Error" "refm/api/src/getoptlong.rd")
(find-rurima "= class GetoptLong::InvalidOption < GetoptLong::Error" "refm/api/src/getoptlong.rd")
(find-rurima "= class GetoptLong::MissingArgument < GetoptLong::Error" "refm/api/src/getoptlong.rd")
(find-rurima "= class GetoptLong::NeedlessArgument < GetoptLong::Error" "refm/api/src/getoptlong.rd")
(find-rurima "=== サンプルコード" "refm/api/src/tracer.rd")
(find-rurima "=== SEE ALSO" "refm/api/src/tracer.rd")
(find-rurima "= class Tracer < Object" "refm/api/src/tracer.rd")
(find-rurima "== Class Methods" "= class Tracer < Object" "refm/api/src/tracer.rd")
(find-rurima "--- new" "== Class Methods" "= class Tracer < Object" "refm/api/src/tracer.rd")
(find-rurima "--- on -> nil" "== Class Methods" "= class Tracer < Object" "refm/api/src/tracer.rd")
(find-rurima "--- on {...}" "== Class Methods" "= class Tracer < Object" "refm/api/src/tracer.rd")
(find-rurima "--- off -> nil" "== Class Methods" "= class Tracer < Object" "refm/api/src/tracer.rd")
(find-rurima "--- set_get_line_procs(filename, proc)" "== Class Methods" "= class Tracer < Object" "refm/api/src/tracer.rd")
(find-rurima "--- set_get_line_procs(filename) {|line| .... }" "== Class Methods" "= class Tracer < Object" "refm/api/src/tracer.rd")
(find-rurima "--- add_filter(proc)" "== Class Methods" "= class Tracer < Object" "refm/api/src/tracer.rd")
(find-rurima "--- add_filter {|event, file, line, id, binding, klass| .... }" "== Class Methods" "= class Tracer < Object" "refm/api/src/tracer.rd")
(find-rurima "==== フィルタ手続きのパラメータ" "== Class Methods" "= class Tracer < Object" "refm/api/src/tracer.rd")
(find-rurima "--- verbose -> bool" "==== フィルタ手続きのパラメータ" "== Class Methods" "= class Tracer < Object" "refm/api/src/tracer.rd")
(find-rurima "--- verbose? -> bool" "==== フィルタ手続きのパラメータ" "== Class Methods" "= class Tracer < Object" "refm/api/src/tracer.rd")
(find-rurima "--- verbose=(flag)" "==== フィルタ手続きのパラメータ" "== Class Methods" "= class Tracer < Object" "refm/api/src/tracer.rd")
(find-rurima "--- stdout -> object" "==== フィルタ手続きのパラメータ" "== Class Methods" "= class Tracer < Object" "refm/api/src/tracer.rd")
(find-rurima "--- stdout=(fp)" "==== フィルタ手続きのパラメータ" "== Class Methods" "= class Tracer < Object" "refm/api/src/tracer.rd")
(find-rurima "--- display_c_call -> bool" "==== フィルタ手続きのパラメータ" "== Class Methods" "= class Tracer < Object" "refm/api/src/tracer.rd")
(find-rurima "--- display_c_call? -> bool" "==== フィルタ手続きのパラメータ" "== Class Methods" "= class Tracer < Object" "refm/api/src/tracer.rd")
(find-rurima "--- display_c_call=(flag)" "==== フィルタ手続きのパラメータ" "== Class Methods" "= class Tracer < Object" "refm/api/src/tracer.rd")
(find-rurima "--- display_process_id -> bool" "==== フィルタ手続きのパラメータ" "== Class Methods" "= class Tracer < Object" "refm/api/src/tracer.rd")
(find-rurima "--- display_process_id? -> bool" "==== フィルタ手続きのパラメータ" "== Class Methods" "= class Tracer < Object" "refm/api/src/tracer.rd")
(find-rurima "--- display_process_id=(flag)" "==== フィルタ手続きのパラメータ" "== Class Methods" "= class Tracer < Object" "refm/api/src/tracer.rd")
(find-rurima "--- display_thread_id -> bool" "==== フィルタ手続きのパラメータ" "== Class Methods" "= class Tracer < Object" "refm/api/src/tracer.rd")
(find-rurima "--- display_thread_id? -> bool" "==== フィルタ手続きのパラメータ" "== Class Methods" "= class Tracer < Object" "refm/api/src/tracer.rd")
(find-rurima "--- display_thread_id=(flag)" "==== フィルタ手続きのパラメータ" "== Class Methods" "= class Tracer < Object" "refm/api/src/tracer.rd")
(find-rurima "--- stdout_mutex -> Mutex" "==== フィルタ手続きのパラメータ" "== Class Methods" "= class Tracer < Object" "refm/api/src/tracer.rd")
(find-rurima "== Instance Methods" "= class Tracer < Object" "refm/api/src/tracer.rd")
(find-rurima "--- add_filter(p = proc)" "== Instance Methods" "= class Tracer < Object" "refm/api/src/tracer.rd")
(find-rurima "--- get_line(file, line) -> String" "== Instance Methods" "= class Tracer < Object" "refm/api/src/tracer.rd")
(find-rurima "--- get_thread_no -> Integer" "== Instance Methods" "= class Tracer < Object" "refm/api/src/tracer.rd")
(find-rurima "--- off -> ()" "== Instance Methods" "= class Tracer < Object" "refm/api/src/tracer.rd")
(find-rurima "--- on -> ()" "== Instance Methods" "= class Tracer < Object" "refm/api/src/tracer.rd")
(find-rurima "--- on{ ... } -> ()" "== Instance Methods" "= class Tracer < Object" "refm/api/src/tracer.rd")
(find-rurima "--- set_get_line_procs(file, p = proc)" "== Instance Methods" "= class Tracer < Object" "refm/api/src/tracer.rd")
(find-rurima "--- stdout -> IO" "== Instance Methods" "= class Tracer < Object" "refm/api/src/tracer.rd")
(find-rurima "--- trace_func(event, file, line, id, binding, klass, *) -> object | nil" "== Instance Methods" "= class Tracer < Object" "refm/api/src/tracer.rd")
(find-rurima "== Constants" "= class Tracer < Object" "refm/api/src/tracer.rd")
(find-rurima "--- MY_FILE_NAME" "== Constants" "= class Tracer < Object" "refm/api/src/tracer.rd")
(find-rurima "--- EVENT_SYMBOL" "== Constants" "= class Tracer < Object" "refm/api/src/tracer.rd")
(find-rurima "--- Single -> Tracer" "== Constants" "= class Tracer < Object" "refm/api/src/tracer.rd")
(find-rurima "=== 使い方" "refm/api/src/dl/dl2/dl.rd")
(find-rurima "==== 構造体を扱う" "=== 使い方" "refm/api/src/dl/dl2/dl.rd")
(find-rurima "==== コールバック" "=== 使い方" "refm/api/src/dl/dl2/dl.rd")
(find-rurima "==== ポインタを扱う" "=== 使い方" "refm/api/src/dl/dl2/dl.rd")
(find-rurima "= class DL::CPtr < Object" "refm/api/src/dl/dl2/CPtr")
(find-rurima "== Singleton Methods" "= class DL::CPtr < Object" "refm/api/src/dl/dl2/CPtr")
(find-rurima "--- new(addr, size = 0, free = nil)   -> DL::CPtr" "== Singleton Methods" "= class DL::CPtr < Object" "refm/api/src/dl/dl2/CPtr")
(find-rurima "--- malloc(size, free = nil)   -> DL::CPtr" "== Singleton Methods" "= class DL::CPtr < Object" "refm/api/src/dl/dl2/CPtr")
(find-rurima "--- [](val)       -> DL::CPtr" "== Singleton Methods" "= class DL::CPtr < Object" "refm/api/src/dl/dl2/CPtr")
(find-rurima "--- to_ptr(val)   -> DL::CPtr" "== Singleton Methods" "= class DL::CPtr < Object" "refm/api/src/dl/dl2/CPtr")
(find-rurima "== Instance Methods" "= class DL::CPtr < Object" "refm/api/src/dl/dl2/CPtr")
(find-rurima "--- +(n)   -> DL::CPtr" "== Instance Methods" "= class DL::CPtr < Object" "refm/api/src/dl/dl2/CPtr")
(find-rurima "--- ptr   -> DL::CPtr" "== Instance Methods" "= class DL::CPtr < Object" "refm/api/src/dl/dl2/CPtr")
(find-rurima "--- +@    -> DL::CPtr" "== Instance Methods" "= class DL::CPtr < Object" "refm/api/src/dl/dl2/CPtr")
(find-rurima "--- -(n)   -> DL::CPtr" "== Instance Methods" "= class DL::CPtr < Object" "refm/api/src/dl/dl2/CPtr")
(find-rurima "--- ref   -> DL::CPtr" "== Instance Methods" "= class DL::CPtr < Object" "refm/api/src/dl/dl2/CPtr")
(find-rurima "--- -@    -> DL::CPtr" "== Instance Methods" "= class DL::CPtr < Object" "refm/api/src/dl/dl2/CPtr")
(find-rurima "--- <=>(other)    -> Integer" "== Instance Methods" "= class DL::CPtr < Object" "refm/api/src/dl/dl2/CPtr")
(find-rurima "--- eql?(other)     -> bool" "== Instance Methods" "= class DL::CPtr < Object" "refm/api/src/dl/dl2/CPtr")
(find-rurima "--- ==(other)       -> bool" "== Instance Methods" "= class DL::CPtr < Object" "refm/api/src/dl/dl2/CPtr")
(find-rurima "--- [](offset)            -> Integer" "== Instance Methods" "= class DL::CPtr < Object" "refm/api/src/dl/dl2/CPtr")
(find-rurima "--- [](offset, len)       -> String" "== Instance Methods" "= class DL::CPtr < Object" "refm/api/src/dl/dl2/CPtr")
(find-rurima "--- []=(offset, n)" "== Instance Methods" "= class DL::CPtr < Object" "refm/api/src/dl/dl2/CPtr")
(find-rurima "--- []=(offset, len, v) " "== Instance Methods" "= class DL::CPtr < Object" "refm/api/src/dl/dl2/CPtr")
(find-rurima "--- free     -> DL::CFunc" "== Instance Methods" "= class DL::CPtr < Object" "refm/api/src/dl/dl2/CPtr")
(find-rurima "--- free=(cfunc)" "== Instance Methods" "= class DL::CPtr < Object" "refm/api/src/dl/dl2/CPtr")
(find-rurima "--- inspect" "== Instance Methods" "= class DL::CPtr < Object" "refm/api/src/dl/dl2/CPtr")
(find-rurima "--- null?    -> bool" "== Instance Methods" "= class DL::CPtr < Object" "refm/api/src/dl/dl2/CPtr")
(find-rurima "--- size        -> Integer" "== Instance Methods" "= class DL::CPtr < Object" "refm/api/src/dl/dl2/CPtr")
(find-rurima "--- size=(s)" "== Instance Methods" "= class DL::CPtr < Object" "refm/api/src/dl/dl2/CPtr")
(find-rurima "--- to_i    -> Integer" "== Instance Methods" "= class DL::CPtr < Object" "refm/api/src/dl/dl2/CPtr")
(find-rurima "--- to_s         -> String" "== Instance Methods" "= class DL::CPtr < Object" "refm/api/src/dl/dl2/CPtr")
(find-rurima "--- to_s(len)    -> String" "== Instance Methods" "= class DL::CPtr < Object" "refm/api/src/dl/dl2/CPtr")
(find-rurima "--- to_str         -> String" "== Instance Methods" "= class DL::CPtr < Object" "refm/api/src/dl/dl2/CPtr")
(find-rurima "--- to_str(len)    -> String" "== Instance Methods" "= class DL::CPtr < Object" "refm/api/src/dl/dl2/CPtr")
(find-rurima "--- to_value    -> object" "== Instance Methods" "= class DL::CPtr < Object" "refm/api/src/dl/dl2/CPtr")
(find-rurima "= class DL::Handle < Object" "refm/api/src/dl/dl2/Handle")
(find-rurima "== Class Methods" "= class DL::Handle < Object" "refm/api/src/dl/dl2/Handle")
(find-rurima "--- new(lib)                    -> DL::Handle" "== Class Methods" "= class DL::Handle < Object" "refm/api/src/dl/dl2/Handle")
(find-rurima "--- new(lib) {|handle| ... }    -> DL::Handle" "== Class Methods" "= class DL::Handle < Object" "refm/api/src/dl/dl2/Handle")
(find-rurima "== Instance Methods" "= class DL::Handle < Object" "refm/api/src/dl/dl2/Handle")
(find-rurima "--- close    -> Integer" "== Instance Methods" "= class DL::Handle < Object" "refm/api/src/dl/dl2/Handle")
(find-rurima "--- enable_close     -> nil" "== Instance Methods" "= class DL::Handle < Object" "refm/api/src/dl/dl2/Handle")
(find-rurima "--- disable_close    -> nil" "== Instance Methods" "= class DL::Handle < Object" "refm/api/src/dl/dl2/Handle")
(find-rurima "--- sym(func) -> Integer" "== Instance Methods" "= class DL::Handle < Object" "refm/api/src/dl/dl2/Handle")
(find-rurima "--- [](func)  -> Integer" "== Instance Methods" "= class DL::Handle < Object" "refm/api/src/dl/dl2/Handle")
(find-rurima "--- to_i    -> Integer" "== Instance Methods" "= class DL::Handle < Object" "refm/api/src/dl/dl2/Handle")
(find-rurima "= module DL::Importer" "refm/api/src/dl/dl2/Importer")
(find-rurima "== Instance Methods" "= module DL::Importer" "refm/api/src/dl/dl2/Importer")
(find-rurima "--- []" "== Instance Methods" "= module DL::Importer" "refm/api/src/dl/dl2/Importer")
(find-rurima "--- bind" "== Instance Methods" "= module DL::Importer" "refm/api/src/dl/dl2/Importer")
(find-rurima "--- dlload" "== Instance Methods" "= module DL::Importer" "refm/api/src/dl/dl2/Importer")
(find-rurima "--- extern" "== Instance Methods" "= module DL::Importer" "refm/api/src/dl/dl2/Importer")
(find-rurima "--- sizeof" "== Instance Methods" "= module DL::Importer" "refm/api/src/dl/dl2/Importer")
(find-rurima "--- struct" "== Instance Methods" "= module DL::Importer" "refm/api/src/dl/dl2/Importer")
(find-rurima "--- typealias" "== Instance Methods" "= module DL::Importer" "refm/api/src/dl/dl2/Importer")
(find-rurima "--- union" "== Instance Methods" "= module DL::Importer" "refm/api/src/dl/dl2/Importer")
(find-rurima "--- value" "== Instance Methods" "= module DL::Importer" "refm/api/src/dl/dl2/Importer")
(find-rurima "= class DL::CFunc < Object" "refm/api/src/dl/dl2/CFunc")
(find-rurima "== Class Methods" "= class DL::CFunc < Object" "refm/api/src/dl/dl2/CFunc")
(find-rurima "--- new(addr, type = DL::TYPE_VOID, name = '', calltype = :cdecl)" "== Class Methods" "= class DL::CFunc < Object" "refm/api/src/dl/dl2/CFunc")
(find-rurima "== Module Functions" "= class DL::CFunc < Object" "refm/api/src/dl/dl2/CFunc")
(find-rurima "--- last_error    -> Integer" "== Module Functions" "= class DL::CFunc < Object" "refm/api/src/dl/dl2/CFunc")
(find-rurima "== Instance Methods" "= class DL::CFunc < Object" "refm/api/src/dl/dl2/CFunc")
(find-rurima "--- [](arry)      -> Integer | Float | nil" "== Instance Methods" "= class DL::CFunc < Object" "refm/api/src/dl/dl2/CFunc")
(find-rurima "--- call(arry)    -> Integer | Float | nil" "== Instance Methods" "= class DL::CFunc < Object" "refm/api/src/dl/dl2/CFunc")
(find-rurima "--- calltype         -> Symbol" "== Instance Methods" "= class DL::CFunc < Object" "refm/api/src/dl/dl2/CFunc")
(find-rurima "--- calltype=(sym)" "== Instance Methods" "= class DL::CFunc < Object" "refm/api/src/dl/dl2/CFunc")
(find-rurima "--- ctype     -> Integer" "== Instance Methods" "= class DL::CFunc < Object" "refm/api/src/dl/dl2/CFunc")
(find-rurima "--- ctype=(type)" "== Instance Methods" "= class DL::CFunc < Object" "refm/api/src/dl/dl2/CFunc")
(find-rurima "--- name   -> String" "== Instance Methods" "= class DL::CFunc < Object" "refm/api/src/dl/dl2/CFunc")
(find-rurima "--- ptr         -> Integer" "== Instance Methods" "= class DL::CFunc < Object" "refm/api/src/dl/dl2/CFunc")
(find-rurima "--- ptr=(addr)" "== Instance Methods" "= class DL::CFunc < Object" "refm/api/src/dl/dl2/CFunc")
(find-rurima "--- to_i    -> Integer" "== Instance Methods" "= class DL::CFunc < Object" "refm/api/src/dl/dl2/CFunc")
(find-rurima "--- inspect   -> String" "== Instance Methods" "= class DL::CFunc < Object" "refm/api/src/dl/dl2/CFunc")
(find-rurima "--- to_s      -> String" "== Instance Methods" "= class DL::CFunc < Object" "refm/api/src/dl/dl2/CFunc")
(find-rurima "= module DL" "refm/api/src/dl/dl2/DL")
(find-rurima "== Module Functions" "= module DL" "refm/api/src/dl/dl2/DL")
(find-rurima "--- dlopen(lib)                    -> DL::Handle" "== Module Functions" "= module DL" "refm/api/src/dl/dl2/DL")
(find-rurima "--- dlopen(lib) {|handle| ... }    -> DL::Handle" "== Module Functions" "= module DL" "refm/api/src/dl/dl2/DL")
(find-rurima "--- malloc(size)    -> Integer" "== Module Functions" "= module DL" "refm/api/src/dl/dl2/DL")
(find-rurima "--- realloc(addr, size)   -> Integer" "== Module Functions" "= module DL" "refm/api/src/dl/dl2/DL")
(find-rurima "--- free(addr)      -> nil" "== Module Functions" "= module DL" "refm/api/src/dl/dl2/DL")
(find-rurima "--- dlwrap(obj)    -> Integer" "== Module Functions" "= module DL" "refm/api/src/dl/dl2/DL")
(find-rurima "--- dlunwrap(addr)  -> object" "== Module Functions" "= module DL" "refm/api/src/dl/dl2/DL")
(find-rurima "== Constants" "= module DL" "refm/api/src/dl/dl2/DL")
(find-rurima "--- CdeclCallbackProcs" "== Constants" "= module DL" "refm/api/src/dl/dl2/DL")
(find-rurima "--- CdeclCallbackAddrs" "== Constants" "= module DL" "refm/api/src/dl/dl2/DL")
(find-rurima "--- StdcallCallbackProcs" "== Constants" "= module DL" "refm/api/src/dl/dl2/DL")
(find-rurima "--- StdcallCallbackAddrs" "== Constants" "= module DL" "refm/api/src/dl/dl2/DL")
(find-rurima "--- ALIGN_CHAR" "== Constants" "= module DL" "refm/api/src/dl/dl2/DL")
(find-rurima "--- ALIGN_DOUBLE" "== Constants" "= module DL" "refm/api/src/dl/dl2/DL")
(find-rurima "--- ALIGN_FLOAT" "== Constants" "= module DL" "refm/api/src/dl/dl2/DL")
(find-rurima "--- ALIGN_INT" "== Constants" "= module DL" "refm/api/src/dl/dl2/DL")
(find-rurima "--- ALIGN_LONG" "== Constants" "= module DL" "refm/api/src/dl/dl2/DL")
(find-rurima "--- ALIGN_LONG_LONG" "== Constants" "= module DL" "refm/api/src/dl/dl2/DL")
(find-rurima "--- ALIGN_SHORT" "== Constants" "= module DL" "refm/api/src/dl/dl2/DL")
(find-rurima "--- ALIGN_VOIDP" "== Constants" "= module DL" "refm/api/src/dl/dl2/DL")
(find-rurima "--- BUILD_RUBY_PLATFORM" "== Constants" "= module DL" "refm/api/src/dl/dl2/DL")
(find-rurima "--- BUILD_RUBY_VERSION" "== Constants" "= module DL" "refm/api/src/dl/dl2/DL")
(find-rurima "--- DLSTACK_SIZE" "== Constants" "= module DL" "refm/api/src/dl/dl2/DL")
(find-rurima "--- MAX_CALLBACK" "== Constants" "= module DL" "refm/api/src/dl/dl2/DL")
(find-rurima "--- NULL" "== Constants" "= module DL" "refm/api/src/dl/dl2/DL")
(find-rurima "--- RTLD_GLOBAL" "== Constants" "= module DL" "refm/api/src/dl/dl2/DL")
(find-rurima "--- RTLD_LAZY" "== Constants" "= module DL" "refm/api/src/dl/dl2/DL")
(find-rurima "--- RTLD_NOW" "== Constants" "= module DL" "refm/api/src/dl/dl2/DL")
(find-rurima "--- RUBY_FREE" "== Constants" "= module DL" "refm/api/src/dl/dl2/DL")
(find-rurima "--- SIZEOF_CHAR" "== Constants" "= module DL" "refm/api/src/dl/dl2/DL")
(find-rurima "--- SIZEOF_DOUBLE" "== Constants" "= module DL" "refm/api/src/dl/dl2/DL")
(find-rurima "--- SIZEOF_FLOAT" "== Constants" "= module DL" "refm/api/src/dl/dl2/DL")
(find-rurima "--- SIZEOF_INT" "== Constants" "= module DL" "refm/api/src/dl/dl2/DL")
(find-rurima "--- SIZEOF_LONG" "== Constants" "= module DL" "refm/api/src/dl/dl2/DL")
(find-rurima "--- SIZEOF_LONG_LONG" "== Constants" "= module DL" "refm/api/src/dl/dl2/DL")
(find-rurima "--- SIZEOF_SHORT" "== Constants" "= module DL" "refm/api/src/dl/dl2/DL")
(find-rurima "--- SIZEOF_VOIDP" "== Constants" "= module DL" "refm/api/src/dl/dl2/DL")
(find-rurima "--- TYPE_CHAR" "== Constants" "= module DL" "refm/api/src/dl/dl2/DL")
(find-rurima "--- TYPE_DOUBLE" "== Constants" "= module DL" "refm/api/src/dl/dl2/DL")
(find-rurima "--- TYPE_FLOAT" "== Constants" "= module DL" "refm/api/src/dl/dl2/DL")
(find-rurima "--- TYPE_INT" "== Constants" "= module DL" "refm/api/src/dl/dl2/DL")
(find-rurima "--- TYPE_LONG" "== Constants" "= module DL" "refm/api/src/dl/dl2/DL")
(find-rurima "--- TYPE_LONG_LONG" "== Constants" "= module DL" "refm/api/src/dl/dl2/DL")
(find-rurima "--- TYPE_SHORT" "== Constants" "= module DL" "refm/api/src/dl/dl2/DL")
(find-rurima "--- TYPE_VOID" "== Constants" "= module DL" "refm/api/src/dl/dl2/DL")
(find-rurima "--- TYPE_VOIDP" "== Constants" "= module DL" "refm/api/src/dl/dl2/DL")
(find-rurima "= class DL::DLError < StandardError" "refm/api/src/dl/dl2/DL")
(find-rurima "= class DL::DLTypeError < StandardError" "refm/api/src/dl/dl2/DL")
(find-rurima "=== 高度な使用法" "refm/api/src/dl/dl2/import.rd")
(find-rurima "==== ○○の配列を関数に渡したい" "=== 高度な使用法" "refm/api/src/dl/dl2/import.rd")
(find-rurima "==== Ruby のオブジェクトをコールバックに渡したい" "=== 高度な使用法" "refm/api/src/dl/dl2/import.rd")
(find-rurima "==== 複雑な構造体を定義したい" "=== 高度な使用法" "refm/api/src/dl/dl2/import.rd")
(find-rurima "= class DL::Function < Object" "refm/api/src/dl/dl2/Function")
(find-rurima "== Class Methods" "= class DL::Function < Object" "refm/api/src/dl/dl2/Function")
(find-rurima "--- new(cfunc, argtypes)                  -> DL::Function" "== Class Methods" "= class DL::Function < Object" "refm/api/src/dl/dl2/Function")
(find-rurima "--- new(cfunc, argtypes){|*arg| ... }     -> DL::Function" "== Class Methods" "= class DL::Function < Object" "refm/api/src/dl/dl2/Function")
(find-rurima "== Instance Methods" "= class DL::Function < Object" "refm/api/src/dl/dl2/Function")
(find-rurima "--- bind{|*args| ... }" "== Instance Methods" "= class DL::Function < Object" "refm/api/src/dl/dl2/Function")
(find-rurima "--- call(*arg)              -> DL::CPtr | Integer | Float | nil" "== Instance Methods" "= class DL::Function < Object" "refm/api/src/dl/dl2/Function")
(find-rurima "--- call(*arg){|*v| ... }   -> DL::CPtr | Integer | Float | nil" "== Instance Methods" "= class DL::Function < Object" "refm/api/src/dl/dl2/Function")
(find-rurima "--- name  -> String" "== Instance Methods" "= class DL::Function < Object" "refm/api/src/dl/dl2/Function")
(find-rurima "--- to_i  -> Integer" "== Instance Methods" "= class DL::Function < Object" "refm/api/src/dl/dl2/Function")
(find-rurima "--- unbind    -> ()" "== Instance Methods" "= class DL::Function < Object" "refm/api/src/dl/dl2/Function")
(find-rurima "=== Using Ruby/DL" "refm/api/src/dl/dl1/dl.rd")
(find-rurima "==== 構造体を扱う" "=== Using Ruby/DL" "refm/api/src/dl/dl1/dl.rd")
(find-rurima "==== コールバック" "=== Using Ruby/DL" "refm/api/src/dl/dl1/dl.rd")
(find-rurima "= class DL::PtrData < Object" "refm/api/src/dl/dl1/PtrData")
(find-rurima "== Class Methods" "= class DL::PtrData < Object" "refm/api/src/dl/dl1/PtrData")
(find-rurima "--- new(addr, size = 0, free = nil)    -> DL::PtrData" "== Class Methods" "= class DL::PtrData < Object" "refm/api/src/dl/dl1/PtrData")
(find-rurima "--- malloc(size, free = nil)    -> DL::PtrData" "== Class Methods" "= class DL::PtrData < Object" "refm/api/src/dl/dl1/PtrData")
(find-rurima "== Instance Methods" "= class DL::PtrData < Object" "refm/api/src/dl/dl1/PtrData")
(find-rurima "--- free=(sym)    " "== Instance Methods" "= class DL::PtrData < Object" "refm/api/src/dl/dl1/PtrData")
(find-rurima "--- free    -> DL::Symbol" "== Instance Methods" "= class DL::PtrData < Object" "refm/api/src/dl/dl1/PtrData")
(find-rurima "--- size        -> Integer" "== Instance Methods" "= class DL::PtrData < Object" "refm/api/src/dl/dl1/PtrData")
(find-rurima "--- size=(s)    " "== Instance Methods" "= class DL::PtrData < Object" "refm/api/src/dl/dl1/PtrData")
(find-rurima "--- null?    -> bool" "== Instance Methods" "= class DL::PtrData < Object" "refm/api/src/dl/dl1/PtrData")
(find-rurima "--- to_a(type)            -> [object]" "== Instance Methods" "= class DL::PtrData < Object" "refm/api/src/dl/dl1/PtrData")
(find-rurima "--- to_a(type, size)      -> [object]" "== Instance Methods" "= class DL::PtrData < Object" "refm/api/src/dl/dl1/PtrData")
(find-rurima "--- to_i    -> Integer" "== Instance Methods" "= class DL::PtrData < Object" "refm/api/src/dl/dl1/PtrData")
(find-rurima "--- to_s         -> String" "== Instance Methods" "= class DL::PtrData < Object" "refm/api/src/dl/dl1/PtrData")
(find-rurima "--- to_s(len)    -> String" "== Instance Methods" "= class DL::PtrData < Object" "refm/api/src/dl/dl1/PtrData")
(find-rurima "--- to_str" "== Instance Methods" "= class DL::PtrData < Object" "refm/api/src/dl/dl1/PtrData")
(find-rurima "--- ptr   -> DL::PtrData" "== Instance Methods" "= class DL::PtrData < Object" "refm/api/src/dl/dl1/PtrData")
(find-rurima "--- +@    -> DL::PtrData" "== Instance Methods" "= class DL::PtrData < Object" "refm/api/src/dl/dl1/PtrData")
(find-rurima "--- ==(other)     -> bool" "== Instance Methods" "= class DL::PtrData < Object" "refm/api/src/dl/dl1/PtrData")
(find-rurima "--- eql?(other)   -> bool" "== Instance Methods" "= class DL::PtrData < Object" "refm/api/src/dl/dl1/PtrData")
(find-rurima "--- <=>(other)    -> Integer" "== Instance Methods" "= class DL::PtrData < Object" "refm/api/src/dl/dl1/PtrData")
(find-rurima "--- ref   -> DL::PtrData" "== Instance Methods" "= class DL::PtrData < Object" "refm/api/src/dl/dl1/PtrData")
(find-rurima "--- -@    -> DL::PtrData" "== Instance Methods" "= class DL::PtrData < Object" "refm/api/src/dl/dl1/PtrData")
(find-rurima "--- +(n)   -> DL::PtrData" "== Instance Methods" "= class DL::PtrData < Object" "refm/api/src/dl/dl1/PtrData")
(find-rurima "--- -(n)   -> DL::PtrData" "== Instance Methods" "= class DL::PtrData < Object" "refm/api/src/dl/dl1/PtrData")
(find-rurima "--- struct!(type, *members)    -> nil" "== Instance Methods" "= class DL::PtrData < Object" "refm/api/src/dl/dl1/PtrData")
(find-rurima "--- union!(type, *members)    -> nil" "== Instance Methods" "= class DL::PtrData < Object" "refm/api/src/dl/dl1/PtrData")
(find-rurima "--- [](key)             -> object" "== Instance Methods" "= class DL::PtrData < Object" "refm/api/src/dl/dl1/PtrData")
(find-rurima "--- [](offset, len = 0)     -> String" "== Instance Methods" "= class DL::PtrData < Object" "refm/api/src/dl/dl1/PtrData")
(find-rurima "--- []=(key, val)   " "== Instance Methods" "= class DL::PtrData < Object" "refm/api/src/dl/dl1/PtrData")
(find-rurima "--- []=(offset, str) " "== Instance Methods" "= class DL::PtrData < Object" "refm/api/src/dl/dl1/PtrData")
(find-rurima "--- []=(offset, len, str) " "== Instance Methods" "= class DL::PtrData < Object" "refm/api/src/dl/dl1/PtrData")
(find-rurima "--- data_type    -> [object]" "== Instance Methods" "= class DL::PtrData < Object" "refm/api/src/dl/dl1/PtrData")
(find-rurima "--- define_data_type    -> nil" "== Instance Methods" "= class DL::PtrData < Object" "refm/api/src/dl/dl1/PtrData")
(find-rurima "= module DL::MemorySpace" "refm/api/src/dl/dl1/PtrData")
(find-rurima "== Constants" "= module DL::MemorySpace" "refm/api/src/dl/dl1/PtrData")
(find-rurima "--- MemoryTable" "== Constants" "= module DL::MemorySpace" "refm/api/src/dl/dl1/PtrData")
(find-rurima "== Module Functions" "= module DL::MemorySpace" "refm/api/src/dl/dl1/PtrData")
(find-rurima "--- each" "== Module Functions" "= module DL::MemorySpace" "refm/api/src/dl/dl1/PtrData")
(find-rurima "= class DL::Handle < Object" "refm/api/src/dl/dl1/Handle")
(find-rurima "== Class Methods" "= class DL::Handle < Object" "refm/api/src/dl/dl1/Handle")
(find-rurima "--- new(lib)                    -> DL::Handle" "== Class Methods" "= class DL::Handle < Object" "refm/api/src/dl/dl1/Handle")
(find-rurima "--- new(lib) {|handle| ... }    -> DL::Handle" "== Class Methods" "= class DL::Handle < Object" "refm/api/src/dl/dl1/Handle")
(find-rurima "== Instance Methods" "= class DL::Handle < Object" "refm/api/src/dl/dl1/Handle")
(find-rurima "--- close    -> Integer" "== Instance Methods" "= class DL::Handle < Object" "refm/api/src/dl/dl1/Handle")
(find-rurima "--- enable_close     -> nil" "== Instance Methods" "= class DL::Handle < Object" "refm/api/src/dl/dl1/Handle")
(find-rurima "--- disable_close    -> nil" "== Instance Methods" "= class DL::Handle < Object" "refm/api/src/dl/dl1/Handle")
(find-rurima "--- sym(func) -> DL::PtrData" "== Instance Methods" "= class DL::Handle < Object" "refm/api/src/dl/dl1/Handle")
(find-rurima "--- [](func)  -> DL::PtrData" "== Instance Methods" "= class DL::Handle < Object" "refm/api/src/dl/dl1/Handle")
(find-rurima "--- sym(func, type)    -> DL::Symbol" "== Instance Methods" "= class DL::Handle < Object" "refm/api/src/dl/dl1/Handle")
(find-rurima "--- [](func, type)     -> DL::Symbol" "== Instance Methods" "= class DL::Handle < Object" "refm/api/src/dl/dl1/Handle")
(find-rurima "--- to_i    -> Integer" "== Instance Methods" "= class DL::Handle < Object" "refm/api/src/dl/dl1/Handle")
(find-rurima "--- to_ptr    -> DL::PtrData" "== Instance Methods" "= class DL::Handle < Object" "refm/api/src/dl/dl1/Handle")
(find-rurima "= reopen DL::Importable" "refm/api/src/dl/dl1/struct.rd")
(find-rurima "== Instance Methods" "= reopen DL::Importable" "refm/api/src/dl/dl1/struct.rd")
(find-rurima "--- define_struct(contents)" "== Instance Methods" "= reopen DL::Importable" "refm/api/src/dl/dl1/struct.rd")
(find-rurima "--- struct(contents)" "== Instance Methods" "= reopen DL::Importable" "refm/api/src/dl/dl1/struct.rd")
(find-rurima "--- define_union(contents)" "== Instance Methods" "= reopen DL::Importable" "refm/api/src/dl/dl1/struct.rd")
(find-rurima "--- union(contents)" "== Instance Methods" "= reopen DL::Importable" "refm/api/src/dl/dl1/struct.rd")
(find-rurima "= class DL::Importable::Memory < Object" "refm/api/src/dl/dl1/struct.rd")
(find-rurima "== Class Methods" "= class DL::Importable::Memory < Object" "refm/api/src/dl/dl1/struct.rd")
(find-rurima "--- new(ptr, names, ty, len, enc, dec)" "== Class Methods" "= class DL::Importable::Memory < Object" "refm/api/src/dl/dl1/struct.rd")
(find-rurima "== Instance Method" "= class DL::Importable::Memory < Object" "refm/api/src/dl/dl1/struct.rd")
(find-rurima "--- to_ptr" "== Instance Method" "= class DL::Importable::Memory < Object" "refm/api/src/dl/dl1/struct.rd")
(find-rurima "--- size" "== Instance Method" "= class DL::Importable::Memory < Object" "refm/api/src/dl/dl1/struct.rd")
(find-rurima "= class DL::Importable::Struct < Object" "refm/api/src/dl/dl1/struct.rd")
(find-rurima "== Class Methods" "= class DL::Importable::Struct < Object" "refm/api/src/dl/dl1/struct.rd")
(find-rurima "--- new(types, contents)" "== Class Methods" "= class DL::Importable::Struct < Object" "refm/api/src/dl/dl1/struct.rd")
(find-rurima "== Instance Methods" "= class DL::Importable::Struct < Object" "refm/api/src/dl/dl1/struct.rd")
(find-rurima "--- new(ptr)" "== Instance Methods" "= class DL::Importable::Struct < Object" "refm/api/src/dl/dl1/struct.rd")
(find-rurima "--- malloc(size = nil)" "== Instance Methods" "= class DL::Importable::Struct < Object" "refm/api/src/dl/dl1/struct.rd")
(find-rurima "--- size" "== Instance Methods" "= class DL::Importable::Struct < Object" "refm/api/src/dl/dl1/struct.rd")
(find-rurima "--- members" "== Instance Methods" "= class DL::Importable::Struct < Object" "refm/api/src/dl/dl1/struct.rd")
(find-rurima "--- parse(contents)" "== Instance Methods" "= class DL::Importable::Struct < Object" "refm/api/src/dl/dl1/struct.rd")
(find-rurima "--- parse_elem(elem)" "== Instance Methods" "= class DL::Importable::Struct < Object" "refm/api/src/dl/dl1/struct.rd")
(find-rurima "= class DL::Importable::Union < DL::Importable::Struct" "refm/api/src/dl/dl1/struct.rd")
(find-rurima "== Instance Methods" "= class DL::Importable::Union < DL::Importable::Struct" "refm/api/src/dl/dl1/struct.rd")
(find-rurima "--- new" "== Instance Methods" "= class DL::Importable::Union < DL::Importable::Struct" "refm/api/src/dl/dl1/struct.rd")
(find-rurima "= class Win32API < Object" "refm/api/src/dl/dl1/win32.rd")
(find-rurima "== Class Methods" "= class Win32API < Object" "refm/api/src/dl/dl1/win32.rd")
(find-rurima "--- new(dllname, func, import, export = \"0\")" "== Class Methods" "= class Win32API < Object" "refm/api/src/dl/dl1/win32.rd")
(find-rurima "== Instance Methods" "= class Win32API < Object" "refm/api/src/dl/dl1/win32.rd")
(find-rurima "--- call(*args)" "== Instance Methods" "= class Win32API < Object" "refm/api/src/dl/dl1/win32.rd")
(find-rurima "--- Call(*args)" "== Instance Methods" "= class Win32API < Object" "refm/api/src/dl/dl1/win32.rd")
(find-rurima "== Constants" "= class Win32API < Object" "refm/api/src/dl/dl1/win32.rd")
(find-rurima "--- DLL" "== Constants" "= class Win32API < Object" "refm/api/src/dl/dl1/win32.rd")
(find-rurima "= class DL::Types < Object" "refm/api/src/dl/dl1/types.rd")
(find-rurima "=== 型を定義する" "= class DL::Types < Object" "refm/api/src/dl/dl1/types.rd")
(find-rurima "== Instance Methods" "= class DL::Types < Object" "refm/api/src/dl/dl1/types.rd")
(find-rurima "--- typealias(alias, type, enc, dec, struct_enc, struct_dec)" "== Instance Methods" "= class DL::Types < Object" "refm/api/src/dl/dl1/types.rd")
(find-rurima "--- encode_type(alias)" "== Instance Methods" "= class DL::Types < Object" "refm/api/src/dl/dl1/types.rd")
(find-rurima "--- encode_argument_type(alias_type)" "== Instance Methods" "= class DL::Types < Object" "refm/api/src/dl/dl1/types.rd")
(find-rurima "--- encode_return_type(ty)" "== Instance Methods" "= class DL::Types < Object" "refm/api/src/dl/dl1/types.rd")
(find-rurima "--- encode_struct_type(alias_type)" "== Instance Methods" "= class DL::Types < Object" "refm/api/src/dl/dl1/types.rd")
(find-rurima "--- encode_type(ty)" "== Instance Methods" "= class DL::Types < Object" "refm/api/src/dl/dl1/types.rd")
(find-rurima "--- init_types" "== Instance Methods" "= class DL::Types < Object" "refm/api/src/dl/dl1/types.rd")
(find-rurima "== Constants" "= class DL::Types < Object" "refm/api/src/dl/dl1/types.rd")
(find-rurima "--- TYPES" "== Constants" "= class DL::Types < Object" "refm/api/src/dl/dl1/types.rd")
(find-rurima "= module DL" "refm/api/src/dl/dl1/DL")
(find-rurima "=== Type specifiers" "= module DL" "refm/api/src/dl/dl1/DL")
(find-rurima "=== Ruby のオブジェクトから C の型への変換" "= module DL" "refm/api/src/dl/dl1/DL")
(find-rurima "== Singleton Methods" "= module DL" "refm/api/src/dl/dl1/DL")
(find-rurima "--- last_error" "== Singleton Methods" "= module DL" "refm/api/src/dl/dl1/DL")
(find-rurima "--- last_error=" "== Singleton Methods" "= module DL" "refm/api/src/dl/dl1/DL")
(find-rurima "--- win32_last_error" "== Singleton Methods" "= module DL" "refm/api/src/dl/dl1/DL")
(find-rurima "--- win32_last_error=" "== Singleton Methods" "= module DL" "refm/api/src/dl/dl1/DL")
(find-rurima "== Constants" "= module DL" "refm/api/src/dl/dl1/DL")
(find-rurima "--- FuncTable" "== Constants" "= module DL" "refm/api/src/dl/dl1/DL")
(find-rurima "--- RTLD_GLOBAL" "== Constants" "= module DL" "refm/api/src/dl/dl1/DL")
(find-rurima "--- RTLD_LAZY" "== Constants" "= module DL" "refm/api/src/dl/dl1/DL")
(find-rurima "--- RTLD_NOW" "== Constants" "= module DL" "refm/api/src/dl/dl1/DL")
(find-rurima "--- ALIGN_INT" "== Constants" "= module DL" "refm/api/src/dl/dl1/DL")
(find-rurima "--- ALIGN_LONG" "== Constants" "= module DL" "refm/api/src/dl/dl1/DL")
(find-rurima "--- ALIGN_FLOAT" "== Constants" "= module DL" "refm/api/src/dl/dl1/DL")
(find-rurima "--- ALIGN_SHORT" "== Constants" "= module DL" "refm/api/src/dl/dl1/DL")
(find-rurima "--- ALIGN_DOUBLE" "== Constants" "= module DL" "refm/api/src/dl/dl1/DL")
(find-rurima "--- ALIGN_VOIDP" "== Constants" "= module DL" "refm/api/src/dl/dl1/DL")
(find-rurima "--- MAX_ARG" "== Constants" "= module DL" "refm/api/src/dl/dl1/DL")
(find-rurima "--- DLSTACK" "== Constants" "= module DL" "refm/api/src/dl/dl1/DL")
(find-rurima "--- FREE" "== Constants" "= module DL" "refm/api/src/dl/dl1/DL")
(find-rurima "== Module Functions" "= module DL" "refm/api/src/dl/dl1/DL")
(find-rurima "--- dlopen(lib)                    -> DL::Handle" "== Module Functions" "= module DL" "refm/api/src/dl/dl1/DL")
(find-rurima "--- dlopen(lib) {|handle| ... }    -> DL::Handle" "== Module Functions" "= module DL" "refm/api/src/dl/dl1/DL")
(find-rurima "--- callback(type)         -> DL::Symbol" "== Module Functions" "= module DL" "refm/api/src/dl/dl1/DL")
(find-rurima "--- define_callback(type)  -> DL::Symbol" "== Module Functions" "= module DL" "refm/api/src/dl/dl1/DL")
(find-rurima "--- remove_callback(sym)    -> nil" "== Module Functions" "= module DL" "refm/api/src/dl/dl1/DL")
(find-rurima "--- malloc(size)    -> DL::PtrData" "== Module Functions" "= module DL" "refm/api/src/dl/dl1/DL")
(find-rurima "--- sizeof(type)    -> Integer" "== Module Functions" "= module DL" "refm/api/src/dl/dl1/DL")
(find-rurima "--- strdup(str)    -> DL::PtrData" "== Module Functions" "= module DL" "refm/api/src/dl/dl1/DL")
(find-rurima "= class DL::DLError < StandardError" "refm/api/src/dl/dl1/DL")
(find-rurima "= class DL::DLTypeError < DL::DLError" "refm/api/src/dl/dl1/DL")
(find-rurima "= reopen String" "refm/api/src/dl/dl1/DL")
(find-rurima "== Instance Methods" "= reopen String" "refm/api/src/dl/dl1/DL")
(find-rurima "--- to_ptr    -> DL::PtrData" "== Instance Methods" "= reopen String" "refm/api/src/dl/dl1/DL")
(find-rurima "= reopen Array" "refm/api/src/dl/dl1/DL")
(find-rurima "== Instance Methods" "= reopen Array" "refm/api/src/dl/dl1/DL")
(find-rurima "--- to_ptr          -> nil | DL::PtrData " "== Instance Methods" "= reopen Array" "refm/api/src/dl/dl1/DL")
(find-rurima "--- to_ptr(type)    -> nil | DL::PtrData" "== Instance Methods" "= reopen Array" "refm/api/src/dl/dl1/DL")
(find-rurima "= reopen IO" "refm/api/src/dl/dl1/DL")
(find-rurima "== Instance Methods" "= reopen IO" "refm/api/src/dl/dl1/DL")
(find-rurima "--- to_ptr    -> DL::PtrData" "== Instance Methods" "= reopen IO" "refm/api/src/dl/dl1/DL")
(find-rurima "= module DL::Importable" "refm/api/src/dl/dl1/import.rd")
(find-rurima "== Instance Methods" "= module DL::Importable" "refm/api/src/dl/dl1/import.rd")
(find-rurima "--- dlload(*lib)    -> ()" "== Instance Methods" "= module DL::Importable" "refm/api/src/dl/dl1/import.rd")
(find-rurima "--- dllink(*lib)    -> ()" "== Instance Methods" "= module DL::Importable" "refm/api/src/dl/dl1/import.rd")
(find-rurima "--- extern(proto)    -> DL::Symbol" "== Instance Methods" "= module DL::Importable" "refm/api/src/dl/dl1/import.rd")
(find-rurima "--- callback(proto)    -> DL::Symbol" "== Instance Methods" "= module DL::Importable" "refm/api/src/dl/dl1/import.rd")
(find-rurima "--- typealias(newtype, oldtype)    -> ()" "== Instance Methods" "= module DL::Importable" "refm/api/src/dl/dl1/import.rd")
(find-rurima "--- symbol(sym)    -> DL::PtrData" "== Instance Methods" "= module DL::Importable" "refm/api/src/dl/dl1/import.rd")
(find-rurima "--- symbol(func, typespec)    -> DL::Symbol " "== Instance Methods" "= module DL::Importable" "refm/api/src/dl/dl1/import.rd")
(find-rurima "--- [](func)    -> nil |  DL::Symbol | DL::PtrData" "== Instance Methods" "= module DL::Importable" "refm/api/src/dl/dl1/import.rd")
(find-rurima "--- import(sym, rettype, argtypes = nil)    -> DL::Symbol" "== Instance Methods" "= module DL::Importable" "refm/api/src/dl/dl1/import.rd")
(find-rurima "--- _args_ -> [object]" "== Instance Methods" "= module DL::Importable" "refm/api/src/dl/dl1/import.rd")
(find-rurima "--- _retval_ -> object" "== Instance Methods" "= module DL::Importable" "refm/api/src/dl/dl1/import.rd")
(find-rurima "== Constants" "= module DL::Importable" "refm/api/src/dl/dl1/import.rd")
(find-rurima "--- LIB_MAP" "== Constants" "= module DL::Importable" "refm/api/src/dl/dl1/import.rd")
(find-rurima "= class DL::Symbol < Object" "refm/api/src/dl/dl1/Symbol")
(find-rurima "== Class Methods" "= class DL::Symbol < Object" "refm/api/src/dl/dl1/Symbol")
(find-rurima "--- new(addr, type = nil, name = nil)    -> DL::Symbol " "== Class Methods" "= class DL::Symbol < Object" "refm/api/src/dl/dl1/Symbol")
(find-rurima "--- char2type(char)    -> String | nil" "== Class Methods" "= class DL::Symbol < Object" "refm/api/src/dl/dl1/Symbol")
(find-rurima "== Instance Methods" "= class DL::Symbol < Object" "refm/api/src/dl/dl1/Symbol")
(find-rurima "--- proto    -> String" "== Instance Methods" "= class DL::Symbol < Object" "refm/api/src/dl/dl1/Symbol")
(find-rurima "--- name    -> String" "== Instance Methods" "= class DL::Symbol < Object" "refm/api/src/dl/dl1/Symbol")
(find-rurima "--- cproto    -> String" "== Instance Methods" "= class DL::Symbol < Object" "refm/api/src/dl/dl1/Symbol")
(find-rurima "--- to_s      -> String" "== Instance Methods" "= class DL::Symbol < Object" "refm/api/src/dl/dl1/Symbol")
(find-rurima "--- inspect    -> String" "== Instance Methods" "= class DL::Symbol < Object" "refm/api/src/dl/dl1/Symbol")
(find-rurima "--- call(*args)    -> object" "== Instance Methods" "= class DL::Symbol < Object" "refm/api/src/dl/dl1/Symbol")
(find-rurima "--- [](*args)      -> object" "== Instance Methods" "= class DL::Symbol < Object" "refm/api/src/dl/dl1/Symbol")
(find-rurima "--- to_i    -> Integer" "== Instance Methods" "= class DL::Symbol < Object" "refm/api/src/dl/dl1/Symbol")
(find-rurima "--- to_ptr    -> DL::PtrData" "== Instance Methods" "= class DL::Symbol < Object" "refm/api/src/dl/dl1/Symbol")
(find-rurima "= module FileUtils" "refm/api/src/fileutils.rd")
(find-rurima "====[a:options] オプションの説明" "= module FileUtils" "refm/api/src/fileutils.rd")
(find-rurima "== Module Functions" "= module FileUtils" "refm/api/src/fileutils.rd")
(find-rurima "--- cd(dir, options = {})                   -> nil" "== Module Functions" "= module FileUtils" "refm/api/src/fileutils.rd")
(find-rurima "--- cd(dir, options = {}) {|dir| .... }     -> nil" "== Module Functions" "= module FileUtils" "refm/api/src/fileutils.rd")
(find-rurima "--- chdir(dir, options = {})                -> nil" "== Module Functions" "= module FileUtils" "refm/api/src/fileutils.rd")
(find-rurima "--- chdir(dir, options = {}) {|dir| .... }  -> nil" "== Module Functions" "= module FileUtils" "refm/api/src/fileutils.rd")
(find-rurima "--- chmod(mode, list, options = {}) -> Array" "== Module Functions" "= module FileUtils" "refm/api/src/fileutils.rd")
(find-rurima "--- chmod_R(mode, list, options = {}) -> Array" "== Module Functions" "= module FileUtils" "refm/api/src/fileutils.rd")
(find-rurima "--- chown(user, group, list, options = {}) -> Array" "== Module Functions" "= module FileUtils" "refm/api/src/fileutils.rd")
(find-rurima "--- chown_R(user, group, list, options = {}) -> Array" "== Module Functions" "= module FileUtils" "refm/api/src/fileutils.rd")
(find-rurima "--- cmp(file_a, file_b)          -> bool" "== Module Functions" "= module FileUtils" "refm/api/src/fileutils.rd")
(find-rurima "--- compare_file(file_a, file_b) -> bool" "== Module Functions" "= module FileUtils" "refm/api/src/fileutils.rd")
(find-rurima "--- identical?(file_a, file_b)   -> bool" "== Module Functions" "= module FileUtils" "refm/api/src/fileutils.rd")
(find-rurima "--- compare_stream(io_a, io_b) -> bool" "== Module Functions" "= module FileUtils" "refm/api/src/fileutils.rd")
(find-rurima "--- copy_entry(src, dest, preserve = false, dereference_root = false) -> ()" "== Module Functions" "= module FileUtils" "refm/api/src/fileutils.rd")
(find-rurima "--- copy_file(src, dest, preserve = false, dereference_root = true) -> ()" "== Module Functions" "= module FileUtils" "refm/api/src/fileutils.rd")
(find-rurima "--- copy_stream(src, dest) -> ()" "== Module Functions" "= module FileUtils" "refm/api/src/fileutils.rd")
(find-rurima "--- cp(src, dest, options = {})   -> ()" "== Module Functions" "= module FileUtils" "refm/api/src/fileutils.rd")
(find-rurima "--- copy(src, dest, options = {}) -> ()" "== Module Functions" "= module FileUtils" "refm/api/src/fileutils.rd")
(find-rurima "--- cp_r(src, dest, options = {}) -> ()" "== Module Functions" "= module FileUtils" "refm/api/src/fileutils.rd")
(find-rurima "--- install(src, dest, options = {}) -> ()" "== Module Functions" "= module FileUtils" "refm/api/src/fileutils.rd")
(find-rurima "--- ln(src, dest, options = {})   -> ()" "== Module Functions" "= module FileUtils" "refm/api/src/fileutils.rd")
(find-rurima "--- link(src, dest, options = {}) -> ()" "== Module Functions" "= module FileUtils" "refm/api/src/fileutils.rd")
(find-rurima "--- ln_s(src, dest, options = {})    -> ()" "== Module Functions" "= module FileUtils" "refm/api/src/fileutils.rd")
(find-rurima "--- symlink(src, dest, options = {}) -> ()" "== Module Functions" "= module FileUtils" "refm/api/src/fileutils.rd")
(find-rurima "--- ln_sf(src, dest, options = {}) -> ()" "== Module Functions" "= module FileUtils" "refm/api/src/fileutils.rd")
(find-rurima "--- mkdir(dir, options = {}) -> ()" "== Module Functions" "= module FileUtils" "refm/api/src/fileutils.rd")
(find-rurima "--- mkdir_p(list, options = {})  -> String | Array" "== Module Functions" "= module FileUtils" "refm/api/src/fileutils.rd")
(find-rurima "--- mkpath(list, options = {})   -> String | Array" "== Module Functions" "= module FileUtils" "refm/api/src/fileutils.rd")
(find-rurima "--- makedirs(list, options = {}) -> String | Array" "== Module Functions" "= module FileUtils" "refm/api/src/fileutils.rd")
(find-rurima "--- mv(src, dest, options = {})   -> ()" "== Module Functions" "= module FileUtils" "refm/api/src/fileutils.rd")
(find-rurima "--- move(src, dest, options = {}) -> ()" "== Module Functions" "= module FileUtils" "refm/api/src/fileutils.rd")
(find-rurima "--- pwd   -> String" "== Module Functions" "= module FileUtils" "refm/api/src/fileutils.rd")
(find-rurima "--- getwd -> String" "== Module Functions" "= module FileUtils" "refm/api/src/fileutils.rd")
(find-rurima "--- rm(list, options = {})     -> ()" "== Module Functions" "= module FileUtils" "refm/api/src/fileutils.rd")
(find-rurima "--- remove(list, options = {}) -> ()" "== Module Functions" "= module FileUtils" "refm/api/src/fileutils.rd")
(find-rurima "--- rm_f(list, options = {})        -> ()" "== Module Functions" "= module FileUtils" "refm/api/src/fileutils.rd")
(find-rurima "--- safe_unlink(list, options = {}) -> ()" "== Module Functions" "= module FileUtils" "refm/api/src/fileutils.rd")
(find-rurima "--- rm_r(list, options = {}) -> ()" "== Module Functions" "= module FileUtils" "refm/api/src/fileutils.rd")
(find-rurima "==== 注意" "== Module Functions" "= module FileUtils" "refm/api/src/fileutils.rd")
(find-rurima "--- rm_rf(list, options = {})  -> ()" "==== 注意" "== Module Functions" "= module FileUtils" "refm/api/src/fileutils.rd")
(find-rurima "--- rmtree(list, options = {}) -> ()" "==== 注意" "== Module Functions" "= module FileUtils" "refm/api/src/fileutils.rd")
(find-rurima "==== 注意" "== Module Functions" "= module FileUtils" "refm/api/src/fileutils.rd")
(find-rurima "--- rmdir(dir, options = {}) -> ()" "==== 注意" "== Module Functions" "= module FileUtils" "refm/api/src/fileutils.rd")
(find-rurima "--- remove_entry(path, force = false)" "==== 注意" "== Module Functions" "= module FileUtils" "refm/api/src/fileutils.rd")
(find-rurima "--- remove_entry_secure(path, force = false) -> ()" "==== 注意" "== Module Functions" "= module FileUtils" "refm/api/src/fileutils.rd")
(find-rurima "--- remove_file(path, force = false) -> ()" "==== 注意" "== Module Functions" "= module FileUtils" "refm/api/src/fileutils.rd")
(find-rurima "--- remove_dir(path, force = false) -> ()" "==== 注意" "== Module Functions" "= module FileUtils" "refm/api/src/fileutils.rd")
(find-rurima "--- touch(list, options = {}) -> ()" "==== 注意" "== Module Functions" "= module FileUtils" "refm/api/src/fileutils.rd")
(find-rurima "--- uptodate?(newer, older_list, options = nil) -> bool" "==== 注意" "== Module Functions" "= module FileUtils" "refm/api/src/fileutils.rd")
(find-rurima "== Singleton Methods" "= module FileUtils" "refm/api/src/fileutils.rd")
(find-rurima "--- collect_method(opt) -> Array" "== Singleton Methods" "= module FileUtils" "refm/api/src/fileutils.rd")
(find-rurima "--- commands -> Array" "== Singleton Methods" "= module FileUtils" "refm/api/src/fileutils.rd")
(find-rurima "--- have_option?(mid, opt) -> bool" "== Singleton Methods" "= module FileUtils" "refm/api/src/fileutils.rd")
(find-rurima "--- options -> Array" "== Singleton Methods" "= module FileUtils" "refm/api/src/fileutils.rd")
(find-rurima "--- options_of(mid) -> Array" "== Singleton Methods" "= module FileUtils" "refm/api/src/fileutils.rd")
(find-rurima "== Constants" "= module FileUtils" "refm/api/src/fileutils.rd")
(find-rurima "--- METHODS -> Array" "== Constants" "= module FileUtils" "refm/api/src/fileutils.rd")
(find-rurima "--- OPT_TABLE -> Hash" "== Constants" "= module FileUtils" "refm/api/src/fileutils.rd")
(find-rurima "= module FileUtils::Verbose" "refm/api/src/fileutils.rd")
(find-rurima "= module FileUtils::NoWrite" "refm/api/src/fileutils.rd")
(find-rurima "= module FileUtils::DryRun" "refm/api/src/fileutils.rd")
(find-rurima "= reopen IO" "refm/api/src/expect.rd")
(find-rurima "== Instance Methods" "= reopen IO" "refm/api/src/expect.rd")
(find-rurima "--- expect(pattern, timeout = 9999999) -> Array | nil" "== Instance Methods" "= reopen IO" "refm/api/src/expect.rd")
(find-rurima "--- expect(pattern, timeout = 9999999){|array| ... } -> nil" "== Instance Methods" "= reopen IO" "refm/api/src/expect.rd")
(find-rurima "=== WEBrick の概要" "refm/api/src/webrick.rd")
(find-rurima "= module WEBrick" "refm/api/src/webrick.rd")
(find-rurima "== Constants" "= module WEBrick" "refm/api/src/webrick.rd")
(find-rurima "--- VERSION" "== Constants" "= module WEBrick" "refm/api/src/webrick.rd")
(find-rurima "=== 使用方法" "refm/api/src/base64.rd")
(find-rurima "=== 使用方法" "refm/api/src/base64.rd")
(find-rurima "= module NKF" "refm/api/src/nkf.rd")
(find-rurima "=== 使い方" "= module NKF" "refm/api/src/nkf.rd")
(find-rurima "=== オプション文字列" "= module NKF" "refm/api/src/nkf.rd")
(find-rurima "==== Ruby 1.8.2 以降" "=== オプション文字列" "= module NKF" "refm/api/src/nkf.rd")
(find-rurima "==== Ruby 1.8.2 より前のバージョン" "=== オプション文字列" "= module NKF" "refm/api/src/nkf.rd")
(find-rurima "=== BUGS" "= module NKF" "refm/api/src/nkf.rd")
(find-rurima "=== 参考" "= module NKF" "refm/api/src/nkf.rd")
(find-rurima "== Module Functions" "= module NKF" "refm/api/src/nkf.rd")
(find-rurima "--- nkf(opt, str) -> String" "== Module Functions" "= module NKF" "refm/api/src/nkf.rd")
(find-rurima "=== 注意" "== Module Functions" "= module NKF" "refm/api/src/nkf.rd")
(find-rurima "--- guess(str) -> Integer" "=== 注意" "== Module Functions" "= module NKF" "refm/api/src/nkf.rd")
(find-rurima "--- guess(str) -> Encoding" "=== 注意" "== Module Functions" "= module NKF" "refm/api/src/nkf.rd")
(find-rurima "--- guess1(str) -> Integer" "=== 注意" "== Module Functions" "= module NKF" "refm/api/src/nkf.rd")
(find-rurima "--- guess2(str) -> Integer" "=== 注意" "== Module Functions" "= module NKF" "refm/api/src/nkf.rd")
(find-rurima "== Constants" "= module NKF" "refm/api/src/nkf.rd")
(find-rurima "--- JIS -> Integer" "== Constants" "= module NKF" "refm/api/src/nkf.rd")
(find-rurima "--- JIS -> Encoding" "== Constants" "= module NKF" "refm/api/src/nkf.rd")
(find-rurima "--- EUC -> Integer" "== Constants" "= module NKF" "refm/api/src/nkf.rd")
(find-rurima "--- EUC -> Encoding" "== Constants" "= module NKF" "refm/api/src/nkf.rd")
(find-rurima "--- SJIS -> Integer" "== Constants" "= module NKF" "refm/api/src/nkf.rd")
(find-rurima "--- SJIS -> Encoding" "== Constants" "= module NKF" "refm/api/src/nkf.rd")
(find-rurima "--- BINARY -> Integer" "== Constants" "= module NKF" "refm/api/src/nkf.rd")
(find-rurima "--- BINARY -> Encoding" "== Constants" "= module NKF" "refm/api/src/nkf.rd")
(find-rurima "--- UNKNOWN -> Integer" "== Constants" "= module NKF" "refm/api/src/nkf.rd")
(find-rurima "--- UNKNOWN -> nil" "== Constants" "= module NKF" "refm/api/src/nkf.rd")
(find-rurima "--- NOCONV -> Integer" "== Constants" "= module NKF" "refm/api/src/nkf.rd")
(find-rurima "--- NOCONV -> nil" "== Constants" "= module NKF" "refm/api/src/nkf.rd")
(find-rurima "--- AUTO -> Integer" "== Constants" "= module NKF" "refm/api/src/nkf.rd")
(find-rurima "--- AUTO -> nil" "== Constants" "= module NKF" "refm/api/src/nkf.rd")
(find-rurima "--- ASCII -> Integer" "== Constants" "= module NKF" "refm/api/src/nkf.rd")
(find-rurima "--- ASCII -> Encoding" "== Constants" "= module NKF" "refm/api/src/nkf.rd")
(find-rurima "--- UTF8 -> Integer" "== Constants" "= module NKF" "refm/api/src/nkf.rd")
(find-rurima "--- UTF8 -> Encoding" "== Constants" "= module NKF" "refm/api/src/nkf.rd")
(find-rurima "--- UTF16 -> Integer" "== Constants" "= module NKF" "refm/api/src/nkf.rd")
(find-rurima "--- UTF16 -> Encoding" "== Constants" "= module NKF" "refm/api/src/nkf.rd")
(find-rurima "--- UTF32 -> Integer" "== Constants" "= module NKF" "refm/api/src/nkf.rd")
(find-rurima "--- UTF32 -> Encoding" "== Constants" "= module NKF" "refm/api/src/nkf.rd")
(find-rurima "--- VERSION -> String" "== Constants" "= module NKF" "refm/api/src/nkf.rd")
(find-rurima "--- NKF_VERSION -> String" "== Constants" "= module NKF" "refm/api/src/nkf.rd")
(find-rurima "--- NKF_RELEASE_DATE -> String" "== Constants" "= module NKF" "refm/api/src/nkf.rd")
(find-rurima "--- REVISION -> String" "== Constants" "= module NKF" "refm/api/src/nkf.rd")
(find-rurima "=== Overview" "refm/api/src/psych.rd")
(find-rurima "=== I NEED TO PARSE OR EMIT YAML RIGHT NOW!" "refm/api/src/psych.rd")
(find-rurima "==== YAML Parsing" "=== I NEED TO PARSE OR EMIT YAML RIGHT NOW!" "refm/api/src/psych.rd")
(find-rurima "===== Low level parsing" "==== YAML Parsing" "=== I NEED TO PARSE OR EMIT YAML RIGHT NOW!" "refm/api/src/psych.rd")
(find-rurima "===== Mid level parsing" "==== YAML Parsing" "=== I NEED TO PARSE OR EMIT YAML RIGHT NOW!" "refm/api/src/psych.rd")
(find-rurima "===== High level parsing" "==== YAML Parsing" "=== I NEED TO PARSE OR EMIT YAML RIGHT NOW!" "refm/api/src/psych.rd")
(find-rurima "==== YAML Emitting" "=== I NEED TO PARSE OR EMIT YAML RIGHT NOW!" "refm/api/src/psych.rd")
(find-rurima "===== Low level emitting" "==== YAML Emitting" "=== I NEED TO PARSE OR EMIT YAML RIGHT NOW!" "refm/api/src/psych.rd")
(find-rurima "===== Mid level emitting" "==== YAML Emitting" "=== I NEED TO PARSE OR EMIT YAML RIGHT NOW!" "refm/api/src/psych.rd")
(find-rurima "===== High level emitting" "==== YAML Emitting" "=== I NEED TO PARSE OR EMIT YAML RIGHT NOW!" "refm/api/src/psych.rd")
(find-rurima "= module Psych" "refm/api/src/psych.rd")
(find-rurima "== Constants" "= module Psych" "refm/api/src/psych.rd")
(find-rurima "--- VERSION -> String" "== Constants" "= module Psych" "refm/api/src/psych.rd")
(find-rurima "--- LIBYAML_VERSION -> String" "== Constants" "= module Psych" "refm/api/src/psych.rd")
(find-rurima "== Class Methods" "= module Psych" "refm/api/src/psych.rd")
(find-rurima "--- libyaml_version" "== Class Methods" "= module Psych" "refm/api/src/psych.rd")
(find-rurima "--- load(yaml) -> object" "== Class Methods" "= module Psych" "refm/api/src/psych.rd")
(find-rurima "--- parse(yaml) -> object" "== Class Methods" "= module Psych" "refm/api/src/psych.rd")
(find-rurima "--- parse_file(filename) -> object" "== Class Methods" "= module Psych" "refm/api/src/psych.rd")
(find-rurima "--- parser -> Psych::Parser" "== Class Methods" "= module Psych" "refm/api/src/psych.rd")
(find-rurima "--- parse_stream(yaml)" "== Class Methods" "= module Psych" "refm/api/src/psych.rd")
(find-rurima "--- dump(o, io = nil, options = {})" "== Class Methods" "= module Psych" "refm/api/src/psych.rd")
(find-rurima "--- dump_stream(*objects)" "== Class Methods" "= module Psych" "refm/api/src/psych.rd")
(find-rurima "--- to_json(o) -> String" "== Class Methods" "= module Psych" "refm/api/src/psych.rd")
(find-rurima "--- load_stream(yaml)" "== Class Methods" "= module Psych" "refm/api/src/psych.rd")
(find-rurima "--- load_file(filename)" "== Class Methods" "= module Psych" "refm/api/src/psych.rd")
(find-rurima "+filename+ as a ruby object" "== Class Methods" "= module Psych" "refm/api/src/psych.rd")
(find-rurima "= class Psych::Exception < RuntimeError" "refm/api/src/psych.rd")
(find-rurima "= class Psych::Parser" "refm/api/src/psych.rd")
(find-rurima "== Constants" "= class Psych::Parser" "refm/api/src/psych.rd")
(find-rurima "--- ANY" "== Constants" "= class Psych::Parser" "refm/api/src/psych.rd")
(find-rurima "--- UTF8" "== Constants" "= class Psych::Parser" "refm/api/src/psych.rd")
(find-rurima "--- UTF16LE" "== Constants" "= class Psych::Parser" "refm/api/src/psych.rd")
(find-rurima "--- UTF16BE" "== Constants" "= class Psych::Parser" "refm/api/src/psych.rd")
(find-rurima "== Instance Methods" "= class Psych::Parser" "refm/api/src/psych.rd")
(find-rurima "--- parse(yaml)" "== Instance Methods" "= class Psych::Parser" "refm/api/src/psych.rd")
(find-rurima "--- mark -> Psych::Parser::Mark" "== Instance Methods" "= class Psych::Parser" "refm/api/src/psych.rd")
(find-rurima "--- external_encoding=(encoding)" "== Instance Methods" "= class Psych::Parser" "refm/api/src/psych.rd")
(find-rurima "= class Psych::Handler" "refm/api/src/psych.rd")
(find-rurima "= class Psych::Emitter < Psych::Handler" "refm/api/src/psych.rd")
(find-rurima "== Class Methods" "= class Psych::Emitter < Psych::Handler" "refm/api/src/psych.rd")
(find-rurima "--- new(io) -> Psych::Emitter" "== Class Methods" "= class Psych::Emitter < Psych::Handler" "refm/api/src/psych.rd")
(find-rurima "== Instance Methods" "= class Psych::Emitter < Psych::Handler" "refm/api/src/psych.rd")
(find-rurima "--- start_stream(encoding) -> Psych::Emitter" "== Instance Methods" "= class Psych::Emitter < Psych::Handler" "refm/api/src/psych.rd")
(find-rurima "--- end_stream -> Psych::Emitter" "== Instance Methods" "= class Psych::Emitter < Psych::Handler" "refm/api/src/psych.rd")
(find-rurima "--- start_document(version, tags, implicit) -> Psych::Emitter" "== Instance Methods" "= class Psych::Emitter < Psych::Handler" "refm/api/src/psych.rd")
(find-rurima "--- end_document(implicit) -> Psych::Emitter" "== Instance Methods" "= class Psych::Emitter < Psych::Handler" "refm/api/src/psych.rd")
(find-rurima "--- scalar(value, anchor, tag, plain, quoted, style) -> Psych::Emitter" "== Instance Methods" "= class Psych::Emitter < Psych::Handler" "refm/api/src/psych.rd")
(find-rurima "--- start_sequence(anchor, tag, implicit, style) -> Psych::Emitter" "== Instance Methods" "= class Psych::Emitter < Psych::Handler" "refm/api/src/psych.rd")
(find-rurima "--- end_sequence -> Psych::Emitter" "== Instance Methods" "= class Psych::Emitter < Psych::Handler" "refm/api/src/psych.rd")
(find-rurima "--- start_mapping(anchor, tag, implicit, style) -> Psych::Emitter" "== Instance Methods" "= class Psych::Emitter < Psych::Handler" "refm/api/src/psych.rd")
(find-rurima "--- end_mapping -> Psych::Emitter" "== Instance Methods" "= class Psych::Emitter < Psych::Handler" "refm/api/src/psych.rd")
(find-rurima "--- alias(anchor) -> Psych::Emitter" "== Instance Methods" "= class Psych::Emitter < Psych::Handler" "refm/api/src/psych.rd")
(find-rurima "--- canonical -> bool" "== Instance Methods" "= class Psych::Emitter < Psych::Handler" "refm/api/src/psych.rd")
(find-rurima "--- canonical=(bool)" "== Instance Methods" "= class Psych::Emitter < Psych::Handler" "refm/api/src/psych.rd")
(find-rurima "--- indentation -> Integer" "== Instance Methods" "= class Psych::Emitter < Psych::Handler" "refm/api/src/psych.rd")
(find-rurima "--- indentation=(level)" "== Instance Methods" "= class Psych::Emitter < Psych::Handler" "refm/api/src/psych.rd")
(find-rurima "--- line_width -> Integer" "== Instance Methods" "= class Psych::Emitter < Psych::Handler" "refm/api/src/psych.rd")
(find-rurima "--- line_width=(width)" "== Instance Methods" "= class Psych::Emitter < Psych::Handler" "refm/api/src/psych.rd")
(find-rurima "= module TkMacResource" "refm/api/src/tk/macpkg/TkMacResource")
(find-rurima "== Constants" "= module TkMacResource" "refm/api/src/tk/macpkg/TkMacResource")
(find-rurima "--- TkCommandNames" "== Constants" "= module TkMacResource" "refm/api/src/tk/macpkg/TkMacResource")
(find-rurima "--- PACKAGE_NAME" "== Constants" "= module TkMacResource" "refm/api/src/tk/macpkg/TkMacResource")
(find-rurima "== Class Methods" "= module TkMacResource" "refm/api/src/tk/macpkg/TkMacResource")
(find-rurima "--- package_name" "== Class Methods" "= module TkMacResource" "refm/api/src/tk/macpkg/TkMacResource")
(find-rurima "--- close(rsrcRef)" "== Class Methods" "= module TkMacResource" "refm/api/src/tk/macpkg/TkMacResource")
(find-rurima "--- delete(rsrcType, opts = nil)" "== Class Methods" "= module TkMacResource" "refm/api/src/tk/macpkg/TkMacResource")
(find-rurima "--- files(rsrcRef = nil)" "== Class Methods" "= module TkMacResource" "refm/api/src/tk/macpkg/TkMacResource")
(find-rurima "--- list(rsrcType, rsrcRef = nil)" "== Class Methods" "= module TkMacResource" "refm/api/src/tk/macpkg/TkMacResource")
(find-rurima "--- open(fname, access = nil)" "== Class Methods" "= module TkMacResource" "refm/api/src/tk/macpkg/TkMacResource")
(find-rurima "--- read(rsrcType, rsrcID, rsrcRef = nil)" "== Class Methods" "= module TkMacResource" "refm/api/src/tk/macpkg/TkMacResource")
(find-rurima "--- types(rsrcRef = nil)" "== Class Methods" "= module TkMacResource" "refm/api/src/tk/macpkg/TkMacResource")
(find-rurima "--- write(rsrcType, data, opts = nil)" "== Class Methods" "= module TkMacResource" "refm/api/src/tk/macpkg/TkMacResource")
(find-rurima "== Instance Methods" "= module TkMacResource" "refm/api/src/tk/macpkg/TkMacResource")
(find-rurima "--- close(rsrcRef)" "== Instance Methods" "= module TkMacResource" "refm/api/src/tk/macpkg/TkMacResource")
(find-rurima "--- delete(rsrcType, opts = nil)" "== Instance Methods" "= module TkMacResource" "refm/api/src/tk/macpkg/TkMacResource")
(find-rurima "--- files(rsrcRef = nil)" "== Instance Methods" "= module TkMacResource" "refm/api/src/tk/macpkg/TkMacResource")
(find-rurima "--- list(rsrcType, rsrcRef = nil)" "== Instance Methods" "= module TkMacResource" "refm/api/src/tk/macpkg/TkMacResource")
(find-rurima "--- open(fname, access = nil)" "== Instance Methods" "= module TkMacResource" "refm/api/src/tk/macpkg/TkMacResource")
(find-rurima "--- read(rsrcType, rsrcID, rsrcRef = nil)" "== Instance Methods" "= module TkMacResource" "refm/api/src/tk/macpkg/TkMacResource")
(find-rurima "--- types(rsrcRef = nil)" "== Instance Methods" "= module TkMacResource" "refm/api/src/tk/macpkg/TkMacResource")
(find-rurima "--- write(rsrcType, data, opts = nil)" "== Instance Methods" "= module TkMacResource" "refm/api/src/tk/macpkg/TkMacResource")
(find-rurima "= class TkTextWin < TkWindow" "refm/api/src/tk/txtwin_abst/TkTextWin")
(find-rurima "== Instance Methods" "= class TkTextWin < TkWindow" "refm/api/src/tk/txtwin_abst/TkTextWin")
(find-rurima "--- bbox(index)" "== Instance Methods" "= class TkTextWin < TkWindow" "refm/api/src/tk/txtwin_abst/TkTextWin")
(find-rurima "--- delete(first, last = Tk::None)" "== Instance Methods" "= class TkTextWin < TkWindow" "refm/api/src/tk/txtwin_abst/TkTextWin")
(find-rurima "--- get(*index)" "== Instance Methods" "= class TkTextWin < TkWindow" "refm/api/src/tk/txtwin_abst/TkTextWin")
(find-rurima "--- insert(index, *args)" "== Instance Methods" "= class TkTextWin < TkWindow" "refm/api/src/tk/txtwin_abst/TkTextWin")
(find-rurima "--- scan_mark(x, y)" "== Instance Methods" "= class TkTextWin < TkWindow" "refm/api/src/tk/txtwin_abst/TkTextWin")
(find-rurima "--- scan_dragto(x, y)" "== Instance Methods" "= class TkTextWin < TkWindow" "refm/api/src/tk/txtwin_abst/TkTextWin")
(find-rurima "--- see(index)" "== Instance Methods" "= class TkTextWin < TkWindow" "refm/api/src/tk/txtwin_abst/TkTextWin")
(find-rurima "--- create_self" "== Instance Methods" "= class TkTextWin < TkWindow" "refm/api/src/tk/txtwin_abst/TkTextWin")
(find-rurima "== Constants" "= class TkTextWin < TkWindow" "refm/api/src/tk/txtwin_abst/TkTextWin")
(find-rurima "--- TkCommnadNames" "== Constants" "= class TkTextWin < TkWindow" "refm/api/src/tk/txtwin_abst/TkTextWin")
(find-rurima "= module TkListItemConfig" "refm/api/src/tk/listbox/TkListItemConfig")
(find-rurima "= class TkListbox < TkTextWin" "refm/api/src/tk/listbox/TkListbox")
(find-rurima "== Instance Methods" "= class TkListbox < TkTextWin" "refm/api/src/tk/listbox/TkListbox")
(find-rurima "--- tagid(id)" "== Instance Methods" "= class TkListbox < TkTextWin" "refm/api/src/tk/listbox/TkListbox")
(find-rurima "--- activate(y)" "== Instance Methods" "= class TkListbox < TkTextWin" "refm/api/src/tk/listbox/TkListbox")
(find-rurima "--- curselection" "== Instance Methods" "= class TkListbox < TkTextWin" "refm/api/src/tk/listbox/TkListbox")
(find-rurima "--- get(index)" "== Instance Methods" "= class TkListbox < TkTextWin" "refm/api/src/tk/listbox/TkListbox")
(find-rurima "--- get(first, last)" "== Instance Methods" "= class TkListbox < TkTextWin" "refm/api/src/tk/listbox/TkListbox")
(find-rurima "--- nearest(y)" "== Instance Methods" "= class TkListbox < TkTextWin" "refm/api/src/tk/listbox/TkListbox")
(find-rurima "--- size" "== Instance Methods" "= class TkListbox < TkTextWin" "refm/api/src/tk/listbox/TkListbox")
(find-rurima "--- selection_anchor(index)" "== Instance Methods" "= class TkListbox < TkTextWin" "refm/api/src/tk/listbox/TkListbox")
(find-rurima "--- selection_clear(first, last = Tk::None)" "== Instance Methods" "= class TkListbox < TkTextWin" "refm/api/src/tk/listbox/TkListbox")
(find-rurima "--- selection_includes(index)" "== Instance Methods" "= class TkListbox < TkTextWin" "refm/api/src/tk/listbox/TkListbox")
(find-rurima "--- selection_set(first, last = Tk::None)" "== Instance Methods" "= class TkListbox < TkTextWin" "refm/api/src/tk/listbox/TkListbox")
(find-rurima "--- index(idx)" "== Instance Methods" "= class TkListbox < TkTextWin" "refm/api/src/tk/listbox/TkListbox")
(find-rurima "--- value" "== Instance Methods" "= class TkListbox < TkTextWin" "refm/api/src/tk/listbox/TkListbox")
(find-rurima "--- value=(vals)" "== Instance Methods" "= class TkListbox < TkTextWin" "refm/api/src/tk/listbox/TkListbox")
(find-rurima "--- clear" "== Instance Methods" "= class TkListbox < TkTextWin" "refm/api/src/tk/listbox/TkListbox")
(find-rurima "--- erase" "== Instance Methods" "= class TkListbox < TkTextWin" "refm/api/src/tk/listbox/TkListbox")
(find-rurima "--- create_self(keys)" "== Instance Methods" "= class TkListbox < TkTextWin" "refm/api/src/tk/listbox/TkListbox")
(find-rurima "--- itemcget(index, key)" "== Instance Methods" "= class TkListbox < TkTextWin" "refm/api/src/tk/listbox/TkListbox")
(find-rurima "--- itemconfigure(index, key, val = Tk::None)" "== Instance Methods" "= class TkListbox < TkTextWin" "refm/api/src/tk/listbox/TkListbox")
(find-rurima "--- itemconfiginfo(index, key = nil)" "== Instance Methods" "= class TkListbox < TkTextWin" "refm/api/src/tk/listbox/TkListbox")
(find-rurima "== Constants" "= class TkListbox < TkTextWin" "refm/api/src/tk/listbox/TkListbox")
(find-rurima "--- TkCommandNames" "== Constants" "= class TkListbox < TkTextWin" "refm/api/src/tk/listbox/TkListbox")
(find-rurima "--- WidgetClassName" "== Constants" "= class TkListbox < TkTextWin" "refm/api/src/tk/listbox/TkListbox")
(find-rurima "= module TkcTagAccess" "refm/api/src/tk/canvastag/TkcTagAccess")
(find-rurima "== Instance Methods" "= module TkcTagAccess" "refm/api/src/tk/canvastag/TkcTagAccess")
(find-rurima "--- &(tag)" "== Instance Methods" "= module TkcTagAccess" "refm/api/src/tk/canvastag/TkcTagAccess")
(find-rurima "--- -@" "== Instance Methods" "= module TkcTagAccess" "refm/api/src/tk/canvastag/TkcTagAccess")
(find-rurima "--- ^(tag)" "== Instance Methods" "= module TkcTagAccess" "refm/api/src/tk/canvastag/TkcTagAccess")
(find-rurima "--- addtag(tag)" "== Instance Methods" "= module TkcTagAccess" "refm/api/src/tk/canvastag/TkcTagAccess")
(find-rurima "--- bbox" "== Instance Methods" "= module TkcTagAccess" "refm/api/src/tk/canvastag/TkcTagAccess")
(find-rurima "--- bind(seq, *args)" "== Instance Methods" "= module TkcTagAccess" "refm/api/src/tk/canvastag/TkcTagAccess")
(find-rurima "--- bind_append(seq, *args)" "== Instance Methods" "= module TkcTagAccess" "refm/api/src/tk/canvastag/TkcTagAccess")
(find-rurima "--- bind_remove(seq)" "== Instance Methods" "= module TkcTagAccess" "refm/api/src/tk/canvastag/TkcTagAccess")
(find-rurima "--- bindinfo(seq = nil)" "== Instance Methods" "= module TkcTagAccess" "refm/api/src/tk/canvastag/TkcTagAccess")
(find-rurima "--- cget(option)" "== Instance Methods" "= module TkcTagAccess" "refm/api/src/tk/canvastag/TkcTagAccess")
(find-rurima "--- configinfo(key = nil)" "== Instance Methods" "= module TkcTagAccess" "refm/api/src/tk/canvastag/TkcTagAccess")
(find-rurima "--- configure(key, value = Tk::None)" "== Instance Methods" "= module TkcTagAccess" "refm/api/src/tk/canvastag/TkcTagAccess")
(find-rurima "--- coords(*args)" "== Instance Methods" "= module TkcTagAccess" "refm/api/src/tk/canvastag/TkcTagAccess")
(find-rurima "--- current_configinfo(key = nil)" "== Instance Methods" "= module TkcTagAccess" "refm/api/src/tk/canvastag/TkcTagAccess")
(find-rurima "--- dchars(first, last = Tk::None)" "== Instance Methods" "= module TkcTagAccess" "refm/api/src/tk/canvastag/TkcTagAccess")
(find-rurima "--- dtag(tag_to_del = Tk::None)" "== Instance Methods" "= module TkcTagAccess" "refm/api/src/tk/canvastag/TkcTagAccess")
(find-rurima "--- deltag(tag_to_del = Tk::None)" "== Instance Methods" "= module TkcTagAccess" "refm/api/src/tk/canvastag/TkcTagAccess")
(find-rurima "--- find" "== Instance Methods" "= module TkcTagAccess" "refm/api/src/tk/canvastag/TkcTagAccess")
(find-rurima "--- list" "== Instance Methods" "= module TkcTagAccess" "refm/api/src/tk/canvastag/TkcTagAccess")
(find-rurima "--- focus" "== Instance Methods" "= module TkcTagAccess" "refm/api/src/tk/canvastag/TkcTagAccess")
(find-rurima "--- gettags" "== Instance Methods" "= module TkcTagAccess" "refm/api/src/tk/canvastag/TkcTagAccess")
(find-rurima "--- icursor(index)" "== Instance Methods" "= module TkcTagAccess" "refm/api/src/tk/canvastag/TkcTagAccess")
(find-rurima "--- index(idx)" "== Instance Methods" "= module TkcTagAccess" "refm/api/src/tk/canvastag/TkcTagAccess")
(find-rurima "--- insert(beforethis, string)" "== Instance Methods" "= module TkcTagAccess" "refm/api/src/tk/canvastag/TkcTagAccess")
(find-rurima "--- itemtype" "== Instance Methods" "= module TkcTagAccess" "refm/api/src/tk/canvastag/TkcTagAccess")
(find-rurima "--- lower(belowthis = Tk::None)" "== Instance Methods" "= module TkcTagAccess" "refm/api/src/tk/canvastag/TkcTagAccess")
(find-rurima "--- move(xamount, yamount)" "== Instance Methods" "= module TkcTagAccess" "refm/api/src/tk/canvastag/TkcTagAccess")
(find-rurima "--- raise(abovethis = Tk::None)" "== Instance Methods" "= module TkcTagAccess" "refm/api/src/tk/canvastag/TkcTagAccess")
(find-rurima "--- scale(xorigin, yorigin, xscale, yscale)" "== Instance Methods" "= module TkcTagAccess" "refm/api/src/tk/canvastag/TkcTagAccess")
(find-rurima "--- select_adjust(index)" "== Instance Methods" "= module TkcTagAccess" "refm/api/src/tk/canvastag/TkcTagAccess")
(find-rurima "--- select_from(index)" "== Instance Methods" "= module TkcTagAccess" "refm/api/src/tk/canvastag/TkcTagAccess")
(find-rurima "--- select_to(index)" "== Instance Methods" "= module TkcTagAccess" "refm/api/src/tk/canvastag/TkcTagAccess")
(find-rurima "--- |(tag)" "== Instance Methods" "= module TkcTagAccess" "refm/api/src/tk/canvastag/TkcTagAccess")
(find-rurima "= class TkcTagAll < TkcTag" "refm/api/src/tk/canvastag/TkcTagAll")
(find-rurima "== Class Methods" "= class TkcTagAll < TkcTag" "refm/api/src/tk/canvastag/TkcTagAll")
(find-rurima "--- new(parent)" "== Class Methods" "= class TkcTagAll < TkcTag" "refm/api/src/tk/canvastag/TkcTagAll")
(find-rurima "= class TkcTagCurrent < TkcTag" "refm/api/src/tk/canvastag/TkcTagCurrent")
(find-rurima "== Class Methods" "= class TkcTagCurrent < TkcTag" "refm/api/src/tk/canvastag/TkcTagCurrent")
(find-rurima "--- new(parent)" "== Class Methods" "= class TkcTagCurrent < TkcTag" "refm/api/src/tk/canvastag/TkcTagCurrent")
(find-rurima "= class TkcGroup < TkcTag" "refm/api/src/tk/canvastag/TkcGroup")
(find-rurima "== Constants" "= class TkcGroup < TkcTag" "refm/api/src/tk/canvastag/TkcGroup")
(find-rurima "--- Tk_cGroup_ID" "== Constants" "= class TkcGroup < TkcTag" "refm/api/src/tk/canvastag/TkcGroup")
(find-rurima "== Class Methods" "= class TkcGroup < TkcTag" "refm/api/src/tk/canvastag/TkcGroup")
(find-rurima "--- new(parent, *args)" "== Class Methods" "= class TkcGroup < TkcTag" "refm/api/src/tk/canvastag/TkcGroup")
(find-rurima "== Instance Methods" "= class TkcGroup < TkcTag" "refm/api/src/tk/canvastag/TkcGroup")
(find-rurima "--- create_self(parent, *args)" "== Instance Methods" "= class TkcGroup < TkcTag" "refm/api/src/tk/canvastag/TkcGroup")
(find-rurima "--- exclude(*tags)" "== Instance Methods" "= class TkcGroup < TkcTag" "refm/api/src/tk/canvastag/TkcGroup")
(find-rurima "--- include(*tags)" "== Instance Methods" "= class TkcGroup < TkcTag" "refm/api/src/tk/canvastag/TkcGroup")
(find-rurima "--- add(*tags)" "== Instance Methods" "= class TkcGroup < TkcTag" "refm/api/src/tk/canvastag/TkcGroup")
(find-rurima "= class TkcTagString < TkcTag" "refm/api/src/tk/canvastag/TkcTagString")
(find-rurima "== Class Methods" "= class TkcTagString < TkcTag" "refm/api/src/tk/canvastag/TkcTagString")
(find-rurima "--- new(parent, name, mode = nil, *args)" "== Class Methods" "= class TkcTagString < TkcTag" "refm/api/src/tk/canvastag/TkcTagString")
(find-rurima "= class TkcTag < TkObject" "refm/api/src/tk/canvastag/TkcTag")
(find-rurima "== Constants" "= class TkcTag < TkObject" "refm/api/src/tk/canvastag/TkcTag")
(find-rurima "--- CTagID_TBL" "== Constants" "= class TkcTag < TkObject" "refm/api/src/tk/canvastag/TkcTag")
(find-rurima "--- Tk_CanvasTag_ID" "== Constants" "= class TkcTag < TkObject" "refm/api/src/tk/canvastag/TkcTag")
(find-rurima "== Class Methods" "= class TkcTag < TkObject" "refm/api/src/tk/canvastag/TkcTag")
(find-rurima "--- id2obj(canvas, id)" "== Class Methods" "= class TkcTag < TkObject" "refm/api/src/tk/canvastag/TkcTag")
(find-rurima "--- new(parent, mode = nil, *args)" "== Class Methods" "= class TkcTag < TkObject" "refm/api/src/tk/canvastag/TkcTag")
(find-rurima "== Instance Methods" "= class TkcTag < TkObject" "refm/api/src/tk/canvastag/TkcTag")
(find-rurima "--- delete" "== Instance Methods" "= class TkcTag < TkObject" "refm/api/src/tk/canvastag/TkcTag")
(find-rurima "--- remove" "== Instance Methods" "= class TkcTag < TkObject" "refm/api/src/tk/canvastag/TkcTag")
(find-rurima "--- destroy" "== Instance Methods" "= class TkcTag < TkObject" "refm/api/src/tk/canvastag/TkcTag")
(find-rurima "--- exist?" "== Instance Methods" "= class TkcTag < TkObject" "refm/api/src/tk/canvastag/TkcTag")
(find-rurima "--- id" "== Instance Methods" "= class TkcTag < TkObject" "refm/api/src/tk/canvastag/TkcTag")
(find-rurima "--- set_to_above(target)" "== Instance Methods" "= class TkcTag < TkObject" "refm/api/src/tk/canvastag/TkcTag")
(find-rurima "--- above(target)" "== Instance Methods" "= class TkcTag < TkObject" "refm/api/src/tk/canvastag/TkcTag")
(find-rurima "--- set_to_all" "== Instance Methods" "= class TkcTag < TkObject" "refm/api/src/tk/canvastag/TkcTag")
(find-rurima "--- all" "== Instance Methods" "= class TkcTag < TkObject" "refm/api/src/tk/canvastag/TkcTag")
(find-rurima "--- set_to_below(target)" "== Instance Methods" "= class TkcTag < TkObject" "refm/api/src/tk/canvastag/TkcTag")
(find-rurima "--- below(target)" "== Instance Methods" "= class TkcTag < TkObject" "refm/api/src/tk/canvastag/TkcTag")
(find-rurima "--- set_to_closest(x, y, halo = Tk::None, start = Tk::None)" "== Instance Methods" "= class TkcTag < TkObject" "refm/api/src/tk/canvastag/TkcTag")
(find-rurima "--- closest(x, y, halo = Tk::None, start = Tk::None)" "== Instance Methods" "= class TkcTag < TkObject" "refm/api/src/tk/canvastag/TkcTag")
(find-rurima "--- set_to_enclosed(x1, y1, x2, y2)" "== Instance Methods" "= class TkcTag < TkObject" "refm/api/src/tk/canvastag/TkcTag")
(find-rurima "--- enclosed(x1, y1, x2, y2)" "== Instance Methods" "= class TkcTag < TkObject" "refm/api/src/tk/canvastag/TkcTag")
(find-rurima "--- set_to_overlapping(x1, y1, x2, y2)" "== Instance Methods" "= class TkcTag < TkObject" "refm/api/src/tk/canvastag/TkcTag")
(find-rurima "--- overlapping(x1, y1, x2, y2)" "== Instance Methods" "= class TkcTag < TkObject" "refm/api/src/tk/canvastag/TkcTag")
(find-rurima "--- set_to_withtag(target)" "== Instance Methods" "= class TkcTag < TkObject" "refm/api/src/tk/canvastag/TkcTag")
(find-rurima "--- withtag(target)" "== Instance Methods" "= class TkcTag < TkObject" "refm/api/src/tk/canvastag/TkcTag")
(find-rurima "= class TkCore::Tk_OBJECT_TABLE < Object" "refm/api/src/tk/TkCore__Tk_OBJECT_TABLE")
(find-rurima "== Class Methods" "= class TkCore::Tk_OBJECT_TABLE < Object" "refm/api/src/tk/TkCore__Tk_OBJECT_TABLE")
(find-rurima "--- new(id)" "== Class Methods" "= class TkCore::Tk_OBJECT_TABLE < Object" "refm/api/src/tk/TkCore__Tk_OBJECT_TABLE")
(find-rurima "== Instance Methods" "= class TkCore::Tk_OBJECT_TABLE < Object" "refm/api/src/tk/TkCore__Tk_OBJECT_TABLE")
(find-rurima "--- method_missing(m, *args, &block)" "== Instance Methods" "= class TkCore::Tk_OBJECT_TABLE < Object" "refm/api/src/tk/TkCore__Tk_OBJECT_TABLE")
(find-rurima "= reopen Tk" "refm/api/src/tk/macpkg.rd")
(find-rurima "== Class Methods" "= reopen Tk" "refm/api/src/tk/macpkg.rd")
(find-rurima "--- load_tclscript_rsrc(resource_name, file = Tk::None)" "== Class Methods" "= reopen Tk" "refm/api/src/tk/macpkg.rd")
(find-rurima "--- load_tclscript_rsrcid(resource_id, file = Tk::None)" "== Class Methods" "= reopen Tk" "refm/api/src/tk/macpkg.rd")
(find-rurima "= class TkLabelFrame < TkFrame" "refm/api/src/tk/labelframe/TkLabelFrame")
(find-rurima "== Constants" "= class TkLabelFrame < TkFrame" "refm/api/src/tk/labelframe/TkLabelFrame")
(find-rurima "--- TkCommandNames" "== Constants" "= class TkLabelFrame < TkFrame" "refm/api/src/tk/labelframe/TkLabelFrame")
(find-rurima "--- WidgetClassName" "== Constants" "= class TkLabelFrame < TkFrame" "refm/api/src/tk/labelframe/TkLabelFrame")
(find-rurima "= class TkPhotoImage < TkImage" "refm/api/src/tk/image/TkPhotoImage")
(find-rurima "== Class Methods" "= class TkPhotoImage < TkImage" "refm/api/src/tk/image/TkPhotoImage")
(find-rurima "--- new(*args)" "== Class Methods" "= class TkPhotoImage < TkImage" "refm/api/src/tk/image/TkPhotoImage")
(find-rurima "== Instance Methods" "= class TkPhotoImage < TkImage" "refm/api/src/tk/image/TkPhotoImage")
(find-rurima "--- blank" "== Instance Methods" "= class TkPhotoImage < TkImage" "refm/api/src/tk/image/TkPhotoImage")
(find-rurima "--- cget(option)" "== Instance Methods" "= class TkPhotoImage < TkImage" "refm/api/src/tk/image/TkPhotoImage")
(find-rurima "--- copy(src, *opts)" "== Instance Methods" "= class TkPhotoImage < TkImage" "refm/api/src/tk/image/TkPhotoImage")
(find-rurima "--- data(keys = {})" "== Instance Methods" "= class TkPhotoImage < TkImage" "refm/api/src/tk/image/TkPhotoImage")
(find-rurima "--- get(x, y)" "== Instance Methods" "= class TkPhotoImage < TkImage" "refm/api/src/tk/image/TkPhotoImage")
(find-rurima "--- put(data, *opts)" "== Instance Methods" "= class TkPhotoImage < TkImage" "refm/api/src/tk/image/TkPhotoImage")
(find-rurima "--- read(file, *opts)" "== Instance Methods" "= class TkPhotoImage < TkImage" "refm/api/src/tk/image/TkPhotoImage")
(find-rurima "--- redither" "== Instance Methods" "= class TkPhotoImage < TkImage" "refm/api/src/tk/image/TkPhotoImage")
(find-rurima "--- get_transparency(x, y)" "== Instance Methods" "= class TkPhotoImage < TkImage" "refm/api/src/tk/image/TkPhotoImage")
(find-rurima "--- set_transparency(x, y, st)" "== Instance Methods" "= class TkPhotoImage < TkImage" "refm/api/src/tk/image/TkPhotoImage")
(find-rurima "--- write(file, *opts)" "== Instance Methods" "= class TkPhotoImage < TkImage" "refm/api/src/tk/image/TkPhotoImage")
(find-rurima "== Constants" "= class TkPhotoImage < TkImage" "refm/api/src/tk/image/TkPhotoImage")
(find-rurima "--- NullArgOptionKeys" "== Constants" "= class TkPhotoImage < TkImage" "refm/api/src/tk/image/TkPhotoImage")
(find-rurima "= class TkBitmapImage < TkImage" "refm/api/src/tk/image/TkBitmapImage")
(find-rurima "== Class Methods" "= class TkBitmapImage < TkImage" "refm/api/src/tk/image/TkBitmapImage")
(find-rurima "--- new(*args)" "== Class Methods" "= class TkBitmapImage < TkImage" "refm/api/src/tk/image/TkBitmapImage")
(find-rurima "= class TkImage < TkObject" "refm/api/src/tk/image/TkImage")
(find-rurima "== Class Methods" "= class TkImage < TkObject" "refm/api/src/tk/image/TkImage")
(find-rurima "--- new(keys = nil)" "== Class Methods" "= class TkImage < TkObject" "refm/api/src/tk/image/TkImage")
(find-rurima "--- names" "== Class Methods" "= class TkImage < TkObject" "refm/api/src/tk/image/TkImage")
(find-rurima "--- types" "== Class Methods" "= class TkImage < TkObject" "refm/api/src/tk/image/TkImage")
(find-rurima "== Instance Methods" "= class TkImage < TkObject" "refm/api/src/tk/image/TkImage")
(find-rurima "--- delete" "== Instance Methods" "= class TkImage < TkObject" "refm/api/src/tk/image/TkImage")
(find-rurima "--- height" "== Instance Methods" "= class TkImage < TkObject" "refm/api/src/tk/image/TkImage")
(find-rurima "--- inuse" "== Instance Methods" "= class TkImage < TkObject" "refm/api/src/tk/image/TkImage")
(find-rurima "--- itemtype" "== Instance Methods" "= class TkImage < TkObject" "refm/api/src/tk/image/TkImage")
(find-rurima "--- width" "== Instance Methods" "= class TkImage < TkObject" "refm/api/src/tk/image/TkImage")
(find-rurima "== Constants" "= class TkImage < TkObject" "refm/api/src/tk/image/TkImage")
(find-rurima "--- TkCommandNames" "== Constants" "= class TkImage < TkObject" "refm/api/src/tk/image/TkImage")
(find-rurima "--- Tk_IMGTBL" "== Constants" "= class TkImage < TkObject" "refm/api/src/tk/image/TkImage")
(find-rurima "--- Tk_Image_ID" "== Constants" "= class TkImage < TkObject" "refm/api/src/tk/image/TkImage")
(find-rurima "= class TkBindTag" "refm/api/src/tk/bindtag.rd")
(find-rurima "== Class Methods" "= class TkBindTag" "refm/api/src/tk/bindtag.rd")
(find-rurima "--- id2obj(id)" "== Class Methods" "= class TkBindTag" "refm/api/src/tk/bindtag.rd")
(find-rurima "--- new_by_name(name, *args, &b)" "== Class Methods" "= class TkBindTag" "refm/api/src/tk/bindtag.rd")
(find-rurima "--- new(*args, &b)" "== Class Methods" "= class TkBindTag" "refm/api/src/tk/bindtag.rd")
(find-rurima "== Instance Methods" "= class TkBindTag" "refm/api/src/tk/bindtag.rd")
(find-rurima "--- name" "== Instance Methods" "= class TkBindTag" "refm/api/src/tk/bindtag.rd")
(find-rurima "--- to_eval" "== Instance Methods" "= class TkBindTag" "refm/api/src/tk/bindtag.rd")
(find-rurima "--- inspect" "== Instance Methods" "= class TkBindTag" "refm/api/src/tk/bindtag.rd")
(find-rurima "== Constants" "= class TkBindTag" "refm/api/src/tk/bindtag.rd")
(find-rurima "--- BTagID_TBL" "== Constants" "= class TkBindTag" "refm/api/src/tk/bindtag.rd")
(find-rurima "--- Tk_BINDTAG_ID" "== Constants" "= class TkBindTag" "refm/api/src/tk/bindtag.rd")
(find-rurima "--- ALL" "== Constants" "= class TkBindTag" "refm/api/src/tk/bindtag.rd")
(find-rurima "= class TkBindTagAll < TkBindTag" "refm/api/src/tk/bindtag.rd")
(find-rurima "== Class Methods" "= class TkBindTagAll < TkBindTag" "refm/api/src/tk/bindtag.rd")
(find-rurima "--- new(*args, &b)" "== Class Methods" "= class TkBindTagAll < TkBindTag" "refm/api/src/tk/bindtag.rd")
(find-rurima "= class TkDatabaseClass < TkBindTag" "refm/api/src/tk/bindtag.rd")
(find-rurima "== Class Methods" "= class TkDatabaseClass < TkBindTag" "refm/api/src/tk/bindtag.rd")
(find-rurima "--- new(name, *args, &b)" "== Class Methods" "= class TkDatabaseClass < TkBindTag" "refm/api/src/tk/bindtag.rd")
(find-rurima "== Instance Methods" "= class TkDatabaseClass < TkBindTag" "refm/api/src/tk/bindtag.rd")
(find-rurima "--- inspect" "== Instance Methods" "= class TkDatabaseClass < TkBindTag" "refm/api/src/tk/bindtag.rd")
(find-rurima "= module TkTreatTagFont" "refm/api/src/tk/tagfont/TkTreatTagFont")
(find-rurima "== Instance Methods" "= module TkTreatTagFont" "refm/api/src/tk/tagfont/TkTreatTagFont")
(find-rurima "--- asciifont_configure(ltn, keys = nil)" "== Instance Methods" "= module TkTreatTagFont" "refm/api/src/tk/tagfont/TkTreatTagFont")
(find-rurima "--- asciifont_copy(win, wintag = nil)" "== Instance Methods" "= module TkTreatTagFont" "refm/api/src/tk/tagfont/TkTreatTagFont")
(find-rurima "--- font_configinfo" "== Instance Methods" "= module TkTreatTagFont" "refm/api/src/tk/tagfont/TkTreatTagFont")
(find-rurima "--- font_configure(slot)" "== Instance Methods" "= module TkTreatTagFont" "refm/api/src/tk/tagfont/TkTreatTagFont")
(find-rurima "--- font_copy(win, wintag = nil)" "== Instance Methods" "= module TkTreatTagFont" "refm/api/src/tk/tagfont/TkTreatTagFont")
(find-rurima "--- kanjifont_configure(knj, keys = nil)" "== Instance Methods" "= module TkTreatTagFont" "refm/api/src/tk/tagfont/TkTreatTagFont")
(find-rurima "--- kanjifont_copy(win, wintag = nil)" "== Instance Methods" "= module TkTreatTagFont" "refm/api/src/tk/tagfont/TkTreatTagFont")
(find-rurima "--- latinfont_configure(ltn, keys = nil)" "== Instance Methods" "= module TkTreatTagFont" "refm/api/src/tk/tagfont/TkTreatTagFont")
(find-rurima "--- latinfont_copy(win, wintag = nil)" "== Instance Methods" "= module TkTreatTagFont" "refm/api/src/tk/tagfont/TkTreatTagFont")
(find-rurima "= class TkNamespace::NsCode < TkObject" "refm/api/src/tk/namespace/TkNamespace__NsCode")
(find-rurima "== Class Methods" "= class TkNamespace::NsCode < TkObject" "refm/api/src/tk/namespace/TkNamespace__NsCode")
(find-rurima "--- new(scope, use_obj_id = false)" "== Class Methods" "= class TkNamespace::NsCode < TkObject" "refm/api/src/tk/namespace/TkNamespace__NsCode")
(find-rurima "== Instance Methods" "= class TkNamespace::NsCode < TkObject" "refm/api/src/tk/namespace/TkNamespace__NsCode")
(find-rurima "--- path" "== Instance Methods" "= class TkNamespace::NsCode < TkObject" "refm/api/src/tk/namespace/TkNamespace__NsCode")
(find-rurima "--- to_eval" "== Instance Methods" "= class TkNamespace::NsCode < TkObject" "refm/api/src/tk/namespace/TkNamespace__NsCode")
(find-rurima "--- call(*args)" "== Instance Methods" "= class TkNamespace::NsCode < TkObject" "refm/api/src/tk/namespace/TkNamespace__NsCode")
(find-rurima "= class TkNamespace::ScopeArgs < TkObject" "refm/api/src/tk/namespace/TkNamespace__ScopeArgs")
(find-rurima "== Class Methods" "= class TkNamespace::ScopeArgs < TkObject" "refm/api/src/tk/namespace/TkNamespace__ScopeArgs")
(find-rurima "--- new(namespace, *args)" "== Class Methods" "= class TkNamespace::ScopeArgs < TkObject" "refm/api/src/tk/namespace/TkNamespace__ScopeArgs")
(find-rurima "== Instance Methods" "= class TkNamespace::ScopeArgs < TkObject" "refm/api/src/tk/namespace/TkNamespace__ScopeArgs")
(find-rurima "--- tk_call(*args)" "== Instance Methods" "= class TkNamespace::ScopeArgs < TkObject" "refm/api/src/tk/namespace/TkNamespace__ScopeArgs")
(find-rurima "--- tk_call_without_enc(*args)" "== Instance Methods" "= class TkNamespace::ScopeArgs < TkObject" "refm/api/src/tk/namespace/TkNamespace__ScopeArgs")
(find-rurima "--- tk_call_with_enc(*args)" "== Instance Methods" "= class TkNamespace::ScopeArgs < TkObject" "refm/api/src/tk/namespace/TkNamespace__ScopeArgs")
(find-rurima "= class TkNamespace < TkObject" "refm/api/src/tk/namespace/TkNamespace")
(find-rurima "== Class Methods" "= class TkNamespace < TkObject" "refm/api/src/tk/namespace/TkNamespace")
(find-rurima "--- id2obj(id)" "== Class Methods" "= class TkNamespace < TkObject" "refm/api/src/tk/namespace/TkNamespace")
(find-rurima "--- new(name = nil, parent = nil)" "== Class Methods" "= class TkNamespace < TkObject" "refm/api/src/tk/namespace/TkNamespace")
(find-rurima "--- children(*args)" "== Class Methods" "= class TkNamespace < TkObject" "refm/api/src/tk/namespace/TkNamespace")
(find-rurima "--- code(script = Proc.new)" "== Class Methods" "= class TkNamespace < TkObject" "refm/api/src/tk/namespace/TkNamespace")
(find-rurima "--- current_path" "== Class Methods" "= class TkNamespace < TkObject" "refm/api/src/tk/namespace/TkNamespace")
(find-rurima "--- current" "== Class Methods" "= class TkNamespace < TkObject" "refm/api/src/tk/namespace/TkNamespace")
(find-rurima "--- delete(*ns_list)" "== Class Methods" "= class TkNamespace < TkObject" "refm/api/src/tk/namespace/TkNamespace")
(find-rurima "--- ensemble_create(*keys)" "== Class Methods" "= class TkNamespace < TkObject" "refm/api/src/tk/namespace/TkNamespace")
(find-rurima "--- ensemble_configure(cmd, slot, value = Tk::None)" "== Class Methods" "= class TkNamespace < TkObject" "refm/api/src/tk/namespace/TkNamespace")
(find-rurima "--- ensemble_configinfo(cmd, slot = nil))" "== Class Methods" "= class TkNamespace < TkObject" "refm/api/src/tk/namespace/TkNamespace")
(find-rurima "--- ensemble_exist?(cmd)" "== Class Methods" "= class TkNamespace < TkObject" "refm/api/src/tk/namespace/TkNamespace")
(find-rurima "--- eval(namespace, cmd = Proc.new, *args)" "== Class Methods" "= class TkNamespace < TkObject" "refm/api/src/tk/namespace/TkNamespace")
(find-rurima "--- exist?(ns)" "== Class Methods" "= class TkNamespace < TkObject" "refm/api/src/tk/namespace/TkNamespace")
(find-rurima "--- export(*patterns)" "== Class Methods" "= class TkNamespace < TkObject" "refm/api/src/tk/namespace/TkNamespace")
(find-rurima "--- export_with_clear(*patterns)" "== Class Methods" "= class TkNamespace < TkObject" "refm/api/src/tk/namespace/TkNamespace")
(find-rurima "--- forget(*patterns)" "== Class Methods" "= class TkNamespace < TkObject" "refm/api/src/tk/namespace/TkNamespace")
(find-rurima "--- import(*patterns)" "== Class Methods" "= class TkNamespace < TkObject" "refm/api/src/tk/namespace/TkNamespace")
(find-rurima "--- force_import(*patterns)" "== Class Methods" "= class TkNamespace < TkObject" "refm/api/src/tk/namespace/TkNamespace")
(find-rurima "--- inscope(namespace, script, *args)" "== Class Methods" "= class TkNamespace < TkObject" "refm/api/src/tk/namespace/TkNamespace")
(find-rurima "--- origin(cmd)" "== Class Methods" "= class TkNamespace < TkObject" "refm/api/src/tk/namespace/TkNamespace")
(find-rurima "--- parent(namespace = Tk::None)" "== Class Methods" "= class TkNamespace < TkObject" "refm/api/src/tk/namespace/TkNamespace")
(find-rurima "--- get_path" "== Class Methods" "= class TkNamespace < TkObject" "refm/api/src/tk/namespace/TkNamespace")
(find-rurima "--- set_path(*namespace_list)" "== Class Methods" "= class TkNamespace < TkObject" "refm/api/src/tk/namespace/TkNamespace")
(find-rurima "--- qualifiers(str)" "== Class Methods" "= class TkNamespace < TkObject" "refm/api/src/tk/namespace/TkNamespace")
(find-rurima "--- tail(str)" "== Class Methods" "= class TkNamespace < TkObject" "refm/api/src/tk/namespace/TkNamespace")
(find-rurima "--- upvar(namespace, *var_pairs)" "== Class Methods" "= class TkNamespace < TkObject" "refm/api/src/tk/namespace/TkNamespace")
(find-rurima "--- get_unknown_handler" "== Class Methods" "= class TkNamespace < TkObject" "refm/api/src/tk/namespace/TkNamespace")
(find-rurima "--- set_unknown_handler(cmd = Proc.new)" "== Class Methods" "= class TkNamespace < TkObject" "refm/api/src/tk/namespace/TkNamespace")
(find-rurima "--- which(name)" "== Class Methods" "= class TkNamespace < TkObject" "refm/api/src/tk/namespace/TkNamespace")
(find-rurima "--- which_command(name)" "== Class Methods" "= class TkNamespace < TkObject" "refm/api/src/tk/namespace/TkNamespace")
(find-rurima "--- which_variable(name)" "== Class Methods" "= class TkNamespace < TkObject" "refm/api/src/tk/namespace/TkNamespace")
(find-rurima "== Instance Methods" "= class TkNamespace < TkObject" "refm/api/src/tk/namespace/TkNamespace")
(find-rurima "--- install_cmd(cmd)" "== Instance Methods" "= class TkNamespace < TkObject" "refm/api/src/tk/namespace/TkNamespace")
(find-rurima "--- __tk_call(*args)" "== Instance Methods" "= class TkNamespace < TkObject" "refm/api/src/tk/namespace/TkNamespace")
(find-rurima "--- __tk_call_without_enc(*args)" "== Instance Methods" "= class TkNamespace < TkObject" "refm/api/src/tk/namespace/TkNamespace")
(find-rurima "--- __tk_call_with_enc(*args)" "== Instance Methods" "= class TkNamespace < TkObject" "refm/api/src/tk/namespace/TkNamespace")
(find-rurima "--- tk_call(*args)" "== Instance Methods" "= class TkNamespace < TkObject" "refm/api/src/tk/namespace/TkNamespace")
(find-rurima "--- ns_tk_call(*args)" "== Instance Methods" "= class TkNamespace < TkObject" "refm/api/src/tk/namespace/TkNamespace")
(find-rurima "--- tk_call_without_enc(*args)" "== Instance Methods" "= class TkNamespace < TkObject" "refm/api/src/tk/namespace/TkNamespace")
(find-rurima "--- ns_tk_call_without_enc(*args)" "== Instance Methods" "= class TkNamespace < TkObject" "refm/api/src/tk/namespace/TkNamespace")
(find-rurima "--- tk_call_with_enc(*args)" "== Instance Methods" "= class TkNamespace < TkObject" "refm/api/src/tk/namespace/TkNamespace")
(find-rurima "--- ns_tk_call_with_enc(*args)" "== Instance Methods" "= class TkNamespace < TkObject" "refm/api/src/tk/namespace/TkNamespace")
(find-rurima "--- children" "== Instance Methods" "= class TkNamespace < TkObject" "refm/api/src/tk/namespace/TkNamespace")
(find-rurima "--- code(script = Proc.new)" "== Instance Methods" "= class TkNamespace < TkObject" "refm/api/src/tk/namespace/TkNamespace")
(find-rurima "--- current_path" "== Instance Methods" "= class TkNamespace < TkObject" "refm/api/src/tk/namespace/TkNamespace")
(find-rurima "--- current_namespace" "== Instance Methods" "= class TkNamespace < TkObject" "refm/api/src/tk/namespace/TkNamespace")
(find-rurima "--- current" "== Instance Methods" "= class TkNamespace < TkObject" "refm/api/src/tk/namespace/TkNamespace")
(find-rurima "--- delete" "== Instance Methods" "= class TkNamespace < TkObject" "refm/api/src/tk/namespace/TkNamespace")
(find-rurima "--- eval(cmd = Proc.new, *args)" "== Instance Methods" "= class TkNamespace < TkObject" "refm/api/src/tk/namespace/TkNamespace")
(find-rurima "--- exist?" "== Instance Methods" "= class TkNamespace < TkObject" "refm/api/src/tk/namespace/TkNamespace")
(find-rurima "--- export" "== Instance Methods" "= class TkNamespace < TkObject" "refm/api/src/tk/namespace/TkNamespace")
(find-rurima "--- export_with_clear" "== Instance Methods" "= class TkNamespace < TkObject" "refm/api/src/tk/namespace/TkNamespace")
(find-rurima "--- forget" "== Instance Methods" "= class TkNamespace < TkObject" "refm/api/src/tk/namespace/TkNamespace")
(find-rurima "--- import" "== Instance Methods" "= class TkNamespace < TkObject" "refm/api/src/tk/namespace/TkNamespace")
(find-rurima "--- force_import" "== Instance Methods" "= class TkNamespace < TkObject" "refm/api/src/tk/namespace/TkNamespace")
(find-rurima "--- inscope(script, *args)" "== Instance Methods" "= class TkNamespace < TkObject" "refm/api/src/tk/namespace/TkNamespace")
(find-rurima "--- parent" "== Instance Methods" "= class TkNamespace < TkObject" "refm/api/src/tk/namespace/TkNamespace")
(find-rurima "--- set_path" "== Instance Methods" "= class TkNamespace < TkObject" "refm/api/src/tk/namespace/TkNamespace")
(find-rurima "--- upvar(*var_pairs)" "== Instance Methods" "= class TkNamespace < TkObject" "refm/api/src/tk/namespace/TkNamespace")
(find-rurima "== Constants" "= class TkNamespace < TkObject" "refm/api/src/tk/namespace/TkNamespace")
(find-rurima "--- TkCommandNames" "== Constants" "= class TkNamespace < TkObject" "refm/api/src/tk/namespace/TkNamespace")
(find-rurima "--- Tk_Namespace_ID_TBL" "== Constants" "= class TkNamespace < TkObject" "refm/api/src/tk/namespace/TkNamespace")
(find-rurima "--- Tk_Namespace_ID" "== Constants" "= class TkNamespace < TkObject" "refm/api/src/tk/namespace/TkNamespace")
(find-rurima "--- Tk_NsCode_RetObjID_TBL" "== Constants" "= class TkNamespace < TkObject" "refm/api/src/tk/namespace/TkNamespace")
(find-rurima "--- Global" "== Constants" "= class TkNamespace < TkObject" "refm/api/src/tk/namespace/TkNamespace")
(find-rurima "= class TkNamespace::Ensemble < TkObject" "refm/api/src/tk/namespace/TkNamespace__Ensemble")
(find-rurima "== Class Methods" "= class TkNamespace::Ensemble < TkObject" "refm/api/src/tk/namespace/TkNamespace__Ensemble")
(find-rurima "--- exist?(ensemble)" "== Class Methods" "= class TkNamespace::Ensemble < TkObject" "refm/api/src/tk/namespace/TkNamespace__Ensemble")
(find-rurima "--- new(keys = {})" "== Class Methods" "= class TkNamespace::Ensemble < TkObject" "refm/api/src/tk/namespace/TkNamespace__Ensemble")
(find-rurima "== Instance Methods" "= class TkNamespace::Ensemble < TkObject" "refm/api/src/tk/namespace/TkNamespace__Ensemble")
(find-rurima "--- cget(slot)" "== Instance Methods" "= class TkNamespace::Ensemble < TkObject" "refm/api/src/tk/namespace/TkNamespace__Ensemble")
(find-rurima "--- configinfo(slot = nil)" "== Instance Methods" "= class TkNamespace::Ensemble < TkObject" "refm/api/src/tk/namespace/TkNamespace__Ensemble")
(find-rurima "--- exists?" "== Instance Methods" "= class TkNamespace::Ensemble < TkObject" "refm/api/src/tk/namespace/TkNamespace__Ensemble")
(find-rurima "= class TkToplevel < TkWindow" "refm/api/src/tk/toplevel/TkToplevel")
(find-rurima "== Class Methods" "= class TkToplevel < TkWindow" "refm/api/src/tk/toplevel/TkToplevel")
(find-rurima "--- new(parent = nil, screen = nil, classname = nil, keys = nil)" "== Class Methods" "= class TkToplevel < TkWindow" "refm/api/src/tk/toplevel/TkToplevel")
(find-rurima "--- database_class" "== Class Methods" "= class TkToplevel < TkWindow" "refm/api/src/tk/toplevel/TkToplevel")
(find-rurima "--- database_classname" "== Class Methods" "= class TkToplevel < TkWindow" "refm/api/src/tk/toplevel/TkToplevel")
(find-rurima "--- bind(*args) { ... }" "== Class Methods" "= class TkToplevel < TkWindow" "refm/api/src/tk/toplevel/TkToplevel")
(find-rurima "--- bind_append(*args) { ... }" "== Class Methods" "= class TkToplevel < TkWindow" "refm/api/src/tk/toplevel/TkToplevel")
(find-rurima "--- bind_remove(*args)" "== Class Methods" "= class TkToplevel < TkWindow" "refm/api/src/tk/toplevel/TkToplevel")
(find-rurima "--- bindinfo(*args)" "== Class Methods" "= class TkToplevel < TkWindow" "refm/api/src/tk/toplevel/TkToplevel")
(find-rurima "== Instance Methods" "= class TkToplevel < TkWindow" "refm/api/src/tk/toplevel/TkToplevel")
(find-rurima "--- specific_class" "== Instance Methods" "= class TkToplevel < TkWindow" "refm/api/src/tk/toplevel/TkToplevel")
(find-rurima "--- add_menu(menu_info, tearoff = false, opts = nil)" "== Instance Methods" "= class TkToplevel < TkWindow" "refm/api/src/tk/toplevel/TkToplevel")
(find-rurima "--- add_menubar(menu_spec, tearoff = false, opts = nil)" "== Instance Methods" "= class TkToplevel < TkWindow" "refm/api/src/tk/toplevel/TkToplevel")
(find-rurima "--- create_self(keys)" "== Instance Methods" "= class TkToplevel < TkWindow" "refm/api/src/tk/toplevel/TkToplevel")
(find-rurima "== Constants" "= class TkToplevel < TkWindow" "refm/api/src/tk/toplevel/TkToplevel")
(find-rurima "--- TkCommandNames" "== Constants" "= class TkToplevel < TkWindow" "refm/api/src/tk/toplevel/TkToplevel")
(find-rurima "--- WidgetClassName" "== Constants" "= class TkToplevel < TkWindow" "refm/api/src/tk/toplevel/TkToplevel")
(find-rurima "= class Tk::OptionObj < Hash" "refm/api/src/tk/optionobj.rd")
(find-rurima "== Class Methods" "= class Tk::OptionObj < Hash" "refm/api/src/tk/optionobj.rd")
(find-rurima "--- new(hash = nil)" "== Class Methods" "= class Tk::OptionObj < Hash" "refm/api/src/tk/optionobj.rd")
(find-rurima "== Instance Methods" "= class Tk::OptionObj < Hash" "refm/api/src/tk/optionobj.rd")
(find-rurima "--- +(hash)" "== Instance Methods" "= class Tk::OptionObj < Hash" "refm/api/src/tk/optionobj.rd")
(find-rurima "--- [](key)" "== Instance Methods" "= class Tk::OptionObj < Hash" "refm/api/src/tk/optionobj.rd")
(find-rurima "--- cget(key)" "== Instance Methods" "= class Tk::OptionObj < Hash" "refm/api/src/tk/optionobj.rd")
(find-rurima "--- []=(key, value)" "== Instance Methods" "= class Tk::OptionObj < Hash" "refm/api/src/tk/optionobj.rd")
(find-rurima "--- assign(*wins)" "== Instance Methods" "= class Tk::OptionObj < Hash" "refm/api/src/tk/optionobj.rd")
(find-rurima "--- configure(key, value = nil)" "== Instance Methods" "= class Tk::OptionObj < Hash" "refm/api/src/tk/optionobj.rd")
(find-rurima "--- notify(target = nil)" "== Instance Methods" "= class Tk::OptionObj < Hash" "refm/api/src/tk/optionobj.rd")
(find-rurima "--- apply(target = nil)" "== Instance Methods" "= class Tk::OptionObj < Hash" "refm/api/src/tk/optionobj.rd")
(find-rurima "--- observ_info" "== Instance Methods" "= class Tk::OptionObj < Hash" "refm/api/src/tk/optionobj.rd")
(find-rurima "--- observs" "== Instance Methods" "= class Tk::OptionObj < Hash" "refm/api/src/tk/optionobj.rd")
(find-rurima "--- replace(hash)" "== Instance Methods" "= class Tk::OptionObj < Hash" "refm/api/src/tk/optionobj.rd")
(find-rurima "--- store(key, value)" "== Instance Methods" "= class Tk::OptionObj < Hash" "refm/api/src/tk/optionobj.rd")
(find-rurima "--- unassign(*wins)" "== Instance Methods" "= class Tk::OptionObj < Hash" "refm/api/src/tk/optionobj.rd")
(find-rurima "--- update(hash)" "== Instance Methods" "= class Tk::OptionObj < Hash" "refm/api/src/tk/optionobj.rd")
(find-rurima "--- update_without_notify(hash)" "== Instance Methods" "= class Tk::OptionObj < Hash" "refm/api/src/tk/optionobj.rd")
(find-rurima "= class TkWarning2 < TkDialog2" "refm/api/src/tk/dialog/TkWarningObj")
(find-rurima "= class TkWarningObj < TkDialogObj" "refm/api/src/tk/dialog/TkWarningObj")
(find-rurima "== Class Methods" "= class TkWarningObj < TkDialogObj" "refm/api/src/tk/dialog/TkWarningObj")
(find-rurima "--- new(parent = nil, mes = nil)" "== Class Methods" "= class TkWarningObj < TkDialogObj" "refm/api/src/tk/dialog/TkWarningObj")
(find-rurima "== Instance Methods" "= class TkWarningObj < TkDialogObj" "refm/api/src/tk/dialog/TkWarningObj")
(find-rurima "--- show(mes = nil)" "== Instance Methods" "= class TkWarningObj < TkDialogObj" "refm/api/src/tk/dialog/TkWarningObj")
(find-rurima "= class TkDialog < TkDialogObj" "refm/api/src/tk/dialog/TkDialog")
(find-rurima "== Class Methods" "= class TkDialog < TkDialogObj" "refm/api/src/tk/dialog/TkDialog")
(find-rurima "--- show(*args)" "== Class Methods" "= class TkDialog < TkDialogObj" "refm/api/src/tk/dialog/TkDialog")
(find-rurima "--- new(*args)" "== Class Methods" "= class TkDialog < TkDialogObj" "refm/api/src/tk/dialog/TkDialog")
(find-rurima "= class TkDialog2 < TkWindow" "refm/api/src/tk/dialog/TkDialogObj")
(find-rurima "= class TkDialogObj < TkWindow" "refm/api/src/tk/dialog/TkDialogObj")
(find-rurima "== Class Methods" "= class TkDialogObj < TkWindow" "refm/api/src/tk/dialog/TkDialogObj")
(find-rurima "--- show(*args)" "== Class Methods" "= class TkDialogObj < TkWindow" "refm/api/src/tk/dialog/TkDialogObj")
(find-rurima "== Instance Methods" "= class TkDialogObj < TkWindow" "refm/api/src/tk/dialog/TkDialogObj")
(find-rurima "--- show" "== Instance Methods" "= class TkDialogObj < TkWindow" "refm/api/src/tk/dialog/TkDialogObj")
(find-rurima "--- value" "== Instance Methods" "= class TkDialogObj < TkWindow" "refm/api/src/tk/dialog/TkDialogObj")
(find-rurima "--- name" "== Instance Methods" "= class TkDialogObj < TkWindow" "refm/api/src/tk/dialog/TkDialogObj")
(find-rurima "== Constants" "= class TkDialogObj < TkWindow" "refm/api/src/tk/dialog/TkDialogObj")
(find-rurima "--- TkCommandNames" "== Constants" "= class TkDialogObj < TkWindow" "refm/api/src/tk/dialog/TkDialogObj")
(find-rurima "= class TkWarning < TkWarningObj" "refm/api/src/tk/dialog/TkWarning")
(find-rurima "== Class Methods" "= class TkWarning < TkWarningObj" "refm/api/src/tk/dialog/TkWarning")
(find-rurima "--- show(*args)" "== Class Methods" "= class TkWarning < TkWarningObj" "refm/api/src/tk/dialog/TkWarning")
(find-rurima "--- new(*args)" "== Class Methods" "= class TkWarning < TkWarningObj" "refm/api/src/tk/dialog/TkWarning")
(find-rurima "= class TkCheckButton < TkRadioButton" "refm/api/src/tk/checkbutton.rd")
(find-rurima "== Constants" "= class TkCheckButton < TkRadioButton" "refm/api/src/tk/checkbutton.rd")
(find-rurima "--- TkCommandNames" "== Constants" "= class TkCheckButton < TkRadioButton" "refm/api/src/tk/checkbutton.rd")
(find-rurima "--- WidgetClassName" "== Constants" "= class TkCheckButton < TkRadioButton" "refm/api/src/tk/checkbutton.rd")
(find-rurima "--- WidgetClassNames" "== Constants" "= class TkCheckButton < TkRadioButton" "refm/api/src/tk/checkbutton.rd")
(find-rurima "== Instance Methods" "= class TkCheckButton < TkRadioButton" "refm/api/src/tk/checkbutton.rd")
(find-rurima "--- toggle" "== Instance Methods" "= class TkCheckButton < TkRadioButton" "refm/api/src/tk/checkbutton.rd")
(find-rurima "= class TkCheckbutton" "refm/api/src/tk/checkbutton.rd")
(find-rurima "= reopen TclTkIp" "refm/api/src/tk/TclTkIp")
(find-rurima "== Instance Methods" "= reopen TclTkIp" "refm/api/src/tk/TclTkIp")
(find-rurima "--- __eval(cmd)" "== Instance Methods" "= reopen TclTkIp" "refm/api/src/tk/TclTkIp")
(find-rurima "--- _eval_with_enc(cmd)" "== Instance Methods" "= reopen TclTkIp" "refm/api/src/tk/TclTkIp")
(find-rurima "--- _eval_without_enc(cmd)" "== Instance Methods" "= reopen TclTkIp" "refm/api/src/tk/TclTkIp")
(find-rurima "--- _invoke(*cmds)" "== Instance Methods" "= reopen TclTkIp" "refm/api/src/tk/TclTkIp")
(find-rurima "--- __invoke(*cmds)" "== Instance Methods" "= reopen TclTkIp" "refm/api/src/tk/TclTkIp")
(find-rurima "--- _invoke_with_enc(*cmds)" "== Instance Methods" "= reopen TclTkIp" "refm/api/src/tk/TclTkIp")
(find-rurima "--- _invoke_without_enc(*cmds)" "== Instance Methods" "= reopen TclTkIp" "refm/api/src/tk/TclTkIp")
(find-rurima "--- __fromUTF8(str, encoding = nil)" "== Instance Methods" "= reopen TclTkIp" "refm/api/src/tk/TclTkIp")
(find-rurima "--- __toUTF8(str, encoding = nil)" "== Instance Methods" "= reopen TclTkIp" "refm/api/src/tk/TclTkIp")
(find-rurima "--- _ip_id_" "== Instance Methods" "= reopen TclTkIp" "refm/api/src/tk/TclTkIp")
(find-rurima "--- encoding" "== Instance Methods" "= reopen TclTkIp" "refm/api/src/tk/TclTkIp")
(find-rurima "--- encoding=(encoding)" "== Instance Methods" "= reopen TclTkIp" "refm/api/src/tk/TclTkIp")
(find-rurima "= module TkEvent::Event::StateMask" "refm/api/src/tk/event/TkEvent__Event__StateMask")
(find-rurima "== Constants" "= module TkEvent::Event::StateMask" "refm/api/src/tk/event/TkEvent__Event__StateMask")
(find-rurima "--- ShiftMask" "== Constants" "= module TkEvent::Event::StateMask" "refm/api/src/tk/event/TkEvent__Event__StateMask")
(find-rurima "--- LockMask" "== Constants" "= module TkEvent::Event::StateMask" "refm/api/src/tk/event/TkEvent__Event__StateMask")
(find-rurima "--- ControlMask" "== Constants" "= module TkEvent::Event::StateMask" "refm/api/src/tk/event/TkEvent__Event__StateMask")
(find-rurima "--- Mod1Mask" "== Constants" "= module TkEvent::Event::StateMask" "refm/api/src/tk/event/TkEvent__Event__StateMask")
(find-rurima "--- Mod2Mask" "== Constants" "= module TkEvent::Event::StateMask" "refm/api/src/tk/event/TkEvent__Event__StateMask")
(find-rurima "--- Mod3Mask" "== Constants" "= module TkEvent::Event::StateMask" "refm/api/src/tk/event/TkEvent__Event__StateMask")
(find-rurima "--- Mod4Mask" "== Constants" "= module TkEvent::Event::StateMask" "refm/api/src/tk/event/TkEvent__Event__StateMask")
(find-rurima "--- Mod5Mask" "== Constants" "= module TkEvent::Event::StateMask" "refm/api/src/tk/event/TkEvent__Event__StateMask")
(find-rurima "--- Button1Mask" "== Constants" "= module TkEvent::Event::StateMask" "refm/api/src/tk/event/TkEvent__Event__StateMask")
(find-rurima "--- Button2Mask" "== Constants" "= module TkEvent::Event::StateMask" "refm/api/src/tk/event/TkEvent__Event__StateMask")
(find-rurima "--- Button3Mask" "== Constants" "= module TkEvent::Event::StateMask" "refm/api/src/tk/event/TkEvent__Event__StateMask")
(find-rurima "--- Button4Mask" "== Constants" "= module TkEvent::Event::StateMask" "refm/api/src/tk/event/TkEvent__Event__StateMask")
(find-rurima "--- Button5Mask" "== Constants" "= module TkEvent::Event::StateMask" "refm/api/src/tk/event/TkEvent__Event__StateMask")
(find-rurima "--- AnyModifier" "== Constants" "= module TkEvent::Event::StateMask" "refm/api/src/tk/event/TkEvent__Event__StateMask")
(find-rurima "--- META_MASK" "== Constants" "= module TkEvent::Event::StateMask" "refm/api/src/tk/event/TkEvent__Event__StateMask")
(find-rurima "--- ALT_MASK" "== Constants" "= module TkEvent::Event::StateMask" "refm/api/src/tk/event/TkEvent__Event__StateMask")
(find-rurima "--- EXTENDED_MASK" "== Constants" "= module TkEvent::Event::StateMask" "refm/api/src/tk/event/TkEvent__Event__StateMask")
(find-rurima "--- CommandMask" "== Constants" "= module TkEvent::Event::StateMask" "refm/api/src/tk/event/TkEvent__Event__StateMask")
(find-rurima "--- OptionMask" "== Constants" "= module TkEvent::Event::StateMask" "refm/api/src/tk/event/TkEvent__Event__StateMask")
(find-rurima "= module TkEvent" "refm/api/src/tk/event/TkEvent")
(find-rurima "== Instance Methods" "= module TkEvent" "refm/api/src/tk/event/TkEvent")
(find-rurima "--- install_bind_for_event_class(klass, cmd, *args)" "== Instance Methods" "= module TkEvent" "refm/api/src/tk/event/TkEvent")
(find-rurima "--- install_bind(cmd, *args)" "== Instance Methods" "= module TkEvent" "refm/api/src/tk/event/TkEvent")
(find-rurima "= module TkEvent::Event::TypeNum" "refm/api/src/tk/event/TkEvent__Event__TypeNum")
(find-rurima "== Constants" "= module TkEvent::Event::TypeNum" "refm/api/src/tk/event/TkEvent__Event__TypeNum")
(find-rurima "--- KeyPress" "== Constants" "= module TkEvent::Event::TypeNum" "refm/api/src/tk/event/TkEvent__Event__TypeNum")
(find-rurima "--- KeyRelease" "== Constants" "= module TkEvent::Event::TypeNum" "refm/api/src/tk/event/TkEvent__Event__TypeNum")
(find-rurima "--- ButtonPress" "== Constants" "= module TkEvent::Event::TypeNum" "refm/api/src/tk/event/TkEvent__Event__TypeNum")
(find-rurima "--- ButtonRelease" "== Constants" "= module TkEvent::Event::TypeNum" "refm/api/src/tk/event/TkEvent__Event__TypeNum")
(find-rurima "--- MotionNotify" "== Constants" "= module TkEvent::Event::TypeNum" "refm/api/src/tk/event/TkEvent__Event__TypeNum")
(find-rurima "--- EnterNotify" "== Constants" "= module TkEvent::Event::TypeNum" "refm/api/src/tk/event/TkEvent__Event__TypeNum")
(find-rurima "--- LeaveNotify" "== Constants" "= module TkEvent::Event::TypeNum" "refm/api/src/tk/event/TkEvent__Event__TypeNum")
(find-rurima "--- FocusIn" "== Constants" "= module TkEvent::Event::TypeNum" "refm/api/src/tk/event/TkEvent__Event__TypeNum")
(find-rurima "--- FocusOut" "== Constants" "= module TkEvent::Event::TypeNum" "refm/api/src/tk/event/TkEvent__Event__TypeNum")
(find-rurima "--- KeymapNotify" "== Constants" "= module TkEvent::Event::TypeNum" "refm/api/src/tk/event/TkEvent__Event__TypeNum")
(find-rurima "--- Expose" "== Constants" "= module TkEvent::Event::TypeNum" "refm/api/src/tk/event/TkEvent__Event__TypeNum")
(find-rurima "--- GraphicsExpose" "== Constants" "= module TkEvent::Event::TypeNum" "refm/api/src/tk/event/TkEvent__Event__TypeNum")
(find-rurima "--- NoExpose" "== Constants" "= module TkEvent::Event::TypeNum" "refm/api/src/tk/event/TkEvent__Event__TypeNum")
(find-rurima "--- VisibilityNotify" "== Constants" "= module TkEvent::Event::TypeNum" "refm/api/src/tk/event/TkEvent__Event__TypeNum")
(find-rurima "--- CreateNotify" "== Constants" "= module TkEvent::Event::TypeNum" "refm/api/src/tk/event/TkEvent__Event__TypeNum")
(find-rurima "--- DestroyNotify" "== Constants" "= module TkEvent::Event::TypeNum" "refm/api/src/tk/event/TkEvent__Event__TypeNum")
(find-rurima "--- UnmapNotify" "== Constants" "= module TkEvent::Event::TypeNum" "refm/api/src/tk/event/TkEvent__Event__TypeNum")
(find-rurima "--- MapNotify" "== Constants" "= module TkEvent::Event::TypeNum" "refm/api/src/tk/event/TkEvent__Event__TypeNum")
(find-rurima "--- MapRequest" "== Constants" "= module TkEvent::Event::TypeNum" "refm/api/src/tk/event/TkEvent__Event__TypeNum")
(find-rurima "--- ReparentNotify" "== Constants" "= module TkEvent::Event::TypeNum" "refm/api/src/tk/event/TkEvent__Event__TypeNum")
(find-rurima "--- ConfigureNotify" "== Constants" "= module TkEvent::Event::TypeNum" "refm/api/src/tk/event/TkEvent__Event__TypeNum")
(find-rurima "--- ConfigureRequest" "== Constants" "= module TkEvent::Event::TypeNum" "refm/api/src/tk/event/TkEvent__Event__TypeNum")
(find-rurima "--- GravityNotify" "== Constants" "= module TkEvent::Event::TypeNum" "refm/api/src/tk/event/TkEvent__Event__TypeNum")
(find-rurima "--- ResizeRequest" "== Constants" "= module TkEvent::Event::TypeNum" "refm/api/src/tk/event/TkEvent__Event__TypeNum")
(find-rurima "--- CirculateNotify" "== Constants" "= module TkEvent::Event::TypeNum" "refm/api/src/tk/event/TkEvent__Event__TypeNum")
(find-rurima "--- CirculateRequest" "== Constants" "= module TkEvent::Event::TypeNum" "refm/api/src/tk/event/TkEvent__Event__TypeNum")
(find-rurima "--- PropertyNotify" "== Constants" "= module TkEvent::Event::TypeNum" "refm/api/src/tk/event/TkEvent__Event__TypeNum")
(find-rurima "--- SelectionClear" "== Constants" "= module TkEvent::Event::TypeNum" "refm/api/src/tk/event/TkEvent__Event__TypeNum")
(find-rurima "--- SelectionRequest" "== Constants" "= module TkEvent::Event::TypeNum" "refm/api/src/tk/event/TkEvent__Event__TypeNum")
(find-rurima "--- SelectionNotify" "== Constants" "= module TkEvent::Event::TypeNum" "refm/api/src/tk/event/TkEvent__Event__TypeNum")
(find-rurima "--- ColormapNotify" "== Constants" "= module TkEvent::Event::TypeNum" "refm/api/src/tk/event/TkEvent__Event__TypeNum")
(find-rurima "--- ClientMessage" "== Constants" "= module TkEvent::Event::TypeNum" "refm/api/src/tk/event/TkEvent__Event__TypeNum")
(find-rurima "--- MappingNotify" "== Constants" "= module TkEvent::Event::TypeNum" "refm/api/src/tk/event/TkEvent__Event__TypeNum")
(find-rurima "--- VirtualEvent" "== Constants" "= module TkEvent::Event::TypeNum" "refm/api/src/tk/event/TkEvent__Event__TypeNum")
(find-rurima "--- ActivateNotify" "== Constants" "= module TkEvent::Event::TypeNum" "refm/api/src/tk/event/TkEvent__Event__TypeNum")
(find-rurima "--- DeactivateNotify" "== Constants" "= module TkEvent::Event::TypeNum" "refm/api/src/tk/event/TkEvent__Event__TypeNum")
(find-rurima "--- MouseWheelEvent" "== Constants" "= module TkEvent::Event::TypeNum" "refm/api/src/tk/event/TkEvent__Event__TypeNum")
(find-rurima "--- TK_LASTEVENT" "== Constants" "= module TkEvent::Event::TypeNum" "refm/api/src/tk/event/TkEvent__Event__TypeNum")
(find-rurima "= module TkEvent::Event::Grp" "refm/api/src/tk/event/TkEvent__Event__Grp")
(find-rurima "== Constants" "= module TkEvent::Event::Grp" "refm/api/src/tk/event/TkEvent__Event__Grp")
(find-rurima "--- KEY" "== Constants" "= module TkEvent::Event::Grp" "refm/api/src/tk/event/TkEvent__Event__Grp")
(find-rurima "--- BUTTON" "== Constants" "= module TkEvent::Event::Grp" "refm/api/src/tk/event/TkEvent__Event__Grp")
(find-rurima "--- MOTION" "== Constants" "= module TkEvent::Event::Grp" "refm/api/src/tk/event/TkEvent__Event__Grp")
(find-rurima "--- CROSSING" "== Constants" "= module TkEvent::Event::Grp" "refm/api/src/tk/event/TkEvent__Event__Grp")
(find-rurima "--- FOCUS" "== Constants" "= module TkEvent::Event::Grp" "refm/api/src/tk/event/TkEvent__Event__Grp")
(find-rurima "--- EXPOSE" "== Constants" "= module TkEvent::Event::Grp" "refm/api/src/tk/event/TkEvent__Event__Grp")
(find-rurima "--- VISIBILITY" "== Constants" "= module TkEvent::Event::Grp" "refm/api/src/tk/event/TkEvent__Event__Grp")
(find-rurima "--- CREATE" "== Constants" "= module TkEvent::Event::Grp" "refm/api/src/tk/event/TkEvent__Event__Grp")
(find-rurima "--- DESTROY" "== Constants" "= module TkEvent::Event::Grp" "refm/api/src/tk/event/TkEvent__Event__Grp")
(find-rurima "--- UNMAP" "== Constants" "= module TkEvent::Event::Grp" "refm/api/src/tk/event/TkEvent__Event__Grp")
(find-rurima "--- MAP" "== Constants" "= module TkEvent::Event::Grp" "refm/api/src/tk/event/TkEvent__Event__Grp")
(find-rurima "--- REPARENT" "== Constants" "= module TkEvent::Event::Grp" "refm/api/src/tk/event/TkEvent__Event__Grp")
(find-rurima "--- CONFIG" "== Constants" "= module TkEvent::Event::Grp" "refm/api/src/tk/event/TkEvent__Event__Grp")
(find-rurima "--- GRAVITY" "== Constants" "= module TkEvent::Event::Grp" "refm/api/src/tk/event/TkEvent__Event__Grp")
(find-rurima "--- CIRC" "== Constants" "= module TkEvent::Event::Grp" "refm/api/src/tk/event/TkEvent__Event__Grp")
(find-rurima "--- PROP" "== Constants" "= module TkEvent::Event::Grp" "refm/api/src/tk/event/TkEvent__Event__Grp")
(find-rurima "--- COLORMAP" "== Constants" "= module TkEvent::Event::Grp" "refm/api/src/tk/event/TkEvent__Event__Grp")
(find-rurima "--- VIRTUAL" "== Constants" "= module TkEvent::Event::Grp" "refm/api/src/tk/event/TkEvent__Event__Grp")
(find-rurima "--- ACTIVATE" "== Constants" "= module TkEvent::Event::Grp" "refm/api/src/tk/event/TkEvent__Event__Grp")
(find-rurima "--- MAPREQ" "== Constants" "= module TkEvent::Event::Grp" "refm/api/src/tk/event/TkEvent__Event__Grp")
(find-rurima "--- CONFIGREQ" "== Constants" "= module TkEvent::Event::Grp" "refm/api/src/tk/event/TkEvent__Event__Grp")
(find-rurima "--- RESIZEREQ" "== Constants" "= module TkEvent::Event::Grp" "refm/api/src/tk/event/TkEvent__Event__Grp")
(find-rurima "--- CIRCREQ" "== Constants" "= module TkEvent::Event::Grp" "refm/api/src/tk/event/TkEvent__Event__Grp")
(find-rurima "--- MWHEEL" "== Constants" "= module TkEvent::Event::Grp" "refm/api/src/tk/event/TkEvent__Event__Grp")
(find-rurima "--- ALL" "== Constants" "= module TkEvent::Event::Grp" "refm/api/src/tk/event/TkEvent__Event__Grp")
(find-rurima "--- KEY_BUTTON_MOTION_VIRTUAL" "== Constants" "= module TkEvent::Event::Grp" "refm/api/src/tk/event/TkEvent__Event__Grp")
(find-rurima "--- KEY_BUTTON_MOTION_CROSSING" "== Constants" "= module TkEvent::Event::Grp" "refm/api/src/tk/event/TkEvent__Event__Grp")
(find-rurima "= class TkEvent::Event < TkUtil::CallbackSubst" "refm/api/src/tk/event/TkEvent__Event")
(find-rurima "== Class Methods" "= class TkEvent::Event < TkUtil::CallbackSubst" "refm/api/src/tk/event/TkEvent__Event")
(find-rurima "--- type_id(name)" "== Class Methods" "= class TkEvent::Event < TkUtil::CallbackSubst" "refm/api/src/tk/event/TkEvent__Event")
(find-rurima "--- type_name(id)" "== Class Methods" "= class TkEvent::Event < TkUtil::CallbackSubst" "refm/api/src/tk/event/TkEvent__Event")
(find-rurima "--- group_flag(id)" "== Class Methods" "= class TkEvent::Event < TkUtil::CallbackSubst" "refm/api/src/tk/event/TkEvent__Event")
(find-rurima "== Instance Methods" "= class TkEvent::Event < TkUtil::CallbackSubst" "refm/api/src/tk/event/TkEvent__Event")
(find-rurima "--- valid_fields(group_flag = nil)" "== Instance Methods" "= class TkEvent::Event < TkUtil::CallbackSubst" "refm/api/src/tk/event/TkEvent__Event")
(find-rurima "--- valid_for_generate(group_flag = nil)" "== Instance Methods" "= class TkEvent::Event < TkUtil::CallbackSubst" "refm/api/src/tk/event/TkEvent__Event")
(find-rurima "--- generate(win, modkeys = {})" "== Instance Methods" "= class TkEvent::Event < TkUtil::CallbackSubst" "refm/api/src/tk/event/TkEvent__Event")
(find-rurima "--- above" "== Instance Methods" "= class TkEvent::Event < TkUtil::CallbackSubst" "refm/api/src/tk/event/TkEvent__Event")
(find-rurima "--- borderwidth" "== Instance Methods" "= class TkEvent::Event < TkUtil::CallbackSubst" "refm/api/src/tk/event/TkEvent__Event")
(find-rurima "--- char" "== Instance Methods" "= class TkEvent::Event < TkUtil::CallbackSubst" "refm/api/src/tk/event/TkEvent__Event")
(find-rurima "--- count" "== Instance Methods" "= class TkEvent::Event < TkUtil::CallbackSubst" "refm/api/src/tk/event/TkEvent__Event")
(find-rurima "--- detail" "== Instance Methods" "= class TkEvent::Event < TkUtil::CallbackSubst" "refm/api/src/tk/event/TkEvent__Event")
(find-rurima "--- data" "== Instance Methods" "= class TkEvent::Event < TkUtil::CallbackSubst" "refm/api/src/tk/event/TkEvent__Event")
(find-rurima "--- focus" "== Instance Methods" "= class TkEvent::Event < TkUtil::CallbackSubst" "refm/api/src/tk/event/TkEvent__Event")
(find-rurima "--- height" "== Instance Methods" "= class TkEvent::Event < TkUtil::CallbackSubst" "refm/api/src/tk/event/TkEvent__Event")
(find-rurima "--- keycode" "== Instance Methods" "= class TkEvent::Event < TkUtil::CallbackSubst" "refm/api/src/tk/event/TkEvent__Event")
(find-rurima "--- keysym" "== Instance Methods" "= class TkEvent::Event < TkUtil::CallbackSubst" "refm/api/src/tk/event/TkEvent__Event")
(find-rurima "--- keysym_num" "== Instance Methods" "= class TkEvent::Event < TkUtil::CallbackSubst" "refm/api/src/tk/event/TkEvent__Event")
(find-rurima "--- mode" "== Instance Methods" "= class TkEvent::Event < TkUtil::CallbackSubst" "refm/api/src/tk/event/TkEvent__Event")
(find-rurima "--- num" "== Instance Methods" "= class TkEvent::Event < TkUtil::CallbackSubst" "refm/api/src/tk/event/TkEvent__Event")
(find-rurima "--- button" "== Instance Methods" "= class TkEvent::Event < TkUtil::CallbackSubst" "refm/api/src/tk/event/TkEvent__Event")
(find-rurima "--- override" "== Instance Methods" "= class TkEvent::Event < TkUtil::CallbackSubst" "refm/api/src/tk/event/TkEvent__Event")
(find-rurima "--- place" "== Instance Methods" "= class TkEvent::Event < TkUtil::CallbackSubst" "refm/api/src/tk/event/TkEvent__Event")
(find-rurima "--- property" "== Instance Methods" "= class TkEvent::Event < TkUtil::CallbackSubst" "refm/api/src/tk/event/TkEvent__Event")
(find-rurima "--- rootwin_id" "== Instance Methods" "= class TkEvent::Event < TkUtil::CallbackSubst" "refm/api/src/tk/event/TkEvent__Event")
(find-rurima "--- root" "== Instance Methods" "= class TkEvent::Event < TkUtil::CallbackSubst" "refm/api/src/tk/event/TkEvent__Event")
(find-rurima "--- send_event" "== Instance Methods" "= class TkEvent::Event < TkUtil::CallbackSubst" "refm/api/src/tk/event/TkEvent__Event")
(find-rurima "--- sendevent" "== Instance Methods" "= class TkEvent::Event < TkUtil::CallbackSubst" "refm/api/src/tk/event/TkEvent__Event")
(find-rurima "--- serial" "== Instance Methods" "= class TkEvent::Event < TkUtil::CallbackSubst" "refm/api/src/tk/event/TkEvent__Event")
(find-rurima "--- state" "== Instance Methods" "= class TkEvent::Event < TkUtil::CallbackSubst" "refm/api/src/tk/event/TkEvent__Event")
(find-rurima "--- subwindow" "== Instance Methods" "= class TkEvent::Event < TkUtil::CallbackSubst" "refm/api/src/tk/event/TkEvent__Event")
(find-rurima "--- time" "== Instance Methods" "= class TkEvent::Event < TkUtil::CallbackSubst" "refm/api/src/tk/event/TkEvent__Event")
(find-rurima "--- type" "== Instance Methods" "= class TkEvent::Event < TkUtil::CallbackSubst" "refm/api/src/tk/event/TkEvent__Event")
(find-rurima "--- wheel_delta" "== Instance Methods" "= class TkEvent::Event < TkUtil::CallbackSubst" "refm/api/src/tk/event/TkEvent__Event")
(find-rurima "--- delta" "== Instance Methods" "= class TkEvent::Event < TkUtil::CallbackSubst" "refm/api/src/tk/event/TkEvent__Event")
(find-rurima "--- widget" "== Instance Methods" "= class TkEvent::Event < TkUtil::CallbackSubst" "refm/api/src/tk/event/TkEvent__Event")
(find-rurima "--- window" "== Instance Methods" "= class TkEvent::Event < TkUtil::CallbackSubst" "refm/api/src/tk/event/TkEvent__Event")
(find-rurima "--- width" "== Instance Methods" "= class TkEvent::Event < TkUtil::CallbackSubst" "refm/api/src/tk/event/TkEvent__Event")
(find-rurima "--- win_hex" "== Instance Methods" "= class TkEvent::Event < TkUtil::CallbackSubst" "refm/api/src/tk/event/TkEvent__Event")
(find-rurima "--- x" "== Instance Methods" "= class TkEvent::Event < TkUtil::CallbackSubst" "refm/api/src/tk/event/TkEvent__Event")
(find-rurima "--- x_root" "== Instance Methods" "= class TkEvent::Event < TkUtil::CallbackSubst" "refm/api/src/tk/event/TkEvent__Event")
(find-rurima "--- root_x" "== Instance Methods" "= class TkEvent::Event < TkUtil::CallbackSubst" "refm/api/src/tk/event/TkEvent__Event")
(find-rurima "--- rootx" "== Instance Methods" "= class TkEvent::Event < TkUtil::CallbackSubst" "refm/api/src/tk/event/TkEvent__Event")
(find-rurima "--- y" "== Instance Methods" "= class TkEvent::Event < TkUtil::CallbackSubst" "refm/api/src/tk/event/TkEvent__Event")
(find-rurima "--- y_root" "== Instance Methods" "= class TkEvent::Event < TkUtil::CallbackSubst" "refm/api/src/tk/event/TkEvent__Event")
(find-rurima "--- root_y" "== Instance Methods" "= class TkEvent::Event < TkUtil::CallbackSubst" "refm/api/src/tk/event/TkEvent__Event")
(find-rurima "--- rooty" "== Instance Methods" "= class TkEvent::Event < TkUtil::CallbackSubst" "refm/api/src/tk/event/TkEvent__Event")
(find-rurima "== Constants" "= class TkEvent::Event < TkUtil::CallbackSubst" "refm/api/src/tk/event/TkEvent__Event")
(find-rurima "--- TYPE_NAME_TBL" "== Constants" "= class TkEvent::Event < TkUtil::CallbackSubst" "refm/api/src/tk/event/TkEvent__Event")
(find-rurima "--- TYPE_ID_TBL" "== Constants" "= class TkEvent::Event < TkUtil::CallbackSubst" "refm/api/src/tk/event/TkEvent__Event")
(find-rurima "--- TYPE_GROUP_TBL" "== Constants" "= class TkEvent::Event < TkUtil::CallbackSubst" "refm/api/src/tk/event/TkEvent__Event")
(find-rurima "--- FIELD_FLAG" "== Constants" "= class TkEvent::Event < TkUtil::CallbackSubst" "refm/api/src/tk/event/TkEvent__Event")
(find-rurima "--- FIELD_OPERATION" "== Constants" "= class TkEvent::Event < TkUtil::CallbackSubst" "refm/api/src/tk/event/TkEvent__Event")
(find-rurima "--- KEY_TBL" "== Constants" "= class TkEvent::Event < TkUtil::CallbackSubst" "refm/api/src/tk/event/TkEvent__Event")
(find-rurima "--- PROC_TBL" "== Constants" "= class TkEvent::Event < TkUtil::CallbackSubst" "refm/api/src/tk/event/TkEvent__Event")
(find-rurima "--- ALIAS_TBL" "== Constants" "= class TkEvent::Event < TkUtil::CallbackSubst" "refm/api/src/tk/event/TkEvent__Event")
(find-rurima "= module TkFont::CoreMethods" "refm/api/src/tk/font/TkFont__CoreMethods")
(find-rurima "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "== Class Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- actual(fnt, option = nil)" "== Class Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- actual_displayof(fnt, win, option = nil)" "== Class Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- configure(fnt, slot, value = Tk::None)" "== Class Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- configinfo(fnt, slot = nil)" "== Class Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- current_configinfo(fnt, slot = nil)" "== Class Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- measure(fnt, text)" "== Class Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- measure_displayof(fnt, win, text)" "== Class Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- metrics(fnt, option = nil)" "== Class Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- metrics_displayof(fnt, win, option = nil)" "== Class Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- families(win = nil)" "== Class Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- names" "== Class Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- create_copy(font)" "== Class Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- get_obj(name)" "== Class Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- init_widget_font(pathname, *args)" "== Class Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- used_on(path = nil)" "== Class Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- failsafe(font)" "== Class Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- new(ltn = nil, knj = nil, keys = nil)" "== Class Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "== Instance Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- inspect" "== Instance Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- method_missing(id, *args)" "== Instance Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- call_font_configure(path, *args)" "== Instance Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- used" "== Instance Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- id" "== Instance Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- to_eval" "== Instance Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- font" "== Instance Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- font_id" "== Instance Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- latin_font_id" "== Instance Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- latin_font" "== Instance Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- latinfont" "== Instance Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- ascii_font" "== Instance Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- asciifont" "== Instance Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- kanji_font_id" "== Instance Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- kanji_font" "== Instance Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- kanjifont" "== Instance Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- actual(option = nil)" "== Instance Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- actual_displayof(win, option = nil)" "== Instance Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- latin_actual(option = nil)" "== Instance Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- ascii_actual(option = nil)" "== Instance Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- latin_actual_displayof(win, option = nil)" "== Instance Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- ascii_actual_displayof(win, option = nil)" "== Instance Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- kanji_actual(option = nil)" "== Instance Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- kanji_actual_displayof(win, option = nil)" "== Instance Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- [](slot)" "== Instance Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- []=(slot, val)" "== Instance Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- configure(slot, value = Tk::None)" "== Instance Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- configinfo(slot = nil)" "== Instance Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- current_configinfo(slot = nil)" "== Instance Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- delete" "== Instance Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- latin_configure(slot, value = Tk::None)" "== Instance Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- ascii_configure(slot, value = Tk::None)" "== Instance Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- latin_configinfo(slot = nil)" "== Instance Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- ascii_configinfo(slot = nil)" "== Instance Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- kanji_configure(slot, value = Tk::None)" "== Instance Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- kanji_configinfo(slot = nil)" "== Instance Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- replace(ltn, knj = Tk::None)" "== Instance Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- latin_replace(ltn)" "== Instance Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- ascii_replace(ltn)" "== Instance Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- kanji_replace(knj)" "== Instance Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- measure(text)" "== Instance Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- measure_displayof(win, text)" "== Instance Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- metrics(option = nil)" "== Instance Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- metrics_displayof(win, option = nil)" "== Instance Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- latin_metrics(option = nil)" "== Instance Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- ascii_metrics(option = nil)" "== Instance Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- latin_metrics_displayof(win, option = nil)" "== Instance Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- kanji_metrics(option = nil)" "== Instance Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- kanji_metrics_displayof(win, option = nil)" "== Instance Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- reset_pointadjust" "== Instance Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- clone" "== Instance Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- dup" "== Instance Methods" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "== Constants" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- TkCommandNames" "== Constants" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- Tk_FontID" "== Constants" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- Tk_FontNameTBL" "== Constants" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- Tk_FontUseTBL" "== Constants" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- OptionType" "== Constants" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- MetricType" "== Constants" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- DEFAULT_LATIN_FONT_NAME" "== Constants" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "--- DEFAULT_KANJI_FONT_NAME" "== Constants" "= class TkFont < Object" "refm/api/src/tk/font/TkFont")
(find-rurima "= class TkFont::DescendantFont < Object" "refm/api/src/tk/font/TkFont__DescendantFont")
(find-rurima "== Class Methods" "= class TkFont::DescendantFont < Object" "refm/api/src/tk/font/TkFont__DescendantFont")
(find-rurima "--- new(compound, type)" "== Class Methods" "= class TkFont::DescendantFont < Object" "refm/api/src/tk/font/TkFont__DescendantFont")
(find-rurima "== Instance Methods" "= class TkFont::DescendantFont < Object" "refm/api/src/tk/font/TkFont__DescendantFont")
(find-rurima "--- dup" "== Instance Methods" "= class TkFont::DescendantFont < Object" "refm/api/src/tk/font/TkFont__DescendantFont")
(find-rurima "--- clone" "== Instance Methods" "= class TkFont::DescendantFont < Object" "refm/api/src/tk/font/TkFont__DescendantFont")
(find-rurima "--- to_eval" "== Instance Methods" "= class TkFont::DescendantFont < Object" "refm/api/src/tk/font/TkFont__DescendantFont")
(find-rurima "--- font" "== Instance Methods" "= class TkFont::DescendantFont < Object" "refm/api/src/tk/font/TkFont__DescendantFont")
(find-rurima "--- [](slot)" "== Instance Methods" "= class TkFont::DescendantFont < Object" "refm/api/src/tk/font/TkFont__DescendantFont")
(find-rurima "--- []=(slot, value)" "== Instance Methods" "= class TkFont::DescendantFont < Object" "refm/api/src/tk/font/TkFont__DescendantFont")
(find-rurima "--- method_missing(id, *args)" "== Instance Methods" "= class TkFont::DescendantFont < Object" "refm/api/src/tk/font/TkFont__DescendantFont")
(find-rurima "= class TkSpinbox < TkEntry" "refm/api/src/tk/spinbox.rd")
(find-rurima "== Constants" "= class TkSpinbox < TkEntry" "refm/api/src/tk/spinbox.rd")
(find-rurima "--- TkCommandNames" "== Constants" "= class TkSpinbox < TkEntry" "refm/api/src/tk/spinbox.rd")
(find-rurima "--- WidgetClassName" "== Constants" "= class TkSpinbox < TkEntry" "refm/api/src/tk/spinbox.rd")
(find-rurima "--- WidgetClassNames" "== Constants" "= class TkSpinbox < TkEntry" "refm/api/src/tk/spinbox.rd")
(find-rurima "== Instance Methods" "= class TkSpinbox < TkEntry" "refm/api/src/tk/spinbox.rd")
(find-rurima "--- __validation_class_list" "== Instance Methods" "= class TkSpinbox < TkEntry" "refm/api/src/tk/spinbox.rd")
(find-rurima "--- command" "== Instance Methods" "= class TkSpinbox < TkEntry" "refm/api/src/tk/spinbox.rd")
(find-rurima "--- identify(x, y)" "== Instance Methods" "= class TkSpinbox < TkEntry" "refm/api/src/tk/spinbox.rd")
(find-rurima "--- set(str)" "== Instance Methods" "= class TkSpinbox < TkEntry" "refm/api/src/tk/spinbox.rd")
(find-rurima "--- spindown" "== Instance Methods" "= class TkSpinbox < TkEntry" "refm/api/src/tk/spinbox.rd")
(find-rurima "--- spinup" "== Instance Methods" "= class TkSpinbox < TkEntry" "refm/api/src/tk/spinbox.rd")
(find-rurima "= class TkSpinbox::SpinCommand < TkValidateCommand" "refm/api/src/tk/spinbox.rd")
(find-rurima "== Class Methods" "= class TkSpinbox::SpinCommand < TkValidateCommand" "refm/api/src/tk/spinbox.rd")
(find-rurima "--- _config_keys" "== Class Methods" "= class TkSpinbox::SpinCommand < TkValidateCommand" "refm/api/src/tk/spinbox.rd")
(find-rurima "= class TkSpinbox::SpinCommand::ValidateArgs < TkUtil::CallbackSubst" "refm/api/src/tk/spinbox.rd")
(find-rurima "== Constants" "= class TkSpinbox::SpinCommand::ValidateArgs < TkUtil::CallbackSubst" "refm/api/src/tk/spinbox.rd")
(find-rurima "--- KEY_TBL" "== Constants" "= class TkSpinbox::SpinCommand::ValidateArgs < TkUtil::CallbackSubst" "refm/api/src/tk/spinbox.rd")
(find-rurima "--- PROC_TBL" "== Constants" "= class TkSpinbox::SpinCommand::ValidateArgs < TkUtil::CallbackSubst" "refm/api/src/tk/spinbox.rd")
(find-rurima "== Class Methods" "= class TkSpinbox::SpinCommand::ValidateArgs < TkUtil::CallbackSubst" "refm/api/src/tk/spinbox.rd")
(find-rurima "--- ret_val(val)" "== Class Methods" "= class TkSpinbox::SpinCommand::ValidateArgs < TkUtil::CallbackSubst" "refm/api/src/tk/spinbox.rd")
(find-rurima "== Instance Methods" "= class TkSpinbox::SpinCommand::ValidateArgs < TkUtil::CallbackSubst" "refm/api/src/tk/spinbox.rd")
(find-rurima "--- current" "== Instance Methods" "= class TkSpinbox::SpinCommand::ValidateArgs < TkUtil::CallbackSubst" "refm/api/src/tk/spinbox.rd")
(find-rurima "--- direction" "== Instance Methods" "= class TkSpinbox::SpinCommand::ValidateArgs < TkUtil::CallbackSubst" "refm/api/src/tk/spinbox.rd")
(find-rurima "--- widget" "== Instance Methods" "= class TkSpinbox::SpinCommand::ValidateArgs < TkUtil::CallbackSubst" "refm/api/src/tk/spinbox.rd")
(find-rurima "= module TkComposite" "refm/api/src/tk/composite.rd")
(find-rurima "== Instance Methods" "= module TkComposite" "refm/api/src/tk/composite.rd")
(find-rurima "--- cget(slot)" "== Instance Methods" "= module TkComposite" "refm/api/src/tk/composite.rd")
(find-rurima "--- configinfo(slot)" "== Instance Methods" "= module TkComposite" "refm/api/src/tk/composite.rd")
(find-rurima "--- configure(slot, value = Tk::None)" "== Instance Methods" "= module TkComposite" "refm/api/src/tk/composite.rd")
(find-rurima "--- database_class" "== Instance Methods" "= module TkComposite" "refm/api/src/tk/composite.rd")
(find-rurima "--- database_classname" "== Instance Methods" "= module TkComposite" "refm/api/src/tk/composite.rd")
(find-rurima "--- delegate(option, *wins)" "== Instance Methods" "= module TkComposite" "refm/api/src/tk/composite.rd")
(find-rurima "--- delegate_alias(alias_opt, option, *wins)" "== Instance Methods" "= module TkComposite" "refm/api/src/tk/composite.rd")
(find-rurima "--- epath" "== Instance Methods" "= module TkComposite" "refm/api/src/tk/composite.rd")
(find-rurima "--- option_methods(*opts)" "== Instance Methods" "= module TkComposite" "refm/api/src/tk/composite.rd")
(find-rurima "= class TkCanvas < TkWindow" "refm/api/src/tk/canvas/TkCanvas")
(find-rurima "== Instance Methods" "= class TkCanvas < TkWindow" "refm/api/src/tk/canvas/TkCanvas")
(find-rurima "--- __destroy_hook__" "== Instance Methods" "= class TkCanvas < TkWindow" "refm/api/src/tk/canvas/TkCanvas")
(find-rurima "--- addtag(tag, mode, *args)" "== Instance Methods" "= class TkCanvas < TkWindow" "refm/api/src/tk/canvas/TkCanvas")
(find-rurima "--- addtag_above(tagOrId, target)" "== Instance Methods" "= class TkCanvas < TkWindow" "refm/api/src/tk/canvas/TkCanvas")
(find-rurima "--- addtag_all(tagOrId)" "== Instance Methods" "= class TkCanvas < TkWindow" "refm/api/src/tk/canvas/TkCanvas")
(find-rurima "--- addtag_below(tagOrId, target)" "== Instance Methods" "= class TkCanvas < TkWindow" "refm/api/src/tk/canvas/TkCanvas")
(find-rurima "--- addtag_closest(tagOrId, x, y, halo = Tk::None, start = Tk::None)" "== Instance Methods" "= class TkCanvas < TkWindow" "refm/api/src/tk/canvas/TkCanvas")
(find-rurima "--- addtag_enclosed(tagOrId, x1, y1, x2, y2)" "== Instance Methods" "= class TkCanvas < TkWindow" "refm/api/src/tk/canvas/TkCanvas")
(find-rurima "--- addtag_overlapping(tagOrId, x1, y1, x2, y2)" "== Instance Methods" "= class TkCanvas < TkWindow" "refm/api/src/tk/canvas/TkCanvas")
(find-rurima "--- addtag_withtag(tagOrId, tag)" "== Instance Methods" "= class TkCanvas < TkWindow" "refm/api/src/tk/canvas/TkCanvas")
(find-rurima "--- bbox(tagOrId, *tags)" "== Instance Methods" "= class TkCanvas < TkWindow" "refm/api/src/tk/canvas/TkCanvas")
(find-rurima "--- canvasx(screen_x, *args)" "== Instance Methods" "= class TkCanvas < TkWindow" "refm/api/src/tk/canvas/TkCanvas")
(find-rurima "--- canvasy(screen_y, *args)" "== Instance Methods" "= class TkCanvas < TkWindow" "refm/api/src/tk/canvas/TkCanvas")
(find-rurima "--- coords(tag, *args)" "== Instance Methods" "= class TkCanvas < TkWindow" "refm/api/src/tk/canvas/TkCanvas")
(find-rurima "--- create(type, *args)" "== Instance Methods" "= class TkCanvas < TkWindow" "refm/api/src/tk/canvas/TkCanvas")
(find-rurima "--- create_self(*args)" "== Instance Methods" "= class TkCanvas < TkWindow" "refm/api/src/tk/canvas/TkCanvas")
(find-rurima "--- dchars(tag, first, last = Tk::None)" "== Instance Methods" "= class TkCanvas < TkWindow" "refm/api/src/tk/canvas/TkCanvas")
(find-rurima "--- delete(*args)" "== Instance Methods" "= class TkCanvas < TkWindow" "refm/api/src/tk/canvas/TkCanvas")
(find-rurima "--- remove(*args)" "== Instance Methods" "= class TkCanvas < TkWindow" "refm/api/src/tk/canvas/TkCanvas")
(find-rurima "--- deltag(tag, tag_to_del = Tk::None)" "== Instance Methods" "= class TkCanvas < TkWindow" "refm/api/src/tk/canvas/TkCanvas")
(find-rurima "--- dtag(tag, tag_to_del = Tk::None)" "== Instance Methods" "= class TkCanvas < TkWindow" "refm/api/src/tk/canvas/TkCanvas")
(find-rurima "--- find(mode, *args)" "== Instance Methods" "= class TkCanvas < TkWindow" "refm/api/src/tk/canvas/TkCanvas")
(find-rurima "--- find_above(target)" "== Instance Methods" "= class TkCanvas < TkWindow" "refm/api/src/tk/canvas/TkCanvas")
(find-rurima "--- find_all" "== Instance Methods" "= class TkCanvas < TkWindow" "refm/api/src/tk/canvas/TkCanvas")
(find-rurima "--- find_below(target)" "== Instance Methods" "= class TkCanvas < TkWindow" "refm/api/src/tk/canvas/TkCanvas")
(find-rurima "--- find_closest(x, y, halo = Tk::None, start = Tk::None)" "== Instance Methods" "= class TkCanvas < TkWindow" "refm/api/src/tk/canvas/TkCanvas")
(find-rurima "--- find_enclosed(x1, y1, x2, y2)" "== Instance Methods" "= class TkCanvas < TkWindow" "refm/api/src/tk/canvas/TkCanvas")
(find-rurima "--- find_overlapping(x1, y1, x2, y2)" "== Instance Methods" "= class TkCanvas < TkWindow" "refm/api/src/tk/canvas/TkCanvas")
(find-rurima "--- find_withtag(tag)" "== Instance Methods" "= class TkCanvas < TkWindow" "refm/api/src/tk/canvas/TkCanvas")
(find-rurima "--- gettags(tagOrId)" "== Instance Methods" "= class TkCanvas < TkWindow" "refm/api/src/tk/canvas/TkCanvas")
(find-rurima "--- icursor(tagOrId, index)" "== Instance Methods" "= class TkCanvas < TkWindow" "refm/api/src/tk/canvas/TkCanvas")
(find-rurima "--- index(tagOrId, idx)" "== Instance Methods" "= class TkCanvas < TkWindow" "refm/api/src/tk/canvas/TkCanvas")
(find-rurima "--- insert(tagOrId, index, string)" "== Instance Methods" "= class TkCanvas < TkWindow" "refm/api/src/tk/canvas/TkCanvas")
(find-rurima "--- itembind(tag, context, *args)" "== Instance Methods" "= class TkCanvas < TkWindow" "refm/api/src/tk/canvas/TkCanvas")
(find-rurima "--- itembind_append(tag, context, *args)" "== Instance Methods" "= class TkCanvas < TkWindow" "refm/api/src/tk/canvas/TkCanvas")
(find-rurima "--- itembind_remove(tag, context)" "== Instance Methods" "= class TkCanvas < TkWindow" "refm/api/src/tk/canvas/TkCanvas")
(find-rurima "--- itembindinfo(tag, context = nil)" "== Instance Methods" "= class TkCanvas < TkWindow" "refm/api/src/tk/canvas/TkCanvas")
(find-rurima "--- itemcget(tag_or_id, option)" "== Instance Methods" "= class TkCanvas < TkWindow" "refm/api/src/tk/canvas/TkCanvas")
(find-rurima "--- itemconfiginfo(tag_or_id, key = nil)" "== Instance Methods" "= class TkCanvas < TkWindow" "refm/api/src/tk/canvas/TkCanvas")
(find-rurima "--- itemconfigure(tag_or_id, key value = Tk::None)" "== Instance Methods" "= class TkCanvas < TkWindow" "refm/api/src/tk/canvas/TkCanvas")
(find-rurima "--- itemfocus(tagOrId = nil)" "== Instance Methods" "= class TkCanvas < TkWindow" "refm/api/src/tk/canvas/TkCanvas")
(find-rurima "--- itemtype(tag)" "== Instance Methods" "= class TkCanvas < TkWindow" "refm/api/src/tk/canvas/TkCanvas")
(find-rurima "--- lower(tag, below = nil)" "== Instance Methods" "= class TkCanvas < TkWindow" "refm/api/src/tk/canvas/TkCanvas")
(find-rurima "--- move(tag, x, y)" "== Instance Methods" "= class TkCanvas < TkWindow" "refm/api/src/tk/canvas/TkCanvas")
(find-rurima "--- postscript(keys)" "== Instance Methods" "= class TkCanvas < TkWindow" "refm/api/src/tk/canvas/TkCanvas")
(find-rurima "--- raise(tag, above = nil)" "== Instance Methods" "= class TkCanvas < TkWindow" "refm/api/src/tk/canvas/TkCanvas")
(find-rurima "--- scale(tag, x, y, xs, ys)" "== Instance Methods" "= class TkCanvas < TkWindow" "refm/api/src/tk/canvas/TkCanvas")
(find-rurima "--- scan_dragto(x, y)" "== Instance Methods" "= class TkCanvas < TkWindow" "refm/api/src/tk/canvas/TkCanvas")
(find-rurima "--- scan_mark(x, y)" "== Instance Methods" "= class TkCanvas < TkWindow" "refm/api/src/tk/canvas/TkCanvas")
(find-rurima "--- select(mode, *args)" "== Instance Methods" "= class TkCanvas < TkWindow" "refm/api/src/tk/canvas/TkCanvas")
(find-rurima "--- select_adjust(tagOrId, index)" "== Instance Methods" "= class TkCanvas < TkWindow" "refm/api/src/tk/canvas/TkCanvas")
(find-rurima "--- select_clear" "== Instance Methods" "= class TkCanvas < TkWindow" "refm/api/src/tk/canvas/TkCanvas")
(find-rurima "--- select_from(tagOrId, index)" "== Instance Methods" "= class TkCanvas < TkWindow" "refm/api/src/tk/canvas/TkCanvas")
(find-rurima "--- select_item" "== Instance Methods" "= class TkCanvas < TkWindow" "refm/api/src/tk/canvas/TkCanvas")
(find-rurima "--- select_to(tagOrId, index)" "== Instance Methods" "= class TkCanvas < TkWindow" "refm/api/src/tk/canvas/TkCanvas")
(find-rurima "= module TkCanvasItemConfig" "refm/api/src/tk/canvas/TkCanvasItemConfig")
(find-rurima "= class TkcText < TkcItem" "refm/api/src/tk/canvas/TkcText")
(find-rurima "== Class Methods" "= class TkcText < TkcItem" "refm/api/src/tk/canvas/TkcText")
(find-rurima "--- create(canvas, *args)" "== Class Methods" "= class TkcText < TkcItem" "refm/api/src/tk/canvas/TkcText")
(find-rurima "== Instance Methods" "= class TkcText < TkcItem" "refm/api/src/tk/canvas/TkcText")
(find-rurima "--- create_self" "== Instance Methods" "= class TkcText < TkcItem" "refm/api/src/tk/canvas/TkcText")
(find-rurima "= class TkcLine < TkcItem" "refm/api/src/tk/canvas/TkcLine")
(find-rurima "== Instance Methods" "= class TkcLine < TkcItem" "refm/api/src/tk/canvas/TkcLine")
(find-rurima "--- create_self" "== Instance Methods" "= class TkcLine < TkcItem" "refm/api/src/tk/canvas/TkcLine")
(find-rurima "= class TkcWindow < TkcItem" "refm/api/src/tk/canvas/TkcWindow")
(find-rurima "== Class Methods" "= class TkcWindow < TkcItem" "refm/api/src/tk/canvas/TkcWindow")
(find-rurima "--- create(canvas, *args)" "== Class Methods" "= class TkcWindow < TkcItem" "refm/api/src/tk/canvas/TkcWindow")
(find-rurima "== Instance Methods" "= class TkcWindow < TkcItem" "refm/api/src/tk/canvas/TkcWindow")
(find-rurima "--- create_self" "== Instance Methods" "= class TkcWindow < TkcItem" "refm/api/src/tk/canvas/TkcWindow")
(find-rurima "= class TkcRectangle < TkcItem" "refm/api/src/tk/canvas/TkcRectangle")
(find-rurima "== Instance Methods" "= class TkcRectangle < TkcItem" "refm/api/src/tk/canvas/TkcRectangle")
(find-rurima "--- create_self" "== Instance Methods" "= class TkcRectangle < TkcItem" "refm/api/src/tk/canvas/TkcRectangle")
(find-rurima "= class TkcItem < TkObject" "refm/api/src/tk/canvas/TkcItem")
(find-rurima "== Constants" "= class TkcItem < TkObject" "refm/api/src/tk/canvas/TkcItem")
(find-rurima "--- CItemTypeName" "== Constants" "= class TkcItem < TkObject" "refm/api/src/tk/canvas/TkcItem")
(find-rurima "--- CItemTypeToClass" "== Constants" "= class TkcItem < TkObject" "refm/api/src/tk/canvas/TkcItem")
(find-rurima "--- CItemID_TBL" "== Constants" "= class TkcItem < TkObject" "refm/api/src/tk/canvas/TkcItem")
(find-rurima "== Class Methods" "= class TkcItem < TkObject" "refm/api/src/tk/canvas/TkcItem")
(find-rurima "--- create(canvas, *args)" "== Class Methods" "= class TkcItem < TkObject" "refm/api/src/tk/canvas/TkcItem")
(find-rurima "--- id2obj(canvas, id)" "== Class Methods" "= class TkcItem < TkObject" "refm/api/src/tk/canvas/TkcItem")
(find-rurima "--- new(parent, *args)" "== Class Methods" "= class TkcItem < TkObject" "refm/api/src/tk/canvas/TkcItem")
(find-rurima "--- type2class(type)" "== Class Methods" "= class TkcItem < TkObject" "refm/api/src/tk/canvas/TkcItem")
(find-rurima "== Instance Methods" "= class TkcItem < TkObject" "refm/api/src/tk/canvas/TkcItem")
(find-rurima "--- delete" "== Instance Methods" "= class TkcItem < TkObject" "refm/api/src/tk/canvas/TkcItem")
(find-rurima "--- remove" "== Instance Methods" "= class TkcItem < TkObject" "refm/api/src/tk/canvas/TkcItem")
(find-rurima "--- destroy" "== Instance Methods" "= class TkcItem < TkObject" "refm/api/src/tk/canvas/TkcItem")
(find-rurima "--- exist?" "== Instance Methods" "= class TkcItem < TkObject" "refm/api/src/tk/canvas/TkcItem")
(find-rurima "--- id" "== Instance Methods" "= class TkcItem < TkObject" "refm/api/src/tk/canvas/TkcItem")
(find-rurima "= class TkcArc < TkcItem" "refm/api/src/tk/canvas/TkcArc")
(find-rurima "== Instance Methods" "= class TkcArc < TkcItem" "refm/api/src/tk/canvas/TkcArc")
(find-rurima "--- create_self" "== Instance Methods" "= class TkcArc < TkcItem" "refm/api/src/tk/canvas/TkcArc")
(find-rurima "= class TkcPolygon < TkcItem" "refm/api/src/tk/canvas/TkcPolygon")
(find-rurima "== Instance Methods" "= class TkcPolygon < TkcItem" "refm/api/src/tk/canvas/TkcPolygon")
(find-rurima "--- create_self" "== Instance Methods" "= class TkcPolygon < TkcItem" "refm/api/src/tk/canvas/TkcPolygon")
(find-rurima "= class TkcImage < TkcItem" "refm/api/src/tk/canvas/TkcImage")
(find-rurima "== Instance Methods" "= class TkcImage < TkcItem" "refm/api/src/tk/canvas/TkcImage")
(find-rurima "--- create_self" "== Instance Methods" "= class TkcImage < TkcItem" "refm/api/src/tk/canvas/TkcImage")
(find-rurima "= class TkcBitmap < TkcItem" "refm/api/src/tk/canvas/TkcBitmap")
(find-rurima "== Instance Methods" "= class TkcBitmap < TkcItem" "refm/api/src/tk/canvas/TkcBitmap")
(find-rurima "--- create_self" "== Instance Methods" "= class TkcBitmap < TkcItem" "refm/api/src/tk/canvas/TkcBitmap")
(find-rurima "= class TkcOval < TkcItem" "refm/api/src/tk/canvas/TkcOval")
(find-rurima "== Instance Methods" "= class TkcOval < TkcItem" "refm/api/src/tk/canvas/TkcOval")
(find-rurima "--- create_self" "== Instance Methods" "= class TkcOval < TkcItem" "refm/api/src/tk/canvas/TkcOval")
(find-rurima "= class TkRadioButton < TkButton" "refm/api/src/tk/radiobutton.rd")
(find-rurima "== Instance Methods" "= class TkRadioButton < TkButton" "refm/api/src/tk/radiobutton.rd")
(find-rurima "--- deselect" "== Instance Methods" "= class TkRadioButton < TkButton" "refm/api/src/tk/radiobutton.rd")
(find-rurima "--- select" "== Instance Methods" "= class TkRadioButton < TkButton" "refm/api/src/tk/radiobutton.rd")
(find-rurima "--- variable(v)" "== Instance Methods" "= class TkRadioButton < TkButton" "refm/api/src/tk/radiobutton.rd")
(find-rurima "--- get_value" "== Instance Methods" "= class TkRadioButton < TkButton" "refm/api/src/tk/radiobutton.rd")
(find-rurima "--- set_value(val)" "== Instance Methods" "= class TkRadioButton < TkButton" "refm/api/src/tk/radiobutton.rd")
(find-rurima "= module Tk::Clock" "refm/api/src/tk/clock.rd")
(find-rurima "== Class Methods" "= module Tk::Clock" "refm/api/src/tk/clock.rd")
(find-rurima "--- add(clk, *args)" "== Class Methods" "= module Tk::Clock" "refm/api/src/tk/clock.rd")
(find-rurima "--- clicks(ms = nil)" "== Class Methods" "= module Tk::Clock" "refm/api/src/tk/clock.rd")
(find-rurima "--- format(clk, form = nil)" "== Class Methods" "= module Tk::Clock" "refm/api/src/tk/clock.rd")
(find-rurima "--- formatGMT(clk, form = nil)" "== Class Methods" "= module Tk::Clock" "refm/api/src/tk/clock.rd")
(find-rurima "--- microseconds" "== Class Methods" "= module Tk::Clock" "refm/api/src/tk/clock.rd")
(find-rurima "--- milliseconds" "== Class Methods" "= module Tk::Clock" "refm/api/src/tk/clock.rd")
(find-rurima "--- scan(str, base = nil)" "== Class Methods" "= module Tk::Clock" "refm/api/src/tk/clock.rd")
(find-rurima "--- scanGMT(str, base = nil)" "== Class Methods" "= module Tk::Clock" "refm/api/src/tk/clock.rd")
(find-rurima "--- seconds" "== Class Methods" "= module Tk::Clock" "refm/api/src/tk/clock.rd")
(find-rurima "= module TkPlace" "refm/api/src/tk/place.rd")
(find-rurima "== Module Functions" "= module TkPlace" "refm/api/src/tk/place.rd")
(find-rurima "--- configure(win, slot, value = Tk::None)" "== Module Functions" "= module TkPlace" "refm/api/src/tk/place.rd")
(find-rurima "--- place(win, slot, value = Tk::None)" "== Module Functions" "= module TkPlace" "refm/api/src/tk/place.rd")
(find-rurima "--- configinfo(win, slot = nil)" "== Module Functions" "= module TkPlace" "refm/api/src/tk/place.rd")
(find-rurima "--- current_configinfo(win, slot = nil)" "== Module Functions" "= module TkPlace" "refm/api/src/tk/place.rd")
(find-rurima "--- forget(win)" "== Module Functions" "= module TkPlace" "refm/api/src/tk/place.rd")
(find-rurima "--- info(win)" "== Module Functions" "= module TkPlace" "refm/api/src/tk/place.rd")
(find-rurima "--- slaves(master)" "== Module Functions" "= module TkPlace" "refm/api/src/tk/place.rd")
(find-rurima "== Constants" "= module TkPlace" "refm/api/src/tk/place.rd")
(find-rurima "--- TkCommandNames" "== Constants" "= module TkPlace" "refm/api/src/tk/place.rd")
(find-rurima "= class TkTextImage < TkObject" "refm/api/src/tk/textimage/TkTextImage")
(find-rurima "== Class Methods" "= class TkTextImage < TkObject" "refm/api/src/tk/textimage/TkTextImage")
(find-rurima "--- new(parent, index, keys)" "== Class Methods" "= class TkTextImage < TkObject" "refm/api/src/tk/textimage/TkTextImage")
(find-rurima "== Instance Methods" "= class TkTextImage < TkObject" "refm/api/src/tk/textimage/TkTextImage")
(find-rurima "--- id" "== Instance Methods" "= class TkTextImage < TkObject" "refm/api/src/tk/textimage/TkTextImage")
(find-rurima "--- mark" "== Instance Methods" "= class TkTextImage < TkObject" "refm/api/src/tk/textimage/TkTextImage")
(find-rurima "--- [](slot)" "== Instance Methods" "= class TkTextImage < TkObject" "refm/api/src/tk/textimage/TkTextImage")
(find-rurima "--- []=(slot, value)" "== Instance Methods" "= class TkTextImage < TkObject" "refm/api/src/tk/textimage/TkTextImage")
(find-rurima "--- cget(slot)" "== Instance Methods" "= class TkTextImage < TkObject" "refm/api/src/tk/textimage/TkTextImage")
(find-rurima "--- configure(slot, value = Tk::None)" "== Instance Methods" "= class TkTextImage < TkObject" "refm/api/src/tk/textimage/TkTextImage")
(find-rurima "--- configinfo(slot = nil)" "== Instance Methods" "= class TkTextImage < TkObject" "refm/api/src/tk/textimage/TkTextImage")
(find-rurima "--- current_configinfo(slot = nil)" "== Instance Methods" "= class TkTextImage < TkObject" "refm/api/src/tk/textimage/TkTextImage")
(find-rurima "--- image" "== Instance Methods" "= class TkTextImage < TkObject" "refm/api/src/tk/textimage/TkTextImage")
(find-rurima "--- image=(value)" "== Instance Methods" "= class TkTextImage < TkObject" "refm/api/src/tk/textimage/TkTextImage")
(find-rurima "= class TkTextTag < TkObject" "refm/api/src/tk/texttag/TkTextTag")
(find-rurima "== Class Methods" "= class TkTextTag < TkObject" "refm/api/src/tk/texttag/TkTextTag")
(find-rurima "--- id2obj(text, id)" "== Class Methods" "= class TkTextTag < TkObject" "refm/api/src/tk/texttag/TkTextTag")
(find-rurima "--- new(parent, *args)" "== Class Methods" "= class TkTextTag < TkObject" "refm/api/src/tk/texttag/TkTextTag")
(find-rurima "== Instance Methods" "= class TkTextTag < TkObject" "refm/api/src/tk/texttag/TkTextTag")
(find-rurima "--- id" "== Instance Methods" "= class TkTextTag < TkObject" "refm/api/src/tk/texttag/TkTextTag")
(find-rurima "--- exist?" "== Instance Methods" "= class TkTextTag < TkObject" "refm/api/src/tk/texttag/TkTextTag")
(find-rurima "--- first" "== Instance Methods" "= class TkTextTag < TkObject" "refm/api/src/tk/texttag/TkTextTag")
(find-rurima "--- last" "== Instance Methods" "= class TkTextTag < TkObject" "refm/api/src/tk/texttag/TkTextTag")
(find-rurima "--- add(*indices)" "== Instance Methods" "= class TkTextTag < TkObject" "refm/api/src/tk/texttag/TkTextTag")
(find-rurima "--- remove(*indices)" "== Instance Methods" "= class TkTextTag < TkObject" "refm/api/src/tk/texttag/TkTextTag")
(find-rurima "--- ranges" "== Instance Methods" "= class TkTextTag < TkObject" "refm/api/src/tk/texttag/TkTextTag")
(find-rurima "--- nextrange(first, last = Tk::None)" "== Instance Methods" "= class TkTextTag < TkObject" "refm/api/src/tk/texttag/TkTextTag")
(find-rurima "--- prevrange(first, last = Tk::None)" "== Instance Methods" "= class TkTextTag < TkObject" "refm/api/src/tk/texttag/TkTextTag")
(find-rurima "--- [](key)" "== Instance Methods" "= class TkTextTag < TkObject" "refm/api/src/tk/texttag/TkTextTag")
(find-rurima "--- []=(key, val)" "== Instance Methods" "= class TkTextTag < TkObject" "refm/api/src/tk/texttag/TkTextTag")
(find-rurima "--- cget(key)" "== Instance Methods" "= class TkTextTag < TkObject" "refm/api/src/tk/texttag/TkTextTag")
(find-rurima "--- configure(key, val = Tk::None)" "== Instance Methods" "= class TkTextTag < TkObject" "refm/api/src/tk/texttag/TkTextTag")
(find-rurima "--- configinfo(key = nil)" "== Instance Methods" "= class TkTextTag < TkObject" "refm/api/src/tk/texttag/TkTextTag")
(find-rurima "--- current_configinfo(key = nil)" "== Instance Methods" "= class TkTextTag < TkObject" "refm/api/src/tk/texttag/TkTextTag")
(find-rurima "--- bind(seq, *args)" "== Instance Methods" "= class TkTextTag < TkObject" "refm/api/src/tk/texttag/TkTextTag")
(find-rurima "--- bind_append(seq, *args)" "== Instance Methods" "= class TkTextTag < TkObject" "refm/api/src/tk/texttag/TkTextTag")
(find-rurima "--- bind_remove(seq)" "== Instance Methods" "= class TkTextTag < TkObject" "refm/api/src/tk/texttag/TkTextTag")
(find-rurima "--- bindinfo(context = nil)" "== Instance Methods" "= class TkTextTag < TkObject" "refm/api/src/tk/texttag/TkTextTag")
(find-rurima "--- raise(above = Tk::None)" "== Instance Methods" "= class TkTextTag < TkObject" "refm/api/src/tk/texttag/TkTextTag")
(find-rurima "--- lower(below = Tk::None)" "== Instance Methods" "= class TkTextTag < TkObject" "refm/api/src/tk/texttag/TkTextTag")
(find-rurima "--- destroy" "== Instance Methods" "= class TkTextTag < TkObject" "refm/api/src/tk/texttag/TkTextTag")
(find-rurima "== Constants" "= class TkTextTag < TkObject" "refm/api/src/tk/texttag/TkTextTag")
(find-rurima "--- TTagID_TBL" "== Constants" "= class TkTextTag < TkObject" "refm/api/src/tk/texttag/TkTextTag")
(find-rurima "--- Tk_TextTag_ID" "== Constants" "= class TkTextTag < TkObject" "refm/api/src/tk/texttag/TkTextTag")
(find-rurima "= class TkTextNamedTag < TkTextTag" "refm/api/src/tk/texttag/TkTextNamedTag")
(find-rurima "== Class Methods" "= class TkTextNamedTag < TkTextTag" "refm/api/src/tk/texttag/TkTextNamedTag")
(find-rurima "--- new(parent, name, *args)" "== Class Methods" "= class TkTextNamedTag < TkTextTag" "refm/api/src/tk/texttag/TkTextNamedTag")
(find-rurima "= class TkTextTagSel < TkTextNamedTag" "refm/api/src/tk/texttag/TkTextTagSel")
(find-rurima "== Class Methods" "= class TkTextTagSel < TkTextNamedTag" "refm/api/src/tk/texttag/TkTextTagSel")
(find-rurima "--- new(parent, *args)" "== Class Methods" "= class TkTextTagSel < TkTextNamedTag" "refm/api/src/tk/texttag/TkTextTagSel")
(find-rurima "= class TkMenubar < TkFrame" "refm/api/src/tk/menubar/TkMenubar")
(find-rurima "== Class Methods" "= class TkMenubar < TkFrame" "refm/api/src/tk/menubar/TkMenubar")
(find-rurima "--- new(parent = nil, spec = nil, options = nil)" "== Class Methods" "= class TkMenubar < TkFrame" "refm/api/src/tk/menubar/TkMenubar")
(find-rurima "== Instance Methods" "= class TkMenubar < TkFrame" "refm/api/src/tk/menubar/TkMenubar")
(find-rurima "--- add_menu(menu_info)" "== Instance Methods" "= class TkMenubar < TkFrame" "refm/api/src/tk/menubar/TkMenubar")
(find-rurima "--- [](index)" "== Instance Methods" "= class TkMenubar < TkFrame" "refm/api/src/tk/menubar/TkMenubar")
(find-rurima "= module TkPack" "refm/api/src/tk/pack.rd")
(find-rurima "== Module Functions" "= module TkPack" "refm/api/src/tk/pack.rd")
(find-rurima "--- configure(win1, win2, ... winN, keys=nil)" "== Module Functions" "= module TkPack" "refm/api/src/tk/pack.rd")
(find-rurima "--- pack(win1, win2, ... winN, keys=nil)" "== Module Functions" "= module TkPack" "refm/api/src/tk/pack.rd")
(find-rurima "--- forget(*args)" "== Module Functions" "= module TkPack" "refm/api/src/tk/pack.rd")
(find-rurima "--- info(slave)" "== Module Functions" "= module TkPack" "refm/api/src/tk/pack.rd")
(find-rurima "--- propagate(master, bool=None)" "== Module Functions" "= module TkPack" "refm/api/src/tk/pack.rd")
(find-rurima "--- slaves(master)" "== Module Functions" "= module TkPack" "refm/api/src/tk/pack.rd")
(find-rurima "== Constants" "= module TkPack" "refm/api/src/tk/pack.rd")
(find-rurima "--- TkCommandNames" "== Constants" "= module TkPack" "refm/api/src/tk/pack.rd")
(find-rurima "= class TkVirtualEvent < TkObject" "refm/api/src/tk/virtevent/TkVirtualEvent")
(find-rurima "== Constants" "= class TkVirtualEvent < TkObject" "refm/api/src/tk/virtevent/TkVirtualEvent")
(find-rurima "--- TkCommandNames" "== Constants" "= class TkVirtualEvent < TkObject" "refm/api/src/tk/virtevent/TkVirtualEvent")
(find-rurima "--- TkVirtualEventID" "== Constants" "= class TkVirtualEvent < TkObject" "refm/api/src/tk/virtevent/TkVirtualEvent")
(find-rurima "--- TkVirtualEventTBL" "== Constants" "= class TkVirtualEvent < TkObject" "refm/api/src/tk/virtevent/TkVirtualEvent")
(find-rurima "== Class Methods" "= class TkVirtualEvent < TkObject" "refm/api/src/tk/virtevent/TkVirtualEvent")
(find-rurima "--- getobj(event)" "== Class Methods" "= class TkVirtualEvent < TkObject" "refm/api/src/tk/virtevent/TkVirtualEvent")
(find-rurima "--- info" "== Class Methods" "= class TkVirtualEvent < TkObject" "refm/api/src/tk/virtevent/TkVirtualEvent")
(find-rurima "--- new(*sequences)" "== Class Methods" "= class TkVirtualEvent < TkObject" "refm/api/src/tk/virtevent/TkVirtualEvent")
(find-rurima "== Instance Methods" "= class TkVirtualEvent < TkObject" "refm/api/src/tk/virtevent/TkVirtualEvent")
(find-rurima "--- add(*sequences)" "== Instance Methods" "= class TkVirtualEvent < TkObject" "refm/api/src/tk/virtevent/TkVirtualEvent")
(find-rurima "--- delete(*sequences)" "== Instance Methods" "= class TkVirtualEvent < TkObject" "refm/api/src/tk/virtevent/TkVirtualEvent")
(find-rurima "--- info" "== Instance Methods" "= class TkVirtualEvent < TkObject" "refm/api/src/tk/virtevent/TkVirtualEvent")
(find-rurima "= class TkVirtualEvent::PreDefVirtEvent < TkVirtualEvent" "refm/api/src/tk/virtevent/TkVirtualEvent")
(find-rurima "== Class Methods" "= class TkVirtualEvent::PreDefVirtEvent < TkVirtualEvent" "refm/api/src/tk/virtevent/TkVirtualEvent")
(find-rurima "--- new(event)" "== Class Methods" "= class TkVirtualEvent::PreDefVirtEvent < TkVirtualEvent" "refm/api/src/tk/virtevent/TkVirtualEvent")
(find-rurima "--- new(event, *sequences)" "== Class Methods" "= class TkVirtualEvent::PreDefVirtEvent < TkVirtualEvent" "refm/api/src/tk/virtevent/TkVirtualEvent")
(find-rurima "= class TkLabel < TkWindow" "refm/api/src/tk/label.rd")
(find-rurima "== Constants" "= class TkLabel < TkWindow" "refm/api/src/tk/label.rd")
(find-rurima "--- TkCommandNames" "== Constants" "= class TkLabel < TkWindow" "refm/api/src/tk/label.rd")
(find-rurima "--- WidgetClassName" "== Constants" "= class TkLabel < TkWindow" "refm/api/src/tk/label.rd")
(find-rurima "--- WidgetClassNames" "== Constants" "= class TkLabel < TkWindow" "refm/api/src/tk/label.rd")
(find-rurima "== Instance Methods" "= class TkLabel < TkWindow" "refm/api/src/tk/label.rd")
(find-rurima "--- textvariable" "== Instance Methods" "= class TkLabel < TkWindow" "refm/api/src/tk/label.rd")
(find-rurima "= module TkBgError" "refm/api/src/tk/bgerror/TkBgError")
(find-rurima "== Constants" "= module TkBgError" "refm/api/src/tk/bgerror/TkBgError")
(find-rurima "--- TkCommandNames" "== Constants" "= module TkBgError" "refm/api/src/tk/bgerror/TkBgError")
(find-rurima "== Class Methods" "= module TkBgError" "refm/api/src/tk/bgerror/TkBgError")
(find-rurima "--- bgerror(message)" "== Class Methods" "= module TkBgError" "refm/api/src/tk/bgerror/TkBgError")
(find-rurima "--- show" "== Class Methods" "= module TkBgError" "refm/api/src/tk/bgerror/TkBgError")
(find-rurima "--- tkerror" "== Class Methods" "= module TkBgError" "refm/api/src/tk/bgerror/TkBgError")
(find-rurima "--- set_default" "== Class Methods" "= module TkBgError" "refm/api/src/tk/bgerror/TkBgError")
(find-rurima "--- set_handler(hdlr = Proc.new)" "== Class Methods" "= module TkBgError" "refm/api/src/tk/bgerror/TkBgError")
(find-rurima "= class TkValidateCommand::ValidateArgs < TkUtil::CallbackSubst" "refm/api/src/tk/validation/TkValidateCommand__ValidateArgs")
(find-rurima "== Class Methods" "= class TkValidateCommand::ValidateArgs < TkUtil::CallbackSubst" "refm/api/src/tk/validation/TkValidateCommand__ValidateArgs")
(find-rurima "--- ret_val(val)" "== Class Methods" "= class TkValidateCommand::ValidateArgs < TkUtil::CallbackSubst" "refm/api/src/tk/validation/TkValidateCommand__ValidateArgs")
(find-rurima "= module TkValidation" "refm/api/src/tk/validation/TkValidation")
(find-rurima "== Instance Methods" "= module TkValidation" "refm/api/src/tk/validation/TkValidation")
(find-rurima "--- __validation_class_list" "== Instance Methods" "= module TkValidation" "refm/api/src/tk/validation/TkValidation")
(find-rurima "= module TkValidation::ValidateCmd::Action" "refm/api/src/tk/validation/TkValidation__ValidateCmd__Action")
(find-rurima "== Constants" "= module TkValidation::ValidateCmd::Action" "refm/api/src/tk/validation/TkValidation__ValidateCmd__Action")
(find-rurima "--- Insert" "== Constants" "= module TkValidation::ValidateCmd::Action" "refm/api/src/tk/validation/TkValidation__ValidateCmd__Action")
(find-rurima "--- Delete" "== Constants" "= module TkValidation::ValidateCmd::Action" "refm/api/src/tk/validation/TkValidation__ValidateCmd__Action")
(find-rurima "--- Others" "== Constants" "= module TkValidation::ValidateCmd::Action" "refm/api/src/tk/validation/TkValidation__ValidateCmd__Action")
(find-rurima "--- Focus" "== Constants" "= module TkValidation::ValidateCmd::Action" "refm/api/src/tk/validation/TkValidation__ValidateCmd__Action")
(find-rurima "--- Forced" "== Constants" "= module TkValidation::ValidateCmd::Action" "refm/api/src/tk/validation/TkValidation__ValidateCmd__Action")
(find-rurima "--- Textvariable" "== Constants" "= module TkValidation::ValidateCmd::Action" "refm/api/src/tk/validation/TkValidation__ValidateCmd__Action")
(find-rurima "--- TextVariable" "== Constants" "= module TkValidation::ValidateCmd::Action" "refm/api/src/tk/validation/TkValidation__ValidateCmd__Action")
(find-rurima "= class TkValidateCommand" "refm/api/src/tk/validation/TkValidateCommand")
(find-rurima "== Class Methods" "= class TkValidateCommand" "refm/api/src/tk/validation/TkValidateCommand")
(find-rurima "--- _config_keys" "== Class Methods" "= class TkValidateCommand" "refm/api/src/tk/validation/TkValidateCommand")
(find-rurima "--- new(cmd = Proc.new, *args)" "== Class Methods" "= class TkValidateCommand" "refm/api/src/tk/validation/TkValidateCommand")
(find-rurima "== Instance Methods" "= class TkValidateCommand" "refm/api/src/tk/validation/TkValidateCommand")
(find-rurima "--- _initialize_for_cb_class(klass, cmd = Proc.new, *args)" "== Instance Methods" "= class TkValidateCommand" "refm/api/src/tk/validation/TkValidateCommand")
(find-rurima "--- to_eval" "== Instance Methods" "= class TkValidateCommand" "refm/api/src/tk/validation/TkValidateCommand")
(find-rurima "= module Tk::ItemValidateConfigure" "refm/api/src/tk/validation/ItemValidateConfigure")
(find-rurima "== Singleton Methods" "= module Tk::ItemValidateConfigure" "refm/api/src/tk/validation/ItemValidateConfigure")
(find-rurima "--- __def_validcmd(scope, klass, keys = nil)" "== Singleton Methods" "= module Tk::ItemValidateConfigure" "refm/api/src/tk/validation/ItemValidateConfigure")
(find-rurima "== Instance Methods" "= module Tk::ItemValidateConfigure" "refm/api/src/tk/validation/ItemValidateConfigure")
(find-rurima "--- __conv_item_vcmd_on_hash_kv(keys)" "== Instance Methods" "= module Tk::ItemValidateConfigure" "refm/api/src/tk/validation/ItemValidateConfigure")
(find-rurima "--- __get_item_validate_key2class(id)" "== Instance Methods" "= module Tk::ItemValidateConfigure" "refm/api/src/tk/validation/ItemValidateConfigure")
(find-rurima "--- __item_validation_class_list(id)" "== Instance Methods" "= module Tk::ItemValidateConfigure" "refm/api/src/tk/validation/ItemValidateConfigure")
(find-rurima "--- __item_validcmd_call(tagOrId, klass, key, *args, &b)" "== Instance Methods" "= module Tk::ItemValidateConfigure" "refm/api/src/tk/validation/ItemValidateConfigure")
(find-rurima "--- itemconfigure(tagOrId, slot, value = TkComm::None)" "== Instance Methods" "= module Tk::ItemValidateConfigure" "refm/api/src/tk/validation/ItemValidateConfigure")
(find-rurima "= module Tk::ValidateConfigure" "refm/api/src/tk/validation/ValidateConfigure")
(find-rurima "== Singleton Methods" "= module Tk::ValidateConfigure" "refm/api/src/tk/validation/ValidateConfigure")
(find-rurima "--- __def_validcmd(scope, klass, keys = nil)" "== Singleton Methods" "= module Tk::ValidateConfigure" "refm/api/src/tk/validation/ValidateConfigure")
(find-rurima "== Instance Methods" "= module Tk::ValidateConfigure" "refm/api/src/tk/validation/ValidateConfigure")
(find-rurima "--- __conv_vcmd_on_hash_kv(keys)" "== Instance Methods" "= module Tk::ValidateConfigure" "refm/api/src/tk/validation/ValidateConfigure")
(find-rurima "--- __get_validate_key2class" "== Instance Methods" "= module Tk::ValidateConfigure" "refm/api/src/tk/validation/ValidateConfigure")
(find-rurima "--- __validation_class_list" "== Instance Methods" "= module Tk::ValidateConfigure" "refm/api/src/tk/validation/ValidateConfigure")
(find-rurima "--- __validcmd_call(klass, key, *args, &b)" "== Instance Methods" "= module Tk::ValidateConfigure" "refm/api/src/tk/validation/ValidateConfigure")
(find-rurima "--- configure(slot, value = TkComm::None)" "== Instance Methods" "= module Tk::ValidateConfigure" "refm/api/src/tk/validation/ValidateConfigure")
(find-rurima "= class TkValidation::ValidateCmd < TkValidateCommand" "refm/api/src/tk/validation/TkValidation__ValidateCmd")
(find-rurima "= module TkPalette" "refm/api/src/tk/palette/TkPalette")
(find-rurima "== Class Methods" "= module TkPalette" "refm/api/src/tk/palette/TkPalette")
(find-rurima "--- set(*args)" "== Class Methods" "= module TkPalette" "refm/api/src/tk/palette/TkPalette")
(find-rurima "--- setPalette(*args)" "== Class Methods" "= module TkPalette" "refm/api/src/tk/palette/TkPalette")
(find-rurima "--- bisque" "== Class Methods" "= module TkPalette" "refm/api/src/tk/palette/TkPalette")
(find-rurima "--- darken(color, percent)" "== Class Methods" "= module TkPalette" "refm/api/src/tk/palette/TkPalette")
(find-rurima "--- recolorTree(win, colors)" "== Class Methods" "= module TkPalette" "refm/api/src/tk/palette/TkPalette")
(find-rurima "== Instance Methods" "= module TkPalette" "refm/api/src/tk/palette/TkPalette")
(find-rurima "--- recolorTree(colors)" "== Instance Methods" "= module TkPalette" "refm/api/src/tk/palette/TkPalette")
(find-rurima "== Constants" "= module TkPalette" "refm/api/src/tk/palette/TkPalette")
(find-rurima "--- TkCommandNames" "== Constants" "= module TkPalette" "refm/api/src/tk/palette/TkPalette")
(find-rurima "= module TkWinDDE" "refm/api/src/tk/winpkg/TkWinDDE")
(find-rurima "== Constants" "= module TkWinDDE" "refm/api/src/tk/winpkg/TkWinDDE")
(find-rurima "--- TkCommandNames" "== Constants" "= module TkWinDDE" "refm/api/src/tk/winpkg/TkWinDDE")
(find-rurima "--- PACKAGE_NAME" "== Constants" "= module TkWinDDE" "refm/api/src/tk/winpkg/TkWinDDE")
(find-rurima "== Class Methods" "= module TkWinDDE" "refm/api/src/tk/winpkg/TkWinDDE")
(find-rurima "--- package_name" "== Class Methods" "= module TkWinDDE" "refm/api/src/tk/winpkg/TkWinDDE")
(find-rurima "--- async_execute(service, topic, data)" "== Class Methods" "= module TkWinDDE" "refm/api/src/tk/winpkg/TkWinDDE")
(find-rurima "--- eval(topic, cmd, *args)" "== Class Methods" "= module TkWinDDE" "refm/api/src/tk/winpkg/TkWinDDE")
(find-rurima "--- execute(service, topic, data)" "== Class Methods" "= module TkWinDDE" "refm/api/src/tk/winpkg/TkWinDDE")
(find-rurima "--- poke(service, topic, item, data)" "== Class Methods" "= module TkWinDDE" "refm/api/src/tk/winpkg/TkWinDDE")
(find-rurima "--- request(service, topic, item)" "== Class Methods" "= module TkWinDDE" "refm/api/src/tk/winpkg/TkWinDDE")
(find-rurima "--- servername(*args)" "== Class Methods" "= module TkWinDDE" "refm/api/src/tk/winpkg/TkWinDDE")
(find-rurima "--- services(service, topic)" "== Class Methods" "= module TkWinDDE" "refm/api/src/tk/winpkg/TkWinDDE")
(find-rurima "== Instance Methods" "= module TkWinDDE" "refm/api/src/tk/winpkg/TkWinDDE")
(find-rurima "--- async_eval(topic, cmd, *args)" "== Instance Methods" "= module TkWinDDE" "refm/api/src/tk/winpkg/TkWinDDE")
(find-rurima "--- async_execute(service, topic, data)" "== Instance Methods" "= module TkWinDDE" "refm/api/src/tk/winpkg/TkWinDDE")
(find-rurima "--- binary_request(service, topic, item)" "== Instance Methods" "= module TkWinDDE" "refm/api/src/tk/winpkg/TkWinDDE")
(find-rurima "--- eval(topic, cmd, *args)" "== Instance Methods" "= module TkWinDDE" "refm/api/src/tk/winpkg/TkWinDDE")
(find-rurima "--- execute(service, topic, data)" "== Instance Methods" "= module TkWinDDE" "refm/api/src/tk/winpkg/TkWinDDE")
(find-rurima "--- poke(service, topic, item, data)" "== Instance Methods" "= module TkWinDDE" "refm/api/src/tk/winpkg/TkWinDDE")
(find-rurima "--- request(service, topic, item)" "== Instance Methods" "= module TkWinDDE" "refm/api/src/tk/winpkg/TkWinDDE")
(find-rurima "--- servername(*args)" "== Instance Methods" "= module TkWinDDE" "refm/api/src/tk/winpkg/TkWinDDE")
(find-rurima "--- services(service, topic)" "== Instance Methods" "= module TkWinDDE" "refm/api/src/tk/winpkg/TkWinDDE")
(find-rurima "= module TkWinRegistry" "refm/api/src/tk/winpkg/TkWinRegistry")
(find-rurima "== Constants" "= module TkWinRegistry" "refm/api/src/tk/winpkg/TkWinRegistry")
(find-rurima "--- TkCommandNames" "== Constants" "= module TkWinRegistry" "refm/api/src/tk/winpkg/TkWinRegistry")
(find-rurima "== Class Methods" "= module TkWinRegistry" "refm/api/src/tk/winpkg/TkWinRegistry")
(find-rurima "--- delete(keynam, valnam = nil)" "== Class Methods" "= module TkWinRegistry" "refm/api/src/tk/winpkg/TkWinRegistry")
(find-rurima "--- delete(keynam, valnam = Tk::None)" "== Class Methods" "= module TkWinRegistry" "refm/api/src/tk/winpkg/TkWinRegistry")
(find-rurima "--- get(keynam, valnam)" "== Class Methods" "= module TkWinRegistry" "refm/api/src/tk/winpkg/TkWinRegistry")
(find-rurima "--- keys(keynam)" "== Class Methods" "= module TkWinRegistry" "refm/api/src/tk/winpkg/TkWinRegistry")
(find-rurima "--- keys(keynam, pattern = nil)" "== Class Methods" "= module TkWinRegistry" "refm/api/src/tk/winpkg/TkWinRegistry")
(find-rurima "--- set(keynam, valnam = nil, data = nil, dattype = nil)" "== Class Methods" "= module TkWinRegistry" "refm/api/src/tk/winpkg/TkWinRegistry")
(find-rurima "--- set(keynam, valnam = Tk::None, data = Tk::None, dattype = Tk::None)" "== Class Methods" "= module TkWinRegistry" "refm/api/src/tk/winpkg/TkWinRegistry")
(find-rurima "--- type(keynam, valnam)" "== Class Methods" "= module TkWinRegistry" "refm/api/src/tk/winpkg/TkWinRegistry")
(find-rurima "--- values(keynam)" "== Class Methods" "= module TkWinRegistry" "refm/api/src/tk/winpkg/TkWinRegistry")
(find-rurima "--- values(keynam, pattern = nil)" "== Class Methods" "= module TkWinRegistry" "refm/api/src/tk/winpkg/TkWinRegistry")
(find-rurima "== Instance Methods" "= module TkWinRegistry" "refm/api/src/tk/winpkg/TkWinRegistry")
(find-rurima "--- broadcast(keynam, timeout = nil)" "== Instance Methods" "= module TkWinRegistry" "refm/api/src/tk/winpkg/TkWinRegistry")
(find-rurima "--- delete(keynam, valnam = nil)" "== Instance Methods" "= module TkWinRegistry" "refm/api/src/tk/winpkg/TkWinRegistry")
(find-rurima "--- delete(keynam, valnam = Tk::None)" "== Instance Methods" "= module TkWinRegistry" "refm/api/src/tk/winpkg/TkWinRegistry")
(find-rurima "--- get(keynam, valnam)" "== Instance Methods" "= module TkWinRegistry" "refm/api/src/tk/winpkg/TkWinRegistry")
(find-rurima "--- keys(keynam)" "== Instance Methods" "= module TkWinRegistry" "refm/api/src/tk/winpkg/TkWinRegistry")
(find-rurima "--- keys(keynam, pattern = nil)" "== Instance Methods" "= module TkWinRegistry" "refm/api/src/tk/winpkg/TkWinRegistry")
(find-rurima "--- set(keynam, valnam = nil, data = nil, dattype = nil)" "== Instance Methods" "= module TkWinRegistry" "refm/api/src/tk/winpkg/TkWinRegistry")
(find-rurima "--- set(keynam, valnam = Tk::None, data = Tk::None, dattype = Tk::None)" "== Instance Methods" "= module TkWinRegistry" "refm/api/src/tk/winpkg/TkWinRegistry")
(find-rurima "--- type(keynam, valnam)" "== Instance Methods" "= module TkWinRegistry" "refm/api/src/tk/winpkg/TkWinRegistry")
(find-rurima "--- values(keynam)" "== Instance Methods" "= module TkWinRegistry" "refm/api/src/tk/winpkg/TkWinRegistry")
(find-rurima "--- values(keynam, pattern = nil)" "== Instance Methods" "= module TkWinRegistry" "refm/api/src/tk/winpkg/TkWinRegistry")
(find-rurima "= reopen TclTkLib" "refm/api/src/tk/TclTkLib")
(find-rurima "== Class Methods" "= reopen TclTkLib" "refm/api/src/tk/TclTkLib")
(find-rurima "--- _encoding" "== Class Methods" "= reopen TclTkLib" "refm/api/src/tk/TclTkLib")
(find-rurima "--- _encoding=(name)" "== Class Methods" "= reopen TclTkLib" "refm/api/src/tk/TclTkLib")
(find-rurima "--- encoding" "== Class Methods" "= reopen TclTkLib" "refm/api/src/tk/TclTkLib")
(find-rurima "--- encoding=(name)" "== Class Methods" "= reopen TclTkLib" "refm/api/src/tk/TclTkLib")
(find-rurima "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "== Constants" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- EventFlag" "== Constants" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- INTERP" "== Constants" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- WIDGET_DESTROY_HOOK" "== Constants" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "== Class Methods" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- callback(*arg)" "== Class Methods" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "== Instance Methods" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- _tk_call_to_list_core(depth, arg_enc, val_enc, *args)" "== Instance Methods" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- after(ms, cmd = Proc.new)" "== Instance Methods" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- after_cancel(after_id)" "== Instance Methods" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- after_idle(cmd = Proc.new)" "== Instance Methods" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- appname(name = Tk::None)" "== Instance Methods" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- appsend(interp, async, *args)" "== Instance Methods" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- appsend_deny" "== Instance Methods" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- appsend_displayof(interp, win, async, *args)" "== Instance Methods" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- callback_break" "== Instance Methods" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- callback_continue" "== Instance Methods" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- callback_return" "== Instance Methods" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- chooseColor(keys = nil)" "== Instance Methods" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- chooseDirectory(keys = nil)" "== Instance Methods" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- clock_clicks" "== Instance Methods" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- clock_format" "== Instance Methods" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- clock_formatGMT" "== Instance Methods" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- clock_scan" "== Instance Methods" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- clock_scanGMT" "== Instance Methods" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- clock_seconds" "== Instance Methods" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- do_one_event(flag = TclTkLib::EventFlag::ALL)" "== Instance Methods" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- event_generate(win, context, keys = nil)" "== Instance Methods" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- getMultipleOpenFile(keys = nil)" "== Instance Methods" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- getMultipleSaveFile(keys = nil)" "== Instance Methods" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- getOpenFile(keys = nil)" "== Instance Methods" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- getSaveFile(keys = nil)" "== Instance Methods" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- get_eventloop_tick" "== Instance Methods" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- get_eventloop_weight" "== Instance Methods" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- get_no_event_wait" "== Instance Methods" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- inactive" "== Instance Methods" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- inactive_displayof(win)" "== Instance Methods" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- info(*args)" "== Instance Methods" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- ip_eval(cmd_string)" "== Instance Methods" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- ip_eval_with_enc(cmd_string)" "== Instance Methods" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- ip_eval_without_enc(cmd_string)" "== Instance Methods" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- ip_invoke(*args)" "== Instance Methods" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- ip_invoke_with_enc(*args)" "== Instance Methods" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- ip_invoke_without_enc(*args)" "== Instance Methods" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- is_mainloop?" "== Instance Methods" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- load_cmd_on_ip(tk_cmd)" "== Instance Methods" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- mainloop(check_root = true)" "== Instance Methods" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- mainloop_exist?" "== Instance Methods" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- mainloop_thread?" "== Instance Methods" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- mainloop_watchdog(check_root = true)" "== Instance Methods" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- messageBox(keys)" "== Instance Methods" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- rb_appsend(interp, async, *args)" "== Instance Methods" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- rb_appsend_displayof(interp, win, async, *args)" "== Instance Methods" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- reset_inactive" "== Instance Methods" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- reset_inactive_displayof(win)" "== Instance Methods" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- restart(app_name = nil, keys = {})" "== Instance Methods" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- scaling(scale = nil)" "== Instance Methods" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- scaling_displayof(win, scale=nil)" "== Instance Methods" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- set_eventloop_ticktimer_tick" "== Instance Methods" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- set_eventloop_weight(loop_max, no_event_tick)" "== Instance Methods" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- set_no_event_wait(wait)" "== Instance Methods" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- tk_call(*args)" "== Instance Methods" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- tk_call_to_list(*args)" "== Instance Methods" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- tk_call_to_list_with_enc(*args)" "== Instance Methods" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- tk_call_to_list_without_enc(*args)" "== Instance Methods" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- tk_call_to_simplelist(*args)" "== Instance Methods" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- tk_call_to_simplelist_with_enc(*args)" "== Instance Methods" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- tk_call_to_simplelist_without_enc(*args)" "== Instance Methods" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- tk_call_with_enc(*args)" "== Instance Methods" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- tk_call_without_enc(*args)" "== Instance Methods" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "--- windowingsystem" "== Instance Methods" "= module TkCore" "refm/api/src/tk/TkCore")
(find-rurima "= module TkClipboard" "refm/api/src/tk/clipboard/TkClipboard")
(find-rurima "== Class Methods" "= module TkClipboard" "refm/api/src/tk/clipboard/TkClipboard")
(find-rurima "--- clear(win = nil)" "== Class Methods" "= module TkClipboard" "refm/api/src/tk/clipboard/TkClipboard")
(find-rurima "--- clear_on_display(win)" "== Class Methods" "= module TkClipboard" "refm/api/src/tk/clipboard/TkClipboard")
(find-rurima "--- get(type = nil)" "== Class Methods" "= module TkClipboard" "refm/api/src/tk/clipboard/TkClipboard")
(find-rurima "--- get_on_display(win, type = nil)" "== Class Methods" "= module TkClipboard" "refm/api/src/tk/clipboard/TkClipboard")
(find-rurima "--- set(data, keys = nil)" "== Class Methods" "= module TkClipboard" "refm/api/src/tk/clipboard/TkClipboard")
(find-rurima "--- set_on_display(win, data, keys = nil)" "== Class Methods" "= module TkClipboard" "refm/api/src/tk/clipboard/TkClipboard")
(find-rurima "--- append(data, keys = nil)" "== Class Methods" "= module TkClipboard" "refm/api/src/tk/clipboard/TkClipboard")
(find-rurima "--- append_on_display(win, data, keys = nil)" "== Class Methods" "= module TkClipboard" "refm/api/src/tk/clipboard/TkClipboard")
(find-rurima "== Instance Methods" "= module TkClipboard" "refm/api/src/tk/clipboard/TkClipboard")
(find-rurima "--- clear" "== Instance Methods" "= module TkClipboard" "refm/api/src/tk/clipboard/TkClipboard")
(find-rurima "--- get(type = nil)" "== Instance Methods" "= module TkClipboard" "refm/api/src/tk/clipboard/TkClipboard")
(find-rurima "--- set(data, keys = nil)" "== Instance Methods" "= module TkClipboard" "refm/api/src/tk/clipboard/TkClipboard")
(find-rurima "--- append(data, keys = nil)" "== Instance Methods" "= module TkClipboard" "refm/api/src/tk/clipboard/TkClipboard")
(find-rurima "== Constants" "= module TkClipboard" "refm/api/src/tk/clipboard/TkClipboard")
(find-rurima "--- TkCommandNames" "== Constants" "= module TkClipboard" "refm/api/src/tk/clipboard/TkClipboard")
(find-rurima "= class TkFrame < TkWindow" "refm/api/src/tk/frame/TkFrame")
(find-rurima "== Class Methods" "= class TkFrame < TkWindow" "refm/api/src/tk/frame/TkFrame")
(find-rurima "--- new(parent = nil, keys = nil)" "== Class Methods" "= class TkFrame < TkWindow" "refm/api/src/tk/frame/TkFrame")
(find-rurima "--- database_class" "== Class Methods" "= class TkFrame < TkWindow" "refm/api/src/tk/frame/TkFrame")
(find-rurima "--- database_classname" "== Class Methods" "= class TkFrame < TkWindow" "refm/api/src/tk/frame/TkFrame")
(find-rurima "--- bind(*args) { ... }" "== Class Methods" "= class TkFrame < TkWindow" "refm/api/src/tk/frame/TkFrame")
(find-rurima "--- bind_append(*args) { ... }" "== Class Methods" "= class TkFrame < TkWindow" "refm/api/src/tk/frame/TkFrame")
(find-rurima "--- bind_remove(*args)" "== Class Methods" "= class TkFrame < TkWindow" "refm/api/src/tk/frame/TkFrame")
(find-rurima "--- bindinfo(*args)" "== Class Methods" "= class TkFrame < TkWindow" "refm/api/src/tk/frame/TkFrame")
(find-rurima "== Instance Methods" "= class TkFrame < TkWindow" "refm/api/src/tk/frame/TkFrame")
(find-rurima "--- database_classname" "== Instance Methods" "= class TkFrame < TkWindow" "refm/api/src/tk/frame/TkFrame")
(find-rurima "--- create_self(keys)" "== Instance Methods" "= class TkFrame < TkWindow" "refm/api/src/tk/frame/TkFrame")
(find-rurima "== Constants" "= class TkFrame < TkWindow" "refm/api/src/tk/frame/TkFrame")
(find-rurima "--- TkCommandNames" "== Constants" "= class TkFrame < TkWindow" "refm/api/src/tk/frame/TkFrame")
(find-rurima "--- WidgetClassName" "== Constants" "= class TkFrame < TkWindow" "refm/api/src/tk/frame/TkFrame")
(find-rurima "= module TkKinput" "refm/api/src/tk/kinput/TkKinput")
(find-rurima "== Class Methods" "= module TkKinput" "refm/api/src/tk/kinput/TkKinput")
(find-rurima "--- start(win, style = Tk::None)" "== Class Methods" "= module TkKinput" "refm/api/src/tk/kinput/TkKinput")
(find-rurima "--- send_spot(win)" "== Class Methods" "= module TkKinput" "refm/api/src/tk/kinput/TkKinput")
(find-rurima "--- input_start(win, keys = nil)" "== Class Methods" "= module TkKinput" "refm/api/src/tk/kinput/TkKinput")
(find-rurima "--- attribute_config(win, slot, value = Tk::None)" "== Class Methods" "= module TkKinput" "refm/api/src/tk/kinput/TkKinput")
(find-rurima "--- attribute_info(win, slot = nil)" "== Class Methods" "= module TkKinput" "refm/api/src/tk/kinput/TkKinput")
(find-rurima "--- input_end(win)" "== Class Methods" "= module TkKinput" "refm/api/src/tk/kinput/TkKinput")
(find-rurima "== Instance Methods" "= module TkKinput" "refm/api/src/tk/kinput/TkKinput")
(find-rurima "--- kinput_start(style = Tk::None)" "== Instance Methods" "= module TkKinput" "refm/api/src/tk/kinput/TkKinput")
(find-rurima "--- kinput_send_spot" "== Instance Methods" "= module TkKinput" "refm/api/src/tk/kinput/TkKinput")
(find-rurima "--- kanji_input_start(keys = nil)" "== Instance Methods" "= module TkKinput" "refm/api/src/tk/kinput/TkKinput")
(find-rurima "--- kinput_attribute_config(slot, value = Tk::None)" "== Instance Methods" "= module TkKinput" "refm/api/src/tk/kinput/TkKinput")
(find-rurima "--- kinput_attribute_info(slot = nil)" "== Instance Methods" "= module TkKinput" "refm/api/src/tk/kinput/TkKinput")
(find-rurima "--- kanji_input_end" "== Instance Methods" "= module TkKinput" "refm/api/src/tk/kinput/TkKinput")
(find-rurima "== Constants" "= module TkKinput" "refm/api/src/tk/kinput/TkKinput")
(find-rurima "--- TkCommandNames" "== Constants" "= module TkKinput" "refm/api/src/tk/kinput/TkKinput")
(find-rurima "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "== Constants" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- WidgetClassName" "== Constants" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "== Class Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- new(parent = nil, keys = nil)" "== Class Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- database_class" "== Class Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- database_classname" "== Class Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- to_eval" "== Class Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- bind_class" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- bindtags(taglist = nil)" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- bindtags=(taglist)" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- bindtags_shift" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- bindtags_unshift(tag)" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- caret(keys = nil)" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- colormodel(model = Tk::None)" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- command(cmd = nil, &block)" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- database_class" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- database_classname" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- destroy" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- eventloop_wait_destroy" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- eventloop_tkwait_destroy" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- eventloop_wait_window" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- eventloop_tkwait_window" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- eventloop_wait_visibility" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- eventloop_wait" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- eventloop_tkwait" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- eventloop_tkwait_visibility" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- exist?" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- grab(opt = nil)" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- grab_current" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- current_grab" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- grab_release" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- release_grab" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- grab_set" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- set_grab" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- grab_set_global" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- set_global_grab" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- grab_status" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- grid(keys = nil)" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- grid_bbox(*args)" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- grid_columnconfig(index, keys)" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- grid_columnconfigure(index, keys)" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- grid_columnconfiginfo(index, slot = nil)" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- grid_config(slot, value = Tk::None)" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- grid_configure(slot, value = Tk::None)" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- grid_forget" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- ungrid" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- grid_in(target, kers = nil)" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- grid_info" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- grid_location(x, y)" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- grid_propagate(mode = Tk::None)" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- grid_remove" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- grid_rowconfig(index, keys)" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- grid_rowconfigure(index, keys)" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- grid_rowconfiginfo(index, slot = nil)" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- grid_size" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- grid_slaves(args)" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- lower(below = Tk::None)" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- lower_window(below = Tk::None)" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- pack(keys = nil)" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- pack_config(slot, value = Tk::None)" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- pack_configure(slot, value = Tk::None)" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- pack_forget" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- unpack" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- pack_in(target, keys = nil)" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- pack_info" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- pack_propagate(mode = Tk::None)" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- pack_slaves" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- place(keys)" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- place_config(slot, value = Tk::None)" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- place_configure(slot, value = Tk::None)" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- place_configinfo(slot = nil)" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- place_forget" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- unplace" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- place_in(target, keys = nil)" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- place_info" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- place_slaves" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- raise(above = Tk::None)" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- raise_window(above = Tk::None)" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- focus(force = false)" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- set_focus(force = false)" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- thread_wait_destroy" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- thread_tkwait_destroy" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- thread_tkwait_window" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- thread_wait_window" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- thread_wait_visibility" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- thread_wait" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- thread_tkwait" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- thread_tkwait_visibility" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- wait_destroy(on_thread = true)" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- tkwait_destroy(on_thread = true)" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- wait_window(on_thread = true)" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- tkwait_window(on_thread = true)" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- wait_visibility(on_thread = true)" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- wait(on_thread = true)" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "--- tkwait(on_thread = true)" "== Instance Methods" "= class TkWindow < TkObject" "refm/api/src/tk/TkWindow")
(find-rurima "= class TkTextWindow < TkObject" "refm/api/src/tk/textwindow/TkTextWindow")
(find-rurima "== Class Methods" "= class TkTextWindow < TkObject" "refm/api/src/tk/textwindow/TkTextWindow")
(find-rurima "--- new(parent, index, keys = {})" "== Class Methods" "= class TkTextWindow < TkObject" "refm/api/src/tk/textwindow/TkTextWindow")
(find-rurima "== Instance Methods" "= class TkTextWindow < TkObject" "refm/api/src/tk/textwindow/TkTextWindow")
(find-rurima "--- id" "== Instance Methods" "= class TkTextWindow < TkObject" "refm/api/src/tk/textwindow/TkTextWindow")
(find-rurima "--- mark" "== Instance Methods" "= class TkTextWindow < TkObject" "refm/api/src/tk/textwindow/TkTextWindow")
(find-rurima "--- [](slot)" "== Instance Methods" "= class TkTextWindow < TkObject" "refm/api/src/tk/textwindow/TkTextWindow")
(find-rurima "--- []=(slot, value)" "== Instance Methods" "= class TkTextWindow < TkObject" "refm/api/src/tk/textwindow/TkTextWindow")
(find-rurima "--- cget(slot)" "== Instance Methods" "= class TkTextWindow < TkObject" "refm/api/src/tk/textwindow/TkTextWindow")
(find-rurima "--- configure(slot, value = Tk::None)" "== Instance Methods" "= class TkTextWindow < TkObject" "refm/api/src/tk/textwindow/TkTextWindow")
(find-rurima "---configinfo(slot = nil)" "== Instance Methods" "= class TkTextWindow < TkObject" "refm/api/src/tk/textwindow/TkTextWindow")
(find-rurima "--- current_configinfo(slot = nil)" "== Instance Methods" "= class TkTextWindow < TkObject" "refm/api/src/tk/textwindow/TkTextWindow")
(find-rurima "--- window" "== Instance Methods" "= class TkTextWindow < TkObject" "refm/api/src/tk/textwindow/TkTextWindow")
(find-rurima "--- window=(value)" "== Instance Methods" "= class TkTextWindow < TkObject" "refm/api/src/tk/textwindow/TkTextWindow")
(find-rurima "--- create" "== Instance Methods" "= class TkTextWindow < TkObject" "refm/api/src/tk/textwindow/TkTextWindow")
(find-rurima "--- create=(value)" "== Instance Methods" "= class TkTextWindow < TkObject" "refm/api/src/tk/textwindow/TkTextWindow")
(find-rurima "= module TkBindCore" "refm/api/src/tk/TkBindCore")
(find-rurima "== Instance Methods" "= module TkBindCore" "refm/api/src/tk/TkBindCore")
(find-rurima "--- bind(context, *args)" "== Instance Methods" "= module TkBindCore" "refm/api/src/tk/TkBindCore")
(find-rurima "--- bind_append(context, *args)" "== Instance Methods" "= module TkBindCore" "refm/api/src/tk/TkBindCore")
(find-rurima "--- bind_remove(context)" "== Instance Methods" "= module TkBindCore" "refm/api/src/tk/TkBindCore")
(find-rurima "--- bindinfo(context = nil)" "== Instance Methods" "= module TkBindCore" "refm/api/src/tk/TkBindCore")
(find-rurima "= module TkComm" "refm/api/src/tk/TkComm")
(find-rurima "== Constants" "= module TkComm" "refm/api/src/tk/TkComm")
(find-rurima "--- Event" "== Constants" "= module TkComm" "refm/api/src/tk/TkComm")
(find-rurima "--- GET_CONFIGINFO_AS_ARRAY" "== Constants" "= module TkComm" "refm/api/src/tk/TkComm")
(find-rurima "--- GET_CONFIGINFOwoRES_AS_ARRAY" "== Constants" "= module TkComm" "refm/api/src/tk/TkComm")
(find-rurima "--- None" "== Constants" "= module TkComm" "refm/api/src/tk/TkComm")
(find-rurima "--- TkExtlibAutoloadModule" "== Constants" "= module TkComm" "refm/api/src/tk/TkComm")
(find-rurima "--- Tk_CMDTBL" "== Constants" "= module TkComm" "refm/api/src/tk/TkComm")
(find-rurima "--- Tk_IDs" "== Constants" "= module TkComm" "refm/api/src/tk/TkComm")
(find-rurima "--- Tk_WINDOWS" "== Constants" "= module TkComm" "refm/api/src/tk/TkComm")
(find-rurima "--- USE_TCLs_LIST_FUNCTIONS" "== Constants" "= module TkComm" "refm/api/src/tk/TkComm")
(find-rurima "--- WidgetClassNames" "== Constants" "= module TkComm" "refm/api/src/tk/TkComm")
(find-rurima "== Class Methods" "= module TkComm" "refm/api/src/tk/TkComm")
(find-rurima "--- _at(x, y = nil)" "== Class Methods" "= module TkComm" "refm/api/src/tk/TkComm")
(find-rurima "--- _callback_entry?(obj)" "== Class Methods" "= module TkComm" "refm/api/src/tk/TkComm")
(find-rurima "--- _callback_entry_class?(klass)" "== Class Methods" "= module TkComm" "refm/api/src/tk/TkComm")
(find-rurima "--- _curr_cmd_id" "== Class Methods" "= module TkComm" "refm/api/src/tk/TkComm")
(find-rurima "--- _fromUTF8(str, encoding = nil)" "== Class Methods" "= module TkComm" "refm/api/src/tk/TkComm")
(find-rurima "--- _genobj_for_tkwidget(path)" "== Class Methods" "= module TkComm" "refm/api/src/tk/TkComm")
(find-rurima "--- _get_eval_string" "== Class Methods" "= module TkComm" "refm/api/src/tk/TkComm")
(find-rurima "--- _next_cmd_id" "== Class Methods" "= module TkComm" "refm/api/src/tk/TkComm")
(find-rurima "--- _toUTF8(str, encoding = nil)" "== Class Methods" "= module TkComm" "refm/api/src/tk/TkComm")
(find-rurima "--- array2tk_list(ary, enc = nil)" "== Class Methods" "= module TkComm" "refm/api/src/tk/TkComm")
(find-rurima "--- hash_kv" "== Class Methods" "= module TkComm" "refm/api/src/tk/TkComm")
(find-rurima "--- image_obj(val)" "== Class Methods" "= module TkComm" "refm/api/src/tk/TkComm")
(find-rurima "--- install_cmd(cmd)" "== Class Methods" "= module TkComm" "refm/api/src/tk/TkComm")
(find-rurima "--- list(val, depth = 0, enc = true)" "== Class Methods" "= module TkComm" "refm/api/src/tk/TkComm")
(find-rurima "--- procedure(val)" "== Class Methods" "= module TkComm" "refm/api/src/tk/TkComm")
(find-rurima "--- simplelist(val, src_enc = true, dst_enc = true)" "== Class Methods" "= module TkComm" "refm/api/src/tk/TkComm")
(find-rurima "--- tk_tcl2ruby(val, enc_mode = false, listobj = true)" "== Class Methods" "= module TkComm" "refm/api/src/tk/TkComm")
(find-rurima "--- uninstall_cmd(id)" "== Class Methods" "= module TkComm" "refm/api/src/tk/TkComm")
(find-rurima "--- window(val)" "== Class Methods" "= module TkComm" "refm/api/src/tk/TkComm")
(find-rurima "== Instance Methods" "= module TkComm" "refm/api/src/tk/TkComm")
(find-rurima "--- bind(tag_or_class, context, *args)" "== Instance Methods" "= module TkComm" "refm/api/src/tk/TkComm")
(find-rurima "--- bind_all(context, *args)" "== Instance Methods" "= module TkComm" "refm/api/src/tk/TkComm")
(find-rurima "--- bind_append(tag_or_class, context, *args)" "== Instance Methods" "= module TkComm" "refm/api/src/tk/TkComm")
(find-rurima "--- bind_append_all(context, *args)" "== Instance Methods" "= module TkComm" "refm/api/src/tk/TkComm")
(find-rurima "--- bind_remove(tag_or_class, context)" "== Instance Methods" "= module TkComm" "refm/api/src/tk/TkComm")
(find-rurima "--- bind_remove_all(context)" "== Instance Methods" "= module TkComm" "refm/api/src/tk/TkComm")
(find-rurima "--- bindinfo(tag_or_class, context = nil)" "== Instance Methods" "= module TkComm" "refm/api/src/tk/TkComm")
(find-rurima "--- bindinfo_all(context = nil)" "== Instance Methods" "= module TkComm" "refm/api/src/tk/TkComm")
(find-rurima "--- grid" "== Instance Methods" "= module TkComm" "refm/api/src/tk/TkComm")
(find-rurima "--- pack" "== Instance Methods" "= module TkComm" "refm/api/src/tk/TkComm")
(find-rurima "--- subst" "== Instance Methods" "= module TkComm" "refm/api/src/tk/TkComm")
(find-rurima "--- update" "== Instance Methods" "= module TkComm" "refm/api/src/tk/TkComm")
(find-rurima "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "== Class Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- callback(args)" "== Class Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- new(val=\"\")" "== Class Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- new_hash(val = {})" "== Class Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- wait" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- value" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- value=(val)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- set_value(val)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- set_value_type(val)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- value_type=" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- [](index)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- []=(index, val)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- to_i" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- element_to_i(*idxs)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- to_f" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- element_to_f(*idxs)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- to_s" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- to_a" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- ==(other)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- <=>(other)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- &(other)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- |(other)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- +(other)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- -(other)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- *(other)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- /(other)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- %(other)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- **(other)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- =~(other)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- unset(elem=nil)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- remove(elem=nil)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- id" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- is_hash?" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- is_scalar?" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- keys" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- ref(*idxs)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- exist?(*elems)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- trace_callback(elem, op)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- trace(opts, cmd)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- trace_element(elem, opts, cmd)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- trace_vinfo" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- trace_vinfo_for_element(elem)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- trace_vdelete(opts, cmd)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- trace_vdelete_for_element(elem, opts, cmd)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- clear" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- coerce(other)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- size" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- lappend(*elems)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- element_lappend(idxs, *elems)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- lindex(idx)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- lget(idx)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- element_lindex(elem_idxs, idx)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- element_lget(elem_idxs, idx)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- lget_i(idx)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- element_lget_i(elem_idxs, idx)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- lget_f(idx)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- element_lget_f(elem_idxs, idx)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- lset(idx, val)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- element_lset(elem_idxs, idx, val)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- bool" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- bool=" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- set_bool" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- list" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- list=" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- set_list(val)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- list_element(*idxs)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- element_to_a(*idxs)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- list_type=" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- set_list_type(val)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- set_list_element_type(idxs, val)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- numeric" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- numeric=" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- set_numeric(val)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- numeric_element(*idxs)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- set_numeric_element(idxs, val)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- set_numeric_type(val)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- numeric_type=" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- set_numeric_element_type(idxs, val)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- bool_element" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- set_bool_element" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- bool_type=" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- set_bool_type(val)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- set_bool_element_type(idxs, val)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- numlist" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- numlist_element(*idxs)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- set_numlist(val)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- numlist=" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- set_numlist_type(val)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- numlist_type=" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- set_numlist_element_type(idxs, val)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- set_list_element(idxs, val)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- set_numlist_element(idxs, val)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- procedure" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- set_procedure(cmd)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- procedure=" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- procedure_element(*idxs)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- set_procedure_element(idxs, cmd)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- procedure_type=" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- set_procedure_type(cmd)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- set_procedure_element_type(idxs, cmd)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- string" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- string=" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- set_string(val)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- element_to_s(*idxs)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- string_element(*idxs)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- set_string_element(idxs, val)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- string_type=" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- set_string_type(val)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- set_string_element_type(idxs, val)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- set_element_value(idxs, val)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- set_element_value_type(idxs, val)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- default_value(val = nil)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- default_value(val = nil) { .... }" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- default_value=" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- set_default_value(val)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- default_element_value_type(idxs)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- default_value_type" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- default_value_type=" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- set_default_value_type(type)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- set_default_element_value_type(idxs, type)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- default_proc(cmd = Proc.new)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- undef_default" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- eventloop_wait(check_root = false)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- thread_wait(check_root = false)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- tkwait(on_thread = true)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- eventloop_tkwait" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- thread_tkwait" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- to_eval" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- symbol" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- to_sym" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- element_to_sym(*idxs)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- symbol=" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- set_symbol(val)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- symbol_element" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- symbol_type=" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- set_symbol_type(val)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- set_symbol_element(idxs, val)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- set_symbol_element_type(idxs, val)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- update(hash)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- variable" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- set_variable(var)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- variable=" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- variable_element(*idxs)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- set_variable_element(*idxs)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- set_variable_type(var)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- variable_type=" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- set_variable_element_type(idxs, var)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- window" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- set_window(win)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- window=" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- window_element(*idxs)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- set_window_element(idxs, win)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- set_window_type(win)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- window_type=" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- set_window_element_type(idxs, win)" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- zero?" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- nonzero?" "== Instance Methods" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "== Constants" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- TkVar_CB_TBL" "== Constants" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- Tk_VARIABLE_ID" "== Constants" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- TkCommandNames" "== Constants" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- TkVar_ID_TBL" "== Constants" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "--- USE_TCLs_SET_VARIABLE_FUNCTIONS" "== Constants" "= class TkVariable < Object" "refm/api/src/tk/variable.rd")
(find-rurima "= class TkVarAccess < TkVariable" "refm/api/src/tk/variable.rd")
(find-rurima "== Class Methods" "= class TkVarAccess < TkVariable" "refm/api/src/tk/variable.rd")
(find-rurima "--- new(name, *args)" "== Class Methods" "= class TkVarAccess < TkVariable" "refm/api/src/tk/variable.rd")
(find-rurima "--- new_hash(name, *args)" "== Class Methods" "= class TkVarAccess < TkVariable" "refm/api/src/tk/variable.rd")
(find-rurima "= module TkConfigMethod" "refm/api/src/tk/TkConfigMethod")
(find-rurima "== Instance Methods" "= module TkConfigMethod" "refm/api/src/tk/TkConfigMethod")
(find-rurima "--- [](id)" "== Instance Methods" "= module TkConfigMethod" "refm/api/src/tk/TkConfigMethod")
(find-rurima "--- []=(id, value)" "== Instance Methods" "= module TkConfigMethod" "refm/api/src/tk/TkConfigMethod")
(find-rurima "--- __confinfo_cmd" "== Instance Methods" "= module TkConfigMethod" "refm/api/src/tk/TkConfigMethod")
(find-rurima "--- __conv_keyonly_opts(keys)" "== Instance Methods" "= module TkConfigMethod" "refm/api/src/tk/TkConfigMethod")
(find-rurima "--- cget(slot)" "== Instance Methods" "= module TkConfigMethod" "refm/api/src/tk/TkConfigMethod")
(find-rurima "--- config_hash_kv(keys, enc_mode = nil, conf = nil)" "== Instance Methods" "= module TkConfigMethod" "refm/api/src/tk/TkConfigMethod")
(find-rurima "--- configinfo(slot = nil)" "== Instance Methods" "= module TkConfigMethod" "refm/api/src/tk/TkConfigMethod")
(find-rurima "--- configure(slot, value = Tk::None)" "== Instance Methods" "= module TkConfigMethod" "refm/api/src/tk/TkConfigMethod")
(find-rurima "--- configure_cmd(slot, value)" "== Instance Methods" "= module TkConfigMethod" "refm/api/src/tk/TkConfigMethod")
(find-rurima "--- current_configinfo(slot = nil)" "== Instance Methods" "= module TkConfigMethod" "refm/api/src/tk/TkConfigMethod")
(find-rurima "= module Tk::X_Scrollable" "refm/api/src/tk/scrollable/X_Scrollable")
(find-rurima "== Instance Methods" "= module Tk::X_Scrollable" "refm/api/src/tk/scrollable/X_Scrollable")
(find-rurima "--- xscrollbar(bar = nil)" "== Instance Methods" "= module Tk::X_Scrollable" "refm/api/src/tk/scrollable/X_Scrollable")
(find-rurima "--- xscrollcommand(cmd = Proc.new)" "== Instance Methods" "= module Tk::X_Scrollable" "refm/api/src/tk/scrollable/X_Scrollable")
(find-rurima "--- xview(*index)" "== Instance Methods" "= module Tk::X_Scrollable" "refm/api/src/tk/scrollable/X_Scrollable")
(find-rurima "--- xview_moveto(*index)" "== Instance Methods" "= module Tk::X_Scrollable" "refm/api/src/tk/scrollable/X_Scrollable")
(find-rurima "--- xview_scroll(*index)" "== Instance Methods" "= module Tk::X_Scrollable" "refm/api/src/tk/scrollable/X_Scrollable")
(find-rurima "= module Tk::Y_Scrollable" "refm/api/src/tk/scrollable/Y_Scrollable")
(find-rurima "== Instance Methods" "= module Tk::Y_Scrollable" "refm/api/src/tk/scrollable/Y_Scrollable")
(find-rurima "--- yscrollbar(bar = nil)" "== Instance Methods" "= module Tk::Y_Scrollable" "refm/api/src/tk/scrollable/Y_Scrollable")
(find-rurima "--- yscrollcommand(cmd = Proc.new)" "== Instance Methods" "= module Tk::Y_Scrollable" "refm/api/src/tk/scrollable/Y_Scrollable")
(find-rurima "--- yview(*index)" "== Instance Methods" "= module Tk::Y_Scrollable" "refm/api/src/tk/scrollable/Y_Scrollable")
(find-rurima "--- yview_moveto(*index)" "== Instance Methods" "= module Tk::Y_Scrollable" "refm/api/src/tk/scrollable/Y_Scrollable")
(find-rurima "--- yview_scroll(*index)" "== Instance Methods" "= module Tk::Y_Scrollable" "refm/api/src/tk/scrollable/Y_Scrollable")
(find-rurima "= module TkItemConfigOptkeys" "refm/api/src/tk/itemconfig/TkItemConfigOptkeys")
(find-rurima "== Instance Methods" "= module TkItemConfigOptkeys" "refm/api/src/tk/itemconfig/TkItemConfigOptkeys")
(find-rurima "--- __conv_item_keyonly_opts(id, keys)" "== Instance Methods" "= module TkItemConfigOptkeys" "refm/api/src/tk/itemconfig/TkItemConfigOptkeys")
(find-rurima "--- itemconfig_hash_kv(id, keys, enc_mode = nil, conf = nil)" "== Instance Methods" "= module TkItemConfigOptkeys" "refm/api/src/tk/itemconfig/TkItemConfigOptkeys")
(find-rurima "= module TkItemConfigMethod" "refm/api/src/tk/itemconfig/TkItemConfigMethod")
(find-rurima "== Instance Methods" "= module TkItemConfigMethod" "refm/api/src/tk/itemconfig/TkItemConfigMethod")
(find-rurima "--- current_itemconfiginfo(tagOrId, slot = nil)" "== Instance Methods" "= module TkItemConfigMethod" "refm/api/src/tk/itemconfig/TkItemConfigMethod")
(find-rurima "--- itemcget(tagOrId, option)" "== Instance Methods" "= module TkItemConfigMethod" "refm/api/src/tk/itemconfig/TkItemConfigMethod")
(find-rurima "--- itemconfiginfo(tagOrId, slot = nil)" "== Instance Methods" "= module TkItemConfigMethod" "refm/api/src/tk/itemconfig/TkItemConfigMethod")
(find-rurima "--- itemconfigure(tagOrId, slot, value = Tk::None)" "== Instance Methods" "= module TkItemConfigMethod" "refm/api/src/tk/itemconfig/TkItemConfigMethod")
(find-rurima "--- tagid(tagOrId)" "== Instance Methods" "= module TkItemConfigMethod" "refm/api/src/tk/itemconfig/TkItemConfigMethod")
(find-rurima "= module Tk::Wm" "refm/api/src/tk/wm.rd")
(find-rurima "== Constants" "= module Tk::Wm" "refm/api/src/tk/wm.rd")
(find-rurima "--- TOPLEVEL_METHODCALL_OPTKEYS" "== Constants" "= module Tk::Wm" "refm/api/src/tk/wm.rd")
(find-rurima "--- TkCommandNames" "== Constants" "= module Tk::Wm" "refm/api/src/tk/wm.rd")
(find-rurima "== Instance Methods" "= module Tk::Wm" "refm/api/src/tk/wm.rd")
(find-rurima "--- aspect(*args)" "== Instance Methods" "= module Tk::Wm" "refm/api/src/tk/wm.rd")
(find-rurima "--- attributes(slot = nil, value = Tk::None)" "== Instance Methods" "= module Tk::Wm" "refm/api/src/tk/wm.rd")
(find-rurima "--- client(name = Tk::None)" "== Instance Methods" "= module Tk::Wm" "refm/api/src/tk/wm.rd")
(find-rurima "--- colormapwindows(*args)" "== Instance Methods" "= module Tk::Wm" "refm/api/src/tk/wm.rd")
(find-rurima "--- deiconify(ex = true)" "== Instance Methods" "= module Tk::Wm" "refm/api/src/tk/wm.rd")
(find-rurima "--- focusmodel(mode = nil)" "== Instance Methods" "= module Tk::Wm" "refm/api/src/tk/wm.rd")
(find-rurima "--- frame" "== Instance Methods" "= module Tk::Wm" "refm/api/src/tk/wm.rd")
(find-rurima "--- geometry(geom = nil)" "== Instance Methods" "= module Tk::Wm" "refm/api/src/tk/wm.rd")
(find-rurima "--- group(leader = nil)" "== Instance Methods" "= module Tk::Wm" "refm/api/src/tk/wm.rd")
(find-rurima "--- iconbitmap(bmp = nil)" "== Instance Methods" "= module Tk::Wm" "refm/api/src/tk/wm.rd")
(find-rurima "--- iconify(ex = true)" "== Instance Methods" "= module Tk::Wm" "refm/api/src/tk/wm.rd")
(find-rurima "--- iconmaskbmp(bmp = nil)" "== Instance Methods" "= module Tk::Wm" "refm/api/src/tk/wm.rd")
(find-rurima "--- iconname(name = nil)" "== Instance Methods" "= module Tk::Wm" "refm/api/src/tk/wm.rd")
(find-rurima "--- iconphoto(*imgs)" "== Instance Methods" "= module Tk::Wm" "refm/api/src/tk/wm.rd")
(find-rurima "--- iconphoto_default(*imgs)" "== Instance Methods" "= module Tk::Wm" "refm/api/src/tk/wm.rd")
(find-rurima "--- iconposition(*args)" "== Instance Methods" "= module Tk::Wm" "refm/api/src/tk/wm.rd")
(find-rurima "--- iconwindow(win = nil)" "== Instance Methods" "= module Tk::Wm" "refm/api/src/tk/wm.rd")
(find-rurima "--- maxsize(*args)" "== Instance Methods" "= module Tk::Wm" "refm/api/src/tk/wm.rd")
(find-rurima "--- minsize(*args)" "== Instance Methods" "= module Tk::Wm" "refm/api/src/tk/wm.rd")
(find-rurima "--- overrideredirect(mode = Tk::None)" "== Instance Methods" "= module Tk::Wm" "refm/api/src/tk/wm.rd")
(find-rurima "--- positionfrom(who = Tk::None)" "== Instance Methods" "= module Tk::Wm" "refm/api/src/tk/wm.rd")
(find-rurima "--- protocol(name = nil, cmd = nil, &block)" "== Instance Methods" "= module Tk::Wm" "refm/api/src/tk/wm.rd")
(find-rurima "--- protocols(kv = nil)" "== Instance Methods" "= module Tk::Wm" "refm/api/src/tk/wm.rd")
(find-rurima "--- resizable(*args)" "== Instance Methods" "= module Tk::Wm" "refm/api/src/tk/wm.rd")
(find-rurima "--- sizefrom(who = Tk::None)" "== Instance Methods" "= module Tk::Wm" "refm/api/src/tk/wm.rd")
(find-rurima "--- stackorder" "== Instance Methods" "= module Tk::Wm" "refm/api/src/tk/wm.rd")
(find-rurima "--- stackorder_isabove(win)" "== Instance Methods" "= module Tk::Wm" "refm/api/src/tk/wm.rd")
(find-rurima "--- stackorder_isbelow(win)" "== Instance Methods" "= module Tk::Wm" "refm/api/src/tk/wm.rd")
(find-rurima "--- state(st = nil)" "== Instance Methods" "= module Tk::Wm" "refm/api/src/tk/wm.rd")
(find-rurima "--- title(str = nil)" "== Instance Methods" "= module Tk::Wm" "refm/api/src/tk/wm.rd")
(find-rurima "--- transient(master = nil)" "== Instance Methods" "= module Tk::Wm" "refm/api/src/tk/wm.rd")
(find-rurima "--- withdraw(ex = true)" "== Instance Methods" "= module Tk::Wm" "refm/api/src/tk/wm.rd")
(find-rurima "--- wm_command(value = nil)" "== Instance Methods" "= module Tk::Wm" "refm/api/src/tk/wm.rd")
(find-rurima "--- wm_grid(*args)" "== Instance Methods" "= module Tk::Wm" "refm/api/src/tk/wm.rd")
(find-rurima "= module Tk::Scrollable" "refm/api/src/tk/scrollable.rd")
(find-rurima "== Instance Methods" "= module Tk::Scrollable" "refm/api/src/tk/scrollable.rd")
(find-rurima "--- autoscroll(mode = nil)" "== Instance Methods" "= module Tk::Scrollable" "refm/api/src/tk/scrollable.rd")
(find-rurima "--- unautoscroll(mode = nil)" "== Instance Methods" "= module Tk::Scrollable" "refm/api/src/tk/scrollable.rd")
(find-rurima "= module TkGrid" "refm/api/src/tk/grid.rd")
(find-rurima "== Module Functions" "= module TkGrid" "refm/api/src/tk/grid.rd")
(find-rurima "--- bbox(master, *args)" "== Module Functions" "= module TkGrid" "refm/api/src/tk/grid.rd")
(find-rurima "--- configure(widget1, widget2, ..., options=nil)" "== Module Functions" "= module TkGrid" "refm/api/src/tk/grid.rd")
(find-rurima "--- grid(widget1, widget2, ..., options=nil)" "== Module Functions" "= module TkGrid" "refm/api/src/tk/grid.rd")
(find-rurima "--- columnconfigure(master, index, args)" "== Module Functions" "= module TkGrid" "refm/api/src/tk/grid.rd")
(find-rurima "--- rowconfigure(master, index, args)" "== Module Functions" "= module TkGrid" "refm/api/src/tk/grid.rd")
(find-rurima "--- columnconfiginfo(master, index, slot=nil)" "== Module Functions" "= module TkGrid" "refm/api/src/tk/grid.rd")
(find-rurima "--- rowconfiginfo(master, index, slot=nil)" "== Module Functions" "= module TkGrid" "refm/api/src/tk/grid.rd")
(find-rurima "--- forget(*args)" "== Module Functions" "= module TkGrid" "refm/api/src/tk/grid.rd")
(find-rurima "--- info(slave)" "== Module Functions" "= module TkGrid" "refm/api/src/tk/grid.rd")
(find-rurima "--- location(master, x, y)" "== Module Functions" "= module TkGrid" "refm/api/src/tk/grid.rd")
(find-rurima "--- propagate(master, mode = Tk::None)" "== Module Functions" "= module TkGrid" "refm/api/src/tk/grid.rd")
(find-rurima "--- remove(*args)" "== Module Functions" "= module TkGrid" "refm/api/src/tk/grid.rd")
(find-rurima "--- size(master)" "== Module Functions" "= module TkGrid" "refm/api/src/tk/grid.rd")
(find-rurima "--- slaves(master, args)" "== Module Functions" "= module TkGrid" "refm/api/src/tk/grid.rd")
(find-rurima "== Instance Methods" "= module TkGrid" "refm/api/src/tk/grid.rd")
(find-rurima "--- anchor(master, anchor = Tk::None)" "== Instance Methods" "= module TkGrid" "refm/api/src/tk/grid.rd")
(find-rurima "--- add(widget, *args)" "== Instance Methods" "= module TkGrid" "refm/api/src/tk/grid.rd")
(find-rurima "== Constants" "= module TkGrid" "refm/api/src/tk/grid.rd")
(find-rurima "--- TkCommandNames" "== Constants" "= module TkGrid" "refm/api/src/tk/grid.rd")
(find-rurima "= class TkScrollbar < TkWindow" "refm/api/src/tk/scrollbar.rd")
(find-rurima "== Instance Methods" "= class TkScrollbar < TkWindow" "refm/api/src/tk/scrollbar.rd")
(find-rurima "--- propagate_set(src_win, first, last)" "== Instance Methods" "= class TkScrollbar < TkWindow" "refm/api/src/tk/scrollbar.rd")
(find-rurima "--- assign(*wins)" "== Instance Methods" "= class TkScrollbar < TkWindow" "refm/api/src/tk/scrollbar.rd")
(find-rurima "--- assigned_list" "== Instance Methods" "= class TkScrollbar < TkWindow" "refm/api/src/tk/scrollbar.rd")
(find-rurima "--- configure(*args)" "== Instance Methods" "= class TkScrollbar < TkWindow" "refm/api/src/tk/scrollbar.rd")
(find-rurima "--- delta(deltax, deltay)" "== Instance Methods" "= class TkScrollbar < TkWindow" "refm/api/src/tk/scrollbar.rd")
(find-rurima "--- fraction(x, y)" "== Instance Methods" "= class TkScrollbar < TkWindow" "refm/api/src/tk/scrollbar.rd")
(find-rurima "--- identify(x, y)" "== Instance Methods" "= class TkScrollbar < TkWindow" "refm/api/src/tk/scrollbar.rd")
(find-rurima "--- get" "== Instance Methods" "= class TkScrollbar < TkWindow" "refm/api/src/tk/scrollbar.rd")
(find-rurima "--- set(first, last)" "== Instance Methods" "= class TkScrollbar < TkWindow" "refm/api/src/tk/scrollbar.rd")
(find-rurima "--- activate(element = Tk::None)" "== Instance Methods" "= class TkScrollbar < TkWindow" "refm/api/src/tk/scrollbar.rd")
(find-rurima "== Constants" "= class TkScrollbar < TkWindow" "refm/api/src/tk/scrollbar.rd")
(find-rurima "--- TkCommandNames" "== Constants" "= class TkScrollbar < TkWindow" "refm/api/src/tk/scrollbar.rd")
(find-rurima "--- WidgetClassName" "== Constants" "= class TkScrollbar < TkWindow" "refm/api/src/tk/scrollbar.rd")
(find-rurima "--- WidgetClassNames" "== Constants" "= class TkScrollbar < TkWindow" "refm/api/src/tk/scrollbar.rd")
(find-rurima "= class TkXScrollbar < TkScrollbar" "refm/api/src/tk/scrollbar.rd")
(find-rurima "= class TkYScrollbar < TkScrollbar" "refm/api/src/tk/scrollbar.rd")
(find-rurima "= class TkButton < TkLabel" "refm/api/src/tk/button/TkButton")
(find-rurima "== Instance Methods" "= class TkButton < TkLabel" "refm/api/src/tk/button/TkButton")
(find-rurima "--- invoke" "== Instance Methods" "= class TkButton < TkLabel" "refm/api/src/tk/button/TkButton")
(find-rurima "--- flash" "== Instance Methods" "= class TkButton < TkLabel" "refm/api/src/tk/button/TkButton")
(find-rurima "== Constants" "= class TkButton < TkLabel" "refm/api/src/tk/button/TkButton")
(find-rurima "--- TkCommandNames" "== Constants" "= class TkButton < TkLabel" "refm/api/src/tk/button/TkButton")
(find-rurima "--- WidgetClassName" "== Constants" "= class TkButton < TkLabel" "refm/api/src/tk/button/TkButton")
(find-rurima "= class TkSysMenu_Help < TkMenu" "refm/api/src/tk/menu/TkSysMenu_Help")
(find-rurima "== Constants" "= class TkSysMenu_Help < TkMenu" "refm/api/src/tk/menu/TkSysMenu_Help")
(find-rurima "--- SYSMENU_NAME" "== Constants" "= class TkSysMenu_Help < TkMenu" "refm/api/src/tk/menu/TkSysMenu_Help")
(find-rurima "= class TkMenuClone < TkMenu" "refm/api/src/tk/menu/TkMenuClone")
(find-rurima "== Class Methods" "= class TkMenuClone < TkMenu" "refm/api/src/tk/menu/TkMenuClone")
(find-rurima "--- new(src_menu, *args)" "== Class Methods" "= class TkMenuClone < TkMenu" "refm/api/src/tk/menu/TkMenuClone")
(find-rurima "== Instance Methods" "= class TkMenuClone < TkMenu" "refm/api/src/tk/menu/TkMenuClone")
(find-rurima "--- source_menu" "== Instance Methods" "= class TkMenuClone < TkMenu" "refm/api/src/tk/menu/TkMenuClone")
(find-rurima "= module TkSystemMenu" "refm/api/src/tk/menu/TkSystemMenu")
(find-rurima "== Instance Methods" "= module TkSystemMenu" "refm/api/src/tk/menu/TkSystemMenu")
(find-rurima "--- initialize(parent, keys = nil)" "== Instance Methods" "= module TkSystemMenu" "refm/api/src/tk/menu/TkSystemMenu")
(find-rurima "= class TkSysMenu_System < TkMenu" "refm/api/src/tk/menu/TkSysMenu_System")
(find-rurima "== Constants" "= class TkSysMenu_System < TkMenu" "refm/api/src/tk/menu/TkSysMenu_System")
(find-rurima "--- SYSMENU_NAME" "== Constants" "= class TkSysMenu_System < TkMenu" "refm/api/src/tk/menu/TkSysMenu_System")
(find-rurima "= class TkOptionMenubutton::OptionMenu < TkMenu" "refm/api/src/tk/menu/TkOptionMenubutton__OptionMenu")
(find-rurima "== Class Methods" "= class TkOptionMenubutton::OptionMenu < TkMenu" "refm/api/src/tk/menu/TkOptionMenubutton__OptionMenu")
(find-rurima "--- new(path)" "== Class Methods" "= class TkOptionMenubutton::OptionMenu < TkMenu" "refm/api/src/tk/menu/TkOptionMenubutton__OptionMenu")
(find-rurima "= class TkMenubutton < TkLabel" "refm/api/src/tk/menu/TkMenubutton")
(find-rurima "== Instance Methods" "= class TkMenubutton < TkLabel" "refm/api/src/tk/menu/TkMenubutton")
(find-rurima "--- create_self(keys)" "== Instance Methods" "= class TkMenubutton < TkLabel" "refm/api/src/tk/menu/TkMenubutton")
(find-rurima "== Constants" "= class TkMenubutton < TkLabel" "refm/api/src/tk/menu/TkMenubutton")
(find-rurima "--- TkCommandNames" "== Constants" "= class TkMenubutton < TkLabel" "refm/api/src/tk/menu/TkMenubutton")
(find-rurima "--- WidgetClassName" "== Constants" "= class TkMenubutton < TkLabel" "refm/api/src/tk/menu/TkMenubutton")
(find-rurima "= class TkMenu < TkWindow" "refm/api/src/tk/menu/TkMenu")
(find-rurima "== Class Methods" "= class TkMenu < TkWindow" "refm/api/src/tk/menu/TkMenu")
(find-rurima "--- new_menuspec(menu_spec, parent = nil, tearoff = false, keys = nil)" "== Class Methods" "= class TkMenu < TkWindow" "refm/api/src/tk/menu/TkMenu")
(find-rurima "== Instance Methods" "= class TkMenu < TkWindow" "refm/api/src/tk/menu/TkMenu")
(find-rurima "--- tagid(id)" "== Instance Methods" "= class TkMenu < TkWindow" "refm/api/src/tk/menu/TkMenu")
(find-rurima "--- activate(index)" "== Instance Methods" "= class TkMenu < TkWindow" "refm/api/src/tk/menu/TkMenu")
(find-rurima "--- add(type, keys = nil)" "== Instance Methods" "= class TkMenu < TkWindow" "refm/api/src/tk/menu/TkMenu")
(find-rurima "--- add_cascade(keys = nil)" "== Instance Methods" "= class TkMenu < TkWindow" "refm/api/src/tk/menu/TkMenu")
(find-rurima "--- add_checkbutton(keys = nil)" "== Instance Methods" "= class TkMenu < TkWindow" "refm/api/src/tk/menu/TkMenu")
(find-rurima "--- add_command(keys = nil)" "== Instance Methods" "= class TkMenu < TkWindow" "refm/api/src/tk/menu/TkMenu")
(find-rurima "--- add_radiobutton(keys = nil)" "== Instance Methods" "= class TkMenu < TkWindow" "refm/api/src/tk/menu/TkMenu")
(find-rurima "--- add_separator(keys = nil)" "== Instance Methods" "= class TkMenu < TkWindow" "refm/api/src/tk/menu/TkMenu")
(find-rurima "--- clone_menu(*args)" "== Instance Methods" "= class TkMenu < TkWindow" "refm/api/src/tk/menu/TkMenu")
(find-rurima "--- index(idx)" "== Instance Methods" "= class TkMenu < TkWindow" "refm/api/src/tk/menu/TkMenu")
(find-rurima "--- invoke(index)" "== Instance Methods" "= class TkMenu < TkWindow" "refm/api/src/tk/menu/TkMenu")
(find-rurima "--- insert(index, type, keys = nil)" "== Instance Methods" "= class TkMenu < TkWindow" "refm/api/src/tk/menu/TkMenu")
(find-rurima "--- delete(first, last = nil)" "== Instance Methods" "= class TkMenu < TkWindow" "refm/api/src/tk/menu/TkMenu")
(find-rurima "--- popup(x, y, index = nil)" "== Instance Methods" "= class TkMenu < TkWindow" "refm/api/src/tk/menu/TkMenu")
(find-rurima "--- post(x, y)" "== Instance Methods" "= class TkMenu < TkWindow" "refm/api/src/tk/menu/TkMenu")
(find-rurima "--- postcascade(index)" "== Instance Methods" "= class TkMenu < TkWindow" "refm/api/src/tk/menu/TkMenu")
(find-rurima "--- postcommand(cmd = Proc.new)" "== Instance Methods" "= class TkMenu < TkWindow" "refm/api/src/tk/menu/TkMenu")
(find-rurima "--- set_focus" "== Instance Methods" "= class TkMenu < TkWindow" "refm/api/src/tk/menu/TkMenu")
(find-rurima "--- tearoffcommand(cmd = Proc.new)" "== Instance Methods" "= class TkMenu < TkWindow" "refm/api/src/tk/menu/TkMenu")
(find-rurima "--- menutype(index)" "== Instance Methods" "= class TkMenu < TkWindow" "refm/api/src/tk/menu/TkMenu")
(find-rurima "--- unpost" "== Instance Methods" "= class TkMenu < TkWindow" "refm/api/src/tk/menu/TkMenu")
(find-rurima "--- yposition(index)" "== Instance Methods" "= class TkMenu < TkWindow" "refm/api/src/tk/menu/TkMenu")
(find-rurima "--- craete_self(keys)" "== Instance Methods" "= class TkMenu < TkWindow" "refm/api/src/tk/menu/TkMenu")
(find-rurima "--- entrycget(index, key)" "== Instance Methods" "= class TkMenu < TkWindow" "refm/api/src/tk/menu/TkMenu")
(find-rurima "--- entryconfigure(index, key, val = Tk::None)" "== Instance Methods" "= class TkMenu < TkWindow" "refm/api/src/tk/menu/TkMenu")
(find-rurima "--- entryconfiginfo(index, key = nil)" "== Instance Methods" "= class TkMenu < TkWindow" "refm/api/src/tk/menu/TkMenu")
(find-rurima "== Constants" "= class TkMenu < TkWindow" "refm/api/src/tk/menu/TkMenu")
(find-rurima "--- TkCommandNames" "== Constants" "= class TkMenu < TkWindow" "refm/api/src/tk/menu/TkMenu")
(find-rurima "--- WidgetClassName" "== Constants" "= class TkMenu < TkWindow" "refm/api/src/tk/menu/TkMenu")
(find-rurima "= class TkOptionMenubutton < TkMenubutton" "refm/api/src/tk/menu/TkOptionMenubutton")
(find-rurima "== Class Methods" "= class TkOptionMenubutton < TkMenubutton" "refm/api/src/tk/menu/TkOptionMenubutton")
(find-rurima "--- new(*args)" "== Class Methods" "= class TkOptionMenubutton < TkMenubutton" "refm/api/src/tk/menu/TkOptionMenubutton")
(find-rurima "== Instance Methods" "= class TkOptionMenubutton < TkMenubutton" "refm/api/src/tk/menu/TkOptionMenubutton")
(find-rurima "--- value" "== Instance Methods" "= class TkOptionMenubutton < TkMenubutton" "refm/api/src/tk/menu/TkOptionMenubutton")
(find-rurima "--- value=(val)" "== Instance Methods" "= class TkOptionMenubutton < TkMenubutton" "refm/api/src/tk/menu/TkOptionMenubutton")
(find-rurima "--- activate(index)" "== Instance Methods" "= class TkOptionMenubutton < TkMenubutton" "refm/api/src/tk/menu/TkOptionMenubutton")
(find-rurima "--- add(value)" "== Instance Methods" "= class TkOptionMenubutton < TkMenubutton" "refm/api/src/tk/menu/TkOptionMenubutton")
(find-rurima "--- index(index)" "== Instance Methods" "= class TkOptionMenubutton < TkMenubutton" "refm/api/src/tk/menu/TkOptionMenubutton")
(find-rurima "--- invoke(index)" "== Instance Methods" "= class TkOptionMenubutton < TkMenubutton" "refm/api/src/tk/menu/TkOptionMenubutton")
(find-rurima "--- insert(index, value)" "== Instance Methods" "= class TkOptionMenubutton < TkMenubutton" "refm/api/src/tk/menu/TkOptionMenubutton")
(find-rurima "--- delete(index, last = Tk::None)" "== Instance Methods" "= class TkOptionMenubutton < TkMenubutton" "refm/api/src/tk/menu/TkOptionMenubutton")
(find-rurima "--- yposition(index)" "== Instance Methods" "= class TkOptionMenubutton < TkMenubutton" "refm/api/src/tk/menu/TkOptionMenubutton")
(find-rurima "--- menu" "== Instance Methods" "= class TkOptionMenubutton < TkMenubutton" "refm/api/src/tk/menu/TkOptionMenubutton")
(find-rurima "--- menucget(key)" "== Instance Methods" "= class TkOptionMenubutton < TkMenubutton" "refm/api/src/tk/menu/TkOptionMenubutton")
(find-rurima "--- menuconfigure(key, val = Tk::None)" "== Instance Methods" "= class TkOptionMenubutton < TkMenubutton" "refm/api/src/tk/menu/TkOptionMenubutton")
(find-rurima "--- menuconfiginfo(key = nil)" "== Instance Methods" "= class TkOptionMenubutton < TkMenubutton" "refm/api/src/tk/menu/TkOptionMenubutton")
(find-rurima "--- current_menuconfiginfo(key = nil)" "== Instance Methods" "= class TkOptionMenubutton < TkMenubutton" "refm/api/src/tk/menu/TkOptionMenubutton")
(find-rurima "--- entrycget(index, key)" "== Instance Methods" "= class TkOptionMenubutton < TkMenubutton" "refm/api/src/tk/menu/TkOptionMenubutton")
(find-rurima "--- entryconfigure(index, key, val = Tk::None)" "== Instance Methods" "= class TkOptionMenubutton < TkMenubutton" "refm/api/src/tk/menu/TkOptionMenubutton")
(find-rurima "--- entryconfiginfo(index, key = nil)" "== Instance Methods" "= class TkOptionMenubutton < TkMenubutton" "refm/api/src/tk/menu/TkOptionMenubutton")
(find-rurima "--- current_entryconfiginfo(index, key = nil)" "== Instance Methods" "= class TkOptionMenubutton < TkMenubutton" "refm/api/src/tk/menu/TkOptionMenubutton")
(find-rurima "== Constants" "= class TkOptionMenubutton < TkMenubutton" "refm/api/src/tk/menu/TkOptionMenubutton")
(find-rurima "--- TkCommandNames" "== Constants" "= class TkOptionMenubutton < TkMenubutton" "refm/api/src/tk/menu/TkOptionMenubutton")
(find-rurima "= class TkSysMenu_Apple < TkMenu" "refm/api/src/tk/menu/TkSysMenu_Apple")
(find-rurima "== Constants" "= class TkSysMenu_Apple < TkMenu" "refm/api/src/tk/menu/TkSysMenu_Apple")
(find-rurima "--- SYSMENU_NAME" "== Constants" "= class TkSysMenu_Apple < TkMenu" "refm/api/src/tk/menu/TkSysMenu_Apple")
(find-rurima "= module TkMenuEntryConfig" "refm/api/src/tk/menu/TkMenuEntryConfig")
(find-rurima "== Instance Methods" "= module TkMenuEntryConfig" "refm/api/src/tk/menu/TkMenuEntryConfig")
(find-rurima "--- entrycget(tagOrId, option)" "== Instance Methods" "= module TkMenuEntryConfig" "refm/api/src/tk/menu/TkMenuEntryConfig")
(find-rurima "--- entryconfigure(tagorId, slot, value = Tk::None)" "== Instance Methods" "= module TkMenuEntryConfig" "refm/api/src/tk/menu/TkMenuEntryConfig")
(find-rurima "--- entryconfiginfo(tagOrId, slot = nil)" "== Instance Methods" "= module TkMenuEntryConfig" "refm/api/src/tk/menu/TkMenuEntryConfig")
(find-rurima "--- current_entryconfiginfo(tagOrId, slot = nil)" "== Instance Methods" "= module TkMenuEntryConfig" "refm/api/src/tk/menu/TkMenuEntryConfig")
(find-rurima "= class TkMessage < TkLabel" "refm/api/src/tk/message.rd")
(find-rurima "== Constants" "= class TkMessage < TkLabel" "refm/api/src/tk/message.rd")
(find-rurima "--- TkCommandNames" "== Constants" "= class TkMessage < TkLabel" "refm/api/src/tk/message.rd")
(find-rurima "--- WidgetClassName" "== Constants" "= class TkMessage < TkLabel" "refm/api/src/tk/message.rd")
(find-rurima "--- WidgetClassNames" "== Constants" "= class TkMessage < TkLabel" "refm/api/src/tk/message.rd")
(find-rurima "= module TkSelection" "refm/api/src/tk/selection.rd")
(find-rurima "== Constants" "= module TkSelection" "refm/api/src/tk/selection.rd")
(find-rurima "--- TkCommandNames" "== Constants" "= module TkSelection" "refm/api/src/tk/selection.rd")
(find-rurima "== Class Methods" "= module TkSelection" "refm/api/src/tk/selection.rd")
(find-rurima "--- clear(sel = nil)" "== Class Methods" "= module TkSelection" "refm/api/src/tk/selection.rd")
(find-rurima "--- clear_on_display(win, sel = nil)" "== Class Methods" "= module TkSelection" "refm/api/src/tk/selection.rd")
(find-rurima "--- get(keys = nil)" "== Class Methods" "= module TkSelection" "refm/api/src/tk/selection.rd")
(find-rurima "--- get_on_display(win, keys = nil)" "== Class Methods" "= module TkSelection" "refm/api/src/tk/selection.rd")
(find-rurima "--- get_owner(sel = nil)" "== Class Methods" "= module TkSelection" "refm/api/src/tk/selection.rd")
(find-rurima "--- get_owner_on_display" "== Class Methods" "= module TkSelection" "refm/api/src/tk/selection.rd")
(find-rurima "--- handle(win, func = Proc.new, keys = nil, &block)" "== Class Methods" "= module TkSelection" "refm/api/src/tk/selection.rd")
(find-rurima "--- set_owner(win, keys = nil)" "== Class Methods" "= module TkSelection" "refm/api/src/tk/selection.rd")
(find-rurima "== Instance Methods" "= module TkSelection" "refm/api/src/tk/selection.rd")
(find-rurima "--- clear(sel = nil)" "== Instance Methods" "= module TkSelection" "refm/api/src/tk/selection.rd")
(find-rurima "--- get(keys = nil)" "== Instance Methods" "= module TkSelection" "refm/api/src/tk/selection.rd")
(find-rurima "--- get_owner(sel = nil)" "== Instance Methods" "= module TkSelection" "refm/api/src/tk/selection.rd")
(find-rurima "--- handle(func = Proc.new, keys = nil, &block)" "== Instance Methods" "= module TkSelection" "refm/api/src/tk/selection.rd")
(find-rurima "--- set_owner(keys = nil)" "== Instance Methods" "= module TkSelection" "refm/api/src/tk/selection.rd")
(find-rurima "= class TkScrollbox < TkListbox" "refm/api/src/tk/scrollbox/TkScrollbox")
(find-rurima "== Private Instance Methods" "= class TkScrollbox < TkListbox" "refm/api/src/tk/scrollbox/TkScrollbox")
(find-rurima "--- initialize_composite(keys = nil)" "== Private Instance Methods" "= class TkScrollbox < TkListbox" "refm/api/src/tk/scrollbox/TkScrollbox")
(find-rurima "= module TkText::IndexModMethods" "refm/api/src/tk/text/TkText__IndexModMethods")
(find-rurima "== Instance Methods" "= module TkText::IndexModMethods" "refm/api/src/tk/text/TkText__IndexModMethods")
(find-rurima "--- +(mod)" "== Instance Methods" "= module TkText::IndexModMethods" "refm/api/src/tk/text/TkText__IndexModMethods")
(find-rurima "--- -(mod)" "== Instance Methods" "= module TkText::IndexModMethods" "refm/api/src/tk/text/TkText__IndexModMethods")
(find-rurima "--- chars(mod)" "== Instance Methods" "= module TkText::IndexModMethods" "refm/api/src/tk/text/TkText__IndexModMethods")
(find-rurima "--- char(mod)" "== Instance Methods" "= module TkText::IndexModMethods" "refm/api/src/tk/text/TkText__IndexModMethods")
(find-rurima "--- display_chars(mod)" "== Instance Methods" "= module TkText::IndexModMethods" "refm/api/src/tk/text/TkText__IndexModMethods")
(find-rurima "--- display_char(mod)" "== Instance Methods" "= module TkText::IndexModMethods" "refm/api/src/tk/text/TkText__IndexModMethods")
(find-rurima "--- any_chars(mod)" "== Instance Methods" "= module TkText::IndexModMethods" "refm/api/src/tk/text/TkText__IndexModMethods")
(find-rurima "--- any_char(mod)" "== Instance Methods" "= module TkText::IndexModMethods" "refm/api/src/tk/text/TkText__IndexModMethods")
(find-rurima "--- indices(mod)" "== Instance Methods" "= module TkText::IndexModMethods" "refm/api/src/tk/text/TkText__IndexModMethods")
(find-rurima "--- display_indices(mod)" "== Instance Methods" "= module TkText::IndexModMethods" "refm/api/src/tk/text/TkText__IndexModMethods")
(find-rurima "--- any_indices(mod)" "== Instance Methods" "= module TkText::IndexModMethods" "refm/api/src/tk/text/TkText__IndexModMethods")
(find-rurima "--- lines(mod)" "== Instance Methods" "= module TkText::IndexModMethods" "refm/api/src/tk/text/TkText__IndexModMethods")
(find-rurima "--- line(mod)" "== Instance Methods" "= module TkText::IndexModMethods" "refm/api/src/tk/text/TkText__IndexModMethods")
(find-rurima "--- display_lines(mod)" "== Instance Methods" "= module TkText::IndexModMethods" "refm/api/src/tk/text/TkText__IndexModMethods")
(find-rurima "--- display_line(mod)" "== Instance Methods" "= module TkText::IndexModMethods" "refm/api/src/tk/text/TkText__IndexModMethods")
(find-rurima "--- any_lines(mod)" "== Instance Methods" "= module TkText::IndexModMethods" "refm/api/src/tk/text/TkText__IndexModMethods")
(find-rurima "--- any_line(mod)" "== Instance Methods" "= module TkText::IndexModMethods" "refm/api/src/tk/text/TkText__IndexModMethods")
(find-rurima "--- linestart" "== Instance Methods" "= module TkText::IndexModMethods" "refm/api/src/tk/text/TkText__IndexModMethods")
(find-rurima "--- lineend" "== Instance Methods" "= module TkText::IndexModMethods" "refm/api/src/tk/text/TkText__IndexModMethods")
(find-rurima "--- display_linestart" "== Instance Methods" "= module TkText::IndexModMethods" "refm/api/src/tk/text/TkText__IndexModMethods")
(find-rurima "--- display_lineend" "== Instance Methods" "= module TkText::IndexModMethods" "refm/api/src/tk/text/TkText__IndexModMethods")
(find-rurima "--- wordstart" "== Instance Methods" "= module TkText::IndexModMethods" "refm/api/src/tk/text/TkText__IndexModMethods")
(find-rurima "--- wordend" "== Instance Methods" "= module TkText::IndexModMethods" "refm/api/src/tk/text/TkText__IndexModMethods")
(find-rurima "--- display_wordstart" "== Instance Methods" "= module TkText::IndexModMethods" "refm/api/src/tk/text/TkText__IndexModMethods")
(find-rurima "--- display_wordend" "== Instance Methods" "= module TkText::IndexModMethods" "refm/api/src/tk/text/TkText__IndexModMethods")
(find-rurima "= class TkText::IndexString < String" "refm/api/src/tk/text/TkText__IndexString")
(find-rurima "== Class Methods" "= class TkText::IndexString < String" "refm/api/src/tk/text/TkText__IndexString")
(find-rurima "--- at(x, y)" "== Class Methods" "= class TkText::IndexString < String" "refm/api/src/tk/text/TkText__IndexString")
(find-rurima "--- new(str)" "== Class Methods" "= class TkText::IndexString < String" "refm/api/src/tk/text/TkText__IndexString")
(find-rurima "== Instance Methods" "= class TkText::IndexString < String" "refm/api/src/tk/text/TkText__IndexString")
(find-rurima "--- id" "== Instance Methods" "= class TkText::IndexString < String" "refm/api/src/tk/text/TkText__IndexString")
(find-rurima "= class TkText::Peer < TkText" "refm/api/src/tk/text/TkText__Peer")
(find-rurima "== Class Methods" "= class TkText::Peer < TkText" "refm/api/src/tk/text/TkText__Peer")
(find-rurima "--- new(text, parent = nil, keys = {})" "== Class Methods" "= class TkText::Peer < TkText" "refm/api/src/tk/text/TkText__Peer")
(find-rurima "= module TkTextTagConfig" "refm/api/src/tk/text/TkTextTagConfig")
(find-rurima "== Instance Methods" "= module TkTextTagConfig" "refm/api/src/tk/text/TkTextTagConfig")
(find-rurima "--- tag_cget(tagOrId, option)" "== Instance Methods" "= module TkTextTagConfig" "refm/api/src/tk/text/TkTextTagConfig")
(find-rurima "--- tag_configure(tagOrId, slot, value = Tk::None)" "== Instance Methods" "= module TkTextTagConfig" "refm/api/src/tk/text/TkTextTagConfig")
(find-rurima "--- tag_configinfo(tagOrId, slot = nil)" "== Instance Methods" "= module TkTextTagConfig" "refm/api/src/tk/text/TkTextTagConfig")
(find-rurima "--- current_tag_configinfo(tagOrId, slot = nil)" "== Instance Methods" "= module TkTextTagConfig" "refm/api/src/tk/text/TkTextTagConfig")
(find-rurima "--- window_cget(tagOrId, option)" "== Instance Methods" "= module TkTextTagConfig" "refm/api/src/tk/text/TkTextTagConfig")
(find-rurima "--- window_configure(tagOrId, slot, value = Tk::None)" "== Instance Methods" "= module TkTextTagConfig" "refm/api/src/tk/text/TkTextTagConfig")
(find-rurima "--- window_configinfo(tagOrId, slot = nil)" "== Instance Methods" "= module TkTextTagConfig" "refm/api/src/tk/text/TkTextTagConfig")
(find-rurima "--- current_window_configinfo(tagOrId, slot = nil)" "== Instance Methods" "= module TkTextTagConfig" "refm/api/src/tk/text/TkTextTagConfig")
(find-rurima "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "== Class Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- new(*args) { ... }" "== Class Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- at(x, y)" "== Class Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- init_instance_variable" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- __destroy_hook__" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- at(x, y)" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- index(idx)" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- get_displaychars(*index)" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- value" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- value=(val)" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- clear" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- erase" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- _addcmd(cmd)" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- _addtag(name, obj)" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- tagid2obj(tagid)" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- tag_names(index = Tk::None)" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- mark_names" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- mark_gravity(mark, direction = nil)" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- mark_set(mark, index)" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- set_mark(mark, index)" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- mark_unset(*marks)" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- unset_mark(*marks)" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- mark_next(index)" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- next_mark(index)" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- mark_previous(index)" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- previous_mark(index)" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- image_cget(index, slot)" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- image_configure(index, slot, value = Tk::None)" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- image_configinfo(index, slot = nil)" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- current_image_configinfo(index, slot = nil)" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- image_names" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- set_insert(index)" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- set_current(index)" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- insert(index, chars, *tags)" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- destroy" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- backspace" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- bbox(index)" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- compare(idx1, op, idx2)" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- count(idx1, idx2, *opts)" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- count_info(idx1, idx2, update = true)" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- peer_names" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- replace(idx1, idx2, *opts)" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- debug" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- debug=(boolean)" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- dlineinfo(index)" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- modified?" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- modified(mode)" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- modified=(mode)" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- edit_redo" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- edit_reset" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- edit_separator" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- edit_undo" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- xview_pickplace(index)" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- yview_pickplace(index)" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- text_copy" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- text_cut" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- text_paste" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- tag_add(tag, index1, index2 = Tk::None)" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- addtag(tag, index1, index2 = Tk::None)" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- add_tag(tag, index1, index2 = Tk::None)" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- tag_delete(*tags)" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- deltag(*tags)" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- delete_tag(*tags)" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- tag_bind(tag, seq, *args)" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- tag_bind_append(tag, seq, *args)" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- tag_bind_remove(tag, seq)" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- tag_bindinfo(tag, context = nil)" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- tag_raise(tag, above = Tk::None)" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- tag_lower(tag, below = Tk::None)" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- tag_remove(tag, *indices)" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- tag_ranges(tag)" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- tag_nextrange(tag, first, last = Tk::None)" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- tag_prevrange(tag, first, last = Tk::None)" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- window_names" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- tksearch(*args)" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- tksearch_with_count(*args)" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- search_with_length(pat, start, stop = Tk::None)" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- search(pat, start, stop = Tk::None)" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- rsearch_with_length(pat, start, stop = Tk::None)" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- rsearch(pat, start, stop = Tk::None)" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- dump(type_info, *index) { ... }" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- dump_all(*index) { ... }" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- dump_mark(*index) { ... }" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- dump_tag(*index) { ... }" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- dump_text(*index) { ... }" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- dump_window(*index) { ... }" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- dump_image(*index) { ... }" "== Instance Methods" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "== Constants" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- ItemConfCMD" "== Constants" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- TkCommandNames" "== Constants" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "--- WidgetClassName" "== Constants" "= class TkText < TkTextWin" "refm/api/src/tk/text/TkText")
(find-rurima "= module TkManageFocus" "refm/api/src/tk/mngfocus/TkManageFocus")
(find-rurima "== Constants" "= module TkManageFocus" "refm/api/src/tk/mngfocus/TkManageFocus")
(find-rurima "--- TkCommandNames" "== Constants" "= module TkManageFocus" "refm/api/src/tk/mngfocus/TkManageFocus")
(find-rurima "== Module Functions" "= module TkManageFocus" "refm/api/src/tk/mngfocus/TkManageFocus")
(find-rurima "--- followsMouse" "== Module Functions" "= module TkManageFocus" "refm/api/src/tk/mngfocus/TkManageFocus")
(find-rurima "--- next(win)" "== Module Functions" "= module TkManageFocus" "refm/api/src/tk/mngfocus/TkManageFocus")
(find-rurima "--- prev(win)" "== Module Functions" "= module TkManageFocus" "refm/api/src/tk/mngfocus/TkManageFocus")
(find-rurima "== Instance Methods" "= module TkManageFocus" "refm/api/src/tk/mngfocus/TkManageFocus")
(find-rurima "--- focusNext" "== Instance Methods" "= module TkManageFocus" "refm/api/src/tk/mngfocus/TkManageFocus")
(find-rurima "--- focusPrev" "== Instance Methods" "= module TkManageFocus" "refm/api/src/tk/mngfocus/TkManageFocus")
(find-rurima "= class TkScale < TkWindow" "refm/api/src/tk/scale.rd")
(find-rurima "== Constants" "= class TkScale < TkWindow" "refm/api/src/tk/scale.rd")
(find-rurima "--- TkCommandNames" "== Constants" "= class TkScale < TkWindow" "refm/api/src/tk/scale.rd")
(find-rurima "--- WidgetClassName" "== Constants" "= class TkScale < TkWindow" "refm/api/src/tk/scale.rd")
(find-rurima "--- WidgetClassNames" "== Constants" "= class TkScale < TkWindow" "refm/api/src/tk/scale.rd")
(find-rurima "== Instance Methods" "= class TkScale < TkWindow" "refm/api/src/tk/scale.rd")
(find-rurima "--- command(cmd = Proc.new)" "== Instance Methods" "= class TkScale < TkWindow" "refm/api/src/tk/scale.rd")
(find-rurima "--- configure(slot, value = Tk::None)" "== Instance Methods" "= class TkScale < TkWindow" "refm/api/src/tk/scale.rd")
(find-rurima "--- configure_cmd(slot, value)" "== Instance Methods" "= class TkScale < TkWindow" "refm/api/src/tk/scale.rd")
(find-rurima "--- coords(value = Tk::None)" "== Instance Methods" "= class TkScale < TkWindow" "refm/api/src/tk/scale.rd")
(find-rurima "--- get(x = Tk::None, y = Tk::None)" "== Instance Methods" "= class TkScale < TkWindow" "refm/api/src/tk/scale.rd")
(find-rurima "--- identify(x, y)" "== Instance Methods" "= class TkScale < TkWindow" "refm/api/src/tk/scale.rd")
(find-rurima "--- set(value)" "== Instance Methods" "= class TkScale < TkWindow" "refm/api/src/tk/scale.rd")
(find-rurima "--- value" "== Instance Methods" "= class TkScale < TkWindow" "refm/api/src/tk/scale.rd")
(find-rurima "--- value=(value)" "== Instance Methods" "= class TkScale < TkWindow" "refm/api/src/tk/scale.rd")
(find-rurima "= module TkTreatFont" "refm/api/src/tk/TkTreatFont")
(find-rurima "== Instance Methods" "= module TkTreatFont" "refm/api/src/tk/TkTreatFont")
(find-rurima "--- font_configinfo(key = nil)" "== Instance Methods" "= module TkTreatFont" "refm/api/src/tk/TkTreatFont")
(find-rurima "--- fontobj(key = nil)" "== Instance Methods" "= module TkTreatFont" "refm/api/src/tk/TkTreatFont")
(find-rurima "--- font_configure(slot)" "== Instance Methods" "= module TkTreatFont" "refm/api/src/tk/TkTreatFont")
(find-rurima "--- font_copy(win, wintag = nil, winkey = nil, targetkey = nil)" "== Instance Methods" "= module TkTreatFont" "refm/api/src/tk/TkTreatFont")
(find-rurima "--- kanjifont_configure(knj, keys = nil)" "== Instance Methods" "= module TkTreatFont" "refm/api/src/tk/TkTreatFont")
(find-rurima "--- kanjifont_copy(win, wintag = nil, winkey = nil, targetkey = nil)" "== Instance Methods" "= module TkTreatFont" "refm/api/src/tk/TkTreatFont")
(find-rurima "--- latinfont_configure(ltn, keys = nil)" "== Instance Methods" "= module TkTreatFont" "refm/api/src/tk/TkTreatFont")
(find-rurima "--- asciifont_configure(ltn, keys = nil)" "== Instance Methods" "= module TkTreatFont" "refm/api/src/tk/TkTreatFont")
(find-rurima "--- latinfont_copy(win, wintag = nil, winkey = nil, targetkey = nil)" "== Instance Methods" "= module TkTreatFont" "refm/api/src/tk/TkTreatFont")
(find-rurima "--- asciifont_copy(win, wintag = nil, winkey = nil, targetkey = nil)" "== Instance Methods" "= module TkTreatFont" "refm/api/src/tk/TkTreatFont")
(find-rurima "= class TkTimer < Object" "refm/api/src/tk/timer/TkTimer")
(find-rurima "== Constants" "= class TkTimer < Object" "refm/api/src/tk/timer/TkTimer")
(find-rurima "--- TkCommandNames" "== Constants" "= class TkTimer < Object" "refm/api/src/tk/timer/TkTimer")
(find-rurima "--- Tk_CBID" "== Constants" "= class TkTimer < Object" "refm/api/src/tk/timer/TkTimer")
(find-rurima "--- Tk_CBTBL" "== Constants" "= class TkTimer < Object" "refm/api/src/tk/timer/TkTimer")
(find-rurima "--- DEFAULT_IGNORE_EXCEPTIONS" "== Constants" "= class TkTimer < Object" "refm/api/src/tk/timer/TkTimer")
(find-rurima "== Class Methods" "= class TkTimer < Object" "refm/api/src/tk/timer/TkTimer")
(find-rurima "--- new(*args) { .... }" "== Class Methods" "= class TkTimer < Object" "refm/api/src/tk/timer/TkTimer")
(find-rurima "--- start(*args) { .... }" "== Class Methods" "= class TkTimer < Object" "refm/api/src/tk/timer/TkTimer")
(find-rurima "--- callback(obj_id)" "== Class Methods" "= class TkTimer < Object" "refm/api/src/tk/timer/TkTimer")
(find-rurima "--- info(obj = nil)" "== Class Methods" "= class TkTimer < Object" "refm/api/src/tk/timer/TkTimer")
(find-rurima "== Instance Methods" "= class TkTimer < Object" "refm/api/src/tk/timer/TkTimer")
(find-rurima "--- do_callback" "== Instance Methods" "= class TkTimer < Object" "refm/api/src/tk/timer/TkTimer")
(find-rurima "--- set_callback(sleep, args = nil)" "== Instance Methods" "= class TkTimer < Object" "refm/api/src/tk/timer/TkTimer")
(find-rurima "--- set_next_callback(args)" "== Instance Methods" "= class TkTimer < Object" "refm/api/src/tk/timer/TkTimer")
(find-rurima "--- after_id" "== Instance Methods" "= class TkTimer < Object" "refm/api/src/tk/timer/TkTimer")
(find-rurima "--- after_script" "== Instance Methods" "= class TkTimer < Object" "refm/api/src/tk/timer/TkTimer")
(find-rurima "--- current_proc" "== Instance Methods" "= class TkTimer < Object" "refm/api/src/tk/timer/TkTimer")
(find-rurima "--- current_args" "== Instance Methods" "= class TkTimer < Object" "refm/api/src/tk/timer/TkTimer")
(find-rurima "--- current_sleep" "== Instance Methods" "= class TkTimer < Object" "refm/api/src/tk/timer/TkTimer")
(find-rurima "--- current_interval" "== Instance Methods" "= class TkTimer < Object" "refm/api/src/tk/timer/TkTimer")
(find-rurima "--- return_value" "== Instance Methods" "= class TkTimer < Object" "refm/api/src/tk/timer/TkTimer")
(find-rurima "--- loop_exec" "== Instance Methods" "= class TkTimer < Object" "refm/api/src/tk/timer/TkTimer")
(find-rurima "--- loop_exec=" "== Instance Methods" "= class TkTimer < Object" "refm/api/src/tk/timer/TkTimer")
(find-rurima "--- cb_call" "== Instance Methods" "= class TkTimer < Object" "refm/api/src/tk/timer/TkTimer")
(find-rurima "--- get_procs" "== Instance Methods" "= class TkTimer < Object" "refm/api/src/tk/timer/TkTimer")
(find-rurima "--- current_status" "== Instance Methods" "= class TkTimer < Object" "refm/api/src/tk/timer/TkTimer")
(find-rurima "--- cancel_on_exception?" "== Instance Methods" "= class TkTimer < Object" "refm/api/src/tk/timer/TkTimer")
(find-rurima "--- cancel_on_exception=(mode)" "== Instance Methods" "= class TkTimer < Object" "refm/api/src/tk/timer/TkTimer")
(find-rurima "--- running?" "== Instance Methods" "= class TkTimer < Object" "refm/api/src/tk/timer/TkTimer")
(find-rurima "--- loop_rest" "== Instance Methods" "= class TkTimer < Object" "refm/api/src/tk/timer/TkTimer")
(find-rurima "--- loop_rest=(rest)" "== Instance Methods" "= class TkTimer < Object" "refm/api/src/tk/timer/TkTimer")
(find-rurima "--- set_interval(interval)" "== Instance Methods" "= class TkTimer < Object" "refm/api/src/tk/timer/TkTimer")
(find-rurima "--- set_procs(interval, loop_exec, *procs)" "== Instance Methods" "= class TkTimer < Object" "refm/api/src/tk/timer/TkTimer")
(find-rurima "--- add_procs(*procs)" "== Instance Methods" "= class TkTimer < Object" "refm/api/src/tk/timer/TkTimer")
(find-rurima "--- delete_procs(*procs)" "== Instance Methods" "= class TkTimer < Object" "refm/api/src/tk/timer/TkTimer")
(find-rurima "--- delete_at(n)" "== Instance Methods" "= class TkTimer < Object" "refm/api/src/tk/timer/TkTimer")
(find-rurima "--- set_start_proc(sleep = nil, init_proc = nil, *init_args) { .... }" "== Instance Methods" "= class TkTimer < Object" "refm/api/src/tk/timer/TkTimer")
(find-rurima "--- start(*init_args) { .... }" "== Instance Methods" "= class TkTimer < Object" "refm/api/src/tk/timer/TkTimer")
(find-rurima "--- reset(*reset_args)" "== Instance Methods" "= class TkTimer < Object" "refm/api/src/tk/timer/TkTimer")
(find-rurima "--- restart(*restart_args) { .... }" "== Instance Methods" "= class TkTimer < Object" "refm/api/src/tk/timer/TkTimer")
(find-rurima "--- cancel" "== Instance Methods" "= class TkTimer < Object" "refm/api/src/tk/timer/TkTimer")
(find-rurima "--- stop" "== Instance Methods" "= class TkTimer < Object" "refm/api/src/tk/timer/TkTimer")
(find-rurima "--- continue(wait = nil)" "== Instance Methods" "= class TkTimer < Object" "refm/api/src/tk/timer/TkTimer")
(find-rurima "--- skip" "== Instance Methods" "= class TkTimer < Object" "refm/api/src/tk/timer/TkTimer")
(find-rurima "--- info" "== Instance Methods" "= class TkTimer < Object" "refm/api/src/tk/timer/TkTimer")
(find-rurima "--- eventloop_wait(check_root = false)" "== Instance Methods" "= class TkTimer < Object" "refm/api/src/tk/timer/TkTimer")
(find-rurima "--- eventloop_tkwait" "== Instance Methods" "= class TkTimer < Object" "refm/api/src/tk/timer/TkTimer")
(find-rurima "--- thread_wait(check_root = false)" "== Instance Methods" "= class TkTimer < Object" "refm/api/src/tk/timer/TkTimer")
(find-rurima "--- thread_tkwait" "== Instance Methods" "= class TkTimer < Object" "refm/api/src/tk/timer/TkTimer")
(find-rurima "--- tkwait(on_thread = true)" "== Instance Methods" "= class TkTimer < Object" "refm/api/src/tk/timer/TkTimer")
(find-rurima "--- wait(on_thread = true, check_root = false)" "== Instance Methods" "= class TkTimer < Object" "refm/api/src/tk/timer/TkTimer")
(find-rurima "= class TkAfter" "refm/api/src/tk/timer/TkTimer")
(find-rurima "= class TkRTTimer < TkTimer" "refm/api/src/tk/timer/TkRTTimer")
(find-rurima "== Constants" "= class TkRTTimer < TkTimer" "refm/api/src/tk/timer/TkRTTimer")
(find-rurima "--- DEFAULT_OFFSET_LIST_SIZE" "== Constants" "= class TkRTTimer < TkTimer" "refm/api/src/tk/timer/TkRTTimer")
(find-rurima "== Class Methods" "= class TkRTTimer < TkTimer" "refm/api/src/tk/timer/TkRTTimer")
(find-rurima "--- new(*args) { ... }" "== Class Methods" "= class TkRTTimer < TkTimer" "refm/api/src/tk/timer/TkRTTimer")
(find-rurima "== Instance Methods" "= class TkRTTimer < TkTimer" "refm/api/src/tk/timer/TkRTTimer")
(find-rurima "--- start(*args) { .... }" "== Instance Methods" "= class TkRTTimer < TkTimer" "refm/api/src/tk/timer/TkRTTimer")
(find-rurima "--- cancel" "== Instance Methods" "= class TkRTTimer < TkTimer" "refm/api/src/tk/timer/TkRTTimer")
(find-rurima "--- stop" "== Instance Methods" "= class TkRTTimer < TkTimer" "refm/api/src/tk/timer/TkRTTimer")
(find-rurima "--- continue(wait=nil)" "== Instance Methods" "= class TkRTTimer < TkTimer" "refm/api/src/tk/timer/TkRTTimer")
(find-rurima "--- set_interval(interval)" "== Instance Methods" "= class TkRTTimer < TkTimer" "refm/api/src/tk/timer/TkRTTimer")
(find-rurima "--- set_next_callback(args)" "== Instance Methods" "= class TkRTTimer < TkTimer" "refm/api/src/tk/timer/TkRTTimer")
(find-rurima "--- cb_call" "== Instance Methods" "= class TkRTTimer < TkTimer" "refm/api/src/tk/timer/TkRTTimer")
(find-rurima "= class TkPanedWindow < TkWindow" "refm/api/src/tk/panedwindow/TkPanedWindow")
(find-rurima "== Instance Methods" "= class TkPanedWindow < TkWindow" "refm/api/src/tk/panedwindow/TkPanedWindow")
(find-rurima "--- add(*args)" "== Instance Methods" "= class TkPanedWindow < TkWindow" "refm/api/src/tk/panedwindow/TkPanedWindow")
(find-rurima "--- forget(win, *wins)" "== Instance Methods" "= class TkPanedWindow < TkWindow" "refm/api/src/tk/panedwindow/TkPanedWindow")
(find-rurima "--- del(win, *wins)" "== Instance Methods" "= class TkPanedWindow < TkWindow" "refm/api/src/tk/panedwindow/TkPanedWindow")
(find-rurima "--- delete(win, *wins)" "== Instance Methods" "= class TkPanedWindow < TkWindow" "refm/api/src/tk/panedwindow/TkPanedWindow")
(find-rurima "--- remove(win, *wins)" "== Instance Methods" "= class TkPanedWindow < TkWindow" "refm/api/src/tk/panedwindow/TkPanedWindow")
(find-rurima "--- identify(x, y)" "== Instance Methods" "= class TkPanedWindow < TkWindow" "refm/api/src/tk/panedwindow/TkPanedWindow")
(find-rurima "--- proxy_coord" "== Instance Methods" "= class TkPanedWindow < TkWindow" "refm/api/src/tk/panedwindow/TkPanedWindow")
(find-rurima "--- proxy_forget" "== Instance Methods" "= class TkPanedWindow < TkWindow" "refm/api/src/tk/panedwindow/TkPanedWindow")
(find-rurima "--- proxy_place(x, y)" "== Instance Methods" "= class TkPanedWindow < TkWindow" "refm/api/src/tk/panedwindow/TkPanedWindow")
(find-rurima "--- sash_coord(index)" "== Instance Methods" "= class TkPanedWindow < TkWindow" "refm/api/src/tk/panedwindow/TkPanedWindow")
(find-rurima "--- sash_dragto(index, x, y)" "== Instance Methods" "= class TkPanedWindow < TkWindow" "refm/api/src/tk/panedwindow/TkPanedWindow")
(find-rurima "--- sash_mark(index, x, y)" "== Instance Methods" "= class TkPanedWindow < TkWindow" "refm/api/src/tk/panedwindow/TkPanedWindow")
(find-rurima "--- sash_place(index, x, y)" "== Instance Methods" "= class TkPanedWindow < TkWindow" "refm/api/src/tk/panedwindow/TkPanedWindow")
(find-rurima "--- panecget(win, key)" "== Instance Methods" "= class TkPanedWindow < TkWindow" "refm/api/src/tk/panedwindow/TkPanedWindow")
(find-rurima "--- paneconfigure(win, key, value = nil)" "== Instance Methods" "= class TkPanedWindow < TkWindow" "refm/api/src/tk/panedwindow/TkPanedWindow")
(find-rurima "--- pane_config(win, key, value = nil)" "== Instance Methods" "= class TkPanedWindow < TkWindow" "refm/api/src/tk/panedwindow/TkPanedWindow")
(find-rurima "--- paneconfiginfo(win, key = nil)" "== Instance Methods" "= class TkPanedWindow < TkWindow" "refm/api/src/tk/panedwindow/TkPanedWindow")
(find-rurima "--- pane_configinfo(win, key = nil)" "== Instance Methods" "= class TkPanedWindow < TkWindow" "refm/api/src/tk/panedwindow/TkPanedWindow")
(find-rurima "--- current_paneconfiginfo(win, key = nil)" "== Instance Methods" "= class TkPanedWindow < TkWindow" "refm/api/src/tk/panedwindow/TkPanedWindow")
(find-rurima "--- current_pane_configinfo(win, key = nil)" "== Instance Methods" "= class TkPanedWindow < TkWindow" "refm/api/src/tk/panedwindow/TkPanedWindow")
(find-rurima "--- panes" "== Instance Methods" "= class TkPanedWindow < TkWindow" "refm/api/src/tk/panedwindow/TkPanedWindow")
(find-rurima "== Constants" "= class TkPanedWindow < TkWindow" "refm/api/src/tk/panedwindow/TkPanedWindow")
(find-rurima "--- TkCommandNames" "== Constants" "= class TkPanedWindow < TkWindow" "refm/api/src/tk/panedwindow/TkPanedWindow")
(find-rurima "--- WidgetClassName" "== Constants" "= class TkPanedWindow < TkWindow" "refm/api/src/tk/panedwindow/TkPanedWindow")
(find-rurima "= class TkMsgCatalog < TkObject" "refm/api/src/tk/msgcat.rd")
(find-rurima "== Class Methods" "= class TkMsgCatalog < TkObject" "refm/api/src/tk/msgcat.rd")
(find-rurima "--- package_name" "== Class Methods" "= class TkMsgCatalog < TkObject" "refm/api/src/tk/msgcat.rd")
(find-rurima "--- callback(namespace, locale, src_str, *args)" "== Class Methods" "= class TkMsgCatalog < TkObject" "refm/api/src/tk/msgcat.rd")
(find-rurima "--- new(namespace = nil)" "== Class Methods" "= class TkMsgCatalog < TkObject" "refm/api/src/tk/msgcat.rd")
(find-rurima "--- translate(*args)" "== Class Methods" "= class TkMsgCatalog < TkObject" "refm/api/src/tk/msgcat.rd")
(find-rurima "--- mc(*args)" "== Class Methods" "= class TkMsgCatalog < TkObject" "refm/api/src/tk/msgcat.rd")
(find-rurima "--- [](*args)" "== Class Methods" "= class TkMsgCatalog < TkObject" "refm/api/src/tk/msgcat.rd")
(find-rurima "--- maxlen(*src_strings)" "== Class Methods" "= class TkMsgCatalog < TkObject" "refm/api/src/tk/msgcat.rd")
(find-rurima "--- locale" "== Class Methods" "= class TkMsgCatalog < TkObject" "refm/api/src/tk/msgcat.rd")
(find-rurima "--- locale=(locale)" "== Class Methods" "= class TkMsgCatalog < TkObject" "refm/api/src/tk/msgcat.rd")
(find-rurima "--- preferences" "== Class Methods" "= class TkMsgCatalog < TkObject" "refm/api/src/tk/msgcat.rd")
(find-rurima "--- load_tk(dir)" "== Class Methods" "= class TkMsgCatalog < TkObject" "refm/api/src/tk/msgcat.rd")
(find-rurima "--- load_rb(dir)" "== Class Methods" "= class TkMsgCatalog < TkObject" "refm/api/src/tk/msgcat.rd")
(find-rurima "--- load(dir)" "== Class Methods" "= class TkMsgCatalog < TkObject" "refm/api/src/tk/msgcat.rd")
(find-rurima "--- set_translation(locale, src_str, trans_str = Tk::None, enc = \"utf-8\")" "== Class Methods" "= class TkMsgCatalog < TkObject" "refm/api/src/tk/msgcat.rd")
(find-rurima "--- set_translation_list(locale, trans_list, enc = \"utf-8\")" "== Class Methods" "= class TkMsgCatalog < TkObject" "refm/api/src/tk/msgcat.rd")
(find-rurima "--- def_unknown_proc(cmd = Proc.new)" "== Class Methods" "= class TkMsgCatalog < TkObject" "refm/api/src/tk/msgcat.rd")
(find-rurima "== Instance Methods" "= class TkMsgCatalog < TkObject" "refm/api/src/tk/msgcat.rd")
(find-rurima "--- msgcat_ext" "== Instance Methods" "= class TkMsgCatalog < TkObject" "refm/api/src/tk/msgcat.rd")
(find-rurima "--- msgcat_ext=(value)" "== Instance Methods" "= class TkMsgCatalog < TkObject" "refm/api/src/tk/msgcat.rd")
(find-rurima "--- method_missing(id, *args)" "== Instance Methods" "= class TkMsgCatalog < TkObject" "refm/api/src/tk/msgcat.rd")
(find-rurima "--- translate(*args)" "== Instance Methods" "= class TkMsgCatalog < TkObject" "refm/api/src/tk/msgcat.rd")
(find-rurima "--- mc(*args)" "== Instance Methods" "= class TkMsgCatalog < TkObject" "refm/api/src/tk/msgcat.rd")
(find-rurima "--- [](*args)" "== Instance Methods" "= class TkMsgCatalog < TkObject" "refm/api/src/tk/msgcat.rd")
(find-rurima "--- maxlen(*src_strings)" "== Instance Methods" "= class TkMsgCatalog < TkObject" "refm/api/src/tk/msgcat.rd")
(find-rurima "--- locale" "== Instance Methods" "= class TkMsgCatalog < TkObject" "refm/api/src/tk/msgcat.rd")
(find-rurima "--- locale=(locale)" "== Instance Methods" "= class TkMsgCatalog < TkObject" "refm/api/src/tk/msgcat.rd")
(find-rurima "--- preferences" "== Instance Methods" "= class TkMsgCatalog < TkObject" "refm/api/src/tk/msgcat.rd")
(find-rurima "--- load_tk(dir)" "== Instance Methods" "= class TkMsgCatalog < TkObject" "refm/api/src/tk/msgcat.rd")
(find-rurima "--- load_rb(dir)" "== Instance Methods" "= class TkMsgCatalog < TkObject" "refm/api/src/tk/msgcat.rd")
(find-rurima "--- load(dir)" "== Instance Methods" "= class TkMsgCatalog < TkObject" "refm/api/src/tk/msgcat.rd")
(find-rurima "--- set_translation(locale, src_str, trans_str = Tk::None, enc = \"utf-8\")" "== Instance Methods" "= class TkMsgCatalog < TkObject" "refm/api/src/tk/msgcat.rd")
(find-rurima "--- set_translation_list(locale, trans_list, enc = \"utf-8\")" "== Instance Methods" "= class TkMsgCatalog < TkObject" "refm/api/src/tk/msgcat.rd")
(find-rurima "--- def_unknown_proc(cmd = Proc.new)" "== Instance Methods" "= class TkMsgCatalog < TkObject" "refm/api/src/tk/msgcat.rd")
(find-rurima "== Constants" "= class TkMsgCatalog < TkObject" "refm/api/src/tk/msgcat.rd")
(find-rurima "--- TkCommandNames" "== Constants" "= class TkMsgCatalog < TkObject" "refm/api/src/tk/msgcat.rd")
(find-rurima "--- PACKAGE_NAME" "== Constants" "= class TkMsgCatalog < TkObject" "refm/api/src/tk/msgcat.rd")
(find-rurima "--- MSGCAT_EXT" "== Constants" "= class TkMsgCatalog < TkObject" "refm/api/src/tk/msgcat.rd")
(find-rurima "--- UNKNOWN_CBTBL" "== Constants" "= class TkMsgCatalog < TkObject" "refm/api/src/tk/msgcat.rd")
(find-rurima "= class TkTextMarkInsert < TkTextNamedMark" "refm/api/src/tk/textmark/TkTextMarkInsert")
(find-rurima "== Class Methods" "= class TkTextMarkInsert < TkTextNamedMark" "refm/api/src/tk/textmark/TkTextMarkInsert")
(find-rurima "--- new(parent, *args)" "== Class Methods" "= class TkTextMarkInsert < TkTextNamedMark" "refm/api/src/tk/textmark/TkTextMarkInsert")
(find-rurima "= class TkTextMark < TkObject" "refm/api/src/tk/textmark/TkTextMark")
(find-rurima "== Class Methods" "= class TkTextMark < TkObject" "refm/api/src/tk/textmark/TkTextMark")
(find-rurima "--- id2obj(text, id)" "== Class Methods" "= class TkTextMark < TkObject" "refm/api/src/tk/textmark/TkTextMark")
(find-rurima "--- new(parent, index)" "== Class Methods" "= class TkTextMark < TkObject" "refm/api/src/tk/textmark/TkTextMark")
(find-rurima "== Instance Methods" "= class TkTextMark < TkObject" "refm/api/src/tk/textmark/TkTextMark")
(find-rurima "--- id" "== Instance Methods" "= class TkTextMark < TkObject" "refm/api/src/tk/textmark/TkTextMark")
(find-rurima "--- exist?" "== Instance Methods" "= class TkTextMark < TkObject" "refm/api/src/tk/textmark/TkTextMark")
(find-rurima "--- pos" "== Instance Methods" "= class TkTextMark < TkObject" "refm/api/src/tk/textmark/TkTextMark")
(find-rurima "--- pos=(where)" "== Instance Methods" "= class TkTextMark < TkObject" "refm/api/src/tk/textmark/TkTextMark")
(find-rurima "--- set(where)" "== Instance Methods" "= class TkTextMark < TkObject" "refm/api/src/tk/textmark/TkTextMark")
(find-rurima "--- unset" "== Instance Methods" "= class TkTextMark < TkObject" "refm/api/src/tk/textmark/TkTextMark")
(find-rurima "--- destroy" "== Instance Methods" "= class TkTextMark < TkObject" "refm/api/src/tk/textmark/TkTextMark")
(find-rurima "--- gravity" "== Instance Methods" "= class TkTextMark < TkObject" "refm/api/src/tk/textmark/TkTextMark")
(find-rurima "--- gravity=(direction)" "== Instance Methods" "= class TkTextMark < TkObject" "refm/api/src/tk/textmark/TkTextMark")
(find-rurima "--- next(index = nil)" "== Instance Methods" "= class TkTextMark < TkObject" "refm/api/src/tk/textmark/TkTextMark")
(find-rurima "--- previous(index = nil)" "== Instance Methods" "= class TkTextMark < TkObject" "refm/api/src/tk/textmark/TkTextMark")
(find-rurima "--- +(mod)" "== Instance Methods" "= class TkTextMark < TkObject" "refm/api/src/tk/textmark/TkTextMark")
(find-rurima "--- -(mod)" "== Instance Methods" "= class TkTextMark < TkObject" "refm/api/src/tk/textmark/TkTextMark")
(find-rurima "== Constants" "= class TkTextMark < TkObject" "refm/api/src/tk/textmark/TkTextMark")
(find-rurima "--- TMarkID_TBL" "== Constants" "= class TkTextMark < TkObject" "refm/api/src/tk/textmark/TkTextMark")
(find-rurima "--- Tk_TextMark_ID" "== Constants" "= class TkTextMark < TkObject" "refm/api/src/tk/textmark/TkTextMark")
(find-rurima "= class TkTextMarkAnchor < TkTextNamedMark" "refm/api/src/tk/textmark/TkTextMarkAnchor")
(find-rurima "== Class Methods" "= class TkTextMarkAnchor < TkTextNamedMark" "refm/api/src/tk/textmark/TkTextMarkAnchor")
(find-rurima "--- new(parent, *args)" "== Class Methods" "= class TkTextMarkAnchor < TkTextNamedMark" "refm/api/src/tk/textmark/TkTextMarkAnchor")
(find-rurima "= class TkTextNamedMark < TkTextMark" "refm/api/src/tk/textmark/TkTextNamedMark")
(find-rurima "== Class Methods" "= class TkTextNamedMark < TkTextMark" "refm/api/src/tk/textmark/TkTextNamedMark")
(find-rurima "--- new(parent, name, *args)" "== Class Methods" "= class TkTextNamedMark < TkTextMark" "refm/api/src/tk/textmark/TkTextNamedMark")
(find-rurima "= class TkTextMarkCurrent < TkTextNamedMark" "refm/api/src/tk/textmark/TkTextMarkCurrent")
(find-rurima "== Class Methods" "= class TkTextMarkCurrent < TkTextNamedMark" "refm/api/src/tk/textmark/TkTextMarkCurrent")
(find-rurima "--- new(parent, *args)" "== Class Methods" "= class TkTextMarkCurrent < TkTextNamedMark" "refm/api/src/tk/textmark/TkTextMarkCurrent")
(find-rurima "= module TkXIM" "refm/api/src/tk/xim.rd")
(find-rurima "== Class Methods" "= module TkXIM" "refm/api/src/tk/xim.rd")
(find-rurima "--- useinputmethods(value = Tk::None, window = nil)" "== Class Methods" "= module TkXIM" "refm/api/src/tk/xim.rd")
(find-rurima "--- useinputmethods_displayof(window, value = Tk::None)" "== Class Methods" "= module TkXIM" "refm/api/src/tk/xim.rd")
(find-rurima "--- caret(window, keys = nil)" "== Class Methods" "= module TkXIM" "refm/api/src/tk/xim.rd")
(find-rurima "--- configure(window, slot, value=None)" "== Class Methods" "= module TkXIM" "refm/api/src/tk/xim.rd")
(find-rurima "--- configinfo(window, slot=nil)" "== Class Methods" "= module TkXIM" "refm/api/src/tk/xim.rd")
(find-rurima "--- useinputmethods(window = nil, value = nil)" "== Class Methods" "= module TkXIM" "refm/api/src/tk/xim.rd")
(find-rurima "--- current_configinfo(win, slot = nil)" "== Class Methods" "= module TkXIM" "refm/api/src/tk/xim.rd")
(find-rurima "== Instance Methods" "= module TkXIM" "refm/api/src/tk/xim.rd")
(find-rurima "--- useinputmethods(value = Tk::None)" "== Instance Methods" "= module TkXIM" "refm/api/src/tk/xim.rd")
(find-rurima "--- caret(keys = nil)" "== Instance Methods" "= module TkXIM" "refm/api/src/tk/xim.rd")
(find-rurima "--- imconfigure(slot, value = Tk::None)" "== Instance Methods" "= module TkXIM" "refm/api/src/tk/xim.rd")
(find-rurima "--- imconfiginfo(slot = nil)" "== Instance Methods" "= module TkXIM" "refm/api/src/tk/xim.rd")
(find-rurima "== Constants" "= module TkXIM" "refm/api/src/tk/xim.rd")
(find-rurima "--- TkCommandNames" "== Constants" "= module TkXIM" "refm/api/src/tk/xim.rd")
(find-rurima "= module Tk::Encoding" "refm/api/src/tk/Tk")
(find-rurima "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "== Constants" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- AUTO_PATH" "== Constants" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- JAPANIZED_TK" "== Constants" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- LIBRARY" "== Constants" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- LIBRARY_PATH" "== Constants" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- PACKAGE_PATH" "== Constants" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- PLATFORM" "== Constants" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- TCL_LIBRARY" "== Constants" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- TCL_LIBRARY_PATH" "== Constants" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- TCL_MAJOR_VERSION" "== Constants" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- TCL_MINOR_VERSION" "== Constants" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- TCL_PACKAGE_PATH" "== Constants" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- TCL_PATCHLEVEL" "== Constants" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- TCL_PRECISION" "== Constants" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- TCL_VERSION" "== Constants" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- TK_LIBRARY" "== Constants" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- TK_MAJOR_VERSION" "== Constants" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- TK_MINOR_VERSION" "== Constants" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- TK_PATCHLEVEL" "== Constants" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- TK_PREV" "== Constants" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- TK_VERSION" "== Constants" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- Tkextlib_RELEASE_DATE" "== Constants" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "== Class Methods" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- add_kinsoku(chars, mode = 'both')" "== Class Methods" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- bell(nice = false)" "== Class Methods" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- bell_on_display(win, nice = false)" "== Class Methods" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- const_missing(sym)" "== Class Methods" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- current_grabs(win = nil)" "== Class Methods" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- delete_kinsoku(chars, mode = 'both')" "== Class Methods" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- destroy(*wins)" "== Class Methods" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- errorCode" "== Class Methods" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- errorInfo" "== Class Methods" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- exit" "== Class Methods" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- focus(display = nil)" "== Class Methods" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- focus_lastfor(win)" "== Class Methods" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- focus_next(win)" "== Class Methods" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- focus_prev(win)" "== Class Methods" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- focus_to(win, force = false)" "== Class Methods" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- fromUTF8(str, encoding = nil)" "== Class Methods" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- grid(*args)" "== Class Methods" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- grid_forget(*args)" "== Class Methods" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- has_mainwindow?" "== Class Methods" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- load_tcllibrary(file, pkg_name = Tk::None, interp = Tk::None)" "== Class Methods" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- load_tclscript(file, enc = nil)" "== Class Methods" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- lower_window(win, below = Tk::None)" "== Class Methods" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- pack(*args)" "== Class Methods" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- pack_forget(*args)" "== Class Methods" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- pkgconfig_get(mod, key)" "== Class Methods" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- pkgconfig_list(mod)" "== Class Methods" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- place(*args)" "== Class Methods" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- place_forget(*args)" "== Class Methods" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- raise_window(win, above = Tk::None)" "== Class Methods" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- show_kinsoku(mode = 'both')" "== Class Methods" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- strictMotif(mode = Tk::None)" "== Class Methods" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- subst_tk_backslash(str)" "== Class Methods" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- subst_utf_backslash(str)" "== Class Methods" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- tcl_pkgconfig_get" "== Class Methods" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- tcl_pkgconfig_list(key)" "== Class Methods" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- thread_update(idle = nil)" "== Class Methods" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- thread_update_idletasks" "== Class Methods" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- tk_pkgconfig_get(key)" "== Class Methods" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- tk_pkgconfig_list" "== Class Methods" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- toUTF8(str, encoding = nil)" "== Class Methods" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- to_backslash_sequence(str)" "== Class Methods" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- ungrid(*args)" "== Class Methods" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- unload_tcllibrary(*args)" "== Class Methods" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- unpack(*args)" "== Class Methods" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- unplace(*args)" "== Class Methods" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- update(idle = nil)" "== Class Methods" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- update_idletasks" "== Class Methods" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- utf_to_backslash(str)" "== Class Methods" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- utf_to_backslash_sequence(str)" "== Class Methods" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "== Instance Methods" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- bell" "== Instance Methods" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- bell_on_display" "== Instance Methods" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- root" "== Instance Methods" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "--- update(idle = nil)" "== Instance Methods" "= module Tk" "refm/api/src/tk/Tk")
(find-rurima "= class TkRoot < TkWindow" "refm/api/src/tk/root.rd")
(find-rurima "== Constants" "= class TkRoot < TkWindow" "refm/api/src/tk/root.rd")
(find-rurima "--- WidgetClassName" "== Constants" "= class TkRoot < TkWindow" "refm/api/src/tk/root.rd")
(find-rurima "--- WidgetClassNames" "== Constants" "= class TkRoot < TkWindow" "refm/api/src/tk/root.rd")
(find-rurima "== Class Methods" "= class TkRoot < TkWindow" "refm/api/src/tk/root.rd")
(find-rurima "--- destroy" "== Class Methods" "= class TkRoot < TkWindow" "refm/api/src/tk/root.rd")
(find-rurima "--- new(keys = nil, &block)" "== Class Methods" "= class TkRoot < TkWindow" "refm/api/src/tk/root.rd")
(find-rurima "--- to_eval" "== Class Methods" "= class TkRoot < TkWindow" "refm/api/src/tk/root.rd")
(find-rurima "== Instance Methods" "= class TkRoot < TkWindow" "refm/api/src/tk/root.rd")
(find-rurima "--- add_menu(menu_info, tearoff = false, opts = nil)" "== Instance Methods" "= class TkRoot < TkWindow" "refm/api/src/tk/root.rd")
(find-rurima "--- add_menubar(menu_spec, tearoff = false, opts = nil)" "== Instance Methods" "= class TkRoot < TkWindow" "refm/api/src/tk/root.rd")
(find-rurima "--- path" "== Instance Methods" "= class TkRoot < TkWindow" "refm/api/src/tk/root.rd")
(find-rurima "= object TkCore::INTERP < TclTkIp" "refm/api/src/tk/TkCore__INTERP")
(find-rurima "--- __getip" "= object TkCore::INTERP < TclTkIp" "refm/api/src/tk/TkCore__INTERP")
(find-rurima "--- cb_entry_class" "= object TkCore::INTERP < TclTkIp" "refm/api/src/tk/TkCore__INTERP")
(find-rurima "--- tk_cmd_tbl" "= object TkCore::INTERP < TclTkIp" "refm/api/src/tk/TkCore__INTERP")
(find-rurima "--- tk_windows" "= object TkCore::INTERP < TclTkIp" "refm/api/src/tk/TkCore__INTERP")
(find-rurima "= module TkOptionDB" "refm/api/src/tk/optiondb.rd")
(find-rurima "== Constants" "= module TkOptionDB" "refm/api/src/tk/optiondb.rd")
(find-rurima "--- CmdClassID" "== Constants" "= module TkOptionDB" "refm/api/src/tk/optiondb.rd")
(find-rurima "--- RAND_BASE_CHAR" "== Constants" "= module TkOptionDB" "refm/api/src/tk/optiondb.rd")
(find-rurima "--- RAND_BASE_CNT" "== Constants" "= module TkOptionDB" "refm/api/src/tk/optiondb.rd")
(find-rurima "--- RAND_BASE_HEAD" "== Constants" "= module TkOptionDB" "refm/api/src/tk/optiondb.rd")
(find-rurima "--- TkCommandNames" "== Constants" "= module TkOptionDB" "refm/api/src/tk/optiondb.rd")
(find-rurima "== Module Functions" "= module TkOptionDB" "refm/api/src/tk/optiondb.rd")
(find-rurima "--- add(pat, value, pri = Tk::None)" "== Module Functions" "= module TkOptionDB" "refm/api/src/tk/optiondb.rd")
(find-rurima "--- clear" "== Module Functions" "= module TkOptionDB" "refm/api/src/tk/optiondb.rd")
(find-rurima "--- eval_under_random_base(parent = nil, &block)" "== Module Functions" "= module TkOptionDB" "refm/api/src/tk/optiondb.rd")
(find-rurima "--- get(win, name, klass)" "== Module Functions" "= module TkOptionDB" "refm/api/src/tk/optiondb.rd")
(find-rurima "--- new_proc_class(klass, func, safe = 4, add = false, parent = nil, &block)" "== Module Functions" "= module TkOptionDB" "refm/api/src/tk/optiondb.rd")
(find-rurima "--- new_proc_class_random(klass, func, safe = 4, add = false, &block)" "== Module Functions" "= module TkOptionDB" "refm/api/src/tk/optiondb.rd")
(find-rurima "--- read_entries(file, f_enc = nil)" "== Module Functions" "= module TkOptionDB" "refm/api/src/tk/optiondb.rd")
(find-rurima "--- readfile(file, pri = Tk::None)" "== Module Functions" "= module TkOptionDB" "refm/api/src/tk/optiondb.rd")
(find-rurima "--- read_file(file, pri = Tk::None)" "== Module Functions" "= module TkOptionDB" "refm/api/src/tk/optiondb.rd")
(find-rurima "--- read_with_encoding(file, f_enc = nil, pri = Tk::None)" "== Module Functions" "= module TkOptionDB" "refm/api/src/tk/optiondb.rd")
(find-rurima "= module TkOptionDB::Priority" "refm/api/src/tk/optiondb.rd")
(find-rurima "== Constants" "= module TkOptionDB::Priority" "refm/api/src/tk/optiondb.rd")
(find-rurima "--- Interactive" "== Constants" "= module TkOptionDB::Priority" "refm/api/src/tk/optiondb.rd")
(find-rurima "--- StartupFile" "== Constants" "= module TkOptionDB::Priority" "refm/api/src/tk/optiondb.rd")
(find-rurima "--- UserDefault" "== Constants" "= module TkOptionDB::Priority" "refm/api/src/tk/optiondb.rd")
(find-rurima "--- WidgetDefault" "== Constants" "= module TkOptionDB::Priority" "refm/api/src/tk/optiondb.rd")
(find-rurima "= class Tk::EncodedString < String" "refm/api/src/tk/encodedstr.rd")
(find-rurima "== Constants" "= class Tk::EncodedString < String" "refm/api/src/tk/encodedstr.rd")
(find-rurima "--- Encoding" "== Constants" "= class Tk::EncodedString < String" "refm/api/src/tk/encodedstr.rd")
(find-rurima "== Class Methods" "= class Tk::EncodedString < String" "refm/api/src/tk/encodedstr.rd")
(find-rurima "--- new(str, enc = nil)" "== Class Methods" "= class Tk::EncodedString < String" "refm/api/src/tk/encodedstr.rd")
(find-rurima "--- new_with_utf_backslash(str, enc = nil)" "== Class Methods" "= class Tk::EncodedString < String" "refm/api/src/tk/encodedstr.rd")
(find-rurima "--- new_without_utf_backslash(str, enc = nil)" "== Class Methods" "= class Tk::EncodedString < String" "refm/api/src/tk/encodedstr.rd")
(find-rurima "--- subst_tk_backslash(str)" "== Class Methods" "= class Tk::EncodedString < String" "refm/api/src/tk/encodedstr.rd")
(find-rurima "--- subst_utf_backslash(str)" "== Class Methods" "= class Tk::EncodedString < String" "refm/api/src/tk/encodedstr.rd")
(find-rurima "--- to_backslash_sequence(str)" "== Class Methods" "= class Tk::EncodedString < String" "refm/api/src/tk/encodedstr.rd")
(find-rurima "--- utf_backslash(str)" "== Class Methods" "= class Tk::EncodedString < String" "refm/api/src/tk/encodedstr.rd")
(find-rurima "--- utf_to_backslash(str)" "== Class Methods" "= class Tk::EncodedString < String" "refm/api/src/tk/encodedstr.rd")
(find-rurima "--- utf_to_backslash_sequence(str)" "== Class Methods" "= class Tk::EncodedString < String" "refm/api/src/tk/encodedstr.rd")
(find-rurima "== Instance Methods" "= class Tk::EncodedString < String" "refm/api/src/tk/encodedstr.rd")
(find-rurima "--- encoding" "== Instance Methods" "= class Tk::EncodedString < String" "refm/api/src/tk/encodedstr.rd")
(find-rurima "= class Tk::BinaryString < Tk::EncodedString" "refm/api/src/tk/encodedstr.rd")
(find-rurima "== Constants" "= class Tk::BinaryString < Tk::EncodedString" "refm/api/src/tk/encodedstr.rd")
(find-rurima "--- Encoding" "== Constants" "= class Tk::BinaryString < Tk::EncodedString" "refm/api/src/tk/encodedstr.rd")
(find-rurima "= class Tk::UTF8_String < Tk::EncodedString" "refm/api/src/tk/encodedstr.rd")
(find-rurima "== Constants" "= class Tk::UTF8_String < Tk::EncodedString" "refm/api/src/tk/encodedstr.rd")
(find-rurima "--- Encoding" "== Constants" "= class Tk::UTF8_String < Tk::EncodedString" "refm/api/src/tk/encodedstr.rd")
(find-rurima "== Class Methods" "= class Tk::UTF8_String < Tk::EncodedString" "refm/api/src/tk/encodedstr.rd")
(find-rurima "--- new(str)" "== Class Methods" "= class Tk::UTF8_String < Tk::EncodedString" "refm/api/src/tk/encodedstr.rd")
(find-rurima "== Instance Methods" "= class Tk::UTF8_String < Tk::EncodedString" "refm/api/src/tk/encodedstr.rd")
(find-rurima "= class TkEntry::ValidateCmd::ValidateArgs < Object" "refm/api/src/tk/entry/TkEntry__ValidateCmd__ValidateArgs")
(find-rurima "== Constants" "= class TkEntry::ValidateCmd::ValidateArgs < Object" "refm/api/src/tk/entry/TkEntry__ValidateCmd__ValidateArgs")
(find-rurima "--- KEY_TBL" "== Constants" "= class TkEntry::ValidateCmd::ValidateArgs < Object" "refm/api/src/tk/entry/TkEntry__ValidateCmd__ValidateArgs")
(find-rurima "--- PROC_TBL" "== Constants" "= class TkEntry::ValidateCmd::ValidateArgs < Object" "refm/api/src/tk/entry/TkEntry__ValidateCmd__ValidateArgs")
(find-rurima "--- VARG_KEY" "== Constants" "= class TkEntry::ValidateCmd::ValidateArgs < Object" "refm/api/src/tk/entry/TkEntry__ValidateCmd__ValidateArgs")
(find-rurima "--- VARG_TYPE" "== Constants" "= class TkEntry::ValidateCmd::ValidateArgs < Object" "refm/api/src/tk/entry/TkEntry__ValidateCmd__ValidateArgs")
(find-rurima "== Class Methods" "= class TkEntry::ValidateCmd::ValidateArgs < Object" "refm/api/src/tk/entry/TkEntry__ValidateCmd__ValidateArgs")
(find-rurima "--- new(d, i, s, v, pp, ss, vv, ww)" "== Class Methods" "= class TkEntry::ValidateCmd::ValidateArgs < Object" "refm/api/src/tk/entry/TkEntry__ValidateCmd__ValidateArgs")
(find-rurima "--- ret_val(val)" "== Class Methods" "= class TkEntry::ValidateCmd::ValidateArgs < Object" "refm/api/src/tk/entry/TkEntry__ValidateCmd__ValidateArgs")
(find-rurima "--- scan_args(arg_str, arg_val)" "== Class Methods" "= class TkEntry::ValidateCmd::ValidateArgs < Object" "refm/api/src/tk/entry/TkEntry__ValidateCmd__ValidateArgs")
(find-rurima "== Instance Methods" "= class TkEntry::ValidateCmd::ValidateArgs < Object" "refm/api/src/tk/entry/TkEntry__ValidateCmd__ValidateArgs")
(find-rurima "--- action" "== Instance Methods" "= class TkEntry::ValidateCmd::ValidateArgs < Object" "refm/api/src/tk/entry/TkEntry__ValidateCmd__ValidateArgs")
(find-rurima "--- current" "== Instance Methods" "= class TkEntry::ValidateCmd::ValidateArgs < Object" "refm/api/src/tk/entry/TkEntry__ValidateCmd__ValidateArgs")
(find-rurima "--- index" "== Instance Methods" "= class TkEntry::ValidateCmd::ValidateArgs < Object" "refm/api/src/tk/entry/TkEntry__ValidateCmd__ValidateArgs")
(find-rurima "--- string" "== Instance Methods" "= class TkEntry::ValidateCmd::ValidateArgs < Object" "refm/api/src/tk/entry/TkEntry__ValidateCmd__ValidateArgs")
(find-rurima "--- triggered" "== Instance Methods" "= class TkEntry::ValidateCmd::ValidateArgs < Object" "refm/api/src/tk/entry/TkEntry__ValidateCmd__ValidateArgs")
(find-rurima "--- type" "== Instance Methods" "= class TkEntry::ValidateCmd::ValidateArgs < Object" "refm/api/src/tk/entry/TkEntry__ValidateCmd__ValidateArgs")
(find-rurima "--- value" "== Instance Methods" "= class TkEntry::ValidateCmd::ValidateArgs < Object" "refm/api/src/tk/entry/TkEntry__ValidateCmd__ValidateArgs")
(find-rurima "--- widget" "== Instance Methods" "= class TkEntry::ValidateCmd::ValidateArgs < Object" "refm/api/src/tk/entry/TkEntry__ValidateCmd__ValidateArgs")
(find-rurima "= class Tkentry::ValidateCmd < Object" "refm/api/src/tk/entry/TkEntry__ValidateCmd")
(find-rurima "== Instance Methods" "= class Tkentry::ValidateCmd < Object" "refm/api/src/tk/entry/TkEntry__ValidateCmd")
(find-rurima "--- to_eval" "== Instance Methods" "= class Tkentry::ValidateCmd < Object" "refm/api/src/tk/entry/TkEntry__ValidateCmd")
(find-rurima "= class TkEntry < TkLabel" "refm/api/src/tk/entry/TkEntry")
(find-rurima "== Constants" "= class TkEntry < TkLabel" "refm/api/src/tk/entry/TkEntry")
(find-rurima "--- TkCommandNames" "== Constants" "= class TkEntry < TkLabel" "refm/api/src/tk/entry/TkEntry")
(find-rurima "--- WidgetClassName" "== Constants" "= class TkEntry < TkLabel" "refm/api/src/tk/entry/TkEntry")
(find-rurima "--- WidgetClassNames" "== Constants" "= class TkEntry < TkLabel" "refm/api/src/tk/entry/TkEntry")
(find-rurima "== Class Methods" "= class TkEntry < TkLabel" "refm/api/src/tk/entry/TkEntry")
(find-rurima "--- new(cmd = Proc.new, args = nil)" "== Class Methods" "= class TkEntry < TkLabel" "refm/api/src/tk/entry/TkEntry")
(find-rurima "== Instance Methods" "= class TkEntry < TkLabel" "refm/api/src/tk/entry/TkEntry")
(find-rurima "--- bbox(index)" "== Instance Methods" "= class TkEntry < TkLabel" "refm/api/src/tk/entry/TkEntry")
(find-rurima "--- cursor" "== Instance Methods" "= class TkEntry < TkLabel" "refm/api/src/tk/entry/TkEntry")
(find-rurima "--- icursor" "== Instance Methods" "= class TkEntry < TkLabel" "refm/api/src/tk/entry/TkEntry")
(find-rurima "--- cursor=(index)" "== Instance Methods" "= class TkEntry < TkLabel" "refm/api/src/tk/entry/TkEntry")
(find-rurima "--- icursor=(index)" "== Instance Methods" "= class TkEntry < TkLabel" "refm/api/src/tk/entry/TkEntry")
(find-rurima "--- index(idx)" "== Instance Methods" "= class TkEntry < TkLabel" "refm/api/src/tk/entry/TkEntry")
(find-rurima "--- insert(pos, text)" "== Instance Methods" "= class TkEntry < TkLabel" "refm/api/src/tk/entry/TkEntry")
(find-rurima "--- delete(first, last = Tk::None)" "== Instance Methods" "= class TkEntry < TkLabel" "refm/api/src/tk/entry/TkEntry")
(find-rurima "--- mark(pos)" "== Instance Methods" "= class TkEntry < TkLabel" "refm/api/src/tk/entry/TkEntry")
(find-rurima "--- dragto(pos)" "== Instance Methods" "= class TkEntry < TkLabel" "refm/api/src/tk/entry/TkEntry")
(find-rurima "--- selection_adjust(index)" "== Instance Methods" "= class TkEntry < TkLabel" "refm/api/src/tk/entry/TkEntry")
(find-rurima "--- selection_clear" "== Instance Methods" "= class TkEntry < TkLabel" "refm/api/src/tk/entry/TkEntry")
(find-rurima "--- selection_from(index)" "== Instance Methods" "= class TkEntry < TkLabel" "refm/api/src/tk/entry/TkEntry")
(find-rurima "--- selection_present" "== Instance Methods" "= class TkEntry < TkLabel" "refm/api/src/tk/entry/TkEntry")
(find-rurima "--- selection_range(s, e)" "== Instance Methods" "= class TkEntry < TkLabel" "refm/api/src/tk/entry/TkEntry")
(find-rurima "--- selection_to(index)" "== Instance Methods" "= class TkEntry < TkLabel" "refm/api/src/tk/entry/TkEntry")
(find-rurima "--- invoke_validate" "== Instance Methods" "= class TkEntry < TkLabel" "refm/api/src/tk/entry/TkEntry")
(find-rurima "--- validate(mode = nil)" "== Instance Methods" "= class TkEntry < TkLabel" "refm/api/src/tk/entry/TkEntry")
(find-rurima "--- value" "== Instance Methods" "= class TkEntry < TkLabel" "refm/api/src/tk/entry/TkEntry")
(find-rurima "--- get" "== Instance Methods" "= class TkEntry < TkLabel" "refm/api/src/tk/entry/TkEntry")
(find-rurima "--- value=(val)" "== Instance Methods" "= class TkEntry < TkLabel" "refm/api/src/tk/entry/TkEntry")
(find-rurima "--- set(val)" "== Instance Methods" "= class TkEntry < TkLabel" "refm/api/src/tk/entry/TkEntry")
(find-rurima "--- [](*args)" "== Instance Methods" "= class TkEntry < TkLabel" "refm/api/src/tk/entry/TkEntry")
(find-rurima "--- []=(*args)" "== Instance Methods" "= class TkEntry < TkLabel" "refm/api/src/tk/entry/TkEntry")
(find-rurima "--- configure(slot, value = Tk::None)" "== Instance Methods" "= class TkEntry < TkLabel" "refm/api/src/tk/entry/TkEntry")
(find-rurima "--- create_self(keys)" "== Instance Methods" "= class TkEntry < TkLabel" "refm/api/src/tk/entry/TkEntry")
(find-rurima "--- invalidcommand(cmd = Proc.new, args = nil)" "== Instance Methods" "= class TkEntry < TkLabel" "refm/api/src/tk/entry/TkEntry")
(find-rurima "--- invcmd(cmd = Proc.new, args = nil)" "== Instance Methods" "= class TkEntry < TkLabel" "refm/api/src/tk/entry/TkEntry")
(find-rurima "--- validatecommand(cmd = Proc.new, args = nil)" "== Instance Methods" "= class TkEntry < TkLabel" "refm/api/src/tk/entry/TkEntry")
(find-rurima "--- vcmd(cmd = Proc.new, args = nil)" "== Instance Methods" "= class TkEntry < TkLabel" "refm/api/src/tk/entry/TkEntry")
(find-rurima "= module TkEntry::ValidateCmd::Action" "refm/api/src/tk/entry/TkEntry__ValidateCmd__Action")
(find-rurima "== Constants" "= module TkEntry::ValidateCmd::Action" "refm/api/src/tk/entry/TkEntry__ValidateCmd__Action")
(find-rurima "--- Insert" "== Constants" "= module TkEntry::ValidateCmd::Action" "refm/api/src/tk/entry/TkEntry__ValidateCmd__Action")
(find-rurima "--- Delete" "== Constants" "= module TkEntry::ValidateCmd::Action" "refm/api/src/tk/entry/TkEntry__ValidateCmd__Action")
(find-rurima "--- Others" "== Constants" "= module TkEntry::ValidateCmd::Action" "refm/api/src/tk/entry/TkEntry__ValidateCmd__Action")
(find-rurima "--- Focus" "== Constants" "= module TkEntry::ValidateCmd::Action" "refm/api/src/tk/entry/TkEntry__ValidateCmd__Action")
(find-rurima "--- Forced" "== Constants" "= module TkEntry::ValidateCmd::Action" "refm/api/src/tk/entry/TkEntry__ValidateCmd__Action")
(find-rurima "--- Textvariable" "== Constants" "= module TkEntry::ValidateCmd::Action" "refm/api/src/tk/entry/TkEntry__ValidateCmd__Action")
(find-rurima "--- TextVariable" "== Constants" "= module TkEntry::ValidateCmd::Action" "refm/api/src/tk/entry/TkEntry__ValidateCmd__Action")
(find-rurima "= module TkMenuSpec" "refm/api/src/tk/menuspec.rd")
(find-rurima "== Private Instance Methods" "= module TkMenuSpec" "refm/api/src/tk/menuspec.rd")
(find-rurima "--- _create_menu(parent, menu_info, menu_name = nil, tearoff = false, default_opts = nil)" "== Private Instance Methods" "= module TkMenuSpec" "refm/api/src/tk/menuspec.rd")
(find-rurima "--- _use_menubar?(parent)" "== Private Instance Methods" "= module TkMenuSpec" "refm/api/src/tk/menuspec.rd")
(find-rurima "--- _create_menu_for_menubar(parent)" "== Private Instance Methods" "= module TkMenuSpec" "refm/api/src/tk/menuspec.rd")
(find-rurima "--- _create_menubutton(parent, menu_info, tearoff=false, default_opts = nil)" "== Private Instance Methods" "= module TkMenuSpec" "refm/api/src/tk/menuspec.rd")
(find-rurima "--- _get_cascade_menus(menu)" "== Private Instance Methods" "= module TkMenuSpec" "refm/api/src/tk/menuspec.rd")
(find-rurima "= reopen Tk" "refm/api/src/tk/autoload.rd")
(find-rurima "== Class Methods" "= reopen Tk" "refm/api/src/tk/autoload.rd")
(find-rurima "--- Tk.EncodedString(str, enc = nil)" "== Class Methods" "= reopen Tk" "refm/api/src/tk/autoload.rd")
(find-rurima "--- Tk.BinaryString(str)" "== Class Methods" "= reopen Tk" "refm/api/src/tk/autoload.rd")
(find-rurima "--- Tk.UTF8_String(str)" "== Class Methods" "= reopen Tk" "refm/api/src/tk/autoload.rd")
(find-rurima "= reopen Kernel" "refm/api/src/tk/autoload.rd")
(find-rurima "== Private Instance Methods" "= reopen Kernel" "refm/api/src/tk/autoload.rd")
(find-rurima "--- TkGrid(*args)" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/tk/autoload.rd")
(find-rurima "--- TkPack(*args)" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/tk/autoload.rd")
(find-rurima "--- TkPlace(*args)" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/tk/autoload.rd")
(find-rurima "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "== Constants" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- TkCommandNames" "== Constants" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "== Class Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- appname(win)" "== Class Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- atom(name, win = nil)" "== Class Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- atomname(id, win = nil)" "== Class Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- cells(win)" "== Class Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- children(win)" "== Class Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- classname(win)" "== Class Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- colormapfull(win)" "== Class Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- containing(root_x, root_y, win = nil)" "== Class Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- depth(win)" "== Class Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- exist?(win)" "== Class Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- fpixels(win, dist)" "== Class Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- geometry(win)" "== Class Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- height(win)" "== Class Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- id(win)" "== Class Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- interps(win = nil)" "== Class Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- manager(win)" "== Class Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- mapped?(win)" "== Class Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- parent(win)" "== Class Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- pixels(win. dist)" "== Class Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- pointerx(win)" "== Class Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- pointerxy(win)" "== Class Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- pointery(win)" "== Class Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- reqheight(win)" "== Class Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- reqwidth(win)" "== Class Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- rgb(win. color)" "== Class Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- rootx(win)" "== Class Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- rooty(win)" "== Class Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- screen(win)" "== Class Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- screencells(win)" "== Class Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- screendepth(win)" "== Class Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- screenheight(win)" "== Class Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- screenmmheight(win)" "== Class Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- screenmmwidth(win)" "== Class Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- screenvisual(win)" "== Class Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- screenwidth(win)" "== Class Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- server(win)" "== Class Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- toplevel(win)" "== Class Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- viewable(win)" "== Class Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- visual(win)" "== Class Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- visualid(win)" "== Class Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- visualsavailable(win, includeids = false)" "== Class Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- vrootheight(win)" "== Class Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- vrootwidth(win)" "== Class Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- vrootx(win)" "== Class Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- vrooty(win)" "== Class Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- widget(win)" "== Class Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- width(win)" "== Class Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- x(win)" "== Class Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- y(win)" "== Class Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "== Instance Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- winfo_appname" "== Instance Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- winfo_atom(name)" "== Instance Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- winfo_atomname(id)" "== Instance Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- winfo_cells" "== Instance Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- winfo_children" "== Instance Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- winfo_class" "== Instance Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- winfo_classname" "== Instance Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- winfo_colormapfull" "== Instance Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- winfo_containing(x, y)" "== Instance Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- winfo_depth" "== Instance Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- winfo_exist?" "== Instance Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- winfo_fpixels(dist)" "== Instance Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- winfo_geometry" "== Instance Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- winfo_height" "== Instance Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- winfo_id" "== Instance Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- winfo_interps" "== Instance Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- winfo_manager" "== Instance Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- winfo_mapped?" "== Instance Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- winfo_parent" "== Instance Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- winfo_pixels(dist)" "== Instance Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- winfo_pointerx" "== Instance Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- winfo_pointerxy" "== Instance Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- winfo_pointery" "== Instance Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- winfo_reqheight" "== Instance Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- winfo_reqwidth" "== Instance Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- winfo_rgb(color)" "== Instance Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- winfo_rootx" "== Instance Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- winfo_rooty" "== Instance Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- winfo_screen" "== Instance Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- winfo_screencells" "== Instance Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- winfo_screendepth" "== Instance Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- winfo_screenheight" "== Instance Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- winfo_screenmmheight" "== Instance Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- winfo_screenmmwidth" "== Instance Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- winfo_screenvisual" "== Instance Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- winfo_screenwidth" "== Instance Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- winfo_server" "== Instance Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- winfo_toplevel" "== Instance Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- winfo_viewable" "== Instance Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- winfo_visual" "== Instance Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- winfo_visualid" "== Instance Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- winfo_visualsavailable(includeids = false)" "== Instance Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- winfo_vrootheight" "== Instance Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- winfo_vrootwidth" "== Instance Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- winfo_vrootx" "== Instance Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- winfo_vrooty" "== Instance Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- winfo_widget(id)" "== Instance Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- winfo_width" "== Instance Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- winfo_x" "== Instance Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "--- winfo_y" "== Instance Methods" "= module TkWinfo" "refm/api/src/tk/winfo.rd")
(find-rurima "= class TkPackage" "refm/api/src/tk/package.rd")
(find-rurima "== Instance Methods" "= class TkPackage" "refm/api/src/tk/package.rd")
(find-rurima "--- add_path(path)" "== Instance Methods" "= class TkPackage" "refm/api/src/tk/package.rd")
(find-rurima "--- forget(package)" "== Instance Methods" "= class TkPackage" "refm/api/src/tk/package.rd")
(find-rurima "--- if_needed(pkg, ver, *arg) { .... }" "== Instance Methods" "= class TkPackage" "refm/api/src/tk/package.rd")
(find-rurima "--- names" "== Instance Methods" "= class TkPackage" "refm/api/src/tk/package.rd")
(find-rurima "--- provide(package, version=nil)" "== Instance Methods" "= class TkPackage" "refm/api/src/tk/package.rd")
(find-rurima "--- present(package, version=None)" "== Instance Methods" "= class TkPackage" "refm/api/src/tk/package.rd")
(find-rurima "--- present_exact(package, version)" "== Instance Methods" "= class TkPackage" "refm/api/src/tk/package.rd")
(find-rurima "--- require(package, version=None)" "== Instance Methods" "= class TkPackage" "refm/api/src/tk/package.rd")
(find-rurima "--- require_exact(package, version)" "== Instance Methods" "= class TkPackage" "refm/api/src/tk/package.rd")
(find-rurima "--- unknown_proc(*arg) { .... }" "== Instance Methods" "= class TkPackage" "refm/api/src/tk/package.rd")
(find-rurima "--- versions(package)" "== Instance Methods" "= class TkPackage" "refm/api/src/tk/package.rd")
(find-rurima "--- vcompare(version1, version2)" "== Instance Methods" "= class TkPackage" "refm/api/src/tk/package.rd")
(find-rurima "--- vsatisfies(version1, version2)" "== Instance Methods" "= class TkPackage" "refm/api/src/tk/package.rd")
(find-rurima "== Constants" "= class TkPackage" "refm/api/src/tk/package.rd")
(find-rurima "--- TkCommandNames" "== Constants" "= class TkPackage" "refm/api/src/tk/package.rd")
(find-rurima "= class TkObject" "refm/api/src/tk/TkObject")
(find-rurima "== Instance Methods" "= class TkObject" "refm/api/src/tk/TkObject")
(find-rurima "--- []" "== Instance Methods" "= class TkObject" "refm/api/src/tk/TkObject")
(find-rurima "--- []=(id, val)" "== Instance Methods" "= class TkObject" "refm/api/src/tk/TkObject")
(find-rurima "--- cget" "== Instance Methods" "= class TkObject" "refm/api/src/tk/TkObject")
(find-rurima "--- configinfo" "== Instance Methods" "= class TkObject" "refm/api/src/tk/TkObject")
(find-rurima "--- configure" "== Instance Methods" "= class TkObject" "refm/api/src/tk/TkObject")
(find-rurima "--- configure_cmd" "== Instance Methods" "= class TkObject" "refm/api/src/tk/TkObject")
(find-rurima "--- path" "== Instance Methods" "= class TkObject" "refm/api/src/tk/TkObject")
(find-rurima "--- destroy" "== Instance Methods" "= class TkObject" "refm/api/src/tk/TkObject")
(find-rurima "--- epath" "== Instance Methods" "= class TkObject" "refm/api/src/tk/TkObject")
(find-rurima "--- event_generate(context, keys = nil)" "== Instance Methods" "= class TkObject" "refm/api/src/tk/TkObject")
(find-rurima "--- method_missing(id, *args)" "== Instance Methods" "= class TkObject" "refm/api/src/tk/TkObject")
(find-rurima "--- tk_send(cmd, *rest)" "== Instance Methods" "= class TkObject" "refm/api/src/tk/TkObject")
(find-rurima "--- tk_send_to_list(cmd, *rest)" "== Instance Methods" "= class TkObject" "refm/api/src/tk/TkObject")
(find-rurima "--- tk_send_to_list_with_enc(cmd, *rest)" "== Instance Methods" "= class TkObject" "refm/api/src/tk/TkObject")
(find-rurima "--- tk_send_to_list_without_enc(cmd, *rest)" "== Instance Methods" "= class TkObject" "refm/api/src/tk/TkObject")
(find-rurima "--- tk_send_to_simplelist(cmd, *rest)" "== Instance Methods" "= class TkObject" "refm/api/src/tk/TkObject")
(find-rurima "--- tk_send_to_simplelist_with_enc(cmd, *rest)" "== Instance Methods" "= class TkObject" "refm/api/src/tk/TkObject")
(find-rurima "--- tk_send_to_simplelist_without_enc(cmd, *rest)" "== Instance Methods" "= class TkObject" "refm/api/src/tk/TkObject")
(find-rurima "--- tk_send_with_enc" "== Instance Methods" "= class TkObject" "refm/api/src/tk/TkObject")
(find-rurima "--- tk_send_without_enc" "== Instance Methods" "= class TkObject" "refm/api/src/tk/TkObject")
(find-rurima "--- to_eval" "== Instance Methods" "= class TkObject" "refm/api/src/tk/TkObject")
(find-rurima "= class TkNamedVirtualEvent" "refm/api/src/tk/virtevent.rd")
(find-rurima "= module TkConsole" "refm/api/src/tk/console/TkConsole")
(find-rurima "== Class Methods" "= module TkConsole" "refm/api/src/tk/console/TkConsole")
(find-rurima "--- create" "== Class Methods" "= module TkConsole" "refm/api/src/tk/console/TkConsole")
(find-rurima "--- title(str = Tk::None)" "== Class Methods" "= module TkConsole" "refm/api/src/tk/console/TkConsole")
(find-rurima "--- hide" "== Class Methods" "= module TkConsole" "refm/api/src/tk/console/TkConsole")
(find-rurima "--- show" "== Class Methods" "= module TkConsole" "refm/api/src/tk/console/TkConsole")
(find-rurima "--- eval(tcl_script)" "== Class Methods" "= module TkConsole" "refm/api/src/tk/console/TkConsole")
(find-rurima "--- maininterp_eval(tcl_script)" "== Class Methods" "= module TkConsole" "refm/api/src/tk/console/TkConsole")
(find-rurima "--- maininterp_record(tcl_script)" "== Class Methods" "= module TkConsole" "refm/api/src/tk/console/TkConsole")
(find-rurima "== Constants" "= module TkConsole" "refm/api/src/tk/console/TkConsole")
(find-rurima "--- TkCommandNames" "== Constants" "= module TkConsole" "refm/api/src/tk/console/TkConsole")
(find-rurima "= module TkTreatItemFont" "refm/api/src/tk/itemfont/TkTreatItemFont")
(find-rurima "== Instance Methods" "= module TkTreatItemFont" "refm/api/src/tk/itemfont/TkTreatItemFont")
(find-rurima "--- asciitagfont_configure(tagOrId, ltn, keys = nil)" "== Instance Methods" "= module TkTreatItemFont" "refm/api/src/tk/itemfont/TkTreatItemFont")
(find-rurima "--- asciitagfont_copy(tagOrId, win, wintag = nil, winkey = nil, targetkey = nil)" "== Instance Methods" "= module TkTreatItemFont" "refm/api/src/tk/itemfont/TkTreatItemFont")
(find-rurima "--- kanjifont_copy(tagOrId, win, wintag = nil, winkey = nil, targetkey = nil)" "== Instance Methods" "= module TkTreatItemFont" "refm/api/src/tk/itemfont/TkTreatItemFont")
(find-rurima "--- kanjitagfont_configure(tagOrId, knj, keys = nil)" "== Instance Methods" "= module TkTreatItemFont" "refm/api/src/tk/itemfont/TkTreatItemFont")
(find-rurima "--- latintagfont_configure(tagOrId, ltn, keys = nil)" "== Instance Methods" "= module TkTreatItemFont" "refm/api/src/tk/itemfont/TkTreatItemFont")
(find-rurima "--- latintagfont_copy(tagOrId, win, wintag = nil, winkey = nil, targetkey = nil)" "== Instance Methods" "= module TkTreatItemFont" "refm/api/src/tk/itemfont/TkTreatItemFont")
(find-rurima "--- tagfont_configinfo(tagOrId, key = nil)" "== Instance Methods" "= module TkTreatItemFont" "refm/api/src/tk/itemfont/TkTreatItemFont")
(find-rurima "--- tagfont_configure(tagOrId, slot)" "== Instance Methods" "= module TkTreatItemFont" "refm/api/src/tk/itemfont/TkTreatItemFont")
(find-rurima "--- tagfont_copy(tagOrId, win, wintag = nil, winkey = nil, targetkey = nil)" "== Instance Methods" "= module TkTreatItemFont" "refm/api/src/tk/itemfont/TkTreatItemFont")
(find-rurima "--- tagfontobj(tagOrId, key = nil)" "== Instance Methods" "= module TkTreatItemFont" "refm/api/src/tk/itemfont/TkTreatItemFont")
(find-rurima "= module TkItemFontOptkeys" "refm/api/src/tk/itemfont/TkItemFontOptkeys")
(find-rurima "=== 使い方:" "refm/api/src/un.rd")
(find-rurima "= reopen Kernel" "refm/api/src/un.rd")
(find-rurima "== Private Instance Methods" "= reopen Kernel" "refm/api/src/un.rd")
(find-rurima "--- chmod -> ()" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/un.rd")
(find-rurima "--- cp -> ()" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/un.rd")
(find-rurima "--- help -> ()" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/un.rd")
(find-rurima "--- install -> ()" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/un.rd")
(find-rurima "--- ln -> ()" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/un.rd")
(find-rurima "--- mkdir -> ()" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/un.rd")
(find-rurima "--- mv -> ()" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/un.rd")
(find-rurima "--- rm -> ()" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/un.rd")
(find-rurima "--- rmdir -> ()" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/un.rd")
(find-rurima "--- touch -> ()" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/un.rd")
(find-rurima "--- wait_writable -> ()" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/un.rd")
(find-rurima "--- mkmf -> ()" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/un.rd")
(find-rurima "--- httpd -> ()" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/un.rd")
(find-rurima "= class ThreadsWait < Object" "refm/api/src/thwait.rd")
(find-rurima "== Class Methods" "= class ThreadsWait < Object" "refm/api/src/thwait.rd")
(find-rurima "--- all_waits(*threads) -> ()" "== Class Methods" "= class ThreadsWait < Object" "refm/api/src/thwait.rd")
(find-rurima "--- all_waits(*threads){|thread| ...} -> ()" "== Class Methods" "= class ThreadsWait < Object" "refm/api/src/thwait.rd")
(find-rurima "--- new(*threads) -> ThreadsWait" "== Class Methods" "= class ThreadsWait < Object" "refm/api/src/thwait.rd")
(find-rurima "== Instance Methods" "= class ThreadsWait < Object" "refm/api/src/thwait.rd")
(find-rurima "--- threads -> Array" "== Instance Methods" "= class ThreadsWait < Object" "refm/api/src/thwait.rd")
(find-rurima "--- empty? -> bool" "== Instance Methods" "= class ThreadsWait < Object" "refm/api/src/thwait.rd")
(find-rurima "--- finished? -> bool" "== Instance Methods" "= class ThreadsWait < Object" "refm/api/src/thwait.rd")
(find-rurima "--- join(*threads) -> ()" "== Instance Methods" "= class ThreadsWait < Object" "refm/api/src/thwait.rd")
(find-rurima "--- join_nowait(*threads) -> ()" "== Instance Methods" "= class ThreadsWait < Object" "refm/api/src/thwait.rd")
(find-rurima "--- next_wait(nonblock = nil) -> Thread" "== Instance Methods" "= class ThreadsWait < Object" "refm/api/src/thwait.rd")
(find-rurima "--- all_waits -> ()" "== Instance Methods" "= class ThreadsWait < Object" "refm/api/src/thwait.rd")
(find-rurima "= class ThreadsWait::ErrNoFinishedThread < StandardError" "refm/api/src/thwait.rd")
(find-rurima "= class ThreadsWait::ErrNoWaitingThread < StandardError" "refm/api/src/thwait.rd")
(find-rurima "= reopen Thread" "refm/api/src/thread.rd")
(find-rurima "== Class Methods" "= reopen Thread" "refm/api/src/thread.rd")
(find-rurima "--- exclusive { ... } -> object" "== Class Methods" "= reopen Thread" "refm/api/src/thread.rd")
(find-rurima "= module REXML::StreamListener" "refm/api/src/rexml/streamlistener.rd")
(find-rurima "== Instance Methods" "= module REXML::StreamListener" "refm/api/src/rexml/streamlistener.rd")
(find-rurima "--- tag_start(name, attrs)" "== Instance Methods" "= module REXML::StreamListener" "refm/api/src/rexml/streamlistener.rd")
(find-rurima "--- tag_end(name)" "== Instance Methods" "= module REXML::StreamListener" "refm/api/src/rexml/streamlistener.rd")
(find-rurima "--- text(text)" "== Instance Methods" "= module REXML::StreamListener" "refm/api/src/rexml/streamlistener.rd")
(find-rurima "--- instruction(name, instruction)" "== Instance Methods" "= module REXML::StreamListener" "refm/api/src/rexml/streamlistener.rd")
(find-rurima "--- comment(comment)" "== Instance Methods" "= module REXML::StreamListener" "refm/api/src/rexml/streamlistener.rd")
(find-rurima "--- doctype(name, pub_sys, long_name, uri)" "== Instance Methods" "= module REXML::StreamListener" "refm/api/src/rexml/streamlistener.rd")
(find-rurima "--- doctype_end" "== Instance Methods" "= module REXML::StreamListener" "refm/api/src/rexml/streamlistener.rd")
(find-rurima "--- attlistdecl(element_name, attributes, raw_content)" "== Instance Methods" "= module REXML::StreamListener" "refm/api/src/rexml/streamlistener.rd")
(find-rurima "--- elementdecl(content)" "== Instance Methods" "= module REXML::StreamListener" "refm/api/src/rexml/streamlistener.rd")
(find-rurima "--- entitydecl(content)" "== Instance Methods" "= module REXML::StreamListener" "refm/api/src/rexml/streamlistener.rd")
(find-rurima "--- notationdecl(content)" "== Instance Methods" "= module REXML::StreamListener" "refm/api/src/rexml/streamlistener.rd")
(find-rurima "--- entity(content)" "== Instance Methods" "= module REXML::StreamListener" "refm/api/src/rexml/streamlistener.rd")
(find-rurima "--- cdata(content)" "== Instance Methods" "= module REXML::StreamListener" "refm/api/src/rexml/streamlistener.rd")
(find-rurima "--- xmldecl(version, encoding, standalone)" "== Instance Methods" "= module REXML::StreamListener" "refm/api/src/rexml/streamlistener.rd")
(find-rurima "= class REXML::QuickPath" "refm/api/src/rexml/quickpath.rd")
(find-rurima "== Class Methods" "= class REXML::QuickPath" "refm/api/src/rexml/quickpath.rd")
(find-rurima "--- first(element, path, namespaces = EMPTY_HASH)" "== Class Methods" "= class REXML::QuickPath" "refm/api/src/rexml/quickpath.rd")
(find-rurima "--- each(element, path, namespaces = EMPTY_HASH) {|element| ... }" "== Class Methods" "= class REXML::QuickPath" "refm/api/src/rexml/quickpath.rd")
(find-rurima "--- match(element, path, namespaces = EMPTY_HASH)" "== Class Methods" "= class REXML::QuickPath" "refm/api/src/rexml/quickpath.rd")
(find-rurima "--- filter(elements, path)" "== Class Methods" "= class REXML::QuickPath" "refm/api/src/rexml/quickpath.rd")
(find-rurima "--- axe(elements, axe_name, rest)" "== Class Methods" "= class REXML::QuickPath" "refm/api/src/rexml/quickpath.rd")
(find-rurima "--- predicate(elements, path)" "== Class Methods" "= class REXML::QuickPath" "refm/api/src/rexml/quickpath.rd")
(find-rurima "--- attribute(name)" "== Class Methods" "= class REXML::QuickPath" "refm/api/src/rexml/quickpath.rd")
(find-rurima "--- name" "== Class Methods" "= class REXML::QuickPath" "refm/api/src/rexml/quickpath.rd")
(find-rurima "--- method_missing(id, *args)" "== Class Methods" "= class REXML::QuickPath" "refm/api/src/rexml/quickpath.rd")
(find-rurima "--- function(elements, fname, rest)" "== Class Methods" "= class REXML::QuickPath" "refm/api/src/rexml/quickpath.rd")
(find-rurima "--- parse_args(element, string)" "== Class Methods" "= class REXML::QuickPath" "refm/api/src/rexml/quickpath.rd")
(find-rurima "== Constants" "= class REXML::QuickPath" "refm/api/src/rexml/quickpath.rd")
(find-rurima "--- EMPTY_HASH" "== Constants" "= class REXML::QuickPath" "refm/api/src/rexml/quickpath.rd")
(find-rurima "= module REXML" "refm/api/src/rexml/rexml.rd")
(find-rurima "== Constants" "= module REXML" "refm/api/src/rexml/rexml.rd")
(find-rurima "--- COPYRIGHT" "== Constants" "= module REXML" "refm/api/src/rexml/rexml.rd")
(find-rurima "--- Copyright" "== Constants" "= module REXML" "refm/api/src/rexml/rexml.rd")
(find-rurima "--- DATE" "== Constants" "= module REXML" "refm/api/src/rexml/rexml.rd")
(find-rurima "--- Date" "== Constants" "= module REXML" "refm/api/src/rexml/rexml.rd")
(find-rurima "--- VERSION" "== Constants" "= module REXML" "refm/api/src/rexml/rexml.rd")
(find-rurima "--- Version" "== Constants" "= module REXML" "refm/api/src/rexml/rexml.rd")
(find-rurima "= class REXML::Attribute" "refm/api/src/rexml/attribute.rd")
(find-rurima "== Class Methods" "= class REXML::Attribute" "refm/api/src/rexml/attribute.rd")
(find-rurima "--- new(first, second = nil, parrent = nil)" "== Class Methods" "= class REXML::Attribute" "refm/api/src/rexml/attribute.rd")
(find-rurima "== Instance Methods" "= class REXML::Attribute" "refm/api/src/rexml/attribute.rd")
(find-rurima "--- element" "== Instance Methods" "= class REXML::Attribute" "refm/api/src/rexml/attribute.rd")
(find-rurima "--- normalized=(value)" "== Instance Methods" "= class REXML::Attribute" "refm/api/src/rexml/attribute.rd")
(find-rurima "--- prefix" "== Instance Methods" "= class REXML::Attribute" "refm/api/src/rexml/attribute.rd")
(find-rurima "--- namespace(arg = nil)" "== Instance Methods" "= class REXML::Attribute" "refm/api/src/rexml/attribute.rd")
(find-rurima "--- ==(other)" "== Instance Methods" "= class REXML::Attribute" "refm/api/src/rexml/attribute.rd")
(find-rurima "--- hash" "== Instance Methods" "= class REXML::Attribute" "refm/api/src/rexml/attribute.rd")
(find-rurima "--- to_string" "== Instance Methods" "= class REXML::Attribute" "refm/api/src/rexml/attribute.rd")
(find-rurima "--- to_s" "== Instance Methods" "= class REXML::Attribute" "refm/api/src/rexml/attribute.rd")
(find-rurima "--- value" "== Instance Methods" "= class REXML::Attribute" "refm/api/src/rexml/attribute.rd")
(find-rurima "--- clone" "== Instance Methods" "= class REXML::Attribute" "refm/api/src/rexml/attribute.rd")
(find-rurima "--- element=(element)" "== Instance Methods" "= class REXML::Attribute" "refm/api/src/rexml/attribute.rd")
(find-rurima "--- remove" "== Instance Methods" "= class REXML::Attribute" "refm/api/src/rexml/attribute.rd")
(find-rurima "--- write(output, indent = -1)" "== Instance Methods" "= class REXML::Attribute" "refm/api/src/rexml/attribute.rd")
(find-rurima "--- node_type" "== Instance Methods" "= class REXML::Attribute" "refm/api/src/rexml/attribute.rd")
(find-rurima "--- inspect" "== Instance Methods" "= class REXML::Attribute" "refm/api/src/rexml/attribute.rd")
(find-rurima "--- xpath" "== Instance Methods" "= class REXML::Attribute" "refm/api/src/rexml/attribute.rd")
(find-rurima "== Constants" "= class REXML::Attribute" "refm/api/src/rexml/attribute.rd")
(find-rurima "--- PATTERN" "== Constants" "= class REXML::Attribute" "refm/api/src/rexml/attribute.rd")
(find-rurima "= class REXML::Child < Object" "refm/api/src/rexml/child.rd")
(find-rurima "== Class Methods" "= class REXML::Child < Object" "refm/api/src/rexml/child.rd")
(find-rurima "--- new(parent = nil)" "== Class Methods" "= class REXML::Child < Object" "refm/api/src/rexml/child.rd")
(find-rurima "== Instance Methods" "= class REXML::Child < Object" "refm/api/src/rexml/child.rd")
(find-rurima "--- parent" "== Instance Methods" "= class REXML::Child < Object" "refm/api/src/rexml/child.rd")
(find-rurima "--- replace_with(child)" "== Instance Methods" "= class REXML::Child < Object" "refm/api/src/rexml/child.rd")
(find-rurima "--- remove" "== Instance Methods" "= class REXML::Child < Object" "refm/api/src/rexml/child.rd")
(find-rurima "--- parent=(other)" "== Instance Methods" "= class REXML::Child < Object" "refm/api/src/rexml/child.rd")
(find-rurima "--- next_sibling" "== Instance Methods" "= class REXML::Child < Object" "refm/api/src/rexml/child.rd")
(find-rurima "--- previous_sibling" "== Instance Methods" "= class REXML::Child < Object" "refm/api/src/rexml/child.rd")
(find-rurima "--- next_sibling=(other)" "== Instance Methods" "= class REXML::Child < Object" "refm/api/src/rexml/child.rd")
(find-rurima "--- previous_sibling=(other)" "== Instance Methods" "= class REXML::Child < Object" "refm/api/src/rexml/child.rd")
(find-rurima "--- document" "== Instance Methods" "= class REXML::Child < Object" "refm/api/src/rexml/child.rd")
(find-rurima "--- bytes" "== Instance Methods" "= class REXML::Child < Object" "refm/api/src/rexml/child.rd")
(find-rurima "= module REXML::SAX2Listener" "refm/api/src/rexml/sax2listener.rd")
(find-rurima "== Instance Methods" "= module REXML::SAX2Listener" "refm/api/src/rexml/sax2listener.rd")
(find-rurima "--- start_document" "== Instance Methods" "= module REXML::SAX2Listener" "refm/api/src/rexml/sax2listener.rd")
(find-rurima "--- end_document" "== Instance Methods" "= module REXML::SAX2Listener" "refm/api/src/rexml/sax2listener.rd")
(find-rurima "--- start_prefix_mapping(prefix, uri)" "== Instance Methods" "= module REXML::SAX2Listener" "refm/api/src/rexml/sax2listener.rd")
(find-rurima "--- end_prefix_mapping(prefix)" "== Instance Methods" "= module REXML::SAX2Listener" "refm/api/src/rexml/sax2listener.rd")
(find-rurima "--- start_element(uri, localname, qname, attributes)" "== Instance Methods" "= module REXML::SAX2Listener" "refm/api/src/rexml/sax2listener.rd")
(find-rurima "--- end_element(uri, localname, qname)" "== Instance Methods" "= module REXML::SAX2Listener" "refm/api/src/rexml/sax2listener.rd")
(find-rurima "--- characters(text)" "== Instance Methods" "= module REXML::SAX2Listener" "refm/api/src/rexml/sax2listener.rd")
(find-rurima "--- processing_instruction(target, data)" "== Instance Methods" "= module REXML::SAX2Listener" "refm/api/src/rexml/sax2listener.rd")
(find-rurima "--- doctype(name, pub_sys, long_name, uri)" "== Instance Methods" "= module REXML::SAX2Listener" "refm/api/src/rexml/sax2listener.rd")
(find-rurima "--- attlistdecl(element, pairs, contents)" "== Instance Methods" "= module REXML::SAX2Listener" "refm/api/src/rexml/sax2listener.rd")
(find-rurima "--- elementdecl(content)" "== Instance Methods" "= module REXML::SAX2Listener" "refm/api/src/rexml/sax2listener.rd")
(find-rurima "--- entitydecl(content)" "== Instance Methods" "= module REXML::SAX2Listener" "refm/api/src/rexml/sax2listener.rd")
(find-rurima "--- notationdecl(content)" "== Instance Methods" "= module REXML::SAX2Listener" "refm/api/src/rexml/sax2listener.rd")
(find-rurima "--- cdata(content)" "== Instance Methods" "= module REXML::SAX2Listener" "refm/api/src/rexml/sax2listener.rd")
(find-rurima "--- xmldecl(version, encoding, standalone)" "== Instance Methods" "= module REXML::SAX2Listener" "refm/api/src/rexml/sax2listener.rd")
(find-rurima "--- comment(comment)" "== Instance Methods" "= module REXML::SAX2Listener" "refm/api/src/rexml/sax2listener.rd")
(find-rurima "--- progress(position)" "== Instance Methods" "= module REXML::SAX2Listener" "refm/api/src/rexml/sax2listener.rd")
(find-rurima "= class REXML::Entity < REXML::Child" "refm/api/src/rexml/entity.rd")
(find-rurima "== Class Methods" "= class REXML::Entity < REXML::Child" "refm/api/src/rexml/entity.rd")
(find-rurima "--- new(stream, value = nil, parent = nil, reference = false)" "== Class Methods" "= class REXML::Entity < REXML::Child" "refm/api/src/rexml/entity.rd")
(find-rurima "--- matches?(string)" "== Class Methods" "= class REXML::Entity < REXML::Child" "refm/api/src/rexml/entity.rd")
(find-rurima "== Instance Methods" "= class REXML::Entity < REXML::Child" "refm/api/src/rexml/entity.rd")
(find-rurima "--- name" "== Instance Methods" "= class REXML::Entity < REXML::Child" "refm/api/src/rexml/entity.rd")
(find-rurima "--- external" "== Instance Methods" "= class REXML::Entity < REXML::Child" "refm/api/src/rexml/entity.rd")
(find-rurima "--- ref" "== Instance Methods" "= class REXML::Entity < REXML::Child" "refm/api/src/rexml/entity.rd")
(find-rurima "--- ndata" "== Instance Methods" "= class REXML::Entity < REXML::Child" "refm/api/src/rexml/entity.rd")
(find-rurima "--- pubid" "== Instance Methods" "= class REXML::Entity < REXML::Child" "refm/api/src/rexml/entity.rd")
(find-rurima "--- unnormalized" "== Instance Methods" "= class REXML::Entity < REXML::Child" "refm/api/src/rexml/entity.rd")
(find-rurima "--- normalized" "== Instance Methods" "= class REXML::Entity < REXML::Child" "refm/api/src/rexml/entity.rd")
(find-rurima "--- write(out, indent = -1)" "== Instance Methods" "= class REXML::Entity < REXML::Child" "refm/api/src/rexml/entity.rd")
(find-rurima "--- to_s" "== Instance Methods" "= class REXML::Entity < REXML::Child" "refm/api/src/rexml/entity.rd")
(find-rurima "--- value" "== Instance Methods" "= class REXML::Entity < REXML::Child" "refm/api/src/rexml/entity.rd")
(find-rurima "== Constants" "= class REXML::Entity < REXML::Child" "refm/api/src/rexml/entity.rd")
(find-rurima "--- PUBIDCHAR" "== Constants" "= class REXML::Entity < REXML::Child" "refm/api/src/rexml/entity.rd")
(find-rurima "--- SYSTEMLITERAL" "== Constants" "= class REXML::Entity < REXML::Child" "refm/api/src/rexml/entity.rd")
(find-rurima "--- PUBIDLITERAL" "== Constants" "= class REXML::Entity < REXML::Child" "refm/api/src/rexml/entity.rd")
(find-rurima "--- EXTERNALID" "== Constants" "= class REXML::Entity < REXML::Child" "refm/api/src/rexml/entity.rd")
(find-rurima "--- NDATADECL" "== Constants" "= class REXML::Entity < REXML::Child" "refm/api/src/rexml/entity.rd")
(find-rurima "--- PEREFERENCE" "== Constants" "= class REXML::Entity < REXML::Child" "refm/api/src/rexml/entity.rd")
(find-rurima "--- ENTITYVALUE" "== Constants" "= class REXML::Entity < REXML::Child" "refm/api/src/rexml/entity.rd")
(find-rurima "--- PEDEF" "== Constants" "= class REXML::Entity < REXML::Child" "refm/api/src/rexml/entity.rd")
(find-rurima "--- ENTITYDEF" "== Constants" "= class REXML::Entity < REXML::Child" "refm/api/src/rexml/entity.rd")
(find-rurima "--- PEDECL" "== Constants" "= class REXML::Entity < REXML::Child" "refm/api/src/rexml/entity.rd")
(find-rurima "--- GEDECL" "== Constants" "= class REXML::Entity < REXML::Child" "refm/api/src/rexml/entity.rd")
(find-rurima "--- ENTITYDECL" "== Constants" "= class REXML::Entity < REXML::Child" "refm/api/src/rexml/entity.rd")
(find-rurima "--- PEREFERENCE_RE" "== Constants" "= class REXML::Entity < REXML::Child" "refm/api/src/rexml/entity.rd")
(find-rurima "= module REXML::EntityConst" "refm/api/src/rexml/entity.rd")
(find-rurima "== Constants" "= module REXML::EntityConst" "refm/api/src/rexml/entity.rd")
(find-rurima "--- GT" "== Constants" "= module REXML::EntityConst" "refm/api/src/rexml/entity.rd")
(find-rurima "--- LT" "== Constants" "= module REXML::EntityConst" "refm/api/src/rexml/entity.rd")
(find-rurima "--- AMP" "== Constants" "= module REXML::EntityConst" "refm/api/src/rexml/entity.rd")
(find-rurima "--- QUOT" "== Constants" "= module REXML::EntityConst" "refm/api/src/rexml/entity.rd")
(find-rurima "--- APOS" "== Constants" "= module REXML::EntityConst" "refm/api/src/rexml/entity.rd")
(find-rurima "= class REXML::Output < Object" "refm/api/src/rexml/output.rd")
(find-rurima "== Class Methods" "= class REXML::Output < Object" "refm/api/src/rexml/output.rd")
(find-rurima "--- new(real_IO, encd = \"iso-8859-1\")" "== Class Methods" "= class REXML::Output < Object" "refm/api/src/rexml/output.rd")
(find-rurima "== Instance Methods" "= class REXML::Output < Object" "refm/api/src/rexml/output.rd")
(find-rurima "--- encoding" "== Instance Methods" "= class REXML::Output < Object" "refm/api/src/rexml/output.rd")
(find-rurima "--- <<(content)" "== Instance Methods" "= class REXML::Output < Object" "refm/api/src/rexml/output.rd")
(find-rurima "--- to_s" "== Instance Methods" "= class REXML::Output < Object" "refm/api/src/rexml/output.rd")
(find-rurima "= class REXML::DTD::NotationDecl < REXML::Child" "refm/api/src/rexml/dtd/notationdecl.rd")
(find-rurima "== Class Methods" "= class REXML::DTD::NotationDecl < REXML::Child" "refm/api/src/rexml/dtd/notationdecl.rd")
(find-rurima "--- new(src)" "== Class Methods" "= class REXML::DTD::NotationDecl < REXML::Child" "refm/api/src/rexml/dtd/notationdecl.rd")
(find-rurima "--- parse_source(source, listener)" "== Class Methods" "= class REXML::DTD::NotationDecl < REXML::Child" "refm/api/src/rexml/dtd/notationdecl.rd")
(find-rurima "== Instance Methods" "= class REXML::DTD::NotationDecl < REXML::Child" "refm/api/src/rexml/dtd/notationdecl.rd")
(find-rurima "--- to_s" "== Instance Methods" "= class REXML::DTD::NotationDecl < REXML::Child" "refm/api/src/rexml/dtd/notationdecl.rd")
(find-rurima "--- write(output, indent)" "== Instance Methods" "= class REXML::DTD::NotationDecl < REXML::Child" "refm/api/src/rexml/dtd/notationdecl.rd")
(find-rurima "== Constants" "= class REXML::DTD::NotationDecl < REXML::Child" "refm/api/src/rexml/dtd/notationdecl.rd")
(find-rurima "--- START" "== Constants" "= class REXML::DTD::NotationDecl < REXML::Child" "refm/api/src/rexml/dtd/notationdecl.rd")
(find-rurima "--- START_RE" "== Constants" "= class REXML::DTD::NotationDecl < REXML::Child" "refm/api/src/rexml/dtd/notationdecl.rd")
(find-rurima "--- PUBLIC" "== Constants" "= class REXML::DTD::NotationDecl < REXML::Child" "refm/api/src/rexml/dtd/notationdecl.rd")
(find-rurima "--- SYSTEM" "== Constants" "= class REXML::DTD::NotationDecl < REXML::Child" "refm/api/src/rexml/dtd/notationdecl.rd")
(find-rurima "= class REXML::DTD::EntityDecl < REXML::Child" "refm/api/src/rexml/dtd/entitydecl.rd")
(find-rurima "== Class Methods" "= class REXML::DTD::EntityDecl < REXML::Child" "refm/api/src/rexml/dtd/entitydecl.rd")
(find-rurima "--- new(src)" "== Class Methods" "= class REXML::DTD::EntityDecl < REXML::Child" "refm/api/src/rexml/dtd/entitydecl.rd")
(find-rurima "--- parse_source(source, listener)" "== Class Methods" "= class REXML::DTD::EntityDecl < REXML::Child" "refm/api/src/rexml/dtd/entitydecl.rd")
(find-rurima "== Instance Methods" "= class REXML::DTD::EntityDecl < REXML::Child" "refm/api/src/rexml/dtd/entitydecl.rd")
(find-rurima "--- to_s" "== Instance Methods" "= class REXML::DTD::EntityDecl < REXML::Child" "refm/api/src/rexml/dtd/entitydecl.rd")
(find-rurima "--- write(output, indent)" "== Instance Methods" "= class REXML::DTD::EntityDecl < REXML::Child" "refm/api/src/rexml/dtd/entitydecl.rd")
(find-rurima "== Constants" "= class REXML::DTD::EntityDecl < REXML::Child" "refm/api/src/rexml/dtd/entitydecl.rd")
(find-rurima "--- START" "== Constants" "= class REXML::DTD::EntityDecl < REXML::Child" "refm/api/src/rexml/dtd/entitydecl.rd")
(find-rurima "--- START_RE" "== Constants" "= class REXML::DTD::EntityDecl < REXML::Child" "refm/api/src/rexml/dtd/entitydecl.rd")
(find-rurima "--- PUBLIC" "== Constants" "= class REXML::DTD::EntityDecl < REXML::Child" "refm/api/src/rexml/dtd/entitydecl.rd")
(find-rurima "--- SYSTEM" "== Constants" "= class REXML::DTD::EntityDecl < REXML::Child" "refm/api/src/rexml/dtd/entitydecl.rd")
(find-rurima "--- PLAIN" "== Constants" "= class REXML::DTD::EntityDecl < REXML::Child" "refm/api/src/rexml/dtd/entitydecl.rd")
(find-rurima "--- PERCENT" "== Constants" "= class REXML::DTD::EntityDecl < REXML::Child" "refm/api/src/rexml/dtd/entitydecl.rd")
(find-rurima "= class REXML::DTD::Parser < Object" "refm/api/src/rexml/dtd/dtd.rd")
(find-rurima "== Class Methods" "= class REXML::DTD::Parser < Object" "refm/api/src/rexml/dtd/dtd.rd")
(find-rurima "--- parse(input)" "== Class Methods" "= class REXML::DTD::Parser < Object" "refm/api/src/rexml/dtd/dtd.rd")
(find-rurima "--- parse_helper(input)" "== Class Methods" "= class REXML::DTD::Parser < Object" "refm/api/src/rexml/dtd/dtd.rd")
(find-rurima "= class REXML::DTD::ElementDecl < REXML::Child" "refm/api/src/rexml/dtd/elementdecl.rd")
(find-rurima "== Class Methods" "= class REXML::DTD::ElementDecl < REXML::Child" "refm/api/src/rexml/dtd/elementdecl.rd")
(find-rurima "--- new(match)" "== Class Methods" "= class REXML::DTD::ElementDecl < REXML::Child" "refm/api/src/rexml/dtd/elementdecl.rd")
(find-rurima "== Constants" "= class REXML::DTD::ElementDecl < REXML::Child" "refm/api/src/rexml/dtd/elementdecl.rd")
(find-rurima "--- START" "== Constants" "= class REXML::DTD::ElementDecl < REXML::Child" "refm/api/src/rexml/dtd/elementdecl.rd")
(find-rurima "--- START_RE" "== Constants" "= class REXML::DTD::ElementDecl < REXML::Child" "refm/api/src/rexml/dtd/elementdecl.rd")
(find-rurima "--- PATTERN_RE" "== Constants" "= class REXML::DTD::ElementDecl < REXML::Child" "refm/api/src/rexml/dtd/elementdecl.rd")
(find-rurima "= class REXML::DTD::AttlistDecl < REXML::Child" "refm/api/src/rexml/dtd/attlistdecl.rd")
(find-rurima "== Constants" "= class REXML::DTD::AttlistDecl < REXML::Child" "refm/api/src/rexml/dtd/attlistdecl.rd")
(find-rurima "--- START" "== Constants" "= class REXML::DTD::AttlistDecl < REXML::Child" "refm/api/src/rexml/dtd/attlistdecl.rd")
(find-rurima "--- START_RE" "== Constants" "= class REXML::DTD::AttlistDecl < REXML::Child" "refm/api/src/rexml/dtd/attlistdecl.rd")
(find-rurima "--- PATTERN_RE" "== Constants" "= class REXML::DTD::AttlistDecl < REXML::Child" "refm/api/src/rexml/dtd/attlistdecl.rd")
(find-rurima "= class REXML::Instruction < REXML::Child" "refm/api/src/rexml/instruction.rd")
(find-rurima "== Class Methods" "= class REXML::Instruction < REXML::Child" "refm/api/src/rexml/instruction.rd")
(find-rurima "--- new(target, content = nil)" "== Class Methods" "= class REXML::Instruction < REXML::Child" "refm/api/src/rexml/instruction.rd")
(find-rurima "== Instance Methods" "= class REXML::Instruction < REXML::Child" "refm/api/src/rexml/instruction.rd")
(find-rurima "--- target" "== Instance Methods" "= class REXML::Instruction < REXML::Child" "refm/api/src/rexml/instruction.rd")
(find-rurima "--- target=(value)" "== Instance Methods" "= class REXML::Instruction < REXML::Child" "refm/api/src/rexml/instruction.rd")
(find-rurima "--- content" "== Instance Methods" "= class REXML::Instruction < REXML::Child" "refm/api/src/rexml/instruction.rd")
(find-rurima "--- content=(value)" "== Instance Methods" "= class REXML::Instruction < REXML::Child" "refm/api/src/rexml/instruction.rd")
(find-rurima "--- clone" "== Instance Methods" "= class REXML::Instruction < REXML::Child" "refm/api/src/rexml/instruction.rd")
(find-rurima "--- write(writer, indent = -1, transitive = false, ie_hack = false)" "== Instance Methods" "= class REXML::Instruction < REXML::Child" "refm/api/src/rexml/instruction.rd")
(find-rurima "--- ==(other)" "== Instance Methods" "= class REXML::Instruction < REXML::Child" "refm/api/src/rexml/instruction.rd")
(find-rurima "--- node_type" "== Instance Methods" "= class REXML::Instruction < REXML::Child" "refm/api/src/rexml/instruction.rd")
(find-rurima "--- inspect" "== Instance Methods" "= class REXML::Instruction < REXML::Child" "refm/api/src/rexml/instruction.rd")
(find-rurima "== Constants" "= class REXML::Instruction < REXML::Child" "refm/api/src/rexml/instruction.rd")
(find-rurima "--- START" "== Constants" "= class REXML::Instruction < REXML::Child" "refm/api/src/rexml/instruction.rd")
(find-rurima "--- STOP" "== Constants" "= class REXML::Instruction < REXML::Child" "refm/api/src/rexml/instruction.rd")
(find-rurima "= module REXML::Functions" "refm/api/src/rexml/functions.rd")
(find-rurima "== Class Methods" "= module REXML::Functions" "refm/api/src/rexml/functions.rd")
(find-rurima "--- namespace_context=(x)" "== Class Methods" "= module REXML::Functions" "refm/api/src/rexml/functions.rd")
(find-rurima "--- variables=(x)" "== Class Methods" "= module REXML::Functions" "refm/api/src/rexml/functions.rd")
(find-rurima "--- namespace_context" "== Class Methods" "= module REXML::Functions" "refm/api/src/rexml/functions.rd")
(find-rurima "--- variables" "== Class Methods" "= module REXML::Functions" "refm/api/src/rexml/functions.rd")
(find-rurima "--- context=(value)" "== Class Methods" "= module REXML::Functions" "refm/api/src/rexml/functions.rd")
(find-rurima "--- text" "== Class Methods" "= module REXML::Functions" "refm/api/src/rexml/functions.rd")
(find-rurima "--- last" "== Class Methods" "= module REXML::Functions" "refm/api/src/rexml/functions.rd")
(find-rurima "--- position" "== Class Methods" "= module REXML::Functions" "refm/api/src/rexml/functions.rd")
(find-rurima "--- count(node_set)" "== Class Methods" "= module REXML::Functions" "refm/api/src/rexml/functions.rd")
(find-rurima "--- id(object)" "== Class Methods" "= module REXML::Functions" "refm/api/src/rexml/functions.rd")
(find-rurima "--- local_name(node_set = nil)" "== Class Methods" "= module REXML::Functions" "refm/api/src/rexml/functions.rd")
(find-rurima "--- namespace_uri(node_set = nil)" "== Class Methods" "= module REXML::Functions" "refm/api/src/rexml/functions.rd")
(find-rurima "--- name(node_set = nil)" "== Class Methods" "= module REXML::Functions" "refm/api/src/rexml/functions.rd")
(find-rurima "--- get_namespace(node_set = nil)" "== Class Methods" "= module REXML::Functions" "refm/api/src/rexml/functions.rd")
(find-rurima "--- string(object = nil)" "== Class Methods" "= module REXML::Functions" "refm/api/src/rexml/functions.rd")
(find-rurima "--- concat(*objects)" "== Class Methods" "= module REXML::Functions" "refm/api/src/rexml/functions.rd")
(find-rurima "--- starts_with(string, test)" "== Class Methods" "= module REXML::Functions" "refm/api/src/rexml/functions.rd")
(find-rurima "--- contains(string, test)" "== Class Methods" "= module REXML::Functions" "refm/api/src/rexml/functions.rd")
(find-rurima "--- substring_before(string, test)" "== Class Methods" "= module REXML::Functions" "refm/api/src/rexml/functions.rd")
(find-rurima "--- substring_after(string, test)" "== Class Methods" "= module REXML::Functions" "refm/api/src/rexml/functions.rd")
(find-rurima "--- substring(string, start, length = nil)" "== Class Methods" "= module REXML::Functions" "refm/api/src/rexml/functions.rd")
(find-rurima "--- string_length(string)" "== Class Methods" "= module REXML::Functions" "refm/api/src/rexml/functions.rd")
(find-rurima "--- normalize_space(string = nil)" "== Class Methods" "= module REXML::Functions" "refm/api/src/rexml/functions.rd")
(find-rurima "--- translate(string, tr1, tr2)" "== Class Methods" "= module REXML::Functions" "refm/api/src/rexml/functions.rd")
(find-rurima "--- boolean(object = nil)" "== Class Methods" "= module REXML::Functions" "refm/api/src/rexml/functions.rd")
(find-rurima "--- not(object)" "== Class Methods" "= module REXML::Functions" "refm/api/src/rexml/functions.rd")
(find-rurima "--- true" "== Class Methods" "= module REXML::Functions" "refm/api/src/rexml/functions.rd")
(find-rurima "--- false" "== Class Methods" "= module REXML::Functions" "refm/api/src/rexml/functions.rd")
(find-rurima "--- lang(language)" "== Class Methods" "= module REXML::Functions" "refm/api/src/rexml/functions.rd")
(find-rurima "--- compare_language(lang1, lang2)" "== Class Methods" "= module REXML::Functions" "refm/api/src/rexml/functions.rd")
(find-rurima "--- number(object = nil)" "== Class Methods" "= module REXML::Functions" "refm/api/src/rexml/functions.rd")
(find-rurima "--- sum(nodes)" "== Class Methods" "= module REXML::Functions" "refm/api/src/rexml/functions.rd")
(find-rurima "--- floor(number)" "== Class Methods" "= module REXML::Functions" "refm/api/src/rexml/functions.rd")
(find-rurima "--- ceiling(number)" "== Class Methods" "= module REXML::Functions" "refm/api/src/rexml/functions.rd")
(find-rurima "--- round(number)" "== Class Methods" "= module REXML::Functions" "refm/api/src/rexml/functions.rd")
(find-rurima "--- processing_instruction(node)" "== Class Methods" "= module REXML::Functions" "refm/api/src/rexml/functions.rd")
(find-rurima "--- method_missing(id)" "== Class Methods" "= module REXML::Functions" "refm/api/src/rexml/functions.rd")
(find-rurima "--- index" "== Class Methods" "= module REXML::Functions" "refm/api/src/rexml/functions.rd")
(find-rurima "--- index=(value)" "== Class Methods" "= module REXML::Functions" "refm/api/src/rexml/functions.rd")
(find-rurima "--- node" "== Class Methods" "= module REXML::Functions" "refm/api/src/rexml/functions.rd")
(find-rurima "--- node=(value)" "== Class Methods" "= module REXML::Functions" "refm/api/src/rexml/functions.rd")
(find-rurima "--- size" "== Class Methods" "= module REXML::Functions" "refm/api/src/rexml/functions.rd")
(find-rurima "--- size=(value)" "== Class Methods" "= module REXML::Functions" "refm/api/src/rexml/functions.rd")
(find-rurima "--- string_value(o)" "== Class Methods" "= module REXML::Functions" "refm/api/src/rexml/functions.rd")
(find-rurima "= class REXML::Element < REXML::Parent" "refm/api/src/rexml/element.rd")
(find-rurima "== Class Methods" "= class REXML::Element < REXML::Parent" "refm/api/src/rexml/element.rd")
(find-rurima "--- new(arg = UNDEFINED, parent = nil, context = nil)" "== Class Methods" "= class REXML::Element < REXML::Parent" "refm/api/src/rexml/element.rd")
(find-rurima "== Instance Methods" "= class REXML::Element < REXML::Parent" "refm/api/src/rexml/element.rd")
(find-rurima "--- attributes" "== Instance Methods" "= class REXML::Element < REXML::Parent" "refm/api/src/rexml/element.rd")
(find-rurima "--- elements" "== Instance Methods" "= class REXML::Element < REXML::Parent" "refm/api/src/rexml/element.rd")
(find-rurima "--- context" "== Instance Methods" "= class REXML::Element < REXML::Parent" "refm/api/src/rexml/element.rd")
(find-rurima "--- context=(value)" "== Instance Methods" "= class REXML::Element < REXML::Parent" "refm/api/src/rexml/element.rd")
(find-rurima "--- inspect" "== Instance Methods" "= class REXML::Element < REXML::Parent" "refm/api/src/rexml/element.rd")
(find-rurima "--- clone" "== Instance Methods" "= class REXML::Element < REXML::Parent" "refm/api/src/rexml/element.rd")
(find-rurima "--- root_node" "== Instance Methods" "= class REXML::Element < REXML::Parent" "refm/api/src/rexml/element.rd")
(find-rurima "--- root" "== Instance Methods" "= class REXML::Element < REXML::Parent" "refm/api/src/rexml/element.rd")
(find-rurima "--- document" "== Instance Methods" "= class REXML::Element < REXML::Parent" "refm/api/src/rexml/element.rd")
(find-rurima "--- whitespace" "== Instance Methods" "= class REXML::Element < REXML::Parent" "refm/api/src/rexml/element.rd")
(find-rurima "--- ignore_whitespace_nodes" "== Instance Methods" "= class REXML::Element < REXML::Parent" "refm/api/src/rexml/element.rd")
(find-rurima "--- raw" "== Instance Methods" "= class REXML::Element < REXML::Parent" "refm/api/src/rexml/element.rd")
(find-rurima "--- prefixes" "== Instance Methods" "= class REXML::Element < REXML::Parent" "refm/api/src/rexml/element.rd")
(find-rurima "--- namespaces" "== Instance Methods" "= class REXML::Element < REXML::Parent" "refm/api/src/rexml/element.rd")
(find-rurima "--- namespace" "== Instance Methods" "= class REXML::Element < REXML::Parent" "refm/api/src/rexml/element.rd")
(find-rurima "--- add_namespace(prefix, uri = nil)" "== Instance Methods" "= class REXML::Element < REXML::Parent" "refm/api/src/rexml/element.rd")
(find-rurima "--- delete_namespace(namespace = \"xmlns\")" "== Instance Methods" "= class REXML::Element < REXML::Parent" "refm/api/src/rexml/element.rd")
(find-rurima "--- add_element(element, attrs = nil)" "== Instance Methods" "= class REXML::Element < REXML::Parent" "refm/api/src/rexml/element.rd")
(find-rurima "--- delete_element(element)" "== Instance Methods" "= class REXML::Element < REXML::Parent" "refm/api/src/rexml/element.rd")
(find-rurima "--- has_elements?" "== Instance Methods" "= class REXML::Element < REXML::Parent" "refm/api/src/rexml/element.rd")
(find-rurima "--- each_element_with_attribute(key, value = nil, max = 0, name = nil) {|element| ... }" "== Instance Methods" "= class REXML::Element < REXML::Parent" "refm/api/src/rexml/element.rd")
(find-rurima "--- each_element_with_text(text = nil, max = 0, name = nil) {|element| ... }" "== Instance Methods" "= class REXML::Element < REXML::Parent" "refm/api/src/rexml/element.rd")
(find-rurima "--- each_element(xpath = nil) {|element| ... }" "== Instance Methods" "= class REXML::Element < REXML::Parent" "refm/api/src/rexml/element.rd")
(find-rurima "--- get_elements(xpath)" "== Instance Methods" "= class REXML::Element < REXML::Parent" "refm/api/src/rexml/element.rd")
(find-rurima "--- next_element" "== Instance Methods" "= class REXML::Element < REXML::Parent" "refm/api/src/rexml/element.rd")
(find-rurima "--- previous_element" "== Instance Methods" "= class REXML::Element < REXML::Parent" "refm/api/src/rexml/element.rd")
(find-rurima "--- has_text?" "== Instance Methods" "= class REXML::Element < REXML::Parent" "refm/api/src/rexml/element.rd")
(find-rurima "--- text(path = nil)" "== Instance Methods" "= class REXML::Element < REXML::Parent" "refm/api/src/rexml/element.rd")
(find-rurima "--- get_text(path = nil)" "== Instance Methods" "= class REXML::Element < REXML::Parent" "refm/api/src/rexml/element.rd")
(find-rurima "--- text=(text)" "== Instance Methods" "= class REXML::Element < REXML::Parent" "refm/api/src/rexml/element.rd")
(find-rurima "--- add_text(text)" "== Instance Methods" "= class REXML::Element < REXML::Parent" "refm/api/src/rexml/element.rd")
(find-rurima "--- node_type" "== Instance Methods" "= class REXML::Element < REXML::Parent" "refm/api/src/rexml/element.rd")
(find-rurima "--- xpath" "== Instance Methods" "= class REXML::Element < REXML::Parent" "refm/api/src/rexml/element.rd")
(find-rurima "--- attribute(name, namespace = nil)" "== Instance Methods" "= class REXML::Element < REXML::Parent" "refm/api/src/rexml/element.rd")
(find-rurima "--- has_attributes?" "== Instance Methods" "= class REXML::Element < REXML::Parent" "refm/api/src/rexml/element.rd")
(find-rurima "--- add_attribute(key, value = nil)" "== Instance Methods" "= class REXML::Element < REXML::Parent" "refm/api/src/rexml/element.rd")
(find-rurima "--- add_attributes(hash)" "== Instance Methods" "= class REXML::Element < REXML::Parent" "refm/api/src/rexml/element.rd")
(find-rurima "--- delete_attribute(key)" "== Instance Methods" "= class REXML::Element < REXML::Parent" "refm/api/src/rexml/element.rd")
(find-rurima "--- cdatas" "== Instance Methods" "= class REXML::Element < REXML::Parent" "refm/api/src/rexml/element.rd")
(find-rurima "--- comments" "== Instance Methods" "= class REXML::Element < REXML::Parent" "refm/api/src/rexml/element.rd")
(find-rurima "--- instructions" "== Instance Methods" "= class REXML::Element < REXML::Parent" "refm/api/src/rexml/element.rd")
(find-rurima "--- texts" "== Instance Methods" "= class REXML::Element < REXML::Parent" "refm/api/src/rexml/element.rd")
(find-rurima "--- write(writer = $stdout, indent = -1, transitive = false, ie_hack = false)" "== Instance Methods" "= class REXML::Element < REXML::Parent" "refm/api/src/rexml/element.rd")
(find-rurima "== Constants" "= class REXML::Element < REXML::Parent" "refm/api/src/rexml/element.rd")
(find-rurima "--- UNDEFINED" "== Constants" "= class REXML::Element < REXML::Parent" "refm/api/src/rexml/element.rd")
(find-rurima "= class REXML::Elements" "refm/api/src/rexml/element.rd")
(find-rurima "== Class Methods" "= class REXML::Elements" "refm/api/src/rexml/element.rd")
(find-rurima "--- new(parent)" "== Class Methods" "= class REXML::Elements" "refm/api/src/rexml/element.rd")
(find-rurima "== Instance Methods" "= class REXML::Elements" "refm/api/src/rexml/element.rd")
(find-rurima "--- [](index, name = nil)" "== Instance Methods" "= class REXML::Elements" "refm/api/src/rexml/element.rd")
(find-rurima "--- []=(index, element)" "== Instance Methods" "= class REXML::Elements" "refm/api/src/rexml/element.rd")
(find-rurima "--- empty?" "== Instance Methods" "= class REXML::Elements" "refm/api/src/rexml/element.rd")
(find-rurima "--- index(element)" "== Instance Methods" "= class REXML::Elements" "refm/api/src/rexml/element.rd")
(find-rurima "--- delete(element)" "== Instance Methods" "= class REXML::Elements" "refm/api/src/rexml/element.rd")
(find-rurima "--- delete_all(xpath)" "== Instance Methods" "= class REXML::Elements" "refm/api/src/rexml/element.rd")
(find-rurima "--- add(element = nil)" "== Instance Methods" "= class REXML::Elements" "refm/api/src/rexml/element.rd")
(find-rurima "--- <<(element = nil)" "== Instance Methods" "= class REXML::Elements" "refm/api/src/rexml/element.rd")
(find-rurima "--- each(xpath = nil) {|element| ... }" "== Instance Methods" "= class REXML::Elements" "refm/api/src/rexml/element.rd")
(find-rurima "--- size" "== Instance Methods" "= class REXML::Elements" "refm/api/src/rexml/element.rd")
(find-rurima "--- to_a(xpath = nil)" "== Instance Methods" "= class REXML::Elements" "refm/api/src/rexml/element.rd")
(find-rurima "--- collect(xpath = nil) {|element| .. }" "== Instance Methods" "= class REXML::Elements" "refm/api/src/rexml/element.rd")
(find-rurima "--- inject(xpath = nil, initial = nil) {|element| ... }" "== Instance Methods" "= class REXML::Elements" "refm/api/src/rexml/element.rd")
(find-rurima "= class REXML::Attributes < Hash" "refm/api/src/rexml/element.rd")
(find-rurima "== Class Methods" "= class REXML::Attributes < Hash" "refm/api/src/rexml/element.rd")
(find-rurima "--- new(element)" "== Class Methods" "= class REXML::Attributes < Hash" "refm/api/src/rexml/element.rd")
(find-rurima "== Instance Methods" "= class REXML::Attributes < Hash" "refm/api/src/rexml/element.rd")
(find-rurima "--- [](name)" "== Instance Methods" "= class REXML::Attributes < Hash" "refm/api/src/rexml/element.rd")
(find-rurima "--- to_a" "== Instance Methods" "= class REXML::Attributes < Hash" "refm/api/src/rexml/element.rd")
(find-rurima "--- length" "== Instance Methods" "= class REXML::Attributes < Hash" "refm/api/src/rexml/element.rd")
(find-rurima "--- size" "== Instance Methods" "= class REXML::Attributes < Hash" "refm/api/src/rexml/element.rd")
(find-rurima "--- each_attribute {|attribute| ... }" "== Instance Methods" "= class REXML::Attributes < Hash" "refm/api/src/rexml/element.rd")
(find-rurima "--- each {|name, value| ... }" "== Instance Methods" "= class REXML::Attributes < Hash" "refm/api/src/rexml/element.rd")
(find-rurima "--- get_attribute(name)" "== Instance Methods" "= class REXML::Attributes < Hash" "refm/api/src/rexml/element.rd")
(find-rurima "--- []=(name, value)" "== Instance Methods" "= class REXML::Attributes < Hash" "refm/api/src/rexml/element.rd")
(find-rurima "--- prefixes" "== Instance Methods" "= class REXML::Attributes < Hash" "refm/api/src/rexml/element.rd")
(find-rurima "--- namespaces" "== Instance Methods" "= class REXML::Attributes < Hash" "refm/api/src/rexml/element.rd")
(find-rurima "--- delete(attribute)" "== Instance Methods" "= class REXML::Attributes < Hash" "refm/api/src/rexml/element.rd")
(find-rurima "--- add(attribute)" "== Instance Methods" "= class REXML::Attributes < Hash" "refm/api/src/rexml/element.rd")
(find-rurima "--- <<(attribute)" "== Instance Methods" "= class REXML::Attributes < Hash" "refm/api/src/rexml/element.rd")
(find-rurima "--- delete_all(name)" "== Instance Methods" "= class REXML::Attributes < Hash" "refm/api/src/rexml/element.rd")
(find-rurima "--- get_attribute_ns(namespace, name)" "== Instance Methods" "= class REXML::Attributes < Hash" "refm/api/src/rexml/element.rd")
(find-rurima "= class REXML::SourceFactory < Object" "refm/api/src/rexml/source.rd")
(find-rurima "== Class Methods" "= class REXML::SourceFactory < Object" "refm/api/src/rexml/source.rd")
(find-rurima "--- create_from(arg)" "== Class Methods" "= class REXML::SourceFactory < Object" "refm/api/src/rexml/source.rd")
(find-rurima "= class REXML::Source < Object" "refm/api/src/rexml/source.rd")
(find-rurima "== Class Methods" "= class REXML::Source < Object" "refm/api/src/rexml/source.rd")
(find-rurima "--- new(arg)" "== Class Methods" "= class REXML::Source < Object" "refm/api/src/rexml/source.rd")
(find-rurima "== Instance Methods" "= class REXML::Source < Object" "refm/api/src/rexml/source.rd")
(find-rurima "--- buffer" "== Instance Methods" "= class REXML::Source < Object" "refm/api/src/rexml/source.rd")
(find-rurima "--- line" "== Instance Methods" "= class REXML::Source < Object" "refm/api/src/rexml/source.rd")
(find-rurima "--- encoding" "== Instance Methods" "= class REXML::Source < Object" "refm/api/src/rexml/source.rd")
(find-rurima "--- encoding=(enc)" "== Instance Methods" "= class REXML::Source < Object" "refm/api/src/rexml/source.rd")
(find-rurima "--- scan(pattern, cons = false)" "== Instance Methods" "= class REXML::Source < Object" "refm/api/src/rexml/source.rd")
(find-rurima "--- read" "== Instance Methods" "= class REXML::Source < Object" "refm/api/src/rexml/source.rd")
(find-rurima "--- consume(pattern)" "== Instance Methods" "= class REXML::Source < Object" "refm/api/src/rexml/source.rd")
(find-rurima "--- match_to(char, pattern)" "== Instance Methods" "= class REXML::Source < Object" "refm/api/src/rexml/source.rd")
(find-rurima "--- match_to_consume(char, pattern)" "== Instance Methods" "= class REXML::Source < Object" "refm/api/src/rexml/source.rd")
(find-rurima "--- match(pattern, cons = false)" "== Instance Methods" "= class REXML::Source < Object" "refm/api/src/rexml/source.rd")
(find-rurima "--- empty?" "== Instance Methods" "= class REXML::Source < Object" "refm/api/src/rexml/source.rd")
(find-rurima "--- position" "== Instance Methods" "= class REXML::Source < Object" "refm/api/src/rexml/source.rd")
(find-rurima "--- current_line" "== Instance Methods" "= class REXML::Source < Object" "refm/api/src/rexml/source.rd")
(find-rurima "= class REXML::IOSource < REXML::Source" "refm/api/src/rexml/source.rd")
(find-rurima "== Class Methods" "= class REXML::IOSource < REXML::Source" "refm/api/src/rexml/source.rd")
(find-rurima "--- new(arg, block_size = 500)" "== Class Methods" "= class REXML::IOSource < REXML::Source" "refm/api/src/rexml/source.rd")
(find-rurima "== Instance Methods" "= class REXML::IOSource < REXML::Source" "refm/api/src/rexml/source.rd")
(find-rurima "--- scan(pattern, cons = false)" "== Instance Methods" "= class REXML::IOSource < REXML::Source" "refm/api/src/rexml/source.rd")
(find-rurima "--- read" "== Instance Methods" "= class REXML::IOSource < REXML::Source" "refm/api/src/rexml/source.rd")
(find-rurima "--- consume(pattern)" "== Instance Methods" "= class REXML::IOSource < REXML::Source" "refm/api/src/rexml/source.rd")
(find-rurima "--- match(pattern, cons = false)" "== Instance Methods" "= class REXML::IOSource < REXML::Source" "refm/api/src/rexml/source.rd")
(find-rurima "--- empty?" "== Instance Methods" "= class REXML::IOSource < REXML::Source" "refm/api/src/rexml/source.rd")
(find-rurima "--- position" "== Instance Methods" "= class REXML::IOSource < REXML::Source" "refm/api/src/rexml/source.rd")
(find-rurima "--- current_line" "== Instance Methods" "= class REXML::IOSource < REXML::Source" "refm/api/src/rexml/source.rd")
(find-rurima "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "== Class Methods" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- new(source)" "== Class Methods" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "== Instance Methods" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- add_listener(listener)" "== Instance Methods" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- source" "== Instance Methods" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- stream=(source)" "== Instance Methods" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- position" "== Instance Methods" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- empty?" "== Instance Methods" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- has_next?" "== Instance Methods" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- unshift(token)" "== Instance Methods" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- peek(depth = 0)" "== Instance Methods" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- pull" "== Instance Methods" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- entity(reference, entities)" "== Instance Methods" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- normalize(input, entities = nil, entity_filter = nil)" "== Instance Methods" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- unnormalize(string, entities = nil, filter = nil)" "== Instance Methods" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "== Constants" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- NCNAME_STR" "== Constants" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- NAME_STR" "== Constants" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- NAMECHAR" "== Constants" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- NAME" "== Constants" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- NMTOKEN" "== Constants" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- NMTOKENS" "== Constants" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- REFERENCE" "== Constants" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- REFERENCE_RE" "== Constants" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- DOCTYPE_START" "== Constants" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- DOCTYPE_PATTERN" "== Constants" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- ATTRIBUTE_PATTERN" "== Constants" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- COMMENT_START" "== Constants" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- COMMENT_PATTERN" "== Constants" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- CDATA_START" "== Constants" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- CDATA_END" "== Constants" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- CDATA_PATTERN" "== Constants" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- XMLDECL_START" "== Constants" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- XMLDECL_PATTERN" "== Constants" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- INSTRUCTION_START" "== Constants" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- INSTRUCTION_PATTERN" "== Constants" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- TAG_MATCH" "== Constants" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- CLOSE_MATCH" "== Constants" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- VERSION" "== Constants" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- ENCODING" "== Constants" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- STANDALONE" "== Constants" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- ENTITY_START" "== Constants" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- IDENTITY" "== Constants" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- ELEMENTDECL_START" "== Constants" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- ELEMENTDECL_PATTERN" "== Constants" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- SYSTEMENTITY" "== Constants" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- ENUMERATION" "== Constants" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- NOTATIONTYPE" "== Constants" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- ENUMERATEDTYPE" "== Constants" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- ATTTYPE" "== Constants" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- ATTVALUE" "== Constants" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- DEFAULTDECL" "== Constants" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- ATTDEF" "== Constants" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- ATTDEF_RE" "== Constants" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- ATTLISTDECL_START" "== Constants" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- ATTLISTDECL_PATTERN" "== Constants" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- NOTATIONDECL_START" "== Constants" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- PUBLIC" "== Constants" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- SYSTEM" "== Constants" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- TEXT_PATTERN" "== Constants" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- PUBIDCHAR" "== Constants" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- SYSTEMLITERAL" "== Constants" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- PUBIDLITERAL" "== Constants" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- EXTERNALID" "== Constants" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- NDATADECL" "== Constants" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- PEREFERENCE" "== Constants" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- ENTITYVALUE" "== Constants" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- PEDEF" "== Constants" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- ENTITYDEF" "== Constants" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- PEDECL" "== Constants" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- GEDECL" "== Constants" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- ENTITYDECL" "== Constants" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- EREFERENCE" "== Constants" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- DEFAULT_ENTITIES" "== Constants" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "--- MISSING_ATTRIBUTE_QUOTES" "== Constants" "= class REXML::Parsers::BaseParser < Object" "refm/api/src/rexml/parsers/baseparser.rd")
(find-rurima "= class REXML::Parsers::PullParser < Object" "refm/api/src/rexml/parsers/pullparser.rd")
(find-rurima "== Class Methods" "= class REXML::Parsers::PullParser < Object" "refm/api/src/rexml/parsers/pullparser.rd")
(find-rurima "--- new(stream)" "== Class Methods" "= class REXML::Parsers::PullParser < Object" "refm/api/src/rexml/parsers/pullparser.rd")
(find-rurima "== Instance Methods" "= class REXML::Parsers::PullParser < Object" "refm/api/src/rexml/parsers/pullparser.rd")
(find-rurima "--- has_next?" "== Instance Methods" "= class REXML::Parsers::PullParser < Object" "refm/api/src/rexml/parsers/pullparser.rd")
(find-rurima "--- entity" "== Instance Methods" "= class REXML::Parsers::PullParser < Object" "refm/api/src/rexml/parsers/pullparser.rd")
(find-rurima "--- empty?" "== Instance Methods" "= class REXML::Parsers::PullParser < Object" "refm/api/src/rexml/parsers/pullparser.rd")
(find-rurima "--- source" "== Instance Methods" "= class REXML::Parsers::PullParser < Object" "refm/api/src/rexml/parsers/pullparser.rd")
(find-rurima "--- add_listener(listener)" "== Instance Methods" "= class REXML::Parsers::PullParser < Object" "refm/api/src/rexml/parsers/pullparser.rd")
(find-rurima "--- each {|event| ... }" "== Instance Methods" "= class REXML::Parsers::PullParser < Object" "refm/api/src/rexml/parsers/pullparser.rd")
(find-rurima "--- peek(depth = 0)" "== Instance Methods" "= class REXML::Parsers::PullParser < Object" "refm/api/src/rexml/parsers/pullparser.rd")
(find-rurima "--- pull" "== Instance Methods" "= class REXML::Parsers::PullParser < Object" "refm/api/src/rexml/parsers/pullparser.rd")
(find-rurima "--- unshift" "== Instance Methods" "= class REXML::Parsers::PullParser < Object" "refm/api/src/rexml/parsers/pullparser.rd")
(find-rurima "= class REXML::Parsers::PullEvent < Object" "refm/api/src/rexml/parsers/pullparser.rd")
(find-rurima "== Class Methods" "= class REXML::Parsers::PullEvent < Object" "refm/api/src/rexml/parsers/pullparser.rd")
(find-rurima "--- new(arg)" "== Class Methods" "= class REXML::Parsers::PullEvent < Object" "refm/api/src/rexml/parsers/pullparser.rd")
(find-rurima "== Instance Methods" "= class REXML::Parsers::PullEvent < Object" "refm/api/src/rexml/parsers/pullparser.rd")
(find-rurima "--- [](start, endd = nil)" "== Instance Methods" "= class REXML::Parsers::PullEvent < Object" "refm/api/src/rexml/parsers/pullparser.rd")
(find-rurima "--- event_type" "== Instance Methods" "= class REXML::Parsers::PullEvent < Object" "refm/api/src/rexml/parsers/pullparser.rd")
(find-rurima "--- start_element?" "== Instance Methods" "= class REXML::Parsers::PullEvent < Object" "refm/api/src/rexml/parsers/pullparser.rd")
(find-rurima "--- end_element?" "== Instance Methods" "= class REXML::Parsers::PullEvent < Object" "refm/api/src/rexml/parsers/pullparser.rd")
(find-rurima "--- text?" "== Instance Methods" "= class REXML::Parsers::PullEvent < Object" "refm/api/src/rexml/parsers/pullparser.rd")
(find-rurima "--- instruction?" "== Instance Methods" "= class REXML::Parsers::PullEvent < Object" "refm/api/src/rexml/parsers/pullparser.rd")
(find-rurima "--- comment?" "== Instance Methods" "= class REXML::Parsers::PullEvent < Object" "refm/api/src/rexml/parsers/pullparser.rd")
(find-rurima "--- doctype?" "== Instance Methods" "= class REXML::Parsers::PullEvent < Object" "refm/api/src/rexml/parsers/pullparser.rd")
(find-rurima "--- attlistdecl?" "== Instance Methods" "= class REXML::Parsers::PullEvent < Object" "refm/api/src/rexml/parsers/pullparser.rd")
(find-rurima "--- elementdecl?" "== Instance Methods" "= class REXML::Parsers::PullEvent < Object" "refm/api/src/rexml/parsers/pullparser.rd")
(find-rurima "--- entitydecl?" "== Instance Methods" "= class REXML::Parsers::PullEvent < Object" "refm/api/src/rexml/parsers/pullparser.rd")
(find-rurima "--- notationdecl?" "== Instance Methods" "= class REXML::Parsers::PullEvent < Object" "refm/api/src/rexml/parsers/pullparser.rd")
(find-rurima "--- entity?" "== Instance Methods" "= class REXML::Parsers::PullEvent < Object" "refm/api/src/rexml/parsers/pullparser.rd")
(find-rurima "--- cdata?" "== Instance Methods" "= class REXML::Parsers::PullEvent < Object" "refm/api/src/rexml/parsers/pullparser.rd")
(find-rurima "--- xmldecl?" "== Instance Methods" "= class REXML::Parsers::PullEvent < Object" "refm/api/src/rexml/parsers/pullparser.rd")
(find-rurima "--- error?" "== Instance Methods" "= class REXML::Parsers::PullEvent < Object" "refm/api/src/rexml/parsers/pullparser.rd")
(find-rurima "--- inspect" "== Instance Methods" "= class REXML::Parsers::PullEvent < Object" "refm/api/src/rexml/parsers/pullparser.rd")
(find-rurima "= class REXML::Parsers::XPathParser < Object" "refm/api/src/rexml/parsers/xpathparser.rd")
(find-rurima "== Instance Methods" "= class REXML::Parsers::XPathParser < Object" "refm/api/src/rexml/parsers/xpathparser.rd")
(find-rurima "--- namespaces=(namespaces)" "== Instance Methods" "= class REXML::Parsers::XPathParser < Object" "refm/api/src/rexml/parsers/xpathparser.rd")
(find-rurima "--- parse(path)" "== Instance Methods" "= class REXML::Parsers::XPathParser < Object" "refm/api/src/rexml/parsers/xpathparser.rd")
(find-rurima "--- predicate(path)" "== Instance Methods" "= class REXML::Parsers::XPathParser < Object" "refm/api/src/rexml/parsers/xpathparser.rd")
(find-rurima "--- abbreviate(path)" "== Instance Methods" "= class REXML::Parsers::XPathParser < Object" "refm/api/src/rexml/parsers/xpathparser.rd")
(find-rurima "--- expand(path)" "== Instance Methods" "= class REXML::Parsers::XPathParser < Object" "refm/api/src/rexml/parsers/xpathparser.rd")
(find-rurima "--- to_string(path)" "== Instance Methods" "= class REXML::Parsers::XPathParser < Object" "refm/api/src/rexml/parsers/xpathparser.rd")
(find-rurima "--- predicate_to_string(path) {|path| ... }" "== Instance Methods" "= class REXML::Parsers::XPathParser < Object" "refm/api/src/rexml/parsers/xpathparser.rd")
(find-rurima "== Constants" "= class REXML::Parsers::XPathParser < Object" "refm/api/src/rexml/parsers/xpathparser.rd")
(find-rurima "--- LITERAL" "== Constants" "= class REXML::Parsers::XPathParser < Object" "refm/api/src/rexml/parsers/xpathparser.rd")
(find-rurima "--- AXIS" "== Constants" "= class REXML::Parsers::XPathParser < Object" "refm/api/src/rexml/parsers/xpathparser.rd")
(find-rurima "--- NCNAMETEST" "== Constants" "= class REXML::Parsers::XPathParser < Object" "refm/api/src/rexml/parsers/xpathparser.rd")
(find-rurima "--- QNAME" "== Constants" "= class REXML::Parsers::XPathParser < Object" "refm/api/src/rexml/parsers/xpathparser.rd")
(find-rurima "--- NODE_TYPE" "== Constants" "= class REXML::Parsers::XPathParser < Object" "refm/api/src/rexml/parsers/xpathparser.rd")
(find-rurima "--- PI" "== Constants" "= class REXML::Parsers::XPathParser < Object" "refm/api/src/rexml/parsers/xpathparser.rd")
(find-rurima "--- VARIABLE_REFERENCE" "== Constants" "= class REXML::Parsers::XPathParser < Object" "refm/api/src/rexml/parsers/xpathparser.rd")
(find-rurima "--- NUMBER" "== Constants" "= class REXML::Parsers::XPathParser < Object" "refm/api/src/rexml/parsers/xpathparser.rd")
(find-rurima "--- NT" "== Constants" "= class REXML::Parsers::XPathParser < Object" "refm/api/src/rexml/parsers/xpathparser.rd")
(find-rurima "= class REXML::Parsers::UltraLightParser < Object" "refm/api/src/rexml/parsers/ultralightparser.rd")
(find-rurima "== Class Methods" "= class REXML::Parsers::UltraLightParser < Object" "refm/api/src/rexml/parsers/ultralightparser.rd")
(find-rurima "--- new(stream)" "== Class Methods" "= class REXML::Parsers::UltraLightParser < Object" "refm/api/src/rexml/parsers/ultralightparser.rd")
(find-rurima "== Instance Methods" "= class REXML::Parsers::UltraLightParser < Object" "refm/api/src/rexml/parsers/ultralightparser.rd")
(find-rurima "--- add_listener(listener)" "== Instance Methods" "= class REXML::Parsers::UltraLightParser < Object" "refm/api/src/rexml/parsers/ultralightparser.rd")
(find-rurima "--- rewind" "== Instance Methods" "= class REXML::Parsers::UltraLightParser < Object" "refm/api/src/rexml/parsers/ultralightparser.rd")
(find-rurima "--- parse" "== Instance Methods" "= class REXML::Parsers::UltraLightParser < Object" "refm/api/src/rexml/parsers/ultralightparser.rd")
(find-rurima "= class REXML::Parsers::SAX2Parser < Object" "refm/api/src/rexml/parsers/sax2parser.rd")
(find-rurima "== Class Methods" "= class REXML::Parsers::SAX2Parser < Object" "refm/api/src/rexml/parsers/sax2parser.rd")
(find-rurima "--- new(source)" "== Class Methods" "= class REXML::Parsers::SAX2Parser < Object" "refm/api/src/rexml/parsers/sax2parser.rd")
(find-rurima "== Instance Methods" "= class REXML::Parsers::SAX2Parser < Object" "refm/api/src/rexml/parsers/sax2parser.rd")
(find-rurima "--- add_listener(listener)" "== Instance Methods" "= class REXML::Parsers::SAX2Parser < Object" "refm/api/src/rexml/parsers/sax2parser.rd")
(find-rurima "--- listen(sym, ary) { ... }" "== Instance Methods" "= class REXML::Parsers::SAX2Parser < Object" "refm/api/src/rexml/parsers/sax2parser.rd")
(find-rurima "--- listen(sym) { ... }" "== Instance Methods" "= class REXML::Parsers::SAX2Parser < Object" "refm/api/src/rexml/parsers/sax2parser.rd")
(find-rurima "--- listen(ary, listener)" "== Instance Methods" "= class REXML::Parsers::SAX2Parser < Object" "refm/api/src/rexml/parsers/sax2parser.rd")
(find-rurima "--- listen(ary) { ... }" "== Instance Methods" "= class REXML::Parsers::SAX2Parser < Object" "refm/api/src/rexml/parsers/sax2parser.rd")
(find-rurima "--- listen(listener)" "== Instance Methods" "= class REXML::Parsers::SAX2Parser < Object" "refm/api/src/rexml/parsers/sax2parser.rd")
(find-rurima "--- deafen(listener)" "== Instance Methods" "= class REXML::Parsers::SAX2Parser < Object" "refm/api/src/rexml/parsers/sax2parser.rd")
(find-rurima "--- deafen { ... }" "== Instance Methods" "= class REXML::Parsers::SAX2Parser < Object" "refm/api/src/rexml/parsers/sax2parser.rd")
(find-rurima "--- parse" "== Instance Methods" "= class REXML::Parsers::SAX2Parser < Object" "refm/api/src/rexml/parsers/sax2parser.rd")
(find-rurima "--- source" "== Instance Methods" "= class REXML::Parsers::SAX2Parser < Object" "refm/api/src/rexml/parsers/sax2parser.rd")
(find-rurima "= class REXML::Parsers::TreeParser < Object" "refm/api/src/rexml/parsers/treeparser.rd")
(find-rurima "== Class Methods" "= class REXML::Parsers::TreeParser < Object" "refm/api/src/rexml/parsers/treeparser.rd")
(find-rurima "--- new(source, build_context = REXML::Document.new)" "== Class Methods" "= class REXML::Parsers::TreeParser < Object" "refm/api/src/rexml/parsers/treeparser.rd")
(find-rurima "== Instance Methods" "= class REXML::Parsers::TreeParser < Object" "refm/api/src/rexml/parsers/treeparser.rd")
(find-rurima "--- add_listener(listener)" "== Instance Methods" "= class REXML::Parsers::TreeParser < Object" "refm/api/src/rexml/parsers/treeparser.rd")
(find-rurima "--- parse" "== Instance Methods" "= class REXML::Parsers::TreeParser < Object" "refm/api/src/rexml/parsers/treeparser.rd")
(find-rurima "= class REXML::Parsers::LightParser < Object" "refm/api/src/rexml/parsers/lightparser.rd")
(find-rurima "== Class Methods" "= class REXML::Parsers::LightParser < Object" "refm/api/src/rexml/parsers/lightparser.rd")
(find-rurima "--- new(stream)" "== Class Methods" "= class REXML::Parsers::LightParser < Object" "refm/api/src/rexml/parsers/lightparser.rd")
(find-rurima "== Instance Methods" "= class REXML::Parsers::LightParser < Object" "refm/api/src/rexml/parsers/lightparser.rd")
(find-rurima "--- add_listener(listener)" "== Instance Methods" "= class REXML::Parsers::LightParser < Object" "refm/api/src/rexml/parsers/lightparser.rd")
(find-rurima "--- rewind" "== Instance Methods" "= class REXML::Parsers::LightParser < Object" "refm/api/src/rexml/parsers/lightparser.rd")
(find-rurima "--- parse" "== Instance Methods" "= class REXML::Parsers::LightParser < Object" "refm/api/src/rexml/parsers/lightparser.rd")
(find-rurima "= class REXML::Parsers::StreamParser < Object" "refm/api/src/rexml/parsers/streamparser.rd")
(find-rurima "== Class Methods" "= class REXML::Parsers::StreamParser < Object" "refm/api/src/rexml/parsers/streamparser.rd")
(find-rurima "--- new(source, listener)" "== Class Methods" "= class REXML::Parsers::StreamParser < Object" "refm/api/src/rexml/parsers/streamparser.rd")
(find-rurima "== Instance Methods" "= class REXML::Parsers::StreamParser < Object" "refm/api/src/rexml/parsers/streamparser.rd")
(find-rurima "--- add_listener(listener)" "== Instance Methods" "= class REXML::Parsers::StreamParser < Object" "refm/api/src/rexml/parsers/streamparser.rd")
(find-rurima "--- parse" "== Instance Methods" "= class REXML::Parsers::StreamParser < Object" "refm/api/src/rexml/parsers/streamparser.rd")
(find-rurima "= redefine REXML::Encoding" "refm/api/src/rexml/encodings/CP-1252.rd")
(find-rurima "== Instance Methods" "= redefine REXML::Encoding" "refm/api/src/rexml/encodings/CP-1252.rd")
(find-rurima "--- encode(content)" "== Instance Methods" "= redefine REXML::Encoding" "refm/api/src/rexml/encodings/CP-1252.rd")
(find-rurima "--- decode(str)" "== Instance Methods" "= redefine REXML::Encoding" "refm/api/src/rexml/encodings/CP-1252.rd")
(find-rurima "= reopen REXML::Encoding" "refm/api/src/rexml/encodings/UTF-8.rd")
(find-rurima "== Instance Methods" "= reopen REXML::Encoding" "refm/api/src/rexml/encodings/UTF-8.rd")
(find-rurima "--- encode_utf8(content)" "== Instance Methods" "= reopen REXML::Encoding" "refm/api/src/rexml/encodings/UTF-8.rd")
(find-rurima "--- decode_utf8(str)" "== Instance Methods" "= reopen REXML::Encoding" "refm/api/src/rexml/encodings/UTF-8.rd")
(find-rurima "= redefine REXML::Encoding" "refm/api/src/rexml/encodings/UTF-8.rd")
(find-rurima "== Instance Methods" "= redefine REXML::Encoding" "refm/api/src/rexml/encodings/UTF-8.rd")
(find-rurima "--- decode(str)" "== Instance Methods" "= redefine REXML::Encoding" "refm/api/src/rexml/encodings/UTF-8.rd")
(find-rurima "--- encode(content)" "== Instance Methods" "= redefine REXML::Encoding" "refm/api/src/rexml/encodings/UTF-8.rd")
(find-rurima "= reopen REXML::Encoding" "refm/api/src/rexml/encodings/UNILE.rd")
(find-rurima "== Instance Methods" "= reopen REXML::Encoding" "refm/api/src/rexml/encodings/UNILE.rd")
(find-rurima "--- encode_unile(content)" "== Instance Methods" "= reopen REXML::Encoding" "refm/api/src/rexml/encodings/UNILE.rd")
(find-rurima "--- decode_unile(str)" "== Instance Methods" "= reopen REXML::Encoding" "refm/api/src/rexml/encodings/UNILE.rd")
(find-rurima "--- to_unile(content)" "== Instance Methods" "= reopen REXML::Encoding" "refm/api/src/rexml/encodings/UNILE.rd")
(find-rurima "--- from_unile(str)" "== Instance Methods" "= reopen REXML::Encoding" "refm/api/src/rexml/encodings/UNILE.rd")
(find-rurima "= redefine REXML::Encoding" "refm/api/src/rexml/encodings/UNILE.rd")
(find-rurima "== Instance Methods" "= redefine REXML::Encoding" "refm/api/src/rexml/encodings/UNILE.rd")
(find-rurima "--- decode(str)" "== Instance Methods" "= redefine REXML::Encoding" "refm/api/src/rexml/encodings/UNILE.rd")
(find-rurima "--- encode(content)" "== Instance Methods" "= redefine REXML::Encoding" "refm/api/src/rexml/encodings/UNILE.rd")
(find-rurima "= reopen REXML::Encoding" "refm/api/src/rexml/encodings/SHIFT_JIS.rd")
(find-rurima "== Instance Methods" "= reopen REXML::Encoding" "refm/api/src/rexml/encodings/SHIFT_JIS.rd")
(find-rurima "--- from_shift_jis(content)" "== Instance Methods" "= reopen REXML::Encoding" "refm/api/src/rexml/encodings/SHIFT_JIS.rd")
(find-rurima "--- to_shift_jis(str)" "== Instance Methods" "= reopen REXML::Encoding" "refm/api/src/rexml/encodings/SHIFT_JIS.rd")
(find-rurima "= reopen REXML::Encoding" "refm/api/src/rexml/encodings/EUC-JP.rd")
(find-rurima "== Instance Methods" "= reopen REXML::Encoding" "refm/api/src/rexml/encodings/EUC-JP.rd")
(find-rurima "--- decode_eucjp(str)" "== Instance Methods" "= reopen REXML::Encoding" "refm/api/src/rexml/encodings/EUC-JP.rd")
(find-rurima "--- encode_eucjp(content)" "== Instance Methods" "= reopen REXML::Encoding" "refm/api/src/rexml/encodings/EUC-JP.rd")
(find-rurima "--- from_euc_jp(str)" "== Instance Methods" "= reopen REXML::Encoding" "refm/api/src/rexml/encodings/EUC-JP.rd")
(find-rurima "--- to_euc_jp(content)" "== Instance Methods" "= reopen REXML::Encoding" "refm/api/src/rexml/encodings/EUC-JP.rd")
(find-rurima "== Constants" "= reopen REXML::Encoding" "refm/api/src/rexml/encodings/EUC-JP.rd")
(find-rurima "--- EUCTOU8" "== Constants" "= reopen REXML::Encoding" "refm/api/src/rexml/encodings/EUC-JP.rd")
(find-rurima "--- U8TOEUC" "== Constants" "= reopen REXML::Encoding" "refm/api/src/rexml/encodings/EUC-JP.rd")
(find-rurima "= redefine REXML::Encoding" "refm/api/src/rexml/encodings/EUC-JP.rd")
(find-rurima "== Instance Methods" "= redefine REXML::Encoding" "refm/api/src/rexml/encodings/EUC-JP.rd")
(find-rurima "--- decode(str)" "== Instance Methods" "= redefine REXML::Encoding" "refm/api/src/rexml/encodings/EUC-JP.rd")
(find-rurima "--- encode(content)" "== Instance Methods" "= redefine REXML::Encoding" "refm/api/src/rexml/encodings/EUC-JP.rd")
(find-rurima "= reopen REXML::Encoding" "refm/api/src/rexml/encodings/US-ASCII.rd")
(find-rurima "== Instance Methods" "= reopen REXML::Encoding" "refm/api/src/rexml/encodings/US-ASCII.rd")
(find-rurima "--- encode_ascii(content)" "== Instance Methods" "= reopen REXML::Encoding" "refm/api/src/rexml/encodings/US-ASCII.rd")
(find-rurima "--- decode_ascii(str)" "== Instance Methods" "= reopen REXML::Encoding" "refm/api/src/rexml/encodings/US-ASCII.rd")
(find-rurima "--- to_us_ascii(content)" "== Instance Methods" "= reopen REXML::Encoding" "refm/api/src/rexml/encodings/US-ASCII.rd")
(find-rurima "--- from_us_ascii(str)" "== Instance Methods" "= reopen REXML::Encoding" "refm/api/src/rexml/encodings/US-ASCII.rd")
(find-rurima "= redefine REXML::Encoding" "refm/api/src/rexml/encodings/US-ASCII.rd")
(find-rurima "== Instance Methods" "= redefine REXML::Encoding" "refm/api/src/rexml/encodings/US-ASCII.rd")
(find-rurima "--- decode(str)" "== Instance Methods" "= redefine REXML::Encoding" "refm/api/src/rexml/encodings/US-ASCII.rd")
(find-rurima "--- encode(content)" "== Instance Methods" "= redefine REXML::Encoding" "refm/api/src/rexml/encodings/US-ASCII.rd")
(find-rurima "= reopen REXML::Encoding" "refm/api/src/rexml/encodings/ICONV.rd")
(find-rurima "== Instance Methods" "= reopen REXML::Encoding" "refm/api/src/rexml/encodings/ICONV.rd")
(find-rurima "--- decode_iconv(str)" "== Instance Methods" "= reopen REXML::Encoding" "refm/api/src/rexml/encodings/ICONV.rd")
(find-rurima "--- encode_iconv(content)" "== Instance Methods" "= reopen REXML::Encoding" "refm/api/src/rexml/encodings/ICONV.rd")
(find-rurima "= redefine REXML::Encoding" "refm/api/src/rexml/encodings/ICONV.rd")
(find-rurima "== Instance Methods" "= redefine REXML::Encoding" "refm/api/src/rexml/encodings/ICONV.rd")
(find-rurima "--- decode(str)" "== Instance Methods" "= redefine REXML::Encoding" "refm/api/src/rexml/encodings/ICONV.rd")
(find-rurima "--- encode(content)" "== Instance Methods" "= redefine REXML::Encoding" "refm/api/src/rexml/encodings/ICONV.rd")
(find-rurima "= reopen REXML::Encoding" "refm/api/src/rexml/encodings/UTF-16.rd")
(find-rurima "== Instance Methods" "= reopen REXML::Encoding" "refm/api/src/rexml/encodings/UTF-16.rd")
(find-rurima "--- encode_utf16(content)" "== Instance Methods" "= reopen REXML::Encoding" "refm/api/src/rexml/encodings/UTF-16.rd")
(find-rurima "--- decode_utf16(str)" "== Instance Methods" "= reopen REXML::Encoding" "refm/api/src/rexml/encodings/UTF-16.rd")
(find-rurima "--- to_utf_16(content)" "== Instance Methods" "= reopen REXML::Encoding" "refm/api/src/rexml/encodings/UTF-16.rd")
(find-rurima "--- from_utf_16(str)" "== Instance Methods" "= reopen REXML::Encoding" "refm/api/src/rexml/encodings/UTF-16.rd")
(find-rurima "= redefine REXML::Encoding" "refm/api/src/rexml/encodings/UTF-16.rd")
(find-rurima "== Instance Methods" "= redefine REXML::Encoding" "refm/api/src/rexml/encodings/UTF-16.rd")
(find-rurima "--- encode(content)" "== Instance Methods" "= redefine REXML::Encoding" "refm/api/src/rexml/encodings/UTF-16.rd")
(find-rurima "--- decode(str)" "== Instance Methods" "= redefine REXML::Encoding" "refm/api/src/rexml/encodings/UTF-16.rd")
(find-rurima "= reopen REXML::Encoding" "refm/api/src/rexml/encodings/SHIFT-JIS.rd")
(find-rurima "== Instance Methods" "= reopen REXML::Encoding" "refm/api/src/rexml/encodings/SHIFT-JIS.rd")
(find-rurima "--- decode_sjis(content)" "== Instance Methods" "= reopen REXML::Encoding" "refm/api/src/rexml/encodings/SHIFT-JIS.rd")
(find-rurima "--- encode_sjis(str)" "== Instance Methods" "= reopen REXML::Encoding" "refm/api/src/rexml/encodings/SHIFT-JIS.rd")
(find-rurima "--- from_shift_jis(content)" "== Instance Methods" "= reopen REXML::Encoding" "refm/api/src/rexml/encodings/SHIFT-JIS.rd")
(find-rurima "--- to_shift_jis(str)" "== Instance Methods" "= reopen REXML::Encoding" "refm/api/src/rexml/encodings/SHIFT-JIS.rd")
(find-rurima "== Constants" "= reopen REXML::Encoding" "refm/api/src/rexml/encodings/SHIFT-JIS.rd")
(find-rurima "--- SJISTOU8" "== Constants" "= reopen REXML::Encoding" "refm/api/src/rexml/encodings/SHIFT-JIS.rd")
(find-rurima "--- U8TOSJIS" "== Constants" "= reopen REXML::Encoding" "refm/api/src/rexml/encodings/SHIFT-JIS.rd")
(find-rurima "= redefine REXML::Encoding" "refm/api/src/rexml/encodings/SHIFT-JIS.rd")
(find-rurima "== Instance Methods" "= redefine REXML::Encoding" "refm/api/src/rexml/encodings/SHIFT-JIS.rd")
(find-rurima "--- decode(content)" "== Instance Methods" "= redefine REXML::Encoding" "refm/api/src/rexml/encodings/SHIFT-JIS.rd")
(find-rurima "--- encode(str)" "== Instance Methods" "= redefine REXML::Encoding" "refm/api/src/rexml/encodings/SHIFT-JIS.rd")
(find-rurima "= class REXML::Validation::ValidationException < RuntimeError" "refm/api/src/rexml/validation/validationexception.rd")
(find-rurima "== Class Methods" "= class REXML::Validation::ValidationException < RuntimeError" "refm/api/src/rexml/validation/validationexception.rd")
(find-rurima "--- new(msg)" "== Class Methods" "= class REXML::Validation::ValidationException < RuntimeError" "refm/api/src/rexml/validation/validationexception.rd")
(find-rurima "= class REXML::Validation::RelaxNG < Object" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "== Class Methods" "= class REXML::Validation::RelaxNG < Object" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "--- new(source)" "== Class Methods" "= class REXML::Validation::RelaxNG < Object" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "== Instance Methods" "= class REXML::Validation::RelaxNG < Object" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "--- current" "== Instance Methods" "= class REXML::Validation::RelaxNG < Object" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "--- current=(value)" "== Instance Methods" "= class REXML::Validation::RelaxNG < Object" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "--- count" "== Instance Methods" "= class REXML::Validation::RelaxNG < Object" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "--- count=(value)" "== Instance Methods" "= class REXML::Validation::RelaxNG < Object" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "--- references" "== Instance Methods" "= class REXML::Validation::RelaxNG < Object" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "--- receive(event)" "== Instance Methods" "= class REXML::Validation::RelaxNG < Object" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "== Constants" "= class REXML::Validation::RelaxNG < Object" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "--- INFINITY" "== Constants" "= class REXML::Validation::RelaxNG < Object" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "--- EMPTY" "== Constants" "= class REXML::Validation::RelaxNG < Object" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "--- TEXT" "== Constants" "= class REXML::Validation::RelaxNG < Object" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "= class REXML::Validation::State < Object" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "== Class Methods" "= class REXML::Validation::State < Object" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "--- new(context)" "== Class Methods" "= class REXML::Validation::State < Object" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "== Instance Methods" "= class REXML::Validation::State < Object" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "--- reset" "== Instance Methods" "= class REXML::Validation::State < Object" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "--- previous=(previous)" "== Instance Methods" "= class REXML::Validation::State < Object" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "--- next(event)" "== Instance Methods" "= class REXML::Validation::State < Object" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "--- to_s" "== Instance Methods" "= class REXML::Validation::State < Object" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "--- inspect" "== Instance Methods" "= class REXML::Validation::State < Object" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "--- expected" "== Instance Methods" "= class REXML::Validation::State < Object" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "--- <<(event)" "== Instance Methods" "= class REXML::Validation::State < Object" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "== Protected Instance Methods" "= class REXML::Validation::State < Object" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "--- expand_ref_in(arry, ind)" "== Protected Instance Methods" "= class REXML::Validation::State < Object" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "--- add_event_to_arry(arry, evt)" "== Protected Instance Methods" "= class REXML::Validation::State < Object" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "--- generate_event(event)" "== Protected Instance Methods" "= class REXML::Validation::State < Object" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "= class REXML::Validation::Sequence < REXML::Validation::State" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "== Instance Methods" "= class REXML::Validation::Sequence < REXML::Validation::State" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "--- matches?(event)" "== Instance Methods" "= class REXML::Validation::Sequence < REXML::Validation::State" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "= class REXML::Validation::Optional < REXML::Validation::State" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "== Instance Methods" "= class REXML::Validation::Optional < REXML::Validation::State" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "--- next(event)" "== Instance Methods" "= class REXML::Validation::Optional < REXML::Validation::State" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "--- matches?(event)" "== Instance Methods" "= class REXML::Validation::Optional < REXML::Validation::State" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "--- expected" "== Instance Methods" "= class REXML::Validation::Optional < REXML::Validation::State" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "= class REXML::Validation::ZeroOrMore < REXML::Validation::Optional" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "== Instance Methods" "= class REXML::Validation::ZeroOrMore < REXML::Validation::Optional" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "--- next(event)" "== Instance Methods" "= class REXML::Validation::ZeroOrMore < REXML::Validation::Optional" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "--- expected" "== Instance Methods" "= class REXML::Validation::ZeroOrMore < REXML::Validation::Optional" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "= class REXML::Validation::OneOrMore < REXML::Validation::State" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "== Class Methods" "= class REXML::Validation::OneOrMore < REXML::Validation::State" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "--- new(context)" "== Class Methods" "= class REXML::Validation::OneOrMore < REXML::Validation::State" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "== Instance Methods" "= class REXML::Validation::OneOrMore < REXML::Validation::State" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "--- reset" "== Instance Methods" "= class REXML::Validation::OneOrMore < REXML::Validation::State" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "--- next(event)" "== Instance Methods" "= class REXML::Validation::OneOrMore < REXML::Validation::State" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "--- matches?(event)" "== Instance Methods" "= class REXML::Validation::OneOrMore < REXML::Validation::State" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "--- expected" "== Instance Methods" "= class REXML::Validation::OneOrMore < REXML::Validation::State" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "= class REXML::Validation::Choice < REXML::Validation::State" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "== Class Methods" "= class REXML::Validation::Choice < REXML::Validation::State" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "--- new(context)" "== Class Methods" "= class REXML::Validation::Choice < REXML::Validation::State" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "== Instance Methods" "= class REXML::Validation::Choice < REXML::Validation::State" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "--- reset" "== Instance Methods" "= class REXML::Validation::Choice < REXML::Validation::State" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "--- <<(event)" "== Instance Methods" "= class REXML::Validation::Choice < REXML::Validation::State" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "--- next(event)" "== Instance Methods" "= class REXML::Validation::Choice < REXML::Validation::State" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "--- matches?(event)" "== Instance Methods" "= class REXML::Validation::Choice < REXML::Validation::State" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "--- expected" "== Instance Methods" "= class REXML::Validation::Choice < REXML::Validation::State" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "--- inspect" "== Instance Methods" "= class REXML::Validation::Choice < REXML::Validation::State" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "== Protected Instance Methods" "= class REXML::Validation::Choice < REXML::Validation::State" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "--- add_event_to_arry(arry, evt)" "== Protected Instance Methods" "= class REXML::Validation::Choice < REXML::Validation::State" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "= class REXML::Validation::Interleave < REXML::Validation::Choice" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "== Class methods" "= class REXML::Validation::Interleave < REXML::Validation::Choice" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "--- new(context)" "== Class methods" "= class REXML::Validation::Interleave < REXML::Validation::Choice" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "== Instance Methods" "= class REXML::Validation::Interleave < REXML::Validation::Choice" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "--- reset" "== Instance Methods" "= class REXML::Validation::Interleave < REXML::Validation::Choice" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "--- next_current(event)" "== Instance Methods" "= class REXML::Validation::Interleave < REXML::Validation::Choice" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "--- next(event)" "== Instance Methods" "= class REXML::Validation::Interleave < REXML::Validation::Choice" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "--- matches?(event)" "== Instance Methods" "= class REXML::Validation::Interleave < REXML::Validation::Choice" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "--- expected" "== Instance Methods" "= class REXML::Validation::Interleave < REXML::Validation::Choice" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "--- inspect" "== Instance Methods" "= class REXML::Validation::Interleave < REXML::Validation::Choice" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "= class REXML::Validation::Ref < Object" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "== Class Methods" "= class REXML::Validation::Ref < Object" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "--- new(value)" "== Class Methods" "= class REXML::Validation::Ref < Object" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "== Instance Methods" "= class REXML::Validation::Ref < Object" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "--- to_s" "== Instance Methods" "= class REXML::Validation::Ref < Object" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "--- inspect" "== Instance Methods" "= class REXML::Validation::Ref < Object" "refm/api/src/rexml/validation/relaxng.rd")
(find-rurima "= module REXML::Validation::Validator" "refm/api/src/rexml/validation/validation.rd")
(find-rurima "== Instance Methods" "= module REXML::Validation::Validator" "refm/api/src/rexml/validation/validation.rd")
(find-rurima "--- reset" "== Instance Methods" "= module REXML::Validation::Validator" "refm/api/src/rexml/validation/validation.rd")
(find-rurima "--- dump" "== Instance Methods" "= module REXML::Validation::Validator" "refm/api/src/rexml/validation/validation.rd")
(find-rurima "--- validate(event)" "== Instance Methods" "= module REXML::Validation::Validator" "refm/api/src/rexml/validation/validation.rd")
(find-rurima "== Constants" "= module REXML::Validation::Validator" "refm/api/src/rexml/validation/validation.rd")
(find-rurima "--- NILEVENT" "== Constants" "= module REXML::Validation::Validator" "refm/api/src/rexml/validation/validation.rd")
(find-rurima "= class REXML::Validation::Event < Object" "refm/api/src/rexml/validation/validation.rd")
(find-rurima "== Class Methods" "= class REXML::Validation::Event < Object" "refm/api/src/rexml/validation/validation.rd")
(find-rurima "--- new(event_type, event_arg = nil)" "== Class Methods" "= class REXML::Validation::Event < Object" "refm/api/src/rexml/validation/validation.rd")
(find-rurima "== Instance Methods" "= class REXML::Validation::Event < Object" "refm/api/src/rexml/validation/validation.rd")
(find-rurima "--- event_type" "== Instance Methods" "= class REXML::Validation::Event < Object" "refm/api/src/rexml/validation/validation.rd")
(find-rurima "--- event_arg" "== Instance Methods" "= class REXML::Validation::Event < Object" "refm/api/src/rexml/validation/validation.rd")
(find-rurima "--- event_arg=(value)" "== Instance Methods" "= class REXML::Validation::Event < Object" "refm/api/src/rexml/validation/validation.rd")
(find-rurima "--- done?" "== Instance Methods" "= class REXML::Validation::Event < Object" "refm/api/src/rexml/validation/validation.rd")
(find-rurima "--- single?" "== Instance Methods" "= class REXML::Validation::Event < Object" "refm/api/src/rexml/validation/validation.rd")
(find-rurima "--- matches?(event)" "== Instance Methods" "= class REXML::Validation::Event < Object" "refm/api/src/rexml/validation/validation.rd")
(find-rurima "--- ==(other)" "== Instance Methods" "= class REXML::Validation::Event < Object" "refm/api/src/rexml/validation/validation.rd")
(find-rurima "--- to_s" "== Instance Methods" "= class REXML::Validation::Event < Object" "refm/api/src/rexml/validation/validation.rd")
(find-rurima "--- inspect" "== Instance Methods" "= class REXML::Validation::Event < Object" "refm/api/src/rexml/validation/validation.rd")
(find-rurima "= module REXML::Namespace" "refm/api/src/rexml/namespace.rd")
(find-rurima "== Instance Methods" "= module REXML::Namespace" "refm/api/src/rexml/namespace.rd")
(find-rurima "--- name" "== Instance Methods" "= module REXML::Namespace" "refm/api/src/rexml/namespace.rd")
(find-rurima "--- local_name" "== Instance Methods" "= module REXML::Namespace" "refm/api/src/rexml/namespace.rd")
(find-rurima "--- expanded_name" "== Instance Methods" "= module REXML::Namespace" "refm/api/src/rexml/namespace.rd")
(find-rurima "--- prefix" "== Instance Methods" "= module REXML::Namespace" "refm/api/src/rexml/namespace.rd")
(find-rurima "--- prefix=(value)" "== Instance Methods" "= module REXML::Namespace" "refm/api/src/rexml/namespace.rd")
(find-rurima "--- name=(name)" "== Instance Methods" "= module REXML::Namespace" "refm/api/src/rexml/namespace.rd")
(find-rurima "--- has_name?(other, ns = nil)" "== Instance Methods" "= module REXML::Namespace" "refm/api/src/rexml/namespace.rd")
(find-rurima "--- fully_expanded_name" "== Instance Methods" "= module REXML::Namespace" "refm/api/src/rexml/namespace.rd")
(find-rurima "== Constants" "= module REXML::Namespace" "refm/api/src/rexml/namespace.rd")
(find-rurima "--- NAMESPLIT" "== Constants" "= module REXML::Namespace" "refm/api/src/rexml/namespace.rd")
(find-rurima "= class REXML::CData < REXML::Text" "refm/api/src/rexml/cdata.rd")
(find-rurima "== Class Methods" "= class REXML::CData < REXML::Text" "refm/api/src/rexml/cdata.rd")
(find-rurima "--- new(first, whitespace = true, parent = nil)" "== Class Methods" "= class REXML::CData < REXML::Text" "refm/api/src/rexml/cdata.rd")
(find-rurima "== Instance Methods" "= class REXML::CData < REXML::Text" "refm/api/src/rexml/cdata.rd")
(find-rurima "--- clone" "== Instance Methods" "= class REXML::CData < REXML::Text" "refm/api/src/rexml/cdata.rd")
(find-rurima "--- to_s" "== Instance Methods" "= class REXML::CData < REXML::Text" "refm/api/src/rexml/cdata.rd")
(find-rurima "--- value" "== Instance Methods" "= class REXML::CData < REXML::Text" "refm/api/src/rexml/cdata.rd")
(find-rurima "--- write(output = $stdout, indent = -1, transitive = false, ie_hack = false)" "== Instance Methods" "= class REXML::CData < REXML::Text" "refm/api/src/rexml/cdata.rd")
(find-rurima "== Constants" "= class REXML::CData < REXML::Text" "refm/api/src/rexml/cdata.rd")
(find-rurima "--- START" "== Constants" "= class REXML::CData < REXML::Text" "refm/api/src/rexml/cdata.rd")
(find-rurima "--- STOP" "== Constants" "= class REXML::CData < REXML::Text" "refm/api/src/rexml/cdata.rd")
(find-rurima "--- ILLEGAL" "== Constants" "= class REXML::CData < REXML::Text" "refm/api/src/rexml/cdata.rd")
(find-rurima "= module REXML::XMLTokens" "refm/api/src/rexml/xmltokens.rd")
(find-rurima "== Constants" "= module REXML::XMLTokens" "refm/api/src/rexml/xmltokens.rd")
(find-rurima "--- NCNAME_STR" "== Constants" "= module REXML::XMLTokens" "refm/api/src/rexml/xmltokens.rd")
(find-rurima "--- NAME_STR" "== Constants" "= module REXML::XMLTokens" "refm/api/src/rexml/xmltokens.rd")
(find-rurima "--- NAMECHAR" "== Constants" "= module REXML::XMLTokens" "refm/api/src/rexml/xmltokens.rd")
(find-rurima "--- NAME" "== Constants" "= module REXML::XMLTokens" "refm/api/src/rexml/xmltokens.rd")
(find-rurima "--- NMTOKEN" "== Constants" "= module REXML::XMLTokens" "refm/api/src/rexml/xmltokens.rd")
(find-rurima "--- NMTOKENS" "== Constants" "= module REXML::XMLTokens" "refm/api/src/rexml/xmltokens.rd")
(find-rurima "--- REFERENCE" "== Constants" "= module REXML::XMLTokens" "refm/api/src/rexml/xmltokens.rd")
(find-rurima "= class REXML::XPath < Object" "refm/api/src/rexml/xpath.rd")
(find-rurima "== Class Methods" "= class REXML::XPath < Object" "refm/api/src/rexml/xpath.rd")
(find-rurima "--- first(element, path = nil, namespaces = {}, variables = {})" "== Class Methods" "= class REXML::XPath < Object" "refm/api/src/rexml/xpath.rd")
(find-rurima "--- each(element, path = nil, namespaces = {}, variables = {}) {|e| ... }" "== Class Methods" "= class REXML::XPath < Object" "refm/api/src/rexml/xpath.rd")
(find-rurima "--- match(element, path = nil, namespaces = {}, variables = {})" "== Class Methods" "= class REXML::XPath < Object" "refm/api/src/rexml/xpath.rd")
(find-rurima "== Constants" "= class REXML::XPath < Object" "refm/api/src/rexml/xpath.rd")
(find-rurima "--- EMPTY_HASH" "== Constants" "= class REXML::XPath < Object" "refm/api/src/rexml/xpath.rd")
(find-rurima "= class REXML::XMLDecl < REXML::Child" "refm/api/src/rexml/xmldecl.rd")
(find-rurima "== Class Methods" "= class REXML::XMLDecl < REXML::Child" "refm/api/src/rexml/xmldecl.rd")
(find-rurima "--- new(version = REXML::XMLDecl::DEFAULT_VERSION, encoding = nil, standalone = nil)" "== Class Methods" "= class REXML::XMLDecl < REXML::Child" "refm/api/src/rexml/xmldecl.rd")
(find-rurima "--- default" "== Class Methods" "= class REXML::XMLDecl < REXML::Child" "refm/api/src/rexml/xmldecl.rd")
(find-rurima "== Instance Methods" "= class REXML::XMLDecl < REXML::Child" "refm/api/src/rexml/xmldecl.rd")
(find-rurima "--- version" "== Instance Methods" "= class REXML::XMLDecl < REXML::Child" "refm/api/src/rexml/xmldecl.rd")
(find-rurima "--- version=(value)" "== Instance Methods" "= class REXML::XMLDecl < REXML::Child" "refm/api/src/rexml/xmldecl.rd")
(find-rurima "--- standalone" "== Instance Methods" "= class REXML::XMLDecl < REXML::Child" "refm/api/src/rexml/xmldecl.rd")
(find-rurima "--- standalone=(value)" "== Instance Methods" "= class REXML::XMLDecl < REXML::Child" "refm/api/src/rexml/xmldecl.rd")
(find-rurima "--- stand_alone?" "== Instance Methods" "= class REXML::XMLDecl < REXML::Child" "refm/api/src/rexml/xmldecl.rd")
(find-rurima "--- writeencoding" "== Instance Methods" "= class REXML::XMLDecl < REXML::Child" "refm/api/src/rexml/xmldecl.rd")
(find-rurima "--- clone" "== Instance Methods" "= class REXML::XMLDecl < REXML::Child" "refm/api/src/rexml/xmldecl.rd")
(find-rurima "--- write(writer, indent = -1, transitive = false, ie_hack = false)" "== Instance Methods" "= class REXML::XMLDecl < REXML::Child" "refm/api/src/rexml/xmldecl.rd")
(find-rurima "--- ==(other)" "== Instance Methods" "= class REXML::XMLDecl < REXML::Child" "refm/api/src/rexml/xmldecl.rd")
(find-rurima "--- xmldecl(version, encoding, standalone)" "== Instance Methods" "= class REXML::XMLDecl < REXML::Child" "refm/api/src/rexml/xmldecl.rd")
(find-rurima "--- node_type" "== Instance Methods" "= class REXML::XMLDecl < REXML::Child" "refm/api/src/rexml/xmldecl.rd")
(find-rurima "--- old_enc=(enc)" "== Instance Methods" "= class REXML::XMLDecl < REXML::Child" "refm/api/src/rexml/xmldecl.rd")
(find-rurima "--- encoding=(enc)" "== Instance Methods" "= class REXML::XMLDecl < REXML::Child" "refm/api/src/rexml/xmldecl.rd")
(find-rurima "--- nowrite" "== Instance Methods" "= class REXML::XMLDecl < REXML::Child" "refm/api/src/rexml/xmldecl.rd")
(find-rurima "--- dowrite" "== Instance Methods" "= class REXML::XMLDecl < REXML::Child" "refm/api/src/rexml/xmldecl.rd")
(find-rurima "--- inspect" "== Instance Methods" "= class REXML::XMLDecl < REXML::Child" "refm/api/src/rexml/xmldecl.rd")
(find-rurima "== Constants" "= class REXML::XMLDecl < REXML::Child" "refm/api/src/rexml/xmldecl.rd")
(find-rurima "--- DEFAULT_VERSION" "== Constants" "= class REXML::XMLDecl < REXML::Child" "refm/api/src/rexml/xmldecl.rd")
(find-rurima "--- DEFAULT_ENCODING" "== Constants" "= class REXML::XMLDecl < REXML::Child" "refm/api/src/rexml/xmldecl.rd")
(find-rurima "--- DEFAULT_STANDALONE" "== Constants" "= class REXML::XMLDecl < REXML::Child" "refm/api/src/rexml/xmldecl.rd")
(find-rurima "--- START" "== Constants" "= class REXML::XMLDecl < REXML::Child" "refm/api/src/rexml/xmldecl.rd")
(find-rurima "--- STOP" "== Constants" "= class REXML::XMLDecl < REXML::Child" "refm/api/src/rexml/xmldecl.rd")
(find-rurima "= class REXML::Text < REXML::Child" "refm/api/src/rexml/text.rd")
(find-rurima "== Class Methods" "= class REXML::Text < REXML::Child" "refm/api/src/rexml/text.rd")
(find-rurima "--- new(arg, respect_whitespace = false, parent = nil, raw = nil, entity_filter = nil, illegal = REXML::Text::ILLEGAL)" "== Class Methods" "= class REXML::Text < REXML::Child" "refm/api/src/rexml/text.rd")
(find-rurima "--- read_with_substitution(input, illegal = nil)" "== Class Methods" "= class REXML::Text < REXML::Child" "refm/api/src/rexml/text.rd")
(find-rurima "--- normalize(input, doctype = nil, entity_filter = nil)" "== Class Methods" "= class REXML::Text < REXML::Child" "refm/api/src/rexml/text.rd")
(find-rurima "--- unnormalize(string, doctype = nil, filter = nil, illegal = nil)" "== Class Methods" "= class REXML::Text < REXML::Child" "refm/api/src/rexml/text.rd")
(find-rurima "== Instance Methods" "= class REXML::Text < REXML::Child" "refm/api/src/rexml/text.rd")
(find-rurima "--- raw" "== Instance Methods" "= class REXML::Text < REXML::Child" "refm/api/src/rexml/text.rd")
(find-rurima "--- raw=(value)" "== Instance Methods" "= class REXML::Text < REXML::Child" "refm/api/src/rexml/text.rd")
(find-rurima "--- node_type" "== Instance Methods" "= class REXML::Text < REXML::Child" "refm/api/src/rexml/text.rd")
(find-rurima "--- empty?" "== Instance Methods" "= class REXML::Text < REXML::Child" "refm/api/src/rexml/text.rd")
(find-rurima "--- clone" "== Instance Methods" "= class REXML::Text < REXML::Child" "refm/api/src/rexml/text.rd")
(find-rurima "--- <<(to_append)" "== Instance Methods" "= class REXML::Text < REXML::Child" "refm/api/src/rexml/text.rd")
(find-rurima "--- <=>(other)" "== Instance Methods" "= class REXML::Text < REXML::Child" "refm/api/src/rexml/text.rd")
(find-rurima "--- to_s" "== Instance Methods" "= class REXML::Text < REXML::Child" "refm/api/src/rexml/text.rd")
(find-rurima "--- inspect" "== Instance Methods" "= class REXML::Text < REXML::Child" "refm/api/src/rexml/text.rd")
(find-rurima "--- value" "== Instance Methods" "= class REXML::Text < REXML::Child" "refm/api/src/rexml/text.rd")
(find-rurima "--- wrap(string, width, addnewline = false)" "== Instance Methods" "= class REXML::Text < REXML::Child" "refm/api/src/rexml/text.rd")
(find-rurima "--- value=(val)" "== Instance Methods" "= class REXML::Text < REXML::Child" "refm/api/src/rexml/text.rd")
(find-rurima "--- indent_text(string, level = 1, style = \"\\t\", indentfirstline = true)" "== Instance Methods" "= class REXML::Text < REXML::Child" "refm/api/src/rexml/text.rd")
(find-rurima "--- write(writer, indent = -1, transitive = false, ie_hack = false)" "== Instance Methods" "= class REXML::Text < REXML::Child" "refm/api/src/rexml/text.rd")
(find-rurima "--- xpath" "== Instance Methods" "= class REXML::Text < REXML::Child" "refm/api/src/rexml/text.rd")
(find-rurima "--- write_with_substitution(out, input)" "== Instance Methods" "= class REXML::Text < REXML::Child" "refm/api/src/rexml/text.rd")
(find-rurima "== Constants" "= class REXML::Text < REXML::Child" "refm/api/src/rexml/text.rd")
(find-rurima "--- SPECIALS" "== Constants" "= class REXML::Text < REXML::Child" "refm/api/src/rexml/text.rd")
(find-rurima "--- SUBSTITUTES" "== Constants" "= class REXML::Text < REXML::Child" "refm/api/src/rexml/text.rd")
(find-rurima "--- SLAICEPS" "== Constants" "= class REXML::Text < REXML::Child" "refm/api/src/rexml/text.rd")
(find-rurima "--- SETUTITSBUS" "== Constants" "= class REXML::Text < REXML::Child" "refm/api/src/rexml/text.rd")
(find-rurima "--- ILLEGAL" "== Constants" "= class REXML::Text < REXML::Child" "refm/api/src/rexml/text.rd")
(find-rurima "--- NUMERICENTITY" "== Constants" "= class REXML::Text < REXML::Child" "refm/api/src/rexml/text.rd")
(find-rurima "--- REFERENCE" "== Constants" "= class REXML::Text < REXML::Child" "refm/api/src/rexml/text.rd")
(find-rurima "--- EREFERENCE" "== Constants" "= class REXML::Text < REXML::Child" "refm/api/src/rexml/text.rd")
(find-rurima "= reopen Object" "refm/api/src/rexml/xpath_parser.rd")
(find-rurima "== Instance Methods" "= reopen Object" "refm/api/src/rexml/xpath_parser.rd")
(find-rurima "--- dclone" "== Instance Methods" "= reopen Object" "refm/api/src/rexml/xpath_parser.rd")
(find-rurima "--- __ne__(b)" "== Instance Methods" "= reopen Object" "refm/api/src/rexml/xpath_parser.rd")
(find-rurima "= reopen Symbol" "refm/api/src/rexml/xpath_parser.rd")
(find-rurima "== Instance Methods" "= reopen Symbol" "refm/api/src/rexml/xpath_parser.rd")
(find-rurima "--- dclone" "== Instance Methods" "= reopen Symbol" "refm/api/src/rexml/xpath_parser.rd")
(find-rurima "= reopen Array" "refm/api/src/rexml/xpath_parser.rd")
(find-rurima "== Instance Methods" "= reopen Array" "refm/api/src/rexml/xpath_parser.rd")
(find-rurima "--- dclone" "== Instance Methods" "= reopen Array" "refm/api/src/rexml/xpath_parser.rd")
(find-rurima "= class REXML::XPathParser < Object" "refm/api/src/rexml/xpath_parser.rd")
(find-rurima "== Class Methods" "= class REXML::XPathParser < Object" "refm/api/src/rexml/xpath_parser.rd")
(find-rurima "--- new" "== Class Methods" "= class REXML::XPathParser < Object" "refm/api/src/rexml/xpath_parser.rd")
(find-rurima "== Instance Methods" "= class REXML::XPathParser < Object" "refm/api/src/rexml/xpath_parser.rd")
(find-rurima "--- namespaces=(namespaces = {})" "== Instance Methods" "= class REXML::XPathParser < Object" "refm/api/src/rexml/xpath_parser.rd")
(find-rurima "--- variables=(vars = {})" "== Instance Methods" "= class REXML::XPathParser < Object" "refm/api/src/rexml/xpath_parser.rd")
(find-rurima "--- parse(path, nodeset)" "== Instance Methods" "= class REXML::XPathParser < Object" "refm/api/src/rexml/xpath_parser.rd")
(find-rurima "--- get_first(path, nodeset)" "== Instance Methods" "= class REXML::XPathParser < Object" "refm/api/src/rexml/xpath_parser.rd")
(find-rurima "--- predicate(path, nodeset)" "== Instance Methods" "= class REXML::XPathParser < Object" "refm/api/src/rexml/xpath_parser.rd")
(find-rurima "--- []=(variable_name, value)" "== Instance Methods" "= class REXML::XPathParser < Object" "refm/api/src/rexml/xpath_parser.rd")
(find-rurima "--- first(path_stack, node)" "== Instance Methods" "= class REXML::XPathParser < Object" "refm/api/src/rexml/xpath_parser.rd")
(find-rurima "--- match(path_stack, nodeset)" "== Instance Methods" "= class REXML::XPathParser < Object" "refm/api/src/rexml/xpath_parser.rd")
(find-rurima "== Constants" "= class REXML::XPathParser < Object" "refm/api/src/rexml/xpath_parser.rd")
(find-rurima "--- LITERAL" "== Constants" "= class REXML::XPathParser < Object" "refm/api/src/rexml/xpath_parser.rd")
(find-rurima "--- ALL" "== Constants" "= class REXML::XPathParser < Object" "refm/api/src/rexml/xpath_parser.rd")
(find-rurima "--- ELEMENTS" "== Constants" "= class REXML::XPathParser < Object" "refm/api/src/rexml/xpath_parser.rd")
(find-rurima "= class REXML::SyncEnumerator < Object" "refm/api/src/rexml/syncenumerator.rd")
(find-rurima "== Class Methods" "= class REXML::SyncEnumerator < Object" "refm/api/src/rexml/syncenumerator.rd")
(find-rurima "--- new(*enums)" "== Class Methods" "= class REXML::SyncEnumerator < Object" "refm/api/src/rexml/syncenumerator.rd")
(find-rurima "== Instance Methods" "= class REXML::SyncEnumerator < Object" "refm/api/src/rexml/syncenumerator.rd")
(find-rurima "--- size" "== Instance Methods" "= class REXML::SyncEnumerator < Object" "refm/api/src/rexml/syncenumerator.rd")
(find-rurima "--- length" "== Instance Methods" "= class REXML::SyncEnumerator < Object" "refm/api/src/rexml/syncenumerator.rd")
(find-rurima "--- each {|*objects| ... }" "== Instance Methods" "= class REXML::SyncEnumerator < Object" "refm/api/src/rexml/syncenumerator.rd")
(find-rurima "= module REXML::Node" "refm/api/src/rexml/node.rd")
(find-rurima "== Instance Methods" "= module REXML::Node" "refm/api/src/rexml/node.rd")
(find-rurima "--- next_sibling_node" "== Instance Methods" "= module REXML::Node" "refm/api/src/rexml/node.rd")
(find-rurima "--- previous_sibling_node" "== Instance Methods" "= module REXML::Node" "refm/api/src/rexml/node.rd")
(find-rurima "--- to_s(indent = -1)" "== Instance Methods" "= module REXML::Node" "refm/api/src/rexml/node.rd")
(find-rurima "--- indent(to, ind)" "== Instance Methods" "= module REXML::Node" "refm/api/src/rexml/node.rd")
(find-rurima "--- parent?" "== Instance Methods" "= module REXML::Node" "refm/api/src/rexml/node.rd")
(find-rurima "--- each_recursive {|node| ... }" "== Instance Methods" "= module REXML::Node" "refm/api/src/rexml/node.rd")
(find-rurima "--- find_first_recursive {|node| ... }" "== Instance Methods" "= module REXML::Node" "refm/api/src/rexml/node.rd")
(find-rurima "--- index_in_parent" "== Instance Methods" "= module REXML::Node" "refm/api/src/rexml/node.rd")
(find-rurima "= class REXML::Comment < REXML::Child" "refm/api/src/rexml/comment.rd")
(find-rurima "== Class Methods" "= class REXML::Comment < REXML::Child" "refm/api/src/rexml/comment.rd")
(find-rurima "--- new(first, second = nil)" "== Class Methods" "= class REXML::Comment < REXML::Child" "refm/api/src/rexml/comment.rd")
(find-rurima "== Instance Methods" "= class REXML::Comment < REXML::Child" "refm/api/src/rexml/comment.rd")
(find-rurima "--- string" "== Instance Methods" "= class REXML::Comment < REXML::Child" "refm/api/src/rexml/comment.rd")
(find-rurima "--- string=(value)" "== Instance Methods" "= class REXML::Comment < REXML::Child" "refm/api/src/rexml/comment.rd")
(find-rurima "--- clone" "== Instance Methods" "= class REXML::Comment < REXML::Child" "refm/api/src/rexml/comment.rd")
(find-rurima "--- write(output, indent = -1, transitive = false, ie_hack = false)" "== Instance Methods" "= class REXML::Comment < REXML::Child" "refm/api/src/rexml/comment.rd")
(find-rurima "--- to_s" "== Instance Methods" "= class REXML::Comment < REXML::Child" "refm/api/src/rexml/comment.rd")
(find-rurima "--- <=>(other)" "== Instance Methods" "= class REXML::Comment < REXML::Child" "refm/api/src/rexml/comment.rd")
(find-rurima "--- ==(other)" "== Instance Methods" "= class REXML::Comment < REXML::Child" "refm/api/src/rexml/comment.rd")
(find-rurima "--- node_type" "== Instance Methods" "= class REXML::Comment < REXML::Child" "refm/api/src/rexml/comment.rd")
(find-rurima "== Constants" "= class REXML::Comment < REXML::Child" "refm/api/src/rexml/comment.rd")
(find-rurima "--- START" "== Constants" "= class REXML::Comment < REXML::Child" "refm/api/src/rexml/comment.rd")
(find-rurima "--- STOP" "== Constants" "= class REXML::Comment < REXML::Child" "refm/api/src/rexml/comment.rd")
(find-rurima "= module REXML::Encoding" "refm/api/src/rexml/encoding.rd")
(find-rurima "== Class Methods" "= module REXML::Encoding" "refm/api/src/rexml/encoding.rd")
(find-rurima "--- register(enc) {|obj| ... }" "== Class Methods" "= module REXML::Encoding" "refm/api/src/rexml/encoding.rd")
(find-rurima "--- apply(obj, enc)" "== Class Methods" "= module REXML::Encoding" "refm/api/src/rexml/encoding.rd")
(find-rurima "--- encoding_method(enc)" "== Class Methods" "= module REXML::Encoding" "refm/api/src/rexml/encoding.rd")
(find-rurima "--- claim(encoding_str, match = nil)" "== Class Methods" "= module REXML::Encoding" "refm/api/src/rexml/encoding.rd")
(find-rurima "== Instance Methods" "= module REXML::Encoding" "refm/api/src/rexml/encoding.rd")
(find-rurima "--- encoding" "== Instance Methods" "= module REXML::Encoding" "refm/api/src/rexml/encoding.rd")
(find-rurima "--- encoding=(euc)" "== Instance Methods" "= module REXML::Encoding" "refm/api/src/rexml/encoding.rd")
(find-rurima "--- check_encoding(str)" "== Instance Methods" "= module REXML::Encoding" "refm/api/src/rexml/encoding.rd")
(find-rurima "--- from_utf_8(content)" "== Instance Methods" "= module REXML::Encoding" "refm/api/src/rexml/encoding.rd")
(find-rurima "--- to_utf_8(str)" "== Instance Methods" "= module REXML::Encoding" "refm/api/src/rexml/encoding.rd")
(find-rurima "== Constants" "= module REXML::Encoding" "refm/api/src/rexml/encoding.rd")
(find-rurima "--- UTF_8" "== Constants" "= module REXML::Encoding" "refm/api/src/rexml/encoding.rd")
(find-rurima "--- UTF_16" "== Constants" "= module REXML::Encoding" "refm/api/src/rexml/encoding.rd")
(find-rurima "--- UNILE" "== Constants" "= module REXML::Encoding" "refm/api/src/rexml/encoding.rd")
(find-rurima "--- ENCODING_CLAIM" "== Constants" "= module REXML::Encoding" "refm/api/src/rexml/encoding.rd")
(find-rurima "--- EUC_JP" "== Constants" "= module REXML::Encoding" "refm/api/src/rexml/encoding.rd")
(find-rurima "--- ISO_8859_1" "== Constants" "= module REXML::Encoding" "refm/api/src/rexml/encoding.rd")
(find-rurima "--- UNILE" "== Constants" "= module REXML::Encoding" "refm/api/src/rexml/encoding.rd")
(find-rurima "--- US_ASCII" "== Constants" "= module REXML::Encoding" "refm/api/src/rexml/encoding.rd")
(find-rurima "= module REXML::Encodingses" "refm/api/src/rexml/encoding.rd")
(find-rurima "= class REXML::AttlistDecl < REXML::Child" "refm/api/src/rexml/attlistdecl.rd")
(find-rurima "== Class Methods" "= class REXML::AttlistDecl < REXML::Child" "refm/api/src/rexml/attlistdecl.rd")
(find-rurima "--- new(source)" "== Class Methods" "= class REXML::AttlistDecl < REXML::Child" "refm/api/src/rexml/attlistdecl.rd")
(find-rurima "== Instance Methods" "= class REXML::AttlistDecl < REXML::Child" "refm/api/src/rexml/attlistdecl.rd")
(find-rurima "--- [](key)" "== Instance Methods" "= class REXML::AttlistDecl < REXML::Child" "refm/api/src/rexml/attlistdecl.rd")
(find-rurima "--- each {|name, value| ... }" "== Instance Methods" "= class REXML::AttlistDecl < REXML::Child" "refm/api/src/rexml/attlistdecl.rd")
(find-rurima "--- element_name" "== Instance Methods" "= class REXML::AttlistDecl < REXML::Child" "refm/api/src/rexml/attlistdecl.rd")
(find-rurima "--- include?(key)" "== Instance Methods" "= class REXML::AttlistDecl < REXML::Child" "refm/api/src/rexml/attlistdecl.rd")
(find-rurima "--- node_type" "== Instance Methods" "= class REXML::AttlistDecl < REXML::Child" "refm/api/src/rexml/attlistdecl.rd")
(find-rurima "--- write(out, indent = -1)" "== Instance Methods" "= class REXML::AttlistDecl < REXML::Child" "refm/api/src/rexml/attlistdecl.rd")
(find-rurima "= class REXML::Document < REXML::Element" "refm/api/src/rexml/document.rd")
(find-rurima "== Class Methods" "= class REXML::Document < REXML::Element" "refm/api/src/rexml/document.rd")
(find-rurima "--- new(source = nil, context = {})" "== Class Methods" "= class REXML::Document < REXML::Element" "refm/api/src/rexml/document.rd")
(find-rurima "--- parse_stream(source, listener)" "== Class Methods" "= class REXML::Document < REXML::Element" "refm/api/src/rexml/document.rd")
(find-rurima "== Instance Methods" "= class REXML::Document < REXML::Element" "refm/api/src/rexml/document.rd")
(find-rurima "--- node_type" "== Instance Methods" "= class REXML::Document < REXML::Element" "refm/api/src/rexml/document.rd")
(find-rurima "--- clone" "== Instance Methods" "= class REXML::Document < REXML::Element" "refm/api/src/rexml/document.rd")
(find-rurima "--- expanded_name" "== Instance Methods" "= class REXML::Document < REXML::Element" "refm/api/src/rexml/document.rd")
(find-rurima "--- name" "== Instance Methods" "= class REXML::Document < REXML::Element" "refm/api/src/rexml/document.rd")
(find-rurima "--- add(child)" "== Instance Methods" "= class REXML::Document < REXML::Element" "refm/api/src/rexml/document.rd")
(find-rurima "--- <<(child)" "== Instance Methods" "= class REXML::Document < REXML::Element" "refm/api/src/rexml/document.rd")
(find-rurima "--- add_element(arg = nil, arg2 = nil)" "== Instance Methods" "= class REXML::Document < REXML::Element" "refm/api/src/rexml/document.rd")
(find-rurima "--- root" "== Instance Methods" "= class REXML::Document < REXML::Element" "refm/api/src/rexml/document.rd")
(find-rurima "--- doctype" "== Instance Methods" "= class REXML::Document < REXML::Element" "refm/api/src/rexml/document.rd")
(find-rurima "--- xml_decl" "== Instance Methods" "= class REXML::Document < REXML::Element" "refm/api/src/rexml/document.rd")
(find-rurima "--- version" "== Instance Methods" "= class REXML::Document < REXML::Element" "refm/api/src/rexml/document.rd")
(find-rurima "--- encoding" "== Instance Methods" "= class REXML::Document < REXML::Element" "refm/api/src/rexml/document.rd")
(find-rurima "--- stand_alone?" "== Instance Methods" "= class REXML::Document < REXML::Element" "refm/api/src/rexml/document.rd")
(find-rurima "--- write(output = $stdout, indent = -1, transitive = false, ie_hack = false)" "== Instance Methods" "= class REXML::Document < REXML::Element" "refm/api/src/rexml/document.rd")
(find-rurima "== Constants" "= class REXML::Document < REXML::Element" "refm/api/src/rexml/document.rd")
(find-rurima "--- DECLARATION" "== Constants" "= class REXML::Document < REXML::Element" "refm/api/src/rexml/document.rd")
(find-rurima "= class REXML::ParseException < RuntimeError" "refm/api/src/rexml/parseexception.rd")
(find-rurima "== Class Methods" "= class REXML::ParseException < RuntimeError" "refm/api/src/rexml/parseexception.rd")
(find-rurima "--- new(message source = nil, parser = nil, exception = nil)" "== Class Methods" "= class REXML::ParseException < RuntimeError" "refm/api/src/rexml/parseexception.rd")
(find-rurima "== Instance Methods" "= class REXML::ParseException < RuntimeError" "refm/api/src/rexml/parseexception.rd")
(find-rurima "--- source" "== Instance Methods" "= class REXML::ParseException < RuntimeError" "refm/api/src/rexml/parseexception.rd")
(find-rurima "--- source=(value)" "== Instance Methods" "= class REXML::ParseException < RuntimeError" "refm/api/src/rexml/parseexception.rd")
(find-rurima "--- parser" "== Instance Methods" "= class REXML::ParseException < RuntimeError" "refm/api/src/rexml/parseexception.rd")
(find-rurima "--- parser=(value)" "== Instance Methods" "= class REXML::ParseException < RuntimeError" "refm/api/src/rexml/parseexception.rd")
(find-rurima "--- continued_exception" "== Instance Methods" "= class REXML::ParseException < RuntimeError" "refm/api/src/rexml/parseexception.rd")
(find-rurima "--- continued_exception=(value)" "== Instance Methods" "= class REXML::ParseException < RuntimeError" "refm/api/src/rexml/parseexception.rd")
(find-rurima "--- to_s" "== Instance Methods" "= class REXML::ParseException < RuntimeError" "refm/api/src/rexml/parseexception.rd")
(find-rurima "--- position" "== Instance Methods" "= class REXML::ParseException < RuntimeError" "refm/api/src/rexml/parseexception.rd")
(find-rurima "--- line" "== Instance Methods" "= class REXML::ParseException < RuntimeError" "refm/api/src/rexml/parseexception.rd")
(find-rurima "--- context" "== Instance Methods" "= class REXML::ParseException < RuntimeError" "refm/api/src/rexml/parseexception.rd")
(find-rurima "= class REXML::DocType < REXML::Parent" "refm/api/src/rexml/doctype.rd")
(find-rurima "== Class Methods" "= class REXML::DocType < REXML::Parent" "refm/api/src/rexml/doctype.rd")
(find-rurima "--- new(first, parent = nil)" "== Class Methods" "= class REXML::DocType < REXML::Parent" "refm/api/src/rexml/doctype.rd")
(find-rurima "== Instance Methods" "= class REXML::DocType < REXML::Parent" "refm/api/src/rexml/doctype.rd")
(find-rurima "--- name" "== Instance Methods" "= class REXML::DocType < REXML::Parent" "refm/api/src/rexml/doctype.rd")
(find-rurima "--- external_id" "== Instance Methods" "= class REXML::DocType < REXML::Parent" "refm/api/src/rexml/doctype.rd")
(find-rurima "--- entities" "== Instance Methods" "= class REXML::DocType < REXML::Parent" "refm/api/src/rexml/doctype.rd")
(find-rurima "--- namespaces" "== Instance Methods" "= class REXML::DocType < REXML::Parent" "refm/api/src/rexml/doctype.rd")
(find-rurima "--- node_type" "== Instance Methods" "= class REXML::DocType < REXML::Parent" "refm/api/src/rexml/doctype.rd")
(find-rurima "--- attributes_of(element)" "== Instance Methods" "= class REXML::DocType < REXML::Parent" "refm/api/src/rexml/doctype.rd")
(find-rurima "--- attribute_of(element, attribute)" "== Instance Methods" "= class REXML::DocType < REXML::Parent" "refm/api/src/rexml/doctype.rd")
(find-rurima "--- clone" "== Instance Methods" "= class REXML::DocType < REXML::Parent" "refm/api/src/rexml/doctype.rd")
(find-rurima "--- write(output, indent = 0, transitive = false, ie_hack = false)" "== Instance Methods" "= class REXML::DocType < REXML::Parent" "refm/api/src/rexml/doctype.rd")
(find-rurima "--- context" "== Instance Methods" "= class REXML::DocType < REXML::Parent" "refm/api/src/rexml/doctype.rd")
(find-rurima "--- entity(name)" "== Instance Methods" "= class REXML::DocType < REXML::Parent" "refm/api/src/rexml/doctype.rd")
(find-rurima "--- add(child)" "== Instance Methods" "= class REXML::DocType < REXML::Parent" "refm/api/src/rexml/doctype.rd")
(find-rurima "--- public" "== Instance Methods" "= class REXML::DocType < REXML::Parent" "refm/api/src/rexml/doctype.rd")
(find-rurima "--- system" "== Instance Methods" "= class REXML::DocType < REXML::Parent" "refm/api/src/rexml/doctype.rd")
(find-rurima "--- notations" "== Instance Methods" "= class REXML::DocType < REXML::Parent" "refm/api/src/rexml/doctype.rd")
(find-rurima "--- notation(name)" "== Instance Methods" "= class REXML::DocType < REXML::Parent" "refm/api/src/rexml/doctype.rd")
(find-rurima "== Constants" "= class REXML::DocType < REXML::Parent" "refm/api/src/rexml/doctype.rd")
(find-rurima "--- START" "== Constants" "= class REXML::DocType < REXML::Parent" "refm/api/src/rexml/doctype.rd")
(find-rurima "--- STOP" "== Constants" "= class REXML::DocType < REXML::Parent" "refm/api/src/rexml/doctype.rd")
(find-rurima "--- SYSTEM" "== Constants" "= class REXML::DocType < REXML::Parent" "refm/api/src/rexml/doctype.rd")
(find-rurima "--- PUBLIC" "== Constants" "= class REXML::DocType < REXML::Parent" "refm/api/src/rexml/doctype.rd")
(find-rurima "--- DEFAULT_ENTITIES" "== Constants" "= class REXML::DocType < REXML::Parent" "refm/api/src/rexml/doctype.rd")
(find-rurima "= class REXML::Declaration < REXML::Child" "refm/api/src/rexml/doctype.rd")
(find-rurima "== Class Methods" "= class REXML::Declaration < REXML::Child" "refm/api/src/rexml/doctype.rd")
(find-rurima "--- new(src)" "== Class Methods" "= class REXML::Declaration < REXML::Child" "refm/api/src/rexml/doctype.rd")
(find-rurima "== Instance Methods" "= class REXML::Declaration < REXML::Child" "refm/api/src/rexml/doctype.rd")
(find-rurima "--- to_s" "== Instance Methods" "= class REXML::Declaration < REXML::Child" "refm/api/src/rexml/doctype.rd")
(find-rurima "--- write(output, indent)" "== Instance Methods" "= class REXML::Declaration < REXML::Child" "refm/api/src/rexml/doctype.rd")
(find-rurima "= class REXML::ElementDecl < REXML::Declaration" "refm/api/src/rexml/doctype.rd")
(find-rurima "== Class Methods" "= class REXML::ElementDecl < REXML::Declaration" "refm/api/src/rexml/doctype.rd")
(find-rurima "--- new(src)" "== Class Methods" "= class REXML::ElementDecl < REXML::Declaration" "refm/api/src/rexml/doctype.rd")
(find-rurima "= class REXML::ExternalEntity < REXML::Child" "refm/api/src/rexml/doctype.rd")
(find-rurima "== Class Methods" "= class REXML::ExternalEntity < REXML::Child" "refm/api/src/rexml/doctype.rd")
(find-rurima "--- new(src)" "== Class Methods" "= class REXML::ExternalEntity < REXML::Child" "refm/api/src/rexml/doctype.rd")
(find-rurima "== Instance Methods" "= class REXML::ExternalEntity < REXML::Child" "refm/api/src/rexml/doctype.rd")
(find-rurima "--- to_s" "== Instance Methods" "= class REXML::ExternalEntity < REXML::Child" "refm/api/src/rexml/doctype.rd")
(find-rurima "--- write(output, indent)" "== Instance Methods" "= class REXML::ExternalEntity < REXML::Child" "refm/api/src/rexml/doctype.rd")
(find-rurima "= class REXML::NotationDecl < REXML::Child" "refm/api/src/rexml/doctype.rd")
(find-rurima "== Class Methods" "= class REXML::NotationDecl < REXML::Child" "refm/api/src/rexml/doctype.rd")
(find-rurima "--- new(name, middle, pub, sys)" "== Class Methods" "= class REXML::NotationDecl < REXML::Child" "refm/api/src/rexml/doctype.rd")
(find-rurima "== Instance Methods" "= class REXML::NotationDecl < REXML::Child" "refm/api/src/rexml/doctype.rd")
(find-rurima "--- public" "== Instance Methods" "= class REXML::NotationDecl < REXML::Child" "refm/api/src/rexml/doctype.rd")
(find-rurima "--- public=(value)" "== Instance Methods" "= class REXML::NotationDecl < REXML::Child" "refm/api/src/rexml/doctype.rd")
(find-rurima "--- system" "== Instance Methods" "= class REXML::NotationDecl < REXML::Child" "refm/api/src/rexml/doctype.rd")
(find-rurima "--- system=(value)" "== Instance Methods" "= class REXML::NotationDecl < REXML::Child" "refm/api/src/rexml/doctype.rd")
(find-rurima "--- to_s" "== Instance Methods" "= class REXML::NotationDecl < REXML::Child" "refm/api/src/rexml/doctype.rd")
(find-rurima "--- write(output, indent = -1)" "== Instance Methods" "= class REXML::NotationDecl < REXML::Child" "refm/api/src/rexml/doctype.rd")
(find-rurima "--- name" "== Instance Methods" "= class REXML::NotationDecl < REXML::Child" "refm/api/src/rexml/doctype.rd")
(find-rurima "= class REXML::Parent < REXML::Child" "refm/api/src/rexml/parent.rd")
(find-rurima "== Class Methods" "= class REXML::Parent < REXML::Child" "refm/api/src/rexml/parent.rd")
(find-rurima "--- new(parent = nil)" "== Class Methods" "= class REXML::Parent < REXML::Child" "refm/api/src/rexml/parent.rd")
(find-rurima "== Instance Methods" "= class REXML::Parent < REXML::Child" "refm/api/src/rexml/parent.rd")
(find-rurima "--- add(object)" "== Instance Methods" "= class REXML::Parent < REXML::Child" "refm/api/src/rexml/parent.rd")
(find-rurima "--- push(object)" "== Instance Methods" "= class REXML::Parent < REXML::Child" "refm/api/src/rexml/parent.rd")
(find-rurima "--- <<(object)" "== Instance Methods" "= class REXML::Parent < REXML::Child" "refm/api/src/rexml/parent.rd")
(find-rurima "--- unshift(object)" "== Instance Methods" "= class REXML::Parent < REXML::Child" "refm/api/src/rexml/parent.rd")
(find-rurima "--- delete(object)" "== Instance Methods" "= class REXML::Parent < REXML::Child" "refm/api/src/rexml/parent.rd")
(find-rurima "--- each {|object| ... }" "== Instance Methods" "= class REXML::Parent < REXML::Child" "refm/api/src/rexml/parent.rd")
(find-rurima "--- each_child {|object| ... }" "== Instance Methods" "= class REXML::Parent < REXML::Child" "refm/api/src/rexml/parent.rd")
(find-rurima "--- delete_if {|object| ... }" "== Instance Methods" "= class REXML::Parent < REXML::Child" "refm/api/src/rexml/parent.rd")
(find-rurima "--- delete_at(index)" "== Instance Methods" "= class REXML::Parent < REXML::Child" "refm/api/src/rexml/parent.rd")
(find-rurima "--- each_index {|index| ... }" "== Instance Methods" "= class REXML::Parent < REXML::Child" "refm/api/src/rexml/parent.rd")
(find-rurima "--- [](index)" "== Instance Methods" "= class REXML::Parent < REXML::Child" "refm/api/src/rexml/parent.rd")
(find-rurima "--- []=(*args)" "== Instance Methods" "= class REXML::Parent < REXML::Child" "refm/api/src/rexml/parent.rd")
(find-rurima "--- insert_before(child1, child2)" "== Instance Methods" "= class REXML::Parent < REXML::Child" "refm/api/src/rexml/parent.rd")
(find-rurima "--- insert_after(child1, child2)" "== Instance Methods" "= class REXML::Parent < REXML::Child" "refm/api/src/rexml/parent.rd")
(find-rurima "--- to_a" "== Instance Methods" "= class REXML::Parent < REXML::Child" "refm/api/src/rexml/parent.rd")
(find-rurima "--- children" "== Instance Methods" "= class REXML::Parent < REXML::Child" "refm/api/src/rexml/parent.rd")
(find-rurima "--- index(child)" "== Instance Methods" "= class REXML::Parent < REXML::Child" "refm/api/src/rexml/parent.rd")
(find-rurima "--- size" "== Instance Methods" "= class REXML::Parent < REXML::Child" "refm/api/src/rexml/parent.rd")
(find-rurima "--- length" "== Instance Methods" "= class REXML::Parent < REXML::Child" "refm/api/src/rexml/parent.rd")
(find-rurima "--- replace_child(to_replace, replacement)" "== Instance Methods" "= class REXML::Parent < REXML::Child" "refm/api/src/rexml/parent.rd")
(find-rurima "--- deep_clone" "== Instance Methods" "= class REXML::Parent < REXML::Child" "refm/api/src/rexml/parent.rd")
(find-rurima "--- parent?" "== Instance Methods" "= class REXML::Parent < REXML::Child" "refm/api/src/rexml/parent.rd")
(find-rurima "= class REXML::Light::Node" "refm/api/src/rexml/light/node.rd")
(find-rurima "== Class Methods" "= class REXML::Light::Node" "refm/api/src/rexml/light/node.rd")
(find-rurima "--- new(node = nil)" "== Class Methods" "= class REXML::Light::Node" "refm/api/src/rexml/light/node.rd")
(find-rurima "== Instance Methods" "= class REXML::Light::Node" "refm/api/src/rexml/light/node.rd")
(find-rurima "--- size" "== Instance Methods" "= class REXML::Light::Node" "refm/api/src/rexml/light/node.rd")
(find-rurima "--- each {|x| ... }" "== Instance Methods" "= class REXML::Light::Node" "refm/api/src/rexml/light/node.rd")
(find-rurima "--- name" "== Instance Methods" "= class REXML::Light::Node" "refm/api/src/rexml/light/node.rd")
(find-rurima "--- name=(name_str, ns = nil)" "== Instance Methods" "= class REXML::Light::Node" "refm/api/src/rexml/light/node.rd")
(find-rurima "--- parent=(node)" "== Instance Methods" "= class REXML::Light::Node" "refm/api/src/rexml/light/node.rd")
(find-rurima "--- local_name" "== Instance Methods" "= class REXML::Light::Node" "refm/api/src/rexml/light/node.rd")
(find-rurima "--- local_name=(name_str)" "== Instance Methods" "= class REXML::Light::Node" "refm/api/src/rexml/light/node.rd")
(find-rurima "--- prefix(namespace = nil)" "== Instance Methods" "= class REXML::Light::Node" "refm/api/src/rexml/light/node.rd")
(find-rurima "--- namespace(prefix = prefix())" "== Instance Methods" "= class REXML::Light::Node" "refm/api/src/rexml/light/node.rd")
(find-rurima "--- namespace=(namespace)" "== Instance Methods" "= class REXML::Light::Node" "refm/api/src/rexml/light/node.rd")
(find-rurima "--- [](reference, ns = nil)" "== Instance Methods" "= class REXML::Light::Node" "refm/api/src/rexml/light/node.rd")
(find-rurima "--- _old_get(reference, ns = nil)" "== Instance Methods" "= class REXML::Light::Node" "refm/api/src/rexml/light/node.rd")
(find-rurima "--- =~(path)" "== Instance Methods" "= class REXML::Light::Node" "refm/api/src/rexml/light/node.rd")
(find-rurima "--- []=(reference, ns, value = nil)" "== Instance Methods" "= class REXML::Light::Node" "refm/api/src/rexml/light/node.rd")
(find-rurima "--- _old_put(reference, ns, value = nil)" "== Instance Methods" "= class REXML::Light::Node" "refm/api/src/rexml/light/node.rd")
(find-rurima "--- <<(element)" "== Instance Methods" "= class REXML::Light::Node" "refm/api/src/rexml/light/node.rd")
(find-rurima "--- node_type" "== Instance Methods" "= class REXML::Light::Node" "refm/api/src/rexml/light/node.rd")
(find-rurima "--- text=(foo)" "== Instance Methods" "= class REXML::Light::Node" "refm/api/src/rexml/light/node.rd")
(find-rurima "--- root" "== Instance Methods" "= class REXML::Light::Node" "refm/api/src/rexml/light/node.rd")
(find-rurima "--- has_name?" "== Instance Methods" "= class REXML::Light::Node" "refm/api/src/rexml/light/node.rd")
(find-rurima "--- children" "== Instance Methods" "= class REXML::Light::Node" "refm/api/src/rexml/light/node.rd")
(find-rurima "--- parent" "== Instance Methods" "= class REXML::Light::Node" "refm/api/src/rexml/light/node.rd")
(find-rurima "--- to_s" "== Instance Methods" "= class REXML::Light::Node" "refm/api/src/rexml/light/node.rd")
(find-rurima "--- el!" "== Instance Methods" "= class REXML::Light::Node" "refm/api/src/rexml/light/node.rd")
(find-rurima "== Constants" "= class REXML::Light::Node" "refm/api/src/rexml/light/node.rd")
(find-rurima "--- NAMESPLIT" "== Constants" "= class REXML::Light::Node" "refm/api/src/rexml/light/node.rd")
(find-rurima "--- PARENTS" "== Constants" "= class REXML::Light::Node" "refm/api/src/rexml/light/node.rd")
(find-rurima "= class Mutex < Object" "refm/api/src/thread/Mutex")
(find-rurima "== Class Methods" "= class Mutex < Object" "refm/api/src/thread/Mutex")
(find-rurima "--- new -> Mutex" "== Class Methods" "= class Mutex < Object" "refm/api/src/thread/Mutex")
(find-rurima "== Instance Methods" "= class Mutex < Object" "refm/api/src/thread/Mutex")
(find-rurima "--- exclusive_unlock { ... } -> self | nil" "== Instance Methods" "= class Mutex < Object" "refm/api/src/thread/Mutex")
(find-rurima "--- lock -> self" "== Instance Methods" "= class Mutex < Object" "refm/api/src/thread/Mutex")
(find-rurima "--- locked? -> bool" "== Instance Methods" "= class Mutex < Object" "refm/api/src/thread/Mutex")
(find-rurima "--- synchronize { ... } -> object" "== Instance Methods" "= class Mutex < Object" "refm/api/src/thread/Mutex")
(find-rurima "--- try_lock -> bool" "== Instance Methods" "= class Mutex < Object" "refm/api/src/thread/Mutex")
(find-rurima "--- unlock     -> self | nil" "== Instance Methods" "= class Mutex < Object" "refm/api/src/thread/Mutex")
(find-rurima "--- sleep(timeout = nil)    -> self" "== Instance Methods" "= class Mutex < Object" "refm/api/src/thread/Mutex")
(find-rurima "= class SizedQueue < Queue" "refm/api/src/thread/SizedQueue")
(find-rurima "=== 例" "= class SizedQueue < Queue" "refm/api/src/thread/SizedQueue")
(find-rurima "== Class Methods" "= class SizedQueue < Queue" "refm/api/src/thread/SizedQueue")
(find-rurima "--- new(max) -> SizedQueue" "== Class Methods" "= class SizedQueue < Queue" "refm/api/src/thread/SizedQueue")
(find-rurima "== Instance Methods" "= class SizedQueue < Queue" "refm/api/src/thread/SizedQueue")
(find-rurima "--- max -> Fixnum" "== Instance Methods" "= class SizedQueue < Queue" "refm/api/src/thread/SizedQueue")
(find-rurima "--- max=(n)" "== Instance Methods" "= class SizedQueue < Queue" "refm/api/src/thread/SizedQueue")
(find-rurima "--- push(obj) -> ()" "== Instance Methods" "= class SizedQueue < Queue" "refm/api/src/thread/SizedQueue")
(find-rurima "--- <<(obj)   -> ()" "== Instance Methods" "= class SizedQueue < Queue" "refm/api/src/thread/SizedQueue")
(find-rurima "--- enq(obj)  -> ()" "== Instance Methods" "= class SizedQueue < Queue" "refm/api/src/thread/SizedQueue")
(find-rurima "--- pop(non_block = false)   -> object" "== Instance Methods" "= class SizedQueue < Queue" "refm/api/src/thread/SizedQueue")
(find-rurima "--- shift(non_block = false) -> object" "== Instance Methods" "= class SizedQueue < Queue" "refm/api/src/thread/SizedQueue")
(find-rurima "--- deq(non_block = false)   -> object" "== Instance Methods" "= class SizedQueue < Queue" "refm/api/src/thread/SizedQueue")
(find-rurima "= class ConditionVariable < Object" "refm/api/src/thread/ConditionVariable")
(find-rurima "=== Condition Variable とは" "= class ConditionVariable < Object" "refm/api/src/thread/ConditionVariable")
(find-rurima "== Class Methods" "= class ConditionVariable < Object" "refm/api/src/thread/ConditionVariable")
(find-rurima "--- new -> ConditionVariable" "== Class Methods" "= class ConditionVariable < Object" "refm/api/src/thread/ConditionVariable")
(find-rurima "== Instance Methods" "= class ConditionVariable < Object" "refm/api/src/thread/ConditionVariable")
(find-rurima "--- broadcast -> [Thread]" "== Instance Methods" "= class ConditionVariable < Object" "refm/api/src/thread/ConditionVariable")
(find-rurima "--- signal -> Thread | nil" "== Instance Methods" "= class ConditionVariable < Object" "refm/api/src/thread/ConditionVariable")
(find-rurima "--- wait(mutex) -> self" "== Instance Methods" "= class ConditionVariable < Object" "refm/api/src/thread/ConditionVariable")
(find-rurima "= class Queue < Object" "refm/api/src/thread/Queue")
(find-rurima "=== 例" "= class Queue < Object" "refm/api/src/thread/Queue")
(find-rurima "== Class Methods" "= class Queue < Object" "refm/api/src/thread/Queue")
(find-rurima "--- new -> Queue" "== Class Methods" "= class Queue < Object" "refm/api/src/thread/Queue")
(find-rurima "== Instance methods" "= class Queue < Object" "refm/api/src/thread/Queue")
(find-rurima "--- clear -> ()" "== Instance methods" "= class Queue < Object" "refm/api/src/thread/Queue")
(find-rurima "--- empty? -> bool" "== Instance methods" "= class Queue < Object" "refm/api/src/thread/Queue")
(find-rurima "--- length -> Fixnum" "== Instance methods" "= class Queue < Object" "refm/api/src/thread/Queue")
(find-rurima "--- size -> Fixnum" "== Instance methods" "= class Queue < Object" "refm/api/src/thread/Queue")
(find-rurima "--- num_waiting -> Fixnum" "== Instance methods" "= class Queue < Object" "refm/api/src/thread/Queue")
(find-rurima "--- pop(non_block = false) -> object" "== Instance methods" "= class Queue < Object" "refm/api/src/thread/Queue")
(find-rurima "--- shift(non_block = false) -> object" "== Instance methods" "= class Queue < Object" "refm/api/src/thread/Queue")
(find-rurima "--- deq(non_block = false) -> object" "== Instance methods" "= class Queue < Object" "refm/api/src/thread/Queue")
(find-rurima "--- push(value) -> ()" "== Instance methods" "= class Queue < Object" "refm/api/src/thread/Queue")
(find-rurima "--- <<(value)   -> ()" "== Instance methods" "= class Queue < Object" "refm/api/src/thread/Queue")
(find-rurima "--- enq(value)  -> ()" "== Instance methods" "= class Queue < Object" "refm/api/src/thread/Queue")
(find-rurima "= class Generator < Object" "refm/api/src/generator.rd")
(find-rurima "== Class Methods" "= class Generator < Object" "refm/api/src/generator.rd")
(find-rurima "--- new(enum = nil) -> Generator" "== Class Methods" "= class Generator < Object" "refm/api/src/generator.rd")
(find-rurima "--- new(enum = nil) {|g|  ... } -> Generator" "== Class Methods" "= class Generator < Object" "refm/api/src/generator.rd")
(find-rurima "== Instance Methods" "= class Generator < Object" "refm/api/src/generator.rd")
(find-rurima "--- current -> object" "== Instance Methods" "= class Generator < Object" "refm/api/src/generator.rd")
(find-rurima "--- each {|e| ... } -> self" "== Instance Methods" "= class Generator < Object" "refm/api/src/generator.rd")
(find-rurima "--- end? -> bool" "== Instance Methods" "= class Generator < Object" "refm/api/src/generator.rd")
(find-rurima "--- index -> Integer" "== Instance Methods" "= class Generator < Object" "refm/api/src/generator.rd")
(find-rurima "--- pos   -> Integer" "== Instance Methods" "= class Generator < Object" "refm/api/src/generator.rd")
(find-rurima "--- next -> object" "== Instance Methods" "= class Generator < Object" "refm/api/src/generator.rd")
(find-rurima "--- next? -> bool" "== Instance Methods" "= class Generator < Object" "refm/api/src/generator.rd")
(find-rurima "--- rewind -> self" "== Instance Methods" "= class Generator < Object" "refm/api/src/generator.rd")
(find-rurima "--- yield(val) -> self" "== Instance Methods" "= class Generator < Object" "refm/api/src/generator.rd")
(find-rurima "= class SyncEnumerator < Object" "refm/api/src/generator.rd")
(find-rurima "== Class Methods" "= class SyncEnumerator < Object" "refm/api/src/generator.rd")
(find-rurima "--- new(*enums) -> SyncEnumerator" "== Class Methods" "= class SyncEnumerator < Object" "refm/api/src/generator.rd")
(find-rurima "== Instance Methods" "= class SyncEnumerator < Object" "refm/api/src/generator.rd")
(find-rurima "--- each {|elem| ... } -> self" "== Instance Methods" "= class SyncEnumerator < Object" "refm/api/src/generator.rd")
(find-rurima "--- end?(i = nil) -> bool" "== Instance Methods" "= class SyncEnumerator < Object" "refm/api/src/generator.rd")
(find-rurima "--- length -> Integer" "== Instance Methods" "= class SyncEnumerator < Object" "refm/api/src/generator.rd")
(find-rurima "--- size   -> Integer" "== Instance Methods" "= class SyncEnumerator < Object" "refm/api/src/generator.rd")
(find-rurima "= reopen Enumerator" "refm/api/src/generator.rd")
(find-rurima "= reopen Enumerable::Enumerator" "refm/api/src/generator.rd")
(find-rurima "== Instance Methods" "= reopen Enumerable::Enumerator" "refm/api/src/generator.rd")
(find-rurima "--- next -> object" "== Instance Methods" "= reopen Enumerable::Enumerator" "refm/api/src/generator.rd")
(find-rurima "--- rewind -> self" "== Instance Methods" "= reopen Enumerable::Enumerator" "refm/api/src/generator.rd")
(find-rurima "=== 関連 RFC" "refm/api/src/uri.rd")
(find-rurima "= reopen Kernel" "refm/api/src/uri.rd")
(find-rurima "== Module Functions" "= reopen Kernel" "refm/api/src/uri.rd")
(find-rurima "--- URI(uri_str) -> object" "== Module Functions" "= reopen Kernel" "refm/api/src/uri.rd")
(find-rurima "= class URI::Error < StandardError" "refm/api/src/uri.rd")
(find-rurima "= class URI::InvalidURIError < URI::Error" "refm/api/src/uri.rd")
(find-rurima "= class URI::InvalidComponentError < URI::Error" "refm/api/src/uri.rd")
(find-rurima "= class URI::BadURIError < URI::Error" "refm/api/src/uri.rd")
(find-rurima "= class CGI::Session::PStore < Object" "refm/api/src/cgi/session/pstore.rd")
(find-rurima "== Class Methods" "= class CGI::Session::PStore < Object" "refm/api/src/cgi/session/pstore.rd")
(find-rurima "--- new(session, option = {}) -> CGI::Session::FileStore" "== Class Methods" "= class CGI::Session::PStore < Object" "refm/api/src/cgi/session/pstore.rd")
(find-rurima "== Instance Methods" "= class CGI::Session::PStore < Object" "refm/api/src/cgi/session/pstore.rd")
(find-rurima "--- check_id(id) -> bool" "== Instance Methods" "= class CGI::Session::PStore < Object" "refm/api/src/cgi/session/pstore.rd")
(find-rurima "--- close -> ()" "== Instance Methods" "= class CGI::Session::PStore < Object" "refm/api/src/cgi/session/pstore.rd")
(find-rurima "--- delete -> ()" "== Instance Methods" "= class CGI::Session::PStore < Object" "refm/api/src/cgi/session/pstore.rd")
(find-rurima "--- restore -> Hash" "== Instance Methods" "= class CGI::Session::PStore < Object" "refm/api/src/cgi/session/pstore.rd")
(find-rurima "--- update -> ()" "== Instance Methods" "= class CGI::Session::PStore < Object" "refm/api/src/cgi/session/pstore.rd")
(find-rurima "= redefine CGI::Session" "refm/api/src/cgi/session/pstore.rd")
(find-rurima "== Instance Methods" "= redefine CGI::Session" "refm/api/src/cgi/session/pstore.rd")
(find-rurima "--- []=(key, value)" "== Instance Methods" "= redefine CGI::Session" "refm/api/src/cgi/session/pstore.rd")
(find-rurima "=== 使い方 (生成)" "refm/api/src/cgi/session.rd")
(find-rurima "=== 使い方 (セッション情報を記録する)" "refm/api/src/cgi/session.rd")
(find-rurima "=== 使い方 (セッション情報を得る)" "refm/api/src/cgi/session.rd")
(find-rurima "=== 使い方 (ヘッダ出力)" "refm/api/src/cgi/session.rd")
(find-rurima "=== umask 値" "refm/api/src/cgi/session.rd")
(find-rurima "=== CGI::HtmlExtension#form の出力" "refm/api/src/cgi/session.rd")
(find-rurima "=== 使用例" "refm/api/src/cgi/session.rd")
(find-rurima "=== 参考URL" "refm/api/src/cgi/session.rd")
(find-rurima "= class CGI::Session < Object" "refm/api/src/cgi/session.rd")
(find-rurima "== Class Methods" "= class CGI::Session < Object" "refm/api/src/cgi/session.rd")
(find-rurima "--- new(request, option = {}) -> CGI::Session" "== Class Methods" "= class CGI::Session < Object" "refm/api/src/cgi/session.rd")
(find-rurima "--- callback(dbman)" "== Class Methods" "= class CGI::Session < Object" "refm/api/src/cgi/session.rd")
(find-rurima "--- create_new_id -> String" "== Class Methods" "= class CGI::Session < Object" "refm/api/src/cgi/session.rd")
(find-rurima "== Instance Methods" "= class CGI::Session < Object" "refm/api/src/cgi/session.rd")
(find-rurima "--- [](key) -> object" "== Instance Methods" "= class CGI::Session < Object" "refm/api/src/cgi/session.rd")
(find-rurima "--- []=(key, val)" "== Instance Methods" "= class CGI::Session < Object" "refm/api/src/cgi/session.rd")
(find-rurima "--- update -> ()" "== Instance Methods" "= class CGI::Session < Object" "refm/api/src/cgi/session.rd")
(find-rurima "--- close -> ()" "== Instance Methods" "= class CGI::Session < Object" "refm/api/src/cgi/session.rd")
(find-rurima "--- delete -> ()" "== Instance Methods" "= class CGI::Session < Object" "refm/api/src/cgi/session.rd")
(find-rurima "--- session_id -> String" "== Instance Methods" "= class CGI::Session < Object" "refm/api/src/cgi/session.rd")
(find-rurima "--- new_session -> bool" "== Instance Methods" "= class CGI::Session < Object" "refm/api/src/cgi/session.rd")
(find-rurima "= class CGI::Session::NoSession < RuntimeError" "refm/api/src/cgi/session.rd")
(find-rurima "= class CGI::Session::FileStore < Object" "refm/api/src/cgi/session.rd")
(find-rurima "== Class Methods" "= class CGI::Session::FileStore < Object" "refm/api/src/cgi/session.rd")
(find-rurima "--- new(session, option = {}) -> CGI::Session::FileStore" "== Class Methods" "= class CGI::Session::FileStore < Object" "refm/api/src/cgi/session.rd")
(find-rurima "== Instance Methods" "= class CGI::Session::FileStore < Object" "refm/api/src/cgi/session.rd")
(find-rurima "--- check_id(id) -> bool" "== Instance Methods" "= class CGI::Session::FileStore < Object" "refm/api/src/cgi/session.rd")
(find-rurima "--- close -> ()" "== Instance Methods" "= class CGI::Session::FileStore < Object" "refm/api/src/cgi/session.rd")
(find-rurima "--- delete -> ()" "== Instance Methods" "= class CGI::Session::FileStore < Object" "refm/api/src/cgi/session.rd")
(find-rurima "--- restore -> Hash" "== Instance Methods" "= class CGI::Session::FileStore < Object" "refm/api/src/cgi/session.rd")
(find-rurima "--- update -> ()" "== Instance Methods" "= class CGI::Session::FileStore < Object" "refm/api/src/cgi/session.rd")
(find-rurima "= class CGI::Session::MemoryStore < Object" "refm/api/src/cgi/session.rd")
(find-rurima "== Class Methods" "= class CGI::Session::MemoryStore < Object" "refm/api/src/cgi/session.rd")
(find-rurima "--- new(session, option = nil) -> CGI::Session::MemoryStore" "== Class Methods" "= class CGI::Session::MemoryStore < Object" "refm/api/src/cgi/session.rd")
(find-rurima "== Instance Methods" "= class CGI::Session::MemoryStore < Object" "refm/api/src/cgi/session.rd")
(find-rurima "--- close -> ()" "== Instance Methods" "= class CGI::Session::MemoryStore < Object" "refm/api/src/cgi/session.rd")
(find-rurima "--- delete -> ()" "== Instance Methods" "= class CGI::Session::MemoryStore < Object" "refm/api/src/cgi/session.rd")
(find-rurima "--- restore -> Hash" "== Instance Methods" "= class CGI::Session::MemoryStore < Object" "refm/api/src/cgi/session.rd")
(find-rurima "--- update -> ()" "== Instance Methods" "= class CGI::Session::MemoryStore < Object" "refm/api/src/cgi/session.rd")
(find-rurima "= class CGI::Session::NullStore < Object" "refm/api/src/cgi/session.rd")
(find-rurima "== Class Methods" "= class CGI::Session::NullStore < Object" "refm/api/src/cgi/session.rd")
(find-rurima "--- new(session, option = nil) -> CGI::Session::NullStore" "== Class Methods" "= class CGI::Session::NullStore < Object" "refm/api/src/cgi/session.rd")
(find-rurima "== Instance Methods" "= class CGI::Session::NullStore < Object" "refm/api/src/cgi/session.rd")
(find-rurima "--- close -> ()" "== Instance Methods" "= class CGI::Session::NullStore < Object" "refm/api/src/cgi/session.rd")
(find-rurima "--- delete -> ()" "== Instance Methods" "= class CGI::Session::NullStore < Object" "refm/api/src/cgi/session.rd")
(find-rurima "--- restore -> Hash" "== Instance Methods" "= class CGI::Session::NullStore < Object" "refm/api/src/cgi/session.rd")
(find-rurima "--- update -> ()" "== Instance Methods" "= class CGI::Session::NullStore < Object" "refm/api/src/cgi/session.rd")
(find-rurima "= module CGI::TagMaker" "refm/api/src/cgi/html.rd")
(find-rurima "== Instance Methods" "= module CGI::TagMaker" "refm/api/src/cgi/html.rd")
(find-rurima "--- nn_element_def(element)" "== Instance Methods" "= module CGI::TagMaker" "refm/api/src/cgi/html.rd")
(find-rurima "--- nOE_element_def(element, append = nil)" "== Instance Methods" "= module CGI::TagMaker" "refm/api/src/cgi/html.rd")
(find-rurima "--- nO_element_def(element)" "== Instance Methods" "= module CGI::TagMaker" "refm/api/src/cgi/html.rd")
(find-rurima "= module CGI::HtmlExtension" "refm/api/src/cgi/html.rd")
(find-rurima "== Instance Methods" "= module CGI::HtmlExtension" "refm/api/src/cgi/html.rd")
(find-rurima "--- a(href = \"\") -> String" "== Instance Methods" "= module CGI::HtmlExtension" "refm/api/src/cgi/html.rd")
(find-rurima "--- a(href = \"\"){ ... } -> String" "== Instance Methods" "= module CGI::HtmlExtension" "refm/api/src/cgi/html.rd")
(find-rurima "--- base(href = \"\") -> String" "== Instance Methods" "= module CGI::HtmlExtension" "refm/api/src/cgi/html.rd")
(find-rurima "--- blockquote(cite = nil) -> String" "== Instance Methods" "= module CGI::HtmlExtension" "refm/api/src/cgi/html.rd")
(find-rurima "--- blockquote(cite = nil){ ... } -> String" "== Instance Methods" "= module CGI::HtmlExtension" "refm/api/src/cgi/html.rd")
(find-rurima "--- caption(align = nil) -> String" "== Instance Methods" "= module CGI::HtmlExtension" "refm/api/src/cgi/html.rd")
(find-rurima "--- caption(align = nil){ ... } -> String" "== Instance Methods" "= module CGI::HtmlExtension" "refm/api/src/cgi/html.rd")
(find-rurima "--- checkbox(name = \"\", value = nil, checked = nil) -> String" "== Instance Methods" "= module CGI::HtmlExtension" "refm/api/src/cgi/html.rd")
(find-rurima "--- checkbox(attributes) -> String" "== Instance Methods" "= module CGI::HtmlExtension" "refm/api/src/cgi/html.rd")
(find-rurima "--- checkbox_group(name = \"\", *values) -> String" "== Instance Methods" "= module CGI::HtmlExtension" "refm/api/src/cgi/html.rd")
(find-rurima "--- checkbox_group(attributes) -> String" "== Instance Methods" "= module CGI::HtmlExtension" "refm/api/src/cgi/html.rd")
(find-rurima "--- file_field(name = \"\", size = 20, maxlength = nil) -> String" "== Instance Methods" "= module CGI::HtmlExtension" "refm/api/src/cgi/html.rd")
(find-rurima "--- file_field(attributes) -> String" "== Instance Methods" "= module CGI::HtmlExtension" "refm/api/src/cgi/html.rd")
(find-rurima "--- form(method = \"post\", action = nil, enctype = \"application/x-www-form-urlencoded\") -> String" "== Instance Methods" "= module CGI::HtmlExtension" "refm/api/src/cgi/html.rd")
(find-rurima "--- form(method = \"post\", action = nil, enctype = \"application/x-www-form-urlencoded\"){ ... } -> String" "== Instance Methods" "= module CGI::HtmlExtension" "refm/api/src/cgi/html.rd")
(find-rurima "--- form(attributes) -> String" "== Instance Methods" "= module CGI::HtmlExtension" "refm/api/src/cgi/html.rd")
(find-rurima "--- form(attributes){ ... } -> String" "== Instance Methods" "= module CGI::HtmlExtension" "refm/api/src/cgi/html.rd")
(find-rurima "--- hidden(name = \"\", value = nil) -> String" "== Instance Methods" "= module CGI::HtmlExtension" "refm/api/src/cgi/html.rd")
(find-rurima "--- hidden(attributes) -> String" "== Instance Methods" "= module CGI::HtmlExtension" "refm/api/src/cgi/html.rd")
(find-rurima "--- html(attributes = {}) -> String" "== Instance Methods" "= module CGI::HtmlExtension" "refm/api/src/cgi/html.rd")
(find-rurima "--- html(attributes = {}){ ... } -> String" "== Instance Methods" "= module CGI::HtmlExtension" "refm/api/src/cgi/html.rd")
(find-rurima "--- image_button(src = \"\", name = nil, alt = nil) -> String" "== Instance Methods" "= module CGI::HtmlExtension" "refm/api/src/cgi/html.rd")
(find-rurima "--- image_button(attributes) -> String" "== Instance Methods" "= module CGI::HtmlExtension" "refm/api/src/cgi/html.rd")
(find-rurima "--- img(src = \"\", alt = \"\", width = nil, height = nil) -> String" "== Instance Methods" "= module CGI::HtmlExtension" "refm/api/src/cgi/html.rd")
(find-rurima "--- img(attributes) -> String" "== Instance Methods" "= module CGI::HtmlExtension" "refm/api/src/cgi/html.rd")
(find-rurima "--- multipart_form(action = nil, enctype = \"multipart/form-data\") -> String" "== Instance Methods" "= module CGI::HtmlExtension" "refm/api/src/cgi/html.rd")
(find-rurima "--- multipart_form(action = nil, enctype = \"multipart/form-data\"){ ... } -> String" "== Instance Methods" "= module CGI::HtmlExtension" "refm/api/src/cgi/html.rd")
(find-rurima "--- multipart_form(attributes) -> String" "== Instance Methods" "= module CGI::HtmlExtension" "refm/api/src/cgi/html.rd")
(find-rurima "--- multipart_form(attributes){ ... } -> String" "== Instance Methods" "= module CGI::HtmlExtension" "refm/api/src/cgi/html.rd")
(find-rurima "--- password_field(name = \"\", value = nil, size = 40, maxlength = nil) -> String" "== Instance Methods" "= module CGI::HtmlExtension" "refm/api/src/cgi/html.rd")
(find-rurima "--- password_field(attributes) -> String" "== Instance Methods" "= module CGI::HtmlExtension" "refm/api/src/cgi/html.rd")
(find-rurima "--- popup_menu(name = \"\", *values) -> String" "== Instance Methods" "= module CGI::HtmlExtension" "refm/api/src/cgi/html.rd")
(find-rurima "--- scrolling_list(name = \"\", *values) -> String" "== Instance Methods" "= module CGI::HtmlExtension" "refm/api/src/cgi/html.rd")
(find-rurima "--- popup_menu(attributes) -> String" "== Instance Methods" "= module CGI::HtmlExtension" "refm/api/src/cgi/html.rd")
(find-rurima "--- scrolling_list(attributes) -> String" "== Instance Methods" "= module CGI::HtmlExtension" "refm/api/src/cgi/html.rd")
(find-rurima "--- radio_button(name = \"\", value = nil, checked = nil) -> String" "== Instance Methods" "= module CGI::HtmlExtension" "refm/api/src/cgi/html.rd")
(find-rurima "--- radio_button(attributes) -> String" "== Instance Methods" "= module CGI::HtmlExtension" "refm/api/src/cgi/html.rd")
(find-rurima "--- radio_group(name = \"\", *values) -> String" "== Instance Methods" "= module CGI::HtmlExtension" "refm/api/src/cgi/html.rd")
(find-rurima "--- radio_group(attributes) -> String" "== Instance Methods" "= module CGI::HtmlExtension" "refm/api/src/cgi/html.rd")
(find-rurima "--- reset(value = nil, name = nil) -> String" "== Instance Methods" "= module CGI::HtmlExtension" "refm/api/src/cgi/html.rd")
(find-rurima "--- reset(attributes) -> String" "== Instance Methods" "= module CGI::HtmlExtension" "refm/api/src/cgi/html.rd")
(find-rurima "--- submit(value = nil, name = nil) -> String" "== Instance Methods" "= module CGI::HtmlExtension" "refm/api/src/cgi/html.rd")
(find-rurima "--- submit(attributes) -> String" "== Instance Methods" "= module CGI::HtmlExtension" "refm/api/src/cgi/html.rd")
(find-rurima "--- text_field(name = \"\", value = nil, size = 40, maxlength = nil) -> String" "== Instance Methods" "= module CGI::HtmlExtension" "refm/api/src/cgi/html.rd")
(find-rurima "--- text_field(attributes) -> String" "== Instance Methods" "= module CGI::HtmlExtension" "refm/api/src/cgi/html.rd")
(find-rurima "--- textarea(name = \"\", cols = 70, rows = 10) -> String" "== Instance Methods" "= module CGI::HtmlExtension" "refm/api/src/cgi/html.rd")
(find-rurima "--- textarea(attributes) -> String" "== Instance Methods" "= module CGI::HtmlExtension" "refm/api/src/cgi/html.rd")
(find-rurima "= module CGI::Html3" "refm/api/src/cgi/html.rd")
(find-rurima "== Instance Methods" "= module CGI::Html3" "refm/api/src/cgi/html.rd")
(find-rurima "--- doctype" "== Instance Methods" "= module CGI::Html3" "refm/api/src/cgi/html.rd")
(find-rurima "--- element_init" "== Instance Methods" "= module CGI::Html3" "refm/api/src/cgi/html.rd")
(find-rurima "= module CGI::Html4" "refm/api/src/cgi/html.rd")
(find-rurima "== Instance Methods" "= module CGI::Html4" "refm/api/src/cgi/html.rd")
(find-rurima "--- doctype" "== Instance Methods" "= module CGI::Html4" "refm/api/src/cgi/html.rd")
(find-rurima "--- element_init" "== Instance Methods" "= module CGI::Html4" "refm/api/src/cgi/html.rd")
(find-rurima "= module CGI::Html4Fr" "refm/api/src/cgi/html.rd")
(find-rurima "== Instance Methods" "= module CGI::Html4Fr" "refm/api/src/cgi/html.rd")
(find-rurima "--- doctype" "== Instance Methods" "= module CGI::Html4Fr" "refm/api/src/cgi/html.rd")
(find-rurima "--- element_init" "== Instance Methods" "= module CGI::Html4Fr" "refm/api/src/cgi/html.rd")
(find-rurima "= module CGI::Html4Tr" "refm/api/src/cgi/html.rd")
(find-rurima "== Instance Methods" "= module CGI::Html4Tr" "refm/api/src/cgi/html.rd")
(find-rurima "--- doctype" "== Instance Methods" "= module CGI::Html4Tr" "refm/api/src/cgi/html.rd")
(find-rurima "--- element_init" "== Instance Methods" "= module CGI::Html4Tr" "refm/api/src/cgi/html.rd")
(find-rurima "= reopen CGI" "refm/api/src/cgi/util.rd")
(find-rurima "== Class Methods" "= reopen CGI" "refm/api/src/cgi/util.rd")
(find-rurima "--- escape(string) -> String" "== Class Methods" "= reopen CGI" "refm/api/src/cgi/util.rd")
(find-rurima "--- unescape(string) -> String" "== Class Methods" "= reopen CGI" "refm/api/src/cgi/util.rd")
(find-rurima "--- escapeHTML(string) -> String" "== Class Methods" "= reopen CGI" "refm/api/src/cgi/util.rd")
(find-rurima "--- escape_html(string) -> String" "== Class Methods" "= reopen CGI" "refm/api/src/cgi/util.rd")
(find-rurima "--- unescapeHTML(string) -> String" "== Class Methods" "= reopen CGI" "refm/api/src/cgi/util.rd")
(find-rurima "--- unescape_html(string) -> String" "== Class Methods" "= reopen CGI" "refm/api/src/cgi/util.rd")
(find-rurima "--- escapeElement(string, *elements) -> String" "== Class Methods" "= reopen CGI" "refm/api/src/cgi/util.rd")
(find-rurima "--- escape_element(string, *elements) -> String" "== Class Methods" "= reopen CGI" "refm/api/src/cgi/util.rd")
(find-rurima "--- unescapeElement(string, *elements) -> String" "== Class Methods" "= reopen CGI" "refm/api/src/cgi/util.rd")
(find-rurima "--- unescape_element(string, *elements) -> String" "== Class Methods" "= reopen CGI" "refm/api/src/cgi/util.rd")
(find-rurima "--- rfc1123_date(time) -> String" "== Class Methods" "= reopen CGI" "refm/api/src/cgi/util.rd")
(find-rurima "--- pretty(string, shift = \"  \") -> String" "== Class Methods" "= reopen CGI" "refm/api/src/cgi/util.rd")
(find-rurima "== Constants" "= reopen CGI" "refm/api/src/cgi/util.rd")
(find-rurima "--- TABLE_FOR_ESCAPE_HTML__ -> Hash" "== Constants" "= reopen CGI" "refm/api/src/cgi/util.rd")
(find-rurima "--- RFC822_DAYS -> [String]" "== Constants" "= reopen CGI" "refm/api/src/cgi/util.rd")
(find-rurima "--- RFC822_MONTHS -> [String]" "== Constants" "= reopen CGI" "refm/api/src/cgi/util.rd")
(find-rurima "= class CGI < Object" "refm/api/src/cgi/core.rd")
(find-rurima "== Class Methods" "= class CGI < Object" "refm/api/src/cgi/core.rd")
(find-rurima "--- parse(query) -> Hash" "== Class Methods" "= class CGI < Object" "refm/api/src/cgi/core.rd")
(find-rurima "--- accept_charset -> String" "== Class Methods" "= class CGI < Object" "refm/api/src/cgi/core.rd")
(find-rurima "--- accept_charset=(charset)" "== Class Methods" "= class CGI < Object" "refm/api/src/cgi/core.rd")
(find-rurima "== Instance Methods" "= class CGI < Object" "refm/api/src/cgi/core.rd")
(find-rurima "--- accept_charset -> String" "== Instance Methods" "= class CGI < Object" "refm/api/src/cgi/core.rd")
(find-rurima "--- nph? -> bool" "== Instance Methods" "= class CGI < Object" "refm/api/src/cgi/core.rd")
(find-rurima "--- header(options = \"text/html\") -> String" "== Instance Methods" "= class CGI < Object" "refm/api/src/cgi/core.rd")
(find-rurima "--- out(options = \"text/html\") { .... }" "== Instance Methods" "= class CGI < Object" "refm/api/src/cgi/core.rd")
(find-rurima "--- print(*strings)" "== Instance Methods" "= class CGI < Object" "refm/api/src/cgi/core.rd")
(find-rurima "== Constants" "= class CGI < Object" "refm/api/src/cgi/core.rd")
(find-rurima "--- CR -> String" "== Constants" "= class CGI < Object" "refm/api/src/cgi/core.rd")
(find-rurima "--- LF -> String" "== Constants" "= class CGI < Object" "refm/api/src/cgi/core.rd")
(find-rurima "--- EOL -> String" "== Constants" "= class CGI < Object" "refm/api/src/cgi/core.rd")
(find-rurima "--- NEEDS_BINMODE -> bool" "== Constants" "= class CGI < Object" "refm/api/src/cgi/core.rd")
(find-rurima "--- PATH_SEPARATOR -> Hash" "== Constants" "= class CGI < Object" "refm/api/src/cgi/core.rd")
(find-rurima "--- HTTP_STATUS -> Hash" "== Constants" "= class CGI < Object" "refm/api/src/cgi/core.rd")
(find-rurima "--- RFC822_DAYS -> [String]" "== Constants" "= class CGI < Object" "refm/api/src/cgi/core.rd")
(find-rurima "--- RFC822_MONTHS -> [String]" "== Constants" "= class CGI < Object" "refm/api/src/cgi/core.rd")
(find-rurima "--- MAX_MULTIPART_LENGTH -> Fixnum" "== Constants" "= class CGI < Object" "refm/api/src/cgi/core.rd")
(find-rurima "--- MAX_MULTIPART_COUNT -> Fixnum" "== Constants" "= class CGI < Object" "refm/api/src/cgi/core.rd")
(find-rurima "= module CGI::QueryExtension" "refm/api/src/cgi/core.rd")
(find-rurima "== Instance Methods" "= module CGI::QueryExtension" "refm/api/src/cgi/core.rd")
(find-rurima "--- [](key) -> Array" "== Instance Methods" "= module CGI::QueryExtension" "refm/api/src/cgi/core.rd")
(find-rurima "--- accept -> String" "== Instance Methods" "= module CGI::QueryExtension" "refm/api/src/cgi/core.rd")
(find-rurima "--- accept_charset -> String" "== Instance Methods" "= module CGI::QueryExtension" "refm/api/src/cgi/core.rd")
(find-rurima "--- accept_encoding -> String" "== Instance Methods" "= module CGI::QueryExtension" "refm/api/src/cgi/core.rd")
(find-rurima "--- accept_language -> String" "== Instance Methods" "= module CGI::QueryExtension" "refm/api/src/cgi/core.rd")
(find-rurima "--- auth_type -> String" "== Instance Methods" "= module CGI::QueryExtension" "refm/api/src/cgi/core.rd")
(find-rurima "--- cache_control -> String" "== Instance Methods" "= module CGI::QueryExtension" "refm/api/src/cgi/core.rd")
(find-rurima "--- content_length -> Fixnum" "== Instance Methods" "= module CGI::QueryExtension" "refm/api/src/cgi/core.rd")
(find-rurima "--- content_type -> String" "== Instance Methods" "= module CGI::QueryExtension" "refm/api/src/cgi/core.rd")
(find-rurima "--- cookies -> Hash" "== Instance Methods" "= module CGI::QueryExtension" "refm/api/src/cgi/core.rd")
(find-rurima "--- cookies=(value)" "== Instance Methods" "= module CGI::QueryExtension" "refm/api/src/cgi/core.rd")
(find-rurima "--- from -> String" "== Instance Methods" "= module CGI::QueryExtension" "refm/api/src/cgi/core.rd")
(find-rurima "--- gateway_interface -> String" "== Instance Methods" "= module CGI::QueryExtension" "refm/api/src/cgi/core.rd")
(find-rurima "--- has_key?(*args) -> bool" "== Instance Methods" "= module CGI::QueryExtension" "refm/api/src/cgi/core.rd")
(find-rurima "--- key?(*args) -> bool" "== Instance Methods" "= module CGI::QueryExtension" "refm/api/src/cgi/core.rd")
(find-rurima "--- include?(*args) -> bool" "== Instance Methods" "= module CGI::QueryExtension" "refm/api/src/cgi/core.rd")
(find-rurima "--- host -> String" "== Instance Methods" "= module CGI::QueryExtension" "refm/api/src/cgi/core.rd")
(find-rurima "--- keys(*args) -> [String]" "== Instance Methods" "= module CGI::QueryExtension" "refm/api/src/cgi/core.rd")
(find-rurima "--- multipart? -> bool" "== Instance Methods" "= module CGI::QueryExtension" "refm/api/src/cgi/core.rd")
(find-rurima "--- negotiate -> String" "== Instance Methods" "= module CGI::QueryExtension" "refm/api/src/cgi/core.rd")
(find-rurima "--- params -> Hash" "== Instance Methods" "= module CGI::QueryExtension" "refm/api/src/cgi/core.rd")
(find-rurima "--- params=(hash)" "== Instance Methods" "= module CGI::QueryExtension" "refm/api/src/cgi/core.rd")
(find-rurima "--- path_info -> String" "== Instance Methods" "= module CGI::QueryExtension" "refm/api/src/cgi/core.rd")
(find-rurima "--- path_translated -> String" "== Instance Methods" "= module CGI::QueryExtension" "refm/api/src/cgi/core.rd")
(find-rurima "--- pragma -> String" "== Instance Methods" "= module CGI::QueryExtension" "refm/api/src/cgi/core.rd")
(find-rurima "--- query_string -> String" "== Instance Methods" "= module CGI::QueryExtension" "refm/api/src/cgi/core.rd")
(find-rurima "--- raw_cookie -> String" "== Instance Methods" "= module CGI::QueryExtension" "refm/api/src/cgi/core.rd")
(find-rurima "--- raw_cookie2 -> String" "== Instance Methods" "= module CGI::QueryExtension" "refm/api/src/cgi/core.rd")
(find-rurima "--- referer -> String" "== Instance Methods" "= module CGI::QueryExtension" "refm/api/src/cgi/core.rd")
(find-rurima "--- remote_addr -> String" "== Instance Methods" "= module CGI::QueryExtension" "refm/api/src/cgi/core.rd")
(find-rurima "--- remote_host -> String" "== Instance Methods" "= module CGI::QueryExtension" "refm/api/src/cgi/core.rd")
(find-rurima "--- remote_ident -> String" "== Instance Methods" "= module CGI::QueryExtension" "refm/api/src/cgi/core.rd")
(find-rurima "--- remote_user -> String" "== Instance Methods" "= module CGI::QueryExtension" "refm/api/src/cgi/core.rd")
(find-rurima "--- request_method -> String" "== Instance Methods" "= module CGI::QueryExtension" "refm/api/src/cgi/core.rd")
(find-rurima "--- script_name -> String" "== Instance Methods" "= module CGI::QueryExtension" "refm/api/src/cgi/core.rd")
(find-rurima "--- server_name -> String" "== Instance Methods" "= module CGI::QueryExtension" "refm/api/src/cgi/core.rd")
(find-rurima "--- server_port -> Fixnum" "== Instance Methods" "= module CGI::QueryExtension" "refm/api/src/cgi/core.rd")
(find-rurima "--- server_protocol -> String" "== Instance Methods" "= module CGI::QueryExtension" "refm/api/src/cgi/core.rd")
(find-rurima "--- server_software -> String" "== Instance Methods" "= module CGI::QueryExtension" "refm/api/src/cgi/core.rd")
(find-rurima "--- user_agent -> String" "== Instance Methods" "= module CGI::QueryExtension" "refm/api/src/cgi/core.rd")
(find-rurima "--- create_body(is_large) -> StringIO | Tempfile" "== Instance Methods" "= module CGI::QueryExtension" "refm/api/src/cgi/core.rd")
(find-rurima "--- files -> Hash" "== Instance Methods" "= module CGI::QueryExtension" "refm/api/src/cgi/core.rd")
(find-rurima "--- unescape_filename? -> bool" "== Instance Methods" "= module CGI::QueryExtension" "refm/api/src/cgi/core.rd")
(find-rurima "= module CGI::QueryExtension::Value" "refm/api/src/cgi/core.rd")
(find-rurima "== Instance Methods" "= module CGI::QueryExtension::Value" "refm/api/src/cgi/core.rd")
(find-rurima "--- [](idx, *args)" "== Instance Methods" "= module CGI::QueryExtension::Value" "refm/api/src/cgi/core.rd")
(find-rurima "--- first -> self" "== Instance Methods" "= module CGI::QueryExtension::Value" "refm/api/src/cgi/core.rd")
(find-rurima "--- last  -> self" "== Instance Methods" "= module CGI::QueryExtension::Value" "refm/api/src/cgi/core.rd")
(find-rurima "--- set_params(params)" "== Instance Methods" "= module CGI::QueryExtension::Value" "refm/api/src/cgi/core.rd")
(find-rurima "--- to_a -> Array" "== Instance Methods" "= module CGI::QueryExtension::Value" "refm/api/src/cgi/core.rd")
(find-rurima "--- to_ary -> Array" "== Instance Methods" "= module CGI::QueryExtension::Value" "refm/api/src/cgi/core.rd")
(find-rurima "= class CGI::InvalidEncoding < Exception" "refm/api/src/cgi/core.rd")
(find-rurima "= class CGI::Cookie < Array" "refm/api/src/cgi/cookie.rd")
(find-rurima "== Class Methods" "= class CGI::Cookie < Array" "refm/api/src/cgi/cookie.rd")
(find-rurima "--- new(name = \"\", *value) -> CGI::Cookie" "== Class Methods" "= class CGI::Cookie < Array" "refm/api/src/cgi/cookie.rd")
(find-rurima "--- parse(raw_cookie) -> Hash" "== Class Methods" "= class CGI::Cookie < Array" "refm/api/src/cgi/cookie.rd")
(find-rurima "== Instance Methods" "= class CGI::Cookie < Array" "refm/api/src/cgi/cookie.rd")
(find-rurima "--- name -> String" "== Instance Methods" "= class CGI::Cookie < Array" "refm/api/src/cgi/cookie.rd")
(find-rurima "--- name=(value)" "== Instance Methods" "= class CGI::Cookie < Array" "refm/api/src/cgi/cookie.rd")
(find-rurima "--- value -> Array" "== Instance Methods" "= class CGI::Cookie < Array" "refm/api/src/cgi/cookie.rd")
(find-rurima "--- value=(value)" "== Instance Methods" "= class CGI::Cookie < Array" "refm/api/src/cgi/cookie.rd")
(find-rurima "--- path -> String" "== Instance Methods" "= class CGI::Cookie < Array" "refm/api/src/cgi/cookie.rd")
(find-rurima "--- path=(value)" "== Instance Methods" "= class CGI::Cookie < Array" "refm/api/src/cgi/cookie.rd")
(find-rurima "--- domain -> String" "== Instance Methods" "= class CGI::Cookie < Array" "refm/api/src/cgi/cookie.rd")
(find-rurima "--- domain=(value)" "== Instance Methods" "= class CGI::Cookie < Array" "refm/api/src/cgi/cookie.rd")
(find-rurima "--- expires -> Time" "== Instance Methods" "= class CGI::Cookie < Array" "refm/api/src/cgi/cookie.rd")
(find-rurima "--- expires=(value)" "== Instance Methods" "= class CGI::Cookie < Array" "refm/api/src/cgi/cookie.rd")
(find-rurima "--- secure -> bool" "== Instance Methods" "= class CGI::Cookie < Array" "refm/api/src/cgi/cookie.rd")
(find-rurima "--- secure=(val)" "== Instance Methods" "= class CGI::Cookie < Array" "refm/api/src/cgi/cookie.rd")
(find-rurima "--- to_s -> String" "== Instance Methods" "= class CGI::Cookie < Array" "refm/api/src/cgi/cookie.rd")
(find-rurima "=== 例" "refm/api/src/scanf.rd")
(find-rurima "= reopen String" "refm/api/src/scanf.rd")
(find-rurima "== Instance Methods" "= reopen String" "refm/api/src/scanf.rd")
(find-rurima "--- scanf(format) -> Array" "== Instance Methods" "= reopen String" "refm/api/src/scanf.rd")
(find-rurima "--- scanf(format) {|*ary| ...} -> Array" "== Instance Methods" "= reopen String" "refm/api/src/scanf.rd")
(find-rurima "====[a:format] scanfフォーマット文字列" "== Instance Methods" "= reopen String" "refm/api/src/scanf.rd")
(find-rurima "= reopen IO" "refm/api/src/scanf.rd")
(find-rurima "== Instance Methods" "= reopen IO" "refm/api/src/scanf.rd")
(find-rurima "--- scanf(format) -> Array" "== Instance Methods" "= reopen IO" "refm/api/src/scanf.rd")
(find-rurima "--- scanf(format) {|*ary| ...} -> Array" "== Instance Methods" "= reopen IO" "refm/api/src/scanf.rd")
(find-rurima "= reopen Kernel" "refm/api/src/scanf.rd")
(find-rurima "== Private Instance Methods" "= reopen Kernel" "refm/api/src/scanf.rd")
(find-rurima "--- scanf(format) -> Array" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/scanf.rd")
(find-rurima "--- scanf(format) {|*ary| ...} -> Array" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/scanf.rd")
(find-rurima "= module Scanf" "refm/api/src/scanf.rd")
(find-rurima "= class CGI_cgi_lib" "refm/api/src/cgi-lib.rd")
(find-rurima "== Singleton Methods" "= class CGI_cgi_lib" "refm/api/src/cgi-lib.rd")
(find-rurima "--- new(input = $stdin) -> CGI_cgi_lib" "== Singleton Methods" "= class CGI_cgi_lib" "refm/api/src/cgi-lib.rd")
(find-rurima "--- rfc1123_date(time) -> String" "== Singleton Methods" "= class CGI_cgi_lib" "refm/api/src/cgi-lib.rd")
(find-rurima "--- escape(str) -> String" "== Singleton Methods" "= class CGI_cgi_lib" "refm/api/src/cgi-lib.rd")
(find-rurima "--- unescape(str) -> String" "== Singleton Methods" "= class CGI_cgi_lib" "refm/api/src/cgi-lib.rd")
(find-rurima "--- escapeHTML(str) -> String" "== Singleton Methods" "= class CGI_cgi_lib" "refm/api/src/cgi-lib.rd")
(find-rurima "--- tag(element, attributes = {}) -> String" "== Singleton Methods" "= class CGI_cgi_lib" "refm/api/src/cgi-lib.rd")
(find-rurima "--- tag(element, attributes = {}){ ... } -> String" "== Singleton Methods" "= class CGI_cgi_lib" "refm/api/src/cgi-lib.rd")
(find-rurima "--- cookie(options) -> String" "== Singleton Methods" "= class CGI_cgi_lib" "refm/api/src/cgi-lib.rd")
(find-rurima "--- header(*options) -> String" "== Singleton Methods" "= class CGI_cgi_lib" "refm/api/src/cgi-lib.rd")
(find-rurima "--- print(*options){ ... } -> ()" "== Singleton Methods" "= class CGI_cgi_lib" "refm/api/src/cgi-lib.rd")
(find-rurima "--- message(message, title = \"\", header = [\"Content-Type: text/html\"]) -> true" "== Singleton Methods" "= class CGI_cgi_lib" "refm/api/src/cgi-lib.rd")
(find-rurima "--- error -> ()" "== Singleton Methods" "= class CGI_cgi_lib" "refm/api/src/cgi-lib.rd")
(find-rurima "== Instance Methods" "= class CGI_cgi_lib" "refm/api/src/cgi-lib.rd")
(find-rurima "--- read_from_cmdline" "== Instance Methods" "= class CGI_cgi_lib" "refm/api/src/cgi-lib.rd")
(find-rurima "--- inputs -> Hash" "== Instance Methods" "= class CGI_cgi_lib" "refm/api/src/cgi-lib.rd")
(find-rurima "--- cookie -> Hash" "== Instance Methods" "= class CGI_cgi_lib" "refm/api/src/cgi-lib.rd")
(find-rurima "== Constants" "= class CGI_cgi_lib" "refm/api/src/cgi-lib.rd")
(find-rurima "--- CR -> String" "== Constants" "= class CGI_cgi_lib" "refm/api/src/cgi-lib.rd")
(find-rurima "--- LF -> String" "== Constants" "= class CGI_cgi_lib" "refm/api/src/cgi-lib.rd")
(find-rurima "--- EOL -> String" "== Constants" "= class CGI_cgi_lib" "refm/api/src/cgi-lib.rd")
(find-rurima "--- RFC822_DAYS -> [String]" "== Constants" "= class CGI_cgi_lib" "refm/api/src/cgi-lib.rd")
(find-rurima "--- RFC822_MONTHS -> [String]" "== Constants" "= class CGI_cgi_lib" "refm/api/src/cgi-lib.rd")
(find-rurima "=== 参照" "refm/api/src/monitor.rd")
(find-rurima "=== WSH を用いたレジストリアクセス" "refm/api/src/win32/registry.rd")
(find-rurima "= class Win32::Registry < Object" "refm/api/src/win32/registry.rd")
(find-rurima "== Class Methods" "= class Win32::Registry < Object" "refm/api/src/win32/registry.rd")
(find-rurima "--- new(key, subkey, desired = KEY_READ, opt = REG_OPTION_RESERVED)" "== Class Methods" "= class Win32::Registry < Object" "refm/api/src/win32/registry.rd")
(find-rurima "--- new(key, subkey, desired = KEY_READ, opt = REG_OPTION_RESERVED) {|reg| ... }" "== Class Methods" "= class Win32::Registry < Object" "refm/api/src/win32/registry.rd")
(find-rurima "--- open(key, subkey, desired = KEY_READ, opt = REG_OPTION_RESERVED)" "== Class Methods" "= class Win32::Registry < Object" "refm/api/src/win32/registry.rd")
(find-rurima "--- open(key, subkey, desired = KEY_READ, opt = REG_OPTION_RESERVED) {|reg| ... }" "== Class Methods" "= class Win32::Registry < Object" "refm/api/src/win32/registry.rd")
(find-rurima "--- create(key, subkey, desired = KEY_ALL_ACCESS, opt = REG_OPTION_RESERVED)" "== Class Methods" "= class Win32::Registry < Object" "refm/api/src/win32/registry.rd")
(find-rurima "--- create(key, subkey, desired = KEY_ALL_ACCESS, opt = REG_OPTION_RESERVED) {|reg| ... }" "== Class Methods" "= class Win32::Registry < Object" "refm/api/src/win32/registry.rd")
(find-rurima "--- expand_environ(str)" "== Class Methods" "= class Win32::Registry < Object" "refm/api/src/win32/registry.rd")
(find-rurima "--- type2name(type)" "== Class Methods" "= class Win32::Registry < Object" "refm/api/src/win32/registry.rd")
(find-rurima "--- wtime2time(wtime)" "== Class Methods" "= class Win32::Registry < Object" "refm/api/src/win32/registry.rd")
(find-rurima "--- time2wtime(time)" "== Class Methods" "= class Win32::Registry < Object" "refm/api/src/win32/registry.rd")
(find-rurima "== Instance Methods" "= class Win32::Registry < Object" "refm/api/src/win32/registry.rd")
(find-rurima "--- open(subkey, desired = KEY_READ, opt = REG_OPTION_RESERVED)" "== Instance Methods" "= class Win32::Registry < Object" "refm/api/src/win32/registry.rd")
(find-rurima "--- create(subkey, desired = KEY_ALL_ACCESS, opt = REG_OPTION_RESERVED)" "== Instance Methods" "= class Win32::Registry < Object" "refm/api/src/win32/registry.rd")
(find-rurima "--- close" "== Instance Methods" "= class Win32::Registry < Object" "refm/api/src/win32/registry.rd")
(find-rurima "--- read(name, *rtype)" "== Instance Methods" "= class Win32::Registry < Object" "refm/api/src/win32/registry.rd")
(find-rurima "--- [](name, *rtype)" "== Instance Methods" "= class Win32::Registry < Object" "refm/api/src/win32/registry.rd")
(find-rurima "--- read_s(name)" "== Instance Methods" "= class Win32::Registry < Object" "refm/api/src/win32/registry.rd")
(find-rurima "--- read_i(name)" "== Instance Methods" "= class Win32::Registry < Object" "refm/api/src/win32/registry.rd")
(find-rurima "--- read_bin(name)" "== Instance Methods" "= class Win32::Registry < Object" "refm/api/src/win32/registry.rd")
(find-rurima "--- read_s_expand(name)" "== Instance Methods" "= class Win32::Registry < Object" "refm/api/src/win32/registry.rd")
(find-rurima "--- write(name, type, data)" "== Instance Methods" "= class Win32::Registry < Object" "refm/api/src/win32/registry.rd")
(find-rurima "--- [](name, wtype = nil)" "== Instance Methods" "= class Win32::Registry < Object" "refm/api/src/win32/registry.rd")
(find-rurima "--- write_s(name, value)" "== Instance Methods" "= class Win32::Registry < Object" "refm/api/src/win32/registry.rd")
(find-rurima "--- write_i(name, value)" "== Instance Methods" "= class Win32::Registry < Object" "refm/api/src/win32/registry.rd")
(find-rurima "--- write_bin(name, value)" "== Instance Methods" "= class Win32::Registry < Object" "refm/api/src/win32/registry.rd")
(find-rurima "--- each {|name, type, value| ... }" "== Instance Methods" "= class Win32::Registry < Object" "refm/api/src/win32/registry.rd")
(find-rurima "--- each_value {|name, type, value| ... }" "== Instance Methods" "= class Win32::Registry < Object" "refm/api/src/win32/registry.rd")
(find-rurima "--- each_key {|subkey, wtime| ... }" "== Instance Methods" "= class Win32::Registry < Object" "refm/api/src/win32/registry.rd")
(find-rurima "--- delete(name)" "== Instance Methods" "= class Win32::Registry < Object" "refm/api/src/win32/registry.rd")
(find-rurima "--- delete_value(name)" "== Instance Methods" "= class Win32::Registry < Object" "refm/api/src/win32/registry.rd")
(find-rurima "--- delete_key(name, recursive = false)" "== Instance Methods" "= class Win32::Registry < Object" "refm/api/src/win32/registry.rd")
(find-rurima "--- flush" "== Instance Methods" "= class Win32::Registry < Object" "refm/api/src/win32/registry.rd")
(find-rurima "--- created?" "== Instance Methods" "= class Win32::Registry < Object" "refm/api/src/win32/registry.rd")
(find-rurima "--- opened?" "== Instance Methods" "= class Win32::Registry < Object" "refm/api/src/win32/registry.rd")
(find-rurima "--- parent" "== Instance Methods" "= class Win32::Registry < Object" "refm/api/src/win32/registry.rd")
(find-rurima "--- keyname" "== Instance Methods" "= class Win32::Registry < Object" "refm/api/src/win32/registry.rd")
(find-rurima "--- disposition" "== Instance Methods" "= class Win32::Registry < Object" "refm/api/src/win32/registry.rd")
(find-rurima "--- name" "== Instance Methods" "= class Win32::Registry < Object" "refm/api/src/win32/registry.rd")
(find-rurima "--- to_s" "== Instance Methods" "= class Win32::Registry < Object" "refm/api/src/win32/registry.rd")
(find-rurima "--- info" "== Instance Methods" "= class Win32::Registry < Object" "refm/api/src/win32/registry.rd")
(find-rurima "--- num_keys" "== Instance Methods" "= class Win32::Registry < Object" "refm/api/src/win32/registry.rd")
(find-rurima "--- max_key_length" "== Instance Methods" "= class Win32::Registry < Object" "refm/api/src/win32/registry.rd")
(find-rurima "--- num_values" "== Instance Methods" "= class Win32::Registry < Object" "refm/api/src/win32/registry.rd")
(find-rurima "--- max_value_name_length" "== Instance Methods" "= class Win32::Registry < Object" "refm/api/src/win32/registry.rd")
(find-rurima "--- max_value_length" "== Instance Methods" "= class Win32::Registry < Object" "refm/api/src/win32/registry.rd")
(find-rurima "--- descriptor_length" "== Instance Methods" "= class Win32::Registry < Object" "refm/api/src/win32/registry.rd")
(find-rurima "--- wtime" "== Instance Methods" "= class Win32::Registry < Object" "refm/api/src/win32/registry.rd")
(find-rurima "--- []=(name, rtype, value = nil)" "== Instance Methods" "= class Win32::Registry < Object" "refm/api/src/win32/registry.rd")
(find-rurima "--- _dump" "== Instance Methods" "= class Win32::Registry < Object" "refm/api/src/win32/registry.rd")
(find-rurima "--- hkey" "== Instance Methods" "= class Win32::Registry < Object" "refm/api/src/win32/registry.rd")
(find-rurima "--- inspect" "== Instance Methods" "= class Win32::Registry < Object" "refm/api/src/win32/registry.rd")
(find-rurima "--- keys" "== Instance Methods" "= class Win32::Registry < Object" "refm/api/src/win32/registry.rd")
(find-rurima "--- open?" "== Instance Methods" "= class Win32::Registry < Object" "refm/api/src/win32/registry.rd")
(find-rurima "== Constants" "= class Win32::Registry < Object" "refm/api/src/win32/registry.rd")
(find-rurima "--- HKEY_CLASSES_ROOT" "== Constants" "= class Win32::Registry < Object" "refm/api/src/win32/registry.rd")
(find-rurima "--- HKEY_CURRENT_USER" "== Constants" "= class Win32::Registry < Object" "refm/api/src/win32/registry.rd")
(find-rurima "--- HKEY_LOCAL_MACHINE" "== Constants" "= class Win32::Registry < Object" "refm/api/src/win32/registry.rd")
(find-rurima "--- HKEY_PERFORMANCE_DATA" "== Constants" "= class Win32::Registry < Object" "refm/api/src/win32/registry.rd")
(find-rurima "--- HKEY_CURRENT_CONFIG" "== Constants" "= class Win32::Registry < Object" "refm/api/src/win32/registry.rd")
(find-rurima "--- HKEY_DYN_DATA" "== Constants" "= class Win32::Registry < Object" "refm/api/src/win32/registry.rd")
(find-rurima "= module Win32::Registry::API" "refm/api/src/win32/registry.rd")
(find-rurima "== Module Functions" "= module Win32::Registry::API" "refm/api/src/win32/registry.rd")
(find-rurima "--- CloseKey(hkey)" "== Module Functions" "= module Win32::Registry::API" "refm/api/src/win32/registry.rd")
(find-rurima "--- CreateKey(hkey, name, opt, desired)" "== Module Functions" "= module Win32::Registry::API" "refm/api/src/win32/registry.rd")
(find-rurima "--- DeleteKey(hkey, name)" "== Module Functions" "= module Win32::Registry::API" "refm/api/src/win32/registry.rd")
(find-rurima "--- DeleteValue(hkey, name)" "== Module Functions" "= module Win32::Registry::API" "refm/api/src/win32/registry.rd")
(find-rurima "--- EnumKey(hkey, index)" "== Module Functions" "= module Win32::Registry::API" "refm/api/src/win32/registry.rd")
(find-rurima "--- EnumValue(hkey, index)" "== Module Functions" "= module Win32::Registry::API" "refm/api/src/win32/registry.rd")
(find-rurima "--- FlushKey(hkey)" "== Module Functions" "= module Win32::Registry::API" "refm/api/src/win32/registry.rd")
(find-rurima "--- OpenKey(hkey, name, opt, desired)" "== Module Functions" "= module Win32::Registry::API" "refm/api/src/win32/registry.rd")
(find-rurima "--- QueryInfoKey(hkey)" "== Module Functions" "= module Win32::Registry::API" "refm/api/src/win32/registry.rd")
(find-rurima "--- QueryValue(hkey, name)" "== Module Functions" "= module Win32::Registry::API" "refm/api/src/win32/registry.rd")
(find-rurima "--- SetValue(hkey, name, type, data, size)" "== Module Functions" "= module Win32::Registry::API" "refm/api/src/win32/registry.rd")
(find-rurima "--- check(result)" "== Module Functions" "= module Win32::Registry::API" "refm/api/src/win32/registry.rd")
(find-rurima "--- packdw(dw)" "== Module Functions" "= module Win32::Registry::API" "refm/api/src/win32/registry.rd")
(find-rurima "--- packqw(qw)" "== Module Functions" "= module Win32::Registry::API" "refm/api/src/win32/registry.rd")
(find-rurima "--- unpackdw(dw)" "== Module Functions" "= module Win32::Registry::API" "refm/api/src/win32/registry.rd")
(find-rurima "--- unpackqw(qw)" "== Module Functions" "= module Win32::Registry::API" "refm/api/src/win32/registry.rd")
(find-rurima "== Constants" "= module Win32::Registry::API" "refm/api/src/win32/registry.rd")
(find-rurima "--- RegCloseKey" "== Constants" "= module Win32::Registry::API" "refm/api/src/win32/registry.rd")
(find-rurima "--- RegCreateKeyExA" "== Constants" "= module Win32::Registry::API" "refm/api/src/win32/registry.rd")
(find-rurima "--- RegDeleteKey" "== Constants" "= module Win32::Registry::API" "refm/api/src/win32/registry.rd")
(find-rurima "--- RegDeleteValue" "== Constants" "= module Win32::Registry::API" "refm/api/src/win32/registry.rd")
(find-rurima "--- RegEnumKeyExA" "== Constants" "= module Win32::Registry::API" "refm/api/src/win32/registry.rd")
(find-rurima "--- RegEnumValueA" "== Constants" "= module Win32::Registry::API" "refm/api/src/win32/registry.rd")
(find-rurima "--- RegFlushKey" "== Constants" "= module Win32::Registry::API" "refm/api/src/win32/registry.rd")
(find-rurima "--- RegOpenKeyExA" "== Constants" "= module Win32::Registry::API" "refm/api/src/win32/registry.rd")
(find-rurima "--- RegQueryInfoKey" "== Constants" "= module Win32::Registry::API" "refm/api/src/win32/registry.rd")
(find-rurima "--- RegQueryValueExA" "== Constants" "= module Win32::Registry::API" "refm/api/src/win32/registry.rd")
(find-rurima "--- RegSetValueExA" "== Constants" "= module Win32::Registry::API" "refm/api/src/win32/registry.rd")
(find-rurima "= class Win32::Registry::Error < StandardError" "refm/api/src/win32/registry.rd")
(find-rurima "== Instance Methods" "= class Win32::Registry::Error < StandardError" "refm/api/src/win32/registry.rd")
(find-rurima "--- code" "== Instance Methods" "= class Win32::Registry::Error < StandardError" "refm/api/src/win32/registry.rd")
(find-rurima "== Constants" "= class Win32::Registry::Error < StandardError" "refm/api/src/win32/registry.rd")
(find-rurima "--- FormatMessageA" "== Constants" "= class Win32::Registry::Error < StandardError" "refm/api/src/win32/registry.rd")
(find-rurima "= class Win32::Registry::PredefinedKey < Win32::Registry" "refm/api/src/win32/registry.rd")
(find-rurima "== Class Methods" "= class Win32::Registry::PredefinedKey < Win32::Registry" "refm/api/src/win32/registry.rd")
(find-rurima "--- new(hkey, keyname)" "== Class Methods" "= class Win32::Registry::PredefinedKey < Win32::Registry" "refm/api/src/win32/registry.rd")
(find-rurima "== Instance Methods" "= class Win32::Registry::PredefinedKey < Win32::Registry" "refm/api/src/win32/registry.rd")
(find-rurima "--- class" "== Instance Methods" "= class Win32::Registry::PredefinedKey < Win32::Registry" "refm/api/src/win32/registry.rd")
(find-rurima "--- close" "== Instance Methods" "= class Win32::Registry::PredefinedKey < Win32::Registry" "refm/api/src/win32/registry.rd")
(find-rurima "= module Win32::Registry::Constants" "refm/api/src/win32/registry.rd")
(find-rurima "== Constants" "= module Win32::Registry::Constants" "refm/api/src/win32/registry.rd")
(find-rurima "--- HKEY_CLASSES_ROOT" "== Constants" "= module Win32::Registry::Constants" "refm/api/src/win32/registry.rd")
(find-rurima "--- HKEY_CURRENT_USER" "== Constants" "= module Win32::Registry::Constants" "refm/api/src/win32/registry.rd")
(find-rurima "--- HKEY_LOCAL_MACHINE" "== Constants" "= module Win32::Registry::Constants" "refm/api/src/win32/registry.rd")
(find-rurima "--- HKEY_USERS" "== Constants" "= module Win32::Registry::Constants" "refm/api/src/win32/registry.rd")
(find-rurima "--- HKEY_PERFORMANCE_DATA" "== Constants" "= module Win32::Registry::Constants" "refm/api/src/win32/registry.rd")
(find-rurima "--- HKEY_PERFORMANCE_TEXT" "== Constants" "= module Win32::Registry::Constants" "refm/api/src/win32/registry.rd")
(find-rurima "--- HKEY_PERFORMANCE_NLSTEXT" "== Constants" "= module Win32::Registry::Constants" "refm/api/src/win32/registry.rd")
(find-rurima "--- HKEY_CURRENT_CONFIG" "== Constants" "= module Win32::Registry::Constants" "refm/api/src/win32/registry.rd")
(find-rurima "--- HKEY_DYN_DATA" "== Constants" "= module Win32::Registry::Constants" "refm/api/src/win32/registry.rd")
(find-rurima "--- REG_NONE" "== Constants" "= module Win32::Registry::Constants" "refm/api/src/win32/registry.rd")
(find-rurima "--- REG_SZ" "== Constants" "= module Win32::Registry::Constants" "refm/api/src/win32/registry.rd")
(find-rurima "--- REG_EXPAND_SZ" "== Constants" "= module Win32::Registry::Constants" "refm/api/src/win32/registry.rd")
(find-rurima "--- REG_BINARY" "== Constants" "= module Win32::Registry::Constants" "refm/api/src/win32/registry.rd")
(find-rurima "--- REG_DWORD" "== Constants" "= module Win32::Registry::Constants" "refm/api/src/win32/registry.rd")
(find-rurima "--- REG_DWORD_LITTLE_ENDIAN" "== Constants" "= module Win32::Registry::Constants" "refm/api/src/win32/registry.rd")
(find-rurima "--- REG_DWORD_BIG_ENDIAN" "== Constants" "= module Win32::Registry::Constants" "refm/api/src/win32/registry.rd")
(find-rurima "--- REG_LINK" "== Constants" "= module Win32::Registry::Constants" "refm/api/src/win32/registry.rd")
(find-rurima "--- REG_MULTI_SZ" "== Constants" "= module Win32::Registry::Constants" "refm/api/src/win32/registry.rd")
(find-rurima "--- REG_RESOURCE_LIST" "== Constants" "= module Win32::Registry::Constants" "refm/api/src/win32/registry.rd")
(find-rurima "--- REG_FULL_RESOURCE_DESCRIPTOR" "== Constants" "= module Win32::Registry::Constants" "refm/api/src/win32/registry.rd")
(find-rurima "--- REG_RESOURCE_REQUIREMENTS_LIST" "== Constants" "= module Win32::Registry::Constants" "refm/api/src/win32/registry.rd")
(find-rurima "--- REG_QWORD" "== Constants" "= module Win32::Registry::Constants" "refm/api/src/win32/registry.rd")
(find-rurima "--- REG_QWORD_LITTLE_ENDIAN" "== Constants" "= module Win32::Registry::Constants" "refm/api/src/win32/registry.rd")
(find-rurima "--- STANDARD_RIGHTS_READ" "== Constants" "= module Win32::Registry::Constants" "refm/api/src/win32/registry.rd")
(find-rurima "--- STANDARD_RIGHTS_WRITE" "== Constants" "= module Win32::Registry::Constants" "refm/api/src/win32/registry.rd")
(find-rurima "--- KEY_QUERY_VALUE" "== Constants" "= module Win32::Registry::Constants" "refm/api/src/win32/registry.rd")
(find-rurima "--- KEY_SET_VALUE" "== Constants" "= module Win32::Registry::Constants" "refm/api/src/win32/registry.rd")
(find-rurima "--- KEY_CREATE_SUB_KEY" "== Constants" "= module Win32::Registry::Constants" "refm/api/src/win32/registry.rd")
(find-rurima "--- KEY_ENUMERATE_SUB_KEYS" "== Constants" "= module Win32::Registry::Constants" "refm/api/src/win32/registry.rd")
(find-rurima "--- KEY_NOTIFY" "== Constants" "= module Win32::Registry::Constants" "refm/api/src/win32/registry.rd")
(find-rurima "--- KEY_CREATE_LINK" "== Constants" "= module Win32::Registry::Constants" "refm/api/src/win32/registry.rd")
(find-rurima "--- KEY_READ" "== Constants" "= module Win32::Registry::Constants" "refm/api/src/win32/registry.rd")
(find-rurima "--- KEY_WRITE" "== Constants" "= module Win32::Registry::Constants" "refm/api/src/win32/registry.rd")
(find-rurima "--- KEY_EXECUTE" "== Constants" "= module Win32::Registry::Constants" "refm/api/src/win32/registry.rd")
(find-rurima "--- KEY_ALL_ACCESS" "== Constants" "= module Win32::Registry::Constants" "refm/api/src/win32/registry.rd")
(find-rurima "--- REG_CREATED_NEW_KEY" "== Constants" "= module Win32::Registry::Constants" "refm/api/src/win32/registry.rd")
(find-rurima "--- REG_OPENED_EXISTING_KEY" "== Constants" "= module Win32::Registry::Constants" "refm/api/src/win32/registry.rd")
(find-rurima "--- REG_OPTION_RESERVED" "== Constants" "= module Win32::Registry::Constants" "refm/api/src/win32/registry.rd")
(find-rurima "--- REG_OPTION_NON_VOLATILE" "== Constants" "= module Win32::Registry::Constants" "refm/api/src/win32/registry.rd")
(find-rurima "--- REG_OPTION_VOLATILE" "== Constants" "= module Win32::Registry::Constants" "refm/api/src/win32/registry.rd")
(find-rurima "--- REG_OPTION_CREATE_LINK" "== Constants" "= module Win32::Registry::Constants" "refm/api/src/win32/registry.rd")
(find-rurima "--- REG_OPTION_BACKUP_RESTORE" "== Constants" "= module Win32::Registry::Constants" "refm/api/src/win32/registry.rd")
(find-rurima "--- REG_OPTION_OPEN_LINK" "== Constants" "= module Win32::Registry::Constants" "refm/api/src/win32/registry.rd")
(find-rurima "--- REG_LEGAL_OPTION" "== Constants" "= module Win32::Registry::Constants" "refm/api/src/win32/registry.rd")
(find-rurima "--- REG_WHOLE_HIVE_VOLATILE" "== Constants" "= module Win32::Registry::Constants" "refm/api/src/win32/registry.rd")
(find-rurima "--- REG_REFRESH_HIVE" "== Constants" "= module Win32::Registry::Constants" "refm/api/src/win32/registry.rd")
(find-rurima "--- REG_NO_LAZY_FLUSH" "== Constants" "= module Win32::Registry::Constants" "refm/api/src/win32/registry.rd")
(find-rurima "--- REG_FORCE_RESTORE" "== Constants" "= module Win32::Registry::Constants" "refm/api/src/win32/registry.rd")
(find-rurima "--- MAX_KEY_LENGTH" "== Constants" "= module Win32::Registry::Constants" "refm/api/src/win32/registry.rd")
(find-rurima "--- MAX_VALUE_LENGTH" "== Constants" "= module Win32::Registry::Constants" "refm/api/src/win32/registry.rd")
(find-rurima "= class Win32::Resolv" "refm/api/src/win32/resolv.rd")
(find-rurima "== module functions" "= class Win32::Resolv" "refm/api/src/win32/resolv.rd")
(find-rurima "--- get_hosts_path -> String | nil" "== module functions" "= class Win32::Resolv" "refm/api/src/win32/resolv.rd")
(find-rurima "--- get_resolv_info -> [[String], [String]]" "== module functions" "= class Win32::Resolv" "refm/api/src/win32/resolv.rd")
(find-rurima "= class WSDL::Binding < WSDL::Info" "refm/api/src/wsdl/binding.rd")
(find-rurima "== Class Methods" "= class WSDL::Binding < WSDL::Info" "refm/api/src/wsdl/binding.rd")
(find-rurima "--- new" "== Class Methods" "= class WSDL::Binding < WSDL::Info" "refm/api/src/wsdl/binding.rd")
(find-rurima "== Instance Methods" "= class WSDL::Binding < WSDL::Info" "refm/api/src/wsdl/binding.rd")
(find-rurima "--- name" "== Instance Methods" "= class WSDL::Binding < WSDL::Info" "refm/api/src/wsdl/binding.rd")
(find-rurima "--- operations" "== Instance Methods" "= class WSDL::Binding < WSDL::Info" "refm/api/src/wsdl/binding.rd")
(find-rurima "--- parse_attr(attr, value)" "== Instance Methods" "= class WSDL::Binding < WSDL::Info" "refm/api/src/wsdl/binding.rd")
(find-rurima "--- parse_element(element)" "== Instance Methods" "= class WSDL::Binding < WSDL::Info" "refm/api/src/wsdl/binding.rd")
(find-rurima "--- soapbinding" "== Instance Methods" "= class WSDL::Binding < WSDL::Info" "refm/api/src/wsdl/binding.rd")
(find-rurima "--- targetnamespace" "== Instance Methods" "= class WSDL::Binding < WSDL::Info" "refm/api/src/wsdl/binding.rd")
(find-rurima "--- type" "== Instance Methods" "= class WSDL::Binding < WSDL::Info" "refm/api/src/wsdl/binding.rd")
(find-rurima "= class WSDL::Port < WSDL::Info" "refm/api/src/wsdl/port.rd")
(find-rurima "== Class Methods" "= class WSDL::Port < WSDL::Info" "refm/api/src/wsdl/port.rd")
(find-rurima "--- new" "== Class Methods" "= class WSDL::Port < WSDL::Info" "refm/api/src/wsdl/port.rd")
(find-rurima "== Instance Methods" "= class WSDL::Port < WSDL::Info" "refm/api/src/wsdl/port.rd")
(find-rurima "--- binding" "== Instance Methods" "= class WSDL::Port < WSDL::Info" "refm/api/src/wsdl/port.rd")
(find-rurima "--- find_binding" "== Instance Methods" "= class WSDL::Port < WSDL::Info" "refm/api/src/wsdl/port.rd")
(find-rurima "--- inputoperation_map" "== Instance Methods" "= class WSDL::Port < WSDL::Info" "refm/api/src/wsdl/port.rd")
(find-rurima "--- name" "== Instance Methods" "= class WSDL::Port < WSDL::Info" "refm/api/src/wsdl/port.rd")
(find-rurima "--- outputoperation_map" "== Instance Methods" "= class WSDL::Port < WSDL::Info" "refm/api/src/wsdl/port.rd")
(find-rurima "--- parse_attr(attr, value)" "== Instance Methods" "= class WSDL::Port < WSDL::Info" "refm/api/src/wsdl/port.rd")
(find-rurima "--- parse_element(element)" "== Instance Methods" "= class WSDL::Port < WSDL::Info" "refm/api/src/wsdl/port.rd")
(find-rurima "--- porttype" "== Instance Methods" "= class WSDL::Port < WSDL::Info" "refm/api/src/wsdl/port.rd")
(find-rurima "--- soap_address" "== Instance Methods" "= class WSDL::Port < WSDL::Info" "refm/api/src/wsdl/port.rd")
(find-rurima "--- targetnamespace" "== Instance Methods" "= class WSDL::Port < WSDL::Info" "refm/api/src/wsdl/port.rd")
(find-rurima "= class WSDL::PortType < WSDL::Info" "refm/api/src/wsdl/port_type.rd")
(find-rurima "== Class Methods" "= class WSDL::PortType < WSDL::Info" "refm/api/src/wsdl/port_type.rd")
(find-rurima "--- new" "== Class Methods" "= class WSDL::PortType < WSDL::Info" "refm/api/src/wsdl/port_type.rd")
(find-rurima "== Instance Methods" "= class WSDL::PortType < WSDL::Info" "refm/api/src/wsdl/port_type.rd")
(find-rurima "--- find_binding" "== Instance Methods" "= class WSDL::PortType < WSDL::Info" "refm/api/src/wsdl/port_type.rd")
(find-rurima "--- locations" "== Instance Methods" "= class WSDL::PortType < WSDL::Info" "refm/api/src/wsdl/port_type.rd")
(find-rurima "--- name" "== Instance Methods" "= class WSDL::PortType < WSDL::Info" "refm/api/src/wsdl/port_type.rd")
(find-rurima "--- operations" "== Instance Methods" "= class WSDL::PortType < WSDL::Info" "refm/api/src/wsdl/port_type.rd")
(find-rurima "--- parse_attr(attr, value)" "== Instance Methods" "= class WSDL::PortType < WSDL::Info" "refm/api/src/wsdl/port_type.rd")
(find-rurima "--- parse_element(element)" "== Instance Methods" "= class WSDL::PortType < WSDL::Info" "refm/api/src/wsdl/port_type.rd")
(find-rurima "--- targetnamespace" "== Instance Methods" "= class WSDL::PortType < WSDL::Info" "refm/api/src/wsdl/port_type.rd")
(find-rurima "= class WSDL::OperationBinding < WSDL::Info" "refm/api/src/wsdl/operation_binding.rd")
(find-rurima "== Class Methods" "= class WSDL::OperationBinding < WSDL::Info" "refm/api/src/wsdl/operation_binding.rd")
(find-rurima "--- new" "== Class Methods" "= class WSDL::OperationBinding < WSDL::Info" "refm/api/src/wsdl/operation_binding.rd")
(find-rurima "== Instance Methods" "= class WSDL::OperationBinding < WSDL::Info" "refm/api/src/wsdl/operation_binding.rd")
(find-rurima "--- fault" "== Instance Methods" "= class WSDL::OperationBinding < WSDL::Info" "refm/api/src/wsdl/operation_binding.rd")
(find-rurima "--- find_operation" "== Instance Methods" "= class WSDL::OperationBinding < WSDL::Info" "refm/api/src/wsdl/operation_binding.rd")
(find-rurima "--- input" "== Instance Methods" "= class WSDL::OperationBinding < WSDL::Info" "refm/api/src/wsdl/operation_binding.rd")
(find-rurima "--- name" "== Instance Methods" "= class WSDL::OperationBinding < WSDL::Info" "refm/api/src/wsdl/operation_binding.rd")
(find-rurima "--- output" "== Instance Methods" "= class WSDL::OperationBinding < WSDL::Info" "refm/api/src/wsdl/operation_binding.rd")
(find-rurima "--- parse_attr(attr, value)" "== Instance Methods" "= class WSDL::OperationBinding < WSDL::Info" "refm/api/src/wsdl/operation_binding.rd")
(find-rurima "--- parse_element(element)" "== Instance Methods" "= class WSDL::OperationBinding < WSDL::Info" "refm/api/src/wsdl/operation_binding.rd")
(find-rurima "--- porttype" "== Instance Methods" "= class WSDL::OperationBinding < WSDL::Info" "refm/api/src/wsdl/operation_binding.rd")
(find-rurima "--- soapaction" "== Instance Methods" "= class WSDL::OperationBinding < WSDL::Info" "refm/api/src/wsdl/operation_binding.rd")
(find-rurima "--- soapoperation" "== Instance Methods" "= class WSDL::OperationBinding < WSDL::Info" "refm/api/src/wsdl/operation_binding.rd")
(find-rurima "--- soapoperation_name" "== Instance Methods" "= class WSDL::OperationBinding < WSDL::Info" "refm/api/src/wsdl/operation_binding.rd")
(find-rurima "--- soapoperation_style" "== Instance Methods" "= class WSDL::OperationBinding < WSDL::Info" "refm/api/src/wsdl/operation_binding.rd")
(find-rurima "--- targetnamespace" "== Instance Methods" "= class WSDL::OperationBinding < WSDL::Info" "refm/api/src/wsdl/operation_binding.rd")
(find-rurima "= class WSDL::Operation::NameInfo < Object" "refm/api/src/wsdl/operation.rd")
(find-rurima "== Class Methods" "= class WSDL::Operation::NameInfo < Object" "refm/api/src/wsdl/operation.rd")
(find-rurima "--- new(op_name, optype_name, parts)" "== Class Methods" "= class WSDL::Operation::NameInfo < Object" "refm/api/src/wsdl/operation.rd")
(find-rurima "== Instance Methods" "= class WSDL::Operation::NameInfo < Object" "refm/api/src/wsdl/operation.rd")
(find-rurima "--- op_name" "== Instance Methods" "= class WSDL::Operation::NameInfo < Object" "refm/api/src/wsdl/operation.rd")
(find-rurima "--- optype_name" "== Instance Methods" "= class WSDL::Operation::NameInfo < Object" "refm/api/src/wsdl/operation.rd")
(find-rurima "--- parts" "== Instance Methods" "= class WSDL::Operation::NameInfo < Object" "refm/api/src/wsdl/operation.rd")
(find-rurima "= class WSDL::Operation < WSDL::Info" "refm/api/src/wsdl/operation.rd")
(find-rurima "== Class Methods" "= class WSDL::Operation < WSDL::Info" "refm/api/src/wsdl/operation.rd")
(find-rurima "--- new" "== Class Methods" "= class WSDL::Operation < WSDL::Info" "refm/api/src/wsdl/operation.rd")
(find-rurima "== Instance Methods" "= class WSDL::Operation < WSDL::Info" "refm/api/src/wsdl/operation.rd")
(find-rurima "--- fault" "== Instance Methods" "= class WSDL::Operation < WSDL::Info" "refm/api/src/wsdl/operation.rd")
(find-rurima "--- input" "== Instance Methods" "= class WSDL::Operation < WSDL::Info" "refm/api/src/wsdl/operation.rd")
(find-rurima "--- input_info" "== Instance Methods" "= class WSDL::Operation < WSDL::Info" "refm/api/src/wsdl/operation.rd")
(find-rurima "--- inputname" "== Instance Methods" "= class WSDL::Operation < WSDL::Info" "refm/api/src/wsdl/operation.rd")
(find-rurima "--- inputparts" "== Instance Methods" "= class WSDL::Operation < WSDL::Info" "refm/api/src/wsdl/operation.rd")
(find-rurima "--- name" "== Instance Methods" "= class WSDL::Operation < WSDL::Info" "refm/api/src/wsdl/operation.rd")
(find-rurima "--- output" "== Instance Methods" "= class WSDL::Operation < WSDL::Info" "refm/api/src/wsdl/operation.rd")
(find-rurima "--- output_info" "== Instance Methods" "= class WSDL::Operation < WSDL::Info" "refm/api/src/wsdl/operation.rd")
(find-rurima "--- outputname" "== Instance Methods" "= class WSDL::Operation < WSDL::Info" "refm/api/src/wsdl/operation.rd")
(find-rurima "--- outputparts" "== Instance Methods" "= class WSDL::Operation < WSDL::Info" "refm/api/src/wsdl/operation.rd")
(find-rurima "--- parameter_order" "== Instance Methods" "= class WSDL::Operation < WSDL::Info" "refm/api/src/wsdl/operation.rd")
(find-rurima "--- parse_attr(attr, value)" "== Instance Methods" "= class WSDL::Operation < WSDL::Info" "refm/api/src/wsdl/operation.rd")
(find-rurima "--- parse_element(element)" "== Instance Methods" "= class WSDL::Operation < WSDL::Info" "refm/api/src/wsdl/operation.rd")
(find-rurima "--- targetnamespace" "== Instance Methods" "= class WSDL::Operation < WSDL::Info" "refm/api/src/wsdl/operation.rd")
(find-rurima "--- type" "== Instance Methods" "= class WSDL::Operation < WSDL::Info" "refm/api/src/wsdl/operation.rd")
(find-rurima "== Private Instance Methods" "= class WSDL::Operation < WSDL::Info" "refm/api/src/wsdl/operation.rd")
(find-rurima "--- sort_parts(parts)" "== Private Instance Methods" "= class WSDL::Operation < WSDL::Info" "refm/api/src/wsdl/operation.rd")
(find-rurima "= class WSDL::XMLSchema::Content < WSDL::Info" "refm/api/src/wsdl/xmlSchema/content.rd")
(find-rurima "== Class Methods" "= class WSDL::XMLSchema::Content < WSDL::Info" "refm/api/src/wsdl/xmlSchema/content.rd")
(find-rurima "--- new" "== Class Methods" "= class WSDL::XMLSchema::Content < WSDL::Info" "refm/api/src/wsdl/xmlSchema/content.rd")
(find-rurima "== Instance Methods" "= class WSDL::XMLSchema::Content < WSDL::Info" "refm/api/src/wsdl/xmlSchema/content.rd")
(find-rurima "--- <<(content)" "== Instance Methods" "= class WSDL::XMLSchema::Content < WSDL::Info" "refm/api/src/wsdl/xmlSchema/content.rd")
(find-rurima "--- contents" "== Instance Methods" "= class WSDL::XMLSchema::Content < WSDL::Info" "refm/api/src/wsdl/xmlSchema/content.rd")
(find-rurima "--- each" "== Instance Methods" "= class WSDL::XMLSchema::Content < WSDL::Info" "refm/api/src/wsdl/xmlSchema/content.rd")
(find-rurima "--- elements" "== Instance Methods" "= class WSDL::XMLSchema::Content < WSDL::Info" "refm/api/src/wsdl/xmlSchema/content.rd")
(find-rurima "--- final" "== Instance Methods" "= class WSDL::XMLSchema::Content < WSDL::Info" "refm/api/src/wsdl/xmlSchema/content.rd")
(find-rurima "--- final=" "== Instance Methods" "= class WSDL::XMLSchema::Content < WSDL::Info" "refm/api/src/wsdl/xmlSchema/content.rd")
(find-rurima "--- mixed" "== Instance Methods" "= class WSDL::XMLSchema::Content < WSDL::Info" "refm/api/src/wsdl/xmlSchema/content.rd")
(find-rurima "--- mixed=" "== Instance Methods" "= class WSDL::XMLSchema::Content < WSDL::Info" "refm/api/src/wsdl/xmlSchema/content.rd")
(find-rurima "--- parse_attr(attr, value)" "== Instance Methods" "= class WSDL::XMLSchema::Content < WSDL::Info" "refm/api/src/wsdl/xmlSchema/content.rd")
(find-rurima "--- parse_element(element)" "== Instance Methods" "= class WSDL::XMLSchema::Content < WSDL::Info" "refm/api/src/wsdl/xmlSchema/content.rd")
(find-rurima "--- parse_epilogue" "== Instance Methods" "= class WSDL::XMLSchema::Content < WSDL::Info" "refm/api/src/wsdl/xmlSchema/content.rd")
(find-rurima "--- targetnamespace" "== Instance Methods" "= class WSDL::XMLSchema::Content < WSDL::Info" "refm/api/src/wsdl/xmlSchema/content.rd")
(find-rurima "--- type" "== Instance Methods" "= class WSDL::XMLSchema::Content < WSDL::Info" "refm/api/src/wsdl/xmlSchema/content.rd")
(find-rurima "--- type=" "== Instance Methods" "= class WSDL::XMLSchema::Content < WSDL::Info" "refm/api/src/wsdl/xmlSchema/content.rd")
(find-rurima "== Private Instance Methods" "= class WSDL::XMLSchema::Content < WSDL::Info" "refm/api/src/wsdl/xmlSchema/content.rd")
(find-rurima "--- update_elements" "== Private Instance Methods" "= class WSDL::XMLSchema::Content < WSDL::Info" "refm/api/src/wsdl/xmlSchema/content.rd")
(find-rurima "= class WSDL::XMLSchema::Choice < WSDL::Info" "refm/api/src/wsdl/xmlSchema/choice.rd")
(find-rurima "== Class Methods" "= class WSDL::XMLSchema::Choice < WSDL::Info" "refm/api/src/wsdl/xmlSchema/choice.rd")
(find-rurima "--- new" "== Class Methods" "= class WSDL::XMLSchema::Choice < WSDL::Info" "refm/api/src/wsdl/xmlSchema/choice.rd")
(find-rurima "== Instance Methods" "= class WSDL::XMLSchema::Choice < WSDL::Info" "refm/api/src/wsdl/xmlSchema/choice.rd")
(find-rurima "--- <<(element)" "== Instance Methods" "= class WSDL::XMLSchema::Choice < WSDL::Info" "refm/api/src/wsdl/xmlSchema/choice.rd")
(find-rurima "--- elementformdefault" "== Instance Methods" "= class WSDL::XMLSchema::Choice < WSDL::Info" "refm/api/src/wsdl/xmlSchema/choice.rd")
(find-rurima "--- elements" "== Instance Methods" "= class WSDL::XMLSchema::Choice < WSDL::Info" "refm/api/src/wsdl/xmlSchema/choice.rd")
(find-rurima "--- maxoccurs" "== Instance Methods" "= class WSDL::XMLSchema::Choice < WSDL::Info" "refm/api/src/wsdl/xmlSchema/choice.rd")
(find-rurima "--- minoccurs" "== Instance Methods" "= class WSDL::XMLSchema::Choice < WSDL::Info" "refm/api/src/wsdl/xmlSchema/choice.rd")
(find-rurima "--- parse_attr(attr, value)" "== Instance Methods" "= class WSDL::XMLSchema::Choice < WSDL::Info" "refm/api/src/wsdl/xmlSchema/choice.rd")
(find-rurima "--- parse_element(element)" "== Instance Methods" "= class WSDL::XMLSchema::Choice < WSDL::Info" "refm/api/src/wsdl/xmlSchema/choice.rd")
(find-rurima "--- targetnamespace" "== Instance Methods" "= class WSDL::XMLSchema::Choice < WSDL::Info" "refm/api/src/wsdl/xmlSchema/choice.rd")
(find-rurima "= class WSDL::XMLSchema::SimpleContent < WSDL::Info" "refm/api/src/wsdl/xmlSchema/simpleContent.rd")
(find-rurima "== Class Methods" "= class WSDL::XMLSchema::SimpleContent < WSDL::Info" "refm/api/src/wsdl/xmlSchema/simpleContent.rd")
(find-rurima "--- new" "== Class Methods" "= class WSDL::XMLSchema::SimpleContent < WSDL::Info" "refm/api/src/wsdl/xmlSchema/simpleContent.rd")
(find-rurima "== Instance Methods" "= class WSDL::XMLSchema::SimpleContent < WSDL::Info" "refm/api/src/wsdl/xmlSchema/simpleContent.rd")
(find-rurima "--- attributes" "== Instance Methods" "= class WSDL::XMLSchema::SimpleContent < WSDL::Info" "refm/api/src/wsdl/xmlSchema/simpleContent.rd")
(find-rurima "--- base" "== Instance Methods" "= class WSDL::XMLSchema::SimpleContent < WSDL::Info" "refm/api/src/wsdl/xmlSchema/simpleContent.rd")
(find-rurima "--- base=" "== Instance Methods" "= class WSDL::XMLSchema::SimpleContent < WSDL::Info" "refm/api/src/wsdl/xmlSchema/simpleContent.rd")
(find-rurima "--- check_lexical_format(value)" "== Instance Methods" "= class WSDL::XMLSchema::SimpleContent < WSDL::Info" "refm/api/src/wsdl/xmlSchema/simpleContent.rd")
(find-rurima "--- content" "== Instance Methods" "= class WSDL::XMLSchema::SimpleContent < WSDL::Info" "refm/api/src/wsdl/xmlSchema/simpleContent.rd")
(find-rurima "--- derivetype" "== Instance Methods" "= class WSDL::XMLSchema::SimpleContent < WSDL::Info" "refm/api/src/wsdl/xmlSchema/simpleContent.rd")
(find-rurima "--- extension" "== Instance Methods" "= class WSDL::XMLSchema::SimpleContent < WSDL::Info" "refm/api/src/wsdl/xmlSchema/simpleContent.rd")
(find-rurima "--- parse_attr" "== Instance Methods" "= class WSDL::XMLSchema::SimpleContent < WSDL::Info" "refm/api/src/wsdl/xmlSchema/simpleContent.rd")
(find-rurima "--- parse_element(element)" "== Instance Methods" "= class WSDL::XMLSchema::SimpleContent < WSDL::Info" "refm/api/src/wsdl/xmlSchema/simpleContent.rd")
(find-rurima "--- restriction" "== Instance Methods" "= class WSDL::XMLSchema::SimpleContent < WSDL::Info" "refm/api/src/wsdl/xmlSchema/simpleContent.rd")
(find-rurima "--- targetnamespace" "== Instance Methods" "= class WSDL::XMLSchema::SimpleContent < WSDL::Info" "refm/api/src/wsdl/xmlSchema/simpleContent.rd")
(find-rurima "= class WSDL::XMLSchema::Enumeration < WSDL::Info" "refm/api/src/wsdl/xmlSchema/enumeration.rd")
(find-rurima "== Class Methods" "= class WSDL::XMLSchema::Enumeration < WSDL::Info" "refm/api/src/wsdl/xmlSchema/enumeration.rd")
(find-rurima "--- new" "== Class Methods" "= class WSDL::XMLSchema::Enumeration < WSDL::Info" "refm/api/src/wsdl/xmlSchema/enumeration.rd")
(find-rurima "== Instance Methods" "= class WSDL::XMLSchema::Enumeration < WSDL::Info" "refm/api/src/wsdl/xmlSchema/enumeration.rd")
(find-rurima "--- parse_element(attr, value)" "== Instance Methods" "= class WSDL::XMLSchema::Enumeration < WSDL::Info" "refm/api/src/wsdl/xmlSchema/enumeration.rd")
(find-rurima "--- parse_element(element)" "== Instance Methods" "= class WSDL::XMLSchema::Enumeration < WSDL::Info" "refm/api/src/wsdl/xmlSchema/enumeration.rd")
(find-rurima "= class WSDL::XMLSchema::Annotation < WSDL::Info" "refm/api/src/wsdl/xmlSchema/annotation.rd")
(find-rurima "== Class Methods" "= class WSDL::XMLSchema::Annotation < WSDL::Info" "refm/api/src/wsdl/xmlSchema/annotation.rd")
(find-rurima "--- new" "== Class Methods" "= class WSDL::XMLSchema::Annotation < WSDL::Info" "refm/api/src/wsdl/xmlSchema/annotation.rd")
(find-rurima "== Instance Methods" "= class WSDL::XMLSchema::Annotation < WSDL::Info" "refm/api/src/wsdl/xmlSchema/annotation.rd")
(find-rurima "--- parse_attr(attr, value)" "== Instance Methods" "= class WSDL::XMLSchema::Annotation < WSDL::Info" "refm/api/src/wsdl/xmlSchema/annotation.rd")
(find-rurima "--- parse_element(element)" "== Instance Methods" "= class WSDL::XMLSchema::Annotation < WSDL::Info" "refm/api/src/wsdl/xmlSchema/annotation.rd")
(find-rurima "= class WSDL::XMLSchema::SimpleType < WSDL::Info" "refm/api/src/wsdl/xmlSchema/simpleType.rd")
(find-rurima "== Class Methods" "= class WSDL::XMLSchema::SimpleType < WSDL::Info" "refm/api/src/wsdl/xmlSchema/simpleType.rd")
(find-rurima "--- new(name = nil)" "== Class Methods" "= class WSDL::XMLSchema::SimpleType < WSDL::Info" "refm/api/src/wsdl/xmlSchema/simpleType.rd")
(find-rurima "== Instance Methods" "= class WSDL::XMLSchema::SimpleType < WSDL::Info" "refm/api/src/wsdl/xmlSchema/simpleType.rd")
(find-rurima "--- base" "== Instance Methods" "= class WSDL::XMLSchema::SimpleType < WSDL::Info" "refm/api/src/wsdl/xmlSchema/simpleType.rd")
(find-rurima "--- check_lexical_format(value)" "== Instance Methods" "= class WSDL::XMLSchema::SimpleType < WSDL::Info" "refm/api/src/wsdl/xmlSchema/simpleType.rd")
(find-rurima "--- derivetype" "== Instance Methods" "= class WSDL::XMLSchema::SimpleType < WSDL::Info" "refm/api/src/wsdl/xmlSchema/simpleType.rd")
(find-rurima "--- name" "== Instance Methods" "= class WSDL::XMLSchema::SimpleType < WSDL::Info" "refm/api/src/wsdl/xmlSchema/simpleType.rd")
(find-rurima "--- name=" "== Instance Methods" "= class WSDL::XMLSchema::SimpleType < WSDL::Info" "refm/api/src/wsdl/xmlSchema/simpleType.rd")
(find-rurima "--- parse_attr(attr, value)" "== Instance Methods" "= class WSDL::XMLSchema::SimpleType < WSDL::Info" "refm/api/src/wsdl/xmlSchema/simpleType.rd")
(find-rurima "--- parse_element(element)" "== Instance Methods" "= class WSDL::XMLSchema::SimpleType < WSDL::Info" "refm/api/src/wsdl/xmlSchema/simpleType.rd")
(find-rurima "--- restriction" "== Instance Methods" "= class WSDL::XMLSchema::SimpleType < WSDL::Info" "refm/api/src/wsdl/xmlSchema/simpleType.rd")
(find-rurima "--- targetnamespace" "== Instance Methods" "= class WSDL::XMLSchema::SimpleType < WSDL::Info" "refm/api/src/wsdl/xmlSchema/simpleType.rd")
(find-rurima "= class WSDL::XMLSchema::Attribute < WSDL::Info" "refm/api/src/wsdl/xmlSchema/attribute.rd")
(find-rurima "== Class Methods" "= class WSDL::XMLSchema::Attribute < WSDL::Info" "refm/api/src/wsdl/xmlSchema/attribute.rd")
(find-rurima "--- new" "== Class Methods" "= class WSDL::XMLSchema::Attribute < WSDL::Info" "refm/api/src/wsdl/xmlSchema/attribute.rd")
(find-rurima "--- attr_reader_ref(symbol)" "== Class Methods" "= class WSDL::XMLSchema::Attribute < WSDL::Info" "refm/api/src/wsdl/xmlSchema/attribute.rd")
(find-rurima "== Instance Methods" "= class WSDL::XMLSchema::Attribute < WSDL::Info" "refm/api/src/wsdl/xmlSchema/attribute.rd")
(find-rurima "--- arytype" "== Instance Methods" "= class WSDL::XMLSchema::Attribute < WSDL::Info" "refm/api/src/wsdl/xmlSchema/attribute.rd")
(find-rurima "--- arytype=" "== Instance Methods" "= class WSDL::XMLSchema::Attribute < WSDL::Info" "refm/api/src/wsdl/xmlSchema/attribute.rd")
(find-rurima "--- default" "== Instance Methods" "= class WSDL::XMLSchema::Attribute < WSDL::Info" "refm/api/src/wsdl/xmlSchema/attribute.rd")
(find-rurima "--- default=" "== Instance Methods" "= class WSDL::XMLSchema::Attribute < WSDL::Info" "refm/api/src/wsdl/xmlSchema/attribute.rd")
(find-rurima "--- fixed" "== Instance Methods" "= class WSDL::XMLSchema::Attribute < WSDL::Info" "refm/api/src/wsdl/xmlSchema/attribute.rd")
(find-rurima "--- fixed=" "== Instance Methods" "= class WSDL::XMLSchema::Attribute < WSDL::Info" "refm/api/src/wsdl/xmlSchema/attribute.rd")
(find-rurima "--- form" "== Instance Methods" "= class WSDL::XMLSchema::Attribute < WSDL::Info" "refm/api/src/wsdl/xmlSchema/attribute.rd")
(find-rurima "--- form=" "== Instance Methods" "= class WSDL::XMLSchema::Attribute < WSDL::Info" "refm/api/src/wsdl/xmlSchema/attribute.rd")
(find-rurima "--- local_simpletype" "== Instance Methods" "= class WSDL::XMLSchema::Attribute < WSDL::Info" "refm/api/src/wsdl/xmlSchema/attribute.rd")
(find-rurima "--- local_simpletype=" "== Instance Methods" "= class WSDL::XMLSchema::Attribute < WSDL::Info" "refm/api/src/wsdl/xmlSchema/attribute.rd")
(find-rurima "--- name" "== Instance Methods" "= class WSDL::XMLSchema::Attribute < WSDL::Info" "refm/api/src/wsdl/xmlSchema/attribute.rd")
(find-rurima "--- name=" "== Instance Methods" "= class WSDL::XMLSchema::Attribute < WSDL::Info" "refm/api/src/wsdl/xmlSchema/attribute.rd")
(find-rurima "--- parse_attr(attr, value)" "== Instance Methods" "= class WSDL::XMLSchema::Attribute < WSDL::Info" "refm/api/src/wsdl/xmlSchema/attribute.rd")
(find-rurima "--- parse_element(element)" "== Instance Methods" "= class WSDL::XMLSchema::Attribute < WSDL::Info" "refm/api/src/wsdl/xmlSchema/attribute.rd")
(find-rurima "--- ref" "== Instance Methods" "= class WSDL::XMLSchema::Attribute < WSDL::Info" "refm/api/src/wsdl/xmlSchema/attribute.rd")
(find-rurima "--- ref=" "== Instance Methods" "= class WSDL::XMLSchema::Attribute < WSDL::Info" "refm/api/src/wsdl/xmlSchema/attribute.rd")
(find-rurima "--- refelement" "== Instance Methods" "= class WSDL::XMLSchema::Attribute < WSDL::Info" "refm/api/src/wsdl/xmlSchema/attribute.rd")
(find-rurima "--- targetnamespace" "== Instance Methods" "= class WSDL::XMLSchema::Attribute < WSDL::Info" "refm/api/src/wsdl/xmlSchema/attribute.rd")
(find-rurima "--- type" "== Instance Methods" "= class WSDL::XMLSchema::Attribute < WSDL::Info" "refm/api/src/wsdl/xmlSchema/attribute.rd")
(find-rurima "--- type=" "== Instance Methods" "= class WSDL::XMLSchema::Attribute < WSDL::Info" "refm/api/src/wsdl/xmlSchema/attribute.rd")
(find-rurima "--- use" "== Instance Methods" "= class WSDL::XMLSchema::Attribute < WSDL::Info" "refm/api/src/wsdl/xmlSchema/attribute.rd")
(find-rurima "--- use=" "== Instance Methods" "= class WSDL::XMLSchema::Attribute < WSDL::Info" "refm/api/src/wsdl/xmlSchema/attribute.rd")
(find-rurima "== Private Instance Methods" "= class WSDL::XMLSchema::Attribute < WSDL::Info" "refm/api/src/wsdl/xmlSchema/attribute.rd")
(find-rurima "--- directelement?" "== Private Instance Methods" "= class WSDL::XMLSchema::Attribute < WSDL::Info" "refm/api/src/wsdl/xmlSchema/attribute.rd")
(find-rurima "= class WSDL::XMLSchema::Pattern < WSDL::Info" "refm/api/src/wsdl/xmlSchema/pattern.rd")
(find-rurima "== Class Methods" "= class WSDL::XMLSchema::Pattern < WSDL::Info" "refm/api/src/wsdl/xmlSchema/pattern.rd")
(find-rurima "--- new" "== Class Methods" "= class WSDL::XMLSchema::Pattern < WSDL::Info" "refm/api/src/wsdl/xmlSchema/pattern.rd")
(find-rurima "== Instance Methods" "= class WSDL::XMLSchema::Pattern < WSDL::Info" "refm/api/src/wsdl/xmlSchema/pattern.rd")
(find-rurima "--- parse_attr(attr, value)" "== Instance Methods" "= class WSDL::XMLSchema::Pattern < WSDL::Info" "refm/api/src/wsdl/xmlSchema/pattern.rd")
(find-rurima "--- parse_element(element)" "== Instance Methods" "= class WSDL::XMLSchema::Pattern < WSDL::Info" "refm/api/src/wsdl/xmlSchema/pattern.rd")
(find-rurima "= class WSDL::XMLSchema::All < WSDL::Info" "refm/api/src/wsdl/xmlSchema/all.rd")
(find-rurima "== Class Methods" "= class WSDL::XMLSchema::All < WSDL::Info" "refm/api/src/wsdl/xmlSchema/all.rd")
(find-rurima "--- new" "== Class Methods" "= class WSDL::XMLSchema::All < WSDL::Info" "refm/api/src/wsdl/xmlSchema/all.rd")
(find-rurima "== Instance Methods" "= class WSDL::XMLSchema::All < WSDL::Info" "refm/api/src/wsdl/xmlSchema/all.rd")
(find-rurima "--- <<(element)" "== Instance Methods" "= class WSDL::XMLSchema::All < WSDL::Info" "refm/api/src/wsdl/xmlSchema/all.rd")
(find-rurima "--- elementformdefault" "== Instance Methods" "= class WSDL::XMLSchema::All < WSDL::Info" "refm/api/src/wsdl/xmlSchema/all.rd")
(find-rurima "--- elements" "== Instance Methods" "= class WSDL::XMLSchema::All < WSDL::Info" "refm/api/src/wsdl/xmlSchema/all.rd")
(find-rurima "--- maxoccurs" "== Instance Methods" "= class WSDL::XMLSchema::All < WSDL::Info" "refm/api/src/wsdl/xmlSchema/all.rd")
(find-rurima "--- minoccurs" "== Instance Methods" "= class WSDL::XMLSchema::All < WSDL::Info" "refm/api/src/wsdl/xmlSchema/all.rd")
(find-rurima "--- parse_attr(attr, value)" "== Instance Methods" "= class WSDL::XMLSchema::All < WSDL::Info" "refm/api/src/wsdl/xmlSchema/all.rd")
(find-rurima "--- parse_element(element)" "== Instance Methods" "= class WSDL::XMLSchema::All < WSDL::Info" "refm/api/src/wsdl/xmlSchema/all.rd")
(find-rurima "--- targetnamespace" "== Instance Methods" "= class WSDL::XMLSchema::All < WSDL::Info" "refm/api/src/wsdl/xmlSchema/all.rd")
(find-rurima "= class WSDL::XMLSchema::Schema < WSDL::Info" "refm/api/src/wsdl/xmlSchema/schema.rd")
(find-rurima "== Class Methods" "= class WSDL::XMLSchema::Schema < WSDL::Info" "refm/api/src/wsdl/xmlSchema/schema.rd")
(find-rurima "--- new" "== Class Methods" "= class WSDL::XMLSchema::Schema < WSDL::Info" "refm/api/src/wsdl/xmlSchema/schema.rd")
(find-rurima "--- parse_element(element)" "== Class Methods" "= class WSDL::XMLSchema::Schema < WSDL::Info" "refm/api/src/wsdl/xmlSchema/schema.rd")
(find-rurima "== Instance Methods" "= class WSDL::XMLSchema::Schema < WSDL::Info" "refm/api/src/wsdl/xmlSchema/schema.rd")
(find-rurima "--- attributeformdefault" "== Instance Methods" "= class WSDL::XMLSchema::Schema < WSDL::Info" "refm/api/src/wsdl/xmlSchema/schema.rd")
(find-rurima "--- attributeformdefault=(val)" "== Instance Methods" "= class WSDL::XMLSchema::Schema < WSDL::Info" "refm/api/src/wsdl/xmlSchema/schema.rd")
(find-rurima "--- attributes" "== Instance Methods" "= class WSDL::XMLSchema::Schema < WSDL::Info" "refm/api/src/wsdl/xmlSchema/schema.rd")
(find-rurima "--- collect_attributes" "== Instance Methods" "= class WSDL::XMLSchema::Schema < WSDL::Info" "refm/api/src/wsdl/xmlSchema/schema.rd")
(find-rurima "--- collect_complextypes" "== Instance Methods" "= class WSDL::XMLSchema::Schema < WSDL::Info" "refm/api/src/wsdl/xmlSchema/schema.rd")
(find-rurima "--- collect_elements" "== Instance Methods" "= class WSDL::XMLSchema::Schema < WSDL::Info" "refm/api/src/wsdl/xmlSchema/schema.rd")
(find-rurima "--- collect_simpletypes" "== Instance Methods" "= class WSDL::XMLSchema::Schema < WSDL::Info" "refm/api/src/wsdl/xmlSchema/schema.rd")
(find-rurima "--- complextypes" "== Instance Methods" "= class WSDL::XMLSchema::Schema < WSDL::Info" "refm/api/src/wsdl/xmlSchema/schema.rd")
(find-rurima "--- elementformdefault" "== Instance Methods" "= class WSDL::XMLSchema::Schema < WSDL::Info" "refm/api/src/wsdl/xmlSchema/schema.rd")
(find-rurima "--- elementformdefault=(val)" "== Instance Methods" "= class WSDL::XMLSchema::Schema < WSDL::Info" "refm/api/src/wsdl/xmlSchema/schema.rd")
(find-rurima "--- elements" "== Instance Methods" "= class WSDL::XMLSchema::Schema < WSDL::Info" "refm/api/src/wsdl/xmlSchema/schema.rd")
(find-rurima "--- importedschema" "== Instance Methods" "= class WSDL::XMLSchema::Schema < WSDL::Info" "refm/api/src/wsdl/xmlSchema/schema.rd")
(find-rurima "--- imports" "== Instance Methods" "= class WSDL::XMLSchema::Schema < WSDL::Info" "refm/api/src/wsdl/xmlSchema/schema.rd")
(find-rurima "--- location" "== Instance Methods" "= class WSDL::XMLSchema::Schema < WSDL::Info" "refm/api/src/wsdl/xmlSchema/schema.rd")
(find-rurima "--- location=(location)" "== Instance Methods" "= class WSDL::XMLSchema::Schema < WSDL::Info" "refm/api/src/wsdl/xmlSchema/schema.rd")
(find-rurima "--- parse_attr(attr, value)" "== Instance Methods" "= class WSDL::XMLSchema::Schema < WSDL::Info" "refm/api/src/wsdl/xmlSchema/schema.rd")
(find-rurima "--- parse_element(element)" "== Instance Methods" "= class WSDL::XMLSchema::Schema < WSDL::Info" "refm/api/src/wsdl/xmlSchema/schema.rd")
(find-rurima "--- simpletypes" "== Instance Methods" "= class WSDL::XMLSchema::Schema < WSDL::Info" "refm/api/src/wsdl/xmlSchema/schema.rd")
(find-rurima "--- targetnamespace" "== Instance Methods" "= class WSDL::XMLSchema::Schema < WSDL::Info" "refm/api/src/wsdl/xmlSchema/schema.rd")
(find-rurima "= class WSDL::XMLSchema::Element < WSDL::Info" "refm/api/src/wsdl/xmlSchema/element.rd")
(find-rurima "== Class Methods" "= class WSDL::XMLSchema::Element < WSDL::Info" "refm/api/src/wsdl/xmlSchema/element.rd")
(find-rurima "--- new(name = nil, type = nil)" "== Class Methods" "= class WSDL::XMLSchema::Element < WSDL::Info" "refm/api/src/wsdl/xmlSchema/element.rd")
(find-rurima "--- attr_reader_ref(symbol)" "== Class Methods" "= class WSDL::XMLSchema::Element < WSDL::Info" "refm/api/src/wsdl/xmlSchema/element.rd")
(find-rurima "== Instance Methods" "= class WSDL::XMLSchema::Element < WSDL::Info" "refm/api/src/wsdl/xmlSchema/element.rd")
(find-rurima "--- constraint" "== Instance Methods" "= class WSDL::XMLSchema::Element < WSDL::Info" "refm/api/src/wsdl/xmlSchema/element.rd")
(find-rurima "--- constraint=" "== Instance Methods" "= class WSDL::XMLSchema::Element < WSDL::Info" "refm/api/src/wsdl/xmlSchema/element.rd")
(find-rurima "--- elementform" "== Instance Methods" "= class WSDL::XMLSchema::Element < WSDL::Info" "refm/api/src/wsdl/xmlSchema/element.rd")
(find-rurima "--- elementformdefault" "== Instance Methods" "= class WSDL::XMLSchema::Element < WSDL::Info" "refm/api/src/wsdl/xmlSchema/element.rd")
(find-rurima "--- form" "== Instance Methods" "= class WSDL::XMLSchema::Element < WSDL::Info" "refm/api/src/wsdl/xmlSchema/element.rd")
(find-rurima "--- form=" "== Instance Methods" "= class WSDL::XMLSchema::Element < WSDL::Info" "refm/api/src/wsdl/xmlSchema/element.rd")
(find-rurima "--- local_complextype" "== Instance Methods" "= class WSDL::XMLSchema::Element < WSDL::Info" "refm/api/src/wsdl/xmlSchema/element.rd")
(find-rurima "--- local_complextype=" "== Instance Methods" "= class WSDL::XMLSchema::Element < WSDL::Info" "refm/api/src/wsdl/xmlSchema/element.rd")
(find-rurima "--- local_simpletype" "== Instance Methods" "= class WSDL::XMLSchema::Element < WSDL::Info" "refm/api/src/wsdl/xmlSchema/element.rd")
(find-rurima "--- local_simpletype=" "== Instance Methods" "= class WSDL::XMLSchema::Element < WSDL::Info" "refm/api/src/wsdl/xmlSchema/element.rd")
(find-rurima "--- maxoccurs" "== Instance Methods" "= class WSDL::XMLSchema::Element < WSDL::Info" "refm/api/src/wsdl/xmlSchema/element.rd")
(find-rurima "--- maxoccurs=" "== Instance Methods" "= class WSDL::XMLSchema::Element < WSDL::Info" "refm/api/src/wsdl/xmlSchema/element.rd")
(find-rurima "--- minoccurs" "== Instance Methods" "= class WSDL::XMLSchema::Element < WSDL::Info" "refm/api/src/wsdl/xmlSchema/element.rd")
(find-rurima "--- minoccurs=" "== Instance Methods" "= class WSDL::XMLSchema::Element < WSDL::Info" "refm/api/src/wsdl/xmlSchema/element.rd")
(find-rurima "--- name" "== Instance Methods" "= class WSDL::XMLSchema::Element < WSDL::Info" "refm/api/src/wsdl/xmlSchema/element.rd")
(find-rurima "--- name=" "== Instance Methods" "= class WSDL::XMLSchema::Element < WSDL::Info" "refm/api/src/wsdl/xmlSchema/element.rd")
(find-rurima "--- nillable" "== Instance Methods" "= class WSDL::XMLSchema::Element < WSDL::Info" "refm/api/src/wsdl/xmlSchema/element.rd")
(find-rurima "--- nillable=" "== Instance Methods" "= class WSDL::XMLSchema::Element < WSDL::Info" "refm/api/src/wsdl/xmlSchema/element.rd")
(find-rurima "--- parse_attr(attr, value)" "== Instance Methods" "= class WSDL::XMLSchema::Element < WSDL::Info" "refm/api/src/wsdl/xmlSchema/element.rd")
(find-rurima "--- parse_element(element)" "== Instance Methods" "= class WSDL::XMLSchema::Element < WSDL::Info" "refm/api/src/wsdl/xmlSchema/element.rd")
(find-rurima "--- ref" "== Instance Methods" "= class WSDL::XMLSchema::Element < WSDL::Info" "refm/api/src/wsdl/xmlSchema/element.rd")
(find-rurima "--- ref=" "== Instance Methods" "= class WSDL::XMLSchema::Element < WSDL::Info" "refm/api/src/wsdl/xmlSchema/element.rd")
(find-rurima "--- refelement" "== Instance Methods" "= class WSDL::XMLSchema::Element < WSDL::Info" "refm/api/src/wsdl/xmlSchema/element.rd")
(find-rurima "--- targetnamespace" "== Instance Methods" "= class WSDL::XMLSchema::Element < WSDL::Info" "refm/api/src/wsdl/xmlSchema/element.rd")
(find-rurima "--- type" "== Instance Methods" "= class WSDL::XMLSchema::Element < WSDL::Info" "refm/api/src/wsdl/xmlSchema/element.rd")
(find-rurima "--- type=" "== Instance Methods" "= class WSDL::XMLSchema::Element < WSDL::Info" "refm/api/src/wsdl/xmlSchema/element.rd")
(find-rurima "== Private Instance Methods" "= class WSDL::XMLSchema::Element < WSDL::Info" "refm/api/src/wsdl/xmlSchema/element.rd")
(find-rurima "--- directelement?" "== Private Instance Methods" "= class WSDL::XMLSchema::Element < WSDL::Info" "refm/api/src/wsdl/xmlSchema/element.rd")
(find-rurima "= class WSDL::XMLSchema::Include < WSDL::Info" "refm/api/src/wsdl/xmlSchema/include.rd")
(find-rurima "== Class Methods" "= class WSDL::XMLSchema::Include < WSDL::Info" "refm/api/src/wsdl/xmlSchema/include.rd")
(find-rurima "--- new" "== Class Methods" "= class WSDL::XMLSchema::Include < WSDL::Info" "refm/api/src/wsdl/xmlSchema/include.rd")
(find-rurima "== Instance Methods" "= class WSDL::XMLSchema::Include < WSDL::Info" "refm/api/src/wsdl/xmlSchema/include.rd")
(find-rurima "--- content" "== Instance Methods" "= class WSDL::XMLSchema::Include < WSDL::Info" "refm/api/src/wsdl/xmlSchema/include.rd")
(find-rurima "--- parse_attr(attr, value)" "== Instance Methods" "= class WSDL::XMLSchema::Include < WSDL::Info" "refm/api/src/wsdl/xmlSchema/include.rd")
(find-rurima "--- parse_element(element)" "== Instance Methods" "= class WSDL::XMLSchema::Include < WSDL::Info" "refm/api/src/wsdl/xmlSchema/include.rd")
(find-rurima "--- schemalocation" "== Instance Methods" "= class WSDL::XMLSchema::Include < WSDL::Info" "refm/api/src/wsdl/xmlSchema/include.rd")
(find-rurima "= class WSDL::XMLSchema::Importer < Object" "refm/api/src/wsdl/xmlSchema/importer.rd")
(find-rurima "== Class Methods" "= class WSDL::XMLSchema::Importer < Object" "refm/api/src/wsdl/xmlSchema/importer.rd")
(find-rurima "--- new" "== Class Methods" "= class WSDL::XMLSchema::Importer < Object" "refm/api/src/wsdl/xmlSchema/importer.rd")
(find-rurima "--- import(location, originalroot = nil)" "== Class Methods" "= class WSDL::XMLSchema::Importer < Object" "refm/api/src/wsdl/xmlSchema/importer.rd")
(find-rurima "== Instance Methods" "= class WSDL::XMLSchema::Importer < Object" "refm/api/src/wsdl/xmlSchema/importer.rd")
(find-rurima "--- import(location, originalroot = nil)" "== Instance Methods" "= class WSDL::XMLSchema::Importer < Object" "refm/api/src/wsdl/xmlSchema/importer.rd")
(find-rurima "== Private Instance Methods" "= class WSDL::XMLSchema::Importer < Object" "refm/api/src/wsdl/xmlSchema/importer.rd")
(find-rurima "--- parse(content, location, originalroot)" "== Private Instance Methods" "= class WSDL::XMLSchema::Importer < Object" "refm/api/src/wsdl/xmlSchema/importer.rd")
(find-rurima "--- fetch(location)" "== Private Instance Methods" "= class WSDL::XMLSchema::Importer < Object" "refm/api/src/wsdl/xmlSchema/importer.rd")
(find-rurima "--- web_client" "== Private Instance Methods" "= class WSDL::XMLSchema::Importer < Object" "refm/api/src/wsdl/xmlSchema/importer.rd")
(find-rurima "= class WSDL::XMLSchema::Length < WSDL::Info" "refm/api/src/wsdl/xmlSchema/length.rd")
(find-rurima "== Class Methods" "= class WSDL::XMLSchema::Length < WSDL::Info" "refm/api/src/wsdl/xmlSchema/length.rd")
(find-rurima "--- new" "== Class Methods" "= class WSDL::XMLSchema::Length < WSDL::Info" "refm/api/src/wsdl/xmlSchema/length.rd")
(find-rurima "== Instance Methods" "= class WSDL::XMLSchema::Length < WSDL::Info" "refm/api/src/wsdl/xmlSchema/length.rd")
(find-rurima "--- parse_attr(attr, value)" "== Instance Methods" "= class WSDL::XMLSchema::Length < WSDL::Info" "refm/api/src/wsdl/xmlSchema/length.rd")
(find-rurima "--- parse_element(element)" "== Instance Methods" "= class WSDL::XMLSchema::Length < WSDL::Info" "refm/api/src/wsdl/xmlSchema/length.rd")
(find-rurima "= class WSDL::XMLSchema::Sequence < WSDL::Info" "refm/api/src/wsdl/xmlSchema/sequence.rd")
(find-rurima "== Class Methods" "= class WSDL::XMLSchema::Sequence < WSDL::Info" "refm/api/src/wsdl/xmlSchema/sequence.rd")
(find-rurima "--- new" "== Class Methods" "= class WSDL::XMLSchema::Sequence < WSDL::Info" "refm/api/src/wsdl/xmlSchema/sequence.rd")
(find-rurima "== Instance Methods" "= class WSDL::XMLSchema::Sequence < WSDL::Info" "refm/api/src/wsdl/xmlSchema/sequence.rd")
(find-rurima "--- <<" "== Instance Methods" "= class WSDL::XMLSchema::Sequence < WSDL::Info" "refm/api/src/wsdl/xmlSchema/sequence.rd")
(find-rurima "--- elementformdefault" "== Instance Methods" "= class WSDL::XMLSchema::Sequence < WSDL::Info" "refm/api/src/wsdl/xmlSchema/sequence.rd")
(find-rurima "--- elements" "== Instance Methods" "= class WSDL::XMLSchema::Sequence < WSDL::Info" "refm/api/src/wsdl/xmlSchema/sequence.rd")
(find-rurima "--- maxoccurs" "== Instance Methods" "= class WSDL::XMLSchema::Sequence < WSDL::Info" "refm/api/src/wsdl/xmlSchema/sequence.rd")
(find-rurima "--- minoccurs" "== Instance Methods" "= class WSDL::XMLSchema::Sequence < WSDL::Info" "refm/api/src/wsdl/xmlSchema/sequence.rd")
(find-rurima "--- parse_attr(attr, value)" "== Instance Methods" "= class WSDL::XMLSchema::Sequence < WSDL::Info" "refm/api/src/wsdl/xmlSchema/sequence.rd")
(find-rurima "--- parse_element(element)" "== Instance Methods" "= class WSDL::XMLSchema::Sequence < WSDL::Info" "refm/api/src/wsdl/xmlSchema/sequence.rd")
(find-rurima "--- targetnamespace" "== Instance Methods" "= class WSDL::XMLSchema::Sequence < WSDL::Info" "refm/api/src/wsdl/xmlSchema/sequence.rd")
(find-rurima "= module WSDL::XMLSchema" "refm/api/src/wsdl/xmlSchema/data.rd")
(find-rurima "== Constants" "= module WSDL::XMLSchema" "refm/api/src/wsdl/xmlSchema/data.rd")
(find-rurima "--- AllName" "== Constants" "= module WSDL::XMLSchema" "refm/api/src/wsdl/xmlSchema/data.rd")
(find-rurima "--- AnnotationName" "== Constants" "= module WSDL::XMLSchema" "refm/api/src/wsdl/xmlSchema/data.rd")
(find-rurima "--- AnyName" "== Constants" "= module WSDL::XMLSchema" "refm/api/src/wsdl/xmlSchema/data.rd")
(find-rurima "--- AttributeName" "== Constants" "= module WSDL::XMLSchema" "refm/api/src/wsdl/xmlSchema/data.rd")
(find-rurima "--- ChoiceName" "== Constants" "= module WSDL::XMLSchema" "refm/api/src/wsdl/xmlSchema/data.rd")
(find-rurima "--- ComplexContentName" "== Constants" "= module WSDL::XMLSchema" "refm/api/src/wsdl/xmlSchema/data.rd")
(find-rurima "--- ComplexTypeName" "== Constants" "= module WSDL::XMLSchema" "refm/api/src/wsdl/xmlSchema/data.rd")
(find-rurima "--- ElementName" "== Constants" "= module WSDL::XMLSchema" "refm/api/src/wsdl/xmlSchema/data.rd")
(find-rurima "--- EnumerationName" "== Constants" "= module WSDL::XMLSchema" "refm/api/src/wsdl/xmlSchema/data.rd")
(find-rurima "--- ExtensionName" "== Constants" "= module WSDL::XMLSchema" "refm/api/src/wsdl/xmlSchema/data.rd")
(find-rurima "--- ImportName" "== Constants" "= module WSDL::XMLSchema" "refm/api/src/wsdl/xmlSchema/data.rd")
(find-rurima "--- IncludeName" "== Constants" "= module WSDL::XMLSchema" "refm/api/src/wsdl/xmlSchema/data.rd")
(find-rurima "--- LengthName" "== Constants" "= module WSDL::XMLSchema" "refm/api/src/wsdl/xmlSchema/data.rd")
(find-rurima "--- PatternName" "== Constants" "= module WSDL::XMLSchema" "refm/api/src/wsdl/xmlSchema/data.rd")
(find-rurima "--- RestrictionName" "== Constants" "= module WSDL::XMLSchema" "refm/api/src/wsdl/xmlSchema/data.rd")
(find-rurima "--- SequenceName" "== Constants" "= module WSDL::XMLSchema" "refm/api/src/wsdl/xmlSchema/data.rd")
(find-rurima "--- SchemaName" "== Constants" "= module WSDL::XMLSchema" "refm/api/src/wsdl/xmlSchema/data.rd")
(find-rurima "--- SimpleContentName" "== Constants" "= module WSDL::XMLSchema" "refm/api/src/wsdl/xmlSchema/data.rd")
(find-rurima "--- SimpleTypeName" "== Constants" "= module WSDL::XMLSchema" "refm/api/src/wsdl/xmlSchema/data.rd")
(find-rurima "--- UniqueName" "== Constants" "= module WSDL::XMLSchema" "refm/api/src/wsdl/xmlSchema/data.rd")
(find-rurima "--- AttributeFormDefaultAttrName" "== Constants" "= module WSDL::XMLSchema" "refm/api/src/wsdl/xmlSchema/data.rd")
(find-rurima "--- BaseAttrName" "== Constants" "= module WSDL::XMLSchema" "refm/api/src/wsdl/xmlSchema/data.rd")
(find-rurima "--- DefaultAttrName" "== Constants" "= module WSDL::XMLSchema" "refm/api/src/wsdl/xmlSchema/data.rd")
(find-rurima "--- ElementFormDefaultAttrName" "== Constants" "= module WSDL::XMLSchema" "refm/api/src/wsdl/xmlSchema/data.rd")
(find-rurima "--- FinalAttrName" "== Constants" "= module WSDL::XMLSchema" "refm/api/src/wsdl/xmlSchema/data.rd")
(find-rurima "--- FixedAttrName" "== Constants" "= module WSDL::XMLSchema" "refm/api/src/wsdl/xmlSchema/data.rd")
(find-rurima "--- FormAttrName" "== Constants" "= module WSDL::XMLSchema" "refm/api/src/wsdl/xmlSchema/data.rd")
(find-rurima "--- IdAttrName" "== Constants" "= module WSDL::XMLSchema" "refm/api/src/wsdl/xmlSchema/data.rd")
(find-rurima "--- MaxOccursAttrName" "== Constants" "= module WSDL::XMLSchema" "refm/api/src/wsdl/xmlSchema/data.rd")
(find-rurima "--- MinOccursAttrName" "== Constants" "= module WSDL::XMLSchema" "refm/api/src/wsdl/xmlSchema/data.rd")
(find-rurima "--- MixedAttrName" "== Constants" "= module WSDL::XMLSchema" "refm/api/src/wsdl/xmlSchema/data.rd")
(find-rurima "--- NameAttrName" "== Constants" "= module WSDL::XMLSchema" "refm/api/src/wsdl/xmlSchema/data.rd")
(find-rurima "--- NamespaceAttrName" "== Constants" "= module WSDL::XMLSchema" "refm/api/src/wsdl/xmlSchema/data.rd")
(find-rurima "--- NillableAttrName" "== Constants" "= module WSDL::XMLSchema" "refm/api/src/wsdl/xmlSchema/data.rd")
(find-rurima "--- ProcessContentsAttrName" "== Constants" "= module WSDL::XMLSchema" "refm/api/src/wsdl/xmlSchema/data.rd")
(find-rurima "--- RefAttrName" "== Constants" "= module WSDL::XMLSchema" "refm/api/src/wsdl/xmlSchema/data.rd")
(find-rurima "--- SchemaLocationAttrName" "== Constants" "= module WSDL::XMLSchema" "refm/api/src/wsdl/xmlSchema/data.rd")
(find-rurima "--- TargetNamespaceAttrName" "== Constants" "= module WSDL::XMLSchema" "refm/api/src/wsdl/xmlSchema/data.rd")
(find-rurima "--- TypeAttrName" "== Constants" "= module WSDL::XMLSchema" "refm/api/src/wsdl/xmlSchema/data.rd")
(find-rurima "--- UseAttrName" "== Constants" "= module WSDL::XMLSchema" "refm/api/src/wsdl/xmlSchema/data.rd")
(find-rurima "--- ValueAttrName" "== Constants" "= module WSDL::XMLSchema" "refm/api/src/wsdl/xmlSchema/data.rd")
(find-rurima "= class WSDL::XMLSchema::SimpleRestriction < WSDL::Info" "refm/api/src/wsdl/xmlSchema/simpleRestriction.rd")
(find-rurima "== Class Methods" "= class WSDL::XMLSchema::SimpleRestriction < WSDL::Info" "refm/api/src/wsdl/xmlSchema/simpleRestriction.rd")
(find-rurima "--- new" "== Class Methods" "= class WSDL::XMLSchema::SimpleRestriction < WSDL::Info" "refm/api/src/wsdl/xmlSchema/simpleRestriction.rd")
(find-rurima "== Instance Methods" "= class WSDL::XMLSchema::SimpleRestriction < WSDL::Info" "refm/api/src/wsdl/xmlSchema/simpleRestriction.rd")
(find-rurima "--- base" "== Instance Methods" "= class WSDL::XMLSchema::SimpleRestriction < WSDL::Info" "refm/api/src/wsdl/xmlSchema/simpleRestriction.rd")
(find-rurima "--- enumeration" "== Instance Methods" "= class WSDL::XMLSchema::SimpleRestriction < WSDL::Info" "refm/api/src/wsdl/xmlSchema/simpleRestriction.rd")
(find-rurima "--- length" "== Instance Methods" "= class WSDL::XMLSchema::SimpleRestriction < WSDL::Info" "refm/api/src/wsdl/xmlSchema/simpleRestriction.rd")
(find-rurima "--- length=" "== Instance Methods" "= class WSDL::XMLSchema::SimpleRestriction < WSDL::Info" "refm/api/src/wsdl/xmlSchema/simpleRestriction.rd")
(find-rurima "--- parse_attr(attr, value)" "== Instance Methods" "= class WSDL::XMLSchema::SimpleRestriction < WSDL::Info" "refm/api/src/wsdl/xmlSchema/simpleRestriction.rd")
(find-rurima "--- parse_element(element)" "== Instance Methods" "= class WSDL::XMLSchema::SimpleRestriction < WSDL::Info" "refm/api/src/wsdl/xmlSchema/simpleRestriction.rd")
(find-rurima "--- pattern" "== Instance Methods" "= class WSDL::XMLSchema::SimpleRestriction < WSDL::Info" "refm/api/src/wsdl/xmlSchema/simpleRestriction.rd")
(find-rurima "--- pattern=" "== Instance Methods" "= class WSDL::XMLSchema::SimpleRestriction < WSDL::Info" "refm/api/src/wsdl/xmlSchema/simpleRestriction.rd")
(find-rurima "--- valid?(value)" "== Instance Methods" "= class WSDL::XMLSchema::SimpleRestriction < WSDL::Info" "refm/api/src/wsdl/xmlSchema/simpleRestriction.rd")
(find-rurima "= class WSDL::XMLSchema::Any < WSDL::Info" "refm/api/src/wsdl/xmlSchema/any.rd")
(find-rurima "== Class Methods" "= class WSDL::XMLSchema::Any < WSDL::Info" "refm/api/src/wsdl/xmlSchema/any.rd")
(find-rurima "--- new" "== Class Methods" "= class WSDL::XMLSchema::Any < WSDL::Info" "refm/api/src/wsdl/xmlSchema/any.rd")
(find-rurima "== Instance Methods" "= class WSDL::XMLSchema::Any < WSDL::Info" "refm/api/src/wsdl/xmlSchema/any.rd")
(find-rurima "--- maxoccurs" "== Instance Methods" "= class WSDL::XMLSchema::Any < WSDL::Info" "refm/api/src/wsdl/xmlSchema/any.rd")
(find-rurima "--- maxoccurs=" "== Instance Methods" "= class WSDL::XMLSchema::Any < WSDL::Info" "refm/api/src/wsdl/xmlSchema/any.rd")
(find-rurima "--- minoccurs" "== Instance Methods" "= class WSDL::XMLSchema::Any < WSDL::Info" "refm/api/src/wsdl/xmlSchema/any.rd")
(find-rurima "--- minoccurs=" "== Instance Methods" "= class WSDL::XMLSchema::Any < WSDL::Info" "refm/api/src/wsdl/xmlSchema/any.rd")
(find-rurima "--- namespace" "== Instance Methods" "= class WSDL::XMLSchema::Any < WSDL::Info" "refm/api/src/wsdl/xmlSchema/any.rd")
(find-rurima "--- namespace=" "== Instance Methods" "= class WSDL::XMLSchema::Any < WSDL::Info" "refm/api/src/wsdl/xmlSchema/any.rd")
(find-rurima "--- process_contents" "== Instance Methods" "= class WSDL::XMLSchema::Any < WSDL::Info" "refm/api/src/wsdl/xmlSchema/any.rd")
(find-rurima "--- process_contents=" "== Instance Methods" "= class WSDL::XMLSchema::Any < WSDL::Info" "refm/api/src/wsdl/xmlSchema/any.rd")
(find-rurima "--- parse_attr(attr, value)" "== Instance Methods" "= class WSDL::XMLSchema::Any < WSDL::Info" "refm/api/src/wsdl/xmlSchema/any.rd")
(find-rurima "--- parse_element(element)" "== Instance Methods" "= class WSDL::XMLSchema::Any < WSDL::Info" "refm/api/src/wsdl/xmlSchema/any.rd")
(find-rurima "--- targetnamespace" "== Instance Methods" "= class WSDL::XMLSchema::Any < WSDL::Info" "refm/api/src/wsdl/xmlSchema/any.rd")
(find-rurima "= class WSDL::XMLSchema::SimpleExtension < WSDL::Info" "refm/api/src/wsdl/xmlSchema/simpleExtension.rd")
(find-rurima "== Class Methods" "= class WSDL::XMLSchema::SimpleExtension < WSDL::Info" "refm/api/src/wsdl/xmlSchema/simpleExtension.rd")
(find-rurima "--- new" "== Class Methods" "= class WSDL::XMLSchema::SimpleExtension < WSDL::Info" "refm/api/src/wsdl/xmlSchema/simpleExtension.rd")
(find-rurima "== Instance Methods" "= class WSDL::XMLSchema::SimpleExtension < WSDL::Info" "refm/api/src/wsdl/xmlSchema/simpleExtension.rd")
(find-rurima "--- attributes" "== Instance Methods" "= class WSDL::XMLSchema::SimpleExtension < WSDL::Info" "refm/api/src/wsdl/xmlSchema/simpleExtension.rd")
(find-rurima "--- base" "== Instance Methods" "= class WSDL::XMLSchema::SimpleExtension < WSDL::Info" "refm/api/src/wsdl/xmlSchema/simpleExtension.rd")
(find-rurima "--- parse_attr(attr, value)" "== Instance Methods" "= class WSDL::XMLSchema::SimpleExtension < WSDL::Info" "refm/api/src/wsdl/xmlSchema/simpleExtension.rd")
(find-rurima "--- parse_element(element)" "== Instance Methods" "= class WSDL::XMLSchema::SimpleExtension < WSDL::Info" "refm/api/src/wsdl/xmlSchema/simpleExtension.rd")
(find-rurima "--- targetnamespace" "== Instance Methods" "= class WSDL::XMLSchema::SimpleExtension < WSDL::Info" "refm/api/src/wsdl/xmlSchema/simpleExtension.rd")
(find-rurima "--- valid?(value)" "== Instance Methods" "= class WSDL::XMLSchema::SimpleExtension < WSDL::Info" "refm/api/src/wsdl/xmlSchema/simpleExtension.rd")
(find-rurima "= class WSDL::XMLSchema::Import < WSDL::Info" "refm/api/src/wsdl/xmlSchema/import.rd")
(find-rurima "== Class Methods" "= class WSDL::XMLSchema::Import < WSDL::Info" "refm/api/src/wsdl/xmlSchema/import.rd")
(find-rurima "--- new" "== Class Methods" "= class WSDL::XMLSchema::Import < WSDL::Info" "refm/api/src/wsdl/xmlSchema/import.rd")
(find-rurima "== Instance Methods" "= class WSDL::XMLSchema::Import < WSDL::Info" "refm/api/src/wsdl/xmlSchema/import.rd")
(find-rurima "--- content" "== Instance Methods" "= class WSDL::XMLSchema::Import < WSDL::Info" "refm/api/src/wsdl/xmlSchema/import.rd")
(find-rurima "--- namespace" "== Instance Methods" "= class WSDL::XMLSchema::Import < WSDL::Info" "refm/api/src/wsdl/xmlSchema/import.rd")
(find-rurima "--- parse_attr(attr, value)" "== Instance Methods" "= class WSDL::XMLSchema::Import < WSDL::Info" "refm/api/src/wsdl/xmlSchema/import.rd")
(find-rurima "--- parse_element(element)" "== Instance Methods" "= class WSDL::XMLSchema::Import < WSDL::Info" "refm/api/src/wsdl/xmlSchema/import.rd")
(find-rurima "--- schemalocation" "== Instance Methods" "= class WSDL::XMLSchema::Import < WSDL::Info" "refm/api/src/wsdl/xmlSchema/import.rd")
(find-rurima "== Private Instance Methods" "= class WSDL::XMLSchema::Import < WSDL::Info" "refm/api/src/wsdl/xmlSchema/import.rd")
(find-rurima "--- import(location)" "== Private Instance Methods" "= class WSDL::XMLSchema::Import < WSDL::Info" "refm/api/src/wsdl/xmlSchema/import.rd")
(find-rurima "= class WSDL::XMLSchema::XSD2Ruby < Object" "refm/api/src/wsdl/xmlSchema/xsd2ruby.rd")
(find-rurima "== Instance Methods" "= class WSDL::XMLSchema::XSD2Ruby < Object" "refm/api/src/wsdl/xmlSchema/xsd2ruby.rd")
(find-rurima "--- basedir" "== Instance Methods" "= class WSDL::XMLSchema::XSD2Ruby < Object" "refm/api/src/wsdl/xmlSchema/xsd2ruby.rd")
(find-rurima "--- basedir=" "== Instance Methods" "= class WSDL::XMLSchema::XSD2Ruby < Object" "refm/api/src/wsdl/xmlSchema/xsd2ruby.rd")
(find-rurima "--- location" "== Instance Methods" "= class WSDL::XMLSchema::XSD2Ruby < Object" "refm/api/src/wsdl/xmlSchema/xsd2ruby.rd")
(find-rurima "--- location=" "== Instance Methods" "= class WSDL::XMLSchema::XSD2Ruby < Object" "refm/api/src/wsdl/xmlSchema/xsd2ruby.rd")
(find-rurima "--- logger" "== Instance Methods" "= class WSDL::XMLSchema::XSD2Ruby < Object" "refm/api/src/wsdl/xmlSchema/xsd2ruby.rd")
(find-rurima "--- logger=" "== Instance Methods" "= class WSDL::XMLSchema::XSD2Ruby < Object" "refm/api/src/wsdl/xmlSchema/xsd2ruby.rd")
(find-rurima "--- opt" "== Instance Methods" "= class WSDL::XMLSchema::XSD2Ruby < Object" "refm/api/src/wsdl/xmlSchema/xsd2ruby.rd")
(find-rurima "--- run" "== Instance Methods" "= class WSDL::XMLSchema::XSD2Ruby < Object" "refm/api/src/wsdl/xmlSchema/xsd2ruby.rd")
(find-rurima "= class WSDL::XMLSchema::ComplexType < WSDL::Info" "refm/api/src/wsdl/xmlSchema/complexType.rd")
(find-rurima "== Class Methods" "= class WSDL::XMLSchema::ComplexType < WSDL::Info" "refm/api/src/wsdl/xmlSchema/complexType.rd")
(find-rurima "--- new(name = nil)" "== Class Methods" "= class WSDL::XMLSchema::ComplexType < WSDL::Info" "refm/api/src/wsdl/xmlSchema/complexType.rd")
(find-rurima "== Instance Methods" "= class WSDL::XMLSchema::ComplexType < WSDL::Info" "refm/api/src/wsdl/xmlSchema/complexType.rd")
(find-rurima "--- all_elements=(elements)" "== Instance Methods" "= class WSDL::XMLSchema::ComplexType < WSDL::Info" "refm/api/src/wsdl/xmlSchema/complexType.rd")
(find-rurima "--- attributes" "== Instance Methods" "= class WSDL::XMLSchema::ComplexType < WSDL::Info" "refm/api/src/wsdl/xmlSchema/complexType.rd")
(find-rurima "--- complexcontent" "== Instance Methods" "= class WSDL::XMLSchema::ComplexType < WSDL::Info" "refm/api/src/wsdl/xmlSchema/complexType.rd")
(find-rurima "--- complexcontent=" "== Instance Methods" "= class WSDL::XMLSchema::ComplexType < WSDL::Info" "refm/api/src/wsdl/xmlSchema/complexType.rd")
(find-rurima "--- content" "== Instance Methods" "= class WSDL::XMLSchema::ComplexType < WSDL::Info" "refm/api/src/wsdl/xmlSchema/complexType.rd")
(find-rurima "--- content=" "== Instance Methods" "= class WSDL::XMLSchema::ComplexType < WSDL::Info" "refm/api/src/wsdl/xmlSchema/complexType.rd")
(find-rurima "--- each_element" "== Instance Methods" "= class WSDL::XMLSchema::ComplexType < WSDL::Info" "refm/api/src/wsdl/xmlSchema/complexType.rd")
(find-rurima "--- elementformdefault" "== Instance Methods" "= class WSDL::XMLSchema::ComplexType < WSDL::Info" "refm/api/src/wsdl/xmlSchema/complexType.rd")
(find-rurima "--- final" "== Instance Methods" "= class WSDL::XMLSchema::ComplexType < WSDL::Info" "refm/api/src/wsdl/xmlSchema/complexType.rd")
(find-rurima "--- final=" "== Instance Methods" "= class WSDL::XMLSchema::ComplexType < WSDL::Info" "refm/api/src/wsdl/xmlSchema/complexType.rd")
(find-rurima "--- find_element(name)" "== Instance Methods" "= class WSDL::XMLSchema::ComplexType < WSDL::Info" "refm/api/src/wsdl/xmlSchema/complexType.rd")
(find-rurima "--- find_element_by_name(name)" "== Instance Methods" "= class WSDL::XMLSchema::ComplexType < WSDL::Info" "refm/api/src/wsdl/xmlSchema/complexType.rd")
(find-rurima "--- mixed" "== Instance Methods" "= class WSDL::XMLSchema::ComplexType < WSDL::Info" "refm/api/src/wsdl/xmlSchema/complexType.rd")
(find-rurima "--- mixed=" "== Instance Methods" "= class WSDL::XMLSchema::ComplexType < WSDL::Info" "refm/api/src/wsdl/xmlSchema/complexType.rd")
(find-rurima "--- name" "== Instance Methods" "= class WSDL::XMLSchema::ComplexType < WSDL::Info" "refm/api/src/wsdl/xmlSchema/complexType.rd")
(find-rurima "--- name=" "== Instance Methods" "= class WSDL::XMLSchema::ComplexType < WSDL::Info" "refm/api/src/wsdl/xmlSchema/complexType.rd")
(find-rurima "--- parse_attr(attr, value)" "== Instance Methods" "= class WSDL::XMLSchema::ComplexType < WSDL::Info" "refm/api/src/wsdl/xmlSchema/complexType.rd")
(find-rurima "--- parse_element(element)" "== Instance Methods" "= class WSDL::XMLSchema::ComplexType < WSDL::Info" "refm/api/src/wsdl/xmlSchema/complexType.rd")
(find-rurima "--- sequence_elements=(elements)" "== Instance Methods" "= class WSDL::XMLSchema::ComplexType < WSDL::Info" "refm/api/src/wsdl/xmlSchema/complexType.rd")
(find-rurima "--- simplecontent" "== Instance Methods" "= class WSDL::XMLSchema::ComplexType < WSDL::Info" "refm/api/src/wsdl/xmlSchema/complexType.rd")
(find-rurima "--- simplecontent=" "== Instance Methods" "= class WSDL::XMLSchema::ComplexType < WSDL::Info" "refm/api/src/wsdl/xmlSchema/complexType.rd")
(find-rurima "--- targetnamespace" "== Instance Methods" "= class WSDL::XMLSchema::ComplexType < WSDL::Info" "refm/api/src/wsdl/xmlSchema/complexType.rd")
(find-rurima "== Constants" "= class WSDL::XMLSchema::ComplexType < WSDL::Info" "refm/api/src/wsdl/xmlSchema/complexType.rd")
(find-rurima "--- AnyAsElement" "== Constants" "= class WSDL::XMLSchema::ComplexType < WSDL::Info" "refm/api/src/wsdl/xmlSchema/complexType.rd")
(find-rurima "= class WSDL::XMLSchema::ParseError < WSDL::Error" "refm/api/src/wsdl/xmlSchema/parser.rd")
(find-rurima "= class WSDL::XMLSchema::FormatDecodeError < WSDL::XMLSchema::ParseError" "refm/api/src/wsdl/xmlSchema/parser.rd")
(find-rurima "= class WSDL::XMLSchema::UnknownElementError < WSDL::XMLSchema::FormatDecodeError" "refm/api/src/wsdl/xmlSchema/parser.rd")
(find-rurima "= class WSDL::XMLSchema::UnknownAttributeError < WSDL::XMLSchema::FormatDecodeError" "refm/api/src/wsdl/xmlSchema/parser.rd")
(find-rurima "= class WSDL::XMLSchema::UnexpectedElementError < WSDL::XMLSchema::FormatDecodeError" "refm/api/src/wsdl/xmlSchema/parser.rd")
(find-rurima "= class WSDL::XMLSchema::ElementConstraintError < WSDL::XMLSchema::FormatDecodeError" "refm/api/src/wsdl/xmlSchema/parser.rd")
(find-rurima "= class WSDL::XMLSchema::AttributeConstraintError < WSDL::XMLSchema::FormatDecodeError" "refm/api/src/wsdl/xmlSchema/parser.rd")
(find-rurima "= class WSDL::XMLSchema::ParseFrame < Object" "refm/api/src/wsdl/xmlSchema/parser.rd")
(find-rurima "== Class Methods" "= class WSDL::XMLSchema::ParseFrame < Object" "refm/api/src/wsdl/xmlSchema/parser.rd")
(find-rurima "--- new(ns, name, node)" "== Class Methods" "= class WSDL::XMLSchema::ParseFrame < Object" "refm/api/src/wsdl/xmlSchema/parser.rd")
(find-rurima "== Instance Methods" "= class WSDL::XMLSchema::ParseFrame < Object" "refm/api/src/wsdl/xmlSchema/parser.rd")
(find-rurima "--- ns" "== Instance Methods" "= class WSDL::XMLSchema::ParseFrame < Object" "refm/api/src/wsdl/xmlSchema/parser.rd")
(find-rurima "--- name" "== Instance Methods" "= class WSDL::XMLSchema::ParseFrame < Object" "refm/api/src/wsdl/xmlSchema/parser.rd")
(find-rurima "--- node" "== Instance Methods" "= class WSDL::XMLSchema::ParseFrame < Object" "refm/api/src/wsdl/xmlSchema/parser.rd")
(find-rurima "--- node=(node)" "== Instance Methods" "= class WSDL::XMLSchema::ParseFrame < Object" "refm/api/src/wsdl/xmlSchema/parser.rd")
(find-rurima "= class WSDL::XMLSchema::Parser < WSDL::Info" "refm/api/src/wsdl/xmlSchema/parser.rd")
(find-rurima "== Class Methods" "= class WSDL::XMLSchema::Parser < WSDL::Info" "refm/api/src/wsdl/xmlSchema/parser.rd")
(find-rurima "--- new(opt = {})" "== Class Methods" "= class WSDL::XMLSchema::Parser < WSDL::Info" "refm/api/src/wsdl/xmlSchema/parser.rd")
(find-rurima "== Instance Methods" "= class WSDL::XMLSchema::Parser < WSDL::Info" "refm/api/src/wsdl/xmlSchema/parser.rd")
(find-rurima "--- characters(text)" "== Instance Methods" "= class WSDL::XMLSchema::Parser < WSDL::Info" "refm/api/src/wsdl/xmlSchema/parser.rd")
(find-rurima "--- charset" "== Instance Methods" "= class WSDL::XMLSchema::Parser < WSDL::Info" "refm/api/src/wsdl/xmlSchema/parser.rd")
(find-rurima "--- end_element(name)" "== Instance Methods" "= class WSDL::XMLSchema::Parser < WSDL::Info" "refm/api/src/wsdl/xmlSchema/parser.rd")
(find-rurima "--- parse(string_or_readable)" "== Instance Methods" "= class WSDL::XMLSchema::Parser < WSDL::Info" "refm/api/src/wsdl/xmlSchema/parser.rd")
(find-rurima "--- start_element(name, attrs)" "== Instance Methods" "= class WSDL::XMLSchema::Parser < WSDL::Info" "refm/api/src/wsdl/xmlSchema/parser.rd")
(find-rurima "= class WSDL::XMLSchema::ComplexContent < WSDL::Info" "refm/api/src/wsdl/xmlSchema/complexContent.rd")
(find-rurima "== Class Methods" "= class WSDL::XMLSchema::ComplexContent < WSDL::Info" "refm/api/src/wsdl/xmlSchema/complexContent.rd")
(find-rurima "--- new" "== Class Methods" "= class WSDL::XMLSchema::ComplexContent < WSDL::Info" "refm/api/src/wsdl/xmlSchema/complexContent.rd")
(find-rurima "== Instance Methods" "= class WSDL::XMLSchema::ComplexContent < WSDL::Info" "refm/api/src/wsdl/xmlSchema/complexContent.rd")
(find-rurima "--- attributes" "== Instance Methods" "= class WSDL::XMLSchema::ComplexContent < WSDL::Info" "refm/api/src/wsdl/xmlSchema/complexContent.rd")
(find-rurima "--- base" "== Instance Methods" "= class WSDL::XMLSchema::ComplexContent < WSDL::Info" "refm/api/src/wsdl/xmlSchema/complexContent.rd")
(find-rurima "--- base=" "== Instance Methods" "= class WSDL::XMLSchema::ComplexContent < WSDL::Info" "refm/api/src/wsdl/xmlSchema/complexContent.rd")
(find-rurima "--- basetype" "== Instance Methods" "= class WSDL::XMLSchema::ComplexContent < WSDL::Info" "refm/api/src/wsdl/xmlSchema/complexContent.rd")
(find-rurima "--- content" "== Instance Methods" "= class WSDL::XMLSchema::ComplexContent < WSDL::Info" "refm/api/src/wsdl/xmlSchema/complexContent.rd")
(find-rurima "--- derivetype" "== Instance Methods" "= class WSDL::XMLSchema::ComplexContent < WSDL::Info" "refm/api/src/wsdl/xmlSchema/complexContent.rd")
(find-rurima "--- elementformdefault" "== Instance Methods" "= class WSDL::XMLSchema::ComplexContent < WSDL::Info" "refm/api/src/wsdl/xmlSchema/complexContent.rd")
(find-rurima "--- parse_attr(attr, value)" "== Instance Methods" "= class WSDL::XMLSchema::ComplexContent < WSDL::Info" "refm/api/src/wsdl/xmlSchema/complexContent.rd")
(find-rurima "--- parse_element(element)" "== Instance Methods" "= class WSDL::XMLSchema::ComplexContent < WSDL::Info" "refm/api/src/wsdl/xmlSchema/complexContent.rd")
(find-rurima "--- targetnamespace" "== Instance Methods" "= class WSDL::XMLSchema::ComplexContent < WSDL::Info" "refm/api/src/wsdl/xmlSchema/complexContent.rd")
(find-rurima "= class WSDL::XMLSchema::Unique < WSDL::Info" "refm/api/src/wsdl/xmlSchema/unique.rd")
(find-rurima "== Class Methods" "= class WSDL::XMLSchema::Unique < WSDL::Info" "refm/api/src/wsdl/xmlSchema/unique.rd")
(find-rurima "--- new" "== Class Methods" "= class WSDL::XMLSchema::Unique < WSDL::Info" "refm/api/src/wsdl/xmlSchema/unique.rd")
(find-rurima "== Instance Methods" "= class WSDL::XMLSchema::Unique < WSDL::Info" "refm/api/src/wsdl/xmlSchema/unique.rd")
(find-rurima "--- parse_attr(attr, value)" "== Instance Methods" "= class WSDL::XMLSchema::Unique < WSDL::Info" "refm/api/src/wsdl/xmlSchema/unique.rd")
(find-rurima "--- parse_element(element)" "== Instance Methods" "= class WSDL::XMLSchema::Unique < WSDL::Info" "refm/api/src/wsdl/xmlSchema/unique.rd")
(find-rurima "= class WSDL::Importer < WSDL::XMLSchema::Importer" "refm/api/src/wsdl/importer.rd")
(find-rurima "== Class Methods" "= class WSDL::Importer < WSDL::XMLSchema::Importer" "refm/api/src/wsdl/importer.rd")
(find-rurima "--- import(location, originalroot = nil)" "== Class Methods" "= class WSDL::Importer < WSDL::XMLSchema::Importer" "refm/api/src/wsdl/importer.rd")
(find-rurima "== Instance Methods" "= class WSDL::Importer < WSDL::XMLSchema::Importer" "refm/api/src/wsdl/importer.rd")
(find-rurima "--- import(location, originalroot = nil)" "== Instance Methods" "= class WSDL::Importer < WSDL::XMLSchema::Importer" "refm/api/src/wsdl/importer.rd")
(find-rurima "== Private Instance Methods" "= class WSDL::Importer < WSDL::XMLSchema::Importer" "refm/api/src/wsdl/importer.rd")
(find-rurima "--- parse(content, location, originalroot)" "== Private Instance Methods" "= class WSDL::Importer < WSDL::XMLSchema::Importer" "refm/api/src/wsdl/importer.rd")
(find-rurima "= class WSDL::Definitions < WSDL::Info" "refm/api/src/wsdl/definitions.rd")
(find-rurima "== Class Methods" "= class WSDL::Definitions < WSDL::Info" "refm/api/src/wsdl/definitions.rd")
(find-rurima "--- new" "== Class Methods" "= class WSDL::Definitions < WSDL::Info" "refm/api/src/wsdl/definitions.rd")
(find-rurima "--- parse_element(element)" "== Class Methods" "= class WSDL::Definitions < WSDL::Info" "refm/api/src/wsdl/definitions.rd")
(find-rurima "== Instance Methods" "= class WSDL::Definitions < WSDL::Info" "refm/api/src/wsdl/definitions.rd")
(find-rurima "--- add_type(complextype)" "== Instance Methods" "= class WSDL::Definitions < WSDL::Info" "refm/api/src/wsdl/definitions.rd")
(find-rurima "--- binding(name)" "== Instance Methods" "= class WSDL::Definitions < WSDL::Info" "refm/api/src/wsdl/definitions.rd")
(find-rurima "--- bindings" "== Instance Methods" "= class WSDL::Definitions < WSDL::Info" "refm/api/src/wsdl/definitions.rd")
(find-rurima "--- collect_attributes" "== Instance Methods" "= class WSDL::Definitions < WSDL::Info" "refm/api/src/wsdl/definitions.rd")
(find-rurima "--- collect_complextypes" "== Instance Methods" "= class WSDL::Definitions < WSDL::Info" "refm/api/src/wsdl/definitions.rd")
(find-rurima "--- collect_elements" "== Instance Methods" "= class WSDL::Definitions < WSDL::Info" "refm/api/src/wsdl/definitions.rd")
(find-rurima "--- collect_simpletypes" "== Instance Methods" "= class WSDL::Definitions < WSDL::Info" "refm/api/src/wsdl/definitions.rd")
(find-rurima "--- importedschema" "== Instance Methods" "= class WSDL::Definitions < WSDL::Info" "refm/api/src/wsdl/definitions.rd")
(find-rurima "--- imports" "== Instance Methods" "= class WSDL::Definitions < WSDL::Info" "refm/api/src/wsdl/definitions.rd")
(find-rurima "--- inspect" "== Instance Methods" "= class WSDL::Definitions < WSDL::Info" "refm/api/src/wsdl/definitions.rd")
(find-rurima "--- location" "== Instance Methods" "= class WSDL::Definitions < WSDL::Info" "refm/api/src/wsdl/definitions.rd")
(find-rurima "--- location=(val)" "== Instance Methods" "= class WSDL::Definitions < WSDL::Info" "refm/api/src/wsdl/definitions.rd")
(find-rurima "--- message(name)" "== Instance Methods" "= class WSDL::Definitions < WSDL::Info" "refm/api/src/wsdl/definitions.rd")
(find-rurima "--- messages" "== Instance Methods" "= class WSDL::Definitions < WSDL::Info" "refm/api/src/wsdl/definitions.rd")
(find-rurima "--- name" "== Instance Methods" "= class WSDL::Definitions < WSDL::Info" "refm/api/src/wsdl/definitions.rd")
(find-rurima "--- parse_attr(attr, name)" "== Instance Methods" "= class WSDL::Definitions < WSDL::Info" "refm/api/src/wsdl/definitions.rd")
(find-rurima "--- parse_element(element)" "== Instance Methods" "= class WSDL::Definitions < WSDL::Info" "refm/api/src/wsdl/definitions.rd")
(find-rurima "--- porttype" "== Instance Methods" "= class WSDL::Definitions < WSDL::Info" "refm/api/src/wsdl/definitions.rd")
(find-rurima "--- porttype_binding" "== Instance Methods" "= class WSDL::Definitions < WSDL::Info" "refm/api/src/wsdl/definitions.rd")
(find-rurima "--- porttypes" "== Instance Methods" "= class WSDL::Definitions < WSDL::Info" "refm/api/src/wsdl/definitions.rd")
(find-rurima "--- root" "== Instance Methods" "= class WSDL::Definitions < WSDL::Info" "refm/api/src/wsdl/definitions.rd")
(find-rurima "--- root=(val)" "== Instance Methods" "= class WSDL::Definitions < WSDL::Info" "refm/api/src/wsdl/definitions.rd")
(find-rurima "--- service" "== Instance Methods" "= class WSDL::Definitions < WSDL::Info" "refm/api/src/wsdl/definitions.rd")
(find-rurima "--- services" "== Instance Methods" "= class WSDL::Definitions < WSDL::Info" "refm/api/src/wsdl/definitions.rd")
(find-rurima "--- targetnamespace" "== Instance Methods" "= class WSDL::Definitions < WSDL::Info" "refm/api/src/wsdl/definitions.rd")
(find-rurima "--- targetnamespace=(targetnamespace)" "== Instance Methods" "= class WSDL::Definitions < WSDL::Info" "refm/api/src/wsdl/definitions.rd")
(find-rurima "= reopen WSDL" "refm/api/src/wsdl/data.rd")
(find-rurima "== Constants" "= reopen WSDL" "refm/api/src/wsdl/data.rd")
(find-rurima "--- ArrayTypeAttrName" "== Constants" "= reopen WSDL" "refm/api/src/wsdl/data.rd")
(find-rurima "--- BindingName" "== Constants" "= reopen WSDL" "refm/api/src/wsdl/data.rd")
(find-rurima "--- DefinitionsName" "== Constants" "= reopen WSDL" "refm/api/src/wsdl/data.rd")
(find-rurima "--- DocumentationName" "== Constants" "= reopen WSDL" "refm/api/src/wsdl/data.rd")
(find-rurima "--- FaultName" "== Constants" "= reopen WSDL" "refm/api/src/wsdl/data.rd")
(find-rurima "--- ImportName" "== Constants" "= reopen WSDL" "refm/api/src/wsdl/data.rd")
(find-rurima "--- InputName" "== Constants" "= reopen WSDL" "refm/api/src/wsdl/data.rd")
(find-rurima "--- MessageName" "== Constants" "= reopen WSDL" "refm/api/src/wsdl/data.rd")
(find-rurima "--- OperationName" "== Constants" "= reopen WSDL" "refm/api/src/wsdl/data.rd")
(find-rurima "--- OutputName" "== Constants" "= reopen WSDL" "refm/api/src/wsdl/data.rd")
(find-rurima "--- PartName" "== Constants" "= reopen WSDL" "refm/api/src/wsdl/data.rd")
(find-rurima "--- PortName" "== Constants" "= reopen WSDL" "refm/api/src/wsdl/data.rd")
(find-rurima "--- PortTypeName" "== Constants" "= reopen WSDL" "refm/api/src/wsdl/data.rd")
(find-rurima "--- ServiceName" "== Constants" "= reopen WSDL" "refm/api/src/wsdl/data.rd")
(find-rurima "--- TypesName" "== Constants" "= reopen WSDL" "refm/api/src/wsdl/data.rd")
(find-rurima "--- SchemaName" "== Constants" "= reopen WSDL" "refm/api/src/wsdl/data.rd")
(find-rurima "--- SOAPAddressName" "== Constants" "= reopen WSDL" "refm/api/src/wsdl/data.rd")
(find-rurima "--- SOAPBindingName" "== Constants" "= reopen WSDL" "refm/api/src/wsdl/data.rd")
(find-rurima "--- SOAPHeaderName" "== Constants" "= reopen WSDL" "refm/api/src/wsdl/data.rd")
(find-rurima "--- SOAPBodyName" "== Constants" "= reopen WSDL" "refm/api/src/wsdl/data.rd")
(find-rurima "--- SOAPFaultName" "== Constants" "= reopen WSDL" "refm/api/src/wsdl/data.rd")
(find-rurima "--- SOAPOperationName" "== Constants" "= reopen WSDL" "refm/api/src/wsdl/data.rd")
(find-rurima "--- BindingAttrName" "== Constants" "= reopen WSDL" "refm/api/src/wsdl/data.rd")
(find-rurima "--- ElementAttrName" "== Constants" "= reopen WSDL" "refm/api/src/wsdl/data.rd")
(find-rurima "--- LocationAttrName" "== Constants" "= reopen WSDL" "refm/api/src/wsdl/data.rd")
(find-rurima "--- MessageAttrName" "== Constants" "= reopen WSDL" "refm/api/src/wsdl/data.rd")
(find-rurima "--- NameAttrName" "== Constants" "= reopen WSDL" "refm/api/src/wsdl/data.rd")
(find-rurima "--- NamespaceAttrName" "== Constants" "= reopen WSDL" "refm/api/src/wsdl/data.rd")
(find-rurima "--- ParameterOrderAttrName" "== Constants" "= reopen WSDL" "refm/api/src/wsdl/data.rd")
(find-rurima "--- TargetNamespaceAttrName" "== Constants" "= reopen WSDL" "refm/api/src/wsdl/data.rd")
(find-rurima "--- TypeAttrName" "== Constants" "= reopen WSDL" "refm/api/src/wsdl/data.rd")
(find-rurima "= class WSDL::Param < WSDL::Info" "refm/api/src/wsdl/param.rd")
(find-rurima "== Class Methods" "= class WSDL::Param < WSDL::Info" "refm/api/src/wsdl/param.rd")
(find-rurima "--- new" "== Class Methods" "= class WSDL::Param < WSDL::Info" "refm/api/src/wsdl/param.rd")
(find-rurima "== Instance Methods" "= class WSDL::Param < WSDL::Info" "refm/api/src/wsdl/param.rd")
(find-rurima "--- find_message" "== Instance Methods" "= class WSDL::Param < WSDL::Info" "refm/api/src/wsdl/param.rd")
(find-rurima "--- message" "== Instance Methods" "= class WSDL::Param < WSDL::Info" "refm/api/src/wsdl/param.rd")
(find-rurima "--- name" "== Instance Methods" "= class WSDL::Param < WSDL::Info" "refm/api/src/wsdl/param.rd")
(find-rurima "--- parse_attr(attr, value)" "== Instance Methods" "= class WSDL::Param < WSDL::Info" "refm/api/src/wsdl/param.rd")
(find-rurima "--- parse_element(element)" "== Instance Methods" "= class WSDL::Param < WSDL::Info" "refm/api/src/wsdl/param.rd")
(find-rurima "--- soapbody" "== Instance Methods" "= class WSDL::Param < WSDL::Info" "refm/api/src/wsdl/param.rd")
(find-rurima "--- soapbody_use" "== Instance Methods" "= class WSDL::Param < WSDL::Info" "refm/api/src/wsdl/param.rd")
(find-rurima "--- soapfault" "== Instance Methods" "= class WSDL::Param < WSDL::Info" "refm/api/src/wsdl/param.rd")
(find-rurima "--- soapheader" "== Instance Methods" "= class WSDL::Param < WSDL::Info" "refm/api/src/wsdl/param.rd")
(find-rurima "--- targetnamespace" "== Instance Methods" "= class WSDL::Param < WSDL::Info" "refm/api/src/wsdl/param.rd")
(find-rurima "= class WSDL::Types < WSDL::Info" "refm/api/src/wsdl/types.rd")
(find-rurima "== Class Methods" "= class WSDL::Types < WSDL::Info" "refm/api/src/wsdl/types.rd")
(find-rurima "--- new" "== Class Methods" "= class WSDL::Types < WSDL::Info" "refm/api/src/wsdl/types.rd")
(find-rurima "== Instance Methods" "= class WSDL::Types < WSDL::Info" "refm/api/src/wsdl/types.rd")
(find-rurima "--- parse_attr(attr, value)" "== Instance Methods" "= class WSDL::Types < WSDL::Info" "refm/api/src/wsdl/types.rd")
(find-rurima "--- parse_element(element)" "== Instance Methods" "= class WSDL::Types < WSDL::Info" "refm/api/src/wsdl/types.rd")
(find-rurima "--- schemas" "== Instance Methods" "= class WSDL::Types < WSDL::Info" "refm/api/src/wsdl/types.rd")
(find-rurima "= class WSDL::Part < WSDL::Info" "refm/api/src/wsdl/part.rd")
(find-rurima "== Class Methods" "= class WSDL::Part < WSDL::Info" "refm/api/src/wsdl/part.rd")
(find-rurima "--- new" "== Class Methods" "= class WSDL::Part < WSDL::Info" "refm/api/src/wsdl/part.rd")
(find-rurima "== Instance Methods" "= class WSDL::Part < WSDL::Info" "refm/api/src/wsdl/part.rd")
(find-rurima "--- element" "== Instance Methods" "= class WSDL::Part < WSDL::Info" "refm/api/src/wsdl/part.rd")
(find-rurima "--- name" "== Instance Methods" "= class WSDL::Part < WSDL::Info" "refm/api/src/wsdl/part.rd")
(find-rurima "--- parse_attr(attr, value)" "== Instance Methods" "= class WSDL::Part < WSDL::Info" "refm/api/src/wsdl/part.rd")
(find-rurima "--- parse_element(element)" "== Instance Methods" "= class WSDL::Part < WSDL::Info" "refm/api/src/wsdl/part.rd")
(find-rurima "--- type" "== Instance Methods" "= class WSDL::Part < WSDL::Info" "refm/api/src/wsdl/part.rd")
(find-rurima "= class WSDL::Message < WSDL::Info" "refm/api/src/wsdl/message.rd")
(find-rurima "== Class Methods" "= class WSDL::Message < WSDL::Info" "refm/api/src/wsdl/message.rd")
(find-rurima "--- new" "== Class Methods" "= class WSDL::Message < WSDL::Info" "refm/api/src/wsdl/message.rd")
(find-rurima "== Instance Methods" "= class WSDL::Message < WSDL::Info" "refm/api/src/wsdl/message.rd")
(find-rurima "--- name" "== Instance Methods" "= class WSDL::Message < WSDL::Info" "refm/api/src/wsdl/message.rd")
(find-rurima "--- parse_attr(attr, value)" "== Instance Methods" "= class WSDL::Message < WSDL::Info" "refm/api/src/wsdl/message.rd")
(find-rurima "--- parse_element(element)" "== Instance Methods" "= class WSDL::Message < WSDL::Info" "refm/api/src/wsdl/message.rd")
(find-rurima "--- parts" "== Instance Methods" "= class WSDL::Message < WSDL::Info" "refm/api/src/wsdl/message.rd")
(find-rurima "--- targetnamespace" "== Instance Methods" "= class WSDL::Message < WSDL::Info" "refm/api/src/wsdl/message.rd")
(find-rurima "= class WSDL::Info < Object" "refm/api/src/wsdl/info.rd")
(find-rurima "== Class Methods" "= class WSDL::Info < Object" "refm/api/src/wsdl/info.rd")
(find-rurima "--- new" "== Class Methods" "= class WSDL::Info < Object" "refm/api/src/wsdl/info.rd")
(find-rurima "== Instance Methods" "= class WSDL::Info < Object" "refm/api/src/wsdl/info.rd")
(find-rurima "--- id" "== Instance Methods" "= class WSDL::Info < Object" "refm/api/src/wsdl/info.rd")
(find-rurima "--- id=" "== Instance Methods" "= class WSDL::Info < Object" "refm/api/src/wsdl/info.rd")
(find-rurima "--- parent" "== Instance Methods" "= class WSDL::Info < Object" "refm/api/src/wsdl/info.rd")
(find-rurima "--- parent=" "== Instance Methods" "= class WSDL::Info < Object" "refm/api/src/wsdl/info.rd")
(find-rurima "--- root" "== Instance Methods" "= class WSDL::Info < Object" "refm/api/src/wsdl/info.rd")
(find-rurima "--- root=" "== Instance Methods" "= class WSDL::Info < Object" "refm/api/src/wsdl/info.rd")
(find-rurima "--- inspect" "== Instance Methods" "= class WSDL::Info < Object" "refm/api/src/wsdl/info.rd")
(find-rurima "--- parse_attr(attr, value)" "== Instance Methods" "= class WSDL::Info < Object" "refm/api/src/wsdl/info.rd")
(find-rurima "--- parse_element(element)" "== Instance Methods" "= class WSDL::Info < Object" "refm/api/src/wsdl/info.rd")
(find-rurima "--- parse_epilogue" "== Instance Methods" "= class WSDL::Info < Object" "refm/api/src/wsdl/info.rd")
(find-rurima "= class WSDL::SOAP::Binding < WSDL::Info" "refm/api/src/wsdl/soap/binding.rd")
(find-rurima "== Class Methods" "= class WSDL::SOAP::Binding < WSDL::Info" "refm/api/src/wsdl/soap/binding.rd")
(find-rurima "--- new" "== Class Methods" "= class WSDL::SOAP::Binding < WSDL::Info" "refm/api/src/wsdl/soap/binding.rd")
(find-rurima "== Instance Methods" "= class WSDL::SOAP::Binding < WSDL::Info" "refm/api/src/wsdl/soap/binding.rd")
(find-rurima "--- parse_attr(attr, value)" "== Instance Methods" "= class WSDL::SOAP::Binding < WSDL::Info" "refm/api/src/wsdl/soap/binding.rd")
(find-rurima "--- parse_element(element)" "== Instance Methods" "= class WSDL::SOAP::Binding < WSDL::Info" "refm/api/src/wsdl/soap/binding.rd")
(find-rurima "--- style" "== Instance Methods" "= class WSDL::SOAP::Binding < WSDL::Info" "refm/api/src/wsdl/soap/binding.rd")
(find-rurima "--- transport" "== Instance Methods" "= class WSDL::SOAP::Binding < WSDL::Info" "refm/api/src/wsdl/soap/binding.rd")
(find-rurima "= class WSDL::SOAP::HeaderFault < WSDL::Info" "refm/api/src/wsdl/soap/headerfault.rd")
(find-rurima "== Class Methods" "= class WSDL::SOAP::HeaderFault < WSDL::Info" "refm/api/src/wsdl/soap/headerfault.rd")
(find-rurima "--- new" "== Class Methods" "= class WSDL::SOAP::HeaderFault < WSDL::Info" "refm/api/src/wsdl/soap/headerfault.rd")
(find-rurima "== Instance Methods" "= class WSDL::SOAP::HeaderFault < WSDL::Info" "refm/api/src/wsdl/soap/headerfault.rd")
(find-rurima "--- encodingstyle" "== Instance Methods" "= class WSDL::SOAP::HeaderFault < WSDL::Info" "refm/api/src/wsdl/soap/headerfault.rd")
(find-rurima "--- message" "== Instance Methods" "= class WSDL::SOAP::HeaderFault < WSDL::Info" "refm/api/src/wsdl/soap/headerfault.rd")
(find-rurima "--- namespace" "== Instance Methods" "= class WSDL::SOAP::HeaderFault < WSDL::Info" "refm/api/src/wsdl/soap/headerfault.rd")
(find-rurima "--- parse_attr(attr, value)" "== Instance Methods" "= class WSDL::SOAP::HeaderFault < WSDL::Info" "refm/api/src/wsdl/soap/headerfault.rd")
(find-rurima "--- parse_element(element)" "== Instance Methods" "= class WSDL::SOAP::HeaderFault < WSDL::Info" "refm/api/src/wsdl/soap/headerfault.rd")
(find-rurima "--- part" "== Instance Methods" "= class WSDL::SOAP::HeaderFault < WSDL::Info" "refm/api/src/wsdl/soap/headerfault.rd")
(find-rurima "--- use" "== Instance Methods" "= class WSDL::SOAP::HeaderFault < WSDL::Info" "refm/api/src/wsdl/soap/headerfault.rd")
(find-rurima "= class WSDL::SOAP::Fault < WSDL::Info" "refm/api/src/wsdl/soap/fault.rd")
(find-rurima "== Class Methods" "= class WSDL::SOAP::Fault < WSDL::Info" "refm/api/src/wsdl/soap/fault.rd")
(find-rurima "--- new" "== Class Methods" "= class WSDL::SOAP::Fault < WSDL::Info" "refm/api/src/wsdl/soap/fault.rd")
(find-rurima "== Instance Methods" "= class WSDL::SOAP::Fault < WSDL::Info" "refm/api/src/wsdl/soap/fault.rd")
(find-rurima "--- encodingstyle" "== Instance Methods" "= class WSDL::SOAP::Fault < WSDL::Info" "refm/api/src/wsdl/soap/fault.rd")
(find-rurima "--- name" "== Instance Methods" "= class WSDL::SOAP::Fault < WSDL::Info" "refm/api/src/wsdl/soap/fault.rd")
(find-rurima "--- namespace" "== Instance Methods" "= class WSDL::SOAP::Fault < WSDL::Info" "refm/api/src/wsdl/soap/fault.rd")
(find-rurima "--- parse_attr(attr, value)" "== Instance Methods" "= class WSDL::SOAP::Fault < WSDL::Info" "refm/api/src/wsdl/soap/fault.rd")
(find-rurima "--- parse_element(element)" "== Instance Methods" "= class WSDL::SOAP::Fault < WSDL::Info" "refm/api/src/wsdl/soap/fault.rd")
(find-rurima "--- targetnamespace" "== Instance Methods" "= class WSDL::SOAP::Fault < WSDL::Info" "refm/api/src/wsdl/soap/fault.rd")
(find-rurima "--- use" "== Instance Methods" "= class WSDL::SOAP::Fault < WSDL::Info" "refm/api/src/wsdl/soap/fault.rd")
(find-rurima "= class WSDL::SOAP::WSDL2Ruby < Object" "refm/api/src/wsdl/soap/wsdl2ruby.rd")
(find-rurima "== Instance Methods" "= class WSDL::SOAP::WSDL2Ruby < Object" "refm/api/src/wsdl/soap/wsdl2ruby.rd")
(find-rurima "--- basedir" "== Instance Methods" "= class WSDL::SOAP::WSDL2Ruby < Object" "refm/api/src/wsdl/soap/wsdl2ruby.rd")
(find-rurima "--- basedir=" "== Instance Methods" "= class WSDL::SOAP::WSDL2Ruby < Object" "refm/api/src/wsdl/soap/wsdl2ruby.rd")
(find-rurima "--- location" "== Instance Methods" "= class WSDL::SOAP::WSDL2Ruby < Object" "refm/api/src/wsdl/soap/wsdl2ruby.rd")
(find-rurima "--- location=" "== Instance Methods" "= class WSDL::SOAP::WSDL2Ruby < Object" "refm/api/src/wsdl/soap/wsdl2ruby.rd")
(find-rurima "--- logger" "== Instance Methods" "= class WSDL::SOAP::WSDL2Ruby < Object" "refm/api/src/wsdl/soap/wsdl2ruby.rd")
(find-rurima "--- logger=" "== Instance Methods" "= class WSDL::SOAP::WSDL2Ruby < Object" "refm/api/src/wsdl/soap/wsdl2ruby.rd")
(find-rurima "--- opt" "== Instance Methods" "= class WSDL::SOAP::WSDL2Ruby < Object" "refm/api/src/wsdl/soap/wsdl2ruby.rd")
(find-rurima "--- run" "== Instance Methods" "= class WSDL::SOAP::WSDL2Ruby < Object" "refm/api/src/wsdl/soap/wsdl2ruby.rd")
(find-rurima "== Private Instance Methods" "= class WSDL::SOAP::WSDL2Ruby < Object" "refm/api/src/wsdl/soap/wsdl2ruby.rd")
(find-rurima "--- new" "== Private Instance Methods" "= class WSDL::SOAP::WSDL2Ruby < Object" "refm/api/src/wsdl/soap/wsdl2ruby.rd")
(find-rurima "--- create_file" "== Private Instance Methods" "= class WSDL::SOAP::WSDL2Ruby < Object" "refm/api/src/wsdl/soap/wsdl2ruby.rd")
(find-rurima "--- create_classdef" "== Private Instance Methods" "= class WSDL::SOAP::WSDL2Ruby < Object" "refm/api/src/wsdl/soap/wsdl2ruby.rd")
(find-rurima "--- create_client_skelton(servicename)" "== Private Instance Methods" "= class WSDL::SOAP::WSDL2Ruby < Object" "refm/api/src/wsdl/soap/wsdl2ruby.rd")
(find-rurima "--- create_servant_skelton(porttypename)" "== Private Instance Methods" "= class WSDL::SOAP::WSDL2Ruby < Object" "refm/api/src/wsdl/soap/wsdl2ruby.rd")
(find-rurima "--- create_cgi_stub(servicename)" "== Private Instance Methods" "= class WSDL::SOAP::WSDL2Ruby < Object" "refm/api/src/wsdl/soap/wsdl2ruby.rd")
(find-rurima "--- create_standalone_server_stub(servicename)" "== Private Instance Methods" "= class WSDL::SOAP::WSDL2Ruby < Object" "refm/api/src/wsdl/soap/wsdl2ruby.rd")
(find-rurima "--- create_driver(porttypename)" "== Private Instance Methods" "= class WSDL::SOAP::WSDL2Ruby < Object" "refm/api/src/wsdl/soap/wsdl2ruby.rd")
(find-rurima "--- write_file(filename)" "== Private Instance Methods" "= class WSDL::SOAP::WSDL2Ruby < Object" "refm/api/src/wsdl/soap/wsdl2ruby.rd")
(find-rurima "--- check_file(filename)" "== Private Instance Methods" "= class WSDL::SOAP::WSDL2Ruby < Object" "refm/api/src/wsdl/soap/wsdl2ruby.rd")
(find-rurima "--- shbang" "== Private Instance Methods" "= class WSDL::SOAP::WSDL2Ruby < Object" "refm/api/src/wsdl/soap/wsdl2ruby.rd")
(find-rurima "--- create_name(name)" "== Private Instance Methods" "= class WSDL::SOAP::WSDL2Ruby < Object" "refm/api/src/wsdl/soap/wsdl2ruby.rd")
(find-rurima "--- import(location)" "== Private Instance Methods" "= class WSDL::SOAP::WSDL2Ruby < Object" "refm/api/src/wsdl/soap/wsdl2ruby.rd")
(find-rurima "= class WSDL::SOAP::CGIStubCreator < Object" "refm/api/src/wsdl/soap/cgiStubCreator.rd")
(find-rurima "== Class Methods" "= class WSDL::SOAP::CGIStubCreator < Object" "refm/api/src/wsdl/soap/cgiStubCreator.rd")
(find-rurima "--- new(definitions)" "== Class Methods" "= class WSDL::SOAP::CGIStubCreator < Object" "refm/api/src/wsdl/soap/cgiStubCreator.rd")
(find-rurima "== Instance Methods" "= class WSDL::SOAP::CGIStubCreator < Object" "refm/api/src/wsdl/soap/cgiStubCreator.rd")
(find-rurima "--- definitions" "== Instance Methods" "= class WSDL::SOAP::CGIStubCreator < Object" "refm/api/src/wsdl/soap/cgiStubCreator.rd")
(find-rurima "--- dump(service_name)" "== Instance Methods" "= class WSDL::SOAP::CGIStubCreator < Object" "refm/api/src/wsdl/soap/cgiStubCreator.rd")
(find-rurima "== Private Instance Methods" "= class WSDL::SOAP::CGIStubCreator < Object" "refm/api/src/wsdl/soap/cgiStubCreator.rd")
(find-rurima "--- dump_porttype(name)" "== Private Instance Methods" "= class WSDL::SOAP::CGIStubCreator < Object" "refm/api/src/wsdl/soap/cgiStubCreator.rd")
(find-rurima "= class WSDL::SOAP::ClassDefCreator < Object" "refm/api/src/wsdl/soap/classDefCreator.rd")
(find-rurima "== Constants" "= class WSDL::SOAP::ClassDefCreator < Object" "refm/api/src/wsdl/soap/classDefCreator.rd")
(find-rurima "--- DEFAULT_ITEM_NAME" "== Constants" "= class WSDL::SOAP::ClassDefCreator < Object" "refm/api/src/wsdl/soap/classDefCreator.rd")
(find-rurima "== Class Methods" "= class WSDL::SOAP::ClassDefCreator < Object" "refm/api/src/wsdl/soap/classDefCreator.rd")
(find-rurima "--- new(definitions)" "== Class Methods" "= class WSDL::SOAP::ClassDefCreator < Object" "refm/api/src/wsdl/soap/classDefCreator.rd")
(find-rurima "== Instance Methods" "= class WSDL::SOAP::ClassDefCreator < Object" "refm/api/src/wsdl/soap/classDefCreator.rd")
(find-rurima "--- dump(type = nil)" "== Instance Methods" "= class WSDL::SOAP::ClassDefCreator < Object" "refm/api/src/wsdl/soap/classDefCreator.rd")
(find-rurima "== Private Instance Methods" "= class WSDL::SOAP::ClassDefCreator < Object" "refm/api/src/wsdl/soap/classDefCreator.rd")
(find-rurima "--- attribute_basetype(attr)" "== Private Instance Methods" "= class WSDL::SOAP::ClassDefCreator < Object" "refm/api/src/wsdl/soap/classDefCreator.rd")
(find-rurima "--- basetype_class(type)" "== Private Instance Methods" "= class WSDL::SOAP::ClassDefCreator < Object" "refm/api/src/wsdl/soap/classDefCreator.rd")
(find-rurima "--- define_attribute(c, attributes)" "== Private Instance Methods" "= class WSDL::SOAP::ClassDefCreator < Object" "refm/api/src/wsdl/soap/classDefCreator.rd")
(find-rurima "--- dump_arraydef(complextype)" "== Private Instance Methods" "= class WSDL::SOAP::ClassDefCreator < Object" "refm/api/src/wsdl/soap/classDefCreator.rd")
(find-rurima "--- dump_classdef(qname, typedef, qualified = false)" "== Private Instance Methods" "= class WSDL::SOAP::ClassDefCreator < Object" "refm/api/src/wsdl/soap/classDefCreator.rd")
(find-rurima "--- dump_complextype" "== Private Instance Methods" "= class WSDL::SOAP::ClassDefCreator < Object" "refm/api/src/wsdl/soap/classDefCreator.rd")
(find-rurima "--- dump_element" "== Private Instance Methods" "= class WSDL::SOAP::ClassDefCreator < Object" "refm/api/src/wsdl/soap/classDefCreator.rd")
(find-rurima "--- dump_simpleclassdef(type_or_element)" "== Private Instance Methods" "= class WSDL::SOAP::ClassDefCreator < Object" "refm/api/src/wsdl/soap/classDefCreator.rd")
(find-rurima "--- dump_simpletype" "== Private Instance Methods" "= class WSDL::SOAP::ClassDefCreator < Object" "refm/api/src/wsdl/soap/classDefCreator.rd")
(find-rurima "--- dump_simpletypedef(qname, simpletype)" "== Private Instance Methods" "= class WSDL::SOAP::ClassDefCreator < Object" "refm/api/src/wsdl/soap/classDefCreator.rd")
(find-rurima "--- element_basetype(ele)" "== Private Instance Methods" "= class WSDL::SOAP::ClassDefCreator < Object" "refm/api/src/wsdl/soap/classDefCreator.rd")
(find-rurima "--- name_attribute(attribute)" "== Private Instance Methods" "= class WSDL::SOAP::ClassDefCreator < Object" "refm/api/src/wsdl/soap/classDefCreator.rd")
(find-rurima "--- name_element(element)" "== Private Instance Methods" "= class WSDL::SOAP::ClassDefCreator < Object" "refm/api/src/wsdl/soap/classDefCreator.rd")
(find-rurima "= reopen WSDL::XMLSchema::Element < WSDL::Info" "refm/api/src/wsdl/soap/element.rd")
(find-rurima "== Instance Methods" "= reopen WSDL::XMLSchema::Element < WSDL::Info" "refm/api/src/wsdl/soap/element.rd")
(find-rurima "--- map_as_array?" "== Instance Methods" "= reopen WSDL::XMLSchema::Element < WSDL::Info" "refm/api/src/wsdl/soap/element.rd")
(find-rurima "--- attributes" "== Instance Methods" "= reopen WSDL::XMLSchema::Element < WSDL::Info" "refm/api/src/wsdl/soap/element.rd")
(find-rurima "= class WSDL::SOAP::Operation::OperationInfo < Object" "refm/api/src/wsdl/soap/operation.rd")
(find-rurima "== Class Methods" "= class WSDL::SOAP::Operation::OperationInfo < Object" "refm/api/src/wsdl/soap/operation.rd")
(find-rurima "--- new(style, op_name, optype_name, headerparts, bodyparts, faultpart, soapaction)" "== Class Methods" "= class WSDL::SOAP::Operation::OperationInfo < Object" "refm/api/src/wsdl/soap/operation.rd")
(find-rurima "== Instance Methods" "= class WSDL::SOAP::Operation::OperationInfo < Object" "refm/api/src/wsdl/soap/operation.rd")
(find-rurima "--- bodyparts" "== Instance Methods" "= class WSDL::SOAP::Operation::OperationInfo < Object" "refm/api/src/wsdl/soap/operation.rd")
(find-rurima "--- faultpart" "== Instance Methods" "= class WSDL::SOAP::Operation::OperationInfo < Object" "refm/api/src/wsdl/soap/operation.rd")
(find-rurima "--- headerparts" "== Instance Methods" "= class WSDL::SOAP::Operation::OperationInfo < Object" "refm/api/src/wsdl/soap/operation.rd")
(find-rurima "--- op_name" "== Instance Methods" "= class WSDL::SOAP::Operation::OperationInfo < Object" "refm/api/src/wsdl/soap/operation.rd")
(find-rurima "--- optype_name" "== Instance Methods" "= class WSDL::SOAP::Operation::OperationInfo < Object" "refm/api/src/wsdl/soap/operation.rd")
(find-rurima "--- soapaction" "== Instance Methods" "= class WSDL::SOAP::Operation::OperationInfo < Object" "refm/api/src/wsdl/soap/operation.rd")
(find-rurima "--- style" "== Instance Methods" "= class WSDL::SOAP::Operation::OperationInfo < Object" "refm/api/src/wsdl/soap/operation.rd")
(find-rurima "= class WSDL::SOAP::Operation < WSDL::Info" "refm/api/src/wsdl/soap/operation.rd")
(find-rurima "== Class Methods" "= class WSDL::SOAP::Operation < WSDL::Info" "refm/api/src/wsdl/soap/operation.rd")
(find-rurima "--- new" "== Class Methods" "= class WSDL::SOAP::Operation < WSDL::Info" "refm/api/src/wsdl/soap/operation.rd")
(find-rurima "== Instance Methods" "= class WSDL::SOAP::Operation < WSDL::Info" "refm/api/src/wsdl/soap/operation.rd")
(find-rurima "--- input_info" "== Instance Methods" "= class WSDL::SOAP::Operation < WSDL::Info" "refm/api/src/wsdl/soap/operation.rd")
(find-rurima "--- operation_style" "== Instance Methods" "= class WSDL::SOAP::Operation < WSDL::Info" "refm/api/src/wsdl/soap/operation.rd")
(find-rurima "--- output_info" "== Instance Methods" "= class WSDL::SOAP::Operation < WSDL::Info" "refm/api/src/wsdl/soap/operation.rd")
(find-rurima "--- parse_attr(attr, value)" "== Instance Methods" "= class WSDL::SOAP::Operation < WSDL::Info" "refm/api/src/wsdl/soap/operation.rd")
(find-rurima "--- parse_element(element)" "== Instance Methods" "= class WSDL::SOAP::Operation < WSDL::Info" "refm/api/src/wsdl/soap/operation.rd")
(find-rurima "--- soapaction" "== Instance Methods" "= class WSDL::SOAP::Operation < WSDL::Info" "refm/api/src/wsdl/soap/operation.rd")
(find-rurima "--- style" "== Instance Methods" "= class WSDL::SOAP::Operation < WSDL::Info" "refm/api/src/wsdl/soap/operation.rd")
(find-rurima "== Private Instance Methods" "= class WSDL::SOAP::Operation < WSDL::Info" "refm/api/src/wsdl/soap/operation.rd")
(find-rurima "--- parent_binding" "== Private Instance Methods" "= class WSDL::SOAP::Operation < WSDL::Info" "refm/api/src/wsdl/soap/operation.rd")
(find-rurima "--- param_info(name_info, param)" "== Private Instance Methods" "= class WSDL::SOAP::Operation < WSDL::Info" "refm/api/src/wsdl/soap/operation.rd")
(find-rurima "= class WSDL::Definitions < WSDL::Info" "refm/api/src/wsdl/soap/definitions.rd")
(find-rurima "== Class Methods" "= class WSDL::Definitions < WSDL::Info" "refm/api/src/wsdl/soap/definitions.rd")
(find-rurima "--- array_complextype" "== Class Methods" "= class WSDL::Definitions < WSDL::Info" "refm/api/src/wsdl/soap/definitions.rd")
(find-rurima "--- exception_complextype" "== Class Methods" "= class WSDL::Definitions < WSDL::Info" "refm/api/src/wsdl/soap/definitions.rd")
(find-rurima "--- fault_complextype" "== Class Methods" "= class WSDL::Definitions < WSDL::Info" "refm/api/src/wsdl/soap/definitions.rd")
(find-rurima "--- soap_rpc_complextypes" "== Class Methods" "= class WSDL::Definitions < WSDL::Info" "refm/api/src/wsdl/soap/definitions.rd")
(find-rurima "== Instance Methods" "= class WSDL::Definitions < WSDL::Info" "refm/api/src/wsdl/soap/definitions.rd")
(find-rurima "--- collect_faulttypes" "== Instance Methods" "= class WSDL::Definitions < WSDL::Info" "refm/api/src/wsdl/soap/definitions.rd")
(find-rurima "--- soap_rpc_complextypes(binding)" "== Instance Methods" "= class WSDL::Definitions < WSDL::Info" "refm/api/src/wsdl/soap/definitions.rd")
(find-rurima "== Private Instance Methods" "= class WSDL::Definitions < WSDL::Info" "refm/api/src/wsdl/soap/definitions.rd")
(find-rurima "--- collect_fault_messages" "== Private Instance Methods" "= class WSDL::Definitions < WSDL::Info" "refm/api/src/wsdl/soap/definitions.rd")
(find-rurima "--- rpc_operation_complextypes(binding)" "== Private Instance Methods" "= class WSDL::Definitions < WSDL::Info" "refm/api/src/wsdl/soap/definitions.rd")
(find-rurima "--- op_bind_rpc?(op_bind)" "== Private Instance Methods" "= class WSDL::Definitions < WSDL::Info" "refm/api/src/wsdl/soap/definitions.rd")
(find-rurima "--- elements_from_message(message)" "== Private Instance Methods" "= class WSDL::Definitions < WSDL::Info" "refm/api/src/wsdl/soap/definitions.rd")
(find-rurima "= class WSDL::SOAP::Address < WSDL::Info" "refm/api/src/wsdl/soap/address.rd")
(find-rurima "== Class Methods" "= class WSDL::SOAP::Address < WSDL::Info" "refm/api/src/wsdl/soap/address.rd")
(find-rurima "--- new" "== Class Methods" "= class WSDL::SOAP::Address < WSDL::Info" "refm/api/src/wsdl/soap/address.rd")
(find-rurima "== Instance Methods" "= class WSDL::SOAP::Address < WSDL::Info" "refm/api/src/wsdl/soap/address.rd")
(find-rurima "--- location" "== Instance Methods" "= class WSDL::SOAP::Address < WSDL::Info" "refm/api/src/wsdl/soap/address.rd")
(find-rurima "--- parse_attr(attr, value)" "== Instance Methods" "= class WSDL::SOAP::Address < WSDL::Info" "refm/api/src/wsdl/soap/address.rd")
(find-rurima "--- parse_element(element)" "== Instance Methods" "= class WSDL::SOAP::Address < WSDL::Info" "refm/api/src/wsdl/soap/address.rd")
(find-rurima "= module WSDL::SOAP" "refm/api/src/wsdl/soap/data.rd")
(find-rurima "== Constants" "= module WSDL::SOAP" "refm/api/src/wsdl/soap/data.rd")
(find-rurima "--- HeaderFaultName" "== Constants" "= module WSDL::SOAP" "refm/api/src/wsdl/soap/data.rd")
(find-rurima "--- LocationAttrName" "== Constants" "= module WSDL::SOAP" "refm/api/src/wsdl/soap/data.rd")
(find-rurima "--- StyleAttrName" "== Constants" "= module WSDL::SOAP" "refm/api/src/wsdl/soap/data.rd")
(find-rurima "--- TransportAttrName" "== Constants" "= module WSDL::SOAP" "refm/api/src/wsdl/soap/data.rd")
(find-rurima "--- UseAttrName" "== Constants" "= module WSDL::SOAP" "refm/api/src/wsdl/soap/data.rd")
(find-rurima "--- PartsAttrName" "== Constants" "= module WSDL::SOAP" "refm/api/src/wsdl/soap/data.rd")
(find-rurima "--- PartAttrName" "== Constants" "= module WSDL::SOAP" "refm/api/src/wsdl/soap/data.rd")
(find-rurima "--- NameAttrName" "== Constants" "= module WSDL::SOAP" "refm/api/src/wsdl/soap/data.rd")
(find-rurima "--- MessageAttrName" "== Constants" "= module WSDL::SOAP" "refm/api/src/wsdl/soap/data.rd")
(find-rurima "--- EncodingStyleAttrName" "== Constants" "= module WSDL::SOAP" "refm/api/src/wsdl/soap/data.rd")
(find-rurima "--- NamespaceAttrName" "== Constants" "= module WSDL::SOAP" "refm/api/src/wsdl/soap/data.rd")
(find-rurima "--- SOAPActionAttrName" "== Constants" "= module WSDL::SOAP" "refm/api/src/wsdl/soap/data.rd")
(find-rurima "= class WSDL::SOAP::StandaloneServerStubCreator < Object" "refm/api/src/wsdl/soap/standaloneServerStubCreator.rd")
(find-rurima "== Class Methods" "= class WSDL::SOAP::StandaloneServerStubCreator < Object" "refm/api/src/wsdl/soap/standaloneServerStubCreator.rd")
(find-rurima "--- new(definitions)" "== Class Methods" "= class WSDL::SOAP::StandaloneServerStubCreator < Object" "refm/api/src/wsdl/soap/standaloneServerStubCreator.rd")
(find-rurima "== Instance Methods" "= class WSDL::SOAP::StandaloneServerStubCreator < Object" "refm/api/src/wsdl/soap/standaloneServerStubCreator.rd")
(find-rurima "--- definitions" "== Instance Methods" "= class WSDL::SOAP::StandaloneServerStubCreator < Object" "refm/api/src/wsdl/soap/standaloneServerStubCreator.rd")
(find-rurima "--- dump(service_name)" "== Instance Methods" "= class WSDL::SOAP::StandaloneServerStubCreator < Object" "refm/api/src/wsdl/soap/standaloneServerStubCreator.rd")
(find-rurima "== Private Instance Methods" "= class WSDL::SOAP::StandaloneServerStubCreator < Object" "refm/api/src/wsdl/soap/standaloneServerStubCreator.rd")
(find-rurima "--- dump_porttype(name)" "== Private Instance Methods" "= class WSDL::SOAP::StandaloneServerStubCreator < Object" "refm/api/src/wsdl/soap/standaloneServerStubCreator.rd")
(find-rurima "= class WSDL::SOAP::ClientSkeltonCreator < Object" "refm/api/src/wsdl/soap/clientSkeltonCreator.rd")
(find-rurima "== Class Methods" "= class WSDL::SOAP::ClientSkeltonCreator < Object" "refm/api/src/wsdl/soap/clientSkeltonCreator.rd")
(find-rurima "--- new(definitions)" "== Class Methods" "= class WSDL::SOAP::ClientSkeltonCreator < Object" "refm/api/src/wsdl/soap/clientSkeltonCreator.rd")
(find-rurima "== Instance Methods" "= class WSDL::SOAP::ClientSkeltonCreator < Object" "refm/api/src/wsdl/soap/clientSkeltonCreator.rd")
(find-rurima "--- dump(service_name)" "== Instance Methods" "= class WSDL::SOAP::ClientSkeltonCreator < Object" "refm/api/src/wsdl/soap/clientSkeltonCreator.rd")
(find-rurima "--- definitions" "== Instance Methods" "= class WSDL::SOAP::ClientSkeltonCreator < Object" "refm/api/src/wsdl/soap/clientSkeltonCreator.rd")
(find-rurima "== Private Instance Methods" "= class WSDL::SOAP::ClientSkeltonCreator < Object" "refm/api/src/wsdl/soap/clientSkeltonCreator.rd")
(find-rurima "--- dump_porttype(name)" "== Private Instance Methods" "= class WSDL::SOAP::ClientSkeltonCreator < Object" "refm/api/src/wsdl/soap/clientSkeltonCreator.rd")
(find-rurima "--- dump_operation(operation)" "== Private Instance Methods" "= class WSDL::SOAP::ClientSkeltonCreator < Object" "refm/api/src/wsdl/soap/clientSkeltonCreator.rd")
(find-rurima "--- dump_input_init(input)" "== Private Instance Methods" "= class WSDL::SOAP::ClientSkeltonCreator < Object" "refm/api/src/wsdl/soap/clientSkeltonCreator.rd")
(find-rurima "= module WSDL::SOAP::ClassDefCreatorSupport" "refm/api/src/wsdl/soap/classDefCreatorSupport.rd")
(find-rurima "== Instance Methods" "= module WSDL::SOAP::ClassDefCreatorSupport" "refm/api/src/wsdl/soap/classDefCreatorSupport.rd")
(find-rurima "--- basetype_mapped_class(name)" "== Instance Methods" "= module WSDL::SOAP::ClassDefCreatorSupport" "refm/api/src/wsdl/soap/classDefCreatorSupport.rd")
(find-rurima "--- create_class_name(qname)" "== Instance Methods" "= module WSDL::SOAP::ClassDefCreatorSupport" "refm/api/src/wsdl/soap/classDefCreatorSupport.rd")
(find-rurima "--- dq(ele)" "== Instance Methods" "= module WSDL::SOAP::ClassDefCreatorSupport" "refm/api/src/wsdl/soap/classDefCreatorSupport.rd")
(find-rurima "--- dqname(qname)" "== Instance Methods" "= module WSDL::SOAP::ClassDefCreatorSupport" "refm/api/src/wsdl/soap/classDefCreatorSupport.rd")
(find-rurima "--- dump_method_signature(operation)" "== Instance Methods" "= module WSDL::SOAP::ClassDefCreatorSupport" "refm/api/src/wsdl/soap/classDefCreatorSupport.rd")
(find-rurima "--- ndq(ele)" "== Instance Methods" "= module WSDL::SOAP::ClassDefCreatorSupport" "refm/api/src/wsdl/soap/classDefCreatorSupport.rd")
(find-rurima "--- sym(ele)" "== Instance Methods" "= module WSDL::SOAP::ClassDefCreatorSupport" "refm/api/src/wsdl/soap/classDefCreatorSupport.rd")
(find-rurima "== Private Instance Methods" "= module WSDL::SOAP::ClassDefCreatorSupport" "refm/api/src/wsdl/soap/classDefCreatorSupport.rd")
(find-rurima "--- dump_inout_type(param)" "== Private Instance Methods" "= module WSDL::SOAP::ClassDefCreatorSupport" "refm/api/src/wsdl/soap/classDefCreatorSupport.rd")
(find-rurima "--- dump_inputparam(input)" "== Private Instance Methods" "= module WSDL::SOAP::ClassDefCreatorSupport" "refm/api/src/wsdl/soap/classDefCreatorSupport.rd")
(find-rurima "--- add_at(base, str, pos)" "== Private Instance Methods" "= module WSDL::SOAP::ClassDefCreatorSupport" "refm/api/src/wsdl/soap/classDefCreatorSupport.rd")
(find-rurima "= class WSDL::SOAP::MethodDefCreator < Object" "refm/api/src/wsdl/soap/methodDefCreator.rd")
(find-rurima "== Class Methods" "= class WSDL::SOAP::MethodDefCreator < Object" "refm/api/src/wsdl/soap/methodDefCreator.rd")
(find-rurima "--- new(definitions)" "== Class Methods" "= class WSDL::SOAP::MethodDefCreator < Object" "refm/api/src/wsdl/soap/methodDefCreator.rd")
(find-rurima "== Instance Methods" "= class WSDL::SOAP::MethodDefCreator < Object" "refm/api/src/wsdl/soap/methodDefCreator.rd")
(find-rurima "--- collect_documentparameter(operation)" "== Instance Methods" "= class WSDL::SOAP::MethodDefCreator < Object" "refm/api/src/wsdl/soap/methodDefCreator.rd")
(find-rurima "--- collect_rpcparameter(operation)" "== Instance Methods" "= class WSDL::SOAP::MethodDefCreator < Object" "refm/api/src/wsdl/soap/methodDefCreator.rd")
(find-rurima "--- definitions" "== Instance Methods" "= class WSDL::SOAP::MethodDefCreator < Object" "refm/api/src/wsdl/soap/methodDefCreator.rd")
(find-rurima "--- dump(porttype)" "== Instance Methods" "= class WSDL::SOAP::MethodDefCreator < Object" "refm/api/src/wsdl/soap/methodDefCreator.rd")
(find-rurima "== Private Instance Methods" "= class WSDL::SOAP::MethodDefCreator < Object" "refm/api/src/wsdl/soap/methodDefCreator.rd")
(find-rurima "--- dump_method(operation, binding)" "== Private Instance Methods" "= class WSDL::SOAP::MethodDefCreator < Object" "refm/api/src/wsdl/soap/methodDefCreator.rd")
(find-rurima "--- rpcdefinedtype(part)" "== Private Instance Methods" "= class WSDL::SOAP::MethodDefCreator < Object" "refm/api/src/wsdl/soap/methodDefCreator.rd")
(find-rurima "--- documentdefinedtype(part)" "== Private Instance Methods" "= class WSDL::SOAP::MethodDefCreator < Object" "refm/api/src/wsdl/soap/methodDefCreator.rd")
(find-rurima "--- elementqualified(part)" "== Private Instance Methods" "= class WSDL::SOAP::MethodDefCreator < Object" "refm/api/src/wsdl/soap/methodDefCreator.rd")
(find-rurima "--- param_set(io_type, name, type, ele = nil)" "== Private Instance Methods" "= class WSDL::SOAP::MethodDefCreator < Object" "refm/api/src/wsdl/soap/methodDefCreator.rd")
(find-rurima "--- collect_type(type)" "== Private Instance Methods" "= class WSDL::SOAP::MethodDefCreator < Object" "refm/api/src/wsdl/soap/methodDefCreator.rd")
(find-rurima "--- param2str(params)" "== Private Instance Methods" "= class WSDL::SOAP::MethodDefCreator < Object" "refm/api/src/wsdl/soap/methodDefCreator.rd")
(find-rurima "--- type2str(type)" "== Private Instance Methods" "= class WSDL::SOAP::MethodDefCreator < Object" "refm/api/src/wsdl/soap/methodDefCreator.rd")
(find-rurima "--- ele2str(ele)" "== Private Instance Methods" "= class WSDL::SOAP::MethodDefCreator < Object" "refm/api/src/wsdl/soap/methodDefCreator.rd")
(find-rurima "--- cdr(ary)" "== Private Instance Methods" "= class WSDL::SOAP::MethodDefCreator < Object" "refm/api/src/wsdl/soap/methodDefCreator.rd")
(find-rurima "= class WSDL::SOAP::DriverCreator < Object" "refm/api/src/wsdl/soap/driverCreator.rd")
(find-rurima "== Class Methods" "= class WSDL::SOAP::DriverCreator < Object" "refm/api/src/wsdl/soap/driverCreator.rd")
(find-rurima "--- new(definitions)" "== Class Methods" "= class WSDL::SOAP::DriverCreator < Object" "refm/api/src/wsdl/soap/driverCreator.rd")
(find-rurima "== Instance Methods" "= class WSDL::SOAP::DriverCreator < Object" "refm/api/src/wsdl/soap/driverCreator.rd")
(find-rurima "--- definitions" "== Instance Methods" "= class WSDL::SOAP::DriverCreator < Object" "refm/api/src/wsdl/soap/driverCreator.rd")
(find-rurima "--- dump(porttype = nil)" "== Instance Methods" "= class WSDL::SOAP::DriverCreator < Object" "refm/api/src/wsdl/soap/driverCreator.rd")
(find-rurima "== Private Instance Methods" "= class WSDL::SOAP::DriverCreator < Object" "refm/api/src/wsdl/soap/driverCreator.rd")
(find-rurima "--- dump_porttype(name)" "== Private Instance Methods" "= class WSDL::SOAP::DriverCreator < Object" "refm/api/src/wsdl/soap/driverCreator.rd")
(find-rurima "= class WSDL::SOAP::ServantSkeltonCreator < Object" "refm/api/src/wsdl/soap/servantSkeltonCreator.rd")
(find-rurima "== Class Methods" "= class WSDL::SOAP::ServantSkeltonCreator < Object" "refm/api/src/wsdl/soap/servantSkeltonCreator.rd")
(find-rurima "--- new(definitions)" "== Class Methods" "= class WSDL::SOAP::ServantSkeltonCreator < Object" "refm/api/src/wsdl/soap/servantSkeltonCreator.rd")
(find-rurima "== Instance Methods" "= class WSDL::SOAP::ServantSkeltonCreator < Object" "refm/api/src/wsdl/soap/servantSkeltonCreator.rd")
(find-rurima "--- definitions" "== Instance Methods" "= class WSDL::SOAP::ServantSkeltonCreator < Object" "refm/api/src/wsdl/soap/servantSkeltonCreator.rd")
(find-rurima "--- dump(porttype = nil)" "== Instance Methods" "= class WSDL::SOAP::ServantSkeltonCreator < Object" "refm/api/src/wsdl/soap/servantSkeltonCreator.rd")
(find-rurima "== Private Instance Methods" "= class WSDL::SOAP::ServantSkeltonCreator < Object" "refm/api/src/wsdl/soap/servantSkeltonCreator.rd")
(find-rurima "--- dump_porttype(name)" "== Private Instance Methods" "= class WSDL::SOAP::ServantSkeltonCreator < Object" "refm/api/src/wsdl/soap/servantSkeltonCreator.rd")
(find-rurima "= class WSDL::SOAP::Body < WSDL::Info" "refm/api/src/wsdl/soap/body.rd")
(find-rurima "== Class Methods" "= class WSDL::SOAP::Body < WSDL::Info" "refm/api/src/wsdl/soap/body.rd")
(find-rurima "--- new" "== Class Methods" "= class WSDL::SOAP::Body < WSDL::Info" "refm/api/src/wsdl/soap/body.rd")
(find-rurima "== Instance Methods" "= class WSDL::SOAP::Body < WSDL::Info" "refm/api/src/wsdl/soap/body.rd")
(find-rurima "--- encodingstyle" "== Instance Methods" "= class WSDL::SOAP::Body < WSDL::Info" "refm/api/src/wsdl/soap/body.rd")
(find-rurima "--- namespace" "== Instance Methods" "= class WSDL::SOAP::Body < WSDL::Info" "refm/api/src/wsdl/soap/body.rd")
(find-rurima "--- parse_attr(attr, value)" "== Instance Methods" "= class WSDL::SOAP::Body < WSDL::Info" "refm/api/src/wsdl/soap/body.rd")
(find-rurima "--- parse_element(element)" "== Instance Methods" "= class WSDL::SOAP::Body < WSDL::Info" "refm/api/src/wsdl/soap/body.rd")
(find-rurima "--- parts" "== Instance Methods" "= class WSDL::SOAP::Body < WSDL::Info" "refm/api/src/wsdl/soap/body.rd")
(find-rurima "--- use" "== Instance Methods" "= class WSDL::SOAP::Body < WSDL::Info" "refm/api/src/wsdl/soap/body.rd")
(find-rurima "= class WSDL::SOAP::Header < WSDL::Info" "refm/api/src/wsdl/soap/header.rd")
(find-rurima "== Class Methods" "= class WSDL::SOAP::Header < WSDL::Info" "refm/api/src/wsdl/soap/header.rd")
(find-rurima "--- new" "== Class Methods" "= class WSDL::SOAP::Header < WSDL::Info" "refm/api/src/wsdl/soap/header.rd")
(find-rurima "== Instance Methods" "= class WSDL::SOAP::Header < WSDL::Info" "refm/api/src/wsdl/soap/header.rd")
(find-rurima "--- encodingstyle" "== Instance Methods" "= class WSDL::SOAP::Header < WSDL::Info" "refm/api/src/wsdl/soap/header.rd")
(find-rurima "--- find_message" "== Instance Methods" "= class WSDL::SOAP::Header < WSDL::Info" "refm/api/src/wsdl/soap/header.rd")
(find-rurima "--- find_part" "== Instance Methods" "= class WSDL::SOAP::Header < WSDL::Info" "refm/api/src/wsdl/soap/header.rd")
(find-rurima "--- headerfault" "== Instance Methods" "= class WSDL::SOAP::Header < WSDL::Info" "refm/api/src/wsdl/soap/header.rd")
(find-rurima "--- message" "== Instance Methods" "= class WSDL::SOAP::Header < WSDL::Info" "refm/api/src/wsdl/soap/header.rd")
(find-rurima "--- namespace" "== Instance Methods" "= class WSDL::SOAP::Header < WSDL::Info" "refm/api/src/wsdl/soap/header.rd")
(find-rurima "--- parse_attr(attr, value)" "== Instance Methods" "= class WSDL::SOAP::Header < WSDL::Info" "refm/api/src/wsdl/soap/header.rd")
(find-rurima "--- parse_element(element)" "== Instance Methods" "= class WSDL::SOAP::Header < WSDL::Info" "refm/api/src/wsdl/soap/header.rd")
(find-rurima "--- part" "== Instance Methods" "= class WSDL::SOAP::Header < WSDL::Info" "refm/api/src/wsdl/soap/header.rd")
(find-rurima "--- targetnamespace" "== Instance Methods" "= class WSDL::SOAP::Header < WSDL::Info" "refm/api/src/wsdl/soap/header.rd")
(find-rurima "--- use" "== Instance Methods" "= class WSDL::SOAP::Header < WSDL::Info" "refm/api/src/wsdl/soap/header.rd")
(find-rurima "= reopen WSDL::XMLSchema::ComplexType" "refm/api/src/wsdl/soap/complexType.rd")
(find-rurima "== Instance Methods" "= reopen WSDL::XMLSchema::ComplexType" "refm/api/src/wsdl/soap/complexType.rd")
(find-rurima "--- compoundtype" "== Instance Methods" "= reopen WSDL::XMLSchema::ComplexType" "refm/api/src/wsdl/soap/complexType.rd")
(find-rurima "--- check_type" "== Instance Methods" "= reopen WSDL::XMLSchema::ComplexType" "refm/api/src/wsdl/soap/complexType.rd")
(find-rurima "--- child_type(name = nil)" "== Instance Methods" "= reopen WSDL::XMLSchema::ComplexType" "refm/api/src/wsdl/soap/complexType.rd")
(find-rurima "--- child_defined_complextype(name)" "== Instance Methods" "= reopen WSDL::XMLSchema::ComplexType" "refm/api/src/wsdl/soap/complexType.rd")
(find-rurima "--- find_arytype" "== Instance Methods" "= reopen WSDL::XMLSchema::ComplexType" "refm/api/src/wsdl/soap/complexType.rd")
(find-rurima "--- find_aryelement" "== Instance Methods" "= reopen WSDL::XMLSchema::ComplexType" "refm/api/src/wsdl/soap/complexType.rd")
(find-rurima "== Private Instance Methods" "= reopen WSDL::XMLSchema::ComplexType" "refm/api/src/wsdl/soap/complexType.rd")
(find-rurima "--- element_simpletype(element)" "== Private Instance Methods" "= reopen WSDL::XMLSchema::ComplexType" "refm/api/src/wsdl/soap/complexType.rd")
(find-rurima "--- check_array_content(content)" "== Private Instance Methods" "= reopen WSDL::XMLSchema::ComplexType" "refm/api/src/wsdl/soap/complexType.rd")
(find-rurima "--- content_arytype" "== Private Instance Methods" "= reopen WSDL::XMLSchema::ComplexType" "refm/api/src/wsdl/soap/complexType.rd")
(find-rurima "= class WSDL::SOAP::MappingRegistryCreator < Object" "refm/api/src/wsdl/soap/mappingRegistryCreator.rd")
(find-rurima "== Class Methods" "= class WSDL::SOAP::MappingRegistryCreator < Object" "refm/api/src/wsdl/soap/mappingRegistryCreator.rd")
(find-rurima "--- new(definitions)" "== Class Methods" "= class WSDL::SOAP::MappingRegistryCreator < Object" "refm/api/src/wsdl/soap/mappingRegistryCreator.rd")
(find-rurima "== Instance Methods" "= class WSDL::SOAP::MappingRegistryCreator < Object" "refm/api/src/wsdl/soap/mappingRegistryCreator.rd")
(find-rurima "--- definitions" "== Instance Methods" "= class WSDL::SOAP::MappingRegistryCreator < Object" "refm/api/src/wsdl/soap/mappingRegistryCreator.rd")
(find-rurima "--- dump(types)" "== Instance Methods" "= class WSDL::SOAP::MappingRegistryCreator < Object" "refm/api/src/wsdl/soap/mappingRegistryCreator.rd")
(find-rurima "== Private Instance Methods" "= class WSDL::SOAP::MappingRegistryCreator < Object" "refm/api/src/wsdl/soap/mappingRegistryCreator.rd")
(find-rurima "--- dump_typemap(type)" "== Private Instance Methods" "= class WSDL::SOAP::MappingRegistryCreator < Object" "refm/api/src/wsdl/soap/mappingRegistryCreator.rd")
(find-rurima "--- dump_struct_typemap(definedtype)" "== Private Instance Methods" "= class WSDL::SOAP::MappingRegistryCreator < Object" "refm/api/src/wsdl/soap/mappingRegistryCreator.rd")
(find-rurima "--- dump_array_typemap(definedtype)" "== Private Instance Methods" "= class WSDL::SOAP::MappingRegistryCreator < Object" "refm/api/src/wsdl/soap/mappingRegistryCreator.rd")
(find-rurima "= class WSDL::Documentation < WSDL::Info" "refm/api/src/wsdl/documentation.rd")
(find-rurima "== Class Methods" "= class WSDL::Documentation < WSDL::Info" "refm/api/src/wsdl/documentation.rd")
(find-rurima "--- new" "== Class Methods" "= class WSDL::Documentation < WSDL::Info" "refm/api/src/wsdl/documentation.rd")
(find-rurima "== Instance Methods" "= class WSDL::Documentation < WSDL::Info" "refm/api/src/wsdl/documentation.rd")
(find-rurima "--- parse_attr(attr, value)" "== Instance Methods" "= class WSDL::Documentation < WSDL::Info" "refm/api/src/wsdl/documentation.rd")
(find-rurima "--- parse_element(element)" "== Instance Methods" "= class WSDL::Documentation < WSDL::Info" "refm/api/src/wsdl/documentation.rd")
(find-rurima "= class WSDL::Import < WSDL::Info" "refm/api/src/wsdl/import.rd")
(find-rurima "== Class Methods" "= class WSDL::Import < WSDL::Info" "refm/api/src/wsdl/import.rd")
(find-rurima "--- new" "== Class Methods" "= class WSDL::Import < WSDL::Info" "refm/api/src/wsdl/import.rd")
(find-rurima "== Instance Methods" "= class WSDL::Import < WSDL::Info" "refm/api/src/wsdl/import.rd")
(find-rurima "--- content" "== Instance Methods" "= class WSDL::Import < WSDL::Info" "refm/api/src/wsdl/import.rd")
(find-rurima "--- location" "== Instance Methods" "= class WSDL::Import < WSDL::Info" "refm/api/src/wsdl/import.rd")
(find-rurima "--- namespace" "== Instance Methods" "= class WSDL::Import < WSDL::Info" "refm/api/src/wsdl/import.rd")
(find-rurima "--- parse_attr(attr, value)" "== Instance Methods" "= class WSDL::Import < WSDL::Info" "refm/api/src/wsdl/import.rd")
(find-rurima "--- parse_element(element)" "== Instance Methods" "= class WSDL::Import < WSDL::Info" "refm/api/src/wsdl/import.rd")
(find-rurima "= class WSDL::Service < WSDL::Info" "refm/api/src/wsdl/service.rd")
(find-rurima "== Class Methods" "= class WSDL::Service < WSDL::Info" "refm/api/src/wsdl/service.rd")
(find-rurima "--- new" "== Class Methods" "= class WSDL::Service < WSDL::Info" "refm/api/src/wsdl/service.rd")
(find-rurima "== Instance Methods" "= class WSDL::Service < WSDL::Info" "refm/api/src/wsdl/service.rd")
(find-rurima "--- name" "== Instance Methods" "= class WSDL::Service < WSDL::Info" "refm/api/src/wsdl/service.rd")
(find-rurima "--- parse_attr(attr, value)" "== Instance Methods" "= class WSDL::Service < WSDL::Info" "refm/api/src/wsdl/service.rd")
(find-rurima "--- parse_element(element)" "== Instance Methods" "= class WSDL::Service < WSDL::Info" "refm/api/src/wsdl/service.rd")
(find-rurima "--- ports" "== Instance Methods" "= class WSDL::Service < WSDL::Info" "refm/api/src/wsdl/service.rd")
(find-rurima "--- soap_address" "== Instance Methods" "= class WSDL::Service < WSDL::Info" "refm/api/src/wsdl/service.rd")
(find-rurima "--- targetnamespace" "== Instance Methods" "= class WSDL::Service < WSDL::Info" "refm/api/src/wsdl/service.rd")
(find-rurima "= class WSDL::Parser::ParseError < WSDL::Error" "refm/api/src/wsdl/parser.rd")
(find-rurima "= class WSDL::Parser::FormatDecodeError < WSDL::Parser::ParseError" "refm/api/src/wsdl/parser.rd")
(find-rurima "= class WSDL::Parser::UnknownElementError < WSDL::Parser::FormatDecodeError" "refm/api/src/wsdl/parser.rd")
(find-rurima "= class WSDL::Parser::UnknownAttributeError < WSDL::Parser::FormatDecodeError" "refm/api/src/wsdl/parser.rd")
(find-rurima "= class WSDL::Parser::UnexpectedElementError < WSDL::Parser::FormatDecodeError" "refm/api/src/wsdl/parser.rd")
(find-rurima "= class WSDL::Parser::ElementConstraintError < WSDL::Parser::FormatDecodeError" "refm/api/src/wsdl/parser.rd")
(find-rurima "= class WSDL::Parser::AttributeConstraintError < WSDL::Parser::FormatDecodeError" "refm/api/src/wsdl/parser.rd")
(find-rurima "= class WSDL::Parser::ParseFrame < Object" "refm/api/src/wsdl/parser.rd")
(find-rurima "== Class Methods" "= class WSDL::Parser::ParseFrame < Object" "refm/api/src/wsdl/parser.rd")
(find-rurima "--- new(ns, name, node)" "== Class Methods" "= class WSDL::Parser::ParseFrame < Object" "refm/api/src/wsdl/parser.rd")
(find-rurima "== Instance Methods" "= class WSDL::Parser::ParseFrame < Object" "refm/api/src/wsdl/parser.rd")
(find-rurima "--- name" "== Instance Methods" "= class WSDL::Parser::ParseFrame < Object" "refm/api/src/wsdl/parser.rd")
(find-rurima "--- node" "== Instance Methods" "= class WSDL::Parser::ParseFrame < Object" "refm/api/src/wsdl/parser.rd")
(find-rurima "--- node=(node)" "== Instance Methods" "= class WSDL::Parser::ParseFrame < Object" "refm/api/src/wsdl/parser.rd")
(find-rurima "--- ns" "== Instance Methods" "= class WSDL::Parser::ParseFrame < Object" "refm/api/src/wsdl/parser.rd")
(find-rurima "= class WSDL::Parser < Object" "refm/api/src/wsdl/parser.rd")
(find-rurima "== Class Methods" "= class WSDL::Parser < Object" "refm/api/src/wsdl/parser.rd")
(find-rurima "--- new(opt = {} )" "== Class Methods" "= class WSDL::Parser < Object" "refm/api/src/wsdl/parser.rd")
(find-rurima "== Instance Methods" "= class WSDL::Parser < Object" "refm/api/src/wsdl/parser.rd")
(find-rurima "--- characters(text)" "== Instance Methods" "= class WSDL::Parser < Object" "refm/api/src/wsdl/parser.rd")
(find-rurima "--- charset" "== Instance Methods" "= class WSDL::Parser < Object" "refm/api/src/wsdl/parser.rd")
(find-rurima "--- end_element(name)" "== Instance Methods" "= class WSDL::Parser < Object" "refm/api/src/wsdl/parser.rd")
(find-rurima "--- parse(string_or_readable)" "== Instance Methods" "= class WSDL::Parser < Object" "refm/api/src/wsdl/parser.rd")
(find-rurima "--- start_element(name, attrs)" "== Instance Methods" "= class WSDL::Parser < Object" "refm/api/src/wsdl/parser.rd")
(find-rurima "== Private Instance Methods" "= class WSDL::Parser < Object" "refm/api/src/wsdl/parser.rd")
(find-rurima "--- decode_tag(ns, name, attrs, parent)" "== Private Instance Methods" "= class WSDL::Parser < Object" "refm/api/src/wsdl/parser.rd")
(find-rurima "--- decode_tag_end(ns, node)" "== Private Instance Methods" "= class WSDL::Parser < Object" "refm/api/src/wsdl/parser.rd")
(find-rurima "--- decode_text(ns, text)" "== Private Instance Methods" "= class WSDL::Parser < Object" "refm/api/src/wsdl/parser.rd")
(find-rurima "= module WSDL" "refm/api/src/wsdl/wsdl.rd")
(find-rurima "== Constants" "= module WSDL" "refm/api/src/wsdl/wsdl.rd")
(find-rurima "--- Namespace" "== Constants" "= module WSDL" "refm/api/src/wsdl/wsdl.rd")
(find-rurima "--- SOAPBindingNamespace" "== Constants" "= module WSDL" "refm/api/src/wsdl/wsdl.rd")
(find-rurima "--- Version" "== Constants" "= module WSDL" "refm/api/src/wsdl/wsdl.rd")
(find-rurima "= class WSDL::Error < StandardError" "refm/api/src/wsdl/wsdl.rd")
(find-rurima "= class Sync" "refm/api/src/sync/Sync")
(find-rurima "== Class Methods" "= class Sync" "refm/api/src/sync/Sync")
(find-rurima "--- new -> Sync" "== Class Methods" "= class Sync" "refm/api/src/sync/Sync")
(find-rurima "= module Sync_m" "refm/api/src/sync/Sync_m")
(find-rurima "== Constants" "= module Sync_m" "refm/api/src/sync/Sync_m")
(find-rurima "--- UN" "== Constants" "= module Sync_m" "refm/api/src/sync/Sync_m")
(find-rurima "--- EX" "== Constants" "= module Sync_m" "refm/api/src/sync/Sync_m")
(find-rurima "--- SH" "== Constants" "= module Sync_m" "refm/api/src/sync/Sync_m")
(find-rurima "== Instance Methods" "= module Sync_m" "refm/api/src/sync/Sync_m")
(find-rurima "--- sync_mode -> Symbol" "== Instance Methods" "= module Sync_m" "refm/api/src/sync/Sync_m")
(find-rurima "--- sync_locked? -> bool" "== Instance Methods" "= module Sync_m" "refm/api/src/sync/Sync_m")
(find-rurima "--- locked? -> bool" "== Instance Methods" "= module Sync_m" "refm/api/src/sync/Sync_m")
(find-rurima "--- sync_shared? -> bool" "== Instance Methods" "= module Sync_m" "refm/api/src/sync/Sync_m")
(find-rurima "--- shared? -> bool" "== Instance Methods" "= module Sync_m" "refm/api/src/sync/Sync_m")
(find-rurima "--- sync_exclusive? -> bool" "== Instance Methods" "= module Sync_m" "refm/api/src/sync/Sync_m")
(find-rurima "--- exclusive? -> bool" "== Instance Methods" "= module Sync_m" "refm/api/src/sync/Sync_m")
(find-rurima "--- sync_try_lock(mode = EX) -> bool" "== Instance Methods" "= module Sync_m" "refm/api/src/sync/Sync_m")
(find-rurima "--- try_lock(mode = EX) -> bool" "== Instance Methods" "= module Sync_m" "refm/api/src/sync/Sync_m")
(find-rurima "--- sync_lock(mode = EX) -> self" "== Instance Methods" "= module Sync_m" "refm/api/src/sync/Sync_m")
(find-rurima "--- lock(mode = EX) -> self" "== Instance Methods" "= module Sync_m" "refm/api/src/sync/Sync_m")
(find-rurima "--- sync_unlock(mode = EX) -> self" "== Instance Methods" "= module Sync_m" "refm/api/src/sync/Sync_m")
(find-rurima "--- unlock(mode = EX) -> self" "== Instance Methods" "= module Sync_m" "refm/api/src/sync/Sync_m")
(find-rurima "--- sync_synchronize(mode = EX) {...} -> object" "== Instance Methods" "= module Sync_m" "refm/api/src/sync/Sync_m")
(find-rurima "--- synchronize(mode = EX) {...} -> object" "== Instance Methods" "= module Sync_m" "refm/api/src/sync/Sync_m")
(find-rurima "--- sync_waiting -> [Thread]" "== Instance Methods" "= module Sync_m" "refm/api/src/sync/Sync_m")
(find-rurima "--- sync_waiting=(arr)" "== Instance Methods" "= module Sync_m" "refm/api/src/sync/Sync_m")
(find-rurima "--- sync_upgrade_waiting -> [Thread]" "== Instance Methods" "= module Sync_m" "refm/api/src/sync/Sync_m")
(find-rurima "--- sync_upgrade_waiting=(arr)" "== Instance Methods" "= module Sync_m" "refm/api/src/sync/Sync_m")
(find-rurima "--- sync_sh_locker -> Hash" "== Instance Methods" "= module Sync_m" "refm/api/src/sync/Sync_m")
(find-rurima "--- sync_sh_locker=(hash)" "== Instance Methods" "= module Sync_m" "refm/api/src/sync/Sync_m")
(find-rurima "--- sync_ex_locker -> Thread | nil" "== Instance Methods" "= module Sync_m" "refm/api/src/sync/Sync_m")
(find-rurima "--- sync_ex_locker=(thread)" "== Instance Methods" "= module Sync_m" "refm/api/src/sync/Sync_m")
(find-rurima "--- sync_ex_count -> Integer" "== Instance Methods" "= module Sync_m" "refm/api/src/sync/Sync_m")
(find-rurima "--- sync_ex_count=(count)" "== Instance Methods" "= module Sync_m" "refm/api/src/sync/Sync_m")
(find-rurima "--- sync_extended" "== Instance Methods" "= module Sync_m" "refm/api/src/sync/Sync_m")
(find-rurima "--- sync_extend" "== Instance Methods" "= module Sync_m" "refm/api/src/sync/Sync_m")
(find-rurima "--- sync_inspect" "== Instance Methods" "= module Sync_m" "refm/api/src/sync/Sync_m")
(find-rurima "= class Sync_m::Err < StandardError" "refm/api/src/sync/Sync_m")
(find-rurima "== Singleton Methods" "= class Sync_m::Err < StandardError" "refm/api/src/sync/Sync_m")
(find-rurima "--- Fail(*options) -> ()" "== Singleton Methods" "= class Sync_m::Err < StandardError" "refm/api/src/sync/Sync_m")
(find-rurima "= class Sync_m::UnknownLocker < Sync_m::Err" "refm/api/src/sync/Sync_m")
(find-rurima "== Singleton Methods" "= class Sync_m::UnknownLocker < Sync_m::Err" "refm/api/src/sync/Sync_m")
(find-rurima "--- Fail(*options) -> ()" "== Singleton Methods" "= class Sync_m::UnknownLocker < Sync_m::Err" "refm/api/src/sync/Sync_m")
(find-rurima "= class Sync_m::LockModeFailer < Sync_m::Err" "refm/api/src/sync/Sync_m")
(find-rurima "== Singleton Methods" "= class Sync_m::LockModeFailer < Sync_m::Err" "refm/api/src/sync/Sync_m")
(find-rurima "--- Fail(*options) -> ()" "== Singleton Methods" "= class Sync_m::LockModeFailer < Sync_m::Err" "refm/api/src/sync/Sync_m")
(find-rurima "=== 例" "refm/api/src/prime.rd")
(find-rurima "=== 生成器" "refm/api/src/prime.rd")
(find-rurima "= class Prime < Object" "refm/api/src/prime.rd")
(find-rurima "=== インスタンスを取得する方法" "= class Prime < Object" "refm/api/src/prime.rd")
(find-rurima "== Class Methods" "= class Prime < Object" "refm/api/src/prime.rd")
(find-rurima "--- new -> Prime" "== Class Methods" "= class Prime < Object" "refm/api/src/prime.rd")
(find-rurima "--- instance -> Prime" "== Class Methods" "= class Prime < Object" "refm/api/src/prime.rd")
(find-rurima "== Instance Methods" "= class Prime < Object" "refm/api/src/prime.rd")
(find-rurima "--- each(upper_bound = nil, generator = EratosthenesGenerator.new){|prime| ... } -> object" "== Instance Methods" "= class Prime < Object" "refm/api/src/prime.rd")
(find-rurima "--- each(upper_bound = nil, generator = EratosthenesGenerator.new)               -> Enumerator" "== Instance Methods" "= class Prime < Object" "refm/api/src/prime.rd")
(find-rurima "=== 例:" "== Instance Methods" "= class Prime < Object" "refm/api/src/prime.rd")
(find-rurima "=== 例: 30以下の双子素数" "== Instance Methods" "= class Prime < Object" "refm/api/src/prime.rd")
(find-rurima "=== 注" "== Instance Methods" "= class Prime < Object" "refm/api/src/prime.rd")
(find-rurima "--- int_from_prime_division(pd) -> Integer" "=== 注" "== Instance Methods" "= class Prime < Object" "refm/api/src/prime.rd")
(find-rurima "--- prime?(value, generator = Prime::Generator23.new) -> bool" "=== 注" "== Instance Methods" "= class Prime < Object" "refm/api/src/prime.rd")
(find-rurima "--- prime_division(value, generator= Prime::Generator23.new) -> [[Integer, Integer]]" "=== 注" "== Instance Methods" "= class Prime < Object" "refm/api/src/prime.rd")
(find-rurima "= class Prime::PseudoPrimeGenerator < Object" "refm/api/src/prime.rd")
(find-rurima "== Class Methods" "= class Prime::PseudoPrimeGenerator < Object" "refm/api/src/prime.rd")
(find-rurima "--- new(upper_bound = nil)" "== Class Methods" "= class Prime::PseudoPrimeGenerator < Object" "refm/api/src/prime.rd")
(find-rurima "== Instance Methods" "= class Prime::PseudoPrimeGenerator < Object" "refm/api/src/prime.rd")
(find-rurima "--- each {|prime| ... } -> object" "== Instance Methods" "= class Prime::PseudoPrimeGenerator < Object" "refm/api/src/prime.rd")
(find-rurima "--- each -> self" "== Instance Methods" "= class Prime::PseudoPrimeGenerator < Object" "refm/api/src/prime.rd")
(find-rurima "--- next -> ()" "== Instance Methods" "= class Prime::PseudoPrimeGenerator < Object" "refm/api/src/prime.rd")
(find-rurima "--- succ -> ()" "== Instance Methods" "= class Prime::PseudoPrimeGenerator < Object" "refm/api/src/prime.rd")
(find-rurima "--- rewind -> ()" "== Instance Methods" "= class Prime::PseudoPrimeGenerator < Object" "refm/api/src/prime.rd")
(find-rurima "--- upper_bound -> Integer | nil" "== Instance Methods" "= class Prime::PseudoPrimeGenerator < Object" "refm/api/src/prime.rd")
(find-rurima "--- upper_bound=(upper_bound)" "== Instance Methods" "= class Prime::PseudoPrimeGenerator < Object" "refm/api/src/prime.rd")
(find-rurima "--- with_index{|prime, index| ... }      -> self" "== Instance Methods" "= class Prime::PseudoPrimeGenerator < Object" "refm/api/src/prime.rd")
(find-rurima "--- each_with_index{|prime, index| ... } -> self" "== Instance Methods" "= class Prime::PseudoPrimeGenerator < Object" "refm/api/src/prime.rd")
(find-rurima "--- with_index      -> Enumerator" "== Instance Methods" "= class Prime::PseudoPrimeGenerator < Object" "refm/api/src/prime.rd")
(find-rurima "--- each_with_index -> Enumerator" "== Instance Methods" "= class Prime::PseudoPrimeGenerator < Object" "refm/api/src/prime.rd")
(find-rurima "--- with_object(obj){|prime, obj| ... } -> object" "== Instance Methods" "= class Prime::PseudoPrimeGenerator < Object" "refm/api/src/prime.rd")
(find-rurima "--- with_object(obj) -> Enumerator" "== Instance Methods" "= class Prime::PseudoPrimeGenerator < Object" "refm/api/src/prime.rd")
(find-rurima "= class Prime::EratosthenesGenerator < Prime::PseudoPrimeGenerator" "refm/api/src/prime.rd")
(find-rurima "== Instance Methods" "= class Prime::EratosthenesGenerator < Prime::PseudoPrimeGenerator" "refm/api/src/prime.rd")
(find-rurima "--- next -> Integer" "== Instance Methods" "= class Prime::EratosthenesGenerator < Prime::PseudoPrimeGenerator" "refm/api/src/prime.rd")
(find-rurima "--- succ -> Integer" "== Instance Methods" "= class Prime::EratosthenesGenerator < Prime::PseudoPrimeGenerator" "refm/api/src/prime.rd")
(find-rurima "--- rewind -> nil" "== Instance Methods" "= class Prime::EratosthenesGenerator < Prime::PseudoPrimeGenerator" "refm/api/src/prime.rd")
(find-rurima "= class Prime::TrialDivisionGenerator < Prime::PseudoPrimeGenerator" "refm/api/src/prime.rd")
(find-rurima "== Instance Methods" "= class Prime::TrialDivisionGenerator < Prime::PseudoPrimeGenerator" "refm/api/src/prime.rd")
(find-rurima "--- next -> Integer" "== Instance Methods" "= class Prime::TrialDivisionGenerator < Prime::PseudoPrimeGenerator" "refm/api/src/prime.rd")
(find-rurima "--- succ -> Integer" "== Instance Methods" "= class Prime::TrialDivisionGenerator < Prime::PseudoPrimeGenerator" "refm/api/src/prime.rd")
(find-rurima "--- rewind -> nil" "== Instance Methods" "= class Prime::TrialDivisionGenerator < Prime::PseudoPrimeGenerator" "refm/api/src/prime.rd")
(find-rurima "= class Prime::Generator23 < Prime::PseudoPrimeGenerator" "refm/api/src/prime.rd")
(find-rurima "== Instance Methods" "= class Prime::Generator23 < Prime::PseudoPrimeGenerator" "refm/api/src/prime.rd")
(find-rurima "--- next -> Integer" "== Instance Methods" "= class Prime::Generator23 < Prime::PseudoPrimeGenerator" "refm/api/src/prime.rd")
(find-rurima "--- succ -> Integer" "== Instance Methods" "= class Prime::Generator23 < Prime::PseudoPrimeGenerator" "refm/api/src/prime.rd")
(find-rurima "--- rewind -> nil" "== Instance Methods" "= class Prime::Generator23 < Prime::PseudoPrimeGenerator" "refm/api/src/prime.rd")
(find-rurima "= module Prime::OldCompatibility" "refm/api/src/prime.rd")
(find-rurima "== Instance Methods" "= module Prime::OldCompatibility" "refm/api/src/prime.rd")
(find-rurima "--- next -> Integer" "== Instance Methods" "= module Prime::OldCompatibility" "refm/api/src/prime.rd")
(find-rurima "--- succ -> Integer" "== Instance Methods" "= module Prime::OldCompatibility" "refm/api/src/prime.rd")
(find-rurima "--- each{|prime| ... } -> object" "== Instance Methods" "= module Prime::OldCompatibility" "refm/api/src/prime.rd")
(find-rurima "--- each               -> object" "== Instance Methods" "= module Prime::OldCompatibility" "refm/api/src/prime.rd")
(find-rurima "= reopen Integer" "refm/api/src/prime.rd")
(find-rurima "== Class Methods" "= reopen Integer" "refm/api/src/prime.rd")
(find-rurima "--- from_prime_division(pd) -> Integer" "== Class Methods" "= reopen Integer" "refm/api/src/prime.rd")
(find-rurima "--- each_prime(upper_bound){|prime| ... } -> object" "== Class Methods" "= reopen Integer" "refm/api/src/prime.rd")
(find-rurima "--- each_prime(upper_bound) -> Enumerator" "== Class Methods" "= reopen Integer" "refm/api/src/prime.rd")
(find-rurima "== Instance Methods" "= reopen Integer" "refm/api/src/prime.rd")
(find-rurima "--- prime_division(generator = Prime::Generator23.new) -> [[Integer, Integer]]" "== Instance Methods" "= reopen Integer" "refm/api/src/prime.rd")
(find-rurima "--- prime? -> bool" "== Instance Methods" "= reopen Integer" "refm/api/src/prime.rd")
(find-rurima "=== 参考" "refm/api/src/tempfile.rd")
(find-rurima "= class Tempfile < File" "refm/api/src/tempfile.rd")
(find-rurima "== Class Methods" "= class Tempfile < File" "refm/api/src/tempfile.rd")
(find-rurima "--- new(basename, tempdir = Dir::tmpdir) -> Tempfile" "== Class Methods" "= class Tempfile < File" "refm/api/src/tempfile.rd")
(find-rurima "--- open(basename, tempdir = Dir::tmpdir) -> Tempfile" "== Class Methods" "= class Tempfile < File" "refm/api/src/tempfile.rd")
(find-rurima "--- open(basename, tempdir = Dir::tmpdir){|fp| ...} -> object" "== Class Methods" "= class Tempfile < File" "refm/api/src/tempfile.rd")
(find-rurima "--- open(basename, tempdir = Dir::tmpdir){|fp| ...} -> nil" "== Class Methods" "= class Tempfile < File" "refm/api/src/tempfile.rd")
(find-rurima "== Instance Methods" "= class Tempfile < File" "refm/api/src/tempfile.rd")
(find-rurima "--- close(real = false) -> nil" "== Instance Methods" "= class Tempfile < File" "refm/api/src/tempfile.rd")
(find-rurima "--- open -> self" "== Instance Methods" "= class Tempfile < File" "refm/api/src/tempfile.rd")
(find-rurima "--- path -> String | nil" "== Instance Methods" "= class Tempfile < File" "refm/api/src/tempfile.rd")
(find-rurima "--- path -> String" "== Instance Methods" "= class Tempfile < File" "refm/api/src/tempfile.rd")
(find-rurima "--- length -> Integer" "== Instance Methods" "= class Tempfile < File" "refm/api/src/tempfile.rd")
(find-rurima "--- size -> Integer" "== Instance Methods" "= class Tempfile < File" "refm/api/src/tempfile.rd")
(find-rurima "--- close! -> nil" "== Instance Methods" "= class Tempfile < File" "refm/api/src/tempfile.rd")
(find-rurima "--- close! -> self" "== Instance Methods" "= class Tempfile < File" "refm/api/src/tempfile.rd")
(find-rurima "--- delete -> self" "== Instance Methods" "= class Tempfile < File" "refm/api/src/tempfile.rd")
(find-rurima "--- unlink -> self" "== Instance Methods" "= class Tempfile < File" "refm/api/src/tempfile.rd")
(find-rurima "--- AF_APPLETALK" "refm/api/src/socket/constants")
(find-rurima "--- AF_ATM" "refm/api/src/socket/constants")
(find-rurima "--- AF_AX25" "refm/api/src/socket/constants")
(find-rurima "--- AF_CCITT" "refm/api/src/socket/constants")
(find-rurima "--- AF_CHAOS" "refm/api/src/socket/constants")
(find-rurima "--- AF_CNT" "refm/api/src/socket/constants")
(find-rurima "--- AF_COIP" "refm/api/src/socket/constants")
(find-rurima "--- AF_DATAKIT" "refm/api/src/socket/constants")
(find-rurima "--- AF_DEC" "refm/api/src/socket/constants")
(find-rurima "--- AF_DLI" "refm/api/src/socket/constants")
(find-rurima "--- AF_E164" "refm/api/src/socket/constants")
(find-rurima "--- AF_ECMA" "refm/api/src/socket/constants")
(find-rurima "--- AF_HYLINK" "refm/api/src/socket/constants")
(find-rurima "--- AF_IMPLINK" "refm/api/src/socket/constants")
(find-rurima "--- AF_INET" "refm/api/src/socket/constants")
(find-rurima "--- AF_INET6" "refm/api/src/socket/constants")
(find-rurima "--- AF_IPX" "refm/api/src/socket/constants")
(find-rurima "--- AF_ISDN" "refm/api/src/socket/constants")
(find-rurima "--- AF_ISO" "refm/api/src/socket/constants")
(find-rurima "--- AF_LAT" "refm/api/src/socket/constants")
(find-rurima "--- AF_LINK" "refm/api/src/socket/constants")
(find-rurima "--- AF_LOCAL" "refm/api/src/socket/constants")
(find-rurima "--- AF_MAX" "refm/api/src/socket/constants")
(find-rurima "--- AF_NATM" "refm/api/src/socket/constants")
(find-rurima "--- AF_NDRV" "refm/api/src/socket/constants")
(find-rurima "--- AF_NETBIOS" "refm/api/src/socket/constants")
(find-rurima "--- AF_NETGRAPH" "refm/api/src/socket/constants")
(find-rurima "--- AF_NS" "refm/api/src/socket/constants")
(find-rurima "--- AF_OSI" "refm/api/src/socket/constants")
(find-rurima "--- AF_PPP" "refm/api/src/socket/constants")
(find-rurima "--- AF_PUP" "refm/api/src/socket/constants")
(find-rurima "--- AF_ROUTE" "refm/api/src/socket/constants")
(find-rurima "--- AF_SIP" "refm/api/src/socket/constants")
(find-rurima "--- AF_SNA" "refm/api/src/socket/constants")
(find-rurima "--- AF_SYSTEM" "refm/api/src/socket/constants")
(find-rurima "--- AF_UNIX" "refm/api/src/socket/constants")
(find-rurima "--- AF_UNSPEC" "refm/api/src/socket/constants")
(find-rurima "--- SOCK_DGRAM" "refm/api/src/socket/constants")
(find-rurima "--- SOCK_PACKET" "refm/api/src/socket/constants")
(find-rurima "--- SOCK_RAW" "refm/api/src/socket/constants")
(find-rurima "--- SOCK_RDM" "refm/api/src/socket/constants")
(find-rurima "--- SOCK_SEQPACKET" "refm/api/src/socket/constants")
(find-rurima "--- SOCK_STREAM" "refm/api/src/socket/constants")
(find-rurima "--- PF_APPLETALK" "refm/api/src/socket/constants")
(find-rurima "--- PF_ATM" "refm/api/src/socket/constants")
(find-rurima "--- PF_AX25" "refm/api/src/socket/constants")
(find-rurima "--- PF_CCITT" "refm/api/src/socket/constants")
(find-rurima "--- PF_CHAOS" "refm/api/src/socket/constants")
(find-rurima "--- PF_CNT" "refm/api/src/socket/constants")
(find-rurima "--- PF_COIP" "refm/api/src/socket/constants")
(find-rurima "--- PF_DATAKIT" "refm/api/src/socket/constants")
(find-rurima "--- PF_DEC" "refm/api/src/socket/constants")
(find-rurima "--- PF_DLI" "refm/api/src/socket/constants")
(find-rurima "--- PF_ECMA" "refm/api/src/socket/constants")
(find-rurima "--- PF_HYLINK" "refm/api/src/socket/constants")
(find-rurima "--- PF_IMPLINK" "refm/api/src/socket/constants")
(find-rurima "--- PF_INET" "refm/api/src/socket/constants")
(find-rurima "--- PF_INET6" "refm/api/src/socket/constants")
(find-rurima "--- PF_IPX" "refm/api/src/socket/constants")
(find-rurima "--- PF_ISDN" "refm/api/src/socket/constants")
(find-rurima "--- PF_ISO" "refm/api/src/socket/constants")
(find-rurima "--- PF_KEY" "refm/api/src/socket/constants")
(find-rurima "--- PF_LAT" "refm/api/src/socket/constants")
(find-rurima "--- PF_LINK" "refm/api/src/socket/constants")
(find-rurima "--- PF_LOCAL" "refm/api/src/socket/constants")
(find-rurima "--- PF_MAX" "refm/api/src/socket/constants")
(find-rurima "--- PF_NATM" "refm/api/src/socket/constants")
(find-rurima "--- PF_NDRV" "refm/api/src/socket/constants")
(find-rurima "--- PF_NETBIOS" "refm/api/src/socket/constants")
(find-rurima "--- PF_NETGRAPH" "refm/api/src/socket/constants")
(find-rurima "--- PF_NS" "refm/api/src/socket/constants")
(find-rurima "--- PF_OSI" "refm/api/src/socket/constants")
(find-rurima "--- PF_PIP" "refm/api/src/socket/constants")
(find-rurima "--- PF_PPP" "refm/api/src/socket/constants")
(find-rurima "--- PF_PUP" "refm/api/src/socket/constants")
(find-rurima "--- PF_ROUTE" "refm/api/src/socket/constants")
(find-rurima "--- PF_RTIP" "refm/api/src/socket/constants")
(find-rurima "--- PF_SIP" "refm/api/src/socket/constants")
(find-rurima "--- PF_SNA" "refm/api/src/socket/constants")
(find-rurima "--- PF_SYSTEM" "refm/api/src/socket/constants")
(find-rurima "--- PF_UNIX" "refm/api/src/socket/constants")
(find-rurima "--- PF_UNSPEC" "refm/api/src/socket/constants")
(find-rurima "--- PF_XTP" "refm/api/src/socket/constants")
(find-rurima "--- IPPORT_RESERVED" "refm/api/src/socket/constants")
(find-rurima "--- IPPORT_USERRESERVED" "refm/api/src/socket/constants")
(find-rurima "--- IPPROTO_BIP" "refm/api/src/socket/constants")
(find-rurima "--- IPPROTO_EGP" "refm/api/src/socket/constants")
(find-rurima "--- IPPROTO_EON" "refm/api/src/socket/constants")
(find-rurima "--- IPPROTO_GGP" "refm/api/src/socket/constants")
(find-rurima "--- IPPROTO_HELLO" "refm/api/src/socket/constants")
(find-rurima "--- IPPROTO_ICMP" "refm/api/src/socket/constants")
(find-rurima "--- IPPROTO_IDP" "refm/api/src/socket/constants")
(find-rurima "--- IPPROTO_IGMP" "refm/api/src/socket/constants")
(find-rurima "--- IPPROTO_IP" "refm/api/src/socket/constants")
(find-rurima "--- IPPROTO_MAX" "refm/api/src/socket/constants")
(find-rurima "--- IPPROTO_ND" "refm/api/src/socket/constants")
(find-rurima "--- IPPROTO_PUP" "refm/api/src/socket/constants")
(find-rurima "--- IPPROTO_RAW" "refm/api/src/socket/constants")
(find-rurima "--- IPPROTO_TCP" "refm/api/src/socket/constants")
(find-rurima "--- IPPROTO_TP" "refm/api/src/socket/constants")
(find-rurima "--- IPPROTO_UDP" "refm/api/src/socket/constants")
(find-rurima "--- IPPROTO_XTP" "refm/api/src/socket/constants")
(find-rurima "--- AI_ADDRCONFIG" "refm/api/src/socket/constants")
(find-rurima "--- AI_ALL" "refm/api/src/socket/constants")
(find-rurima "--- AI_CANONNAME" "refm/api/src/socket/constants")
(find-rurima "--- AI_DEFAULT" "refm/api/src/socket/constants")
(find-rurima "--- AI_MASK" "refm/api/src/socket/constants")
(find-rurima "--- AI_NUMERICHOST" "refm/api/src/socket/constants")
(find-rurima "--- AI_PASSIVE" "refm/api/src/socket/constants")
(find-rurima "--- AI_V4MAPPED" "refm/api/src/socket/constants")
(find-rurima "--- AI_V4MAPPED_CFG" "refm/api/src/socket/constants")
(find-rurima "--- EAI_ADDRFAMILY" "refm/api/src/socket/constants")
(find-rurima "--- EAI_AGAIN" "refm/api/src/socket/constants")
(find-rurima "--- EAI_BADFLAGS" "refm/api/src/socket/constants")
(find-rurima "--- EAI_BADHINTS" "refm/api/src/socket/constants")
(find-rurima "--- EAI_FAIL" "refm/api/src/socket/constants")
(find-rurima "--- EAI_FAMILY" "refm/api/src/socket/constants")
(find-rurima "--- EAI_MAX" "refm/api/src/socket/constants")
(find-rurima "--- EAI_MEMORY" "refm/api/src/socket/constants")
(find-rurima "--- EAI_NODATA" "refm/api/src/socket/constants")
(find-rurima "--- EAI_NONAME" "refm/api/src/socket/constants")
(find-rurima "--- EAI_PROTOCOL" "refm/api/src/socket/constants")
(find-rurima "--- EAI_SERVICE" "refm/api/src/socket/constants")
(find-rurima "--- EAI_SOCKTYPE" "refm/api/src/socket/constants")
(find-rurima "--- EAI_SYSTEM" "refm/api/src/socket/constants")
(find-rurima "--- INADDR_ALLHOSTS_GROUP" "refm/api/src/socket/constants")
(find-rurima "--- INADDR_ANY" "refm/api/src/socket/constants")
(find-rurima "--- INADDR_BROADCAST" "refm/api/src/socket/constants")
(find-rurima "--- INADDR_LOOPBACK" "refm/api/src/socket/constants")
(find-rurima "--- INADDR_MAX_LOCAL_GROUP" "refm/api/src/socket/constants")
(find-rurima "--- INADDR_NONE" "refm/api/src/socket/constants")
(find-rurima "--- INADDR_UNSPEC_GROUP" "refm/api/src/socket/constants")
(find-rurima "--- NI_DGRAM" "refm/api/src/socket/constants")
(find-rurima "--- NI_MAXHOST" "refm/api/src/socket/constants")
(find-rurima "--- NI_MAXSERV" "refm/api/src/socket/constants")
(find-rurima "--- NI_NAMEREQD" "refm/api/src/socket/constants")
(find-rurima "--- NI_NOFQDN" "refm/api/src/socket/constants")
(find-rurima "--- NI_NUMERICHOST" "refm/api/src/socket/constants")
(find-rurima "--- NI_NUMERICSERV" "refm/api/src/socket/constants")
(find-rurima "--- IP_ADD_MEMBERSHIP" "refm/api/src/socket/constants")
(find-rurima "--- IP_DEFAULT_MULTICAST_LOOP" "refm/api/src/socket/constants")
(find-rurima "--- IP_DEFAULT_MULTICAST_TTL" "refm/api/src/socket/constants")
(find-rurima "--- IP_DROP_MEMBERSHIP" "refm/api/src/socket/constants")
(find-rurima "--- IP_HDRINCL" "refm/api/src/socket/constants")
(find-rurima "--- IP_MAX_MEMBERSHIPS" "refm/api/src/socket/constants")
(find-rurima "--- IP_MULTICAST_IF" "refm/api/src/socket/constants")
(find-rurima "--- IP_MULTICAST_LOOP" "refm/api/src/socket/constants")
(find-rurima "--- IP_MULTICAST_TTL" "refm/api/src/socket/constants")
(find-rurima "--- IP_OPTIONS" "refm/api/src/socket/constants")
(find-rurima "--- IP_RECVDSTADDR" "refm/api/src/socket/constants")
(find-rurima "--- IP_RECVOPTS" "refm/api/src/socket/constants")
(find-rurima "--- IP_RECVRETOPTS" "refm/api/src/socket/constants")
(find-rurima "--- IP_RETOPTS" "refm/api/src/socket/constants")
(find-rurima "--- IP_TOS" "refm/api/src/socket/constants")
(find-rurima "--- IP_TTL" "refm/api/src/socket/constants")
(find-rurima "--- MSG_COMPAT" "refm/api/src/socket/constants")
(find-rurima "--- MSG_CTRUNC" "refm/api/src/socket/constants")
(find-rurima "--- MSG_DONTROUTE" "refm/api/src/socket/constants")
(find-rurima "--- MSG_DONTWAIT" "refm/api/src/socket/constants")
(find-rurima "--- MSG_EOF" "refm/api/src/socket/constants")
(find-rurima "--- MSG_EOR" "refm/api/src/socket/constants")
(find-rurima "--- MSG_FLUSH" "refm/api/src/socket/constants")
(find-rurima "--- MSG_HAVEMORE" "refm/api/src/socket/constants")
(find-rurima "--- MSG_HOLD" "refm/api/src/socket/constants")
(find-rurima "--- MSG_OOB" "refm/api/src/socket/constants")
(find-rurima "--- MSG_PEEK" "refm/api/src/socket/constants")
(find-rurima "--- MSG_RCVMORE" "refm/api/src/socket/constants")
(find-rurima "--- MSG_SEND" "refm/api/src/socket/constants")
(find-rurima "--- MSG_TRUNC" "refm/api/src/socket/constants")
(find-rurima "--- MSG_WAITALL" "refm/api/src/socket/constants")
(find-rurima "--- SHUT_RD" "refm/api/src/socket/constants")
(find-rurima "--- SHUT_RDWR" "refm/api/src/socket/constants")
(find-rurima "--- SHUT_WR" "refm/api/src/socket/constants")
(find-rurima "--- SO_ACCEPTCONN" "refm/api/src/socket/constants")
(find-rurima "--- SO_ACCEPTFILTER" "refm/api/src/socket/constants")
(find-rurima "--- SO_ATTACH_FILTER" "refm/api/src/socket/constants")
(find-rurima "--- SO_BINDTODEVICE" "refm/api/src/socket/constants")
(find-rurima "--- SO_BROADCAST" "refm/api/src/socket/constants")
(find-rurima "--- SO_DEBUG" "refm/api/src/socket/constants")
(find-rurima "--- SO_DETACH_FILTER" "refm/api/src/socket/constants")
(find-rurima "--- SO_DONTROUTE" "refm/api/src/socket/constants")
(find-rurima "--- SO_DONTTRUNC" "refm/api/src/socket/constants")
(find-rurima "--- SO_ERROR" "refm/api/src/socket/constants")
(find-rurima "--- SO_KEEPALIVE" "refm/api/src/socket/constants")
(find-rurima "--- SO_LINGER" "refm/api/src/socket/constants")
(find-rurima "--- SO_NKE" "refm/api/src/socket/constants")
(find-rurima "--- SO_NOSIGPIPE" "refm/api/src/socket/constants")
(find-rurima "--- SO_NO_CHECK" "refm/api/src/socket/constants")
(find-rurima "--- SO_NREAD" "refm/api/src/socket/constants")
(find-rurima "--- SO_OOBINLINE" "refm/api/src/socket/constants")
(find-rurima "--- SO_PASSCRED" "refm/api/src/socket/constants")
(find-rurima "--- SO_PEERCRED" "refm/api/src/socket/constants")
(find-rurima "--- SO_PEERNAME" "refm/api/src/socket/constants")
(find-rurima "--- SO_PRIORITY" "refm/api/src/socket/constants")
(find-rurima "--- SO_RCVBUF" "refm/api/src/socket/constants")
(find-rurima "--- SO_RCVLOWAT" "refm/api/src/socket/constants")
(find-rurima "--- SO_RCVTIMEO" "refm/api/src/socket/constants")
(find-rurima "--- SO_REUSEADDR" "refm/api/src/socket/constants")
(find-rurima "--- SO_REUSEPORT" "refm/api/src/socket/constants")
(find-rurima "--- SO_SECURITY_AUTHENTICATION" "refm/api/src/socket/constants")
(find-rurima "--- SO_SECURITY_ENCRYPTION_NETWORK" "refm/api/src/socket/constants")
(find-rurima "--- SO_SECURITY_ENCRYPTION_TRANSPORT" "refm/api/src/socket/constants")
(find-rurima "--- SO_SNDBUF" "refm/api/src/socket/constants")
(find-rurima "--- SO_SNDLOWAT" "refm/api/src/socket/constants")
(find-rurima "--- SO_SNDTIMEO" "refm/api/src/socket/constants")
(find-rurima "--- SO_TIMESTAMP" "refm/api/src/socket/constants")
(find-rurima "--- SO_TYPE" "refm/api/src/socket/constants")
(find-rurima "--- SO_USELOOPBACK" "refm/api/src/socket/constants")
(find-rurima "--- SO_WANTMORE" "refm/api/src/socket/constants")
(find-rurima "--- SO_WANTOOBFLAG" "refm/api/src/socket/constants")
(find-rurima "--- SOL_ATALK" "refm/api/src/socket/constants")
(find-rurima "--- SOL_AX25" "refm/api/src/socket/constants")
(find-rurima "--- SOL_IP" "refm/api/src/socket/constants")
(find-rurima "--- SOL_IPX" "refm/api/src/socket/constants")
(find-rurima "--- SOL_SOCKET" "refm/api/src/socket/constants")
(find-rurima "--- SOL_TCP" "refm/api/src/socket/constants")
(find-rurima "--- SOL_UDP" "refm/api/src/socket/constants")
(find-rurima "--- SOPRI_BACKGROUND" "refm/api/src/socket/constants")
(find-rurima "--- SOPRI_INTERACTIVE" "refm/api/src/socket/constants")
(find-rurima "--- SOPRI_NORMAL" "refm/api/src/socket/constants")
(find-rurima "--- TCP_MAXSEG" "refm/api/src/socket/constants")
(find-rurima "--- TCP_NODELAY" "refm/api/src/socket/constants")
(find-rurima "= class SOCKSSocket < TCPSocket" "refm/api/src/socket/SOCKSSocket")
(find-rurima "== Class Methods" "= class SOCKSSocket < TCPSocket" "refm/api/src/socket/SOCKSSocket")
(find-rurima "--- open(host, service) -> SOCKSSocket" "== Class Methods" "= class SOCKSSocket < TCPSocket" "refm/api/src/socket/SOCKSSocket")
(find-rurima "--- new(host, service) -> SOCKSSocket" "== Class Methods" "= class SOCKSSocket < TCPSocket" "refm/api/src/socket/SOCKSSocket")
(find-rurima "== Instance Methods" "= class SOCKSSocket < TCPSocket" "refm/api/src/socket/SOCKSSocket")
(find-rurima "--- close -> nil" "== Instance Methods" "= class SOCKSSocket < TCPSocket" "refm/api/src/socket/SOCKSSocket")
(find-rurima "= class Addrinfo" "refm/api/src/socket/Addrinfo")
(find-rurima "== Class methods" "= class Addrinfo" "refm/api/src/socket/Addrinfo")
(find-rurima "--- new" "== Class methods" "= class Addrinfo" "refm/api/src/socket/Addrinfo")
(find-rurima "--- ip" "== Class methods" "= class Addrinfo" "refm/api/src/socket/Addrinfo")
(find-rurima "--- tcp" "== Class methods" "= class Addrinfo" "refm/api/src/socket/Addrinfo")
(find-rurima "--- udp" "== Class methods" "= class Addrinfo" "refm/api/src/socket/Addrinfo")
(find-rurima "--- unix" "== Class methods" "= class Addrinfo" "refm/api/src/socket/Addrinfo")
(find-rurima "--- foreach" "== Class methods" "= class Addrinfo" "refm/api/src/socket/Addrinfo")
(find-rurima "--- getaddrinfo" "== Class methods" "= class Addrinfo" "refm/api/src/socket/Addrinfo")
(find-rurima "== Instance methods" "= class Addrinfo" "refm/api/src/socket/Addrinfo")
(find-rurima "--- afamily" "== Instance methods" "= class Addrinfo" "refm/api/src/socket/Addrinfo")
(find-rurima "--- pfamily" "== Instance methods" "= class Addrinfo" "refm/api/src/socket/Addrinfo")
(find-rurima "--- socktype" "== Instance methods" "= class Addrinfo" "refm/api/src/socket/Addrinfo")
(find-rurima "--- protocol" "== Instance methods" "= class Addrinfo" "refm/api/src/socket/Addrinfo")
(find-rurima "--- canonname" "== Instance methods" "= class Addrinfo" "refm/api/src/socket/Addrinfo")
(find-rurima "--- ipv4?" "== Instance methods" "= class Addrinfo" "refm/api/src/socket/Addrinfo")
(find-rurima "--- ipv6?" "== Instance methods" "= class Addrinfo" "refm/api/src/socket/Addrinfo")
(find-rurima "--- unix?" "== Instance methods" "= class Addrinfo" "refm/api/src/socket/Addrinfo")
(find-rurima "--- ip?" "== Instance methods" "= class Addrinfo" "refm/api/src/socket/Addrinfo")
(find-rurima "--- ip_unpack" "== Instance methods" "= class Addrinfo" "refm/api/src/socket/Addrinfo")
(find-rurima "--- ip_address" "== Instance methods" "= class Addrinfo" "refm/api/src/socket/Addrinfo")
(find-rurima "--- ip_port" "== Instance methods" "= class Addrinfo" "refm/api/src/socket/Addrinfo")
(find-rurima "--- ipv4_private?" "== Instance methods" "= class Addrinfo" "refm/api/src/socket/Addrinfo")
(find-rurima "--- ipv4_loopback?" "== Instance methods" "= class Addrinfo" "refm/api/src/socket/Addrinfo")
(find-rurima "--- ipv4_multicast?" "== Instance methods" "= class Addrinfo" "refm/api/src/socket/Addrinfo")
(find-rurima "--- ipv6_unspecified?" "== Instance methods" "= class Addrinfo" "refm/api/src/socket/Addrinfo")
(find-rurima "--- ipv6_multicast?" "== Instance methods" "= class Addrinfo" "refm/api/src/socket/Addrinfo")
(find-rurima "--- ipv6_linklocal?" "== Instance methods" "= class Addrinfo" "refm/api/src/socket/Addrinfo")
(find-rurima "--- ipv6_sitelocal?" "== Instance methods" "= class Addrinfo" "refm/api/src/socket/Addrinfo")
(find-rurima "--- ipv6_v4mapped?" "== Instance methods" "= class Addrinfo" "refm/api/src/socket/Addrinfo")
(find-rurima "--- ipv6_v4compat?" "== Instance methods" "= class Addrinfo" "refm/api/src/socket/Addrinfo")
(find-rurima "--- ipv6_loopback?" "== Instance methods" "= class Addrinfo" "refm/api/src/socket/Addrinfo")
(find-rurima "--- ipv6_mc_nodelocal?" "== Instance methods" "= class Addrinfo" "refm/api/src/socket/Addrinfo")
(find-rurima "--- ipv6_mc_linklocal?" "== Instance methods" "= class Addrinfo" "refm/api/src/socket/Addrinfo")
(find-rurima "--- ipv6_mc_sitelocal?" "== Instance methods" "= class Addrinfo" "refm/api/src/socket/Addrinfo")
(find-rurima "--- ipv6_mc_orglocal?" "== Instance methods" "= class Addrinfo" "refm/api/src/socket/Addrinfo")
(find-rurima "--- ipv6_mc_global?" "== Instance methods" "= class Addrinfo" "refm/api/src/socket/Addrinfo")
(find-rurima "--- ipv6_to_ipv4" "== Instance methods" "= class Addrinfo" "refm/api/src/socket/Addrinfo")
(find-rurima "--- unix_path" "== Instance methods" "= class Addrinfo" "refm/api/src/socket/Addrinfo")
(find-rurima "--- to_sockaddr" "== Instance methods" "= class Addrinfo" "refm/api/src/socket/Addrinfo")
(find-rurima "--- getnameinfo" "== Instance methods" "= class Addrinfo" "refm/api/src/socket/Addrinfo")
(find-rurima "--- family_addrinfo" "== Instance methods" "= class Addrinfo" "refm/api/src/socket/Addrinfo")
(find-rurima "--- connect_from" "== Instance methods" "= class Addrinfo" "refm/api/src/socket/Addrinfo")
(find-rurima "--- connect" "== Instance methods" "= class Addrinfo" "refm/api/src/socket/Addrinfo")
(find-rurima "--- connect_to" "== Instance methods" "= class Addrinfo" "refm/api/src/socket/Addrinfo")
(find-rurima "--- bind" "== Instance methods" "= class Addrinfo" "refm/api/src/socket/Addrinfo")
(find-rurima "--- listen(backlog=5)" "== Instance methods" "= class Addrinfo" "refm/api/src/socket/Addrinfo")
(find-rurima "--- inspect_sockaddr" "== Instance methods" "= class Addrinfo" "refm/api/src/socket/Addrinfo")
(find-rurima "= class UNIXServer < UNIXSocket" "refm/api/src/socket/UNIXServer")
(find-rurima "== Class Methods" "= class UNIXServer < UNIXSocket" "refm/api/src/socket/UNIXServer")
(find-rurima "--- open(path)" "== Class Methods" "= class UNIXServer < UNIXSocket" "refm/api/src/socket/UNIXServer")
(find-rurima "--- new(path)" "== Class Methods" "= class UNIXServer < UNIXSocket" "refm/api/src/socket/UNIXServer")
(find-rurima "== Instance Methods" "= class UNIXServer < UNIXSocket" "refm/api/src/socket/UNIXServer")
(find-rurima "--- accept" "== Instance Methods" "= class UNIXServer < UNIXSocket" "refm/api/src/socket/UNIXServer")
(find-rurima "--- accept_nonblock" "== Instance Methods" "= class UNIXServer < UNIXSocket" "refm/api/src/socket/UNIXServer")
(find-rurima "--- listen(backlog)" "== Instance Methods" "= class UNIXServer < UNIXSocket" "refm/api/src/socket/UNIXServer")
(find-rurima "--- sysaccept" "== Instance Methods" "= class UNIXServer < UNIXSocket" "refm/api/src/socket/UNIXServer")
(find-rurima "= class UNIXSocket < BasicSocket" "refm/api/src/socket/UNIXSocket")
(find-rurima "== Class Methods" "= class UNIXSocket < BasicSocket" "refm/api/src/socket/UNIXSocket")
(find-rurima "--- open(path)" "== Class Methods" "= class UNIXSocket < BasicSocket" "refm/api/src/socket/UNIXSocket")
(find-rurima "--- new(path)" "== Class Methods" "= class UNIXSocket < BasicSocket" "refm/api/src/socket/UNIXSocket")
(find-rurima "--- pair([type[, protocol]])" "== Class Methods" "= class UNIXSocket < BasicSocket" "refm/api/src/socket/UNIXSocket")
(find-rurima "--- socketpair([type[, protocol]])" "== Class Methods" "= class UNIXSocket < BasicSocket" "refm/api/src/socket/UNIXSocket")
(find-rurima "== Instance Methods" "= class UNIXSocket < BasicSocket" "refm/api/src/socket/UNIXSocket")
(find-rurima "--- addr" "== Instance Methods" "= class UNIXSocket < BasicSocket" "refm/api/src/socket/UNIXSocket")
(find-rurima "--- path" "== Instance Methods" "= class UNIXSocket < BasicSocket" "refm/api/src/socket/UNIXSocket")
(find-rurima "--- peeraddr" "== Instance Methods" "= class UNIXSocket < BasicSocket" "refm/api/src/socket/UNIXSocket")
(find-rurima "--- recvfrom(maxlen[, flags])" "== Instance Methods" "= class UNIXSocket < BasicSocket" "refm/api/src/socket/UNIXSocket")
(find-rurima "--- recv_io([klass[, mode]])" "== Instance Methods" "= class UNIXSocket < BasicSocket" "refm/api/src/socket/UNIXSocket")
(find-rurima "--- send_io(io)" "== Instance Methods" "= class UNIXSocket < BasicSocket" "refm/api/src/socket/UNIXSocket")
(find-rurima "= class Socket::UDPSource" "refm/api/src/socket/Socket__UDPSource")
(find-rurima "== Class methods" "= class Socket::UDPSource" "refm/api/src/socket/Socket__UDPSource")
(find-rurima "--- new" "== Class methods" "= class Socket::UDPSource" "refm/api/src/socket/Socket__UDPSource")
(find-rurima "== Instance Methods" "= class Socket::UDPSource" "refm/api/src/socket/Socket__UDPSource")
(find-rurima "--- remote_address" "== Instance Methods" "= class Socket::UDPSource" "refm/api/src/socket/Socket__UDPSource")
(find-rurima "--- local_address" "== Instance Methods" "= class Socket::UDPSource" "refm/api/src/socket/Socket__UDPSource")
(find-rurima "--- reply" "== Instance Methods" "= class Socket::UDPSource" "refm/api/src/socket/Socket__UDPSource")
(find-rurima "= class TCPSocket < IPSocket" "refm/api/src/socket/TCPSocket")
(find-rurima "== Class Methods" "= class TCPSocket < IPSocket" "refm/api/src/socket/TCPSocket")
(find-rurima "--- open(host, service, local_host=nil, local_service=nil) -> TCPSocket" "== Class Methods" "= class TCPSocket < IPSocket" "refm/api/src/socket/TCPSocket")
(find-rurima "--- new(host, service, local_host=nil, local_service=nil) -> TCPSocket" "== Class Methods" "= class TCPSocket < IPSocket" "refm/api/src/socket/TCPSocket")
(find-rurima "--- gethostbyname(host) -> Array" "== Class Methods" "= class TCPSocket < IPSocket" "refm/api/src/socket/TCPSocket")
(find-rurima "= class UDPSocket < IPSocket" "refm/api/src/socket/UDPSocket")
(find-rurima "== Class Methods" "= class UDPSocket < IPSocket" "refm/api/src/socket/UDPSocket")
(find-rurima "--- open([socktype])" "== Class Methods" "= class UDPSocket < IPSocket" "refm/api/src/socket/UDPSocket")
(find-rurima "--- new([socktype])" "== Class Methods" "= class UDPSocket < IPSocket" "refm/api/src/socket/UDPSocket")
(find-rurima "== Instance Methods" "= class UDPSocket < IPSocket" "refm/api/src/socket/UDPSocket")
(find-rurima "--- bind(host, port)" "== Instance Methods" "= class UDPSocket < IPSocket" "refm/api/src/socket/UDPSocket")
(find-rurima "--- connect(host, port)" "== Instance Methods" "= class UDPSocket < IPSocket" "refm/api/src/socket/UDPSocket")
(find-rurima "--- send(mesg, flags[, dest_sockaddr])" "== Instance Methods" "= class UDPSocket < IPSocket" "refm/api/src/socket/UDPSocket")
(find-rurima "--- send(mesg, flags, host, port)" "== Instance Methods" "= class UDPSocket < IPSocket" "refm/api/src/socket/UDPSocket")
(find-rurima "--- recvfrom_nonblock(maxlen[, flags])" "== Instance Methods" "= class UDPSocket < IPSocket" "refm/api/src/socket/UDPSocket")
(find-rurima "= class TCPServer < TCPSocket" "refm/api/src/socket/TCPServer")
(find-rurima "== Class Methods" "= class TCPServer < TCPSocket" "refm/api/src/socket/TCPServer")
(find-rurima "--- new(host=nil, service) -> TCPServer" "== Class Methods" "= class TCPServer < TCPSocket" "refm/api/src/socket/TCPServer")
(find-rurima "--- open(host=nil, service) -> TCPServer" "== Class Methods" "= class TCPServer < TCPSocket" "refm/api/src/socket/TCPServer")
(find-rurima "== Instance Methods" "= class TCPServer < TCPSocket" "refm/api/src/socket/TCPServer")
(find-rurima "--- accept -> TCPSocket" "== Instance Methods" "= class TCPServer < TCPSocket" "refm/api/src/socket/TCPServer")
(find-rurima "--- accept_nonblock -> TCPSocket" "== Instance Methods" "= class TCPServer < TCPSocket" "refm/api/src/socket/TCPServer")
(find-rurima "--- listen(backlog) -> 0" "== Instance Methods" "= class TCPServer < TCPSocket" "refm/api/src/socket/TCPServer")
(find-rurima "--- sysaccept -> Fixnum" "== Instance Methods" "= class TCPServer < TCPSocket" "refm/api/src/socket/TCPServer")
(find-rurima "= class IPSocket < BasicSocket" "refm/api/src/socket/IPSocket")
(find-rurima "== Class Methods" "= class IPSocket < BasicSocket" "refm/api/src/socket/IPSocket")
(find-rurima "--- getaddress(host) -> String" "== Class Methods" "= class IPSocket < BasicSocket" "refm/api/src/socket/IPSocket")
(find-rurima "== Instance Methods" "= class IPSocket < BasicSocket" "refm/api/src/socket/IPSocket")
(find-rurima "--- addr -> Array" "== Instance Methods" "= class IPSocket < BasicSocket" "refm/api/src/socket/IPSocket")
(find-rurima "--- peeraddr -> Array" "== Instance Methods" "= class IPSocket < BasicSocket" "refm/api/src/socket/IPSocket")
(find-rurima "--- recvfrom(maxlen, flags = 0) -> Array" "== Instance Methods" "= class IPSocket < BasicSocket" "refm/api/src/socket/IPSocket")
(find-rurima "= module Socket::Constants" "refm/api/src/socket/Socket__Constants")
(find-rurima "== Constants" "= module Socket::Constants" "refm/api/src/socket/Socket__Constants")
(find-rurima "= class BasicSocket < IO" "refm/api/src/socket/BasicSocket")
(find-rurima "== Class Methods" "= class BasicSocket < IO" "refm/api/src/socket/BasicSocket")
(find-rurima "--- do_not_reverse_lookup -> bool" "== Class Methods" "= class BasicSocket < IO" "refm/api/src/socket/BasicSocket")
(find-rurima "--- do_not_reverse_lookup=(bool)" "== Class Methods" "= class BasicSocket < IO" "refm/api/src/socket/BasicSocket")
(find-rurima "--- for_fd(fd) -> Object" "== Class Methods" "= class BasicSocket < IO" "refm/api/src/socket/BasicSocket")
(find-rurima "== Instance Methods" "= class BasicSocket < IO" "refm/api/src/socket/BasicSocket")
(find-rurima "--- do_not_reverse_lookup" "== Instance Methods" "= class BasicSocket < IO" "refm/api/src/socket/BasicSocket")
(find-rurima "--- do_not_reverse_lookup=(bool)" "== Instance Methods" "= class BasicSocket < IO" "refm/api/src/socket/BasicSocket")
(find-rurima "--- getpeername -> String" "== Instance Methods" "= class BasicSocket < IO" "refm/api/src/socket/BasicSocket")
(find-rurima "--- getsockname -> String" "== Instance Methods" "= class BasicSocket < IO" "refm/api/src/socket/BasicSocket")
(find-rurima "--- getsockopt(level, optname) -> String" "== Instance Methods" "= class BasicSocket < IO" "refm/api/src/socket/BasicSocket")
(find-rurima "--- recv(maxlen, flags = 0) -> String" "== Instance Methods" "= class BasicSocket < IO" "refm/api/src/socket/BasicSocket")
(find-rurima "--- recv_nonblock(maxlen, flags = 0) -> String" "== Instance Methods" "= class BasicSocket < IO" "refm/api/src/socket/BasicSocket")
(find-rurima "--- send(mesg, flags, dest_sockaddr = nil) -> Fixnum" "== Instance Methods" "= class BasicSocket < IO" "refm/api/src/socket/BasicSocket")
(find-rurima "--- setsockopt(level, optname, optval) -> 0" "== Instance Methods" "= class BasicSocket < IO" "refm/api/src/socket/BasicSocket")
(find-rurima "--- shutdown(how = Socket::SHUT_RDWR) -> 0" "== Instance Methods" "= class BasicSocket < IO" "refm/api/src/socket/BasicSocket")
(find-rurima "= class Socket < BasicSocket" "refm/api/src/socket/Socket")
(find-rurima "== Class Methods" "= class Socket < BasicSocket" "refm/api/src/socket/Socket")
(find-rurima "--- open(domain, type, protocol) -> Socket" "== Class Methods" "= class Socket < BasicSocket" "refm/api/src/socket/Socket")
(find-rurima "--- new(domain, type, protocol) -> Socket" "== Class Methods" "= class Socket < BasicSocket" "refm/api/src/socket/Socket")
(find-rurima "--- getaddrinfo(nodename, servname, family=nil, socktype=nil, protocol=nil, flags=nil) -> Array" "== Class Methods" "= class Socket < BasicSocket" "refm/api/src/socket/Socket")
(find-rurima "=== アドレス情報について" "== Class Methods" "= class Socket < BasicSocket" "refm/api/src/socket/Socket")
(find-rurima "=== 必須引数について" "== Class Methods" "= class Socket < BasicSocket" "refm/api/src/socket/Socket")
(find-rurima "=== 省略可能な引数について" "== Class Methods" "= class Socket < BasicSocket" "refm/api/src/socket/Socket")
(find-rurima "=== 定数の意味について" "== Class Methods" "= class Socket < BasicSocket" "refm/api/src/socket/Socket")
(find-rurima "=== 使用例" "== Class Methods" "= class Socket < BasicSocket" "refm/api/src/socket/Socket")
(find-rurima "--- getnameinfo(sa, flags = 0) -> Array" "=== 使用例" "== Class Methods" "= class Socket < BasicSocket" "refm/api/src/socket/Socket")
(find-rurima "=== 引数 sa について" "== Class Methods" "= class Socket < BasicSocket" "refm/api/src/socket/Socket")
(find-rurima "=== 引数flagsについて" "== Class Methods" "= class Socket < BasicSocket" "refm/api/src/socket/Socket")
(find-rurima "=== 使用例" "== Class Methods" "= class Socket < BasicSocket" "refm/api/src/socket/Socket")
(find-rurima "--- gethostbyaddr(host, type = Socket::AF_INET) -> Array" "=== 使用例" "== Class Methods" "= class Socket < BasicSocket" "refm/api/src/socket/Socket")
(find-rurima "--- gethostbyname(host) -> Array" "=== 使用例" "== Class Methods" "= class Socket < BasicSocket" "refm/api/src/socket/Socket")
(find-rurima "=== 返り値のホスト情報について" "== Class Methods" "= class Socket < BasicSocket" "refm/api/src/socket/Socket")
(find-rurima "=== 使用例" "== Class Methods" "= class Socket < BasicSocket" "refm/api/src/socket/Socket")
(find-rurima "--- gethostname -> String" "=== 使用例" "== Class Methods" "= class Socket < BasicSocket" "refm/api/src/socket/Socket")
(find-rurima "--- getservbyname(service, proto = \"tcp\") -> Fixnum" "=== 使用例" "== Class Methods" "= class Socket < BasicSocket" "refm/api/src/socket/Socket")
(find-rurima "--- sockaddr_in(port, host) -> String" "=== 使用例" "== Class Methods" "= class Socket < BasicSocket" "refm/api/src/socket/Socket")
(find-rurima "--- pack_sockaddr_in(port, host) -> String" "=== 使用例" "== Class Methods" "= class Socket < BasicSocket" "refm/api/src/socket/Socket")
(find-rurima "--- sockaddr_un(path) -> String" "=== 使用例" "== Class Methods" "= class Socket < BasicSocket" "refm/api/src/socket/Socket")
(find-rurima "--- pack_sockaddr_un(path) -> String" "=== 使用例" "== Class Methods" "= class Socket < BasicSocket" "refm/api/src/socket/Socket")
(find-rurima "--- pair(domain, type, protocol) -> Array" "=== 使用例" "== Class Methods" "= class Socket < BasicSocket" "refm/api/src/socket/Socket")
(find-rurima "--- socketpair(domain, type, protocol) -> Array" "=== 使用例" "== Class Methods" "= class Socket < BasicSocket" "refm/api/src/socket/Socket")
(find-rurima "--- unpack_sockaddr_in(sockaddr) -> Array" "=== 使用例" "== Class Methods" "= class Socket < BasicSocket" "refm/api/src/socket/Socket")
(find-rurima "--- unpack_sockaddr_un(sockaddr) -> String" "=== 使用例" "== Class Methods" "= class Socket < BasicSocket" "refm/api/src/socket/Socket")
(find-rurima "--- getservbyport(port, protocol_name=\"tcp\") -> String" "=== 使用例" "== Class Methods" "= class Socket < BasicSocket" "refm/api/src/socket/Socket")
(find-rurima "--- accept_loop" "=== 使用例" "== Class Methods" "= class Socket < BasicSocket" "refm/api/src/socket/Socket")
(find-rurima "--- ip_address_list" "=== 使用例" "== Class Methods" "= class Socket < BasicSocket" "refm/api/src/socket/Socket")
(find-rurima "--- tcp(host, port, local_host=nil, local_port=nil) -> Socket" "=== 使用例" "== Class Methods" "= class Socket < BasicSocket" "refm/api/src/socket/Socket")
(find-rurima "--- tcp(host, port, local_host=nil, local_port=nil) {|socket| ... } -> object" "=== 使用例" "== Class Methods" "= class Socket < BasicSocket" "refm/api/src/socket/Socket")
(find-rurima "--- tcp_server_loop" "=== 使用例" "== Class Methods" "= class Socket < BasicSocket" "refm/api/src/socket/Socket")
(find-rurima "--- tcp_server_sockets" "=== 使用例" "== Class Methods" "= class Socket < BasicSocket" "refm/api/src/socket/Socket")
(find-rurima "--- udp_server_loop" "=== 使用例" "== Class Methods" "= class Socket < BasicSocket" "refm/api/src/socket/Socket")
(find-rurima "--- udp_server_loop_on" "=== 使用例" "== Class Methods" "= class Socket < BasicSocket" "refm/api/src/socket/Socket")
(find-rurima "--- udp_server_recv" "=== 使用例" "== Class Methods" "= class Socket < BasicSocket" "refm/api/src/socket/Socket")
(find-rurima "--- udp_server_sockets" "=== 使用例" "== Class Methods" "= class Socket < BasicSocket" "refm/api/src/socket/Socket")
(find-rurima "--- unix" "=== 使用例" "== Class Methods" "= class Socket < BasicSocket" "refm/api/src/socket/Socket")
(find-rurima "--- unix_server_loop" "=== 使用例" "== Class Methods" "= class Socket < BasicSocket" "refm/api/src/socket/Socket")
(find-rurima "--- unix_server_socket" "=== 使用例" "== Class Methods" "= class Socket < BasicSocket" "refm/api/src/socket/Socket")
(find-rurima "== Instance Methods" "= class Socket < BasicSocket" "refm/api/src/socket/Socket")
(find-rurima "--- accept -> Array" "== Instance Methods" "= class Socket < BasicSocket" "refm/api/src/socket/Socket")
(find-rurima "--- accept_nonblock -> Array" "== Instance Methods" "= class Socket < BasicSocket" "refm/api/src/socket/Socket")
(find-rurima "--- bind(my_sockaddr) -> 0" "== Instance Methods" "= class Socket < BasicSocket" "refm/api/src/socket/Socket")
(find-rurima "--- connect(server_sockaddr) -> 0" "== Instance Methods" "= class Socket < BasicSocket" "refm/api/src/socket/Socket")
(find-rurima "--- connect_nonblock(server_sockaddr) -> Fixnum" "== Instance Methods" "= class Socket < BasicSocket" "refm/api/src/socket/Socket")
(find-rurima "--- listen(backlog) -> 0" "== Instance Methods" "= class Socket < BasicSocket" "refm/api/src/socket/Socket")
(find-rurima "--- recvfrom(maxlen[, flags]) -> Array" "== Instance Methods" "= class Socket < BasicSocket" "refm/api/src/socket/Socket")
(find-rurima "--- recvfrom_nonblock(maxlen[, flags])" "== Instance Methods" "= class Socket < BasicSocket" "refm/api/src/socket/Socket")
(find-rurima "--- sysaccept -> Array" "== Instance Methods" "= class Socket < BasicSocket" "refm/api/src/socket/Socket")
(find-rurima "--- ipv6only!" "== Instance Methods" "= class Socket < BasicSocket" "refm/api/src/socket/Socket")
(find-rurima "== Constants" "= class Socket < BasicSocket" "refm/api/src/socket/Socket")
(find-rurima "= class Socket::AncillaryData" "refm/api/src/socket/Socket__AncillaryData")
(find-rurima "== Class Methods" "= class Socket::AncillaryData" "refm/api/src/socket/Socket__AncillaryData")
(find-rurima "--- new" "== Class Methods" "= class Socket::AncillaryData" "refm/api/src/socket/Socket__AncillaryData")
(find-rurima "--- int" "== Class Methods" "= class Socket::AncillaryData" "refm/api/src/socket/Socket__AncillaryData")
(find-rurima "--- unix_rights" "== Class Methods" "= class Socket::AncillaryData" "refm/api/src/socket/Socket__AncillaryData")
(find-rurima "--- ip_pktinfo" "== Class Methods" "= class Socket::AncillaryData" "refm/api/src/socket/Socket__AncillaryData")
(find-rurima "--- ipv6_pktinfo" "== Class Methods" "= class Socket::AncillaryData" "refm/api/src/socket/Socket__AncillaryData")
(find-rurima "== Instance Methods" "= class Socket::AncillaryData" "refm/api/src/socket/Socket__AncillaryData")
(find-rurima "--- family" "== Instance Methods" "= class Socket::AncillaryData" "refm/api/src/socket/Socket__AncillaryData")
(find-rurima "--- level " "== Instance Methods" "= class Socket::AncillaryData" "refm/api/src/socket/Socket__AncillaryData")
(find-rurima "--- type" "== Instance Methods" "= class Socket::AncillaryData" "refm/api/src/socket/Socket__AncillaryData")
(find-rurima "--- data" "== Instance Methods" "= class Socket::AncillaryData" "refm/api/src/socket/Socket__AncillaryData")
(find-rurima "--- cmsg_is?" "== Instance Methods" "= class Socket::AncillaryData" "refm/api/src/socket/Socket__AncillaryData")
(find-rurima "--- int" "== Instance Methods" "= class Socket::AncillaryData" "refm/api/src/socket/Socket__AncillaryData")
(find-rurima "--- unix_rights" "== Instance Methods" "= class Socket::AncillaryData" "refm/api/src/socket/Socket__AncillaryData")
(find-rurima "--- timestamp" "== Instance Methods" "= class Socket::AncillaryData" "refm/api/src/socket/Socket__AncillaryData")
(find-rurima "--- ip_pktinfo" "== Instance Methods" "= class Socket::AncillaryData" "refm/api/src/socket/Socket__AncillaryData")
(find-rurima "--- ipv6_pktinfo" "== Instance Methods" "= class Socket::AncillaryData" "refm/api/src/socket/Socket__AncillaryData")
(find-rurima "--- ipv6_pktinfo_addr" "== Instance Methods" "= class Socket::AncillaryData" "refm/api/src/socket/Socket__AncillaryData")
(find-rurima "--- ipv6_pktinfo_ifindex" "== Instance Methods" "= class Socket::AncillaryData" "refm/api/src/socket/Socket__AncillaryData")
(find-rurima "=== 参考" "refm/api/src/rss.rd")
(find-rurima "= class RSS::Element < Object" "refm/api/src/rss.rd")
(find-rurima "== Instance Methods" "= class RSS::Element < Object" "refm/api/src/rss.rd")
(find-rurima "--- full_name" "== Instance Methods" "= class RSS::Element < Object" "refm/api/src/rss.rd")
(find-rurima "--- tag_name" "== Instance Methods" "= class RSS::Element < Object" "refm/api/src/rss.rd")
(find-rurima "= module RSS::RootElementMixin" "refm/api/src/rss.rd")
(find-rurima "== Instance Methods" "= module RSS::RootElementMixin" "refm/api/src/rss.rd")
(find-rurima "--- output_encoding" "== Instance Methods" "= module RSS::RootElementMixin" "refm/api/src/rss.rd")
(find-rurima "--- output_encoding=" "== Instance Methods" "= module RSS::RootElementMixin" "refm/api/src/rss.rd")
(find-rurima "--- to_xml" "== Instance Methods" "= module RSS::RootElementMixin" "refm/api/src/rss.rd")
(find-rurima "= class RSS::Error < StandardError" "refm/api/src/rss.rd")
(find-rurima "= class RSS::InvalidRSSError < RSS::Error" "refm/api/src/rss.rd")
(find-rurima "= class RSS::OverlappedPrefixError < RSS::Error" "refm/api/src/rss.rd")
(find-rurima "= class RSS::MissingTagError < RSS::InvalidRSSError" "refm/api/src/rss.rd")
(find-rurima "= class RSS::TooMuchTagError < RSS::InvalidRSSError" "refm/api/src/rss.rd")
(find-rurima "= class RSS::MissingAttributeError < RSS::InvalidRSSError" "refm/api/src/rss.rd")
(find-rurima "= class RSS::UnknownTagError < RSS::InvalidRSSError" "refm/api/src/rss.rd")
(find-rurima "= class RSS::NotExpectedTagError < RSS::InvalidRSSError" "refm/api/src/rss.rd")
(find-rurima "= class RSS::NotAvailableValueError < RSS::InvalidRSSError" "refm/api/src/rss.rd")
(find-rurima "= class RSS::UnknownConversionMethodError < RSS::Error" "refm/api/src/rss.rd")
(find-rurima "= class RSS::ConversionError < RSS::Error" "refm/api/src/rss.rd")
(find-rurima "= class RSS::NotSetError < RSS::Error" "refm/api/src/rss.rd")
(find-rurima "= class Rake::TaskArguments" "refm/api/src/rake/Rake__TaskArguments")
(find-rurima "== Public Instance Methods" "= class Rake::TaskArguments" "refm/api/src/rake/Rake__TaskArguments")
(find-rurima "--- [](key) -> object" "== Public Instance Methods" "= class Rake::TaskArguments" "refm/api/src/rake/Rake__TaskArguments")
(find-rurima "--- each{|key, val| ... } -> Hash" "== Public Instance Methods" "= class Rake::TaskArguments" "refm/api/src/rake/Rake__TaskArguments")
(find-rurima "--- inspect -> String" "== Public Instance Methods" "= class Rake::TaskArguments" "refm/api/src/rake/Rake__TaskArguments")
(find-rurima "--- to_s -> String" "== Public Instance Methods" "= class Rake::TaskArguments" "refm/api/src/rake/Rake__TaskArguments")
(find-rurima "--- names -> Array" "== Public Instance Methods" "= class Rake::TaskArguments" "refm/api/src/rake/Rake__TaskArguments")
(find-rurima "--- new_scope(names) -> Rake::TaskArguments" "== Public Instance Methods" "= class Rake::TaskArguments" "refm/api/src/rake/Rake__TaskArguments")
(find-rurima "--- to_hash -> Hash" "== Public Instance Methods" "= class Rake::TaskArguments" "refm/api/src/rake/Rake__TaskArguments")
(find-rurima "--- with_defaults(defaults) -> Hash" "== Public Instance Methods" "= class Rake::TaskArguments" "refm/api/src/rake/Rake__TaskArguments")
(find-rurima "== Protected Instance Methods" "= class Rake::TaskArguments" "refm/api/src/rake/Rake__TaskArguments")
(find-rurima "--- lookup(name) -> object" "== Protected Instance Methods" "= class Rake::TaskArguments" "refm/api/src/rake/Rake__TaskArguments")
(find-rurima "== Singleton Methods" "= class Rake::TaskArguments" "refm/api/src/rake/Rake__TaskArguments")
(find-rurima "--- new(names, values, parent = nil)" "== Singleton Methods" "= class Rake::TaskArguments" "refm/api/src/rake/Rake__TaskArguments")
(find-rurima "= class Rake::TaskLib" "refm/api/src/rake/tasklib.rd")
(find-rurima "= class Rake::Application" "refm/api/src/rake/Rake__Application")
(find-rurima "== Public Instance Methods" "= class Rake::Application" "refm/api/src/rake/Rake__Application")
(find-rurima "--- add_import(file_name)" "== Public Instance Methods" "= class Rake::Application" "refm/api/src/rake/Rake__Application")
(find-rurima "--- add_loader(ext, loader)" "== Public Instance Methods" "= class Rake::Application" "refm/api/src/rake/Rake__Application")
(find-rurima "--- collect_tasks(argv) -> Array" "== Public Instance Methods" "= class Rake::Application" "refm/api/src/rake/Rake__Application")
(find-rurima "--- const_warning(const_name)" "== Public Instance Methods" "= class Rake::Application" "refm/api/src/rake/Rake__Application")
(find-rurima "--- display_prerequisites" "== Public Instance Methods" "= class Rake::Application" "refm/api/src/rake/Rake__Application")
(find-rurima "--- display_tasks_and_comments" "== Public Instance Methods" "= class Rake::Application" "refm/api/src/rake/Rake__Application")
(find-rurima "--- dynamic_width -> Fixnum" "== Public Instance Methods" "= class Rake::Application" "refm/api/src/rake/Rake__Application")
(find-rurima "--- dynamic_width_stty" "== Public Instance Methods" "= class Rake::Application" "refm/api/src/rake/Rake__Application")
(find-rurima "--- dynamic_width_tput" "== Public Instance Methods" "= class Rake::Application" "refm/api/src/rake/Rake__Application")
(find-rurima "--- find_rakefile_location -> Array | nil" "== Public Instance Methods" "= class Rake::Application" "refm/api/src/rake/Rake__Application")
(find-rurima "--- handle_options" "== Public Instance Methods" "= class Rake::Application" "refm/api/src/rake/Rake__Application")
(find-rurima "--- have_rakefile -> String | nil" "== Public Instance Methods" "= class Rake::Application" "refm/api/src/rake/Rake__Application")
(find-rurima "--- init(app_name = 'rake')" "== Public Instance Methods" "= class Rake::Application" "refm/api/src/rake/Rake__Application")
(find-rurima "--- invoke_task(task_string)" "== Public Instance Methods" "= class Rake::Application" "refm/api/src/rake/Rake__Application")
(find-rurima "--- load_imports" "== Public Instance Methods" "= class Rake::Application" "refm/api/src/rake/Rake__Application")
(find-rurima "--- load_rakefile" "== Public Instance Methods" "= class Rake::Application" "refm/api/src/rake/Rake__Application")
(find-rurima "--- name -> String" "== Public Instance Methods" "= class Rake::Application" "refm/api/src/rake/Rake__Application")
(find-rurima "--- options -> OpenStruct" "== Public Instance Methods" "= class Rake::Application" "refm/api/src/rake/Rake__Application")
(find-rurima "--- original_dir -> String" "== Public Instance Methods" "= class Rake::Application" "refm/api/src/rake/Rake__Application")
(find-rurima "--- parse_task_string(string) -> [String, Array]" "== Public Instance Methods" "= class Rake::Application" "refm/api/src/rake/Rake__Application")
(find-rurima "--- rake_require(file_name, paths = $LOAD_PATH, loaded = $\") -> bool" "== Public Instance Methods" "= class Rake::Application" "refm/api/src/rake/Rake__Application")
(find-rurima "--- rakefile -> String" "== Public Instance Methods" "= class Rake::Application" "refm/api/src/rake/Rake__Application")
(find-rurima "--- rakefile_location -> String" "== Public Instance Methods" "= class Rake::Application" "refm/api/src/rake/Rake__Application")
(find-rurima "--- raw_load_rakefile" "== Public Instance Methods" "= class Rake::Application" "refm/api/src/rake/Rake__Application")
(find-rurima "--- run" "== Public Instance Methods" "= class Rake::Application" "refm/api/src/rake/Rake__Application")
(find-rurima "--- standard_exception_handling{ ... }" "== Public Instance Methods" "= class Rake::Application" "refm/api/src/rake/Rake__Application")
(find-rurima "--- standard_rake_options -> Array" "== Public Instance Methods" "= class Rake::Application" "refm/api/src/rake/Rake__Application")
(find-rurima "--- system_dir -> String" "== Public Instance Methods" "= class Rake::Application" "refm/api/src/rake/Rake__Application")
(find-rurima "--- terminal_width -> Fixnum" "== Public Instance Methods" "= class Rake::Application" "refm/api/src/rake/Rake__Application")
(find-rurima "--- top_level" "== Public Instance Methods" "= class Rake::Application" "refm/api/src/rake/Rake__Application")
(find-rurima "--- top_level_tasks -> Array" "== Public Instance Methods" "= class Rake::Application" "refm/api/src/rake/Rake__Application")
(find-rurima "--- truncate(string, width) -> String" "== Public Instance Methods" "= class Rake::Application" "refm/api/src/rake/Rake__Application")
(find-rurima "--- truncate_output?" "== Public Instance Methods" "= class Rake::Application" "refm/api/src/rake/Rake__Application")
(find-rurima "--- tty_output=(tty_output_state)" "== Public Instance Methods" "= class Rake::Application" "refm/api/src/rake/Rake__Application")
(find-rurima "--- tty_output? -> bool" "== Public Instance Methods" "= class Rake::Application" "refm/api/src/rake/Rake__Application")
(find-rurima "--- unix? -> bool" "== Public Instance Methods" "= class Rake::Application" "refm/api/src/rake/Rake__Application")
(find-rurima "--- windows? -> bool" "== Public Instance Methods" "= class Rake::Application" "refm/api/src/rake/Rake__Application")
(find-rurima "== Constants" "= class Rake::Application" "refm/api/src/rake/Rake__Application")
(find-rurima "--- DEFAULT_RAKEFILES -> Array" "== Constants" "= class Rake::Application" "refm/api/src/rake/Rake__Application")
(find-rurima "= class Rake::FileCreationTask < Rake::FileTask" "refm/api/src/rake/Rake__FileCreationTask")
(find-rurima "== Public Instance Methods" "= class Rake::FileCreationTask < Rake::FileTask" "refm/api/src/rake/Rake__FileCreationTask")
(find-rurima "--- needed? -> bool" "== Public Instance Methods" "= class Rake::FileCreationTask < Rake::FileTask" "refm/api/src/rake/Rake__FileCreationTask")
(find-rurima "--- timestamp -> Rake::EarlyTime" "== Public Instance Methods" "= class Rake::FileCreationTask < Rake::FileTask" "refm/api/src/rake/Rake__FileCreationTask")
(find-rurima "= module Rake::Cloneable" "refm/api/src/rake/Rake__Cloneable")
(find-rurima "== Public Instance Methods" "= module Rake::Cloneable" "refm/api/src/rake/Rake__Cloneable")
(find-rurima "--- clone -> object" "== Public Instance Methods" "= module Rake::Cloneable" "refm/api/src/rake/Rake__Cloneable")
(find-rurima "--- dup -> object" "== Public Instance Methods" "= module Rake::Cloneable" "refm/api/src/rake/Rake__Cloneable")
(find-rurima "= class Rake::GemPackageTask < Rake::PackageTask" "refm/api/src/rake/gempackagetask.rd")
(find-rurima "== Public Instance Methods" "= class Rake::GemPackageTask < Rake::PackageTask" "refm/api/src/rake/gempackagetask.rd")
(find-rurima "--- define" "== Public Instance Methods" "= class Rake::GemPackageTask < Rake::PackageTask" "refm/api/src/rake/gempackagetask.rd")
(find-rurima "--- gem_file -> String" "== Public Instance Methods" "= class Rake::GemPackageTask < Rake::PackageTask" "refm/api/src/rake/gempackagetask.rd")
(find-rurima "--- gem_spec -> Gem::Specification" "== Public Instance Methods" "= class Rake::GemPackageTask < Rake::PackageTask" "refm/api/src/rake/gempackagetask.rd")
(find-rurima "--- gem_spec=(gem_spec)" "== Public Instance Methods" "= class Rake::GemPackageTask < Rake::PackageTask" "refm/api/src/rake/gempackagetask.rd")
(find-rurima "--- init(gem_spec)" "== Public Instance Methods" "= class Rake::GemPackageTask < Rake::PackageTask" "refm/api/src/rake/gempackagetask.rd")
(find-rurima "== Singleton Methods" "= class Rake::GemPackageTask < Rake::PackageTask" "refm/api/src/rake/gempackagetask.rd")
(find-rurima "--- new(gem_spec){|t| ... } -> Rake::GemPackageTask" "== Singleton Methods" "= class Rake::GemPackageTask < Rake::PackageTask" "refm/api/src/rake/gempackagetask.rd")
(find-rurima "= reopen Module" "refm/api/src/rake/core_ext")
(find-rurima "== Public Instance Methods" "= reopen Module" "refm/api/src/rake/core_ext")
(find-rurima "--- rake_extension(method){ ... } -> ()" "== Public Instance Methods" "= reopen Module" "refm/api/src/rake/core_ext")
(find-rurima "= reopen String" "refm/api/src/rake/core_ext")
(find-rurima "== Public Instance Methods" "= reopen String" "refm/api/src/rake/core_ext")
(find-rurima "--- ext(newext = '') -> String" "== Public Instance Methods" "= reopen String" "refm/api/src/rake/core_ext")
(find-rurima "--- pathmap(spec = nil){ ... } -> String" "== Public Instance Methods" "= reopen String" "refm/api/src/rake/core_ext")
(find-rurima "== Protected Instance Methods" "= reopen String" "refm/api/src/rake/core_ext")
(find-rurima "--- pathmap_explode -> Array" "== Protected Instance Methods" "= reopen String" "refm/api/src/rake/core_ext")
(find-rurima "--- pathmap_partial(n) -> String" "== Protected Instance Methods" "= reopen String" "refm/api/src/rake/core_ext")
(find-rurima "--- pathmap_replace(patterns){ ... } -> String" "== Protected Instance Methods" "= reopen String" "refm/api/src/rake/core_ext")
(find-rurima "= reopen Kernel" "refm/api/src/rake/core_ext")
(find-rurima "== Private Instance Methods" "= reopen Kernel" "refm/api/src/rake/core_ext")
(find-rurima "--- task(*args){ ... } -> Rake::Task" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/rake/core_ext")
(find-rurima "--- file(*args){ ... } -> Rake::FileTask" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/rake/core_ext")
(find-rurima "--- file_create(*args){ ... } -> Rake::FileCreationTask" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/rake/core_ext")
(find-rurima "--- directory(dir) -> ()" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/rake/core_ext")
(find-rurima "--- multitask(args){ ... } -> Rake::MultiTask" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/rake/core_ext")
(find-rurima "--- namespace(name = nil){ ... } -> Rake::NameSpace" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/rake/core_ext")
(find-rurima "--- rule(*args){|t| ... } -> Rake::Task" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/rake/core_ext")
(find-rurima "--- desc(description) -> String" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/rake/core_ext")
(find-rurima "--- import(*filenames)" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/rake/core_ext")
(find-rurima "= reopen FileUtils" "refm/api/src/rake/core_ext")
(find-rurima "== Public Instance Methods" "= reopen FileUtils" "refm/api/src/rake/core_ext")
(find-rurima "--- sh(*cmd){|result, status| ... }" "== Public Instance Methods" "= reopen FileUtils" "refm/api/src/rake/core_ext")
(find-rurima "--- ruby(*args){|result, status| ... }" "== Public Instance Methods" "= reopen FileUtils" "refm/api/src/rake/core_ext")
(find-rurima "--- safe_ln(*args)" "== Public Instance Methods" "= reopen FileUtils" "refm/api/src/rake/core_ext")
(find-rurima "--- split_all(path) -> Array" "== Public Instance Methods" "= reopen FileUtils" "refm/api/src/rake/core_ext")
(find-rurima "= class Rake::InvocationChain" "refm/api/src/rake/Rake__InvocationChain")
(find-rurima "== Public Instance Methods" "= class Rake::InvocationChain" "refm/api/src/rake/Rake__InvocationChain")
(find-rurima "--- append(task_name) -> Rake::InvocationChain" "== Public Instance Methods" "= class Rake::InvocationChain" "refm/api/src/rake/Rake__InvocationChain")
(find-rurima "--- member?(task_name) -> bool" "== Public Instance Methods" "= class Rake::InvocationChain" "refm/api/src/rake/Rake__InvocationChain")
(find-rurima "--- to_s -> String" "== Public Instance Methods" "= class Rake::InvocationChain" "refm/api/src/rake/Rake__InvocationChain")
(find-rurima "== Singleton Methods" "= class Rake::InvocationChain" "refm/api/src/rake/Rake__InvocationChain")
(find-rurima "--- new(task_name, tail)" "== Singleton Methods" "= class Rake::InvocationChain" "refm/api/src/rake/Rake__InvocationChain")
(find-rurima "--- append(task_name, chain) -> Rake::InvocationChain" "== Singleton Methods" "= class Rake::InvocationChain" "refm/api/src/rake/Rake__InvocationChain")
(find-rurima "== Constants" "= class Rake::InvocationChain" "refm/api/src/rake/Rake__InvocationChain")
(find-rurima "--- EMPTY -> Rake::InvocationChain::EmptyInvocationChain" "== Constants" "= class Rake::InvocationChain" "refm/api/src/rake/Rake__InvocationChain")
(find-rurima "= class Rake::InvocationChain::EmptyInvocationChain" "refm/api/src/rake/Rake__InvocationChain")
(find-rurima "== Public Instance Methods" "= class Rake::InvocationChain::EmptyInvocationChain" "refm/api/src/rake/Rake__InvocationChain")
(find-rurima "--- member?(task_name) -> bool" "== Public Instance Methods" "= class Rake::InvocationChain::EmptyInvocationChain" "refm/api/src/rake/Rake__InvocationChain")
(find-rurima "--- append(task_name) -> Rake::InvocationChain" "== Public Instance Methods" "= class Rake::InvocationChain::EmptyInvocationChain" "refm/api/src/rake/Rake__InvocationChain")
(find-rurima "--- to_s -> String" "== Public Instance Methods" "= class Rake::InvocationChain::EmptyInvocationChain" "refm/api/src/rake/Rake__InvocationChain")
(find-rurima "= module RakeFileUtils" "refm/api/src/rake/RakeFileUtils")
(find-rurima "== Public Instance Methods" "= module RakeFileUtils" "refm/api/src/rake/RakeFileUtils")
(find-rurima "--- verbose(value = nil){ ... }" "== Public Instance Methods" "= module RakeFileUtils" "refm/api/src/rake/RakeFileUtils")
(find-rurima "--- nowrite(value = nil){ ... }" "== Public Instance Methods" "= module RakeFileUtils" "refm/api/src/rake/RakeFileUtils")
(find-rurima "--- when_writing(msg = nil){ ... }" "== Public Instance Methods" "= module RakeFileUtils" "refm/api/src/rake/RakeFileUtils")
(find-rurima "== Singleton Methods" "= module RakeFileUtils" "refm/api/src/rake/RakeFileUtils")
(find-rurima "--- nowrite_flag -> bool" "== Singleton Methods" "= module RakeFileUtils" "refm/api/src/rake/RakeFileUtils")
(find-rurima "--- nowrite_flag=(flag)" "== Singleton Methods" "= module RakeFileUtils" "refm/api/src/rake/RakeFileUtils")
(find-rurima "--- verbose_flag -> bool" "== Singleton Methods" "= module RakeFileUtils" "refm/api/src/rake/RakeFileUtils")
(find-rurima "--- verbose_flag=(flag)" "== Singleton Methods" "= module RakeFileUtils" "refm/api/src/rake/RakeFileUtils")
(find-rurima "= class Rake::TestTask < Rake::TaskLib" "refm/api/src/rake/testtask.rd")
(find-rurima "== Public Instance Methods" "= class Rake::TestTask < Rake::TaskLib" "refm/api/src/rake/testtask.rd")
(find-rurima "--- define -> self" "== Public Instance Methods" "= class Rake::TestTask < Rake::TaskLib" "refm/api/src/rake/testtask.rd")
(find-rurima "--- libs -> Array" "== Public Instance Methods" "= class Rake::TestTask < Rake::TaskLib" "refm/api/src/rake/testtask.rd")
(find-rurima "--- libs=(libs)" "== Public Instance Methods" "= class Rake::TestTask < Rake::TaskLib" "refm/api/src/rake/testtask.rd")
(find-rurima "--- loader -> Symbol" "== Public Instance Methods" "= class Rake::TestTask < Rake::TaskLib" "refm/api/src/rake/testtask.rd")
(find-rurima "--- loader=(style)" "== Public Instance Methods" "= class Rake::TestTask < Rake::TaskLib" "refm/api/src/rake/testtask.rd")
(find-rurima "--- name -> String" "== Public Instance Methods" "= class Rake::TestTask < Rake::TaskLib" "refm/api/src/rake/testtask.rd")
(find-rurima "--- name=(str)" "== Public Instance Methods" "= class Rake::TestTask < Rake::TaskLib" "refm/api/src/rake/testtask.rd")
(find-rurima "--- options -> String" "== Public Instance Methods" "= class Rake::TestTask < Rake::TaskLib" "refm/api/src/rake/testtask.rd")
(find-rurima "--- options=(option_str)" "== Public Instance Methods" "= class Rake::TestTask < Rake::TaskLib" "refm/api/src/rake/testtask.rd")
(find-rurima "--- pattern -> String" "== Public Instance Methods" "= class Rake::TestTask < Rake::TaskLib" "refm/api/src/rake/testtask.rd")
(find-rurima "--- pattern=(pattern)" "== Public Instance Methods" "= class Rake::TestTask < Rake::TaskLib" "refm/api/src/rake/testtask.rd")
(find-rurima "--- ruby_opts -> Array" "== Public Instance Methods" "= class Rake::TestTask < Rake::TaskLib" "refm/api/src/rake/testtask.rd")
(find-rurima "--- ruby_opts=(options)" "== Public Instance Methods" "= class Rake::TestTask < Rake::TaskLib" "refm/api/src/rake/testtask.rd")
(find-rurima "--- test_files=(list)" "== Public Instance Methods" "= class Rake::TestTask < Rake::TaskLib" "refm/api/src/rake/testtask.rd")
(find-rurima "--- verbose -> bool" "== Public Instance Methods" "= class Rake::TestTask < Rake::TaskLib" "refm/api/src/rake/testtask.rd")
(find-rurima "--- verbose=(flag)" "== Public Instance Methods" "= class Rake::TestTask < Rake::TaskLib" "refm/api/src/rake/testtask.rd")
(find-rurima "--- warning -> bool" "== Public Instance Methods" "= class Rake::TestTask < Rake::TaskLib" "refm/api/src/rake/testtask.rd")
(find-rurima "--- warning=(flag)" "== Public Instance Methods" "= class Rake::TestTask < Rake::TaskLib" "refm/api/src/rake/testtask.rd")
(find-rurima "== Singleton Methods" "= class Rake::TestTask < Rake::TaskLib" "refm/api/src/rake/testtask.rd")
(find-rurima "--- new(name = :test){|t| ... } -> Rake::TestTask" "== Singleton Methods" "= class Rake::TestTask < Rake::TaskLib" "refm/api/src/rake/testtask.rd")
(find-rurima "= class Rake::DefaultLoader" "refm/api/src/rake/Rake__DefaultLoader")
(find-rurima "== Public Instance Methods" "= class Rake::DefaultLoader" "refm/api/src/rake/Rake__DefaultLoader")
(find-rurima "--- load(filename)" "== Public Instance Methods" "= class Rake::DefaultLoader" "refm/api/src/rake/Rake__DefaultLoader")
(find-rurima "= class Rake::Task" "refm/api/src/rake/Rake__Task")
(find-rurima "== Public Instance Methods" "= class Rake::Task" "refm/api/src/rake/Rake__Task")
(find-rurima "--- actions -> Array" "== Public Instance Methods" "= class Rake::Task" "refm/api/src/rake/Rake__Task")
(find-rurima "--- add_description(description)" "== Public Instance Methods" "= class Rake::Task" "refm/api/src/rake/Rake__Task")
(find-rurima "--- application -> Rake::Application" "== Public Instance Methods" "= class Rake::Task" "refm/api/src/rake/Rake__Task")
(find-rurima "--- application=(app)" "== Public Instance Methods" "= class Rake::Task" "refm/api/src/rake/Rake__Task")
(find-rurima "--- arg_description" "== Public Instance Methods" "= class Rake::Task" "refm/api/src/rake/Rake__Task")
(find-rurima "--- arg_names -> Array" "== Public Instance Methods" "= class Rake::Task" "refm/api/src/rake/Rake__Task")
(find-rurima "--- clear -> self" "== Public Instance Methods" "= class Rake::Task" "refm/api/src/rake/Rake__Task")
(find-rurima "--- clear_actions -> self" "== Public Instance Methods" "= class Rake::Task" "refm/api/src/rake/Rake__Task")
(find-rurima "--- clear_prerequisites -> self" "== Public Instance Methods" "= class Rake::Task" "refm/api/src/rake/Rake__Task")
(find-rurima "--- comment -> String" "== Public Instance Methods" "= class Rake::Task" "refm/api/src/rake/Rake__Task")
(find-rurima "--- comment=(comment)" "== Public Instance Methods" "= class Rake::Task" "refm/api/src/rake/Rake__Task")
(find-rurima "--- enhance(deps = nil){ ... }  -> self" "== Public Instance Methods" "= class Rake::Task" "refm/api/src/rake/Rake__Task")
(find-rurima "--- execute(args = nil)" "== Public Instance Methods" "= class Rake::Task" "refm/api/src/rake/Rake__Task")
(find-rurima "--- full_comment -> String" "== Public Instance Methods" "= class Rake::Task" "refm/api/src/rake/Rake__Task")
(find-rurima "--- inspect -> String" "== Public Instance Methods" "= class Rake::Task" "refm/api/src/rake/Rake__Task")
(find-rurima "--- investigation -> String" "== Public Instance Methods" "= class Rake::Task" "refm/api/src/rake/Rake__Task")
(find-rurima "--- invoke(*args)" "== Public Instance Methods" "= class Rake::Task" "refm/api/src/rake/Rake__Task")
(find-rurima "--- name -> String" "== Public Instance Methods" "= class Rake::Task" "refm/api/src/rake/Rake__Task")
(find-rurima "--- needed? -> true" "== Public Instance Methods" "= class Rake::Task" "refm/api/src/rake/Rake__Task")
(find-rurima "--- prerequisites -> Array" "== Public Instance Methods" "= class Rake::Task" "refm/api/src/rake/Rake__Task")
(find-rurima "--- reenable -> false" "== Public Instance Methods" "= class Rake::Task" "refm/api/src/rake/Rake__Task")
(find-rurima "--- scope" "== Public Instance Methods" "= class Rake::Task" "refm/api/src/rake/Rake__Task")
(find-rurima "--- set_arg_names(args)" "== Public Instance Methods" "= class Rake::Task" "refm/api/src/rake/Rake__Task")
(find-rurima "--- source -> String" "== Public Instance Methods" "= class Rake::Task" "refm/api/src/rake/Rake__Task")
(find-rurima "--- sources -> Array" "== Public Instance Methods" "= class Rake::Task" "refm/api/src/rake/Rake__Task")
(find-rurima "--- sources=(sources)" "== Public Instance Methods" "= class Rake::Task" "refm/api/src/rake/Rake__Task")
(find-rurima "--- timestamp -> Time" "== Public Instance Methods" "= class Rake::Task" "refm/api/src/rake/Rake__Task")
(find-rurima "--- to_s -> String" "== Public Instance Methods" "= class Rake::Task" "refm/api/src/rake/Rake__Task")
(find-rurima "== Singleton Methods" "= class Rake::Task" "refm/api/src/rake/Rake__Task")
(find-rurima "--- new(task_name, app)" "== Singleton Methods" "= class Rake::Task" "refm/api/src/rake/Rake__Task")
(find-rurima "--- [](task_name) -> Rake::Task" "== Singleton Methods" "= class Rake::Task" "refm/api/src/rake/Rake__Task")
(find-rurima "--- clear" "== Singleton Methods" "= class Rake::Task" "refm/api/src/rake/Rake__Task")
(find-rurima "--- create_rule(*args){ ... } -> Rake::Task" "== Singleton Methods" "= class Rake::Task" "refm/api/src/rake/Rake__Task")
(find-rurima "--- define_task(*args){ ... } -> Rake::Task" "== Singleton Methods" "= class Rake::Task" "refm/api/src/rake/Rake__Task")
(find-rurima "--- scope_name(scope, task_name) -> String" "== Singleton Methods" "= class Rake::Task" "refm/api/src/rake/Rake__Task")
(find-rurima "--- task_defined?(task_name) -> bool" "== Singleton Methods" "= class Rake::Task" "refm/api/src/rake/Rake__Task")
(find-rurima "--- tasks -> Array" "== Singleton Methods" "= class Rake::Task" "refm/api/src/rake/Rake__Task")
(find-rurima "= class Rake::FileTask < Rake::Task" "refm/api/src/rake/Rake__FileTask")
(find-rurima "== Public Instance Methods" "= class Rake::FileTask < Rake::Task" "refm/api/src/rake/Rake__FileTask")
(find-rurima "--- needed? -> bool" "== Public Instance Methods" "= class Rake::FileTask < Rake::Task" "refm/api/src/rake/Rake__FileTask")
(find-rurima "--- timestamp -> Time" "== Public Instance Methods" "= class Rake::FileTask < Rake::Task" "refm/api/src/rake/Rake__FileTask")
(find-rurima "== Singleton Methods" "= class Rake::FileTask < Rake::Task" "refm/api/src/rake/Rake__FileTask")
(find-rurima "--- scope_name(scope, task_name) -> String" "== Singleton Methods" "= class Rake::FileTask < Rake::Task" "refm/api/src/rake/Rake__FileTask")
(find-rurima "= module Rake" "refm/api/src/rake/Rake")
(find-rurima "== Singleton Methods" "= module Rake" "refm/api/src/rake/Rake")
(find-rurima "--- application -> Rake::Application" "== Singleton Methods" "= module Rake" "refm/api/src/rake/Rake")
(find-rurima "--- application=(app)" "== Singleton Methods" "= module Rake" "refm/api/src/rake/Rake")
(find-rurima "--- original_dir -> String" "== Singleton Methods" "= module Rake" "refm/api/src/rake/Rake")
(find-rurima "== Constants" "= module Rake" "refm/api/src/rake/Rake")
(find-rurima "--- EARLY -> Rake::EarlyTime" "== Constants" "= module Rake" "refm/api/src/rake/Rake")
(find-rurima "--- EMPTY_TASK_ARGS -> Rake::TaskArguments" "== Constants" "= module Rake" "refm/api/src/rake/Rake")
(find-rurima "= class Rake::RuleRecursionOverflowError < StandardError" "refm/api/src/rake/Rake")
(find-rurima "= class Rake::TaskArgumentError < ArgumentError" "refm/api/src/rake/Rake")
(find-rurima "= class Rake::EarlyTime" "refm/api/src/rake/Rake__EarlyTime")
(find-rurima "== Public Instance Methods" "= class Rake::EarlyTime" "refm/api/src/rake/Rake__EarlyTime")
(find-rurima "--- <=>(other) -> Fixnum" "== Public Instance Methods" "= class Rake::EarlyTime" "refm/api/src/rake/Rake__EarlyTime")
(find-rurima "--- to_s -> String" "== Public Instance Methods" "= class Rake::EarlyTime" "refm/api/src/rake/Rake__EarlyTime")
(find-rurima "= module Rake::TaskManager" "refm/api/src/rake/Rake__TaskManager")
(find-rurima "== Public Instance Methods" "= module Rake::TaskManager" "refm/api/src/rake/Rake__TaskManager")
(find-rurima "--- [](task_name, scopes = nil) -> Rake::Task" "== Public Instance Methods" "= module Rake::TaskManager" "refm/api/src/rake/Rake__TaskManager")
(find-rurima "--- clear" "== Public Instance Methods" "= module Rake::TaskManager" "refm/api/src/rake/Rake__TaskManager")
(find-rurima "--- create_rule(*args){ ... }" "== Public Instance Methods" "= module Rake::TaskManager" "refm/api/src/rake/Rake__TaskManager")
(find-rurima "--- current_scope -> Array" "== Public Instance Methods" "= module Rake::TaskManager" "refm/api/src/rake/Rake__TaskManager")
(find-rurima "--- define_task(task_class, *args){ ... } -> Rake::Task" "== Public Instance Methods" "= module Rake::TaskManager" "refm/api/src/rake/Rake__TaskManager")
(find-rurima "--- enhance_with_matching_rule(task_name, level = 0) -> Rake::Task | nil" "== Public Instance Methods" "= module Rake::TaskManager" "refm/api/src/rake/Rake__TaskManager")
(find-rurima "--- in_namespace(name){|name_space| ... } -> Array" "== Public Instance Methods" "= module Rake::TaskManager" "refm/api/src/rake/Rake__TaskManager")
(find-rurima "--- intern(task_class, task_name) -> Rake::Task" "== Public Instance Methods" "= module Rake::TaskManager" "refm/api/src/rake/Rake__TaskManager")
(find-rurima "--- last_description -> String" "== Public Instance Methods" "= module Rake::TaskManager" "refm/api/src/rake/Rake__TaskManager")
(find-rurima "--- last_comment -> String" "== Public Instance Methods" "= module Rake::TaskManager" "refm/api/src/rake/Rake__TaskManager")
(find-rurima "--- last_description=(description)" "== Public Instance Methods" "= module Rake::TaskManager" "refm/api/src/rake/Rake__TaskManager")
(find-rurima "--- lookup(task_name, initial_scope = nil) -> Rake::Task | nil" "== Public Instance Methods" "= module Rake::TaskManager" "refm/api/src/rake/Rake__TaskManager")
(find-rurima "--- resolve_args(args) -> Array" "== Public Instance Methods" "= module Rake::TaskManager" "refm/api/src/rake/Rake__TaskManager")
(find-rurima "--- synthesize_file_task(task_name) -> Rake::FileTask | nil" "== Public Instance Methods" "= module Rake::TaskManager" "refm/api/src/rake/Rake__TaskManager")
(find-rurima "--- tasks -> Array" "== Public Instance Methods" "= module Rake::TaskManager" "refm/api/src/rake/Rake__TaskManager")
(find-rurima "= class Rake::NameSpace" "refm/api/src/rake/Rake__NameSpace")
(find-rurima "== Public Instance Methods" "= class Rake::NameSpace" "refm/api/src/rake/Rake__NameSpace")
(find-rurima "--- [](name) -> Rake::Task" "== Public Instance Methods" "= class Rake::NameSpace" "refm/api/src/rake/Rake__NameSpace")
(find-rurima "--- tasks -> Array" "== Public Instance Methods" "= class Rake::NameSpace" "refm/api/src/rake/Rake__NameSpace")
(find-rurima "== Singleton Methods" "= class Rake::NameSpace" "refm/api/src/rake/Rake__NameSpace")
(find-rurima "--- new(task_manager, scope_list)" "== Singleton Methods" "= class Rake::NameSpace" "refm/api/src/rake/Rake__NameSpace")
(find-rurima "= class Rake::MultiTask < Rake::Task" "refm/api/src/rake/Rake__MultiTask")
(find-rurima "= class Rake::FileList" "refm/api/src/rake/Rake__FileList")
(find-rurima "== Public Instance Methods" "= class Rake::FileList" "refm/api/src/rake/Rake__FileList")
(find-rurima "--- include(*filenames) -> self" "== Public Instance Methods" "= class Rake::FileList" "refm/api/src/rake/Rake__FileList")
(find-rurima "--- exclude(*patterns){|entry| ... } -> self" "== Public Instance Methods" "= class Rake::FileList" "refm/api/src/rake/Rake__FileList")
(find-rurima "--- clear_exclude -> self" "== Public Instance Methods" "= class Rake::FileList" "refm/api/src/rake/Rake__FileList")
(find-rurima "--- ==(array) -> bool" "== Public Instance Methods" "= class Rake::FileList" "refm/api/src/rake/Rake__FileList")
(find-rurima "--- to_a -> Array" "== Public Instance Methods" "= class Rake::FileList" "refm/api/src/rake/Rake__FileList")
(find-rurima "--- to_ary -> Array" "== Public Instance Methods" "= class Rake::FileList" "refm/api/src/rake/Rake__FileList")
(find-rurima "--- is_a?(klass) -> bool" "== Public Instance Methods" "= class Rake::FileList" "refm/api/src/rake/Rake__FileList")
(find-rurima "--- kind_of?(klass) -> bool" "== Public Instance Methods" "= class Rake::FileList" "refm/api/src/rake/Rake__FileList")
(find-rurima "--- *(other) -> Array | String" "== Public Instance Methods" "= class Rake::FileList" "refm/api/src/rake/Rake__FileList")
(find-rurima "--- resolve -> self" "== Public Instance Methods" "= class Rake::FileList" "refm/api/src/rake/Rake__FileList")
(find-rurima "--- calculate_exclude_regexp" "== Public Instance Methods" "= class Rake::FileList" "refm/api/src/rake/Rake__FileList")
(find-rurima "--- sub(pattern, replace) -> Rake::FileList" "== Public Instance Methods" "= class Rake::FileList" "refm/api/src/rake/Rake__FileList")
(find-rurima "--- gsub(pattern, replace) -> Rake::FileList" "== Public Instance Methods" "= class Rake::FileList" "refm/api/src/rake/Rake__FileList")
(find-rurima "--- sub!(pattern, replace) -> self" "== Public Instance Methods" "= class Rake::FileList" "refm/api/src/rake/Rake__FileList")
(find-rurima "--- gsub!(pattern, replace) -> self" "== Public Instance Methods" "= class Rake::FileList" "refm/api/src/rake/Rake__FileList")
(find-rurima "--- pathmap(spec = nil) -> Rake::FileList" "== Public Instance Methods" "= class Rake::FileList" "refm/api/src/rake/Rake__FileList")
(find-rurima "--- ext(newext = '') -> Rake::FileList" "== Public Instance Methods" "= class Rake::FileList" "refm/api/src/rake/Rake__FileList")
(find-rurima "--- egrep(pattern){|filename, count, line| ... }" "== Public Instance Methods" "= class Rake::FileList" "refm/api/src/rake/Rake__FileList")
(find-rurima "--- existing -> Rake::FileList" "== Public Instance Methods" "= class Rake::FileList" "refm/api/src/rake/Rake__FileList")
(find-rurima "--- existing! -> self" "== Public Instance Methods" "= class Rake::FileList" "refm/api/src/rake/Rake__FileList")
(find-rurima "--- to_s -> String" "== Public Instance Methods" "= class Rake::FileList" "refm/api/src/rake/Rake__FileList")
(find-rurima "--- exclude?(file_name) -> bool" "== Public Instance Methods" "= class Rake::FileList" "refm/api/src/rake/Rake__FileList")
(find-rurima "--- import(array) -> self" "== Public Instance Methods" "= class Rake::FileList" "refm/api/src/rake/Rake__FileList")
(find-rurima "== Singleton Methods" "= class Rake::FileList" "refm/api/src/rake/Rake__FileList")
(find-rurima "--- new(*patterns){|self| ... }" "== Singleton Methods" "= class Rake::FileList" "refm/api/src/rake/Rake__FileList")
(find-rurima "--- [](*args) -> Rake::FileList" "== Singleton Methods" "= class Rake::FileList" "refm/api/src/rake/Rake__FileList")
(find-rurima "== Constants" "= class Rake::FileList" "refm/api/src/rake/Rake__FileList")
(find-rurima "--- ARRAY_METHODS -> Array" "== Constants" "= class Rake::FileList" "refm/api/src/rake/Rake__FileList")
(find-rurima "--- DEFAULT_IGNORE_PATTERNS -> Array" "== Constants" "= class Rake::FileList" "refm/api/src/rake/Rake__FileList")
(find-rurima "--- DEFAULT_IGNORE_PROCS" "== Constants" "= class Rake::FileList" "refm/api/src/rake/Rake__FileList")
(find-rurima "--- DELEGATING_METHODS -> Array" "== Constants" "= class Rake::FileList" "refm/api/src/rake/Rake__FileList")
(find-rurima "--- MUST_DEFINE -> Array" "== Constants" "= class Rake::FileList" "refm/api/src/rake/Rake__FileList")
(find-rurima "--- MUST_NOT_DEFINE -> Array" "== Constants" "= class Rake::FileList" "refm/api/src/rake/Rake__FileList")
(find-rurima "--- SPECIAL_RETURN -> Array" "== Constants" "= class Rake::FileList" "refm/api/src/rake/Rake__FileList")
(find-rurima "= class Rake::PackageTask < Rake::TaskLib" "refm/api/src/rake/packagetask.rd")
(find-rurima "== Public Instance Methods" "= class Rake::PackageTask < Rake::TaskLib" "refm/api/src/rake/packagetask.rd")
(find-rurima "--- define -> self" "== Public Instance Methods" "= class Rake::PackageTask < Rake::TaskLib" "refm/api/src/rake/packagetask.rd")
(find-rurima "--- init(name, version)" "== Public Instance Methods" "= class Rake::PackageTask < Rake::TaskLib" "refm/api/src/rake/packagetask.rd")
(find-rurima "--- name -> String" "== Public Instance Methods" "= class Rake::PackageTask < Rake::TaskLib" "refm/api/src/rake/packagetask.rd")
(find-rurima "--- name=(name)" "== Public Instance Methods" "= class Rake::PackageTask < Rake::TaskLib" "refm/api/src/rake/packagetask.rd")
(find-rurima "--- need_tar -> bool" "== Public Instance Methods" "= class Rake::PackageTask < Rake::TaskLib" "refm/api/src/rake/packagetask.rd")
(find-rurima "--- need_tar=(flag)" "== Public Instance Methods" "= class Rake::PackageTask < Rake::TaskLib" "refm/api/src/rake/packagetask.rd")
(find-rurima "--- need_tar_bz2 -> bool" "== Public Instance Methods" "= class Rake::PackageTask < Rake::TaskLib" "refm/api/src/rake/packagetask.rd")
(find-rurima "--- need_tar_bz2=(flag)" "== Public Instance Methods" "= class Rake::PackageTask < Rake::TaskLib" "refm/api/src/rake/packagetask.rd")
(find-rurima "--- need_tar_gz -> bool" "== Public Instance Methods" "= class Rake::PackageTask < Rake::TaskLib" "refm/api/src/rake/packagetask.rd")
(find-rurima "--- need_tar_gz=(flag)" "== Public Instance Methods" "= class Rake::PackageTask < Rake::TaskLib" "refm/api/src/rake/packagetask.rd")
(find-rurima "--- need_zip -> bool" "== Public Instance Methods" "= class Rake::PackageTask < Rake::TaskLib" "refm/api/src/rake/packagetask.rd")
(find-rurima "--- need_zip=(flag)" "== Public Instance Methods" "= class Rake::PackageTask < Rake::TaskLib" "refm/api/src/rake/packagetask.rd")
(find-rurima "--- package_dir -> String" "== Public Instance Methods" "= class Rake::PackageTask < Rake::TaskLib" "refm/api/src/rake/packagetask.rd")
(find-rurima "--- package_dir=(dirname)" "== Public Instance Methods" "= class Rake::PackageTask < Rake::TaskLib" "refm/api/src/rake/packagetask.rd")
(find-rurima "--- package_dir_path -> String" "== Public Instance Methods" "= class Rake::PackageTask < Rake::TaskLib" "refm/api/src/rake/packagetask.rd")
(find-rurima "--- package_files -> Rake::FileList" "== Public Instance Methods" "= class Rake::PackageTask < Rake::TaskLib" "refm/api/src/rake/packagetask.rd")
(find-rurima "--- package_files=(file_list)" "== Public Instance Methods" "= class Rake::PackageTask < Rake::TaskLib" "refm/api/src/rake/packagetask.rd")
(find-rurima "--- package_name -> String" "== Public Instance Methods" "= class Rake::PackageTask < Rake::TaskLib" "refm/api/src/rake/packagetask.rd")
(find-rurima "--- tar_bz2_file -> String" "== Public Instance Methods" "= class Rake::PackageTask < Rake::TaskLib" "refm/api/src/rake/packagetask.rd")
(find-rurima "--- tar_command -> String" "== Public Instance Methods" "= class Rake::PackageTask < Rake::TaskLib" "refm/api/src/rake/packagetask.rd")
(find-rurima "--- tar_command=(command)" "== Public Instance Methods" "= class Rake::PackageTask < Rake::TaskLib" "refm/api/src/rake/packagetask.rd")
(find-rurima "--- tar_gz_file -> String" "== Public Instance Methods" "= class Rake::PackageTask < Rake::TaskLib" "refm/api/src/rake/packagetask.rd")
(find-rurima "--- tgz_file -> String" "== Public Instance Methods" "= class Rake::PackageTask < Rake::TaskLib" "refm/api/src/rake/packagetask.rd")
(find-rurima "--- version -> String" "== Public Instance Methods" "= class Rake::PackageTask < Rake::TaskLib" "refm/api/src/rake/packagetask.rd")
(find-rurima "--- version=(str)" "== Public Instance Methods" "= class Rake::PackageTask < Rake::TaskLib" "refm/api/src/rake/packagetask.rd")
(find-rurima "--- zip_command -> String" "== Public Instance Methods" "= class Rake::PackageTask < Rake::TaskLib" "refm/api/src/rake/packagetask.rd")
(find-rurima "--- zip_command=(command)" "== Public Instance Methods" "= class Rake::PackageTask < Rake::TaskLib" "refm/api/src/rake/packagetask.rd")
(find-rurima "--- zip_file -> String" "== Public Instance Methods" "= class Rake::PackageTask < Rake::TaskLib" "refm/api/src/rake/packagetask.rd")
(find-rurima "== Singleton Methods" "= class Rake::PackageTask < Rake::TaskLib" "refm/api/src/rake/packagetask.rd")
(find-rurima "--- new(name = nil, version = nil){|t| ... } -> Rake::PackageTask" "== Singleton Methods" "= class Rake::PackageTask < Rake::TaskLib" "refm/api/src/rake/packagetask.rd")
(find-rurima "= class Rake::RDocTask < Rake::TaskLib" "refm/api/src/rake/rdoctask.rd")
(find-rurima "== Public Instance Methods" "= class Rake::RDocTask < Rake::TaskLib" "refm/api/src/rake/rdoctask.rd")
(find-rurima "--- define -> self" "== Public Instance Methods" "= class Rake::RDocTask < Rake::TaskLib" "refm/api/src/rake/rdoctask.rd")
(find-rurima "--- external -> bool" "== Public Instance Methods" "= class Rake::RDocTask < Rake::TaskLib" "refm/api/src/rake/rdoctask.rd")
(find-rurima "--- external=(flag)" "== Public Instance Methods" "= class Rake::RDocTask < Rake::TaskLib" "refm/api/src/rake/rdoctask.rd")
(find-rurima "--- main -> String" "== Public Instance Methods" "= class Rake::RDocTask < Rake::TaskLib" "refm/api/src/rake/rdoctask.rd")
(find-rurima "--- main=(filename)" "== Public Instance Methods" "= class Rake::RDocTask < Rake::TaskLib" "refm/api/src/rake/rdoctask.rd")
(find-rurima "--- name -> String" "== Public Instance Methods" "= class Rake::RDocTask < Rake::TaskLib" "refm/api/src/rake/rdoctask.rd")
(find-rurima "--- name=(name)" "== Public Instance Methods" "= class Rake::RDocTask < Rake::TaskLib" "refm/api/src/rake/rdoctask.rd")
(find-rurima "--- option_list -> Array" "== Public Instance Methods" "= class Rake::RDocTask < Rake::TaskLib" "refm/api/src/rake/rdoctask.rd")
(find-rurima "--- option_string -> String" "== Public Instance Methods" "= class Rake::RDocTask < Rake::TaskLib" "refm/api/src/rake/rdoctask.rd")
(find-rurima "--- options -> Array" "== Public Instance Methods" "= class Rake::RDocTask < Rake::TaskLib" "refm/api/src/rake/rdoctask.rd")
(find-rurima "--- options=(options)" "== Public Instance Methods" "= class Rake::RDocTask < Rake::TaskLib" "refm/api/src/rake/rdoctask.rd")
(find-rurima "--- quote(str) -> String" "== Public Instance Methods" "= class Rake::RDocTask < Rake::TaskLib" "refm/api/src/rake/rdoctask.rd")
(find-rurima "--- rdoc_dir -> String" "== Public Instance Methods" "= class Rake::RDocTask < Rake::TaskLib" "refm/api/src/rake/rdoctask.rd")
(find-rurima "--- rdoc_dir=(dir)" "== Public Instance Methods" "= class Rake::RDocTask < Rake::TaskLib" "refm/api/src/rake/rdoctask.rd")
(find-rurima "--- rdoc_files -> Rake::FileList" "== Public Instance Methods" "= class Rake::RDocTask < Rake::TaskLib" "refm/api/src/rake/rdoctask.rd")
(find-rurima "--- rdoc_files=(filelist)" "== Public Instance Methods" "= class Rake::RDocTask < Rake::TaskLib" "refm/api/src/rake/rdoctask.rd")
(find-rurima "--- template -> String" "== Public Instance Methods" "= class Rake::RDocTask < Rake::TaskLib" "refm/api/src/rake/rdoctask.rd")
(find-rurima "--- template=(template)" "== Public Instance Methods" "= class Rake::RDocTask < Rake::TaskLib" "refm/api/src/rake/rdoctask.rd")
(find-rurima "--- title -> String" "== Public Instance Methods" "= class Rake::RDocTask < Rake::TaskLib" "refm/api/src/rake/rdoctask.rd")
(find-rurima "--- title=(title)" "== Public Instance Methods" "= class Rake::RDocTask < Rake::TaskLib" "refm/api/src/rake/rdoctask.rd")
(find-rurima "== Singleton Methods" "= class Rake::RDocTask < Rake::TaskLib" "refm/api/src/rake/rdoctask.rd")
(find-rurima "--- new(name = :rdoc){|pkg| ... } -> Rake::RDocTask" "== Singleton Methods" "= class Rake::RDocTask < Rake::TaskLib" "refm/api/src/rake/rdoctask.rd")
(find-rurima "= class Rake::MakefileLoader" "refm/api/src/rake/loaders/makefile.rd")
(find-rurima "== Public Instance Methods" "= class Rake::MakefileLoader" "refm/api/src/rake/loaders/makefile.rd")
(find-rurima "--- load(filename)" "== Public Instance Methods" "= class Rake::MakefileLoader" "refm/api/src/rake/loaders/makefile.rd")
(find-rurima "= reopen ObjectSpace" "refm/api/src/objspace.rd")
(find-rurima "== Module Functions" "= reopen ObjectSpace" "refm/api/src/objspace.rd")
(find-rurima "--- count_objects_size(result_hash = nil) -> Hash" "== Module Functions" "= reopen ObjectSpace" "refm/api/src/objspace.rd")
(find-rurima "--- memsize_of(obj) -> Integer" "== Module Functions" "= reopen ObjectSpace" "refm/api/src/objspace.rd")
(find-rurima "--- memsize_of_all(klass = nil) -> Integer" "== Module Functions" "= reopen ObjectSpace" "refm/api/src/objspace.rd")
(find-rurima "--- count_nodes(result_hash = nil) -> Hash" "== Module Functions" "= reopen ObjectSpace" "refm/api/src/objspace.rd")
(find-rurima "--- count_tdata_objects(result_hash = nil) -> Hash" "== Module Functions" "= reopen ObjectSpace" "refm/api/src/objspace.rd")
(find-rurima "=== Rake とは" "refm/api/src/rake.rd")
(find-rurima "=== Rake コマンドの使い方" "refm/api/src/rake.rd")
(find-rurima "=== Rake ファイルの書き方" "refm/api/src/rake.rd")
(find-rurima "=== 用語集" "refm/api/src/rake.rd")
(find-rurima "= class SHA1 < Digest::SHA1" "refm/api/src/sha1.rd")
(find-rurima "= class SHA1" "refm/api/src/sha1.rd")
(find-rurima "== Singleton Methods" "= class SHA1" "refm/api/src/sha1.rd")
(find-rurima "--- new(str = nil) -> SHA1" "== Singleton Methods" "= class SHA1" "refm/api/src/sha1.rd")
(find-rurima "--- orig_new  -> SHA1" "== Singleton Methods" "= class SHA1" "refm/api/src/sha1.rd")
(find-rurima "--- sha1(arg)  -> SHA1" "== Singleton Methods" "= class SHA1" "refm/api/src/sha1.rd")
(find-rurima "= reopen BigMath" "refm/api/src/bigdecimal/math.rd")
(find-rurima "== Module Functions" "= reopen BigMath" "refm/api/src/bigdecimal/math.rd")
(find-rurima "== Instance Methods" "= reopen BigMath" "refm/api/src/bigdecimal/math.rd")
(find-rurima "--- sqrt(x, prec) -> BigDecimal" "== Instance Methods" "= reopen BigMath" "refm/api/src/bigdecimal/math.rd")
(find-rurima "--- sin(x, prec) -> BigDecimal" "== Instance Methods" "= reopen BigMath" "refm/api/src/bigdecimal/math.rd")
(find-rurima "--- cos(x, prec) -> BigDecimal" "== Instance Methods" "= reopen BigMath" "refm/api/src/bigdecimal/math.rd")
(find-rurima "--- atan(x, prec) -> BigDecimal" "== Instance Methods" "= reopen BigMath" "refm/api/src/bigdecimal/math.rd")
(find-rurima "===== 注意" "== Instance Methods" "= reopen BigMath" "refm/api/src/bigdecimal/math.rd")
(find-rurima "--- PI(prec) -> BigDecimal" "===== 注意" "== Instance Methods" "= reopen BigMath" "refm/api/src/bigdecimal/math.rd")
(find-rurima "--- E(prec) -> BigDecimal" "===== 注意" "== Instance Methods" "= reopen BigMath" "refm/api/src/bigdecimal/math.rd")
(find-rurima "= module Newton" "refm/api/src/bigdecimal/newton.rd")
(find-rurima "== Instance Methods" "= module Newton" "refm/api/src/bigdecimal/newton.rd")
(find-rurima "--- norm(fv, zero = 0.0)" "== Instance Methods" "= module Newton" "refm/api/src/bigdecimal/newton.rd")
(find-rurima "--- nlsolve(f, x)" "== Instance Methods" "= module Newton" "refm/api/src/bigdecimal/newton.rd")
(find-rurima "= module Jacobian" "refm/api/src/bigdecimal/jacobian.rd")
(find-rurima "== Instance Methods" "= module Jacobian" "refm/api/src/bigdecimal/jacobian.rd")
(find-rurima "--- isEqual(a, b, zero = 0.0, e = 1.0e-8)" "== Instance Methods" "= module Jacobian" "refm/api/src/bigdecimal/jacobian.rd")
(find-rurima "--- dfdxi(f, fx, x, i)" "== Instance Methods" "= module Jacobian" "refm/api/src/bigdecimal/jacobian.rd")
(find-rurima "--- jacobian(f, fx, x)" "== Instance Methods" "= module Jacobian" "refm/api/src/bigdecimal/jacobian.rd")
(find-rurima "=== はじめに" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "=== 例" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "= reopen Kernel" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "== Module Functions" "= reopen Kernel" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- BigDecimal(s [, n])" "== Module Functions" "= reopen Kernel" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "== Constants" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- BASE" "== Constants" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- EXCEPTION_ALL" "== Constants" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- EXCEPTION_INFINITY" "== Constants" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- EXCEPTION_NaN" "== Constants" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- EXCEPTION_OVERFLOW" "== Constants" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- EXCEPTION_UNDERFLOW" "== Constants" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- EXCEPTION_ZERODIVIDE" "== Constants" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- ROUND_CEILING" "== Constants" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- ROUND_DOWN" "== Constants" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- ROUND_FLOOR" "== Constants" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- ROUND_HALF_DOWN" "== Constants" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- ROUND_HALF_EVEN" "== Constants" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- ROUND_HALF_UP" "== Constants" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- ROUND_MODE" "== Constants" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- ROUND_UP" "== Constants" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- SIGN_NEGATIVE_FINITE" "== Constants" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- SIGN_NEGATIVE_INFINITE" "== Constants" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- SIGN_NEGATIVE_ZERO" "== Constants" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- SIGN_NaN" "== Constants" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- SIGN_POSITIVE_FINITE" "== Constants" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- SIGN_POSITIVE_INFINITE" "== Constants" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- SIGN_POSITIVE_ZERO" "== Constants" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "== Class Methods" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- new(s [, n])" "== Class Methods" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- mode(s [, v])" "== Class Methods" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "==== 例外処理" "== Class Methods" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "==== 丸め処理指定" "== Class Methods" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- limit([n])" "==== 丸め処理指定" "== Class Methods" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- double_fig" "==== 丸め処理指定" "== Class Methods" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- _load(str)" "==== 丸め処理指定" "== Class Methods" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- induced_from(x)" "==== 丸め処理指定" "== Class Methods" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- ver" "==== 丸め処理指定" "== Class Methods" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "== Instance Methods" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- +(other)" "== Instance Methods" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- -(other)" "== Instance Methods" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- *(other)" "== Instance Methods" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- /(other)" "== Instance Methods" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- add(b, n)" "== Instance Methods" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- sub(b, n)" "== Instance Methods" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- mult(b, n)" "== Instance Methods" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- div(b [, n])" "== Instance Methods" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- fix" "== Instance Methods" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- frac" "== Instance Methods" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- floor([n])" "== Instance Methods" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- ceil([n])" "== Instance Methods" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- round(n [, b])" "== Instance Methods" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- truncate" "== Instance Methods" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- abs" "== Instance Methods" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- to_i" "== Instance Methods" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- to_f" "== Instance Methods" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- to_s([n])" "== Instance Methods" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- exponent" "== Instance Methods" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- precs" "== Instance Methods" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- prec" "== Instance Methods" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- sign" "== Instance Methods" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- nan?" "== Instance Methods" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- infinite?" "== Instance Methods" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- finite?" "== Instance Methods" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- zero?" "== Instance Methods" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- nonzero?" "== Instance Methods" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- split" "== Instance Methods" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- inspect" "== Instance Methods" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- **(n)" "== Instance Methods" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- power(n)" "== Instance Methods" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- sqrt(n)" "== Instance Methods" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- divmod(n)" "== Instance Methods" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- quo(n)" "== Instance Methods" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- modulo(n)" "== Instance Methods" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- %(n)" "== Instance Methods" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- remainder(n)" "== Instance Methods" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- <=>(other)" "== Instance Methods" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- ==(other)" "== Instance Methods" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- ===(other)" "== Instance Methods" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- <(other)" "== Instance Methods" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- <=(other)" "== Instance Methods" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- >(other)" "== Instance Methods" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- >=(other)" "== Instance Methods" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- +@" "== Instance Methods" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- -@" "== Instance Methods" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- _dump" "== Instance Methods" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- coerce" "== Instance Methods" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- eql?" "== Instance Methods" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- hash" "== Instance Methods" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "--- to_int" "== Instance Methods" "= class BigDecimal < Numeric" "refm/api/src/bigdecimal/BigDecimal")
(find-rurima "= module BigMath" "refm/api/src/bigdecimal/BigMath")
(find-rurima "== Module Functions" "= module BigMath" "refm/api/src/bigdecimal/BigMath")
(find-rurima "== Instance Methods" "= module BigMath" "refm/api/src/bigdecimal/BigMath")
(find-rurima "--- exp(x, prec) -> BigDecimal" "== Instance Methods" "= module BigMath" "refm/api/src/bigdecimal/BigMath")
(find-rurima "--- log(x, prec) -> BigDecimal" "== Instance Methods" "= module BigMath" "refm/api/src/bigdecimal/BigMath")
(find-rurima "= reopen Float" "refm/api/src/bigdecimal/util.rd")
(find-rurima "== Instance Methods" "= reopen Float" "refm/api/src/bigdecimal/util.rd")
(find-rurima "--- to_d -> BigDecimal" "== Instance Methods" "= reopen Float" "refm/api/src/bigdecimal/util.rd")
(find-rurima "--- to_d(prec) -> BigDecimal" "== Instance Methods" "= reopen Float" "refm/api/src/bigdecimal/util.rd")
(find-rurima "= reopen String" "refm/api/src/bigdecimal/util.rd")
(find-rurima "== Instance Methods" "= reopen String" "refm/api/src/bigdecimal/util.rd")
(find-rurima "--- to_d -> BigDecimal" "== Instance Methods" "= reopen String" "refm/api/src/bigdecimal/util.rd")
(find-rurima "= reopen BigDecimal" "refm/api/src/bigdecimal/util.rd")
(find-rurima "== Instance Methods" "= reopen BigDecimal" "refm/api/src/bigdecimal/util.rd")
(find-rurima "--- to_digits -> String" "== Instance Methods" "= reopen BigDecimal" "refm/api/src/bigdecimal/util.rd")
(find-rurima "--- to_r -> Rational" "== Instance Methods" "= reopen BigDecimal" "refm/api/src/bigdecimal/util.rd")
(find-rurima "--- to_d -> BigDecimal" "== Instance Methods" "= reopen BigDecimal" "refm/api/src/bigdecimal/util.rd")
(find-rurima "= reopen Rational" "refm/api/src/bigdecimal/util.rd")
(find-rurima "== Instance Methods" "= reopen Rational" "refm/api/src/bigdecimal/util.rd")
(find-rurima "--- to_d(nFig = 0) -> BigDecimal" "== Instance Methods" "= reopen Rational" "refm/api/src/bigdecimal/util.rd")
(find-rurima "= reopen Integer" "refm/api/src/bigdecimal/util.rd")
(find-rurima "== Instance Methods" "= reopen Integer" "refm/api/src/bigdecimal/util.rd")
(find-rurima "--- to_d -> BigDecimal" "== Instance Methods" "= reopen Integer" "refm/api/src/bigdecimal/util.rd")
(find-rurima "= module LUSolve" "refm/api/src/bigdecimal/ludcmp.rd")
(find-rurima "== Instance Methods" "= module LUSolve" "refm/api/src/bigdecimal/ludcmp.rd")
(find-rurima "--- ludecomp(a, n, zero = 0, one = 1)" "== Instance Methods" "= module LUSolve" "refm/api/src/bigdecimal/ludcmp.rd")
(find-rurima "--- lusolve(a, b, ps, zero = 0.0)" "== Instance Methods" "= module LUSolve" "refm/api/src/bigdecimal/ludcmp.rd")
(find-rurima "=== 注意" "refm/api/src/ftools.rd")
(find-rurima "=== 概要" "refm/api/src/ftools.rd")
(find-rurima "= reopen File" "refm/api/src/ftools.rd")
(find-rurima "== Class Methods" "= reopen File" "refm/api/src/ftools.rd")
(find-rurima "--- copy(from, to, verbose = false) -> bool" "== Class Methods" "= reopen File" "refm/api/src/ftools.rd")
(find-rurima "--- cp(from, to, verbose = false)  -> bool" "== Class Methods" "= reopen File" "refm/api/src/ftools.rd")
(find-rurima "--- move(from, to, verbose = false) -> bool" "== Class Methods" "= reopen File" "refm/api/src/ftools.rd")
(find-rurima "--- mv(from, to, verbose = false)   -> bool" "== Class Methods" "= reopen File" "refm/api/src/ftools.rd")
(find-rurima "--- compare(from, to, verbose = false) -> bool" "== Class Methods" "= reopen File" "refm/api/src/ftools.rd")
(find-rurima "--- cmp(from, to, verbose = false)     -> bool" "== Class Methods" "= reopen File" "refm/api/src/ftools.rd")
(find-rurima "--- safe_unlink(*files) -> Array" "== Class Methods" "= reopen File" "refm/api/src/ftools.rd")
(find-rurima "--- rm_f(*files)        -> Array" "== Class Methods" "= reopen File" "refm/api/src/ftools.rd")
(find-rurima "--- safe_unlink(*files) -> Integer" "== Class Methods" "= reopen File" "refm/api/src/ftools.rd")
(find-rurima "--- rm_f(*files)        -> Integer" "== Class Methods" "= reopen File" "refm/api/src/ftools.rd")
(find-rurima "--- makedirs(*dirs) -> Array" "== Class Methods" "= reopen File" "refm/api/src/ftools.rd")
(find-rurima "--- mkpath(*dirs)   -> Array" "== Class Methods" "= reopen File" "refm/api/src/ftools.rd")
(find-rurima "--- install(from, to, mode = nil, verbose = false) -> ()" "== Class Methods" "= reopen File" "refm/api/src/ftools.rd")
(find-rurima "--- catname(from, to) -> String" "== Class Methods" "= reopen File" "refm/api/src/ftools.rd")
(find-rurima "--- syscopy(from, to) -> bool" "== Class Methods" "= reopen File" "refm/api/src/ftools.rd")
(find-rurima "= redefine File" "refm/api/src/ftools.rd")
(find-rurima "== Class Methods" "= redefine File" "refm/api/src/ftools.rd")
(find-rurima "--- chmod(mode, *files) -> Integer" "== Class Methods" "= redefine File" "refm/api/src/ftools.rd")
(find-rurima "= class IPAddr < Object" "refm/api/src/ipaddr.rd")
(find-rurima "=== 参照" "= class IPAddr < Object" "refm/api/src/ipaddr.rd")
(find-rurima "== Class Methods" "= class IPAddr < Object" "refm/api/src/ipaddr.rd")
(find-rurima "--- new(addr = '::', family = Socket::AF_UNSPEC) -> IPAddr" "== Class Methods" "= class IPAddr < Object" "refm/api/src/ipaddr.rd")
(find-rurima "--- new_ntoh(addr) -> IPAddr" "== Class Methods" "= class IPAddr < Object" "refm/api/src/ipaddr.rd")
(find-rurima "--- ntop(addr)" "== Class Methods" "= class IPAddr < Object" "refm/api/src/ipaddr.rd")
(find-rurima "== Instance Methods" "= class IPAddr < Object" "refm/api/src/ipaddr.rd")
(find-rurima "--- &(ipaddr) -> IPAddr" "== Instance Methods" "= class IPAddr < Object" "refm/api/src/ipaddr.rd")
(find-rurima "--- |(ipaddr) -> IPAddr" "== Instance Methods" "= class IPAddr < Object" "refm/api/src/ipaddr.rd")
(find-rurima "--- ~ -> IPAddr" "== Instance Methods" "= class IPAddr < Object" "refm/api/src/ipaddr.rd")
(find-rurima "--- >>(num) -> IPAddr" "== Instance Methods" "= class IPAddr < Object" "refm/api/src/ipaddr.rd")
(find-rurima "--- <<(num) -> IPAddr" "== Instance Methods" "= class IPAddr < Object" "refm/api/src/ipaddr.rd")
(find-rurima "--- ==(ipaddr) -> bool" "== Instance Methods" "= class IPAddr < Object" "refm/api/src/ipaddr.rd")
(find-rurima "--- mask(prefixlen)  -> IPAddr" "== Instance Methods" "= class IPAddr < Object" "refm/api/src/ipaddr.rd")
(find-rurima "--- include?(ipaddr) -> bool" "== Instance Methods" "= class IPAddr < Object" "refm/api/src/ipaddr.rd")
(find-rurima "--- ===(ipaddr)      -> bool" "== Instance Methods" "= class IPAddr < Object" "refm/api/src/ipaddr.rd")
(find-rurima "--- to_i -> Integer" "== Instance Methods" "= class IPAddr < Object" "refm/api/src/ipaddr.rd")
(find-rurima "--- to_s -> String" "== Instance Methods" "= class IPAddr < Object" "refm/api/src/ipaddr.rd")
(find-rurima "--- to_string -> String" "== Instance Methods" "= class IPAddr < Object" "refm/api/src/ipaddr.rd")
(find-rurima "--- hton -> String" "== Instance Methods" "= class IPAddr < Object" "refm/api/src/ipaddr.rd")
(find-rurima "--- ipv4? -> bool" "== Instance Methods" "= class IPAddr < Object" "refm/api/src/ipaddr.rd")
(find-rurima "--- ipv6? -> bool" "== Instance Methods" "= class IPAddr < Object" "refm/api/src/ipaddr.rd")
(find-rurima "--- ipv4_mapped? -> bool" "== Instance Methods" "= class IPAddr < Object" "refm/api/src/ipaddr.rd")
(find-rurima "--- ipv4_compat? -> bool" "== Instance Methods" "= class IPAddr < Object" "refm/api/src/ipaddr.rd")
(find-rurima "--- ipv4_mapped -> IPAddr" "== Instance Methods" "= class IPAddr < Object" "refm/api/src/ipaddr.rd")
(find-rurima "--- ipv4_compat -> IPAddr" "== Instance Methods" "= class IPAddr < Object" "refm/api/src/ipaddr.rd")
(find-rurima "--- native -> self | IPAddr" "== Instance Methods" "= class IPAddr < Object" "refm/api/src/ipaddr.rd")
(find-rurima "--- reverse -> String" "== Instance Methods" "= class IPAddr < Object" "refm/api/src/ipaddr.rd")
(find-rurima "--- ip6_arpa -> String" "== Instance Methods" "= class IPAddr < Object" "refm/api/src/ipaddr.rd")
(find-rurima "--- ip6_int -> String" "== Instance Methods" "= class IPAddr < Object" "refm/api/src/ipaddr.rd")
(find-rurima "--- inspect -> String" "== Instance Methods" "= class IPAddr < Object" "refm/api/src/ipaddr.rd")
(find-rurima "--- family -> Integer" "== Instance Methods" "= class IPAddr < Object" "refm/api/src/ipaddr.rd")
(find-rurima "--- <=>(other) -> nil | Integer" "== Instance Methods" "= class IPAddr < Object" "refm/api/src/ipaddr.rd")
(find-rurima "--- succ -> IPAddr" "== Instance Methods" "= class IPAddr < Object" "refm/api/src/ipaddr.rd")
(find-rurima "--- to_range -> Range" "== Instance Methods" "= class IPAddr < Object" "refm/api/src/ipaddr.rd")
(find-rurima "--- eql?(other) -> bool" "== Instance Methods" "= class IPAddr < Object" "refm/api/src/ipaddr.rd")
(find-rurima "--- hash -> Integer" "== Instance Methods" "= class IPAddr < Object" "refm/api/src/ipaddr.rd")
(find-rurima "== Protected Instance Methods" "= class IPAddr < Object" "refm/api/src/ipaddr.rd")
(find-rurima "--- set(addr, *family) -> self" "== Protected Instance Methods" "= class IPAddr < Object" "refm/api/src/ipaddr.rd")
(find-rurima "--- mask!(mask) -> self" "== Protected Instance Methods" "= class IPAddr < Object" "refm/api/src/ipaddr.rd")
(find-rurima "== Constants" "= class IPAddr < Object" "refm/api/src/ipaddr.rd")
(find-rurima "--- IN4MASK" "== Constants" "= class IPAddr < Object" "refm/api/src/ipaddr.rd")
(find-rurima "--- IN6MASK" "== Constants" "= class IPAddr < Object" "refm/api/src/ipaddr.rd")
(find-rurima "--- IN6FORMAT" "== Constants" "= class IPAddr < Object" "refm/api/src/ipaddr.rd")
(find-rurima "= class PStore < Object" "refm/api/src/pstore.rd")
(find-rurima "=== 使い方" "= class PStore < Object" "refm/api/src/pstore.rd")
(find-rurima "== Class Methods" "= class PStore < Object" "refm/api/src/pstore.rd")
(find-rurima "--- new(file, thread_safe = false) -> PStore" "== Class Methods" "= class PStore < Object" "refm/api/src/pstore.rd")
(find-rurima "--- new(file) -> PStore" "== Class Methods" "= class PStore < Object" "refm/api/src/pstore.rd")
(find-rurima "== Instance Methods" "= class PStore < Object" "refm/api/src/pstore.rd")
(find-rurima "--- transaction(read_only = false) {|pstore| ... } -> object" "== Instance Methods" "= class PStore < Object" "refm/api/src/pstore.rd")
(find-rurima "--- [](name) -> object" "== Instance Methods" "= class PStore < Object" "refm/api/src/pstore.rd")
(find-rurima "--- []=(name, value)" "== Instance Methods" "= class PStore < Object" "refm/api/src/pstore.rd")
(find-rurima "--- fetch(name, default = PStore::Error) -> object" "== Instance Methods" "= class PStore < Object" "refm/api/src/pstore.rd")
(find-rurima "--- delete(name) -> object" "== Instance Methods" "= class PStore < Object" "refm/api/src/pstore.rd")
(find-rurima "--- roots -> Array" "== Instance Methods" "= class PStore < Object" "refm/api/src/pstore.rd")
(find-rurima "--- root?(name) -> bool" "== Instance Methods" "= class PStore < Object" "refm/api/src/pstore.rd")
(find-rurima "--- path -> String" "== Instance Methods" "= class PStore < Object" "refm/api/src/pstore.rd")
(find-rurima "--- commit -> ()" "== Instance Methods" "= class PStore < Object" "refm/api/src/pstore.rd")
(find-rurima "--- abort -> ()" "== Instance Methods" "= class PStore < Object" "refm/api/src/pstore.rd")
(find-rurima "--- dump(table) -> String" "== Instance Methods" "= class PStore < Object" "refm/api/src/pstore.rd")
(find-rurima "--- load(content) -> object" "== Instance Methods" "= class PStore < Object" "refm/api/src/pstore.rd")
(find-rurima "--- load_file(file) -> object" "== Instance Methods" "= class PStore < Object" "refm/api/src/pstore.rd")
(find-rurima "--- ultra_safe -> bool" "== Instance Methods" "= class PStore < Object" "refm/api/src/pstore.rd")
(find-rurima "--- ultra_safe=(flag)" "== Instance Methods" "= class PStore < Object" "refm/api/src/pstore.rd")
(find-rurima "== Private Instance Methods" "= class PStore < Object" "refm/api/src/pstore.rd")
(find-rurima "--- in_transaction -> ()" "== Private Instance Methods" "= class PStore < Object" "refm/api/src/pstore.rd")
(find-rurima "== Constants" "= class PStore < Object" "refm/api/src/pstore.rd")
(find-rurima "--- RDWR_ACCESS -> Fixnum" "== Constants" "= class PStore < Object" "refm/api/src/pstore.rd")
(find-rurima "--- RD_ACCESS -> Fixnum" "== Constants" "= class PStore < Object" "refm/api/src/pstore.rd")
(find-rurima "--- WR_ACCESS -> Fixnum" "== Constants" "= class PStore < Object" "refm/api/src/pstore.rd")
(find-rurima "--- EMPTY_MARSHAL_CHECKSUM -> String" "== Constants" "= class PStore < Object" "refm/api/src/pstore.rd")
(find-rurima "--- EMPTY_MARSHAL_DATA -> String" "== Constants" "= class PStore < Object" "refm/api/src/pstore.rd")
(find-rurima "--- EMPTY_STRING -> String" "== Constants" "= class PStore < Object" "refm/api/src/pstore.rd")
(find-rurima "= class PStore::Error < StandardError" "refm/api/src/pstore.rd")
(find-rurima "= class PStore::DummyMutex < Object" "refm/api/src/pstore.rd")
(find-rurima "== Instance Methods" "= class PStore::DummyMutex < Object" "refm/api/src/pstore.rd")
(find-rurima "--- synchronize{ ... } -> object" "== Instance Methods" "= class PStore::DummyMutex < Object" "refm/api/src/pstore.rd")
(find-rurima "=== 使用例" "refm/api/src/cgi.rd")
(find-rurima "==== フォームフィールドの値を得る" "=== 使用例" "refm/api/src/cgi.rd")
(find-rurima "==== フォームフィールドの値をハッシュとして得る" "=== 使用例" "refm/api/src/cgi.rd")
(find-rurima "==== フォームフィールドの値をファイルに保存する" "=== 使用例" "refm/api/src/cgi.rd")
(find-rurima "==== マルチパートフィールドの値を取得する（ファイル送信）" "=== 使用例" "refm/api/src/cgi.rd")
(find-rurima "==== クライアントにクッキーを渡す" "=== 使用例" "refm/api/src/cgi.rd")
(find-rurima "==== クライアントからクッキーを得る" "=== 使用例" "refm/api/src/cgi.rd")
(find-rurima "==== CGI に関連する環境変数の値を取得する" "=== 使用例" "refm/api/src/cgi.rd")
(find-rurima "==== 標準出力に HTTP ヘッダと HTML を出力する" "=== 使用例" "refm/api/src/cgi.rd")
(find-rurima "==== ファイルのアップロード" "=== 使用例" "refm/api/src/cgi.rd")
(find-rurima "=== オフラインモード" "refm/api/src/cgi.rd")
(find-rurima "=== HTMLエレメント出力用メソッド" "refm/api/src/cgi.rd")
(find-rurima "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "=== Complex クラスとの併用" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "== Class Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- [](rows) -> Matrix" "== Class Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- rows(rows, copy = true) -> Matrix" "== Class Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- columns(columns) -> Matrix" "== Class Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "===== 注意" "== Class Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- diagonal(values) -> Matrix" "===== 注意" "== Class Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "===== 注意" "== Class Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- scalar(n, value) -> Matrix" "===== 注意" "== Class Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- identity(n) -> Matrix" "===== 注意" "== Class Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- unit(n) -> Matrix" "===== 注意" "== Class Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- I(n) -> Matrix" "===== 注意" "== Class Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- zero(n) -> Matrix" "===== 注意" "== Class Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- row_vector(row) -> Matrix" "===== 注意" "== Class Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- column_vector(column) -> Matrix" "===== 注意" "== Class Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- build(row_size, column_size) {|row, col| ... } -> Matrix" "===== 注意" "== Class Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "== Instance Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- [](i, j) -> ()" "== Instance Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- element(i, j) -> ()" "== Instance Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- component(i, j) -> ()" "== Instance Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "===== 注意" "== Instance Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- row_size -> Fixnum" "===== 注意" "== Instance Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- column_size -> Fixnum" "===== 注意" "== Instance Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- each {|e| ... } -> self" "===== 注意" "== Instance Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- each_with_index {|e, row, col| ... }  -> self" "===== 注意" "== Instance Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- minor(from_row, row_size, from_col, col_size) -> Matrix" "===== 注意" "== Instance Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- minor(from_row..to_row, from_col..to_col) -> Matrix" "===== 注意" "== Instance Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- *(m) -> Matrix" "===== 注意" "== Instance Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- +(m) -> Matrix" "===== 注意" "== Instance Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- -(m) -> Matrix" "===== 注意" "== Instance Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- /(m) -> Matrix" "===== 注意" "== Instance Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- inverse -> Matrix" "===== 注意" "== Instance Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- inv -> Matrix" "===== 注意" "== Instance Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- **(n) -> Matrix" "===== 注意" "== Instance Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- determinant -> Fixnum | Float" "===== 注意" "== Instance Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- det -> Fixnum | Float" "===== 注意" "== Instance Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- determinant -> Rational | Float" "===== 注意" "== Instance Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- det -> Rational | Float" "===== 注意" "== Instance Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "===== 注意" "== Instance Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- determinant_e -> Rational | Float" "===== 注意" "== Instance Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- det_e -> Rational | Float" "===== 注意" "== Instance Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- rank -> Fixnum" "===== 注意" "== Instance Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- rank_e -> Fixnum" "===== 注意" "== Instance Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- trace -> Fixnum | Float | Rational" "===== 注意" "== Instance Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- tr -> Fixnum | Float | Rational" "===== 注意" "== Instance Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- transpose -> Matrix" "===== 注意" "== Instance Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- t -> Matrix" "===== 注意" "== Instance Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- row(i) -> Vector" "===== 注意" "== Instance Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- row(i) {|x| ... } -> nil" "===== 注意" "== Instance Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "===== 注意" "== Instance Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- column(j) -> Vector" "===== 注意" "== Instance Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- column(j) {|x| ... } -> nil" "===== 注意" "== Instance Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "===== 注意" "== Instance Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- collect {|x| ... } -> Matrix" "===== 注意" "== Instance Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- map {|x| ... } -> Matrix" "===== 注意" "== Instance Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- empty? -> bool" "===== 注意" "== Instance Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- real? -> bool" "===== 注意" "== Instance Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- regular? -> bool" "===== 注意" "== Instance Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- singular? -> bool" "===== 注意" "== Instance Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- square? -> bool" "===== 注意" "== Instance Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- ==(other) -> bool" "===== 注意" "== Instance Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- eql?(other) -> bool" "===== 注意" "== Instance Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- row_vectors -> Array" "===== 注意" "== Instance Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- column_vectors -> Array" "===== 注意" "== Instance Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- to_a -> Array" "===== 注意" "== Instance Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- elements_to_f -> Array" "===== 注意" "== Instance Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- elements_to_i -> Array" "===== 注意" "== Instance Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- elements_to_r -> Array" "===== 注意" "== Instance Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- conjugate -> Matrix" "===== 注意" "== Instance Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- conj -> Matrix" "===== 注意" "== Instance Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- imaginary -> Matrix" "===== 注意" "== Instance Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- imag -> Matrix" "===== 注意" "== Instance Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- real -> Matrix" "===== 注意" "== Instance Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- rectangular -> [Matrix, Matrix]" "===== 注意" "== Instance Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- rect -> [Matrix, Matrix]" "===== 注意" "== Instance Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- coerce(other) -> Array" "===== 注意" "== Instance Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- compare_by_row_vectors(rows) -> bool" "===== 注意" "== Instance Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- inverse_from(src) -> Matrix" "===== 注意" "== Instance Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "===== 注意" "== Instance Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- hash -> Fixnum" "===== 注意" "== Instance Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- to_s -> String" "===== 注意" "== Instance Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- inspect -> String" "===== 注意" "== Instance Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "--- clone -> Matrix" "===== 注意" "== Instance Methods" "= class Matrix < Object" "refm/api/src/matrix/Matrix")
(find-rurima "= class ExceptionForMatrix::ErrDimensionMismatch < StandardError" "refm/api/src/matrix/Matrix")
(find-rurima "= class ExceptionForMatrix::ErrNotRegular < StandardError" "refm/api/src/matrix/Matrix")
(find-rurima "= class ExceptionForMatrix::ErrOperationNotDefined < StandardError" "refm/api/src/matrix/Matrix")
(find-rurima "= class Vector < Object" "refm/api/src/matrix/Vector")
(find-rurima "=== Complexクラスとの併用 Working with Complex class" "= class Vector < Object" "refm/api/src/matrix/Vector")
(find-rurima "== Class Methods" "= class Vector < Object" "refm/api/src/matrix/Vector")
(find-rurima "--- [](*a) -> Vector" "== Class Methods" "= class Vector < Object" "refm/api/src/matrix/Vector")
(find-rurima "--- elements(a, copy = true) -> Vector" "== Class Methods" "= class Vector < Object" "refm/api/src/matrix/Vector")
(find-rurima "== Instance Methods" "= class Vector < Object" "refm/api/src/matrix/Vector")
(find-rurima "--- [](i) -> object | nil" "== Instance Methods" "= class Vector < Object" "refm/api/src/matrix/Vector")
(find-rurima "--- element(i) -> object | nil" "== Instance Methods" "= class Vector < Object" "refm/api/src/matrix/Vector")
(find-rurima "--- component(i) -> object | nil" "== Instance Methods" "= class Vector < Object" "refm/api/src/matrix/Vector")
(find-rurima "--- init_elements(array, copy) -> Array" "== Instance Methods" "= class Vector < Object" "refm/api/src/matrix/Vector")
(find-rurima "===== 注意" "== Instance Methods" "= class Vector < Object" "refm/api/src/matrix/Vector")
(find-rurima "--- size() -> Fixnum" "===== 注意" "== Instance Methods" "= class Vector < Object" "refm/api/src/matrix/Vector")
(find-rurima "--- ==(v) -> bool" "===== 注意" "== Instance Methods" "= class Vector < Object" "refm/api/src/matrix/Vector")
(find-rurima "--- eqn?(v) -> bool" "===== 注意" "== Instance Methods" "= class Vector < Object" "refm/api/src/matrix/Vector")
(find-rurima "--- compare_by(elements) -> bool" "===== 注意" "== Instance Methods" "= class Vector < Object" "refm/api/src/matrix/Vector")
(find-rurima "--- *(a) -> Vector" "===== 注意" "== Instance Methods" "= class Vector < Object" "refm/api/src/matrix/Vector")
(find-rurima "--- *(m) -> Matrix" "===== 注意" "== Instance Methods" "= class Vector < Object" "refm/api/src/matrix/Vector")
(find-rurima "===== 注意" "== Instance Methods" "= class Vector < Object" "refm/api/src/matrix/Vector")
(find-rurima "--- +(v) -> Vector" "===== 注意" "== Instance Methods" "= class Vector < Object" "refm/api/src/matrix/Vector")
(find-rurima "--- -(v) -> Vector" "===== 注意" "== Instance Methods" "= class Vector < Object" "refm/api/src/matrix/Vector")
(find-rurima "--- inner_product(v) -> Float" "===== 注意" "== Instance Methods" "= class Vector < Object" "refm/api/src/matrix/Vector")
(find-rurima "--- r -> Float" "===== 注意" "== Instance Methods" "= class Vector < Object" "refm/api/src/matrix/Vector")
(find-rurima "--- collect {|x| ... } -> Vector" "===== 注意" "== Instance Methods" "= class Vector < Object" "refm/api/src/matrix/Vector")
(find-rurima "--- map {|x| ... } -> Vector" "===== 注意" "== Instance Methods" "= class Vector < Object" "refm/api/src/matrix/Vector")
(find-rurima "--- each2(v) {|x, y| ... }" "===== 注意" "== Instance Methods" "= class Vector < Object" "refm/api/src/matrix/Vector")
(find-rurima "--- collect2(v) {|x, y| ... } -> Array" "===== 注意" "== Instance Methods" "= class Vector < Object" "refm/api/src/matrix/Vector")
(find-rurima "--- map2(v) {|x, y| ... } -> Vector" "===== 注意" "== Instance Methods" "= class Vector < Object" "refm/api/src/matrix/Vector")
(find-rurima "--- covector -> Matrix" "===== 注意" "== Instance Methods" "= class Vector < Object" "refm/api/src/matrix/Vector")
(find-rurima "--- to_a -> Array" "===== 注意" "== Instance Methods" "= class Vector < Object" "refm/api/src/matrix/Vector")
(find-rurima "--- to_s -> String" "===== 注意" "== Instance Methods" "= class Vector < Object" "refm/api/src/matrix/Vector")
(find-rurima "--- elements_to_f -> Vector" "===== 注意" "== Instance Methods" "= class Vector < Object" "refm/api/src/matrix/Vector")
(find-rurima "--- elements_to_i -> Vector" "===== 注意" "== Instance Methods" "= class Vector < Object" "refm/api/src/matrix/Vector")
(find-rurima "--- elements_to_r -> Vector" "===== 注意" "== Instance Methods" "= class Vector < Object" "refm/api/src/matrix/Vector")
(find-rurima "--- hash() -> Fixnum" "===== 注意" "== Instance Methods" "= class Vector < Object" "refm/api/src/matrix/Vector")
(find-rurima "--- clone() -> Vector" "===== 注意" "== Instance Methods" "= class Vector < Object" "refm/api/src/matrix/Vector")
(find-rurima "--- coerce(other) -> Array" "===== 注意" "== Instance Methods" "= class Vector < Object" "refm/api/src/matrix/Vector")
(find-rurima "--- inspect() -> String " "===== 注意" "== Instance Methods" "= class Vector < Object" "refm/api/src/matrix/Vector")
(find-rurima "= class ExceptionForMatrix::ErrDimensionMismatch < StandardError" "refm/api/src/matrix/Vector")
(find-rurima "= class ExceptionForMatrix::ErrNotRegular < StandardError" "refm/api/src/matrix/Vector")
(find-rurima "= class ExceptionForMatrix::ErrOperationNotDefined < StandardError" "refm/api/src/matrix/Vector")
(find-rurima "= module RUNIT::ToPublic" "refm/api/src/runit/topublic.rd")
(find-rurima "= class RUNIT::CUI::TestRunner < Test::Unit::UI::Console::TestRunner" "refm/api/src/runit/cui/testrunner.rd")
(find-rurima "== Class Methods" "= class RUNIT::CUI::TestRunner < Test::Unit::UI::Console::TestRunner" "refm/api/src/runit/cui/testrunner.rd")
(find-rurima "--- new -> RUNIT::CUI::TestRunner" "== Class Methods" "= class RUNIT::CUI::TestRunner < Test::Unit::UI::Console::TestRunner" "refm/api/src/runit/cui/testrunner.rd")
(find-rurima "--- run(suite) -> ()" "== Class Methods" "= class RUNIT::CUI::TestRunner < Test::Unit::UI::Console::TestRunner" "refm/api/src/runit/cui/testrunner.rd")
(find-rurima "--- quiet_mode=(bool)" "== Class Methods" "= class RUNIT::CUI::TestRunner < Test::Unit::UI::Console::TestRunner" "refm/api/src/runit/cui/testrunner.rd")
(find-rurima "== Instance Methods" "= class RUNIT::CUI::TestRunner < Test::Unit::UI::Console::TestRunner" "refm/api/src/runit/cui/testrunner.rd")
(find-rurima "--- run(suite, quiet_mode = @@quiet_mode) -> ()" "== Instance Methods" "= class RUNIT::CUI::TestRunner < Test::Unit::UI::Console::TestRunner" "refm/api/src/runit/cui/testrunner.rd")
(find-rurima "--- create_mediator(suite)" "== Instance Methods" "= class RUNIT::CUI::TestRunner < Test::Unit::UI::Console::TestRunner" "refm/api/src/runit/cui/testrunner.rd")
(find-rurima "--- create_result -> RUNIT::TestResult" "== Instance Methods" "= class RUNIT::CUI::TestRunner < Test::Unit::UI::Console::TestRunner" "refm/api/src/runit/cui/testrunner.rd")
(find-rurima "= class RUNIT::TestSuite < Test::Unit::TestSuite" "refm/api/src/runit/testsuite.rd")
(find-rurima "== Instance Methods" "= class RUNIT::TestSuite < Test::Unit::TestSuite" "refm/api/src/runit/testsuite.rd")
(find-rurima "--- add_test(*args) -> self" "== Instance Methods" "= class RUNIT::TestSuite < Test::Unit::TestSuite" "refm/api/src/runit/testsuite.rd")
(find-rurima "--- add(*args) -> self" "== Instance Methods" "= class RUNIT::TestSuite < Test::Unit::TestSuite" "refm/api/src/runit/testsuite.rd")
(find-rurima "--- count_test_cases -> Integer" "== Instance Methods" "= class RUNIT::TestSuite < Test::Unit::TestSuite" "refm/api/src/runit/testsuite.rd")
(find-rurima "--- run(result) { .... }" "== Instance Methods" "= class RUNIT::TestSuite < Test::Unit::TestSuite" "refm/api/src/runit/testsuite.rd")
(find-rurima "= module RUNIT::Assert" "refm/api/src/runit/assert.rd")
(find-rurima "== Instance Methods" "= module RUNIT::Assert" "refm/api/src/runit/assert.rd")
(find-rurima "--- assert_equal_float(expected, actual, delta, message = \"\") -> ()" "== Instance Methods" "= module RUNIT::Assert" "refm/api/src/runit/assert.rd")
(find-rurima "--- assert_send(object, method, *args) -> ()" "== Instance Methods" "= module RUNIT::Assert" "refm/api/src/runit/assert.rd")
(find-rurima "--- assert_not_nil(actual, message = \"\") -> ()" "== Instance Methods" "= module RUNIT::Assert" "refm/api/src/runit/assert.rd")
(find-rurima "--- assert_respond_to(method, object, message = \"\") -> ()" "== Instance Methods" "= module RUNIT::Assert" "refm/api/src/runit/assert.rd")
(find-rurima "--- assert_match(str, re, message = \"\") -> ()" "== Instance Methods" "= module RUNIT::Assert" "refm/api/src/runit/assert.rd")
(find-rurima "--- assert_matches(str, re, message = \"\") -> ()" "== Instance Methods" "= module RUNIT::Assert" "refm/api/src/runit/assert.rd")
(find-rurima "--- assert_not_match(str, re, message = \"\") -> ()" "== Instance Methods" "= module RUNIT::Assert" "refm/api/src/runit/assert.rd")
(find-rurima "--- assert_exception(exception, message = \"\") { ... } -> ()" "== Instance Methods" "= module RUNIT::Assert" "refm/api/src/runit/assert.rd")
(find-rurima "--- assert_no_exception(*args) { ... }" "== Instance Methods" "= module RUNIT::Assert" "refm/api/src/runit/assert.rd")
(find-rurima "--- assert_fail(message) -> ()" "== Instance Methods" "= module RUNIT::Assert" "refm/api/src/runit/assert.rd")
(find-rurima "--- setup_assert" "== Instance Methods" "= module RUNIT::Assert" "refm/api/src/runit/assert.rd")
(find-rurima "--- called_internally? -> bool" "== Instance Methods" "= module RUNIT::Assert" "refm/api/src/runit/assert.rd")
(find-rurima "= class RUNIT::TestCase < Test::Unit::TestCase" "refm/api/src/runit/testcase.rd")
(find-rurima "== Class Methods" "= class RUNIT::TestCase < Test::Unit::TestCase" "refm/api/src/runit/testcase.rd")
(find-rurima "--- new(test_name, suite_name = RUNIT::TestCase.name) -> RUNIT::TestCase" "== Class Methods" "= class RUNIT::TestCase < Test::Unit::TestCase" "refm/api/src/runit/testcase.rd")
(find-rurima "--- suite -> RUNIT::TestSuite" "== Class Methods" "= class RUNIT::TestCase < Test::Unit::TestCase" "refm/api/src/runit/testcase.rd")
(find-rurima "== Instance Methods" "= class RUNIT::TestCase < Test::Unit::TestCase" "refm/api/src/runit/testcase.rd")
(find-rurima "--- assert_equals(expected, actual, message = nil)" "== Instance Methods" "= class RUNIT::TestCase < Test::Unit::TestCase" "refm/api/src/runit/testcase.rd")
(find-rurima "--- name -> String" "== Instance Methods" "= class RUNIT::TestCase < Test::Unit::TestCase" "refm/api/src/runit/testcase.rd")
(find-rurima "--- run(result) { .... } -> ()" "== Instance Methods" "= class RUNIT::TestCase < Test::Unit::TestCase" "refm/api/src/runit/testcase.rd")
(find-rurima "= class RUNIT::TestResult < Test::Unit::TestResult" "refm/api/src/runit/testresult.rd")
(find-rurima "== Instance Methods" "= class RUNIT::TestResult < Test::Unit::TestResult" "refm/api/src/runit/testresult.rd")
(find-rurima "--- errors -> Array" "== Instance Methods" "= class RUNIT::TestResult < Test::Unit::TestResult" "refm/api/src/runit/testresult.rd")
(find-rurima "--- failures -> Array" "== Instance Methods" "= class RUNIT::TestResult < Test::Unit::TestResult" "refm/api/src/runit/testresult.rd")
(find-rurima "--- succeed? -> bool" "== Instance Methods" "= class RUNIT::TestResult < Test::Unit::TestResult" "refm/api/src/runit/testresult.rd")
(find-rurima "--- failure_size -> Integer" "== Instance Methods" "= class RUNIT::TestResult < Test::Unit::TestResult" "refm/api/src/runit/testresult.rd")
(find-rurima "--- run_asserts -> Integer" "== Instance Methods" "= class RUNIT::TestResult < Test::Unit::TestResult" "refm/api/src/runit/testresult.rd")
(find-rurima "--- error_size -> Integer" "== Instance Methods" "= class RUNIT::TestResult < Test::Unit::TestResult" "refm/api/src/runit/testresult.rd")
(find-rurima "--- run_tests -> Integer" "== Instance Methods" "= class RUNIT::TestResult < Test::Unit::TestResult" "refm/api/src/runit/testresult.rd")
(find-rurima "--- add_failure(failure) -> ()" "== Instance Methods" "= class RUNIT::TestResult < Test::Unit::TestResult" "refm/api/src/runit/testresult.rd")
(find-rurima "--- add_error(error) -> ()" "== Instance Methods" "= class RUNIT::TestResult < Test::Unit::TestResult" "refm/api/src/runit/testresult.rd")
(find-rurima "= class RUNIT::AssertionFailedError" "refm/api/src/runit/error.rd")
(find-rurima "= module RbConfig" "refm/api/src/rbconfig.rd")
(find-rurima "= module Config" "refm/api/src/rbconfig.rd")
(find-rurima "== Singleton Methods" "= module Config" "refm/api/src/rbconfig.rd")
(find-rurima "--- expand(val, config = CONFIG) -> String" "== Singleton Methods" "= module Config" "refm/api/src/rbconfig.rd")
(find-rurima "--- ruby -> String" "== Singleton Methods" "= module Config" "refm/api/src/rbconfig.rd")
(find-rurima "== Constants" "= module Config" "refm/api/src/rbconfig.rd")
(find-rurima "--- DESTDIR -> String" "== Constants" "= module Config" "refm/api/src/rbconfig.rd")
(find-rurima "--- TOPDIR -> String" "== Constants" "= module Config" "refm/api/src/rbconfig.rd")
(find-rurima "--- CONFIG -> Hash" "== Constants" "= module Config" "refm/api/src/rbconfig.rd")
(find-rurima "--- MAKEFILE_CONFIG -> Hash" "== Constants" "= module Config" "refm/api/src/rbconfig.rd")
(find-rurima "=== gem コマンドの使い方" "refm/api/src/rubygems.rd")
(find-rurima "==== Gem パッケージをインストールする" "=== gem コマンドの使い方" "refm/api/src/rubygems.rd")
(find-rurima "==== Gem パッケージをアンインストールする" "=== gem コマンドの使い方" "refm/api/src/rubygems.rd")
(find-rurima "==== Gem パッケージを更新する" "=== gem コマンドの使い方" "refm/api/src/rubygems.rd")
(find-rurima "==== Gem パッケージを探す" "=== gem コマンドの使い方" "refm/api/src/rubygems.rd")
(find-rurima "==== Gem パッケージを作成する" "=== gem コマンドの使い方" "refm/api/src/rubygems.rd")
(find-rurima "=== gem コマンドの設定" "refm/api/src/rubygems.rd")
(find-rurima "=== 参考" "refm/api/src/rubygems.rd")
(find-rurima "= reopen Kernel" "refm/api/src/rubygems.rd")
(find-rurima "== Private Instance Methods" "= reopen Kernel" "refm/api/src/rubygems.rd")
(find-rurima "--- gem(gem_name, *version_requirements) -> bool" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/rubygems.rd")
(find-rurima "==== 環境変数 GEM_SKIP" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/rubygems.rd")
(find-rurima "= module Gem" "refm/api/src/rubygems.rd")
(find-rurima "== Module Functions" "= module Gem" "refm/api/src/rubygems.rd")
(find-rurima "--- clear_paths -> nil" "== Module Functions" "= module Gem" "refm/api/src/rubygems.rd")
(find-rurima "--- marshal_version -> String" "== Module Functions" "= module Gem" "refm/api/src/rubygems.rd")
(find-rurima "--- prefix -> String" "== Module Functions" "= module Gem" "refm/api/src/rubygems.rd")
(find-rurima "--- source_index -> Gem::SourceIndex" "== Module Functions" "= module Gem" "refm/api/src/rubygems.rd")
(find-rurima "--- win_platform? -> bool" "== Module Functions" "= module Gem" "refm/api/src/rubygems.rd")
(find-rurima "--- dir -> String" "== Module Functions" "= module Gem" "refm/api/src/rubygems.rd")
(find-rurima "--- ensure_gem_subdirectories" "== Module Functions" "= module Gem" "refm/api/src/rubygems.rd")
(find-rurima "--- path -> Array" "== Module Functions" "= module Gem" "refm/api/src/rubygems.rd")
(find-rurima "--- set_home" "== Module Functions" "= module Gem" "refm/api/src/rubygems.rd")
(find-rurima "--- set_paths" "== Module Functions" "= module Gem" "refm/api/src/rubygems.rd")
(find-rurima "== Constants" "= module Gem" "refm/api/src/rubygems.rd")
(find-rurima "--- ConfigMap -> Hash" "== Constants" "= module Gem" "refm/api/src/rubygems.rd")
(find-rurima "--- DIRECTORIES -> Array" "== Constants" "= module Gem" "refm/api/src/rubygems.rd")
(find-rurima "--- RubyGemsVersion        -> String" "== Constants" "= module Gem" "refm/api/src/rubygems.rd")
(find-rurima "--- RubyGemsPackageVersion -> String" "== Constants" "= module Gem" "refm/api/src/rubygems.rd")
(find-rurima "--- WIN_PATTERNS -> Array" "== Constants" "= module Gem" "refm/api/src/rubygems.rd")
(find-rurima "= class Gem::LoadError < LoadError" "refm/api/src/rubygems.rd")
(find-rurima "== Public Instance Methods" "= class Gem::LoadError < LoadError" "refm/api/src/rubygems.rd")
(find-rurima "--- name -> String" "== Public Instance Methods" "= class Gem::LoadError < LoadError" "refm/api/src/rubygems.rd")
(find-rurima "--- name=(gem_name)" "== Public Instance Methods" "= class Gem::LoadError < LoadError" "refm/api/src/rubygems.rd")
(find-rurima "--- version_requirement -> Get::Requirement" "== Public Instance Methods" "= class Gem::LoadError < LoadError" "refm/api/src/rubygems.rd")
(find-rurima "--- version_requirement=(version_requirement)" "== Public Instance Methods" "= class Gem::LoadError < LoadError" "refm/api/src/rubygems.rd")
(find-rurima "= module Gem::QuickLoader" "refm/api/src/rubygems.rd")
(find-rurima "== Public Instance Methods" "= module Gem::QuickLoader" "refm/api/src/rubygems.rd")
(find-rurima "--- calculate_integers_for_gem_version" "== Public Instance Methods" "= module Gem::QuickLoader" "refm/api/src/rubygems.rd")
(find-rurima "--- const_missing" "== Public Instance Methods" "= module Gem::QuickLoader" "refm/api/src/rubygems.rd")
(find-rurima "--- method_missing" "== Public Instance Methods" "= module Gem::QuickLoader" "refm/api/src/rubygems.rd")
(find-rurima "--- push_all_highest_version_gems_on_load_path" "== Public Instance Methods" "= module Gem::QuickLoader" "refm/api/src/rubygems.rd")
(find-rurima "--- push_gem_version_on_load_path" "== Public Instance Methods" "= module Gem::QuickLoader" "refm/api/src/rubygems.rd")
(find-rurima "== Singleton Methods" "= module Gem::QuickLoader" "refm/api/src/rubygems.rd")
(find-rurima "--- load_full_rubygems_library" "== Singleton Methods" "= module Gem::QuickLoader" "refm/api/src/rubygems.rd")
(find-rurima "== Constants" "= module Gem::QuickLoader" "refm/api/src/rubygems.rd")
(find-rurima "--- GemPaths -> Hash" "== Constants" "= module Gem::QuickLoader" "refm/api/src/rubygems.rd")
(find-rurima "--- GemVersions -> Hash" "== Constants" "= module Gem::QuickLoader" "refm/api/src/rubygems.rd")
(find-rurima "= class MD5 < Digest::MD5" "refm/api/src/md5.rd")
(find-rurima "= class MD5" "refm/api/src/md5.rd")
(find-rurima "== Class Methods" "= class MD5" "refm/api/src/md5.rd")
(find-rurima "--- new(str = nil) -> MD5" "== Class Methods" "= class MD5" "refm/api/src/md5.rd")
(find-rurima "--- orig_new -> MD5" "== Class Methods" "= class MD5" "refm/api/src/md5.rd")
(find-rurima "--- md5(str) -> MD5" "== Class Methods" "= class MD5" "refm/api/src/md5.rd")
(find-rurima "= reopen WEBrick" "refm/api/src/webrick/httputils.rd")
(find-rurima "== Constants" "= reopen WEBrick" "refm/api/src/webrick/httputils.rd")
(find-rurima "--- CR -> \"\\x0d\"" "== Constants" "= reopen WEBrick" "refm/api/src/webrick/httputils.rd")
(find-rurima "--- CRLF -> \"\\x0d\\x0a\"" "== Constants" "= reopen WEBrick" "refm/api/src/webrick/httputils.rd")
(find-rurima "--- LF -> \"\\x0a\"" "== Constants" "= reopen WEBrick" "refm/api/src/webrick/httputils.rd")
(find-rurima "= redefine WEBrick::Config" "refm/api/src/webrick/https.rd")
(find-rurima "== Constants" "= redefine WEBrick::Config" "refm/api/src/webrick/https.rd")
(find-rurima "--- HTTP -> Hash" "== Constants" "= redefine WEBrick::Config" "refm/api/src/webrick/https.rd")
(find-rurima "= reopen WEBrick::HTTPRequest" "refm/api/src/webrick/https.rd")
(find-rurima "== Instance Methods" "= reopen WEBrick::HTTPRequest" "refm/api/src/webrick/https.rd")
(find-rurima "--- cipher -> Array" "== Instance Methods" "= reopen WEBrick::HTTPRequest" "refm/api/src/webrick/https.rd")
(find-rurima "--- server_cert -> OpenSSL::X509::Certificate" "== Instance Methods" "= reopen WEBrick::HTTPRequest" "refm/api/src/webrick/https.rd")
(find-rurima "--- client_cert -> OpenSSL::X509::Certificate" "== Instance Methods" "= reopen WEBrick::HTTPRequest" "refm/api/src/webrick/https.rd")
(find-rurima "= redefine WEBrick::HTTPRequest" "refm/api/src/webrick/https.rd")
(find-rurima "== Instance Methods" "= redefine WEBrick::HTTPRequest" "refm/api/src/webrick/https.rd")
(find-rurima "--- parse(socket = nil) -> ()" "== Instance Methods" "= redefine WEBrick::HTTPRequest" "refm/api/src/webrick/https.rd")
(find-rurima "--- meta_vars -> Hash" "== Instance Methods" "= redefine WEBrick::HTTPRequest" "refm/api/src/webrick/https.rd")
(find-rurima "= class WEBrick::HTTPServlet::DefaultFileHandler < WEBrick::HTTPServlet::AbstractServlet" "refm/api/src/webrick/httpservlet/filehandler/HTTPServlet__DefaultFileHandler")
(find-rurima "== Class Methods" "= class WEBrick::HTTPServlet::DefaultFileHandler < WEBrick::HTTPServlet::AbstractServlet" "refm/api/src/webrick/httpservlet/filehandler/HTTPServlet__DefaultFileHandler")
(find-rurima "--- new(server, local_path) -> WEBrick::HTTPServlet::DefaultFileHandler" "== Class Methods" "= class WEBrick::HTTPServlet::DefaultFileHandler < WEBrick::HTTPServlet::AbstractServlet" "refm/api/src/webrick/httpservlet/filehandler/HTTPServlet__DefaultFileHandler")
(find-rurima "== Instance Methods" "= class WEBrick::HTTPServlet::DefaultFileHandler < WEBrick::HTTPServlet::AbstractServlet" "refm/api/src/webrick/httpservlet/filehandler/HTTPServlet__DefaultFileHandler")
(find-rurima "--- do_GET(request, response) -> ()" "== Instance Methods" "= class WEBrick::HTTPServlet::DefaultFileHandler < WEBrick::HTTPServlet::AbstractServlet" "refm/api/src/webrick/httpservlet/filehandler/HTTPServlet__DefaultFileHandler")
(find-rurima "--- not_modified?(request, response, mtime, etag) -> bool" "== Instance Methods" "= class WEBrick::HTTPServlet::DefaultFileHandler < WEBrick::HTTPServlet::AbstractServlet" "refm/api/src/webrick/httpservlet/filehandler/HTTPServlet__DefaultFileHandler")
(find-rurima "--- make_partial_content(request, response, filename, filesize)" "== Instance Methods" "= class WEBrick::HTTPServlet::DefaultFileHandler < WEBrick::HTTPServlet::AbstractServlet" "refm/api/src/webrick/httpservlet/filehandler/HTTPServlet__DefaultFileHandler")
(find-rurima "--- prepare_range(range, filesize) -> [Integer, Integer]" "== Instance Methods" "= class WEBrick::HTTPServlet::DefaultFileHandler < WEBrick::HTTPServlet::AbstractServlet" "refm/api/src/webrick/httpservlet/filehandler/HTTPServlet__DefaultFileHandler")
(find-rurima "= class WEBrick::HTTPServlet::FileHandler < WEBrick::HTTPServlet::AbstractServlet" "refm/api/src/webrick/httpservlet/filehandler/HTTPServlet__FileHandler")
(find-rurima "== Class Methods" "= class WEBrick::HTTPServlet::FileHandler < WEBrick::HTTPServlet::AbstractServlet" "refm/api/src/webrick/httpservlet/filehandler/HTTPServlet__FileHandler")
(find-rurima "--- add_handler(suffix, handler)" "== Class Methods" "= class WEBrick::HTTPServlet::FileHandler < WEBrick::HTTPServlet::AbstractServlet" "refm/api/src/webrick/httpservlet/filehandler/HTTPServlet__FileHandler")
(find-rurima "--- remove_handler(suffix) -> Class" "== Class Methods" "= class WEBrick::HTTPServlet::FileHandler < WEBrick::HTTPServlet::AbstractServlet" "refm/api/src/webrick/httpservlet/filehandler/HTTPServlet__FileHandler")
(find-rurima "--- new(server, root, options = {}, default = WEBrick::Config::FileHandler)" "== Class Methods" "= class WEBrick::HTTPServlet::FileHandler < WEBrick::HTTPServlet::AbstractServlet" "refm/api/src/webrick/httpservlet/filehandler/HTTPServlet__FileHandler")
(find-rurima "== Instance Methods" "= class WEBrick::HTTPServlet::FileHandler < WEBrick::HTTPServlet::AbstractServlet" "refm/api/src/webrick/httpservlet/filehandler/HTTPServlet__FileHandler")
(find-rurima "--- service(request, response) -> ()" "== Instance Methods" "= class WEBrick::HTTPServlet::FileHandler < WEBrick::HTTPServlet::AbstractServlet" "refm/api/src/webrick/httpservlet/filehandler/HTTPServlet__FileHandler")
(find-rurima "--- do_GET(request, response) -> ()" "== Instance Methods" "= class WEBrick::HTTPServlet::FileHandler < WEBrick::HTTPServlet::AbstractServlet" "refm/api/src/webrick/httpservlet/filehandler/HTTPServlet__FileHandler")
(find-rurima "--- do_POST(request, response) -> ()" "== Instance Methods" "= class WEBrick::HTTPServlet::FileHandler < WEBrick::HTTPServlet::AbstractServlet" "refm/api/src/webrick/httpservlet/filehandler/HTTPServlet__FileHandler")
(find-rurima "--- do_OPTIONS(request, response) -> ()" "== Instance Methods" "= class WEBrick::HTTPServlet::FileHandler < WEBrick::HTTPServlet::AbstractServlet" "refm/api/src/webrick/httpservlet/filehandler/HTTPServlet__FileHandler")
(find-rurima "== Constants" "= class WEBrick::HTTPServlet::FileHandler < WEBrick::HTTPServlet::AbstractServlet" "refm/api/src/webrick/httpservlet/filehandler/HTTPServlet__FileHandler")
(find-rurima "--- HandlerTable -> Hash" "== Constants" "= class WEBrick::HTTPServlet::FileHandler < WEBrick::HTTPServlet::AbstractServlet" "refm/api/src/webrick/httpservlet/filehandler/HTTPServlet__FileHandler")
(find-rurima "= class WEBrick::HTTPServlet::ProcHandler < WEBrick::HTTPServlet::AbstractServlet" "refm/api/src/webrick/httpservlet/prochandler.rd")
(find-rurima "== Class Methods" "= class WEBrick::HTTPServlet::ProcHandler < WEBrick::HTTPServlet::AbstractServlet" "refm/api/src/webrick/httpservlet/prochandler.rd")
(find-rurima "--- new(proc) -> WEBrick::HTTPServlet::ProcHandler" "== Class Methods" "= class WEBrick::HTTPServlet::ProcHandler < WEBrick::HTTPServlet::AbstractServlet" "refm/api/src/webrick/httpservlet/prochandler.rd")
(find-rurima "== Instance Methods" "= class WEBrick::HTTPServlet::ProcHandler < WEBrick::HTTPServlet::AbstractServlet" "refm/api/src/webrick/httpservlet/prochandler.rd")
(find-rurima "--- get_instance(server, *options) -> self" "== Instance Methods" "= class WEBrick::HTTPServlet::ProcHandler < WEBrick::HTTPServlet::AbstractServlet" "refm/api/src/webrick/httpservlet/prochandler.rd")
(find-rurima "--- do_GET(request, response) -> ()" "== Instance Methods" "= class WEBrick::HTTPServlet::ProcHandler < WEBrick::HTTPServlet::AbstractServlet" "refm/api/src/webrick/httpservlet/prochandler.rd")
(find-rurima "--- do_POST(request, response) -> ()" "== Instance Methods" "= class WEBrick::HTTPServlet::ProcHandler < WEBrick::HTTPServlet::AbstractServlet" "refm/api/src/webrick/httpservlet/prochandler.rd")
(find-rurima "= class WEBrick::HTTPServlet::ERBHandler < WEBrick::HTTPServlet::AbstractServlet" "refm/api/src/webrick/httpservlet/erbhandler.rd")
(find-rurima "== Class Methods" "= class WEBrick::HTTPServlet::ERBHandler < WEBrick::HTTPServlet::AbstractServlet" "refm/api/src/webrick/httpservlet/erbhandler.rd")
(find-rurima "--- new(server, name) -> WEBrick::HTTPServlet::ERBHandler" "== Class Methods" "= class WEBrick::HTTPServlet::ERBHandler < WEBrick::HTTPServlet::AbstractServlet" "refm/api/src/webrick/httpservlet/erbhandler.rd")
(find-rurima "== Instance Methods" "= class WEBrick::HTTPServlet::ERBHandler < WEBrick::HTTPServlet::AbstractServlet" "refm/api/src/webrick/httpservlet/erbhandler.rd")
(find-rurima "--- do_GET(request, response) -> ()" "== Instance Methods" "= class WEBrick::HTTPServlet::ERBHandler < WEBrick::HTTPServlet::AbstractServlet" "refm/api/src/webrick/httpservlet/erbhandler.rd")
(find-rurima "--- do_POST(request, response) -> ()" "== Instance Methods" "= class WEBrick::HTTPServlet::ERBHandler < WEBrick::HTTPServlet::AbstractServlet" "refm/api/src/webrick/httpservlet/erbhandler.rd")
(find-rurima "= class WEBrick::HTTPServlet::HTTPServletError < StandardError" "refm/api/src/webrick/httpservlet/abstract.rd")
(find-rurima "= class WEBrick::HTTPServlet::AbstractServlet < Object" "refm/api/src/webrick/httpservlet/abstract.rd")
(find-rurima "== Class Methods" "= class WEBrick::HTTPServlet::AbstractServlet < Object" "refm/api/src/webrick/httpservlet/abstract.rd")
(find-rurima "--- new(server, *options)    -> WEBrick::HTTPServlet::AbstractServlet" "== Class Methods" "= class WEBrick::HTTPServlet::AbstractServlet < Object" "refm/api/src/webrick/httpservlet/abstract.rd")
(find-rurima "--- get_instance(server, *options)    -> WEBrick::HTTPServlet::AbstractServlet" "== Class Methods" "= class WEBrick::HTTPServlet::AbstractServlet < Object" "refm/api/src/webrick/httpservlet/abstract.rd")
(find-rurima "== Instance Methods" "= class WEBrick::HTTPServlet::AbstractServlet < Object" "refm/api/src/webrick/httpservlet/abstract.rd")
(find-rurima "--- service(request, response)    -> ()" "== Instance Methods" "= class WEBrick::HTTPServlet::AbstractServlet < Object" "refm/api/src/webrick/httpservlet/abstract.rd")
(find-rurima "--- do_GET(request, response)        -> ()" "== Instance Methods" "= class WEBrick::HTTPServlet::AbstractServlet < Object" "refm/api/src/webrick/httpservlet/abstract.rd")
(find-rurima "--- do_HEAD(request, response)       -> ()" "== Instance Methods" "= class WEBrick::HTTPServlet::AbstractServlet < Object" "refm/api/src/webrick/httpservlet/abstract.rd")
(find-rurima "--- do_POST(request, response)       -> ()" "== Instance Methods" "= class WEBrick::HTTPServlet::AbstractServlet < Object" "refm/api/src/webrick/httpservlet/abstract.rd")
(find-rurima "--- do_PUT(request, response)        -> ()" "== Instance Methods" "= class WEBrick::HTTPServlet::AbstractServlet < Object" "refm/api/src/webrick/httpservlet/abstract.rd")
(find-rurima "--- do_DELETE(request, response)     -> ()" "== Instance Methods" "= class WEBrick::HTTPServlet::AbstractServlet < Object" "refm/api/src/webrick/httpservlet/abstract.rd")
(find-rurima "--- do_OPTIONS(request, response)    -> ()" "== Instance Methods" "= class WEBrick::HTTPServlet::AbstractServlet < Object" "refm/api/src/webrick/httpservlet/abstract.rd")
(find-rurima "= class WEBrick::HTTPServlet::CGIHandler < WEBrick::HTTPServlet::AbstractServlet" "refm/api/src/webrick/httpservlet/cgihandler.rd")
(find-rurima "== Class Methods" "= class WEBrick::HTTPServlet::CGIHandler < WEBrick::HTTPServlet::AbstractServlet" "refm/api/src/webrick/httpservlet/cgihandler.rd")
(find-rurima "--- new(server, name) -> WEBrick::HTTPServlet::CGIHandler" "== Class Methods" "= class WEBrick::HTTPServlet::CGIHandler < WEBrick::HTTPServlet::AbstractServlet" "refm/api/src/webrick/httpservlet/cgihandler.rd")
(find-rurima "== Instance Methods" "= class WEBrick::HTTPServlet::CGIHandler < WEBrick::HTTPServlet::AbstractServlet" "refm/api/src/webrick/httpservlet/cgihandler.rd")
(find-rurima "--- do_GET(request, response) -> ()" "== Instance Methods" "= class WEBrick::HTTPServlet::CGIHandler < WEBrick::HTTPServlet::AbstractServlet" "refm/api/src/webrick/httpservlet/cgihandler.rd")
(find-rurima "--- do_POST(request, response) -> ()" "== Instance Methods" "= class WEBrick::HTTPServlet::CGIHandler < WEBrick::HTTPServlet::AbstractServlet" "refm/api/src/webrick/httpservlet/cgihandler.rd")
(find-rurima "== Constants" "= class WEBrick::HTTPServlet::CGIHandler < WEBrick::HTTPServlet::AbstractServlet" "refm/api/src/webrick/httpservlet/cgihandler.rd")
(find-rurima "--- Ruby -> String" "== Constants" "= class WEBrick::HTTPServlet::CGIHandler < WEBrick::HTTPServlet::AbstractServlet" "refm/api/src/webrick/httpservlet/cgihandler.rd")
(find-rurima "--- CGIRunner -> String" "== Constants" "= class WEBrick::HTTPServlet::CGIHandler < WEBrick::HTTPServlet::AbstractServlet" "refm/api/src/webrick/httpservlet/cgihandler.rd")
(find-rurima "= module WEBrick::AccessLog" "refm/api/src/webrick/accesslog.rd")
(find-rurima "== Constants" "= module WEBrick::AccessLog" "refm/api/src/webrick/accesslog.rd")
(find-rurima "--- CLF_TIME_FORMAT -> String" "== Constants" "= module WEBrick::AccessLog" "refm/api/src/webrick/accesslog.rd")
(find-rurima "--- COMMON_LOG_FORMAT -> String" "== Constants" "= module WEBrick::AccessLog" "refm/api/src/webrick/accesslog.rd")
(find-rurima "--- CLF -> String" "== Constants" "= module WEBrick::AccessLog" "refm/api/src/webrick/accesslog.rd")
(find-rurima "--- REFERER_LOG_FORMAT -> String" "== Constants" "= module WEBrick::AccessLog" "refm/api/src/webrick/accesslog.rd")
(find-rurima "--- AGENT_LOG_FORMAT -> String" "== Constants" "= module WEBrick::AccessLog" "refm/api/src/webrick/accesslog.rd")
(find-rurima "--- COMBINED_LOG_FORMAT -> String" "== Constants" "= module WEBrick::AccessLog" "refm/api/src/webrick/accesslog.rd")
(find-rurima "== Module Functions" "= module WEBrick::AccessLog" "refm/api/src/webrick/accesslog.rd")
(find-rurima "--- escape(data) -> String" "== Module Functions" "= module WEBrick::AccessLog" "refm/api/src/webrick/accesslog.rd")
(find-rurima "--- format(format_string, params) -> String" "== Module Functions" "= module WEBrick::AccessLog" "refm/api/src/webrick/accesslog.rd")
(find-rurima "--- setup_params(config, request, response) -> Hash" "== Module Functions" "= module WEBrick::AccessLog" "refm/api/src/webrick/accesslog.rd")
(find-rurima "= class WEBrick::AccessLog::AccessLogError < StandardError" "refm/api/src/webrick/accesslog.rd")
(find-rurima "= object WEBrick::NullReader < Object" "refm/api/src/webrick/httpproxy/NullReader")
(find-rurima "--- read(*args) -> nil" "= object WEBrick::NullReader < Object" "refm/api/src/webrick/httpproxy/NullReader")
(find-rurima "--- gets(*args) -> nil" "= object WEBrick::NullReader < Object" "refm/api/src/webrick/httpproxy/NullReader")
(find-rurima "= class WEBrick::HTTPProxyServer < WEBrick::HTTPServer" "refm/api/src/webrick/httpproxy/HTTPProxyServer")
(find-rurima "== Class Methods" "= class WEBrick::HTTPProxyServer < WEBrick::HTTPServer" "refm/api/src/webrick/httpproxy/HTTPProxyServer")
(find-rurima "--- new(config, default = WEBrick::Config::HTTP)    -> WEBrick::HTTPProxyServer" "== Class Methods" "= class WEBrick::HTTPProxyServer < WEBrick::HTTPServer" "refm/api/src/webrick/httpproxy/HTTPProxyServer")
(find-rurima "= module WEBrick::HTTPAuth" "refm/api/src/webrick/httpauth.rd")
(find-rurima "== Module Functions" "= module WEBrick::HTTPAuth" "refm/api/src/webrick/httpauth.rd")
(find-rurima "--- basic_auth(req, res, realm){|user, pass| ... }     -> nil" "== Module Functions" "= module WEBrick::HTTPAuth" "refm/api/src/webrick/httpauth.rd")
(find-rurima "--- proxy_basic_auth(req, res, realm){|user, pass| ... }     -> nil" "== Module Functions" "= module WEBrick::HTTPAuth" "refm/api/src/webrick/httpauth.rd")
(find-rurima "= class WEBrick::Log < WEBrick::BasicLog" "refm/api/src/webrick/log/Log")
(find-rurima "== Instance Methods" "= class WEBrick::Log < WEBrick::BasicLog" "refm/api/src/webrick/log/Log")
(find-rurima "--- time_format      -> String" "== Instance Methods" "= class WEBrick::Log < WEBrick::BasicLog" "refm/api/src/webrick/log/Log")
(find-rurima "--- time_format=()" "== Instance Methods" "= class WEBrick::Log < WEBrick::BasicLog" "refm/api/src/webrick/log/Log")
(find-rurima "= class WEBrick::BasicLog < Object" "refm/api/src/webrick/log/BasicLog")
(find-rurima "== Class Methods" "= class WEBrick::BasicLog < Object" "refm/api/src/webrick/log/BasicLog")
(find-rurima "--- new(log_file = nil, level = WEBrick::BasicLog::INFO)    -> WEBrick::BasicLog" "== Class Methods" "= class WEBrick::BasicLog < Object" "refm/api/src/webrick/log/BasicLog")
(find-rurima "== Instance Methods" "= class WEBrick::BasicLog < Object" "refm/api/src/webrick/log/BasicLog")
(find-rurima "--- level        -> Integer" "== Instance Methods" "= class WEBrick::BasicLog < Object" "refm/api/src/webrick/log/BasicLog")
(find-rurima "--- level=(lv)" "== Instance Methods" "= class WEBrick::BasicLog < Object" "refm/api/src/webrick/log/BasicLog")
(find-rurima "--- close    -> ()" "== Instance Methods" "= class WEBrick::BasicLog < Object" "refm/api/src/webrick/log/BasicLog")
(find-rurima "--- log(level, msg)    -> ()" "== Instance Methods" "= class WEBrick::BasicLog < Object" "refm/api/src/webrick/log/BasicLog")
(find-rurima "--- <<(obj)    -> ()" "== Instance Methods" "= class WEBrick::BasicLog < Object" "refm/api/src/webrick/log/BasicLog")
(find-rurima "--- fatal(msg)    -> ()" "== Instance Methods" "= class WEBrick::BasicLog < Object" "refm/api/src/webrick/log/BasicLog")
(find-rurima "--- error(msg)    -> ()" "== Instance Methods" "= class WEBrick::BasicLog < Object" "refm/api/src/webrick/log/BasicLog")
(find-rurima "--- warn(msg)    -> ()" "== Instance Methods" "= class WEBrick::BasicLog < Object" "refm/api/src/webrick/log/BasicLog")
(find-rurima "--- info(msg)    -> ()" "== Instance Methods" "= class WEBrick::BasicLog < Object" "refm/api/src/webrick/log/BasicLog")
(find-rurima "--- debug(msg)    -> ()" "== Instance Methods" "= class WEBrick::BasicLog < Object" "refm/api/src/webrick/log/BasicLog")
(find-rurima "--- fatal?    -> bool" "== Instance Methods" "= class WEBrick::BasicLog < Object" "refm/api/src/webrick/log/BasicLog")
(find-rurima "--- error?    -> bool" "== Instance Methods" "= class WEBrick::BasicLog < Object" "refm/api/src/webrick/log/BasicLog")
(find-rurima "--- warn?    -> bool" "== Instance Methods" "= class WEBrick::BasicLog < Object" "refm/api/src/webrick/log/BasicLog")
(find-rurima "--- info?    -> bool" "== Instance Methods" "= class WEBrick::BasicLog < Object" "refm/api/src/webrick/log/BasicLog")
(find-rurima "--- debug?    -> bool" "== Instance Methods" "= class WEBrick::BasicLog < Object" "refm/api/src/webrick/log/BasicLog")
(find-rurima "== Constants" "= class WEBrick::BasicLog < Object" "refm/api/src/webrick/log/BasicLog")
(find-rurima "--- FATAL" "== Constants" "= class WEBrick::BasicLog < Object" "refm/api/src/webrick/log/BasicLog")
(find-rurima "--- ERROR" "== Constants" "= class WEBrick::BasicLog < Object" "refm/api/src/webrick/log/BasicLog")
(find-rurima "--- WARN" "== Constants" "= class WEBrick::BasicLog < Object" "refm/api/src/webrick/log/BasicLog")
(find-rurima "--- INFO" "== Constants" "= class WEBrick::BasicLog < Object" "refm/api/src/webrick/log/BasicLog")
(find-rurima "--- DEBUG" "== Constants" "= class WEBrick::BasicLog < Object" "refm/api/src/webrick/log/BasicLog")
(find-rurima "= module WEBrick::HTTPStatus" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "== Singleton Methods" "= module WEBrick::HTTPStatus" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "--- [](code)    -> Class" "== Singleton Methods" "= module WEBrick::HTTPStatus" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "== Module Functions" "= module WEBrick::HTTPStatus" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "--- reason_phrase(code)     -> String" "== Module Functions" "= module WEBrick::HTTPStatus" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "--- info?(code)    -> bool" "== Module Functions" "= module WEBrick::HTTPStatus" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "--- success?(code)    -> bool" "== Module Functions" "= module WEBrick::HTTPStatus" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "--- redirect?(code)    -> bool" "== Module Functions" "= module WEBrick::HTTPStatus" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "--- error?(code)    -> bool" "== Module Functions" "= module WEBrick::HTTPStatus" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "--- client_error?(code)    -> bool" "== Module Functions" "= module WEBrick::HTTPStatus" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "--- server_error?(code)    -> bool" "== Module Functions" "= module WEBrick::HTTPStatus" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "== Constants" "= module WEBrick::HTTPStatus" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "--- RC_CONTINUE" "== Constants" "= module WEBrick::HTTPStatus" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "--- RC_SWITCHING_PROTOCOLS" "== Constants" "= module WEBrick::HTTPStatus" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "--- RC_OK" "== Constants" "= module WEBrick::HTTPStatus" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "--- RC_CREATED" "== Constants" "= module WEBrick::HTTPStatus" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "--- RC_ACCEPTED" "== Constants" "= module WEBrick::HTTPStatus" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "--- RC_NON_AUTHORITATIVE_INFORMATION" "== Constants" "= module WEBrick::HTTPStatus" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "--- RC_NO_CONTENT" "== Constants" "= module WEBrick::HTTPStatus" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "--- RC_RESET_CONTENT" "== Constants" "= module WEBrick::HTTPStatus" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "--- RC_PARTIAL_CONTENT" "== Constants" "= module WEBrick::HTTPStatus" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "--- RC_MULTIPLE_CHOICES" "== Constants" "= module WEBrick::HTTPStatus" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "--- RC_MOVED_PERMANENTLY" "== Constants" "= module WEBrick::HTTPStatus" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "--- RC_FOUND" "== Constants" "= module WEBrick::HTTPStatus" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "--- RC_SEE_OTHER" "== Constants" "= module WEBrick::HTTPStatus" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "--- RC_NOT_MODIFIED" "== Constants" "= module WEBrick::HTTPStatus" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "--- RC_USE_PROXY" "== Constants" "= module WEBrick::HTTPStatus" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "--- RC_TEMPORARY_REDIRECT" "== Constants" "= module WEBrick::HTTPStatus" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "--- RC_BAD_REQUEST" "== Constants" "= module WEBrick::HTTPStatus" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "--- RC_UNAUTHORIZED" "== Constants" "= module WEBrick::HTTPStatus" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "--- RC_PAYMENT_REQUIRED" "== Constants" "= module WEBrick::HTTPStatus" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "--- RC_FORBIDDEN" "== Constants" "= module WEBrick::HTTPStatus" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "--- RC_NOT_FOUND" "== Constants" "= module WEBrick::HTTPStatus" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "--- RC_METHOD_NOT_ALLOWED" "== Constants" "= module WEBrick::HTTPStatus" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "--- RC_NOT_ACCEPTABLE" "== Constants" "= module WEBrick::HTTPStatus" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "--- RC_PROXY_AUTHENTICATION_REQUIRED" "== Constants" "= module WEBrick::HTTPStatus" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "--- RC_REQUEST_TIMEOUT" "== Constants" "= module WEBrick::HTTPStatus" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "--- RC_CONFLICT" "== Constants" "= module WEBrick::HTTPStatus" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "--- RC_GONE" "== Constants" "= module WEBrick::HTTPStatus" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "--- RC_LENGTH_REQUIRED" "== Constants" "= module WEBrick::HTTPStatus" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "--- RC_PRECONDITION_FAILED" "== Constants" "= module WEBrick::HTTPStatus" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "--- RC_REQUEST_ENTITY_TOO_LARGE" "== Constants" "= module WEBrick::HTTPStatus" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "--- RC_REQUEST_URI_TOO_LARGE" "== Constants" "= module WEBrick::HTTPStatus" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "--- RC_UNSUPPORTED_MEDIA_TYPE" "== Constants" "= module WEBrick::HTTPStatus" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "--- RC_REQUEST_RANGE_NOT_SATISFIABLE" "== Constants" "= module WEBrick::HTTPStatus" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "--- RC_EXPECTATION_FAILED" "== Constants" "= module WEBrick::HTTPStatus" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "--- RC_INTERNAL_SERVER_ERROR" "== Constants" "= module WEBrick::HTTPStatus" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "--- RC_NOT_IMPLEMENTED" "== Constants" "= module WEBrick::HTTPStatus" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "--- RC_BAD_GATEWAY" "== Constants" "= module WEBrick::HTTPStatus" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "--- RC_SERVICE_UNAVAILABLE" "== Constants" "= module WEBrick::HTTPStatus" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "--- RC_GATEWAY_TIMEOUT" "== Constants" "= module WEBrick::HTTPStatus" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "--- RC_HTTP_VERSION_NOT_SUPPORTED" "== Constants" "= module WEBrick::HTTPStatus" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "= class WEBrick::HTTPStatus::Status < StandardError" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "= class WEBrick::HTTPStatus::Info < WEBrick::HTTPStatus::Status" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "= class WEBrick::HTTPStatus::Success < WEBrick::HTTPStatus::Status" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "= class WEBrick::HTTPStatus::Redirect < WEBrick::HTTPStatus::Status" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "= class WEBrick::HTTPStatus::Error < WEBrick::HTTPStatus::Status" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "= class WEBrick::HTTPStatus::ClientError < WEBrick::HTTPStatus::Error" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "= class WEBrick::HTTPStatus::ServerError < WEBrick::HTTPStatus::Error" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "= class WEBrick::HTTPStatus::EOFError < StandardError" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "= class WEBrick::HTTPStatus::Continue < WEBrick::HTTPStatus::Info" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "= class WEBrick::HTTPStatus::SwitchingProtocols < WEBrick::HTTPStatus::Info" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "= class WEBrick::HTTPStatus::OK < WEBrick::HTTPStatus::Success" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "= class WEBrick::HTTPStatus::Created < WEBrick::HTTPStatus::Success" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "= class WEBrick::HTTPStatus::Accepted < WEBrick::HTTPStatus::Success" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "= class WEBrick::HTTPStatus::NonAuthoritativeInformation < WEBrick::HTTPStatus::Success" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "= class WEBrick::HTTPStatus::NoContent < WEBrick::HTTPStatus::Success" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "= class WEBrick::HTTPStatus::ResetContent < WEBrick::HTTPStatus::Success" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "= class WEBrick::HTTPStatus::PartialContent < WEBrick::HTTPStatus::Success" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "= class WEBrick::HTTPStatus::MultipleChoices < WEBrick::HTTPStatus::Redirect" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "= class WEBrick::HTTPStatus::MovedPermanently < WEBrick::HTTPStatus::Redirect" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "= class WEBrick::HTTPStatus::Found < WEBrick::HTTPStatus::Redirect" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "= class WEBrick::HTTPStatus::SeeOther < WEBrick::HTTPStatus::Redirect" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "= class WEBrick::HTTPStatus::NotModified < WEBrick::HTTPStatus::Redirect" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "= class WEBrick::HTTPStatus::UseProxy < WEBrick::HTTPStatus::Redirect" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "= class WEBrick::HTTPStatus::TemporaryRedirect < WEBrick::HTTPStatus::Redirect" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "= class WEBrick::HTTPStatus::BadRequest < WEBrick::HTTPStatus::ClientError" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "= class WEBrick::HTTPStatus::Unauthorized < WEBrick::HTTPStatus::ClientError" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "= class WEBrick::HTTPStatus::PaymentRequired < WEBrick::HTTPStatus::ClientError" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "= class WEBrick::HTTPStatus::Forbidden < WEBrick::HTTPStatus::ClientError" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "= class WEBrick::HTTPStatus::NotFound < WEBrick::HTTPStatus::ClientError" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "= class WEBrick::HTTPStatus::MethodNotAllowed < WEBrick::HTTPStatus::ClientError" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "= class WEBrick::HTTPStatus::NotAcceptable < WEBrick::HTTPStatus::ClientError" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "= class WEBrick::HTTPStatus::ProxyAuthenticationRequired < WEBrick::HTTPStatus::ClientError" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "= class WEBrick::HTTPStatus::RequestTimeout < WEBrick::HTTPStatus::ClientError" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "= class WEBrick::HTTPStatus::Conflict < WEBrick::HTTPStatus::ClientError" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "= class WEBrick::HTTPStatus::Gone < WEBrick::HTTPStatus::ClientError" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "= class WEBrick::HTTPStatus::LengthRequired < WEBrick::HTTPStatus::ClientError" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "= class WEBrick::HTTPStatus::PreconditionFailed < WEBrick::HTTPStatus::ClientError" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "= class WEBrick::HTTPStatus::RequestEntityTooLarge < WEBrick::HTTPStatus::ClientError" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "= class WEBrick::HTTPStatus::RequestURITooLarge < WEBrick::HTTPStatus::ClientError" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "= class WEBrick::HTTPStatus::UnsupportedMediaType < WEBrick::HTTPStatus::ClientError" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "= class WEBrick::HTTPStatus::RequestRangeNotSatisfiable < WEBrick::HTTPStatus::ClientError" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "= class WEBrick::HTTPStatus::ExpectationFailed < WEBrick::HTTPStatus::ClientError" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "= class WEBrick::HTTPStatus::InternalServerError < WEBrick::HTTPStatus::ServerError" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "= class WEBrick::HTTPStatus::NotImplemented < WEBrick::HTTPStatus::ServerError" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "= class WEBrick::HTTPStatus::BadGateway < WEBrick::HTTPStatus::ServerError" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "= class WEBrick::HTTPStatus::ServiceUnavailable < WEBrick::HTTPStatus::ServerError" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "= class WEBrick::HTTPStatus::GatewayTimeout < WEBrick::HTTPStatus::ServerError" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "= class WEBrick::HTTPStatus::HTTPVersionNotSupported < WEBrick::HTTPStatus::ServerError" "refm/api/src/webrick/httpstatus.rd")
(find-rurima "= class Errno::EPROTO < SystemCallError" "refm/api/src/webrick/compat.rd")
(find-rurima "= class Errno::ECONNRESET < SystemCallError" "refm/api/src/webrick/compat.rd")
(find-rurima "= class Errno::ECONNABORTED < SystemCallError" "refm/api/src/webrick/compat.rd")
(find-rurima "= class WEBrick::GenericServer < Object" "refm/api/src/webrick/server/GenericServer")
(find-rurima "== Class Methods" "= class WEBrick::GenericServer < Object" "refm/api/src/webrick/server/GenericServer")
(find-rurima "--- new(config = {}, default = WEBrick::Config::General) -> WEBrick::GenericServer" "== Class Methods" "= class WEBrick::GenericServer < Object" "refm/api/src/webrick/server/GenericServer")
(find-rurima "== Instance Methods" "= class WEBrick::GenericServer < Object" "refm/api/src/webrick/server/GenericServer")
(find-rurima "--- [](key)    -> object" "== Instance Methods" "= class WEBrick::GenericServer < Object" "refm/api/src/webrick/server/GenericServer")
(find-rurima "--- config     -> Hash" "== Instance Methods" "= class WEBrick::GenericServer < Object" "refm/api/src/webrick/server/GenericServer")
(find-rurima "--- listen(address, port) -> [TCPServer]" "== Instance Methods" "= class WEBrick::GenericServer < Object" "refm/api/src/webrick/server/GenericServer")
(find-rurima "--- listeners    -> [TCPServer]" "== Instance Methods" "= class WEBrick::GenericServer < Object" "refm/api/src/webrick/server/GenericServer")
(find-rurima "--- logger    -> WEBrick::Log" "== Instance Methods" "= class WEBrick::GenericServer < Object" "refm/api/src/webrick/server/GenericServer")
(find-rurima "--- shutdown     -> ()" "== Instance Methods" "= class WEBrick::GenericServer < Object" "refm/api/src/webrick/server/GenericServer")
(find-rurima "--- start               -> ()" "== Instance Methods" "= class WEBrick::GenericServer < Object" "refm/api/src/webrick/server/GenericServer")
(find-rurima "--- start{|soc| ... }   -> ()" "== Instance Methods" "= class WEBrick::GenericServer < Object" "refm/api/src/webrick/server/GenericServer")
(find-rurima "--- status    -> Symbol" "== Instance Methods" "= class WEBrick::GenericServer < Object" "refm/api/src/webrick/server/GenericServer")
(find-rurima "--- stop    -> ()" "== Instance Methods" "= class WEBrick::GenericServer < Object" "refm/api/src/webrick/server/GenericServer")
(find-rurima "--- tokens    -> SizedQueue" "== Instance Methods" "= class WEBrick::GenericServer < Object" "refm/api/src/webrick/server/GenericServer")
(find-rurima "--- run(sock)    -> ()" "== Instance Methods" "= class WEBrick::GenericServer < Object" "refm/api/src/webrick/server/GenericServer")
(find-rurima "= class WEBrick::SimpleServer < Object" "refm/api/src/webrick/server/SimpleServer")
(find-rurima "= class WEBrick::ServerError < StandardError" "refm/api/src/webrick/server/ServerError")
(find-rurima "= class WEBrick::Daemon < Object" "refm/api/src/webrick/server/Daemon")
(find-rurima "=== 使い方" "refm/api/src/webrick/cgi.rd")
(find-rurima "==== do_XXX メソッド" "=== 使い方" "refm/api/src/webrick/cgi.rd")
(find-rurima "==== フォームフィールドの値を得る" "=== 使い方" "refm/api/src/webrick/cgi.rd")
(find-rurima "==== マルチパートフィールドの値を取得する（ファイル送信）" "=== 使い方" "refm/api/src/webrick/cgi.rd")
(find-rurima "==== クライアントにクッキーを渡す" "=== 使い方" "refm/api/src/webrick/cgi.rd")
(find-rurima "==== クライアントからクッキーを得る" "=== 使い方" "refm/api/src/webrick/cgi.rd")
(find-rurima "==== CGI に関連する環境変数の値を取得する" "=== 使い方" "refm/api/src/webrick/cgi.rd")
(find-rurima "=== リンク" "refm/api/src/webrick/cgi.rd")
(find-rurima "= class WEBrick::CGI < Object" "refm/api/src/webrick/cgi.rd")
(find-rurima "== Class Methods" "= class WEBrick::CGI < Object" "refm/api/src/webrick/cgi.rd")
(find-rurima "--- new(config = {}, *options)    -> WEBrick::CGI" "== Class Methods" "= class WEBrick::CGI < Object" "refm/api/src/webrick/cgi.rd")
(find-rurima "== Instance Methods" "= class WEBrick::CGI < Object" "refm/api/src/webrick/cgi.rd")
(find-rurima "--- [](key)    -> object" "== Instance Methods" "= class WEBrick::CGI < Object" "refm/api/src/webrick/cgi.rd")
(find-rurima "--- config     -> Hash" "== Instance Methods" "= class WEBrick::CGI < Object" "refm/api/src/webrick/cgi.rd")
(find-rurima "--- logger     -> WEBrick::BasicLog " "== Instance Methods" "= class WEBrick::CGI < Object" "refm/api/src/webrick/cgi.rd")
(find-rurima "--- service(req, res)     -> ()" "== Instance Methods" "= class WEBrick::CGI < Object" "refm/api/src/webrick/cgi.rd")
(find-rurima "--- start(env = ENV, stdin = $stdin, stdout = $stdout)     -> ()" "== Instance Methods" "= class WEBrick::CGI < Object" "refm/api/src/webrick/cgi.rd")
(find-rurima "= class WEBrick::CGI::CGIError < StandardError" "refm/api/src/webrick/cgi.rd")
(find-rurima "= class WEBrick::HTTPResponse < Object" "refm/api/src/webrick/httpresponse.rd")
(find-rurima "== Class Methods" "= class WEBrick::HTTPResponse < Object" "refm/api/src/webrick/httpresponse.rd")
(find-rurima "--- new(config) -> WEBrick::HTTPResponse" "== Class Methods" "= class WEBrick::HTTPResponse < Object" "refm/api/src/webrick/httpresponse.rd")
(find-rurima "== Instance Methods" "= class WEBrick::HTTPResponse < Object" "refm/api/src/webrick/httpresponse.rd")
(find-rurima "--- [](field)    -> String" "== Instance Methods" "= class WEBrick::HTTPResponse < Object" "refm/api/src/webrick/httpresponse.rd")
(find-rurima "--- []=(field, val)" "== Instance Methods" "= class WEBrick::HTTPResponse < Object" "refm/api/src/webrick/httpresponse.rd")
(find-rurima "--- body        -> String | IO" "== Instance Methods" "= class WEBrick::HTTPResponse < Object" "refm/api/src/webrick/httpresponse.rd")
(find-rurima "--- body=(val)" "== Instance Methods" "= class WEBrick::HTTPResponse < Object" "refm/api/src/webrick/httpresponse.rd")
(find-rurima "--- chunked?     -> bool" "== Instance Methods" "= class WEBrick::HTTPResponse < Object" "refm/api/src/webrick/httpresponse.rd")
(find-rurima "--- chunked=(flag)" "== Instance Methods" "= class WEBrick::HTTPResponse < Object" "refm/api/src/webrick/httpresponse.rd")
(find-rurima "--- config    -> Hash" "== Instance Methods" "= class WEBrick::HTTPResponse < Object" "refm/api/src/webrick/httpresponse.rd")
(find-rurima "--- content_length         -> Integer | nil" "== Instance Methods" "= class WEBrick::HTTPResponse < Object" "refm/api/src/webrick/httpresponse.rd")
(find-rurima "--- content_length=(len)" "== Instance Methods" "= class WEBrick::HTTPResponse < Object" "refm/api/src/webrick/httpresponse.rd")
(find-rurima "--- content_type         -> String | nil" "== Instance Methods" "= class WEBrick::HTTPResponse < Object" "refm/api/src/webrick/httpresponse.rd")
(find-rurima "--- content_type=(val)" "== Instance Methods" "= class WEBrick::HTTPResponse < Object" "refm/api/src/webrick/httpresponse.rd")
(find-rurima "--- cookies    -> [WEBrick::Cookie]" "== Instance Methods" "= class WEBrick::HTTPResponse < Object" "refm/api/src/webrick/httpresponse.rd")
(find-rurima "--- each{|key, val| ... }" "== Instance Methods" "= class WEBrick::HTTPResponse < Object" "refm/api/src/webrick/httpresponse.rd")
(find-rurima "--- filename            -> String | nil" "== Instance Methods" "= class WEBrick::HTTPResponse < Object" "refm/api/src/webrick/httpresponse.rd")
(find-rurima "--- filename=(file)" "== Instance Methods" "= class WEBrick::HTTPResponse < Object" "refm/api/src/webrick/httpresponse.rd")
(find-rurima "--- header     -> Hash" "== Instance Methods" "= class WEBrick::HTTPResponse < Object" "refm/api/src/webrick/httpresponse.rd")
(find-rurima "--- http_version    -> WEBrick::HTTPVersion" "== Instance Methods" "= class WEBrick::HTTPResponse < Object" "refm/api/src/webrick/httpresponse.rd")
(find-rurima "--- keep_alive?        -> bool" "== Instance Methods" "= class WEBrick::HTTPResponse < Object" "refm/api/src/webrick/httpresponse.rd")
(find-rurima "--- keep_alive         -> bool" "== Instance Methods" "= class WEBrick::HTTPResponse < Object" "refm/api/src/webrick/httpresponse.rd")
(find-rurima "--- keep_alive=(flag)" "== Instance Methods" "= class WEBrick::HTTPResponse < Object" "refm/api/src/webrick/httpresponse.rd")
(find-rurima "--- reason_phrase         -> String | nil" "== Instance Methods" "= class WEBrick::HTTPResponse < Object" "refm/api/src/webrick/httpresponse.rd")
(find-rurima "--- reason_phrase=(val)" "== Instance Methods" "= class WEBrick::HTTPResponse < Object" "refm/api/src/webrick/httpresponse.rd")
(find-rurima "--- request_http_version           -> WEBrick::HTTPVersion" "== Instance Methods" "= class WEBrick::HTTPResponse < Object" "refm/api/src/webrick/httpresponse.rd")
(find-rurima "--- request_http_version=(ver)" "== Instance Methods" "= class WEBrick::HTTPResponse < Object" "refm/api/src/webrick/httpresponse.rd")
(find-rurima "--- request_method          -> String | nil" "== Instance Methods" "= class WEBrick::HTTPResponse < Object" "refm/api/src/webrick/httpresponse.rd")
(find-rurima "--- request_method=(method)" "== Instance Methods" "= class WEBrick::HTTPResponse < Object" "refm/api/src/webrick/httpresponse.rd")
(find-rurima "--- request_uri        -> URI | nil" "== Instance Methods" "= class WEBrick::HTTPResponse < Object" "refm/api/src/webrick/httpresponse.rd")
(find-rurima "--- request_uri=(uri)" "== Instance Methods" "= class WEBrick::HTTPResponse < Object" "refm/api/src/webrick/httpresponse.rd")
(find-rurima "--- sent_size    -> Integer" "== Instance Methods" "= class WEBrick::HTTPResponse < Object" "refm/api/src/webrick/httpresponse.rd")
(find-rurima "--- set_error(status, backtrace = false)    -> ()" "== Instance Methods" "= class WEBrick::HTTPResponse < Object" "refm/api/src/webrick/httpresponse.rd")
(find-rurima "--- set_redirect(status, url)    -> ()" "== Instance Methods" "= class WEBrick::HTTPResponse < Object" "refm/api/src/webrick/httpresponse.rd")
(find-rurima "--- status           -> Integer" "== Instance Methods" "= class WEBrick::HTTPResponse < Object" "refm/api/src/webrick/httpresponse.rd")
(find-rurima "--- status=(status)" "== Instance Methods" "= class WEBrick::HTTPResponse < Object" "refm/api/src/webrick/httpresponse.rd")
(find-rurima "--- status_line    -> String" "== Instance Methods" "= class WEBrick::HTTPResponse < Object" "refm/api/src/webrick/httpresponse.rd")
(find-rurima "--- to_s    -> String" "== Instance Methods" "= class WEBrick::HTTPResponse < Object" "refm/api/src/webrick/httpresponse.rd")
(find-rurima "= class WEBrick::HTTPVersion < Object" "refm/api/src/webrick/httpversion.rd")
(find-rurima "== Class Methods" "= class WEBrick::HTTPVersion < Object" "refm/api/src/webrick/httpversion.rd")
(find-rurima "--- new(version)    -> WEBrick::HTTPVersion" "== Class Methods" "= class WEBrick::HTTPVersion < Object" "refm/api/src/webrick/httpversion.rd")
(find-rurima "--- convert(version)    -> WEBrick::HTTPVersion" "== Class Methods" "= class WEBrick::HTTPVersion < Object" "refm/api/src/webrick/httpversion.rd")
(find-rurima "== Instance Methods" "= class WEBrick::HTTPVersion < Object" "refm/api/src/webrick/httpversion.rd")
(find-rurima "--- <=>(other)    -> -1 | 0 | 1 | nil" "== Instance Methods" "= class WEBrick::HTTPVersion < Object" "refm/api/src/webrick/httpversion.rd")
(find-rurima "--- major      -> Integer" "== Instance Methods" "= class WEBrick::HTTPVersion < Object" "refm/api/src/webrick/httpversion.rd")
(find-rurima "--- major=(n)" "== Instance Methods" "= class WEBrick::HTTPVersion < Object" "refm/api/src/webrick/httpversion.rd")
(find-rurima "--- minor      -> Integer" "== Instance Methods" "= class WEBrick::HTTPVersion < Object" "refm/api/src/webrick/httpversion.rd")
(find-rurima "--- minor=(n)" "== Instance Methods" "= class WEBrick::HTTPVersion < Object" "refm/api/src/webrick/httpversion.rd")
(find-rurima "--- to_s    -> String" "== Instance Methods" "= class WEBrick::HTTPVersion < Object" "refm/api/src/webrick/httpversion.rd")
(find-rurima "= class WEBrick::HTTPServerError < WEBrick::ServerError" "refm/api/src/webrick/httpserver.rd")
(find-rurima "= module WEBrick::Utils" "refm/api/src/webrick/utils.rd")
(find-rurima "== Module Functions" "= module WEBrick::Utils" "refm/api/src/webrick/utils.rd")
(find-rurima "--- set_non_blocking(io)    -> ()" "== Module Functions" "= module WEBrick::Utils" "refm/api/src/webrick/utils.rd")
(find-rurima "--- set_close_on_exec(io)    -> ()" "== Module Functions" "= module WEBrick::Utils" "refm/api/src/webrick/utils.rd")
(find-rurima "--- su(user) -> ()" "== Module Functions" "= module WEBrick::Utils" "refm/api/src/webrick/utils.rd")
(find-rurima "--- getservername    -> String" "== Module Functions" "= module WEBrick::Utils" "refm/api/src/webrick/utils.rd")
(find-rurima "--- random_string(len)    -> String" "== Module Functions" "= module WEBrick::Utils" "refm/api/src/webrick/utils.rd")
(find-rurima "--- create_listeners(address, port, logger = nil) -> [TCPServer]" "== Module Functions" "= module WEBrick::Utils" "refm/api/src/webrick/utils.rd")
(find-rurima "= module WEBrick::Config" "refm/api/src/webrick/config.rd")
(find-rurima "== Constants" "= module WEBrick::Config" "refm/api/src/webrick/config.rd")
(find-rurima "--- General -> Hash" "== Constants" "= module WEBrick::Config" "refm/api/src/webrick/config.rd")
(find-rurima "--- HTTP -> Hash" "== Constants" "= module WEBrick::Config" "refm/api/src/webrick/config.rd")
(find-rurima "--- FileHandler -> Hash" "== Constants" "= module WEBrick::Config" "refm/api/src/webrick/config.rd")
(find-rurima "--- BasicAuth -> Hash" "== Constants" "= module WEBrick::Config" "refm/api/src/webrick/config.rd")
(find-rurima "--- DigestAuth -> Hash" "== Constants" "= module WEBrick::Config" "refm/api/src/webrick/config.rd")
(find-rurima "--- LIBDIR -> String" "== Constants" "= module WEBrick::Config" "refm/api/src/webrick/config.rd")
(find-rurima "= module WEBrick::HTMLUtils" "refm/api/src/webrick/htmlutils.rd")
(find-rurima "== Module Functions" "= module WEBrick::HTMLUtils" "refm/api/src/webrick/htmlutils.rd")
(find-rurima "--- escape(string)    -> String" "== Module Functions" "= module WEBrick::HTMLUtils" "refm/api/src/webrick/htmlutils.rd")
(find-rurima "= module WEBrick::HTTPUtils" "refm/api/src/webrick/httputils/HTTPUtils")
(find-rurima "== Module Functions" "= module WEBrick::HTTPUtils" "refm/api/src/webrick/httputils/HTTPUtils")
(find-rurima "--- load_mime_types(file)    -> Hash" "== Module Functions" "= module WEBrick::HTTPUtils" "refm/api/src/webrick/httputils/HTTPUtils")
(find-rurima "--- mime_type(filename, mime_tab)    -> String" "== Module Functions" "= module WEBrick::HTTPUtils" "refm/api/src/webrick/httputils/HTTPUtils")
(find-rurima "--- parse_header(raw) -> Hash" "== Module Functions" "= module WEBrick::HTTPUtils" "refm/api/src/webrick/httputils/HTTPUtils")
(find-rurima "--- split_header_value(str) -> Array" "== Module Functions" "= module WEBrick::HTTPUtils" "refm/api/src/webrick/httputils/HTTPUtils")
(find-rurima "--- parse_range_header(ranges_specifier)" "== Module Functions" "= module WEBrick::HTTPUtils" "refm/api/src/webrick/httputils/HTTPUtils")
(find-rurima "--- dequote(str) -> String" "== Module Functions" "= module WEBrick::HTTPUtils" "refm/api/src/webrick/httputils/HTTPUtils")
(find-rurima "--- quote(str) -> String" "== Module Functions" "= module WEBrick::HTTPUtils" "refm/api/src/webrick/httputils/HTTPUtils")
(find-rurima "--- escape(str) -> String" "== Module Functions" "= module WEBrick::HTTPUtils" "refm/api/src/webrick/httputils/HTTPUtils")
(find-rurima "--- unescape(str) -> String" "== Module Functions" "= module WEBrick::HTTPUtils" "refm/api/src/webrick/httputils/HTTPUtils")
(find-rurima "--- escape_path(str) -> String" "== Module Functions" "= module WEBrick::HTTPUtils" "refm/api/src/webrick/httputils/HTTPUtils")
(find-rurima "--- escape8bit(str) -> String" "== Module Functions" "= module WEBrick::HTTPUtils" "refm/api/src/webrick/httputils/HTTPUtils")
(find-rurima "== Constants" "= module WEBrick::HTTPUtils" "refm/api/src/webrick/httputils/HTTPUtils")
(find-rurima "--- DefaultMimeTypes -> Hash" "== Constants" "= module WEBrick::HTTPUtils" "refm/api/src/webrick/httputils/HTTPUtils")
(find-rurima "= class WEBrick::HTTPUtils::FormData < String" "refm/api/src/webrick/httputils/HTTPUtils__FormData")
(find-rurima "=== リンク" "= class WEBrick::HTTPUtils::FormData < String" "refm/api/src/webrick/httputils/HTTPUtils__FormData")
(find-rurima "== Class Methods" "= class WEBrick::HTTPUtils::FormData < String" "refm/api/src/webrick/httputils/HTTPUtils__FormData")
(find-rurima "--- new(*args)   -> WEBrick::HTTPUtils::FormData" "== Class Methods" "= class WEBrick::HTTPUtils::FormData < String" "refm/api/src/webrick/httputils/HTTPUtils__FormData")
(find-rurima "== Instance Methods" "= class WEBrick::HTTPUtils::FormData < String" "refm/api/src/webrick/httputils/HTTPUtils__FormData")
(find-rurima "--- name          -> String | nil" "== Instance Methods" "= class WEBrick::HTTPUtils::FormData < String" "refm/api/src/webrick/httputils/HTTPUtils__FormData")
(find-rurima "--- name=(value)" "== Instance Methods" "= class WEBrick::HTTPUtils::FormData < String" "refm/api/src/webrick/httputils/HTTPUtils__FormData")
(find-rurima "--- filename         -> String | nil" "== Instance Methods" "= class WEBrick::HTTPUtils::FormData < String" "refm/api/src/webrick/httputils/HTTPUtils__FormData")
(find-rurima "--- filename=(value)" "== Instance Methods" "= class WEBrick::HTTPUtils::FormData < String" "refm/api/src/webrick/httputils/HTTPUtils__FormData")
(find-rurima "--- [](header)    -> String | nil" "== Instance Methods" "= class WEBrick::HTTPUtils::FormData < String" "refm/api/src/webrick/httputils/HTTPUtils__FormData")
(find-rurima "--- <<(str)    -> self" "== Instance Methods" "= class WEBrick::HTTPUtils::FormData < String" "refm/api/src/webrick/httputils/HTTPUtils__FormData")
(find-rurima "--- append_data(data)   -> self" "== Instance Methods" "= class WEBrick::HTTPUtils::FormData < String" "refm/api/src/webrick/httputils/HTTPUtils__FormData")
(find-rurima "--- each_data{|s| ... }" "== Instance Methods" "= class WEBrick::HTTPUtils::FormData < String" "refm/api/src/webrick/httputils/HTTPUtils__FormData")
(find-rurima "--- list      -> Array" "== Instance Methods" "= class WEBrick::HTTPUtils::FormData < String" "refm/api/src/webrick/httputils/HTTPUtils__FormData")
(find-rurima "--- to_ary    -> Array" "== Instance Methods" "= class WEBrick::HTTPUtils::FormData < String" "refm/api/src/webrick/httputils/HTTPUtils__FormData")
(find-rurima "--- to_s      -> String" "== Instance Methods" "= class WEBrick::HTTPUtils::FormData < String" "refm/api/src/webrick/httputils/HTTPUtils__FormData")
(find-rurima "= module WEBrick::HTTPAuth::ProxyAuthenticator" "refm/api/src/webrick/httpauth/authenticator/HTTPAuth__ProxyAuthenticator")
(find-rurima "== Constants" "= module WEBrick::HTTPAuth::ProxyAuthenticator" "refm/api/src/webrick/httpauth/authenticator/HTTPAuth__ProxyAuthenticator")
(find-rurima "--- RequestField -> \"Proxy-Authorization\"" "== Constants" "= module WEBrick::HTTPAuth::ProxyAuthenticator" "refm/api/src/webrick/httpauth/authenticator/HTTPAuth__ProxyAuthenticator")
(find-rurima "--- ResponseField -> \"Proxy-Authenticate\"" "== Constants" "= module WEBrick::HTTPAuth::ProxyAuthenticator" "refm/api/src/webrick/httpauth/authenticator/HTTPAuth__ProxyAuthenticator")
(find-rurima "--- InfoField -> \"Proxy-Authentication-Info\"" "== Constants" "= module WEBrick::HTTPAuth::ProxyAuthenticator" "refm/api/src/webrick/httpauth/authenticator/HTTPAuth__ProxyAuthenticator")
(find-rurima "--- AuthException -> Class" "== Constants" "= module WEBrick::HTTPAuth::ProxyAuthenticator" "refm/api/src/webrick/httpauth/authenticator/HTTPAuth__ProxyAuthenticator")
(find-rurima "= module WEBrick::HTTPAuth::Authenticator" "refm/api/src/webrick/httpauth/authenticator/HTTPAuth__Authenticator")
(find-rurima "== Instance Methods" "= module WEBrick::HTTPAuth::Authenticator" "refm/api/src/webrick/httpauth/authenticator/HTTPAuth__Authenticator")
(find-rurima "--- logger -> object" "== Instance Methods" "= module WEBrick::HTTPAuth::Authenticator" "refm/api/src/webrick/httpauth/authenticator/HTTPAuth__Authenticator")
(find-rurima "--- realm -> String" "== Instance Methods" "= module WEBrick::HTTPAuth::Authenticator" "refm/api/src/webrick/httpauth/authenticator/HTTPAuth__Authenticator")
(find-rurima "--- userdb -> WEBrick::HTTPAuth::Htpasswd | WEBrick::HTTPAuth::Htdigest" "== Instance Methods" "= module WEBrick::HTTPAuth::Authenticator" "refm/api/src/webrick/httpauth/authenticator/HTTPAuth__Authenticator")
(find-rurima "== Constants" "= module WEBrick::HTTPAuth::Authenticator" "refm/api/src/webrick/httpauth/authenticator/HTTPAuth__Authenticator")
(find-rurima "--- RequestField -> String" "== Constants" "= module WEBrick::HTTPAuth::Authenticator" "refm/api/src/webrick/httpauth/authenticator/HTTPAuth__Authenticator")
(find-rurima "--- ResponseField -> String" "== Constants" "= module WEBrick::HTTPAuth::Authenticator" "refm/api/src/webrick/httpauth/authenticator/HTTPAuth__Authenticator")
(find-rurima "--- ResponseInfoField -> String" "== Constants" "= module WEBrick::HTTPAuth::Authenticator" "refm/api/src/webrick/httpauth/authenticator/HTTPAuth__Authenticator")
(find-rurima "--- AuthException -> Class" "== Constants" "= module WEBrick::HTTPAuth::Authenticator" "refm/api/src/webrick/httpauth/authenticator/HTTPAuth__Authenticator")
(find-rurima "--- AuthScheme -> nil" "== Constants" "= module WEBrick::HTTPAuth::Authenticator" "refm/api/src/webrick/httpauth/authenticator/HTTPAuth__Authenticator")
(find-rurima "= module WEBrick::HTTPAuth::UserDB" "refm/api/src/webrick/httpauth/userdb.rd")
(find-rurima "== Instance Methods" "= module WEBrick::HTTPAuth::UserDB" "refm/api/src/webrick/httpauth/userdb.rd")
(find-rurima "--- auth_type -> Class" "== Instance Methods" "= module WEBrick::HTTPAuth::UserDB" "refm/api/src/webrick/httpauth/userdb.rd")
(find-rurima "--- auth_type=(type)" "== Instance Methods" "= module WEBrick::HTTPAuth::UserDB" "refm/api/src/webrick/httpauth/userdb.rd")
(find-rurima "--- make_passwd(realm, user, pass) -> String" "== Instance Methods" "= module WEBrick::HTTPAuth::UserDB" "refm/api/src/webrick/httpauth/userdb.rd")
(find-rurima "--- set_passwd(realm, user, pass)" "== Instance Methods" "= module WEBrick::HTTPAuth::UserDB" "refm/api/src/webrick/httpauth/userdb.rd")
(find-rurima "--- get_passwd(realm, user, reload_db = false) -> String" "== Instance Methods" "= module WEBrick::HTTPAuth::UserDB" "refm/api/src/webrick/httpauth/userdb.rd")
(find-rurima "= class WEBrick::HTTPAuth::BasicAuth < Object" "refm/api/src/webrick/httpauth/basicauth/HTTPAuth__BasicAuth")
(find-rurima "== Class Methods" "= class WEBrick::HTTPAuth::BasicAuth < Object" "refm/api/src/webrick/httpauth/basicauth/HTTPAuth__BasicAuth")
(find-rurima "--- make_passwd(realm, user, pass) -> String" "== Class Methods" "= class WEBrick::HTTPAuth::BasicAuth < Object" "refm/api/src/webrick/httpauth/basicauth/HTTPAuth__BasicAuth")
(find-rurima "--- new(config, default = Config::BasicAuth) -> WEBrick::HTTPAuth::BasicAuth" "== Class Methods" "= class WEBrick::HTTPAuth::BasicAuth < Object" "refm/api/src/webrick/httpauth/basicauth/HTTPAuth__BasicAuth")
(find-rurima "== Instance Methods" "= class WEBrick::HTTPAuth::BasicAuth < Object" "refm/api/src/webrick/httpauth/basicauth/HTTPAuth__BasicAuth")
(find-rurima "--- authenticate(request, response) -> bool" "== Instance Methods" "= class WEBrick::HTTPAuth::BasicAuth < Object" "refm/api/src/webrick/httpauth/basicauth/HTTPAuth__BasicAuth")
(find-rurima "--- challenge(request, response) -> ()" "== Instance Methods" "= class WEBrick::HTTPAuth::BasicAuth < Object" "refm/api/src/webrick/httpauth/basicauth/HTTPAuth__BasicAuth")
(find-rurima "--- logger -> object" "== Instance Methods" "= class WEBrick::HTTPAuth::BasicAuth < Object" "refm/api/src/webrick/httpauth/basicauth/HTTPAuth__BasicAuth")
(find-rurima "--- realm -> String" "== Instance Methods" "= class WEBrick::HTTPAuth::BasicAuth < Object" "refm/api/src/webrick/httpauth/basicauth/HTTPAuth__BasicAuth")
(find-rurima "--- userdb -> WEBrick::HTTPAuth::Htpasswd" "== Instance Methods" "= class WEBrick::HTTPAuth::BasicAuth < Object" "refm/api/src/webrick/httpauth/basicauth/HTTPAuth__BasicAuth")
(find-rurima "= class WEBrick::HTTPAuth::ProxyBasicAuth < WEBrick::HTTPAuth::BasicAuth" "refm/api/src/webrick/httpauth/basicauth/HTTPAuth__ProxyBasicAuth")
(find-rurima "= class WEBrick::HTTPAuth::Htpasswd < Object" "refm/api/src/webrick/httpauth/htpasswd.rd")
(find-rurima "== Class Methods" "= class WEBrick::HTTPAuth::Htpasswd < Object" "refm/api/src/webrick/httpauth/htpasswd.rd")
(find-rurima "--- new(path) -> WEBrick::HTTPAuth::Htpasswd" "== Class Methods" "= class WEBrick::HTTPAuth::Htpasswd < Object" "refm/api/src/webrick/httpauth/htpasswd.rd")
(find-rurima "== Instance Methods" "= class WEBrick::HTTPAuth::Htpasswd < Object" "refm/api/src/webrick/httpauth/htpasswd.rd")
(find-rurima "--- delete_passwd(realm, user) -> String" "== Instance Methods" "= class WEBrick::HTTPAuth::Htpasswd < Object" "refm/api/src/webrick/httpauth/htpasswd.rd")
(find-rurima "--- each{|user, pass| ...} -> Hash" "== Instance Methods" "= class WEBrick::HTTPAuth::Htpasswd < Object" "refm/api/src/webrick/httpauth/htpasswd.rd")
(find-rurima "--- get_passwd(realm, user, reload_db) -> String" "== Instance Methods" "= class WEBrick::HTTPAuth::Htpasswd < Object" "refm/api/src/webrick/httpauth/htpasswd.rd")
(find-rurima "--- flush(path = nil)" "== Instance Methods" "= class WEBrick::HTTPAuth::Htpasswd < Object" "refm/api/src/webrick/httpauth/htpasswd.rd")
(find-rurima "--- reload" "== Instance Methods" "= class WEBrick::HTTPAuth::Htpasswd < Object" "refm/api/src/webrick/httpauth/htpasswd.rd")
(find-rurima "--- set_passwd(realm, user, pass)" "== Instance Methods" "= class WEBrick::HTTPAuth::Htpasswd < Object" "refm/api/src/webrick/httpauth/htpasswd.rd")
(find-rurima "= class WEBrick::HTTPAuth::Htdigest < Object" "refm/api/src/webrick/httpauth/htdigest.rd")
(find-rurima "== Class Methods" "= class WEBrick::HTTPAuth::Htdigest < Object" "refm/api/src/webrick/httpauth/htdigest.rd")
(find-rurima "--- new(path) -> WEBrick::HTTPAuth::Htdigest" "== Class Methods" "= class WEBrick::HTTPAuth::Htdigest < Object" "refm/api/src/webrick/httpauth/htdigest.rd")
(find-rurima "== Instance Methods" "= class WEBrick::HTTPAuth::Htdigest < Object" "refm/api/src/webrick/httpauth/htdigest.rd")
(find-rurima "--- delete_passwd(realm, user)" "== Instance Methods" "= class WEBrick::HTTPAuth::Htdigest < Object" "refm/api/src/webrick/httpauth/htdigest.rd")
(find-rurima "--- each{|user, realm, pass| ... } -> Hash" "== Instance Methods" "= class WEBrick::HTTPAuth::Htdigest < Object" "refm/api/src/webrick/httpauth/htdigest.rd")
(find-rurima "--- flush(path = nil) -> ()" "== Instance Methods" "= class WEBrick::HTTPAuth::Htdigest < Object" "refm/api/src/webrick/httpauth/htdigest.rd")
(find-rurima "--- get_passwd(realm, user, reload_db) -> String" "== Instance Methods" "= class WEBrick::HTTPAuth::Htdigest < Object" "refm/api/src/webrick/httpauth/htdigest.rd")
(find-rurima "--- reload" "== Instance Methods" "= class WEBrick::HTTPAuth::Htdigest < Object" "refm/api/src/webrick/httpauth/htdigest.rd")
(find-rurima "--- set_passwd(realm, user, pass)" "== Instance Methods" "= class WEBrick::HTTPAuth::Htdigest < Object" "refm/api/src/webrick/httpauth/htdigest.rd")
(find-rurima "= class WEBrick::HTTPAuth::DigestAuth < Object" "refm/api/src/webrick/httpauth/digestauth/HTTPAuth__DigestAuth")
(find-rurima "== Class Methods" "= class WEBrick::HTTPAuth::DigestAuth < Object" "refm/api/src/webrick/httpauth/digestauth/HTTPAuth__DigestAuth")
(find-rurima "--- make_passwd(realm, user, pass) -> String" "== Class Methods" "= class WEBrick::HTTPAuth::DigestAuth < Object" "refm/api/src/webrick/httpauth/digestauth/HTTPAuth__DigestAuth")
(find-rurima "--- new(config, default = WEBrick::Config::DigestAuth) -> WEBrick::HTTPAuth::DigestAuth" "== Class Methods" "= class WEBrick::HTTPAuth::DigestAuth < Object" "refm/api/src/webrick/httpauth/digestauth/HTTPAuth__DigestAuth")
(find-rurima "== Instance Methods" "= class WEBrick::HTTPAuth::DigestAuth < Object" "refm/api/src/webrick/httpauth/digestauth/HTTPAuth__DigestAuth")
(find-rurima "--- algorithm -> String" "== Instance Methods" "= class WEBrick::HTTPAuth::DigestAuth < Object" "refm/api/src/webrick/httpauth/digestauth/HTTPAuth__DigestAuth")
(find-rurima "--- authenticate(request, response) -> true" "== Instance Methods" "= class WEBrick::HTTPAuth::DigestAuth < Object" "refm/api/src/webrick/httpauth/digestauth/HTTPAuth__DigestAuth")
(find-rurima "--- challenge(request, response, stale = false)" "== Instance Methods" "= class WEBrick::HTTPAuth::DigestAuth < Object" "refm/api/src/webrick/httpauth/digestauth/HTTPAuth__DigestAuth")
(find-rurima "--- qop -> String" "== Instance Methods" "= class WEBrick::HTTPAuth::DigestAuth < Object" "refm/api/src/webrick/httpauth/digestauth/HTTPAuth__DigestAuth")
(find-rurima "= class WEBrick::HTTPAuth::ProxyDigestAuth < WEBrick::HTTPAuth::DigestAuth" "refm/api/src/webrick/httpauth/digestauth/HTTPAuth__ProxyDigestAuth")
(find-rurima "= class WEBrick::HTTPAuth::Htgroup < Object" "refm/api/src/webrick/httpauth/htgroup.rd")
(find-rurima "== Class Methods" "= class WEBrick::HTTPAuth::Htgroup < Object" "refm/api/src/webrick/httpauth/htgroup.rd")
(find-rurima "--- new(path) -> WEBrick::HTTPAuth::Htgroup" "== Class Methods" "= class WEBrick::HTTPAuth::Htgroup < Object" "refm/api/src/webrick/httpauth/htgroup.rd")
(find-rurima "== Instance Methods" "= class WEBrick::HTTPAuth::Htgroup < Object" "refm/api/src/webrick/httpauth/htgroup.rd")
(find-rurima "--- reload" "== Instance Methods" "= class WEBrick::HTTPAuth::Htgroup < Object" "refm/api/src/webrick/httpauth/htgroup.rd")
(find-rurima "--- flush(path = nil) -> ()" "== Instance Methods" "= class WEBrick::HTTPAuth::Htgroup < Object" "refm/api/src/webrick/httpauth/htgroup.rd")
(find-rurima "--- members(group) -> [String]" "== Instance Methods" "= class WEBrick::HTTPAuth::Htgroup < Object" "refm/api/src/webrick/httpauth/htgroup.rd")
(find-rurima "--- add(group, members)" "== Instance Methods" "= class WEBrick::HTTPAuth::Htgroup < Object" "refm/api/src/webrick/httpauth/htgroup.rd")
(find-rurima "= class WEBrick::Cookie < Object" "refm/api/src/webrick/cookie.rd")
(find-rurima "== Class Methods" "= class WEBrick::Cookie < Object" "refm/api/src/webrick/cookie.rd")
(find-rurima "--- new(name, value)    -> WEBrick::Cookie" "== Class Methods" "= class WEBrick::Cookie < Object" "refm/api/src/webrick/cookie.rd")
(find-rurima "--- parse(str)    -> [WEBrick::Cookie]" "== Class Methods" "= class WEBrick::Cookie < Object" "refm/api/src/webrick/cookie.rd")
(find-rurima "--- parse_set_cookie(str)    -> WEBrick::Cookie" "== Class Methods" "= class WEBrick::Cookie < Object" "refm/api/src/webrick/cookie.rd")
(find-rurima "--- parse_set_cookies(str)    -> [WEBrick::Cookie]" "== Class Methods" "= class WEBrick::Cookie < Object" "refm/api/src/webrick/cookie.rd")
(find-rurima "== Instance Methods" "= class WEBrick::Cookie < Object" "refm/api/src/webrick/cookie.rd")
(find-rurima "--- comment         -> String" "== Instance Methods" "= class WEBrick::Cookie < Object" "refm/api/src/webrick/cookie.rd")
(find-rurima "--- comment=(value)" "== Instance Methods" "= class WEBrick::Cookie < Object" "refm/api/src/webrick/cookie.rd")
(find-rurima "--- domain         -> String" "== Instance Methods" "= class WEBrick::Cookie < Object" "refm/api/src/webrick/cookie.rd")
(find-rurima "--- domain=(value)" "== Instance Methods" "= class WEBrick::Cookie < Object" "refm/api/src/webrick/cookie.rd")
(find-rurima "--- expires    -> Time" "== Instance Methods" "= class WEBrick::Cookie < Object" "refm/api/src/webrick/cookie.rd")
(find-rurima "--- expires=(value)" "== Instance Methods" "= class WEBrick::Cookie < Object" "refm/api/src/webrick/cookie.rd")
(find-rurima "--- max_age          -> Integer" "== Instance Methods" "= class WEBrick::Cookie < Object" "refm/api/src/webrick/cookie.rd")
(find-rurima "--- max_age=(value)" "== Instance Methods" "= class WEBrick::Cookie < Object" "refm/api/src/webrick/cookie.rd")
(find-rurima "--- name   -> String" "== Instance Methods" "= class WEBrick::Cookie < Object" "refm/api/src/webrick/cookie.rd")
(find-rurima "--- path          -> String" "== Instance Methods" "= class WEBrick::Cookie < Object" "refm/api/src/webrick/cookie.rd")
(find-rurima "--- path=(value)" "== Instance Methods" "= class WEBrick::Cookie < Object" "refm/api/src/webrick/cookie.rd")
(find-rurima "--- secure         -> bool" "== Instance Methods" "= class WEBrick::Cookie < Object" "refm/api/src/webrick/cookie.rd")
(find-rurima "--- secure=(value)" "== Instance Methods" "= class WEBrick::Cookie < Object" "refm/api/src/webrick/cookie.rd")
(find-rurima "--- to_s    -> String" "== Instance Methods" "= class WEBrick::Cookie < Object" "refm/api/src/webrick/cookie.rd")
(find-rurima "--- value       -> String" "== Instance Methods" "= class WEBrick::Cookie < Object" "refm/api/src/webrick/cookie.rd")
(find-rurima "--- value=(str)" "== Instance Methods" "= class WEBrick::Cookie < Object" "refm/api/src/webrick/cookie.rd")
(find-rurima "--- version           -> Integer" "== Instance Methods" "= class WEBrick::Cookie < Object" "refm/api/src/webrick/cookie.rd")
(find-rurima "--- version=(value)" "== Instance Methods" "= class WEBrick::Cookie < Object" "refm/api/src/webrick/cookie.rd")
(find-rurima "= redefine WEBrick::GenericServer < Object" "refm/api/src/webrick/ssl.rd")
(find-rurima "== Class Methods" "= redefine WEBrick::GenericServer < Object" "refm/api/src/webrick/ssl.rd")
(find-rurima "--- new(config = {}, default = WEBrick::Config::General) -> WEBrick::GenericServer" "== Class Methods" "= redefine WEBrick::GenericServer < Object" "refm/api/src/webrick/ssl.rd")
(find-rurima "== Instance Methods" "= redefine WEBrick::GenericServer < Object" "refm/api/src/webrick/ssl.rd")
(find-rurima "--- ssl_context -> OpenSSL::SSL::SSLContext | nil" "== Instance Methods" "= redefine WEBrick::GenericServer < Object" "refm/api/src/webrick/ssl.rd")
(find-rurima "= reopen WEBrick::Config" "refm/api/src/webrick/ssl.rd")
(find-rurima "== Constants" "= reopen WEBrick::Config" "refm/api/src/webrick/ssl.rd")
(find-rurima "--- SSL -> Hash" "== Constants" "= reopen WEBrick::Config" "refm/api/src/webrick/ssl.rd")
(find-rurima "= redefine WEBrick::Config" "refm/api/src/webrick/ssl.rd")
(find-rurima "== Constants" "= redefine WEBrick::Config" "refm/api/src/webrick/ssl.rd")
(find-rurima "--- General -> Hash" "== Constants" "= redefine WEBrick::Config" "refm/api/src/webrick/ssl.rd")
(find-rurima "= class WEBrick::HTTPRequest < Object" "refm/api/src/webrick/httprequest.rd")
(find-rurima "== Class Methods" "= class WEBrick::HTTPRequest < Object" "refm/api/src/webrick/httprequest.rd")
(find-rurima "--- new(config) -> WEBrick::HTTPRequest" "== Class Methods" "= class WEBrick::HTTPRequest < Object" "refm/api/src/webrick/httprequest.rd")
(find-rurima "== Instance Methods" "= class WEBrick::HTTPRequest < Object" "refm/api/src/webrick/httprequest.rd")
(find-rurima "--- [](header_name)    -> String" "== Instance Methods" "= class WEBrick::HTTPRequest < Object" "refm/api/src/webrick/httprequest.rd")
(find-rurima "--- accept    -> [String]" "== Instance Methods" "= class WEBrick::HTTPRequest < Object" "refm/api/src/webrick/httprequest.rd")
(find-rurima "--- accept_charset    -> [String]" "== Instance Methods" "= class WEBrick::HTTPRequest < Object" "refm/api/src/webrick/httprequest.rd")
(find-rurima "--- accept_encoding    -> [String]" "== Instance Methods" "= class WEBrick::HTTPRequest < Object" "refm/api/src/webrick/httprequest.rd")
(find-rurima "--- accept_language    -> [String]" "== Instance Methods" "= class WEBrick::HTTPRequest < Object" "refm/api/src/webrick/httprequest.rd")
(find-rurima "--- addr    -> Array" "== Instance Methods" "= class WEBrick::HTTPRequest < Object" "refm/api/src/webrick/httprequest.rd")
(find-rurima "--- attributes    -> Hash" "== Instance Methods" "= class WEBrick::HTTPRequest < Object" "refm/api/src/webrick/httprequest.rd")
(find-rurima "--- body                 -> String | nil" "== Instance Methods" "= class WEBrick::HTTPRequest < Object" "refm/api/src/webrick/httprequest.rd")
(find-rurima "--- body {|chunk| ... }  -> String | nil" "== Instance Methods" "= class WEBrick::HTTPRequest < Object" "refm/api/src/webrick/httprequest.rd")
(find-rurima "--- content_length    -> Integer" "== Instance Methods" "= class WEBrick::HTTPRequest < Object" "refm/api/src/webrick/httprequest.rd")
(find-rurima "--- content_type    -> String | nil" "== Instance Methods" "= class WEBrick::HTTPRequest < Object" "refm/api/src/webrick/httprequest.rd")
(find-rurima "--- continue" "== Instance Methods" "= class WEBrick::HTTPRequest < Object" "refm/api/src/webrick/httprequest.rd")
(find-rurima "--- cookies    -> [WEBrick::Cookie]" "== Instance Methods" "= class WEBrick::HTTPRequest < Object" "refm/api/src/webrick/httprequest.rd")
(find-rurima "--- each {|key, val| ... }" "== Instance Methods" "= class WEBrick::HTTPRequest < Object" "refm/api/src/webrick/httprequest.rd")
(find-rurima "--- fixup    -> ()" "== Instance Methods" "= class WEBrick::HTTPRequest < Object" "refm/api/src/webrick/httprequest.rd")
(find-rurima "--- header    -> Hash" "== Instance Methods" "= class WEBrick::HTTPRequest < Object" "refm/api/src/webrick/httprequest.rd")
(find-rurima "--- host    -> String" "== Instance Methods" "= class WEBrick::HTTPRequest < Object" "refm/api/src/webrick/httprequest.rd")
(find-rurima "--- http_version     -> WEBrick::HTTPVersion" "== Instance Methods" "= class WEBrick::HTTPRequest < Object" "refm/api/src/webrick/httprequest.rd")
(find-rurima "--- keep_alive     -> bool" "== Instance Methods" "= class WEBrick::HTTPRequest < Object" "refm/api/src/webrick/httprequest.rd")
(find-rurima "--- keep_alive?    -> bool" "== Instance Methods" "= class WEBrick::HTTPRequest < Object" "refm/api/src/webrick/httprequest.rd")
(find-rurima "--- meta_vars    -> Hash" "== Instance Methods" "= class WEBrick::HTTPRequest < Object" "refm/api/src/webrick/httprequest.rd")
(find-rurima "--- parse(socket = nil)    -> ()" "== Instance Methods" "= class WEBrick::HTTPRequest < Object" "refm/api/src/webrick/httprequest.rd")
(find-rurima "--- path    -> String" "== Instance Methods" "= class WEBrick::HTTPRequest < Object" "refm/api/src/webrick/httprequest.rd")
(find-rurima "--- path_info          -> String" "== Instance Methods" "= class WEBrick::HTTPRequest < Object" "refm/api/src/webrick/httprequest.rd")
(find-rurima "--- path_info=(value)" "== Instance Methods" "= class WEBrick::HTTPRequest < Object" "refm/api/src/webrick/httprequest.rd")
(find-rurima "--- peeraddr    -> Array" "== Instance Methods" "= class WEBrick::HTTPRequest < Object" "refm/api/src/webrick/httprequest.rd")
(find-rurima "--- port    -> String" "== Instance Methods" "= class WEBrick::HTTPRequest < Object" "refm/api/src/webrick/httprequest.rd")
(find-rurima "--- query    -> Hash" "== Instance Methods" "= class WEBrick::HTTPRequest < Object" "refm/api/src/webrick/httprequest.rd")
(find-rurima "--- query_string          -> String" "== Instance Methods" "= class WEBrick::HTTPRequest < Object" "refm/api/src/webrick/httprequest.rd")
(find-rurima "--- query_string=(value)" "== Instance Methods" "= class WEBrick::HTTPRequest < Object" "refm/api/src/webrick/httprequest.rd")
(find-rurima "--- raw_header -> String" "== Instance Methods" "= class WEBrick::HTTPRequest < Object" "refm/api/src/webrick/httprequest.rd")
(find-rurima "--- request_line -> String" "== Instance Methods" "= class WEBrick::HTTPRequest < Object" "refm/api/src/webrick/httprequest.rd")
(find-rurima "--- request_method     -> String" "== Instance Methods" "= class WEBrick::HTTPRequest < Object" "refm/api/src/webrick/httprequest.rd")
(find-rurima "--- request_time    -> Time" "== Instance Methods" "= class WEBrick::HTTPRequest < Object" "refm/api/src/webrick/httprequest.rd")
(find-rurima "--- request_uri -> URI" "== Instance Methods" "= class WEBrick::HTTPRequest < Object" "refm/api/src/webrick/httprequest.rd")
(find-rurima "--- script_name          -> String" "== Instance Methods" "= class WEBrick::HTTPRequest < Object" "refm/api/src/webrick/httprequest.rd")
(find-rurima "--- script_name=(value)" "== Instance Methods" "= class WEBrick::HTTPRequest < Object" "refm/api/src/webrick/httprequest.rd")
(find-rurima "--- server_name -> String" "== Instance Methods" "= class WEBrick::HTTPRequest < Object" "refm/api/src/webrick/httprequest.rd")
(find-rurima "--- ssl? -> bool" "== Instance Methods" "= class WEBrick::HTTPRequest < Object" "refm/api/src/webrick/httprequest.rd")
(find-rurima "--- to_s    -> String" "== Instance Methods" "= class WEBrick::HTTPRequest < Object" "refm/api/src/webrick/httprequest.rd")
(find-rurima "--- unparsed_uri    -> String" "== Instance Methods" "= class WEBrick::HTTPRequest < Object" "refm/api/src/webrick/httprequest.rd")
(find-rurima "--- user          -> String" "== Instance Methods" "= class WEBrick::HTTPRequest < Object" "refm/api/src/webrick/httprequest.rd")
(find-rurima "--- user=(value)" "== Instance Methods" "= class WEBrick::HTTPRequest < Object" "refm/api/src/webrick/httprequest.rd")
(find-rurima "= class WEBrick::HTTPServer < WEBrick::GenericServer" "refm/api/src/webrick/httpserver/HTTPServer")
(find-rurima "== Class Methods" "= class WEBrick::HTTPServer < WEBrick::GenericServer" "refm/api/src/webrick/httpserver/HTTPServer")
(find-rurima "--- new(config = {}, default = WEBrick::Config::HTTP)    -> WEBrick::HTTPServer" "== Class Methods" "= class WEBrick::HTTPServer < WEBrick::GenericServer" "refm/api/src/webrick/httpserver/HTTPServer")
(find-rurima "== Instance Methods" "= class WEBrick::HTTPServer < WEBrick::GenericServer" "refm/api/src/webrick/httpserver/HTTPServer")
(find-rurima "--- mount(dir, servlet, *options)    -> ()" "== Instance Methods" "= class WEBrick::HTTPServer < WEBrick::GenericServer" "refm/api/src/webrick/httpserver/HTTPServer")
(find-rurima "--- mount_proc(dir, proc)             -> ()" "== Instance Methods" "= class WEBrick::HTTPServer < WEBrick::GenericServer" "refm/api/src/webrick/httpserver/HTTPServer")
(find-rurima "--- mount_proc(dir){|req, res| ...}   -> ()" "== Instance Methods" "= class WEBrick::HTTPServer < WEBrick::GenericServer" "refm/api/src/webrick/httpserver/HTTPServer")
(find-rurima "--- unmount(dir)    -> ()" "== Instance Methods" "= class WEBrick::HTTPServer < WEBrick::GenericServer" "refm/api/src/webrick/httpserver/HTTPServer")
(find-rurima "--- umount(dir)     -> ()" "== Instance Methods" "= class WEBrick::HTTPServer < WEBrick::GenericServer" "refm/api/src/webrick/httpserver/HTTPServer")
(find-rurima "--- virtual_host(server)    -> ()" "== Instance Methods" "= class WEBrick::HTTPServer < WEBrick::GenericServer" "refm/api/src/webrick/httpserver/HTTPServer")
(find-rurima "= class WEBrick::HTTPServerError < WEBrick::ServerError" "refm/api/src/webrick/httpserver/HTTPServer")
(find-rurima "= class WEBrick::HTTPServer::MountTable" "refm/api/src/webrick/httpserver/HTTPServer__MountTable")
(find-rurima "== Class Methods" "= class WEBrick::HTTPServer::MountTable" "refm/api/src/webrick/httpserver/HTTPServer__MountTable")
(find-rurima "--- new -> WEBrick::HTTPServer::MountTable" "== Class Methods" "= class WEBrick::HTTPServer::MountTable" "refm/api/src/webrick/httpserver/HTTPServer__MountTable")
(find-rurima "== Instance Methods" "= class WEBrick::HTTPServer::MountTable" "refm/api/src/webrick/httpserver/HTTPServer__MountTable")
(find-rurima "--- [](dir) -> WEBrick::HTTPServlet::AbstractServlet" "== Instance Methods" "= class WEBrick::HTTPServer::MountTable" "refm/api/src/webrick/httpserver/HTTPServer__MountTable")
(find-rurima "--- []=(dir, val)" "== Instance Methods" "= class WEBrick::HTTPServer::MountTable" "refm/api/src/webrick/httpserver/HTTPServer__MountTable")
(find-rurima "--- delete(dir) -> WEBrick::HTTPServlet::AbstractServlet" "== Instance Methods" "= class WEBrick::HTTPServer::MountTable" "refm/api/src/webrick/httpserver/HTTPServer__MountTable")
(find-rurima "--- scan(path) -> Array" "== Instance Methods" "= class WEBrick::HTTPServer::MountTable" "refm/api/src/webrick/httpserver/HTTPServer__MountTable")
(find-rurima "= module DRb" "refm/api/src/drb.rd")
(find-rurima "== Module Functions" "= module DRb" "refm/api/src/drb.rd")
(find-rurima "--- config" "== Module Functions" "= module DRb" "refm/api/src/drb.rd")
(find-rurima "--- current_server" "== Module Functions" "= module DRb" "refm/api/src/drb.rd")
(find-rurima "--- fetch_server(uri)" "== Module Functions" "= module DRb" "refm/api/src/drb.rd")
(find-rurima "--- front" "== Module Functions" "= module DRb" "refm/api/src/drb.rd")
(find-rurima "--- here?(uri)" "== Module Functions" "= module DRb" "refm/api/src/drb.rd")
(find-rurima "--- install_acl(acl)" "== Module Functions" "= module DRb" "refm/api/src/drb.rd")
(find-rurima "--- install_id_conv(idconv)" "== Module Functions" "= module DRb" "refm/api/src/drb.rd")
(find-rurima "--- regist_server(server)" "== Module Functions" "= module DRb" "refm/api/src/drb.rd")
(find-rurima "--- remove_server(server)" "== Module Functions" "= module DRb" "refm/api/src/drb.rd")
(find-rurima "--- start_service(uri=nil, front=nil, config=nil)" "== Module Functions" "= module DRb" "refm/api/src/drb.rd")
(find-rurima "--- stop_service" "== Module Functions" "= module DRb" "refm/api/src/drb.rd")
(find-rurima "--- thread" "== Module Functions" "= module DRb" "refm/api/src/drb.rd")
(find-rurima "--- to_id(obj)" "== Module Functions" "= module DRb" "refm/api/src/drb.rd")
(find-rurima "--- to_obj(ref)" "== Module Functions" "= module DRb" "refm/api/src/drb.rd")
(find-rurima "--- uri" "== Module Functions" "= module DRb" "refm/api/src/drb.rd")
(find-rurima "= class DRb::DRbError < RuntimeError" "refm/api/src/drb.rd")
(find-rurima "= class DRb::DRbServerNotFound < DRb::DRbError" "refm/api/src/drb.rd")
(find-rurima "= class DRb::DRbRemoteError < DRb::DRbError" "refm/api/src/drb.rd")
(find-rurima "= class OpenStruct < Object" "refm/api/src/ostruct.rd")
(find-rurima "=== フリーズされている OpenStruct について" "= class OpenStruct < Object" "refm/api/src/ostruct.rd")
(find-rurima "== Class Methods" "= class OpenStruct < Object" "refm/api/src/ostruct.rd")
(find-rurima "--- new(hash = nil) -> OpenStruct" "== Class Methods" "= class OpenStruct < Object" "refm/api/src/ostruct.rd")
(find-rurima "== Instance Methods" "= class OpenStruct < Object" "refm/api/src/ostruct.rd")
(find-rurima "--- ==(other) -> bool" "== Instance Methods" "= class OpenStruct < Object" "refm/api/src/ostruct.rd")
(find-rurima "--- new_ostruct_member(name) -> Symbol" "== Instance Methods" "= class OpenStruct < Object" "refm/api/src/ostruct.rd")
(find-rurima "--- inspect -> String" "== Instance Methods" "= class OpenStruct < Object" "refm/api/src/ostruct.rd")
(find-rurima "--- to_s -> String" "== Instance Methods" "= class OpenStruct < Object" "refm/api/src/ostruct.rd")
(find-rurima "--- delete_field(name) -> object" "== Instance Methods" "= class OpenStruct < Object" "refm/api/src/ostruct.rd")
(find-rurima "== Protected Instance Methods" "= class OpenStruct < Object" "refm/api/src/ostruct.rd")
(find-rurima "--- modifiable -> Hash" "== Protected Instance Methods" "= class OpenStruct < Object" "refm/api/src/ostruct.rd")
(find-rurima "== Constants" "= class OpenStruct < Object" "refm/api/src/ostruct.rd")
(find-rurima "--- InspectKey" "== Constants" "= class OpenStruct < Object" "refm/api/src/ostruct.rd")
(find-rurima "= class XSD::XSDInteger < XSD::XSDDecimal" "refm/api/src/xsd/XSDInteger")
(find-rurima "== class methods" "= class XSD::XSDInteger < XSD::XSDDecimal" "refm/api/src/xsd/XSDInteger")
(find-rurima "--- new(value = nil)" "== class methods" "= class XSD::XSDInteger < XSD::XSDDecimal" "refm/api/src/xsd/XSDInteger")
(find-rurima "= module XSD::Charset" "refm/api/src/xsd/Charset")
(find-rurima "== module functions" "= module XSD::Charset" "refm/api/src/xsd/Charset")
(find-rurima "--- charset_label(encoding)" "== module functions" "= module XSD::Charset" "refm/api/src/xsd/Charset")
(find-rurima "--- charset_str(label)" "== module functions" "= module XSD::Charset" "refm/api/src/xsd/Charset")
(find-rurima "--- encoding" "== module functions" "= module XSD::Charset" "refm/api/src/xsd/Charset")
(find-rurima "--- encoding=(encoding)" "== module functions" "= module XSD::Charset" "refm/api/src/xsd/Charset")
(find-rurima "--- encoding_conv(str, enc_from, enc_to)" "== module functions" "= module XSD::Charset" "refm/api/src/xsd/Charset")
(find-rurima "--- encoding_from_xml(str, charset)" "== module functions" "= module XSD::Charset" "refm/api/src/xsd/Charset")
(find-rurima "--- encoding_label" "== module functions" "= module XSD::Charset" "refm/api/src/xsd/Charset")
(find-rurima "--- encoding_to_xml(str, charset)" "== module functions" "= module XSD::Charset" "refm/api/src/xsd/Charset")
(find-rurima "--- init" "== module functions" "= module XSD::Charset" "refm/api/src/xsd/Charset")
(find-rurima "--- is_ces(str, code = $KCODE)" "== module functions" "= module XSD::Charset" "refm/api/src/xsd/Charset")
(find-rurima "--- is_euc(str)" "== module functions" "= module XSD::Charset" "refm/api/src/xsd/Charset")
(find-rurima "--- is_sjis(str)" "== module functions" "= module XSD::Charset" "refm/api/src/xsd/Charset")
(find-rurima "--- is_us_ascii(str)" "== module functions" "= module XSD::Charset" "refm/api/src/xsd/Charset")
(find-rurima "--- is_utf8(str)" "== module functions" "= module XSD::Charset" "refm/api/src/xsd/Charset")
(find-rurima "--- xml_encoding_label" "== module functions" "= module XSD::Charset" "refm/api/src/xsd/Charset")
(find-rurima "= class XSD::CodeGen::ClassDef < XSD::CodeGen::ModuleDef" "refm/api/src/xsd/CodeGen__ClassDef")
(find-rurima "== class methods" "= class XSD::CodeGen::ClassDef < XSD::CodeGen::ModuleDef" "refm/api/src/xsd/CodeGen__ClassDef")
(find-rurima "--- new(name, baseclass = nil)" "== class methods" "= class XSD::CodeGen::ClassDef < XSD::CodeGen::ModuleDef" "refm/api/src/xsd/CodeGen__ClassDef")
(find-rurima "== instance methods" "= class XSD::CodeGen::ClassDef < XSD::CodeGen::ModuleDef" "refm/api/src/xsd/CodeGen__ClassDef")
(find-rurima "--- def_classvar(var, value)" "== instance methods" "= class XSD::CodeGen::ClassDef < XSD::CodeGen::ModuleDef" "refm/api/src/xsd/CodeGen__ClassDef")
(find-rurima "--- def_attr(attrname, writable = true, varname = nil)" "== instance methods" "= class XSD::CodeGen::ClassDef < XSD::CodeGen::ModuleDef" "refm/api/src/xsd/CodeGen__ClassDef")
(find-rurima "--- dump" "== instance methods" "= class XSD::CodeGen::ClassDef < XSD::CodeGen::ModuleDef" "refm/api/src/xsd/CodeGen__ClassDef")
(find-rurima "= class XSD::XSDBase64Binary < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDBase64Binary")
(find-rurima "== class methods" "= class XSD::XSDBase64Binary < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDBase64Binary")
(find-rurima "--- new(value = nil)" "== class methods" "= class XSD::XSDBase64Binary < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDBase64Binary")
(find-rurima "== instance methods" "= class XSD::XSDBase64Binary < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDBase64Binary")
(find-rurima "--- set_encoded(value)" "== instance methods" "= class XSD::XSDBase64Binary < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDBase64Binary")
(find-rurima "--- string" "== instance methods" "= class XSD::XSDBase64Binary < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDBase64Binary")
(find-rurima "= module XSD::CodeGen::GenSupport" "refm/api/src/xsd/CodeGen__GenSupport")
(find-rurima "== module functions" "= module XSD::CodeGen::GenSupport" "refm/api/src/xsd/CodeGen__GenSupport")
(find-rurima "--- capitalize(target)" "== module functions" "= module XSD::CodeGen::GenSupport" "refm/api/src/xsd/CodeGen__GenSupport")
(find-rurima "--- keyword?(word)" "== module functions" "= module XSD::CodeGen::GenSupport" "refm/api/src/xsd/CodeGen__GenSupport")
(find-rurima "--- uncapitalize(target)" "== module functions" "= module XSD::CodeGen::GenSupport" "refm/api/src/xsd/CodeGen__GenSupport")
(find-rurima "--- safeconstname(name)" "== module functions" "= module XSD::CodeGen::GenSupport" "refm/api/src/xsd/CodeGen__GenSupport")
(find-rurima "--- safeconstname?(name)" "== module functions" "= module XSD::CodeGen::GenSupport" "refm/api/src/xsd/CodeGen__GenSupport")
(find-rurima "--- safemethodname(name)" "== module functions" "= module XSD::CodeGen::GenSupport" "refm/api/src/xsd/CodeGen__GenSupport")
(find-rurima "--- safemethodname?(name)" "== module functions" "= module XSD::CodeGen::GenSupport" "refm/api/src/xsd/CodeGen__GenSupport")
(find-rurima "--- safevarname(name)" "== module functions" "= module XSD::CodeGen::GenSupport" "refm/api/src/xsd/CodeGen__GenSupport")
(find-rurima "--- safevarname?(name)" "== module functions" "= module XSD::CodeGen::GenSupport" "refm/api/src/xsd/CodeGen__GenSupport")
(find-rurima "--- format(str, indent = nil)" "== module functions" "= module XSD::CodeGen::GenSupport" "refm/api/src/xsd/CodeGen__GenSupport")
(find-rurima "= class XSD::XSDGMonthDay < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDGMonthDay")
(find-rurima "== class methods" "= class XSD::XSDGMonthDay < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDGMonthDay")
(find-rurima "--- new(value = nil)" "== class methods" "= class XSD::XSDGMonthDay < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDGMonthDay")
(find-rurima "= class XSD::XSDAnyURI < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDAnyURI")
(find-rurima "== class methods" "= class XSD::XSDAnyURI < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDAnyURI")
(find-rurima "--- new(value = nil)" "== class methods" "= class XSD::XSDAnyURI < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDAnyURI")
(find-rurima "= module XSD" "refm/api/src/xsd/XSD")
(find-rurima "== Constants" "= module XSD" "refm/api/src/xsd/XSD")
(find-rurima "--- Namespace" "== Constants" "= module XSD" "refm/api/src/xsd/XSD")
(find-rurima "--- InstanceNamespace" "== Constants" "= module XSD" "refm/api/src/xsd/XSD")
(find-rurima "= class XSD::QName" "refm/api/src/xsd/QName")
(find-rurima "== class methods" "= class XSD::QName" "refm/api/src/xsd/QName")
(find-rurima "--- new(namespace = nil, name = nil)" "== class methods" "= class XSD::QName" "refm/api/src/xsd/QName")
(find-rurima "== instance methods" "= class XSD::QName" "refm/api/src/xsd/QName")
(find-rurima "--- ==(rhs)" "== instance methods" "= class XSD::QName" "refm/api/src/xsd/QName")
(find-rurima "--- ===(rhs)" "== instance methods" "= class XSD::QName" "refm/api/src/xsd/QName")
(find-rurima "--- eql?(rhs)" "== instance methods" "= class XSD::QName" "refm/api/src/xsd/QName")
(find-rurima "--- dump" "== instance methods" "= class XSD::QName" "refm/api/src/xsd/QName")
(find-rurima "--- dup_name(name)" "== instance methods" "= class XSD::QName" "refm/api/src/xsd/QName")
(find-rurima "--- hash" "== instance methods" "= class XSD::QName" "refm/api/src/xsd/QName")
(find-rurima "--- inspect" "== instance methods" "= class XSD::QName" "refm/api/src/xsd/QName")
(find-rurima "--- match(rhs)" "== instance methods" "= class XSD::QName" "refm/api/src/xsd/QName")
(find-rurima "--- namespace" "== instance methods" "= class XSD::QName" "refm/api/src/xsd/QName")
(find-rurima "--- namespace=(namespace)" "== instance methods" "= class XSD::QName" "refm/api/src/xsd/QName")
(find-rurima "--- name" "== instance methods" "= class XSD::QName" "refm/api/src/xsd/QName")
(find-rurima "--- name=(name)" "== instance methods" "= class XSD::QName" "refm/api/src/xsd/QName")
(find-rurima "--- parse(str)" "== instance methods" "= class XSD::QName" "refm/api/src/xsd/QName")
(find-rurima "--- source" "== instance methods" "= class XSD::QName" "refm/api/src/xsd/QName")
(find-rurima "--- source=(source)" "== instance methods" "= class XSD::QName" "refm/api/src/xsd/QName")
(find-rurima "--- to_s" "== instance methods" "= class XSD::QName" "refm/api/src/xsd/QName")
(find-rurima "= class XSD::XSDHexBinary < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDHexBinary")
(find-rurima "== class methods" "= class XSD::XSDHexBinary < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDHexBinary")
(find-rurima "--- new(value = nil)" "== class methods" "= class XSD::XSDHexBinary < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDHexBinary")
(find-rurima "== instance methods" "= class XSD::XSDHexBinary < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDHexBinary")
(find-rurima "--- set_encoded(value)" "== instance methods" "= class XSD::XSDHexBinary < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDHexBinary")
(find-rurima "--- string" "== instance methods" "= class XSD::XSDHexBinary < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDHexBinary")
(find-rurima "= class XSD::XSDFloat < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDFloat")
(find-rurima "== class methods" "= class XSD::XSDFloat < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDFloat")
(find-rurima "--- new(value = nil)" "== class methods" "= class XSD::XSDFloat < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDFloat")
(find-rurima "= class XSD::NS::FormatError < XSD::Error" "refm/api/src/xsd/NS__FormatError")
(find-rurima "= class XSD::XSDUnsignedByte < XSD::XSDUnsignedShort" "refm/api/src/xsd/XSDUnsignedByte")
(find-rurima "== class methods" "= class XSD::XSDUnsignedByte < XSD::XSDUnsignedShort" "refm/api/src/xsd/XSDUnsignedByte")
(find-rurima "--- new(value = nil)" "== class methods" "= class XSD::XSDUnsignedByte < XSD::XSDUnsignedShort" "refm/api/src/xsd/XSDUnsignedByte")
(find-rurima "= module XSD::CodeGen::CommentDef" "refm/api/src/xsd/CodeGen__CommentDef")
(find-rurima "== class methods" "= module XSD::CodeGen::CommentDef" "refm/api/src/xsd/CodeGen__CommentDef")
(find-rurima "--- new(name, baseclass = nil)" "== class methods" "= module XSD::CodeGen::CommentDef" "refm/api/src/xsd/CodeGen__CommentDef")
(find-rurima "== instance methods" "= module XSD::CodeGen::CommentDef" "refm/api/src/xsd/CodeGen__CommentDef")
(find-rurima "--- comment" "== instance methods" "= module XSD::CodeGen::CommentDef" "refm/api/src/xsd/CodeGen__CommentDef")
(find-rurima "--- comment=(comment)" "== instance methods" "= module XSD::CodeGen::CommentDef" "refm/api/src/xsd/CodeGen__CommentDef")
(find-rurima "= class XSD::XSDUnsignedLong < XSD::XSDNonNegativeInteger" "refm/api/src/xsd/XSDUnsignedLong")
(find-rurima "== class methods" "= class XSD::XSDUnsignedLong < XSD::XSDNonNegativeInteger" "refm/api/src/xsd/XSDUnsignedLong")
(find-rurima "--- new(value = nil)" "== class methods" "= class XSD::XSDUnsignedLong < XSD::XSDNonNegativeInteger" "refm/api/src/xsd/XSDUnsignedLong")
(find-rurima "= class XSD::XMLParser::REXMLParser < XSD::XMLParser::Parser" "refm/api/src/xsd/XMLParser__REXMLParser")
(find-rurima "== class methods" "= class XSD::XMLParser::REXMLParser < XSD::XMLParser::Parser" "refm/api/src/xsd/XMLParser__REXMLParser")
(find-rurima "--- new" "== class methods" "= class XSD::XMLParser::REXMLParser < XSD::XMLParser::Parser" "refm/api/src/xsd/XMLParser__REXMLParser")
(find-rurima "== instance methods" "= class XSD::XMLParser::REXMLParser < XSD::XMLParser::Parser" "refm/api/src/xsd/XMLParser__REXMLParser")
(find-rurima "--- do_parse(string_or_readable)" "== instance methods" "= class XSD::XMLParser::REXMLParser < XSD::XMLParser::Parser" "refm/api/src/xsd/XMLParser__REXMLParser")
(find-rurima "--- epilogue" "== instance methods" "= class XSD::XMLParser::REXMLParser < XSD::XMLParser::Parser" "refm/api/src/xsd/XMLParser__REXMLParser")
(find-rurima "--- tag_start(name, attrs)" "== instance methods" "= class XSD::XMLParser::REXMLParser < XSD::XMLParser::Parser" "refm/api/src/xsd/XMLParser__REXMLParser")
(find-rurima "--- tag_end(name)" "== instance methods" "= class XSD::XMLParser::REXMLParser < XSD::XMLParser::Parser" "refm/api/src/xsd/XMLParser__REXMLParser")
(find-rurima "--- text(text)" "== instance methods" "= class XSD::XMLParser::REXMLParser < XSD::XMLParser::Parser" "refm/api/src/xsd/XMLParser__REXMLParser")
(find-rurima "--- xmldecl(version, encoding, standalone)" "== instance methods" "= class XSD::XMLParser::REXMLParser < XSD::XMLParser::Parser" "refm/api/src/xsd/XMLParser__REXMLParser")
(find-rurima "= module XSD::XSDDateTimeImpl" "refm/api/src/xsd/XSDDateTimeImpl")
(find-rurima "== instance methods" "= module XSD::XSDDateTimeImpl" "refm/api/src/xsd/XSDDateTimeImpl")
(find-rurima "--- _set(t)" "== instance methods" "= module XSD::XSDDateTimeImpl" "refm/api/src/xsd/XSDDateTimeImpl")
(find-rurima "--- add_tz(s)" "== instance methods" "= module XSD::XSDDateTimeImpl" "refm/api/src/xsd/XSDDateTimeImpl")
(find-rurima "--- of2tz(offset)" "== instance methods" "= module XSD::XSDDateTimeImpl" "refm/api/src/xsd/XSDDateTimeImpl")
(find-rurima "--- to_date" "== instance methods" "= module XSD::XSDDateTimeImpl" "refm/api/src/xsd/XSDDateTimeImpl")
(find-rurima "--- to_datetime" "== instance methods" "= module XSD::XSDDateTimeImpl" "refm/api/src/xsd/XSDDateTimeImpl")
(find-rurima "--- to_obj(klass)" "== instance methods" "= module XSD::XSDDateTimeImpl" "refm/api/src/xsd/XSDDateTimeImpl")
(find-rurima "--- to_time" "== instance methods" "= module XSD::XSDDateTimeImpl" "refm/api/src/xsd/XSDDateTimeImpl")
(find-rurima "--- tz2of(str)" "== instance methods" "= module XSD::XSDDateTimeImpl" "refm/api/src/xsd/XSDDateTimeImpl")
(find-rurima "= class XSD::XSDDuration < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDDuration")
(find-rurima "== class methods" "= class XSD::XSDDuration < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDDuration")
(find-rurima "--- new(value = nil)" "== class methods" "= class XSD::XSDDuration < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDDuration")
(find-rurima "== instance methods" "= class XSD::XSDDuration < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDDuration")
(find-rurima "--- day" "== instance methods" "= class XSD::XSDDuration < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDDuration")
(find-rurima "--- day=(day)" "== instance methods" "= class XSD::XSDDuration < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDDuration")
(find-rurima "--- hour" "== instance methods" "= class XSD::XSDDuration < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDDuration")
(find-rurima "--- hour=(hour)" "== instance methods" "= class XSD::XSDDuration < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDDuration")
(find-rurima "--- min" "== instance methods" "= class XSD::XSDDuration < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDDuration")
(find-rurima "--- min=(min)" "== instance methods" "= class XSD::XSDDuration < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDDuration")
(find-rurima "--- month" "== instance methods" "= class XSD::XSDDuration < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDDuration")
(find-rurima "--- month=(month)" "== instance methods" "= class XSD::XSDDuration < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDDuration")
(find-rurima "--- sec" "== instance methods" "= class XSD::XSDDuration < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDDuration")
(find-rurima "--- sec=(sec)" "== instance methods" "= class XSD::XSDDuration < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDDuration")
(find-rurima "--- sign" "== instance methods" "= class XSD::XSDDuration < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDDuration")
(find-rurima "--- sign=(sign)" "== instance methods" "= class XSD::XSDDuration < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDDuration")
(find-rurima "--- year" "== instance methods" "= class XSD::XSDDuration < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDDuration")
(find-rurima "--- year=(year)" "== instance methods" "= class XSD::XSDDuration < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDDuration")
(find-rurima "= class XSD::XSDDate < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDDate")
(find-rurima "== class methods" "= class XSD::XSDDate < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDDate")
(find-rurima "--- new(value = nil)" "== class methods" "= class XSD::XSDDate < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDDate")
(find-rurima "= class XSD::XSDDateTime < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDDateTime")
(find-rurima "== class methods" "= class XSD::XSDDateTime < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDDateTime")
(find-rurima "--- new(value = nil)" "== class methods" "= class XSD::XSDDateTime < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDDateTime")
(find-rurima "= class XSD::XSDNil < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDNil")
(find-rurima "== class methods" "= class XSD::XSDNil < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDNil")
(find-rurima "--- new(value = nil)" "== class methods" "= class XSD::XSDNil < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDNil")
(find-rurima "= class XSD::XSDBoolean < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDBoolean")
(find-rurima "== class methods" "= class XSD::XSDBoolean < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDBoolean")
(find-rurima "--- new(value = nil)" "== class methods" "= class XSD::XSDBoolean < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDBoolean")
(find-rurima "= class XSD::NamedElements" "refm/api/src/xsd/NamedElements")
(find-rurima "== class methods" "= class XSD::NamedElements" "refm/api/src/xsd/NamedElements")
(find-rurima "--- new" "== class methods" "= class XSD::NamedElements" "refm/api/src/xsd/NamedElements")
(find-rurima "== instance methods" "= class XSD::NamedElements" "refm/api/src/xsd/NamedElements")
(find-rurima "--- [](idx)" "== instance methods" "= class XSD::NamedElements" "refm/api/src/xsd/NamedElements")
(find-rurima "--- <<(rhs)" "== instance methods" "= class XSD::NamedElements" "refm/api/src/xsd/NamedElements")
(find-rurima "--- +(rhs)" "== instance methods" "= class XSD::NamedElements" "refm/api/src/xsd/NamedElements")
(find-rurima "--- concat(rhs)" "== instance methods" "= class XSD::NamedElements" "refm/api/src/xsd/NamedElements")
(find-rurima "--- delete(rhs)" "== instance methods" "= class XSD::NamedElements" "refm/api/src/xsd/NamedElements")
(find-rurima "--- dup" "== instance methods" "= class XSD::NamedElements" "refm/api/src/xsd/NamedElements")
(find-rurima "--- each {|element| ...}" "== instance methods" "= class XSD::NamedElements" "refm/api/src/xsd/NamedElements")
(find-rurima "--- empty?" "== instance methods" "= class XSD::NamedElements" "refm/api/src/xsd/NamedElements")
(find-rurima "--- find_name(name)" "== instance methods" "= class XSD::NamedElements" "refm/api/src/xsd/NamedElements")
(find-rurima "--- freeze" "== instance methods" "= class XSD::NamedElements" "refm/api/src/xsd/NamedElements")
(find-rurima "--- keys" "== instance methods" "= class XSD::NamedElements" "refm/api/src/xsd/NamedElements")
(find-rurima "--- size" "== instance methods" "= class XSD::NamedElements" "refm/api/src/xsd/NamedElements")
(find-rurima "= class XSD::XSDUnsignedShort < XSD::XSDUnsignedInt" "refm/api/src/xsd/XSDUnsignedShort")
(find-rurima "== class methods" "= class XSD::XSDUnsignedShort < XSD::XSDUnsignedInt" "refm/api/src/xsd/XSDUnsignedShort")
(find-rurima "--- new(value = nil)" "== class methods" "= class XSD::XSDUnsignedShort < XSD::XSDUnsignedInt" "refm/api/src/xsd/XSDUnsignedShort")
(find-rurima "= class XSD::XSDNegativeInteger < XSD::XSDNonPositiveInteger" "refm/api/src/xsd/XSDNegativeInteger")
(find-rurima "== class methods" "= class XSD::XSDNegativeInteger < XSD::XSDNonPositiveInteger" "refm/api/src/xsd/XSDNegativeInteger")
(find-rurima "--- new(value = nil)" "== class methods" "= class XSD::XSDNegativeInteger < XSD::XSDNonPositiveInteger" "refm/api/src/xsd/XSDNegativeInteger")
(find-rurima "= class XSD::CodeGen::ModuleDef" "refm/api/src/xsd/CodeGen__ModuleDef")
(find-rurima "== class methods" "= class XSD::CodeGen::ModuleDef" "refm/api/src/xsd/CodeGen__ModuleDef")
(find-rurima "--- new(name)" "== class methods" "= class XSD::CodeGen::ModuleDef" "refm/api/src/xsd/CodeGen__ModuleDef")
(find-rurima "== instance methods" "= class XSD::CodeGen::ModuleDef" "refm/api/src/xsd/CodeGen__ModuleDef")
(find-rurima "--- def_require(path)" "== instance methods" "= class XSD::CodeGen::ModuleDef" "refm/api/src/xsd/CodeGen__ModuleDef")
(find-rurima "--- def_const(const, value)" "== instance methods" "= class XSD::CodeGen::ModuleDef" "refm/api/src/xsd/CodeGen__ModuleDef")
(find-rurima "--- def_code(code)" "== instance methods" "= class XSD::CodeGen::ModuleDef" "refm/api/src/xsd/CodeGen__ModuleDef")
(find-rurima "--- def_method(name, *params) { ... }" "== instance methods" "= class XSD::CodeGen::ModuleDef" "refm/api/src/xsd/CodeGen__ModuleDef")
(find-rurima "--- def_protectedmethod(name, *params) { ... }" "== instance methods" "= class XSD::CodeGen::ModuleDef" "refm/api/src/xsd/CodeGen__ModuleDef")
(find-rurima "--- def_privatemethod(name, *params) { ... }" "== instance methods" "= class XSD::CodeGen::ModuleDef" "refm/api/src/xsd/CodeGen__ModuleDef")
(find-rurima "--- add_method(m, visibility = :public)" "== instance methods" "= class XSD::CodeGen::ModuleDef" "refm/api/src/xsd/CodeGen__ModuleDef")
(find-rurima "--- dump" "== instance methods" "= class XSD::CodeGen::ModuleDef" "refm/api/src/xsd/CodeGen__ModuleDef")
(find-rurima "= class XSD::XSDQName < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDQName")
(find-rurima "== class methods" "= class XSD::XSDQName < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDQName")
(find-rurima "--- new(value = nil)" "== class methods" "= class XSD::XSDQName < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDQName")
(find-rurima "= class XSD::XSDByte < XSD::XSDShort" "refm/api/src/xsd/XSDByte")
(find-rurima "== class methods" "= class XSD::XSDByte < XSD::XSDShort" "refm/api/src/xsd/XSDByte")
(find-rurima "--- new(value = nil)" "== class methods" "= class XSD::XSDByte < XSD::XSDShort" "refm/api/src/xsd/XSDByte")
(find-rurima "= class XSD::XSDDouble < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDDouble")
(find-rurima "== class methods" "= class XSD::XSDDouble < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDDouble")
(find-rurima "--- new(value = nil)" "== class methods" "= class XSD::XSDDouble < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDDouble")
(find-rurima "= module XSD::XMLParser" "refm/api/src/xsd/xmlparser.rd")
(find-rurima "== module function" "= module XSD::XMLParser" "refm/api/src/xsd/xmlparser.rd")
(find-rurima "--- create_parser(host, opt)" "== module function" "= module XSD::XMLParser" "refm/api/src/xsd/xmlparser.rd")
(find-rurima "--- filter_ns(ns, attrs)" "== module function" "= module XSD::XMLParser" "refm/api/src/xsd/xmlparser.rd")
(find-rurima "= module XSD::NS" "refm/api/src/xsd/NS")
(find-rurima "== Instance Methods" "= module XSD::NS" "refm/api/src/xsd/NS")
(find-rurima "--- initialize(tag2ns = {})" "== Instance Methods" "= module XSD::NS" "refm/api/src/xsd/NS")
(find-rurima "--- assign(ns, tag = nil)" "== Instance Methods" "= module XSD::NS" "refm/api/src/xsd/NS")
(find-rurima "--- assigned?(ns)" "== Instance Methods" "= module XSD::NS" "refm/api/src/xsd/NS")
(find-rurima "--- assigned_tag?(tag)" "== Instance Methods" "= module XSD::NS" "refm/api/src/xsd/NS")
(find-rurima "--- clone_ns" "== Instance Methods" "= module XSD::NS" "refm/api/src/xsd/NS")
(find-rurima "--- compare(ns, name, rhs)" "== Instance Methods" "= module XSD::NS" "refm/api/src/xsd/NS")
(find-rurima "--- default_namespace" "== Instance Methods" "= module XSD::NS" "refm/api/src/xsd/NS")
(find-rurima "--- each_ns {|ns, tag| .... }" "== Instance Methods" "= module XSD::NS" "refm/api/src/xsd/NS")
(find-rurima "--- name(name)" "== Instance Methods" "= module XSD::NS" "refm/api/src/xsd/NS")
(find-rurima "--- parse(elem)" "== Instance Methods" "= module XSD::NS" "refm/api/src/xsd/NS")
(find-rurima "--- parse_local(elem)" "== Instance Methods" "= module XSD::NS" "refm/api/src/xsd/NS")
(find-rurima "= class XSD::ValueSpaceError < XSD::Error" "refm/api/src/xsd/ValueSpaceError")
(find-rurima "= class XSD::XSDGYear < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDGYear")
(find-rurima "== class methods" "= class XSD::XSDGYear < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDGYear")
(find-rurima "--- new(value = nil)" "== class methods" "= class XSD::XSDGYear < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDGYear")
(find-rurima "= class XSD::NS::Assigner" "refm/api/src/xsd/NS__Assigner")
(find-rurima "== class methods" "= class XSD::NS::Assigner" "refm/api/src/xsd/NS__Assigner")
(find-rurima "--- new" "== class methods" "= class XSD::NS::Assigner" "refm/api/src/xsd/NS__Assigner")
(find-rurima "== instance methods" "= class XSD::NS::Assigner" "refm/api/src/xsd/NS__Assigner")
(find-rurima "--- assign(ns)" "== instance methods" "= class XSD::NS::Assigner" "refm/api/src/xsd/NS__Assigner")
(find-rurima "= class XSD::XSDLong < XSD::XSDInteger" "refm/api/src/xsd/XSDLong")
(find-rurima "== class methods" "= class XSD::XSDLong < XSD::XSDInteger" "refm/api/src/xsd/XSDLong")
(find-rurima "--- new(value = nil)" "== class methods" "= class XSD::XSDLong < XSD::XSDInteger" "refm/api/src/xsd/XSDLong")
(find-rurima "= module XSD::FloatConstants" "refm/api/src/xsd/FloatConstants")
(find-rurima "== constants" "= module XSD::FloatConstants" "refm/api/src/xsd/FloatConstants")
(find-rurima "--- NaN" "== constants" "= module XSD::FloatConstants" "refm/api/src/xsd/FloatConstants")
(find-rurima "--- POSITIVE_INF" "== constants" "= module XSD::FloatConstants" "refm/api/src/xsd/FloatConstants")
(find-rurima "--- NEGATIVE_INF" "== constants" "= module XSD::FloatConstants" "refm/api/src/xsd/FloatConstants")
(find-rurima "= class XSD::XSDInt < XSD::XSDLong" "refm/api/src/xsd/XSDInt")
(find-rurima "== class methods" "= class XSD::XSDInt < XSD::XSDLong" "refm/api/src/xsd/XSDInt")
(find-rurima "--- new(value = nil)" "== class methods" "= class XSD::XSDInt < XSD::XSDLong" "refm/api/src/xsd/XSDInt")
(find-rurima "= class XSD::XSDNonPositiveInteger < XSD::XSDInteger" "refm/api/src/xsd/XSDNonPositiveInteger")
(find-rurima "== class methods" "= class XSD::XSDNonPositiveInteger < XSD::XSDInteger" "refm/api/src/xsd/XSDNonPositiveInteger")
(find-rurima "--- new(value = nil)" "== class methods" "= class XSD::XSDNonPositiveInteger < XSD::XSDInteger" "refm/api/src/xsd/XSDNonPositiveInteger")
(find-rurima "= class XSD::XSDTime < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDTime")
(find-rurima "== class methods" "= class XSD::XSDTime < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDTime")
(find-rurima "--- new(value = nil)" "== class methods" "= class XSD::XSDTime < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDTime")
(find-rurima "= class XSD::XMLParser::Parser" "refm/api/src/xsd/XMLParser__Parser")
(find-rurima "== class methods" "= class XSD::XMLParser::Parser" "refm/api/src/xsd/XMLParser__Parser")
(find-rurima "--- new(host, opt = {})" "== class methods" "= class XSD::XMLParser::Parser" "refm/api/src/xsd/XMLParser__Parser")
(find-rurima "--- add_factory(factory)" "== class methods" "= class XSD::XMLParser::Parser" "refm/api/src/xsd/XMLParser__Parser")
(find-rurima "--- create_parser(host, opt = {})" "== class methods" "= class XSD::XMLParser::Parser" "refm/api/src/xsd/XMLParser__Parser")
(find-rurima "--- factory" "== class methods" "= class XSD::XMLParser::Parser" "refm/api/src/xsd/XMLParser__Parser")
(find-rurima "== instance methods" "= class XSD::XMLParser::Parser" "refm/api/src/xsd/XMLParser__Parser")
(find-rurima "--- charset" "== instance methods" "= class XSD::XMLParser::Parser" "refm/api/src/xsd/XMLParser__Parser")
(find-rurima "--- charset=(charset)" "== instance methods" "= class XSD::XMLParser::Parser" "refm/api/src/xsd/XMLParser__Parser")
(find-rurima "--- parse(string_or_readable)" "== instance methods" "= class XSD::XMLParser::Parser" "refm/api/src/xsd/XMLParser__Parser")
(find-rurima "= class XSD::XMLParser::ParserError < XSD::Error" "refm/api/src/xsd/XMLParser__Parser")
(find-rurima "= class XSD::XMLParser::FormatDecodeError < XSD::XMLParser::ParserError" "refm/api/src/xsd/XMLParser__Parser")
(find-rurima "= class XSD::XMLParser::UnknownElementError < XSD::XMLParser::FormatDecodeError" "refm/api/src/xsd/XMLParser__Parser")
(find-rurima "= class XSD::XMLParser::UnknownAttributeError < XSD::XMLParser::FormatDecodeError" "refm/api/src/xsd/XMLParser__Parser")
(find-rurima "= class XSD::XMLParser::UnexpectedElementError < XSD::XMLParser::FormatDecodeError" "refm/api/src/xsd/XMLParser__Parser")
(find-rurima "= class XSD::XMLParser::ElementConstraintError < XSD::XMLParser::FormatDecodeError" "refm/api/src/xsd/XMLParser__Parser")
(find-rurima "= class XSD::XSDAnySimpleType < XSD::NSDBase" "refm/api/src/xsd/XSDAnySimpleType")
(find-rurima "== class methods" "= class XSD::XSDAnySimpleType < XSD::NSDBase" "refm/api/src/xsd/XSDAnySimpleType")
(find-rurima "--- new(value = nil)" "== class methods" "= class XSD::XSDAnySimpleType < XSD::NSDBase" "refm/api/src/xsd/XSDAnySimpleType")
(find-rurima "== instance methods" "= class XSD::XSDAnySimpleType < XSD::NSDBase" "refm/api/src/xsd/XSDAnySimpleType")
(find-rurima "--- check_lexical_format(value)" "== instance methods" "= class XSD::XSDAnySimpleType < XSD::NSDBase" "refm/api/src/xsd/XSDAnySimpleType")
(find-rurima "--- data" "== instance methods" "= class XSD::XSDAnySimpleType < XSD::NSDBase" "refm/api/src/xsd/XSDAnySimpleType")
(find-rurima "--- is_nil" "== instance methods" "= class XSD::XSDAnySimpleType < XSD::NSDBase" "refm/api/src/xsd/XSDAnySimpleType")
(find-rurima "--- is_nil=(bool)" "== instance methods" "= class XSD::XSDAnySimpleType < XSD::NSDBase" "refm/api/src/xsd/XSDAnySimpleType")
(find-rurima "--- set(value)" "== instance methods" "= class XSD::XSDAnySimpleType < XSD::NSDBase" "refm/api/src/xsd/XSDAnySimpleType")
(find-rurima "--- to_s" "== instance methods" "= class XSD::XSDAnySimpleType < XSD::NSDBase" "refm/api/src/xsd/XSDAnySimpleType")
(find-rurima "= class XSD::Charset::CharsetConversionError < XSD::Charset::CharsetError" "refm/api/src/xsd/Charset__CharsetConversionError")
(find-rurima "= class XSD::Charset::CharsetError < XSD::Charset::XSDError" "refm/api/src/xsd/Charset__CharsetError")
(find-rurima "= class XSD::XSDGDay < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDGDay")
(find-rurima "== class methods" "= class XSD::XSDGDay < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDGDay")
(find-rurima "--- new(value = nil)" "== class methods" "= class XSD::XSDGDay < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDGDay")
(find-rurima "= class XSD::XSDGMonth < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDGMonth")
(find-rurima "== class methods" "= class XSD::XSDGMonth < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDGMonth")
(find-rurima "--- new(value = nil)" "== class methods" "= class XSD::XSDGMonth < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDGMonth")
(find-rurima "= class XSD::XSDNormalizedString < XSD::XSDString" "refm/api/src/xsd/XSDNormalizedString")
(find-rurima "== class methods" "= class XSD::XSDNormalizedString < XSD::XSDString" "refm/api/src/xsd/XSDNormalizedString")
(find-rurima "--- new(value = nil)" "== class methods" "= class XSD::XSDNormalizedString < XSD::XSDString" "refm/api/src/xsd/XSDNormalizedString")
(find-rurima "= class XSD::XSDShort < XSD::XSDInt" "refm/api/src/xsd/XSDShort")
(find-rurima "== class methods" "= class XSD::XSDShort < XSD::XSDInt" "refm/api/src/xsd/XSDShort")
(find-rurima "--- new(value = nil)" "== class methods" "= class XSD::XSDShort < XSD::XSDInt" "refm/api/src/xsd/XSDShort")
(find-rurima "= class XSD::XSDPositiveInteger < XSD::XSDNonNegativeInteger" "refm/api/src/xsd/XSDPositiveInteger")
(find-rurima "== class methods" "= class XSD::XSDPositiveInteger < XSD::XSDNonNegativeInteger" "refm/api/src/xsd/XSDPositiveInteger")
(find-rurima "--- new(value = nil)" "== class methods" "= class XSD::XSDPositiveInteger < XSD::XSDNonNegativeInteger" "refm/api/src/xsd/XSDPositiveInteger")
(find-rurima "= class XSD::XSDUnsignedInt < XSD::XSDUnsignedLong" "refm/api/src/xsd/XSDUnsignedInt")
(find-rurima "== class methods" "= class XSD::XSDUnsignedInt < XSD::XSDUnsignedLong" "refm/api/src/xsd/XSDUnsignedInt")
(find-rurima "--- new(value = nil)" "== class methods" "= class XSD::XSDUnsignedInt < XSD::XSDUnsignedLong" "refm/api/src/xsd/XSDUnsignedInt")
(find-rurima "= class XSD::CodeGen::MethodDef" "refm/api/src/xsd/CodeGen__MethodDef")
(find-rurima "== class methods" "= class XSD::CodeGen::MethodDef" "refm/api/src/xsd/CodeGen__MethodDef")
(find-rurima "--- new(name, *params)" "== class methods" "= class XSD::CodeGen::MethodDef" "refm/api/src/xsd/CodeGen__MethodDef")
(find-rurima "== instance methods" "= class XSD::CodeGen::MethodDef" "refm/api/src/xsd/CodeGen__MethodDef")
(find-rurima "--- definition" "== instance methods" "= class XSD::CodeGen::MethodDef" "refm/api/src/xsd/CodeGen__MethodDef")
(find-rurima "--- definition=(definition)" "== instance methods" "= class XSD::CodeGen::MethodDef" "refm/api/src/xsd/CodeGen__MethodDef")
(find-rurima "--- dump" "== instance methods" "= class XSD::CodeGen::MethodDef" "refm/api/src/xsd/CodeGen__MethodDef")
(find-rurima "= class XSD::NSDBase" "refm/api/src/xsd/NSDBase")
(find-rurima "== class methods" "= class XSD::NSDBase" "refm/api/src/xsd/NSDBase")
(find-rurima "--- new" "== class methods" "= class XSD::NSDBase" "refm/api/src/xsd/NSDBase")
(find-rurima "--- inherited(klass)" "== class methods" "= class XSD::NSDBase" "refm/api/src/xsd/NSDBase")
(find-rurima "--- types" "== class methods" "= class XSD::NSDBase" "refm/api/src/xsd/NSDBase")
(find-rurima "== instance methods" "= class XSD::NSDBase" "refm/api/src/xsd/NSDBase")
(find-rurima "--- type" "== instance methods" "= class XSD::NSDBase" "refm/api/src/xsd/NSDBase")
(find-rurima "--- type=(type)" "== instance methods" "= class XSD::NSDBase" "refm/api/src/xsd/NSDBase")
(find-rurima "= class XSD::XSDNonNegativeInteger < XSD::XSDInteger" "refm/api/src/xsd/XSDNonNegativeInteger")
(find-rurima "== class methods" "= class XSD::XSDNonNegativeInteger < XSD::XSDInteger" "refm/api/src/xsd/XSDNonNegativeInteger")
(find-rurima "--- new(value = nil)" "== class methods" "= class XSD::XSDNonNegativeInteger < XSD::XSDInteger" "refm/api/src/xsd/XSDNonNegativeInteger")
(find-rurima "= class XSD::Charset::XSDError < StandardError" "refm/api/src/xsd/Charset__XSDError")
(find-rurima "= class XSD::XSDString < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDString")
(find-rurima "== class methods" "= class XSD::XSDString < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDString")
(find-rurima "--- new(value = nil)" "== class methods" "= class XSD::XSDString < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDString")
(find-rurima "= class XSD::XSDDecimal < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDDecimal")
(find-rurima "== class methods" "= class XSD::XSDDecimal < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDDecimal")
(find-rurima "--- new(value = nil)" "== class methods" "= class XSD::XSDDecimal < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDDecimal")
(find-rurima "== instance methods" "= class XSD::XSDDecimal < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDDecimal")
(find-rurima "--- nonzero?" "== instance methods" "= class XSD::XSDDecimal < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDDecimal")
(find-rurima "= class XSD::XSDGYearMonth < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDGYearMonth")
(find-rurima "== class methods" "= class XSD::XSDGYearMonth < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDGYearMonth")
(find-rurima "--- new(value = nil)" "== class methods" "= class XSD::XSDGYearMonth < XSD::XSDAnySimpleType" "refm/api/src/xsd/XSDGYearMonth")
(find-rurima "= class XSD::XMLParser::XMLParser < XSD::XMLParser::Parser" "refm/api/src/xsd/XMLParser__XMLParser")
(find-rurima "== class methods" "= class XSD::XMLParser::XMLParser < XSD::XMLParser::Parser" "refm/api/src/xsd/XMLParser__XMLParser")
(find-rurima "--- new" "== class methods" "= class XSD::XMLParser::XMLParser < XSD::XMLParser::Parser" "refm/api/src/xsd/XMLParser__XMLParser")
(find-rurima "== instance methods" "= class XSD::XMLParser::XMLParser < XSD::XMLParser::Parser" "refm/api/src/xsd/XMLParser__XMLParser")
(find-rurima "--- do_parse(string_or_readable)" "== instance methods" "= class XSD::XMLParser::XMLParser < XSD::XMLParser::Parser" "refm/api/src/xsd/XMLParser__XMLParser")
(find-rurima "= class XSD::XMLParser::XMLScanner < XSD::XMLParser::Parser" "refm/api/src/xsd/XMLParser__XMLScanner")
(find-rurima "== class methods" "= class XSD::XMLParser::XMLScanner < XSD::XMLParser::Parser" "refm/api/src/xsd/XMLParser__XMLScanner")
(find-rurima "--- new" "== class methods" "= class XSD::XMLParser::XMLScanner < XSD::XMLParser::Parser" "refm/api/src/xsd/XMLParser__XMLScanner")
(find-rurima "== instance methods" "= class XSD::XMLParser::XMLScanner < XSD::XMLParser::Parser" "refm/api/src/xsd/XMLParser__XMLScanner")
(find-rurima "--- do_parse(string_or_readable)" "== instance methods" "= class XSD::XMLParser::XMLScanner < XSD::XMLParser::Parser" "refm/api/src/xsd/XMLParser__XMLScanner")
(find-rurima "--- on_attr_charref(code)" "== instance methods" "= class XSD::XMLParser::XMLScanner < XSD::XMLParser::Parser" "refm/api/src/xsd/XMLParser__XMLScanner")
(find-rurima "--- on_attr_charref_hex(code)" "== instance methods" "= class XSD::XMLParser::XMLScanner < XSD::XMLParser::Parser" "refm/api/src/xsd/XMLParser__XMLScanner")
(find-rurima "--- on_attr_entityref(ref)" "== instance methods" "= class XSD::XMLParser::XMLScanner < XSD::XMLParser::Parser" "refm/api/src/xsd/XMLParser__XMLScanner")
(find-rurima "--- on_attr_value(str)" "== instance methods" "= class XSD::XMLParser::XMLScanner < XSD::XMLParser::Parser" "refm/api/src/xsd/XMLParser__XMLScanner")
(find-rurima "--- on_attribute(name)" "== instance methods" "= class XSD::XMLParser::XMLScanner < XSD::XMLParser::Parser" "refm/api/src/xsd/XMLParser__XMLScanner")
(find-rurima "--- on_chardata(str)" "== instance methods" "= class XSD::XMLParser::XMLScanner < XSD::XMLParser::Parser" "refm/api/src/xsd/XMLParser__XMLScanner")
(find-rurima "--- on_charref(code)" "== instance methods" "= class XSD::XMLParser::XMLScanner < XSD::XMLParser::Parser" "refm/api/src/xsd/XMLParser__XMLScanner")
(find-rurima "--- on_charref_hex(code)" "== instance methods" "= class XSD::XMLParser::XMLScanner < XSD::XMLParser::Parser" "refm/api/src/xsd/XMLParser__XMLScanner")
(find-rurima "--- on_entityref(ref)" "== instance methods" "= class XSD::XMLParser::XMLScanner < XSD::XMLParser::Parser" "refm/api/src/xsd/XMLParser__XMLScanner")
(find-rurima "--- on_etag(name)" "== instance methods" "= class XSD::XMLParser::XMLScanner < XSD::XMLParser::Parser" "refm/api/src/xsd/XMLParser__XMLScanner")
(find-rurima "--- on_stag(name)" "== instance methods" "= class XSD::XMLParser::XMLScanner < XSD::XMLParser::Parser" "refm/api/src/xsd/XMLParser__XMLScanner")
(find-rurima "--- on_stag_end(name)" "== instance methods" "= class XSD::XMLParser::XMLScanner < XSD::XMLParser::Parser" "refm/api/src/xsd/XMLParser__XMLScanner")
(find-rurima "--- on_stag_end_empty(name)" "== instance methods" "= class XSD::XMLParser::XMLScanner < XSD::XMLParser::Parser" "refm/api/src/xsd/XMLParser__XMLScanner")
(find-rurima "--- on_xmldecl_encoding(str)" "== instance methods" "= class XSD::XMLParser::XMLScanner < XSD::XMLParser::Parser" "refm/api/src/xsd/XMLParser__XMLScanner")
(find-rurima "--- on_xmldecl_version(str)" "== instance methods" "= class XSD::XMLParser::XMLScanner < XSD::XMLParser::Parser" "refm/api/src/xsd/XMLParser__XMLScanner")
(find-rurima "--- parse_error(msg)" "== instance methods" "= class XSD::XMLParser::XMLScanner < XSD::XMLParser::Parser" "refm/api/src/xsd/XMLParser__XMLScanner")
(find-rurima "--- scanner_kcode=(charset)" "== instance methods" "= class XSD::XMLParser::XMLScanner < XSD::XMLParser::Parser" "refm/api/src/xsd/XMLParser__XMLScanner")
(find-rurima "--- valid_error(msg)" "== instance methods" "= class XSD::XMLParser::XMLScanner < XSD::XMLParser::Parser" "refm/api/src/xsd/XMLParser__XMLScanner")
(find-rurima "--- warning(msg)" "== instance methods" "= class XSD::XMLParser::XMLScanner < XSD::XMLParser::Parser" "refm/api/src/xsd/XMLParser__XMLScanner")
(find-rurima "--- wellformed_error(msg)" "== instance methods" "= class XSD::XMLParser::XMLScanner < XSD::XMLParser::Parser" "refm/api/src/xsd/XMLParser__XMLScanner")
(find-rurima "= class XSD::Error < StandardError" "refm/api/src/xsd/Error")
(find-rurima "= class XSD::Charset::UnknownCharsetError < XSD::Charset::CharsetError" "refm/api/src/xsd/Charset__UnknownCharsetError")
(find-rurima "= class XSD::IconvCharset" "refm/api/src/xsd/IconvCharset")
(find-rurima "== class methods" "= class XSD::IconvCharset" "refm/api/src/xsd/IconvCharset")
(find-rurima "--- safe_iconv(to, from, str)" "== class methods" "= class XSD::IconvCharset" "refm/api/src/xsd/IconvCharset")
(find-rurima "=== 使用例" "refm/api/src/net/http.rd")
(find-rurima "==== ウェブサーバからドキュメントを得る (GET)" "=== 使用例" "refm/api/src/net/http.rd")
(find-rurima "==== フォームの情報を送信する (POST)" "=== 使用例" "refm/api/src/net/http.rd")
(find-rurima "==== プロクシ経由のアクセス" "=== 使用例" "refm/api/src/net/http.rd")
(find-rurima "==== リダイレクトに対応する" "=== 使用例" "refm/api/src/net/http.rd")
(find-rurima "==== Basic 認証" "=== 使用例" "refm/api/src/net/http.rd")
(find-rurima "=== フォームの値の区切り文字について" "refm/api/src/net/http.rd")
(find-rurima "=== 新しい仕様への変更と移行措置について" "refm/api/src/net/http.rd")
(find-rurima "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "== Class Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- new(address, port = 80, proxy_addr = nil, proxy_port = nil, proxy_user=nil, proxy_pass=nil) -> Net::HTTP" "== Class Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- start(address, port = 80, proxy_addr = nil, proxy_port = nil, proxy_user=nil, proxy_pass=nil) -> Net::HTTP" "== Class Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- start(address, port = 80, proxy_addr = nil, proxy_port = nil, proxy_user=nil, proxy_pass=nil) {|http| .... } -> object" "== Class Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- get(uri) -> String" "== Class Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- get(host, path, port = 80) -> String" "== Class Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- get_print(uri) -> ()" "== Class Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- get_print(host, path, port = 80) -> ()" "== Class Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "=== 例" "== Class Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- get_response(uri) -> Net::HTTPResponse" "=== 例" "== Class Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- get_response(host, path = nil, port = nil) -> Net::HTTPResponse" "=== 例" "== Class Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- post_form(uri, params) -> Net::HTTPResponse" "=== 例" "== Class Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- proxy_address -> String|nil" "=== 例" "== Class Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- proxy_port -> Integer|nil" "=== 例" "== Class Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- proxy_pass -> String|nil" "=== 例" "== Class Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- proxy_user -> String|nil" "=== 例" "== Class Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- Proxy(address, port = 80) -> Class" "=== 例" "== Class Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- proxy_class? -> bool" "=== 例" "== Class Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- http_default_port -> Integer" "=== 例" "== Class Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- default_port -> Integer" "=== 例" "== Class Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- https_default_port -> Integer" "=== 例" "== Class Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- version_1_1 -> ()" "=== 例" "== Class Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- version_1_1? -> false" "=== 例" "== Class Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- is_version_1_1? -> false" "=== 例" "== Class Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- version_1_1? -> bool" "=== 例" "== Class Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- is_version_1_1? -> bool " "=== 例" "== Class Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- version_1_2 -> true" "=== 例" "== Class Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- version_1_2 -> ()" "=== 例" "== Class Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- version_1_2? -> true" "=== 例" "== Class Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- is_version_1_2? -> true" "=== 例" "== Class Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- version_1_2? -> bool" "=== 例" "== Class Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- is_version_1_2? -> bool " "=== 例" "== Class Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "== Instance Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- start -> self" "== Instance Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- start {|http| .... } -> object" "== Instance Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- started? -> bool" "== Instance Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- active? -> bool" "== Instance Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- set_debug_output(io) -> ()" "== Instance Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- close_on_empty_response -> bool" "== Instance Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- close_on_empty_response=(bool)" "== Instance Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- address -> String" "== Instance Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- port -> Integer" "== Instance Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- proxy? -> bool" "== Instance Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- proxy_address -> String|nil" "== Instance Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- proxyaddr -> String|nil" "== Instance Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- proxy_port -> Integer|nil" "== Instance Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- proxyport -> Integer|nil" "== Instance Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- proxy_pass -> String|nil" "== Instance Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- proxy_user -> String|nil" "== Instance Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- open_timeout -> Integer" "== Instance Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- open_timeout=(seconds)" "== Instance Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- read_timeout -> Integer" "== Instance Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- read_timeout=(seconds)" "== Instance Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- finish -> ()" "== Instance Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- get(path, header = nil, dest = nil) -> Net::HTTPResponse" "== Instance Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- get(path, header = nil, dest = nil) {|body_segment| .... } -> Net::HTTPResponse" "== Instance Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- head(path, header = nil) -> Net::HTTPResponse" "== Instance Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- post(path, data, header = nil, dest = nil) -> Net::HTTPResponse" "== Instance Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- post(path, data, header = nil, dest = nil) {|body_segment| .... } -> Net::HTTPResponse" "== Instance Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- request_get(path, header = nil) -> Net::HTTPResponse" "== Instance Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- request_get(path, header = nil) {|response| .... } -> Net::HTTPResponse" "== Instance Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- get2(path, header = nil) -> Net::HTTPResponse" "== Instance Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- get2(path, header = nil) {|response| .... } -> Net::HTTPResponse" "== Instance Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- request_head(path, header = nil) -> Net::HTTPResponse" "== Instance Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- request_head(path, header = nil) {|response| .... } -> Net::HTTPResponse" "== Instance Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- head2(path, header = nil) -> Net::HTTPResponse" "== Instance Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- head2(path, header = nil) {|response| .... } -> Net::HTTPResponse" "== Instance Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- request_post(path, data, header = nil) -> Net::HTTPResponse" "== Instance Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- request_post(path, data, header = nil) {|response| .... } -> Net::HTTPResponse" "== Instance Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- post2(path, data, header = nil) -> Net::HTTPResponse" "== Instance Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- post2(path, data, header = nil) {|response| .... } -> Net::HTTPResponse" "== Instance Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- put(path, data, initheader = nil) -> Net::HTTPResponse" "== Instance Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- request_put(path, data, initheader = nil) -> Net::HTTPResponse" "== Instance Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- request_put(path, data, initheader = nil) {|response| .... } -> Net::HTTPResponse" "== Instance Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- put2(path, data, initheader = nil) -> Net::HTTPResponse" "== Instance Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- put2(path, data, initheader = nil) {|response| .... } -> Net::HTTPResponse" "== Instance Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- send_request(name, path, data = nil, header = nil) -> Net::HTTPResponse" "== Instance Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- request(request, data = nil) -> Net::HTTPResponse" "== Instance Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- request(request, data = nil) {|response| .... } -> Net::HTTPResponse" "== Instance Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- copy(path, initheader = nil) -> Net::HTTPResponse" "== Instance Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- delete(path, initheader = nil) -> Net::HTTPResponse" "== Instance Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- lock(path, body, initheader = nil) -> Net::HTTPResponse" "== Instance Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- mkcol(path, body, initheader = nil) -> Net::HTTPResponse" "== Instance Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- move(path, body, initheader = nil) -> Net::HTTPResponse" "== Instance Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- options(path, initheader = nil) -> Net::HTTPResponse" "== Instance Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- propfind(path, body, initheader = {'Depth' => '0'}) -> Net::HTTPResponse" "== Instance Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- proppatch(path, body, initheader = nil) -> Net::HTTPResponse" "== Instance Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- trace(path, initheader = nil) -> Net::HTTPResponse" "== Instance Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- unlock(path, body, initheader = nil) -> Net::HTTPResponse" "== Instance Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "--- use_ssl? -> bool" "== Instance Methods" "= class Net::HTTP < Object" "refm/api/src/net/http.rd")
(find-rurima "= module Net::HTTPHeader" "refm/api/src/net/http.rd")
(find-rurima "== Instance Methods" "= module Net::HTTPHeader" "refm/api/src/net/http.rd")
(find-rurima "--- [](key) -> String|nil" "== Instance Methods" "= module Net::HTTPHeader" "refm/api/src/net/http.rd")
(find-rurima "--- []=(key, val)" "== Instance Methods" "= module Net::HTTPHeader" "refm/api/src/net/http.rd")
(find-rurima "--- add_field(key, val) -> ()" "== Instance Methods" "= module Net::HTTPHeader" "refm/api/src/net/http.rd")
(find-rurima "--- get_fields(key) -> [String]" "== Instance Methods" "= module Net::HTTPHeader" "refm/api/src/net/http.rd")
(find-rurima "--- fetch(key) -> String" "== Instance Methods" "= module Net::HTTPHeader" "refm/api/src/net/http.rd")
(find-rurima "--- fetch(key, default) -> String" "== Instance Methods" "= module Net::HTTPHeader" "refm/api/src/net/http.rd")
(find-rurima "--- fetch(key) {|hash| .... } -> String" "== Instance Methods" "= module Net::HTTPHeader" "refm/api/src/net/http.rd")
(find-rurima "--- size -> Integer" "== Instance Methods" "= module Net::HTTPHeader" "refm/api/src/net/http.rd")
(find-rurima "--- length -> Integer" "== Instance Methods" "= module Net::HTTPHeader" "refm/api/src/net/http.rd")
(find-rurima "--- basic_auth(account, password) -> ()" "== Instance Methods" "= module Net::HTTPHeader" "refm/api/src/net/http.rd")
(find-rurima "--- chunked? -> bool" "== Instance Methods" "= module Net::HTTPHeader" "refm/api/src/net/http.rd")
(find-rurima "--- content_type -> String|nil" "== Instance Methods" "= module Net::HTTPHeader" "refm/api/src/net/http.rd")
(find-rurima "--- content_type=(type)" "== Instance Methods" "= module Net::HTTPHeader" "refm/api/src/net/http.rd")
(find-rurima "--- set_content_type(type, params = {})" "== Instance Methods" "= module Net::HTTPHeader" "refm/api/src/net/http.rd")
(find-rurima "--- main_type -> String|nil" "== Instance Methods" "= module Net::HTTPHeader" "refm/api/src/net/http.rd")
(find-rurima "--- sub_type -> String|nil" "== Instance Methods" "= module Net::HTTPHeader" "refm/api/src/net/http.rd")
(find-rurima "--- type_params -> Hash" "== Instance Methods" "= module Net::HTTPHeader" "refm/api/src/net/http.rd")
(find-rurima "--- form_data=(params)" "== Instance Methods" "= module Net::HTTPHeader" "refm/api/src/net/http.rd")
(find-rurima "--- set_form_data(params, sep = '&') -> ()" "== Instance Methods" "= module Net::HTTPHeader" "refm/api/src/net/http.rd")
(find-rurima "--- content_length -> Integer|nil" "== Instance Methods" "= module Net::HTTPHeader" "refm/api/src/net/http.rd")
(find-rurima "--- content_length=(len)" "== Instance Methods" "= module Net::HTTPHeader" "refm/api/src/net/http.rd")
(find-rurima "--- content_range -> Range|nil" "== Instance Methods" "= module Net::HTTPHeader" "refm/api/src/net/http.rd")
(find-rurima "--- range_length -> Integer|nil" "== Instance Methods" "= module Net::HTTPHeader" "refm/api/src/net/http.rd")
(find-rurima "--- delete(key) -> String | nil" "== Instance Methods" "= module Net::HTTPHeader" "refm/api/src/net/http.rd")
(find-rurima "--- each {|name, val| .... } -> ()" "== Instance Methods" "= module Net::HTTPHeader" "refm/api/src/net/http.rd")
(find-rurima "--- each_header {|name, val| .... } -> ()" "== Instance Methods" "= module Net::HTTPHeader" "refm/api/src/net/http.rd")
(find-rurima "--- each_capitalized {|name, value| .... } -> ()" "== Instance Methods" "= module Net::HTTPHeader" "refm/api/src/net/http.rd")
(find-rurima "--- canonical_each {|name, value| .... } -> ()" "== Instance Methods" "= module Net::HTTPHeader" "refm/api/src/net/http.rd")
(find-rurima "--- each_capitalized_name {|name| .... } -> ()" "== Instance Methods" "= module Net::HTTPHeader" "refm/api/src/net/http.rd")
(find-rurima "--- each_name {|name| ... } -> ()" "== Instance Methods" "= module Net::HTTPHeader" "refm/api/src/net/http.rd")
(find-rurima "--- each_key {|name| ... } -> ()" "== Instance Methods" "= module Net::HTTPHeader" "refm/api/src/net/http.rd")
(find-rurima "--- each_value {|value| .... } -> ()" "== Instance Methods" "= module Net::HTTPHeader" "refm/api/src/net/http.rd")
(find-rurima "--- key?(key) -> bool" "== Instance Methods" "= module Net::HTTPHeader" "refm/api/src/net/http.rd")
(find-rurima "--- method -> String" "== Instance Methods" "= module Net::HTTPHeader" "refm/api/src/net/http.rd")
(find-rurima "--- proxy_basic_auth(account, password) -> ()" "== Instance Methods" "= module Net::HTTPHeader" "refm/api/src/net/http.rd")
(find-rurima "--- range -> Range|nil" "== Instance Methods" "= module Net::HTTPHeader" "refm/api/src/net/http.rd")
(find-rurima "--- range=(r)" "== Instance Methods" "= module Net::HTTPHeader" "refm/api/src/net/http.rd")
(find-rurima "--- range=(n)" "== Instance Methods" "= module Net::HTTPHeader" "refm/api/src/net/http.rd")
(find-rurima "--- set_range(i, len) -> ()" "== Instance Methods" "= module Net::HTTPHeader" "refm/api/src/net/http.rd")
(find-rurima "--- set_range(r) -> ()" "== Instance Methods" "= module Net::HTTPHeader" "refm/api/src/net/http.rd")
(find-rurima "--- set_range(n) -> ()" "== Instance Methods" "= module Net::HTTPHeader" "refm/api/src/net/http.rd")
(find-rurima "=== バイナリモードとテキストモード" "refm/api/src/net/ftp.rd")
(find-rurima "=== パッシブモードとアクティブモード" "refm/api/src/net/ftp.rd")
(find-rurima "=== 例" "refm/api/src/net/ftp.rd")
(find-rurima "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "== Class Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- new(host = nil, user = nil, passwd = nil, acct = nil) -> Net::FTP" "== Class Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- open(host, user = nil, passwd = nil, acct = nil) -> Net::FTP" "== Class Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- open(host, user = nil, passwd = nil, acct = nil){|ftp| ... } -> object" "== Class Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "== Instance Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- connect(host, port = FTP_PORT) -> ()" "== Instance Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- sendcmd(cmd) -> String" "== Instance Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- voidcmd(cmd) -> nil" "== Instance Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- login(user = \"anonymous\", passwd = nil, acct = nil) -> ()" "== Instance Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- retrbinary(cmd, blocksize, rest_offset = nil) -> nil" "== Instance Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- retrbinary(cmd, blocksize, rest_offset = nil){|data| ...} -> nil" "== Instance Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- retrlines(cmd){|line| ...} -> nil" "== Instance Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- storbinary(cmd, file, blocksize, rest_offset = nil) -> nil" "== Instance Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- storbinary(cmd, file, blocksize, rest_offset = nil){|data| ...} -> nil" "== Instance Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- storlines(cmd, file) -> nil" "== Instance Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- storlines(cmd, file){|line| ...} -> nil" "== Instance Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- getbinaryfile(remotefile, localfile = File.basename(remotefile), blocksize = DEFAULT_BLOCKSIZE){|data| ...} -> nil" "== Instance Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- getbinaryfile(remotefile, localfile = File.basename(remotefile), blocksize = DEFAULT_BLOCKSIZE) -> nil" "== Instance Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- gettextfile(remotefile, localfile = File.basename(remotefile)) -> nil" "== Instance Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- gettextfile(remotefile, localfile = File.basename(remotefile)){|line| ...} -> nil" "== Instance Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- putbinaryfile(localfile, remotefile = File.basename(localfile), blocksize = DEFAULT_BLOCKSIZE) -> nil" "== Instance Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- putbinaryfile(localfile, remotefile = File.basename(localfile), blocksize = DEFAULT_BLOCKSIZE) {|data| ...} -> nil" "== Instance Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- puttextfile(localfile, remotefile = File.basename(localfile)) -> nil" "== Instance Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- puttextfile(localfile, remotefile = File.basename(localfile)) {|line| ... } -> nil" "== Instance Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- acct(account) -> nil" "== Instance Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- nlst(dir = nil) -> [String]" "== Instance Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- list(*args) -> [String]" "== Instance Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- list(*args) {|line| ... } -> nil" "== Instance Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- ls(*args) -> [String] " "== Instance Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- ls(*args) {|line| ... } -> nil" "== Instance Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- dir(*args) -> [String]" "== Instance Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- dir(*args) {|line| ...} -> nil" "== Instance Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- rename(fromname, toname) -> nil" "== Instance Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- delete(filename) -> nil" "== Instance Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- chdir(dirname) -> nil" "== Instance Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- size(filename) -> Integer" "== Instance Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- mtime(filename, local = false) -> Time" "== Instance Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- mkdir(dirname) -> String" "== Instance Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- rmdir(dirname) -> nil" "== Instance Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- pwd -> String" "== Instance Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- getdir -> String" "== Instance Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- system -> String" "== Instance Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- abort -> String" "== Instance Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- status -> String" "== Instance Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- mdtm(filename) -> String" "== Instance Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- passive -> bool" "== Instance Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- passive=(bool)" "== Instance Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- return_code -> String" "== Instance Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- return_code=(string)" "== Instance Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- lastresp -> String" "== Instance Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- last_response_code -> String" "== Instance Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- last_response -> String" "== Instance Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- welcome -> String" "== Instance Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- help(arg = nil) -> String" "== Instance Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- quit -> nil" "== Instance Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- close -> ()" "== Instance Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- closed? -> bool" "== Instance Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- resume -> bool" "== Instance Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- resume=(boolean)" "== Instance Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- debug_mode -> bool" "== Instance Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- debug_mode=(boolean)" "== Instance Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- set_socket(sock, get_greeting = true) -> nil" "== Instance Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- get(remotefile, localfile = File.basename(remotefile), blocksize = DEFAULT_BLOCKSIZE) -> nil" "== Instance Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- get(remotefile, localfile = File.basename(remotefile), blocksize = DEFAULT_BLOCKSIZE) { |data| .... } -> nil" "== Instance Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- put(localfile, remotefile = File.basename(localfile), blocksize = DEFAULT_BLOCKSIZE) -> nil" "== Instance Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- put(localfile, remotefile = File.basename(localfile), blocksize = DEFAULT_BLOCKSIZE) { |data| .... } -> nil" "== Instance Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- binary -> bool" "== Instance Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- binary=(bool)" "== Instance Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- noop -> nil" "== Instance Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- site(arg) -> nil" "== Instance Methods" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "== Constants" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- DEFAULT_BLOCKSIZE -> Integer" "== Constants" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "--- FTP_PORT -> Integer" "== Constants" "= class Net::FTP < Object" "refm/api/src/net/ftp.rd")
(find-rurima "= class Net::FTP::NullSocket < Object" "refm/api/src/net/ftp.rd")
(find-rurima "= class Net::FTPError < StandardError" "refm/api/src/net/ftp.rd")
(find-rurima "= class Net::FTPReplyError < Net::FTPError" "refm/api/src/net/ftp.rd")
(find-rurima "= class Net::FTPTempError < Net::FTPError" "refm/api/src/net/ftp.rd")
(find-rurima "= class Net::FTPPermError < Net::FTPError" "refm/api/src/net/ftp.rd")
(find-rurima "= class Net::FTPProtoError < Net::FTPError" "refm/api/src/net/ftp.rd")
(find-rurima "=== デフォルトパラメータについて" "refm/api/src/net/https.rd")
(find-rurima "=== Example" "refm/api/src/net/https.rd")
(find-rurima "= reopen Net::HTTP" "refm/api/src/net/https.rd")
(find-rurima "== Instance Methods" "= reopen Net::HTTP" "refm/api/src/net/https.rd")
(find-rurima "--- use_ssl? ->  bool" "== Instance Methods" "= reopen Net::HTTP" "refm/api/src/net/https.rd")
(find-rurima "--- use_ssl=(bool)" "== Instance Methods" "= reopen Net::HTTP" "refm/api/src/net/https.rd")
(find-rurima "--- ssl_timeout -> Integer | nil" "== Instance Methods" "= reopen Net::HTTP" "refm/api/src/net/https.rd")
(find-rurima "--- ssl_timeout=(sec)" "== Instance Methods" "= reopen Net::HTTP" "refm/api/src/net/https.rd")
(find-rurima "--- timeout=(sec)" "== Instance Methods" "= reopen Net::HTTP" "refm/api/src/net/https.rd")
(find-rurima "--- peer_cert -> OpenSSL::X509::Certificate | nil" "== Instance Methods" "= reopen Net::HTTP" "refm/api/src/net/https.rd")
(find-rurima "--- key -> OpenSSL::PKey::PKey | nil" "== Instance Methods" "= reopen Net::HTTP" "refm/api/src/net/https.rd")
(find-rurima "--- key=(key)" "== Instance Methods" "= reopen Net::HTTP" "refm/api/src/net/https.rd")
(find-rurima "--- cert -> OpenSSL::X509::Certificate | nil" "== Instance Methods" "= reopen Net::HTTP" "refm/api/src/net/https.rd")
(find-rurima "--- cert=(certificate)" "== Instance Methods" "= reopen Net::HTTP" "refm/api/src/net/https.rd")
(find-rurima "--- ca_file -> String | nil" "== Instance Methods" "= reopen Net::HTTP" "refm/api/src/net/https.rd")
(find-rurima "--- ca_file=(path)" "== Instance Methods" "= reopen Net::HTTP" "refm/api/src/net/https.rd")
(find-rurima "--- ca_path -> String | nil" "== Instance Methods" "= reopen Net::HTTP" "refm/api/src/net/https.rd")
(find-rurima "--- ca_path=(path)" "== Instance Methods" "= reopen Net::HTTP" "refm/api/src/net/https.rd")
(find-rurima "--- verify_mode -> Integer | nil" "== Instance Methods" "= reopen Net::HTTP" "refm/api/src/net/https.rd")
(find-rurima "--- verify_mode=(mode)" "== Instance Methods" "= reopen Net::HTTP" "refm/api/src/net/https.rd")
(find-rurima "--- verify_callback -> Proc" "== Instance Methods" "= reopen Net::HTTP" "refm/api/src/net/https.rd")
(find-rurima "--- verify_callback=(proc)" "== Instance Methods" "= reopen Net::HTTP" "refm/api/src/net/https.rd")
(find-rurima "--- verify_depth -> Integer" "== Instance Methods" "= reopen Net::HTTP" "refm/api/src/net/https.rd")
(find-rurima "--- verify_depth=(depth)" "== Instance Methods" "= reopen Net::HTTP" "refm/api/src/net/https.rd")
(find-rurima "--- cert_store -> OpenSSL::X509::Store | nil" "== Instance Methods" "= reopen Net::HTTP" "refm/api/src/net/https.rd")
(find-rurima "--- cert_store=(store)" "== Instance Methods" "= reopen Net::HTTP" "refm/api/src/net/https.rd")
(find-rurima "--- ssl_version -> String | Symbol | nil" "== Instance Methods" "= reopen Net::HTTP" "refm/api/src/net/https.rd")
(find-rurima "--- ssl_version=(ver)" "== Instance Methods" "= reopen Net::HTTP" "refm/api/src/net/https.rd")
(find-rurima "--- ciphers -> String | [String] | nil" "== Instance Methods" "= reopen Net::HTTP" "refm/api/src/net/https.rd")
(find-rurima "--- ciphers=(ciphers)" "== Instance Methods" "= reopen Net::HTTP" "refm/api/src/net/https.rd")
(find-rurima "= class Net::HTTPGenericRequest < Object" "refm/api/src/net/Net__HTTPRequest")
(find-rurima "== Class Methods" "= class Net::HTTPGenericRequest < Object" "refm/api/src/net/Net__HTTPRequest")
(find-rurima "== Instance Methods" "= class Net::HTTPGenericRequest < Object" "refm/api/src/net/Net__HTTPRequest")
(find-rurima "--- body_exist? -> bool" "== Instance Methods" "= class Net::HTTPGenericRequest < Object" "refm/api/src/net/Net__HTTPRequest")
(find-rurima "--- body -> String" "== Instance Methods" "= class Net::HTTPGenericRequest < Object" "refm/api/src/net/Net__HTTPRequest")
(find-rurima "--- body=(body)" "== Instance Methods" "= class Net::HTTPGenericRequest < Object" "refm/api/src/net/Net__HTTPRequest")
(find-rurima "--- body_stream -> object" "== Instance Methods" "= class Net::HTTPGenericRequest < Object" "refm/api/src/net/Net__HTTPRequest")
(find-rurima "--- body_stream=(f)" "== Instance Methods" "= class Net::HTTPGenericRequest < Object" "refm/api/src/net/Net__HTTPRequest")
(find-rurima "--- method -> String" "== Instance Methods" "= class Net::HTTPGenericRequest < Object" "refm/api/src/net/Net__HTTPRequest")
(find-rurima "--- path -> String" "== Instance Methods" "= class Net::HTTPGenericRequest < Object" "refm/api/src/net/Net__HTTPRequest")
(find-rurima "--- request_body_permitted? -> bool" "== Instance Methods" "= class Net::HTTPGenericRequest < Object" "refm/api/src/net/Net__HTTPRequest")
(find-rurima "--- response_body_permitted? -> bool" "== Instance Methods" "= class Net::HTTPGenericRequest < Object" "refm/api/src/net/Net__HTTPRequest")
(find-rurima "= class Net::HTTPRequest < Net::HTTPGenericRequest" "refm/api/src/net/Net__HTTPRequest")
(find-rurima "=== 例" "= class Net::HTTPRequest < Net::HTTPGenericRequest" "refm/api/src/net/Net__HTTPRequest")
(find-rurima "== Class Methods" "= class Net::HTTPRequest < Net::HTTPGenericRequest" "refm/api/src/net/Net__HTTPRequest")
(find-rurima "--- new(path, initheader = nil) -> Net::HTTPRequest" "== Class Methods" "= class Net::HTTPRequest < Net::HTTPGenericRequest" "refm/api/src/net/Net__HTTPRequest")
(find-rurima "= class Net::HTTP::Head < Net::HTTPRequest" "refm/api/src/net/Net__HTTPRequest")
(find-rurima "= class Net::HTTP::Get < Net::HTTPRequest" "refm/api/src/net/Net__HTTPRequest")
(find-rurima "= class Net::HTTP::Post < Net::HTTPRequest" "refm/api/src/net/Net__HTTPRequest")
(find-rurima "= class Net::HTTP::Put < Net::HTTPRequest" "refm/api/src/net/Net__HTTPRequest")
(find-rurima "= class Net::HTTP::Copy < Net::HTTPRequest" "refm/api/src/net/Net__HTTPRequest")
(find-rurima "= class Net::HTTP::Delete < Net::HTTPRequest" "refm/api/src/net/Net__HTTPRequest")
(find-rurima "= class Net::HTTP::Lock < Net::HTTPRequest" "refm/api/src/net/Net__HTTPRequest")
(find-rurima "= class Net::HTTP::Mkcol < Net::HTTPRequest" "refm/api/src/net/Net__HTTPRequest")
(find-rurima "= class Net::HTTP::Move < Net::HTTPRequest" "refm/api/src/net/Net__HTTPRequest")
(find-rurima "= class Net::HTTP::Options < Net::HTTPRequest" "refm/api/src/net/Net__HTTPRequest")
(find-rurima "= class Net::HTTP::Propfind < Net::HTTPRequest" "refm/api/src/net/Net__HTTPRequest")
(find-rurima "= class Net::HTTP::Proppatch < Net::HTTPRequest" "refm/api/src/net/Net__HTTPRequest")
(find-rurima "= class Net::HTTP::Trace < Net::HTTPRequest" "refm/api/src/net/Net__HTTPRequest")
(find-rurima "= class Net::HTTP::Unlock < Net::HTTPRequest" "refm/api/src/net/Net__HTTPRequest")
(find-rurima "= reopen Net::Telnet" "refm/api/src/net/telnets.rd")
(find-rurima "== Instance Methods" "= reopen Net::Telnet" "refm/api/src/net/telnets.rd")
(find-rurima "--- ssl -> bool" "== Instance Methods" "= reopen Net::Telnet" "refm/api/src/net/telnets.rd")
(find-rurima "--- ssl? -> bool" "== Instance Methods" "= reopen Net::Telnet" "refm/api/src/net/telnets.rd")
(find-rurima "--- preprocess(string) -> String" "== Instance Methods" "= reopen Net::Telnet" "refm/api/src/net/telnets.rd")
(find-rurima "--- waitfor(opt) -> String|nil" "== Instance Methods" "= reopen Net::Telnet" "refm/api/src/net/telnets.rd")
(find-rurima "--- waitfor(opt){|buf| ...} -> String|nil" "== Instance Methods" "= reopen Net::Telnet" "refm/api/src/net/telnets.rd")
(find-rurima "= module Net::HTTPExceptions" "refm/api/src/net/Net__HTTPExceptions")
(find-rurima "== Instance Methods" "= module Net::HTTPExceptions" "refm/api/src/net/Net__HTTPExceptions")
(find-rurima "--- response -> Net::HTTPResponse" "== Instance Methods" "= module Net::HTTPExceptions" "refm/api/src/net/Net__HTTPExceptions")
(find-rurima "--- data -> Net::HTTPResponse" "== Instance Methods" "= module Net::HTTPExceptions" "refm/api/src/net/Net__HTTPExceptions")
(find-rurima "= class Net::HTTPError < Net::ProtocolError" "refm/api/src/net/Net__HTTPExceptions")
(find-rurima "= class Net::HTTPRetriableError < Net::ProtoRetriableError" "refm/api/src/net/Net__HTTPExceptions")
(find-rurima "= class Net::HTTPServerException < Net::ProtoServerError" "refm/api/src/net/Net__HTTPExceptions")
(find-rurima "= class Net::HTTPFatalError < Net::ProtoFatalError" "refm/api/src/net/Net__HTTPExceptions")
(find-rurima "= class Net::HTTPBadResponse < StandardError" "refm/api/src/net/Net__HTTPExceptions")
(find-rurima "= class Net::HTTPHeaderSyntaxError < StandardError" "refm/api/src/net/Net__HTTPExceptions")
(find-rurima "=== 参考文献" "refm/api/src/net/telnet.rd")
(find-rurima "= class Net::Telnet < SimpleDelegator" "refm/api/src/net/telnet.rd")
(find-rurima "=== 使用例" "= class Net::Telnet < SimpleDelegator" "refm/api/src/net/telnet.rd")
(find-rurima "== Class Methods" "= class Net::Telnet < SimpleDelegator" "refm/api/src/net/telnet.rd")
(find-rurima "--- new(opts) -> Net::Telnet" "== Class Methods" "= class Net::Telnet < SimpleDelegator" "refm/api/src/net/telnet.rd")
(find-rurima "--- new(opts){|message| ... } -> Net::Telnet" "== Class Methods" "= class Net::Telnet < SimpleDelegator" "refm/api/src/net/telnet.rd")
(find-rurima "== Instance Methods" "= class Net::Telnet < SimpleDelegator" "refm/api/src/net/telnet.rd")
(find-rurima "--- login(opts, password=nil) -> String" "== Instance Methods" "= class Net::Telnet < SimpleDelegator" "refm/api/src/net/telnet.rd")
(find-rurima "--- login(opts, password=nil){|mesg| ...}  -> String" "== Instance Methods" "= class Net::Telnet < SimpleDelegator" "refm/api/src/net/telnet.rd")
(find-rurima "--- waitfor(opt) -> String|nil" "== Instance Methods" "= class Net::Telnet < SimpleDelegator" "refm/api/src/net/telnet.rd")
(find-rurima "--- waitfor(opt){|buf| ...} -> String|nil" "== Instance Methods" "= class Net::Telnet < SimpleDelegator" "refm/api/src/net/telnet.rd")
(find-rurima "--- cmd(opts) -> String" "== Instance Methods" "= class Net::Telnet < SimpleDelegator" "refm/api/src/net/telnet.rd")
(find-rurima "--- cmd(opts){|mesg| ...} -> String" "== Instance Methods" "= class Net::Telnet < SimpleDelegator" "refm/api/src/net/telnet.rd")
(find-rurima "--- puts(string) -> ()" "== Instance Methods" "= class Net::Telnet < SimpleDelegator" "refm/api/src/net/telnet.rd")
(find-rurima "--- telnetmode(mode=nil) -> bool|()" "== Instance Methods" "= class Net::Telnet < SimpleDelegator" "refm/api/src/net/telnet.rd")
(find-rurima "--- telnetmode=(mode)" "== Instance Methods" "= class Net::Telnet < SimpleDelegator" "refm/api/src/net/telnet.rd")
(find-rurima "--- binmode(mode=nil) -> bool|()" "== Instance Methods" "= class Net::Telnet < SimpleDelegator" "refm/api/src/net/telnet.rd")
(find-rurima "--- binmode=(mode)" "== Instance Methods" "= class Net::Telnet < SimpleDelegator" "refm/api/src/net/telnet.rd")
(find-rurima "--- sock -> IO" "== Instance Methods" "= class Net::Telnet < SimpleDelegator" "refm/api/src/net/telnet.rd")
(find-rurima "--- preprocess(string) -> String" "== Instance Methods" "= class Net::Telnet < SimpleDelegator" "refm/api/src/net/telnet.rd")
(find-rurima "--- print(string) -> ()" "== Instance Methods" "= class Net::Telnet < SimpleDelegator" "refm/api/src/net/telnet.rd")
(find-rurima "--- write(string) -> ()" "== Instance Methods" "= class Net::Telnet < SimpleDelegator" "refm/api/src/net/telnet.rd")
(find-rurima "== Constants" "= class Net::Telnet < SimpleDelegator" "refm/api/src/net/telnet.rd")
(find-rurima "= class Net::FTPTLS < Net::FTP" "refm/api/src/net/ftptls.rd")
(find-rurima "== Instance Methods" "= class Net::FTPTLS < Net::FTP" "refm/api/src/net/ftptls.rd")
(find-rurima "--- connect(host, port=Net::FTP::FTP_PORT) -> ()" "== Instance Methods" "= class Net::FTPTLS < Net::FTP" "refm/api/src/net/ftptls.rd")
(find-rurima "--- login(user = \"anonymous\", passwd = nil, acct = nil) -> ()" "== Instance Methods" "= class Net::FTPTLS < Net::FTP" "refm/api/src/net/ftptls.rd")
(find-rurima "=== 使用例" "refm/api/src/net/smtp.rd")
(find-rurima "==== とにかくメールを送る" "=== 使用例" "refm/api/src/net/smtp.rd")
(find-rurima "==== セッションを終了する" "=== 使用例" "refm/api/src/net/smtp.rd")
(find-rurima "==== 文字列以外からの送信" "=== 使用例" "refm/api/src/net/smtp.rd")
(find-rurima "=== HELO ドメイン" "refm/api/src/net/smtp.rd")
(find-rurima "=== SMTP認証" "refm/api/src/net/smtp.rd")
(find-rurima "=== TLSを用いたSMTP通信" "refm/api/src/net/smtp.rd")
(find-rurima "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "== Singleton Methods" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "--- new(address, port = Net::SMTP.default_port) -> Net::SMTP" "== Singleton Methods" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "--- start(address, port = Net::SMTP.default_port, helo_domain = 'localhost.localdomain', account = nil, password = nil, authtype = DEFAULT_AUTH_TYPE) -> Net::SMTP" "== Singleton Methods" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "--- start(address, port = Net::SMTP.default_port, helo_domain = 'localhost.localdomain', account = nil, password = nil, authtype = DEFAULT_AUTH_TYPE) {|smtp| .... } -> object" "== Singleton Methods" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "--- start(address, port = Net::SMTP.default_port, helo_domain = 'localhost', account = nil, password = nil, authtype = DEFAULT_AUTH_TYPE) -> Net::SMTP" "== Singleton Methods" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "--- start(address, port = Net::SMTP.default_port, helo_domain = 'localhost', account = nil, password = nil, authtype = DEFAULT_AUTH_TYPE) {|smtp| .... } -> object" "== Singleton Methods" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "--- default_port -> Integer" "== Singleton Methods" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "--- default_submission_port -> Integer" "== Singleton Methods" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "--- default_ssl_context -> OpenSSL::SSL::SSLContext" "== Singleton Methods" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "--- default_tls_port -> Integer" "== Singleton Methods" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "--- default_ssl_port -> Integer" "== Singleton Methods" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "== Instance Methods" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "--- esmtp? -> bool" "== Instance Methods" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "--- esmtp -> bool" "== Instance Methods" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "--- esmtp=(bool)" "== Instance Methods" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "--- capable_starttls? -> bool" "== Instance Methods" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "--- capable_cram_md5_auth? -> bool" "== Instance Methods" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "--- capable_login_auth? -> bool" "== Instance Methods" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "--- capable_plain_auth? -> bool" "== Instance Methods" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "--- capable_auth_types -> [String]" "== Instance Methods" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "--- tls? -> bool" "== Instance Methods" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "--- ssl? -> bool" "== Instance Methods" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "--- enable_ssl(context = Net::SMTP.default_ssl_context) -> ()" "== Instance Methods" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "--- enable_tls(context = Net::SMTP.default_ssl_context) -> ()" "== Instance Methods" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "--- disable_ssl -> ()" "== Instance Methods" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "--- disable_tls -> ()" "== Instance Methods" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "--- starttls? -> Symbol/nil" "== Instance Methods" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "--- starttls_always? -> bool" "== Instance Methods" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "--- starttls_auto? -> bool" "== Instance Methods" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "--- enable_starttls(context = Net::SMTP.default_ssl_context) -> ()" "== Instance Methods" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "--- enable_starttls_auto(context = Net::SMTP.default_ssl_context) -> ()" "== Instance Methods" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "--- disable_starttls -> ()" "== Instance Methods" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "--- set_debug_output(f) -> ()" "== Instance Methods" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "--- debug_output=(f)" "== Instance Methods" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "--- start(helo_domain = 'localhost.localdomain', account = nil, password = nil, authtype = DEFAULT_AUTH_TYPE) -> Net::SMTP" "== Instance Methods" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "--- start(helo_domain = 'localhost.localdomain', account = nil, password = nil, authtype = DEFAULT_AUTH_TYPE) {|smtp| .... } -> object" "== Instance Methods" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "--- start(helo_domain = 'localhost', account = nil, password = nil, authtype = DEFAULT_AUTH_TYPE) -> Net::SMTP" "== Instance Methods" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "--- start(helo_domain = 'localhost', account = nil, password = nil, authtype = DEFAULT_AUTH_TYPE) {|smtp| .... } -> object" "== Instance Methods" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "--- started? -> bool" "== Instance Methods" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "--- inspect -> String" "== Instance Methods" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "--- address -> String" "== Instance Methods" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "--- port -> Integer" "== Instance Methods" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "--- open_timeout -> Integer" "== Instance Methods" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "--- open_timeout=(n)" "== Instance Methods" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "--- read_timeout -> Integer" "== Instance Methods" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "--- read_timeout=(n)" "== Instance Methods" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "--- finish -> ()" "== Instance Methods" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "--- send_message(mailsrc, from_addr, *to_addrs) -> ()" "== Instance Methods" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "--- send_mail(mailsrc, from_addr, *to_addrs) -> ()" "== Instance Methods" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "--- sendmail(mailsrc, from_addr, *to_addrs) -> ()" "== Instance Methods" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "--- open_message_stream(from_addr, *to_addrs) {|f| .... } -> ()" "== Instance Methods" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "--- ready(from_addr, *to_addrs) {|f| .... } -> ()" "== Instance Methods" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "--- authenticate(user, secret, authtype) -> ()" "== Instance Methods" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "--- auth_plain(user, secret) -> ()" "== Instance Methods" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "--- auth_login(user, secret) -> ()" "== Instance Methods" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "--- auth_cram_md5(user, secret) -> ()" "== Instance Methods" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "--- starttls -> Net::SMTP::Response" "== Instance Methods" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "--- helo(domain) -> Net::SMTP::Response" "== Instance Methods" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "--- ehlo(domain) -> Net::SMTP::Response" "== Instance Methods" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "--- mailfrom(from_addr) -> Net::SMTP::Response" "== Instance Methods" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "--- rcptto_list(to_addrs) -> Net::SMTP::Response" "== Instance Methods" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "--- rcptto(to_addr) -> Net::SMTP::Response" "== Instance Methods" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "--- data(message) -> Net::SMTP::Response" "== Instance Methods" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "--- data {|f| .... } -> Net::SMTP::Response" "== Instance Methods" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "--- quit -> Net::SMTP::Response" "== Instance Methods" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "== Constants" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "--- DEFAULT_AUTH_TYPE -> Symbol" "== Constants" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "--- Revision -> String" "== Constants" "= class Net::SMTP < Object" "refm/api/src/net/smtp.rd")
(find-rurima "= class Net::SMTP::Response < Object" "refm/api/src/net/smtp.rd")
(find-rurima "= module Net::SMTPError" "refm/api/src/net/smtp.rd")
(find-rurima "= class Net::SMTPAuthenticationError < Net::ProtoAuthError" "refm/api/src/net/smtp.rd")
(find-rurima "= class Net::SMTPServerBusy < Net::ProtoServerError" "refm/api/src/net/smtp.rd")
(find-rurima "= class Net::SMTPSyntaxError < Net::ProtoSyntaxError" "refm/api/src/net/smtp.rd")
(find-rurima "= class Net::SMTPFatalError < Net::ProtoFatalError" "refm/api/src/net/smtp.rd")
(find-rurima "= class Net::SMTPUnknownError < Net::ProtoUnknownError" "refm/api/src/net/smtp.rd")
(find-rurima "= class Net::SMTPUnsupportedCommand < Net::ProtocolError" "refm/api/src/net/smtp.rd")
(find-rurima "= class Net::HTTPResponse < Object" "refm/api/src/net/Net__HTTPResponse")
(find-rurima "== Class Methods" "= class Net::HTTPResponse < Object" "refm/api/src/net/Net__HTTPResponse")
(find-rurima "--- body_permitted? -> bool" "== Class Methods" "= class Net::HTTPResponse < Object" "refm/api/src/net/Net__HTTPResponse")
(find-rurima "== Instance Methods" "= class Net::HTTPResponse < Object" "refm/api/src/net/Net__HTTPResponse")
(find-rurima "--- code -> String" "== Instance Methods" "= class Net::HTTPResponse < Object" "refm/api/src/net/Net__HTTPResponse")
(find-rurima "--- message -> String" "== Instance Methods" "= class Net::HTTPResponse < Object" "refm/api/src/net/Net__HTTPResponse")
(find-rurima "--- msg -> String" "== Instance Methods" "= class Net::HTTPResponse < Object" "refm/api/src/net/Net__HTTPResponse")
(find-rurima "--- http_version -> String" "== Instance Methods" "= class Net::HTTPResponse < Object" "refm/api/src/net/Net__HTTPResponse")
(find-rurima "--- to_ary -> [Net::HTTPResponse, String]" "== Instance Methods" "= class Net::HTTPResponse < Object" "refm/api/src/net/Net__HTTPResponse")
(find-rurima "--- value -> nil" "== Instance Methods" "= class Net::HTTPResponse < Object" "refm/api/src/net/Net__HTTPResponse")
(find-rurima "--- response -> self" "== Instance Methods" "= class Net::HTTPResponse < Object" "refm/api/src/net/Net__HTTPResponse")
(find-rurima "--- header -> self" "== Instance Methods" "= class Net::HTTPResponse < Object" "refm/api/src/net/Net__HTTPResponse")
(find-rurima "--- reader_header -> self" "== Instance Methods" "= class Net::HTTPResponse < Object" "refm/api/src/net/Net__HTTPResponse")
(find-rurima "--- body -> String | () | nil" "== Instance Methods" "= class Net::HTTPResponse < Object" "refm/api/src/net/Net__HTTPResponse")
(find-rurima "--- entity -> String | () | nil" "== Instance Methods" "= class Net::HTTPResponse < Object" "refm/api/src/net/Net__HTTPResponse")
(find-rurima "--- read_body(dest=nil) -> String|nil" "== Instance Methods" "= class Net::HTTPResponse < Object" "refm/api/src/net/Net__HTTPResponse")
(find-rurima "--- read_body {|str| .... } -> ()" "== Instance Methods" "= class Net::HTTPResponse < Object" "refm/api/src/net/Net__HTTPResponse")
(find-rurima "= class Net::HTTPUnknownResponse < Net::HTTPResponse" "refm/api/src/net/Net__HTTPResponse")
(find-rurima "= class Net::HTTPInformation < Net::HTTPResponse" "refm/api/src/net/Net__HTTPResponse")
(find-rurima "= class Net::HTTPSuccess < Net::HTTPResponse" "refm/api/src/net/Net__HTTPResponse")
(find-rurima "= class Net::HTTPRedirection < Net::HTTPResponse" "refm/api/src/net/Net__HTTPResponse")
(find-rurima "= class Net::HTTPClientError < Net::HTTPResponse" "refm/api/src/net/Net__HTTPResponse")
(find-rurima "= class Net::HTTPServerError < Net::HTTPResponse" "refm/api/src/net/Net__HTTPResponse")
(find-rurima "= class Net::HTTPContinue < Net::HTTPInformation" "refm/api/src/net/Net__HTTPResponse")
(find-rurima "= class Net::HTTPSwitchProtocol < Net::HTTPInformation" "refm/api/src/net/Net__HTTPResponse")
(find-rurima "= class Net::HTTPOK < Net::HTTPSuccess" "refm/api/src/net/Net__HTTPResponse")
(find-rurima "= class Net::HTTPCreated < Net::HTTPSuccess" "refm/api/src/net/Net__HTTPResponse")
(find-rurima "= class Net::HTTPAccepted < Net::HTTPSuccess" "refm/api/src/net/Net__HTTPResponse")
(find-rurima "= class Net::HTTPNonAuthoritativeInformation < Net::HTTPSuccess" "refm/api/src/net/Net__HTTPResponse")
(find-rurima "= class Net::HTTPNoContent < Net::HTTPSuccess" "refm/api/src/net/Net__HTTPResponse")
(find-rurima "= class Net::HTTPResetContent < Net::HTTPSuccess" "refm/api/src/net/Net__HTTPResponse")
(find-rurima "= class Net::HTTPPartialContent < Net::HTTPSuccess" "refm/api/src/net/Net__HTTPResponse")
(find-rurima "= class Net::HTTPMultipleChoice < Net::HTTPRedirection" "refm/api/src/net/Net__HTTPResponse")
(find-rurima "= class Net::HTTPMovedPermanently < Net::HTTPRedirection" "refm/api/src/net/Net__HTTPResponse")
(find-rurima "= class Net::HTTPFound < Net::HTTPRedirection" "refm/api/src/net/Net__HTTPResponse")
(find-rurima "= class Net::HTTPSeeOther < Net::HTTPRedirection" "refm/api/src/net/Net__HTTPResponse")
(find-rurima "= class Net::HTTPNotModified < Net::HTTPRedirection" "refm/api/src/net/Net__HTTPResponse")
(find-rurima "= class Net::HTTPUseProxy < Net::HTTPRedirection" "refm/api/src/net/Net__HTTPResponse")
(find-rurima "= class Net::HTTPTemporaryRedirect < Net::HTTPRedirection" "refm/api/src/net/Net__HTTPResponse")
(find-rurima "= class Net::HTTPBadRequest < Net::HTTPClientError" "refm/api/src/net/Net__HTTPResponse")
(find-rurima "= class Net::HTTPUnauthorized < Net::HTTPClientError" "refm/api/src/net/Net__HTTPResponse")
(find-rurima "= class Net::HTTPPaymentRequired < Net::HTTPClientError" "refm/api/src/net/Net__HTTPResponse")
(find-rurima "= class Net::HTTPForbidden < Net::HTTPClientError" "refm/api/src/net/Net__HTTPResponse")
(find-rurima "= class Net::HTTPNotFound < Net::HTTPClientError" "refm/api/src/net/Net__HTTPResponse")
(find-rurima "= class Net::HTTPMethodNotAllowed < Net::HTTPClientError" "refm/api/src/net/Net__HTTPResponse")
(find-rurima "= class Net::HTTPNotAcceptable < Net::HTTPClientError" "refm/api/src/net/Net__HTTPResponse")
(find-rurima "= class Net::HTTPProxyAuthenticationRequired < Net::HTTPClientError" "refm/api/src/net/Net__HTTPResponse")
(find-rurima "= class Net::HTTPRequestTimeOut < Net::HTTPClientError" "refm/api/src/net/Net__HTTPResponse")
(find-rurima "= class Net::HTTPConflict < Net::HTTPClientError" "refm/api/src/net/Net__HTTPResponse")
(find-rurima "= class Net::HTTPGone < Net::HTTPClientError" "refm/api/src/net/Net__HTTPResponse")
(find-rurima "= class Net::HTTPLengthRequired < Net::HTTPClientError" "refm/api/src/net/Net__HTTPResponse")
(find-rurima "= class Net::HTTPPreconditionFailed < Net::HTTPClientError" "refm/api/src/net/Net__HTTPResponse")
(find-rurima "= class Net::HTTPRequestEntityTooLarge < Net::HTTPClientError" "refm/api/src/net/Net__HTTPResponse")
(find-rurima "= class Net::HTTPRequestURITooLong < Net::HTTPClientError" "refm/api/src/net/Net__HTTPResponse")
(find-rurima "= class Net::HTTPUnsupportedMediaType < Net::HTTPClientError" "refm/api/src/net/Net__HTTPResponse")
(find-rurima "= class Net::HTTPRequestedRangeNotSatisfiable < Net::HTTPClientError" "refm/api/src/net/Net__HTTPResponse")
(find-rurima "= class Net::HTTPExpectationFailed < Net::HTTPClientError" "refm/api/src/net/Net__HTTPResponse")
(find-rurima "= class Net::HTTPInternalServerError < Net::HTTPServerError" "refm/api/src/net/Net__HTTPResponse")
(find-rurima "= class Net::HTTPNotImplemented < Net::HTTPServerError" "refm/api/src/net/Net__HTTPResponse")
(find-rurima "= class Net::HTTPBadGateway < Net::HTTPServerError" "refm/api/src/net/Net__HTTPResponse")
(find-rurima "= class Net::HTTPServiceUnavailable < Net::HTTPServerError" "refm/api/src/net/Net__HTTPResponse")
(find-rurima "= class Net::HTTPGatewayTimeOut < Net::HTTPServerError" "refm/api/src/net/Net__HTTPResponse")
(find-rurima "= class Net::HTTPVersionNotSupported < Net::HTTPServerError" "refm/api/src/net/Net__HTTPResponse")
(find-rurima "=== 使用例" "refm/api/src/net/pop.rd")
(find-rurima "==== メールの受信" "=== 使用例" "refm/api/src/net/pop.rd")
(find-rurima "==== 短くする" "=== 使用例" "refm/api/src/net/pop.rd")
(find-rurima "==== メモリ使用量を減らす" "=== 使用例" "refm/api/src/net/pop.rd")
(find-rurima "==== APOP を使う" "=== 使用例" "refm/api/src/net/pop.rd")
(find-rurima "==== UIDL コマンドを使って特定のメールだけを取り出す" "=== 使用例" "refm/api/src/net/pop.rd")
(find-rurima "==== SSL/TLS による暗号化" "=== 使用例" "refm/api/src/net/pop.rd")
(find-rurima "= class Net::POP3 < Object" "refm/api/src/net/pop.rd")
(find-rurima "== Class Methods" "= class Net::POP3 < Object" "refm/api/src/net/pop.rd")
(find-rurima "--- new(address, port = nil, apop = false) -> Net::POP3" "== Class Methods" "= class Net::POP3 < Object" "refm/api/src/net/pop.rd")
(find-rurima "--- start(address, port = nil, account=nil, password=nil, isapop=false) -> Net::POP3" "== Class Methods" "= class Net::POP3 < Object" "refm/api/src/net/pop.rd")
(find-rurima "--- start(address, port = nil, account=nil, password=nil, isapop=false) {|pop| .... } -> object" "== Class Methods" "= class Net::POP3 < Object" "refm/api/src/net/pop.rd")
(find-rurima "--- APOP(is_apop) -> Class" "== Class Methods" "= class Net::POP3 < Object" "refm/api/src/net/pop.rd")
(find-rurima "--- foreach(address, port = nil, account, password, isapop=false) {|mail| .... } -> ()" "== Class Methods" "= class Net::POP3 < Object" "refm/api/src/net/pop.rd")
(find-rurima "--- delete_all(address, port = nil, account, password, isapop=false) -> ()" "== Class Methods" "= class Net::POP3 < Object" "refm/api/src/net/pop.rd")
(find-rurima "--- delete_all(address, port = nil, account, password, isapop=false) {|mail| .... } -> ()" "== Class Methods" "= class Net::POP3 < Object" "refm/api/src/net/pop.rd")
(find-rurima "--- auth_only(address, port = nil, account, password, isapop=false)" "== Class Methods" "= class Net::POP3 < Object" "refm/api/src/net/pop.rd")
(find-rurima "--- default_port -> Integer" "== Class Methods" "= class Net::POP3 < Object" "refm/api/src/net/pop.rd")
(find-rurima "--- default_pop3_port -> Integer" "== Class Methods" "= class Net::POP3 < Object" "refm/api/src/net/pop.rd")
(find-rurima "--- default_pop3s_port -> Integer" "== Class Methods" "= class Net::POP3 < Object" "refm/api/src/net/pop.rd")
(find-rurima "--- certs -> String|nil" "== Class Methods" "= class Net::POP3 < Object" "refm/api/src/net/pop.rd")
(find-rurima "--- verify -> Integer|nil" "== Class Methods" "= class Net::POP3 < Object" "refm/api/src/net/pop.rd")
(find-rurima "--- use_ssl? -> bool" "== Class Methods" "= class Net::POP3 < Object" "refm/api/src/net/pop.rd")
(find-rurima "--- enable_ssl(verify_or_params={}, certs=nil) -> ()" "== Class Methods" "= class Net::POP3 < Object" "refm/api/src/net/pop.rd")
(find-rurima "--- ssl_params -> Hash|nil" "== Class Methods" "= class Net::POP3 < Object" "refm/api/src/net/pop.rd")
(find-rurima "--- disable_ssl -> ()" "== Class Methods" "= class Net::POP3 < Object" "refm/api/src/net/pop.rd")
(find-rurima "--- socket_type -> Class" "== Class Methods" "= class Net::POP3 < Object" "refm/api/src/net/pop.rd")
(find-rurima "== Instance Methods" "= class Net::POP3 < Object" "refm/api/src/net/pop.rd")
(find-rurima "--- use_ssl? -> bool" "== Instance Methods" "= class Net::POP3 < Object" "refm/api/src/net/pop.rd")
(find-rurima "--- enable_ssl(verify_or_params={}, certs=nil) -> ()" "== Instance Methods" "= class Net::POP3 < Object" "refm/api/src/net/pop.rd")
(find-rurima "--- disable_ssl -> ()" "== Instance Methods" "= class Net::POP3 < Object" "refm/api/src/net/pop.rd")
(find-rurima "--- start(account, password) -> self" "== Instance Methods" "= class Net::POP3 < Object" "refm/api/src/net/pop.rd")
(find-rurima "--- start(account, password) {|pop| .... } -> object" "== Instance Methods" "= class Net::POP3 < Object" "refm/api/src/net/pop.rd")
(find-rurima "--- started? -> bool" "== Instance Methods" "= class Net::POP3 < Object" "refm/api/src/net/pop.rd")
(find-rurima "--- active? -> bool" "== Instance Methods" "= class Net::POP3 < Object" "refm/api/src/net/pop.rd")
(find-rurima "--- address -> String" "== Instance Methods" "= class Net::POP3 < Object" "refm/api/src/net/pop.rd")
(find-rurima "--- port -> Integer" "== Instance Methods" "= class Net::POP3 < Object" "refm/api/src/net/pop.rd")
(find-rurima "--- set_debug_output(f) -> ()" "== Instance Methods" "= class Net::POP3 < Object" "refm/api/src/net/pop.rd")
(find-rurima "--- open_timeout -> Interger" "== Instance Methods" "= class Net::POP3 < Object" "refm/api/src/net/pop.rd")
(find-rurima "--- open_timeout=(n)" "== Instance Methods" "= class Net::POP3 < Object" "refm/api/src/net/pop.rd")
(find-rurima "--- read_timeout -> Interger" "== Instance Methods" "= class Net::POP3 < Object" "refm/api/src/net/pop.rd")
(find-rurima "--- read_timeout=(n)" "== Instance Methods" "= class Net::POP3 < Object" "refm/api/src/net/pop.rd")
(find-rurima "--- finish -> ()" "== Instance Methods" "= class Net::POP3 < Object" "refm/api/src/net/pop.rd")
(find-rurima "--- apop? -> bool" "== Instance Methods" "= class Net::POP3 < Object" "refm/api/src/net/pop.rd")
(find-rurima "--- n_bytes -> Integer" "== Instance Methods" "= class Net::POP3 < Object" "refm/api/src/net/pop.rd")
(find-rurima "--- n_mails -> Integer" "== Instance Methods" "= class Net::POP3 < Object" "refm/api/src/net/pop.rd")
(find-rurima "--- mails -> [Net::POPMail]" "== Instance Methods" "= class Net::POP3 < Object" "refm/api/src/net/pop.rd")
(find-rurima "--- each_mail {|popmail| .... } -> [Net::POPMail]" "== Instance Methods" "= class Net::POP3 < Object" "refm/api/src/net/pop.rd")
(find-rurima "--- each {|popmail| .... } -> [Net::POPMail]" "== Instance Methods" "= class Net::POP3 < Object" "refm/api/src/net/pop.rd")
(find-rurima "--- delete_all -> ()" "== Instance Methods" "= class Net::POP3 < Object" "refm/api/src/net/pop.rd")
(find-rurima "--- delete_all {|popmail| .... } -> ()" "== Instance Methods" "= class Net::POP3 < Object" "refm/api/src/net/pop.rd")
(find-rurima "--- auth_only(account, password) -> ()" "== Instance Methods" "= class Net::POP3 < Object" "refm/api/src/net/pop.rd")
(find-rurima "--- reset -> ()" "== Instance Methods" "= class Net::POP3 < Object" "refm/api/src/net/pop.rd")
(find-rurima "== Constants" "= class Net::POP3 < Object" "refm/api/src/net/pop.rd")
(find-rurima "--- Revision -> String" "== Constants" "= class Net::POP3 < Object" "refm/api/src/net/pop.rd")
(find-rurima "= class Net::APOP < Net::POP3" "refm/api/src/net/pop.rd")
(find-rurima "= class Net::POPMail < Object" "refm/api/src/net/pop.rd")
(find-rurima "== Instance Methods" "= class Net::POPMail < Object" "refm/api/src/net/pop.rd")
(find-rurima "--- pop -> String" "== Instance Methods" "= class Net::POPMail < Object" "refm/api/src/net/pop.rd")
(find-rurima "--- all -> String" "== Instance Methods" "= class Net::POPMail < Object" "refm/api/src/net/pop.rd")
(find-rurima "--- mail -> String" "== Instance Methods" "= class Net::POPMail < Object" "refm/api/src/net/pop.rd")
(find-rurima "--- pop {|str| .... } -> nil" "== Instance Methods" "= class Net::POPMail < Object" "refm/api/src/net/pop.rd")
(find-rurima "--- all {|str| .... } -> nil" "== Instance Methods" "= class Net::POPMail < Object" "refm/api/src/net/pop.rd")
(find-rurima "--- mail {|str| .... } -> nil" "== Instance Methods" "= class Net::POPMail < Object" "refm/api/src/net/pop.rd")
(find-rurima "--- pop(io) -> object" "== Instance Methods" "= class Net::POPMail < Object" "refm/api/src/net/pop.rd")
(find-rurima "--- all(io) -> object" "== Instance Methods" "= class Net::POPMail < Object" "refm/api/src/net/pop.rd")
(find-rurima "--- mail(io) -> object" "== Instance Methods" "= class Net::POPMail < Object" "refm/api/src/net/pop.rd")
(find-rurima "--- header(dest='') -> String" "== Instance Methods" "= class Net::POPMail < Object" "refm/api/src/net/pop.rd")
(find-rurima "--- top(lines, dest='') -> String" "== Instance Methods" "= class Net::POPMail < Object" "refm/api/src/net/pop.rd")
(find-rurima "--- delete -> ()" "== Instance Methods" "= class Net::POPMail < Object" "refm/api/src/net/pop.rd")
(find-rurima "--- delete! -> ()" "== Instance Methods" "= class Net::POPMail < Object" "refm/api/src/net/pop.rd")
(find-rurima "--- deleted? -> bool" "== Instance Methods" "= class Net::POPMail < Object" "refm/api/src/net/pop.rd")
(find-rurima "--- size -> Integer" "== Instance Methods" "= class Net::POPMail < Object" "refm/api/src/net/pop.rd")
(find-rurima "--- length -> Integer" "== Instance Methods" "= class Net::POPMail < Object" "refm/api/src/net/pop.rd")
(find-rurima "--- number -> Integer" "== Instance Methods" "= class Net::POPMail < Object" "refm/api/src/net/pop.rd")
(find-rurima "--- uidl -> String" "== Instance Methods" "= class Net::POPMail < Object" "refm/api/src/net/pop.rd")
(find-rurima "--- unique_id -> String" "== Instance Methods" "= class Net::POPMail < Object" "refm/api/src/net/pop.rd")
(find-rurima "= class Net::POPError < Net::ProtocolError" "refm/api/src/net/pop.rd")
(find-rurima "= class Net::POPBadResponse < Net::POPError" "refm/api/src/net/pop.rd")
(find-rurima "= class Net::POPAuthenticationError < Net::ProtoAuthError" "refm/api/src/net/pop.rd")
(find-rurima "=== IMAP の概要" "refm/api/src/net/imap.rd")
(find-rurima "=== 例" "refm/api/src/net/imap.rd")
(find-rurima "=== スレッド安全性" "refm/api/src/net/imap.rd")
(find-rurima "=== エラーについて" "refm/api/src/net/imap.rd")
(find-rurima "=== tagged response と untagged response" "refm/api/src/net/imap.rd")
(find-rurima "=== References" "refm/api/src/net/imap.rd")
(find-rurima "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "== Class Methods" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- new(host, port = 143, usessl = false, certs = nil, verify = false) -> Net::IMAP" "== Class Methods" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- new(host, options) -> Net::IMAP" "== Class Methods" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- debug -> bool" "== Class Methods" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- debug=(val)" "== Class Methods" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- add_authenticator(auth_type, authenticator) -> ()" "== Class Methods" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- decode_utf7(str) -> String" "== Class Methods" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- encode_utf7(str) -> String" "== Class Methods" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- format_date(time) -> String" "== Class Methods" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- format_datetime(time) -> String" "== Class Methods" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- max_flag_count -> Integer" "== Class Methods" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- max_flag_count=(count)" "== Class Methods" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "== Methods" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- greeting -> Net::IMAP::UntaggedResponse" "== Methods" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- responses -> { String => [object] }" "== Methods" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- disconnect -> nil" "== Methods" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- capability -> [String]" "== Methods" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- noop -> Net::IMAP::TaggedResponse" "== Methods" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- logout -> Net::IMAP::TaggedResponse" "== Methods" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- authenticate(auth_type, user, password) -> Net::IMAP::TaggedResponse" "== Methods" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- login(user, password) -> Net::IMAP::TaggedResponse" "== Methods" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- select(mailbox) -> Net::IMAP::TaggedResponse" "== Methods" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- examine(mailbox) -> Net::IMAP::TaggedResponse" "== Methods" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- create(mailbox) -> Net::IMAP::TaggedResponse" "== Methods" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- delete(mailbox) -> Net::IMAP::TaggedResponse" "== Methods" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- rename(mailbox, newname) -> Net::IMAP::TaggedResponse" "== Methods" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- subscribe(mailbox) -> Net::IMAP::TaggedResponse" "== Methods" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- unsubscribe(mailbox) -> Net::IMAP::TaggedResponse" "== Methods" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- list(refname, mailbox) -> [Net::IMAP::MailboxList] | nil" "== Methods" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- lsub(refname, mailbox) -> [Net::IMAP::MailboxList]" "== Methods" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- status(mailbox, attr) -> {String => Integer}" "== Methods" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- append(mailbox, message, flags = nil, date_time = nil) -> Net::IMAP::TaggedResponse" "== Methods" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- check -> Net::IMAP::TaggedResponse" "== Methods" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- close -> Net::IMAP::TaggedResponse" "== Methods" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- expunge -> [Integer] | nil" "== Methods" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- search(keys, charset = nil) -> [Integer]" "== Methods" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- uid_search(keys, charset = nil) -> [Integer]" "== Methods" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- fetch(set, attr) -> [Net::IMAP::FetchData]" "== Methods" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- uid_fetch(set, attr) -> [Net::IMAP::FetchData]" "== Methods" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- store(set, attr, flags) -> [Net::IMAP::FetchData] | nil" "== Methods" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- uid_store(set, attr, flags) -> [Net::IMAP::FetchData] | nil" "== Methods" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- copy(set, mailbox) -> Net::IMAP::TaggedResponse" "== Methods" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- uid_copy(set, mailbox) -> Net::IMAP::TaggedResponse" "== Methods" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- sort(sort_keys, search_keys, charset) -> [Integer]" "== Methods" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- uid_sort(sort_keys, search_keys, charset) -> [Integer]" "== Methods" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- setquota(mailbox, quota) -> Net::IMAP::TaggedResponse" "== Methods" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- getquota(mailbox) -> [Net::IMAP::MailboxQuota]" "== Methods" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- getquotaroot(mailbox) -> [Net::IMAP::MailboxQuotaRoot | Net::IMAP::MailboxQuota]" "== Methods" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- setacl(mailbox, user, rights)" "== Methods" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- getacl(mailbox) -> [Net::IMAP::MailboxACLItem]" "== Methods" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- add_response_handler(handler) -> ()" "== Methods" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- add_response_handler(handler){|resp| ...} -> ()" "== Methods" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- remove_response_handler(handler) -> ()" "== Methods" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- response_handlers -> Array" "== Methods" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- starttls(options) -> Net::IMAP::TaggedResponse" "== Methods" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- starttls(certs, verify) -> Net::IMAP::TaggedResponse" "== Methods" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- disconnected? -> bool" "== Methods" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- thread(algorithm, search_keys, charset) -> [Net::IMAP::ThreadMember]" "== Methods" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- uid_thread(algorithm, search_keys, charset)  -> [Net::IMAP::ThreadMember]" "== Methods" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- client_thread -> Thread" "== Methods" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- client_thread=(th)" "== Methods" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- idle {|resp| ...} -> Net::IMAP::TaggedResponse" "== Methods" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- idle_done -> ()" "== Methods" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "== Constants" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- SEEN -> Symbol" "== Constants" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- ANSWERED -> Symbol" "== Constants" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- FLAGGED -> Symbol" "== Constants" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- DELETED -> Symbol" "== Constants" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- DRAFT -> Symbol" "== Constants" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- RECENT -> Symbol" "== Constants" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- NOINFERIORS -> Symbol" "== Constants" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- NOSELECT -> Symbol" "== Constants" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- MARKED -> Symbol" "== Constants" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- UNMARKED -> Symbol" "== Constants" "= class Net::IMAP < Object" "refm/api/src/net/imap.rd")
(find-rurima "= class Net::IMAP::ContinuationRequest < Struct" "refm/api/src/net/imap.rd")
(find-rurima "== Instance Methods" "= class Net::IMAP::ContinuationRequest < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- data -> Net::IMAP::ResponseText" "== Instance Methods" "= class Net::IMAP::ContinuationRequest < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- raw_data -> String" "== Instance Methods" "= class Net::IMAP::ContinuationRequest < Struct" "refm/api/src/net/imap.rd")
(find-rurima "= class Net::IMAP::UntaggedResponse < Struct" "refm/api/src/net/imap.rd")
(find-rurima "== Instance Methods" "= class Net::IMAP::UntaggedResponse < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- name -> String" "== Instance Methods" "= class Net::IMAP::UntaggedResponse < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- data -> object" "== Instance Methods" "= class Net::IMAP::UntaggedResponse < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- raw_data -> String" "== Instance Methods" "= class Net::IMAP::UntaggedResponse < Struct" "refm/api/src/net/imap.rd")
(find-rurima "= class Net::IMAP::TaggedResponse < Struct" "refm/api/src/net/imap.rd")
(find-rurima "== Instance Methods" "= class Net::IMAP::TaggedResponse < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- tag -> String" "== Instance Methods" "= class Net::IMAP::TaggedResponse < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- name -> String" "== Instance Methods" "= class Net::IMAP::TaggedResponse < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- data -> Net::IMAP::ResponseText " "== Instance Methods" "= class Net::IMAP::TaggedResponse < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- raw_data -> String" "== Instance Methods" "= class Net::IMAP::TaggedResponse < Struct" "refm/api/src/net/imap.rd")
(find-rurima "= class Net::IMAP::ResponseText < Struct" "refm/api/src/net/imap.rd")
(find-rurima "== Instance Methods" "= class Net::IMAP::ResponseText < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- code -> Net::IMAP::ResponseCode | nil" "== Instance Methods" "= class Net::IMAP::ResponseText < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- text -> String" "== Instance Methods" "= class Net::IMAP::ResponseText < Struct" "refm/api/src/net/imap.rd")
(find-rurima "= class Net::IMAP::ResponseCode < Struct" "refm/api/src/net/imap.rd")
(find-rurima "== Instance Methods" "= class Net::IMAP::ResponseCode < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- name -> String" "== Instance Methods" "= class Net::IMAP::ResponseCode < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- data -> object | nil" "== Instance Methods" "= class Net::IMAP::ResponseCode < Struct" "refm/api/src/net/imap.rd")
(find-rurima "= class Net::IMAP::MailboxList < Struct" "refm/api/src/net/imap.rd")
(find-rurima "== Instance Methods" "= class Net::IMAP::MailboxList < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- attr -> [Symbol]" "== Instance Methods" "= class Net::IMAP::MailboxList < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- delim -> String|nil" "== Instance Methods" "= class Net::IMAP::MailboxList < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- name -> String" "== Instance Methods" "= class Net::IMAP::MailboxList < Struct" "refm/api/src/net/imap.rd")
(find-rurima "= class Net::IMAP::MailboxQuota < Struct" "refm/api/src/net/imap.rd")
(find-rurima "== Instance Methods" "= class Net::IMAP::MailboxQuota < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- mailbox -> String" "== Instance Methods" "= class Net::IMAP::MailboxQuota < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- usage -> Integer" "== Instance Methods" "= class Net::IMAP::MailboxQuota < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- quota -> Integer" "== Instance Methods" "= class Net::IMAP::MailboxQuota < Struct" "refm/api/src/net/imap.rd")
(find-rurima "= class Net::IMAP::MailboxQuotaRoot < Struct" "refm/api/src/net/imap.rd")
(find-rurima "== Instance Methods" "= class Net::IMAP::MailboxQuotaRoot < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- mailbox -> String" "== Instance Methods" "= class Net::IMAP::MailboxQuotaRoot < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- quotaroots -> [String]" "== Instance Methods" "= class Net::IMAP::MailboxQuotaRoot < Struct" "refm/api/src/net/imap.rd")
(find-rurima "= class Net::IMAP::MailboxACLItem < Struct" "refm/api/src/net/imap.rd")
(find-rurima "== Instance Methods" "= class Net::IMAP::MailboxACLItem < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- user -> String" "== Instance Methods" "= class Net::IMAP::MailboxACLItem < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- rights -> String" "== Instance Methods" "= class Net::IMAP::MailboxACLItem < Struct" "refm/api/src/net/imap.rd")
(find-rurima "= class Net::IMAP::StatusData < Struct" "refm/api/src/net/imap.rd")
(find-rurima "== Instance Methods" "= class Net::IMAP::StatusData < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- mailbox -> String" "== Instance Methods" "= class Net::IMAP::StatusData < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- attr -> { String => Integer }" "== Instance Methods" "= class Net::IMAP::StatusData < Struct" "refm/api/src/net/imap.rd")
(find-rurima "= class Net::IMAP::FetchData < Object" "refm/api/src/net/imap.rd")
(find-rurima "== Instance Methods" "= class Net::IMAP::FetchData < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- seqno -> Integer" "== Instance Methods" "= class Net::IMAP::FetchData < Object" "refm/api/src/net/imap.rd")
(find-rurima "--- attr -> { String => object }" "== Instance Methods" "= class Net::IMAP::FetchData < Object" "refm/api/src/net/imap.rd")
(find-rurima "= class Net::IMAP::Envelope < Struct" "refm/api/src/net/imap.rd")
(find-rurima "== Instance Methods" "= class Net::IMAP::Envelope < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- date -> String | nil" "== Instance Methods" "= class Net::IMAP::Envelope < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- subject -> String | nil" "== Instance Methods" "= class Net::IMAP::Envelope < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- from -> [Net::IMAP::Address] | nil" "== Instance Methods" "= class Net::IMAP::Envelope < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- sender -> [Net::IMAP::Address] | nil" "== Instance Methods" "= class Net::IMAP::Envelope < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- reply_to -> [Net::IMAP::Address] | nil" "== Instance Methods" "= class Net::IMAP::Envelope < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- to -> [Net::IMAP::Address] | nil" "== Instance Methods" "= class Net::IMAP::Envelope < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- cc -> [Net::IMAP::Address] | nil" "== Instance Methods" "= class Net::IMAP::Envelope < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- bcc -> [Net::IMAP::Address] | nil" "== Instance Methods" "= class Net::IMAP::Envelope < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- in_reply_to -> String | nil" "== Instance Methods" "= class Net::IMAP::Envelope < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- message_id -> String | nil" "== Instance Methods" "= class Net::IMAP::Envelope < Struct" "refm/api/src/net/imap.rd")
(find-rurima "= class Net::IMAP::Address < Struct" "refm/api/src/net/imap.rd")
(find-rurima "== Instance Methods" "= class Net::IMAP::Address < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- name -> String | nil" "== Instance Methods" "= class Net::IMAP::Address < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- route -> String | nil" "== Instance Methods" "= class Net::IMAP::Address < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- mailbox -> String | nil" "== Instance Methods" "= class Net::IMAP::Address < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- host -> String | nil" "== Instance Methods" "= class Net::IMAP::Address < Struct" "refm/api/src/net/imap.rd")
(find-rurima "= class Net::IMAP::ContentDisposition < Struct" "refm/api/src/net/imap.rd")
(find-rurima "== Instance Methods" "= class Net::IMAP::ContentDisposition < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- dsp_type -> String" "== Instance Methods" "= class Net::IMAP::ContentDisposition < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- param -> { String => String } | nil" "== Instance Methods" "= class Net::IMAP::ContentDisposition < Struct" "refm/api/src/net/imap.rd")
(find-rurima "= class Net::IMAP::ThreadMember < Struct" "refm/api/src/net/imap.rd")
(find-rurima "== Instance Methods" "= class Net::IMAP::ThreadMember < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- seqno -> Integer | nil" "== Instance Methods" "= class Net::IMAP::ThreadMember < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- children -> [Net::IMAP::ThreadMember]" "== Instance Methods" "= class Net::IMAP::ThreadMember < Struct" "refm/api/src/net/imap.rd")
(find-rurima "= class Net::IMAP::BodyTypeBasic < Struct" "refm/api/src/net/imap.rd")
(find-rurima "== Instance Methods" "= class Net::IMAP::BodyTypeBasic < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- media_type -> String" "== Instance Methods" "= class Net::IMAP::BodyTypeBasic < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- subtype -> String" "== Instance Methods" "= class Net::IMAP::BodyTypeBasic < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- media_subtype -> String" "== Instance Methods" "= class Net::IMAP::BodyTypeBasic < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- param -> { String => String } | nil" "== Instance Methods" "= class Net::IMAP::BodyTypeBasic < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- content_id -> String | nil" "== Instance Methods" "= class Net::IMAP::BodyTypeBasic < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- description -> String | nil" "== Instance Methods" "= class Net::IMAP::BodyTypeBasic < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- encoding -> String" "== Instance Methods" "= class Net::IMAP::BodyTypeBasic < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- size -> Integer" "== Instance Methods" "= class Net::IMAP::BodyTypeBasic < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- md5 -> String | nil" "== Instance Methods" "= class Net::IMAP::BodyTypeBasic < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- disposition -> Net::IMAP::ContentDisposition | nil" "== Instance Methods" "= class Net::IMAP::BodyTypeBasic < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- language -> String | [String] | nil" "== Instance Methods" "= class Net::IMAP::BodyTypeBasic < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- extension -> Array | nil" "== Instance Methods" "= class Net::IMAP::BodyTypeBasic < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- multipart? -> bool" "== Instance Methods" "= class Net::IMAP::BodyTypeBasic < Struct" "refm/api/src/net/imap.rd")
(find-rurima "= class Net::IMAP::BodyTypeText < Struct" "refm/api/src/net/imap.rd")
(find-rurima "== Instance Methods" "= class Net::IMAP::BodyTypeText < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- media_type -> String" "== Instance Methods" "= class Net::IMAP::BodyTypeText < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- subtype -> String" "== Instance Methods" "= class Net::IMAP::BodyTypeText < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- media_subtype -> String" "== Instance Methods" "= class Net::IMAP::BodyTypeText < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- param -> { String => String } | nil" "== Instance Methods" "= class Net::IMAP::BodyTypeText < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- content_id -> String | nil" "== Instance Methods" "= class Net::IMAP::BodyTypeText < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- description -> String | nil" "== Instance Methods" "= class Net::IMAP::BodyTypeText < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- encoding -> String" "== Instance Methods" "= class Net::IMAP::BodyTypeText < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- size -> Integer" "== Instance Methods" "= class Net::IMAP::BodyTypeText < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- lines -> Integer" "== Instance Methods" "= class Net::IMAP::BodyTypeText < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- md5 -> String | nil" "== Instance Methods" "= class Net::IMAP::BodyTypeText < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- disposition -> Net::IMAP::ContentDisposition | nil" "== Instance Methods" "= class Net::IMAP::BodyTypeText < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- language -> String | [String] | nil" "== Instance Methods" "= class Net::IMAP::BodyTypeText < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- extension -> Array | nil" "== Instance Methods" "= class Net::IMAP::BodyTypeText < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- multipart? -> bool" "== Instance Methods" "= class Net::IMAP::BodyTypeText < Struct" "refm/api/src/net/imap.rd")
(find-rurima "= class Net::IMAP::BodyTypeMessage < Struct" "refm/api/src/net/imap.rd")
(find-rurima "== Instance Methods" "= class Net::IMAP::BodyTypeMessage < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- media_type -> String" "== Instance Methods" "= class Net::IMAP::BodyTypeMessage < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- subtype -> String" "== Instance Methods" "= class Net::IMAP::BodyTypeMessage < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- media_subtype -> String" "== Instance Methods" "= class Net::IMAP::BodyTypeMessage < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- param -> { String => String } | nil" "== Instance Methods" "= class Net::IMAP::BodyTypeMessage < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- content_id -> String | nil" "== Instance Methods" "= class Net::IMAP::BodyTypeMessage < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- description -> String | nil" "== Instance Methods" "= class Net::IMAP::BodyTypeMessage < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- encoding -> String" "== Instance Methods" "= class Net::IMAP::BodyTypeMessage < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- size -> Integer" "== Instance Methods" "= class Net::IMAP::BodyTypeMessage < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- envelope -> Net::IMAP::Envelpe | nil" "== Instance Methods" "= class Net::IMAP::BodyTypeMessage < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- body -> Net::IMAP::BodyTypeBasic | Net::IMAP::BodyTypeMessage | Net::IMAP::BodyTypeText | Net::IMAP::BodyTypeMultipart" "== Instance Methods" "= class Net::IMAP::BodyTypeMessage < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- lines -> Integer" "== Instance Methods" "= class Net::IMAP::BodyTypeMessage < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- md5 -> String | nil" "== Instance Methods" "= class Net::IMAP::BodyTypeMessage < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- disposition -> Net::IMAP::ContentDisposition | nil" "== Instance Methods" "= class Net::IMAP::BodyTypeMessage < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- language -> String | [String] | nil" "== Instance Methods" "= class Net::IMAP::BodyTypeMessage < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- extension  -> Array | nil" "== Instance Methods" "= class Net::IMAP::BodyTypeMessage < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- multipart?  -> bool" "== Instance Methods" "= class Net::IMAP::BodyTypeMessage < Struct" "refm/api/src/net/imap.rd")
(find-rurima "= class Net::IMAP::BodyTypeMultipart < Struct" "refm/api/src/net/imap.rd")
(find-rurima "== Instance Methods" "= class Net::IMAP::BodyTypeMultipart < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- media_type -> String" "== Instance Methods" "= class Net::IMAP::BodyTypeMultipart < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- subtype -> String" "== Instance Methods" "= class Net::IMAP::BodyTypeMultipart < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- media_subtype -> String" "== Instance Methods" "= class Net::IMAP::BodyTypeMultipart < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- parts -> [Net::IMAP::BodyTypeBasic | Net::IMAP::BodyTypeText | Net::IMAP::BodyTypeMessage | Net::IMAP::BodyTypeMultipart]" "== Instance Methods" "= class Net::IMAP::BodyTypeMultipart < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- param -> { String => String }" "== Instance Methods" "= class Net::IMAP::BodyTypeMultipart < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- disposition -> Net::IMAP::ContentDisposition | nil" "== Instance Methods" "= class Net::IMAP::BodyTypeMultipart < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- language -> String | [String] | nil" "== Instance Methods" "= class Net::IMAP::BodyTypeMultipart < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- extension -> Array | nil" "== Instance Methods" "= class Net::IMAP::BodyTypeMultipart < Struct" "refm/api/src/net/imap.rd")
(find-rurima "--- multipart? -> bool" "== Instance Methods" "= class Net::IMAP::BodyTypeMultipart < Struct" "refm/api/src/net/imap.rd")
(find-rurima "= class Net::IMAP::Error < StandardError" "refm/api/src/net/imap.rd")
(find-rurima "= class Net::IMAP::DataFormatError < Net::IMAP::Error" "refm/api/src/net/imap.rd")
(find-rurima "= class Net::IMAP::ResponseParseError < Net::IMAP::Error" "refm/api/src/net/imap.rd")
(find-rurima "= class Net::IMAP::ResponseError < Net::IMAP::Error" "refm/api/src/net/imap.rd")
(find-rurima "== Instance Methods" "= class Net::IMAP::ResponseError < Net::IMAP::Error" "refm/api/src/net/imap.rd")
(find-rurima "--- response -> Net::IMAP::TaggedResponse | Net::IMAP::UntaggedResponse" "== Instance Methods" "= class Net::IMAP::ResponseError < Net::IMAP::Error" "refm/api/src/net/imap.rd")
(find-rurima "--- response=(resp)" "== Instance Methods" "= class Net::IMAP::ResponseError < Net::IMAP::Error" "refm/api/src/net/imap.rd")
(find-rurima "= class Net::IMAP::NoResponseError < Net::IMAP::ResponseError" "refm/api/src/net/imap.rd")
(find-rurima "= class Net::IMAP::BadResponseError < Net::IMAP::ResponseError" "refm/api/src/net/imap.rd")
(find-rurima "= class Net::IMAP::ByeResponseError < Net::IMAP::ResponseError" "refm/api/src/net/imap.rd")
(find-rurima "= class Net::IMAP::FlagCountError < Net::IMAP::Error" "refm/api/src/net/imap.rd")
(find-rurima "= class Net::ProtocolError < StandardError" "refm/api/src/net/protocol.rd")
(find-rurima "= class Net::ProtoSyntaxError < Net::ProtocolError" "refm/api/src/net/protocol.rd")
(find-rurima "= class Net::ProtoFatalError < Net::ProtocolError" "refm/api/src/net/protocol.rd")
(find-rurima "= class Net::ProtoUnknownError < Net::ProtocolError" "refm/api/src/net/protocol.rd")
(find-rurima "= class Net::ProtoServerError < Net::ProtocolError" "refm/api/src/net/protocol.rd")
(find-rurima "= class Net::ProtoAuthError < Net::ProtocolError" "refm/api/src/net/protocol.rd")
(find-rurima "= class Net::ProtoCommandError < Net::ProtocolError" "refm/api/src/net/protocol.rd")
(find-rurima "= class Net::ProtoRetriableError < Net::ProtocolError" "refm/api/src/net/protocol.rd")
(find-rurima "= module Finalizer" "refm/api/src/finalize.rd")
(find-rurima "== Singleton Methods" "= module Finalizer" "refm/api/src/finalize.rd")
(find-rurima "--- add(obj, dependant, method = :finalize, *options)" "== Singleton Methods" "= module Finalizer" "refm/api/src/finalize.rd")
(find-rurima "--- add_dependency(obj, dependant, method = :finalize, *options)" "== Singleton Methods" "= module Finalizer" "refm/api/src/finalize.rd")
(find-rurima "--- delete(id, dependant, method = :finalize)" "== Singleton Methods" "= module Finalizer" "refm/api/src/finalize.rd")
(find-rurima "--- delete_dependency(id, dependant, method = :finalize)" "== Singleton Methods" "= module Finalizer" "refm/api/src/finalize.rd")
(find-rurima "--- delete_all_dependency(id, dependant)" "== Singleton Methods" "= module Finalizer" "refm/api/src/finalize.rd")
(find-rurima "--- delete_by_dependant(dependant, method = :finalize)" "== Singleton Methods" "= module Finalizer" "refm/api/src/finalize.rd")
(find-rurima "--- delete_all_by_dependant(dependant)" "== Singleton Methods" "= module Finalizer" "refm/api/src/finalize.rd")
(find-rurima "--- finalize_dependency(id, dependant, method = :finalize)" "== Singleton Methods" "= module Finalizer" "refm/api/src/finalize.rd")
(find-rurima "--- finalize_all_dependency(id, dependant)" "== Singleton Methods" "= module Finalizer" "refm/api/src/finalize.rd")
(find-rurima "--- finalize_by_dependant(dependant, method = :finalize)" "== Singleton Methods" "= module Finalizer" "refm/api/src/finalize.rd")
(find-rurima "--- finalize_all_by_dependant(dependant)" "== Singleton Methods" "= module Finalizer" "refm/api/src/finalize.rd")
(find-rurima "--- finalize_all" "== Singleton Methods" "= module Finalizer" "refm/api/src/finalize.rd")
(find-rurima "--- safe" "== Singleton Methods" "= module Finalizer" "refm/api/src/finalize.rd")
(find-rurima "= class Scanf::FormatSpecifier < Object" "refm/api/src/scanf/Scanf__FormatSpecifier")
(find-rurima "== Instance Methods" "= class Scanf::FormatSpecifier < Object" "refm/api/src/scanf/Scanf__FormatSpecifier")
(find-rurima "--- conversion" "== Instance Methods" "= class Scanf::FormatSpecifier < Object" "refm/api/src/scanf/Scanf__FormatSpecifier")
(find-rurima "--- count_space?" "== Instance Methods" "= class Scanf::FormatSpecifier < Object" "refm/api/src/scanf/Scanf__FormatSpecifier")
(find-rurima "--- letter" "== Instance Methods" "= class Scanf::FormatSpecifier < Object" "refm/api/src/scanf/Scanf__FormatSpecifier")
(find-rurima "--- match(str)" "== Instance Methods" "= class Scanf::FormatSpecifier < Object" "refm/api/src/scanf/Scanf__FormatSpecifier")
(find-rurima "--- matched" "== Instance Methods" "= class Scanf::FormatSpecifier < Object" "refm/api/src/scanf/Scanf__FormatSpecifier")
(find-rurima "--- matched_string" "== Instance Methods" "= class Scanf::FormatSpecifier < Object" "refm/api/src/scanf/Scanf__FormatSpecifier")
(find-rurima "--- mid_match?" "== Instance Methods" "= class Scanf::FormatSpecifier < Object" "refm/api/src/scanf/Scanf__FormatSpecifier")
(find-rurima "--- re_string" "== Instance Methods" "= class Scanf::FormatSpecifier < Object" "refm/api/src/scanf/Scanf__FormatSpecifier")
(find-rurima "--- to_re" "== Instance Methods" "= class Scanf::FormatSpecifier < Object" "refm/api/src/scanf/Scanf__FormatSpecifier")
(find-rurima "--- to_s" "== Instance Methods" "= class Scanf::FormatSpecifier < Object" "refm/api/src/scanf/Scanf__FormatSpecifier")
(find-rurima "--- width" "== Instance Methods" "= class Scanf::FormatSpecifier < Object" "refm/api/src/scanf/Scanf__FormatSpecifier")
(find-rurima "= class Scanf::FormatString < Object" "refm/api/src/scanf/Scanf__FormatString")
(find-rurima "== Singleton Methods" "= class Scanf::FormatString < Object" "refm/api/src/scanf/Scanf__FormatString")
(find-rurima "--- new(str)" "== Singleton Methods" "= class Scanf::FormatString < Object" "refm/api/src/scanf/Scanf__FormatString")
(find-rurima "== Instance Methods" "= class Scanf::FormatString < Object" "refm/api/src/scanf/Scanf__FormatString")
(find-rurima "--- last_match_tried" "== Instance Methods" "= class Scanf::FormatString < Object" "refm/api/src/scanf/Scanf__FormatString")
(find-rurima "--- last_spec" "== Instance Methods" "= class Scanf::FormatString < Object" "refm/api/src/scanf/Scanf__FormatString")
(find-rurima "--- last_spec_tried" "== Instance Methods" "= class Scanf::FormatString < Object" "refm/api/src/scanf/Scanf__FormatString")
(find-rurima "--- match(str)" "== Instance Methods" "= class Scanf::FormatString < Object" "refm/api/src/scanf/Scanf__FormatString")
(find-rurima "--- matched_count" "== Instance Methods" "= class Scanf::FormatString < Object" "refm/api/src/scanf/Scanf__FormatString")
(find-rurima "--- prune(n=matched_count)" "== Instance Methods" "= class Scanf::FormatString < Object" "refm/api/src/scanf/Scanf__FormatString")
(find-rurima "--- space" "== Instance Methods" "= class Scanf::FormatString < Object" "refm/api/src/scanf/Scanf__FormatString")
(find-rurima "--- spec_count" "== Instance Methods" "= class Scanf::FormatString < Object" "refm/api/src/scanf/Scanf__FormatString")
(find-rurima "--- string_left" "== Instance Methods" "= class Scanf::FormatString < Object" "refm/api/src/scanf/Scanf__FormatString")
(find-rurima "--- to_s" "== Instance Methods" "= class Scanf::FormatString < Object" "refm/api/src/scanf/Scanf__FormatString")
(find-rurima "== Constants" "= class Scanf::FormatString < Object" "refm/api/src/scanf/Scanf__FormatString")
(find-rurima "--- REGEX" "== Constants" "= class Scanf::FormatString < Object" "refm/api/src/scanf/Scanf__FormatString")
(find-rurima "--- SPECIFIERS" "== Constants" "= class Scanf::FormatString < Object" "refm/api/src/scanf/Scanf__FormatString")
(find-rurima "=== 使い方" "refm/api/src/etc.rd")
(find-rurima "= module Etc" "refm/api/src/etc.rd")
(find-rurima "== Module Functions" "= module Etc" "refm/api/src/etc.rd")
(find-rurima "--- getgrent -> Struct::Group | nil" "== Module Functions" "= module Etc" "refm/api/src/etc.rd")
(find-rurima "--- endgrent -> nil" "== Module Functions" "= module Etc" "refm/api/src/etc.rd")
(find-rurima "--- setgrent -> nil" "== Module Functions" "= module Etc" "refm/api/src/etc.rd")
(find-rurima "--- getpwent -> Struct::Passwd | nil" "== Module Functions" "= module Etc" "refm/api/src/etc.rd")
(find-rurima "--- endpwent -> nil" "== Module Functions" "= module Etc" "refm/api/src/etc.rd")
(find-rurima "--- setpwent -> nil" "== Module Functions" "= module Etc" "refm/api/src/etc.rd")
(find-rurima "--- getlogin -> String | nil" "== Module Functions" "= module Etc" "refm/api/src/etc.rd")
(find-rurima "--- getpwnam(name) -> Struct::Passwd" "== Module Functions" "= module Etc" "refm/api/src/etc.rd")
(find-rurima "--- getpwuid(uid = getuid) -> Struct::Passwd" "== Module Functions" "= module Etc" "refm/api/src/etc.rd")
(find-rurima "--- getgrgid(gid) -> Struct::Group" "== Module Functions" "= module Etc" "refm/api/src/etc.rd")
(find-rurima "--- getgrnam(name) -> Struct::Group" "== Module Functions" "= module Etc" "refm/api/src/etc.rd")
(find-rurima "--- group -> Struct::Group | nil" "== Module Functions" "= module Etc" "refm/api/src/etc.rd")
(find-rurima "--- group {|gr| ... } -> ()" "== Module Functions" "= module Etc" "refm/api/src/etc.rd")
(find-rurima "--- passwd -> Struct::Passwd | nil" "== Module Functions" "= module Etc" "refm/api/src/etc.rd")
(find-rurima "--- passwd {|pw| ... } -> ()" "== Module Functions" "= module Etc" "refm/api/src/etc.rd")
(find-rurima "= class Struct::Group < Struct" "refm/api/src/etc.rd")
(find-rurima "== Instance Methods" "= class Struct::Group < Struct" "refm/api/src/etc.rd")
(find-rurima "--- gid -> Integer" "== Instance Methods" "= class Struct::Group < Struct" "refm/api/src/etc.rd")
(find-rurima "--- gid=(gid)" "== Instance Methods" "= class Struct::Group < Struct" "refm/api/src/etc.rd")
(find-rurima "--- mem -> [String]" "== Instance Methods" "= class Struct::Group < Struct" "refm/api/src/etc.rd")
(find-rurima "--- mem=(mem)" "== Instance Methods" "= class Struct::Group < Struct" "refm/api/src/etc.rd")
(find-rurima "--- name -> String" "== Instance Methods" "= class Struct::Group < Struct" "refm/api/src/etc.rd")
(find-rurima "--- name=(name)" "== Instance Methods" "= class Struct::Group < Struct" "refm/api/src/etc.rd")
(find-rurima "--- passwd -> String" "== Instance Methods" "= class Struct::Group < Struct" "refm/api/src/etc.rd")
(find-rurima "--- passwd=(passwd)" "== Instance Methods" "= class Struct::Group < Struct" "refm/api/src/etc.rd")
(find-rurima "= class Struct::Passwd < Struct" "refm/api/src/etc.rd")
(find-rurima "== Instance Methods" "= class Struct::Passwd < Struct" "refm/api/src/etc.rd")
(find-rurima "--- dir -> String" "== Instance Methods" "= class Struct::Passwd < Struct" "refm/api/src/etc.rd")
(find-rurima "--- dir=(dir)" "== Instance Methods" "= class Struct::Passwd < Struct" "refm/api/src/etc.rd")
(find-rurima "--- gecos" "== Instance Methods" "= class Struct::Passwd < Struct" "refm/api/src/etc.rd")
(find-rurima "--- gecos=()" "== Instance Methods" "= class Struct::Passwd < Struct" "refm/api/src/etc.rd")
(find-rurima "--- gid -> Integer" "== Instance Methods" "= class Struct::Passwd < Struct" "refm/api/src/etc.rd")
(find-rurima "--- gid=(gid)" "== Instance Methods" "= class Struct::Passwd < Struct" "refm/api/src/etc.rd")
(find-rurima "--- name -> String" "== Instance Methods" "= class Struct::Passwd < Struct" "refm/api/src/etc.rd")
(find-rurima "--- name=(name)" "== Instance Methods" "= class Struct::Passwd < Struct" "refm/api/src/etc.rd")
(find-rurima "--- passwd -> String" "== Instance Methods" "= class Struct::Passwd < Struct" "refm/api/src/etc.rd")
(find-rurima "--- passwd=(passwd)" "== Instance Methods" "= class Struct::Passwd < Struct" "refm/api/src/etc.rd")
(find-rurima "--- shell -> String" "== Instance Methods" "= class Struct::Passwd < Struct" "refm/api/src/etc.rd")
(find-rurima "--- shell=(shell)" "== Instance Methods" "= class Struct::Passwd < Struct" "refm/api/src/etc.rd")
(find-rurima "--- uid -> Integer" "== Instance Methods" "= class Struct::Passwd < Struct" "refm/api/src/etc.rd")
(find-rurima "--- uid=(uid)" "== Instance Methods" "= class Struct::Passwd < Struct" "refm/api/src/etc.rd")
(find-rurima "--- change -> Integer" "== Instance Methods" "= class Struct::Passwd < Struct" "refm/api/src/etc.rd")
(find-rurima "--- change=(change)" "== Instance Methods" "= class Struct::Passwd < Struct" "refm/api/src/etc.rd")
(find-rurima "--- quota -> Integer" "== Instance Methods" "= class Struct::Passwd < Struct" "refm/api/src/etc.rd")
(find-rurima "--- quota=(quota)" "== Instance Methods" "= class Struct::Passwd < Struct" "refm/api/src/etc.rd")
(find-rurima "--- age -> Integer" "== Instance Methods" "= class Struct::Passwd < Struct" "refm/api/src/etc.rd")
(find-rurima "--- age=(age)" "== Instance Methods" "= class Struct::Passwd < Struct" "refm/api/src/etc.rd")
(find-rurima "--- uclass -> String" "== Instance Methods" "= class Struct::Passwd < Struct" "refm/api/src/etc.rd")
(find-rurima "--- uclass=(class)" "== Instance Methods" "= class Struct::Passwd < Struct" "refm/api/src/etc.rd")
(find-rurima "--- comment -> String" "== Instance Methods" "= class Struct::Passwd < Struct" "refm/api/src/etc.rd")
(find-rurima "--- comment=(comment)" "== Instance Methods" "= class Struct::Passwd < Struct" "refm/api/src/etc.rd")
(find-rurima "--- expire -> Integer" "== Instance Methods" "= class Struct::Passwd < Struct" "refm/api/src/etc.rd")
(find-rurima "--- expire=(expire)" "== Instance Methods" "= class Struct::Passwd < Struct" "refm/api/src/etc.rd")
(find-rurima "=== 参考" "refm/api/src/delegate.rd")
(find-rurima "= reopen Kernel" "refm/api/src/delegate.rd")
(find-rurima "== Private Instance Methods" "= reopen Kernel" "refm/api/src/delegate.rd")
(find-rurima "--- DelegateClass(superclass) -> object" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/delegate.rd")
(find-rurima "= class Delegator < Object" "refm/api/src/delegate.rd")
(find-rurima "== Class Methods" "= class Delegator < Object" "refm/api/src/delegate.rd")
(find-rurima "--- new(obj) -> object" "== Class Methods" "= class Delegator < Object" "refm/api/src/delegate.rd")
(find-rurima "== Instance Methods" "= class Delegator < Object" "refm/api/src/delegate.rd")
(find-rurima "--- ==(obj) -> bool" "== Instance Methods" "= class Delegator < Object" "refm/api/src/delegate.rd")
(find-rurima "--- !=(obj) -> bool" "== Instance Methods" "= class Delegator < Object" "refm/api/src/delegate.rd")
(find-rurima "--- ! -> bool" "== Instance Methods" "= class Delegator < Object" "refm/api/src/delegate.rd")
(find-rurima "--- clone -> object" "== Instance Methods" "= class Delegator < Object" "refm/api/src/delegate.rd")
(find-rurima "--- dup -> object" "== Instance Methods" "= class Delegator < Object" "refm/api/src/delegate.rd")
(find-rurima "--- __getobj__ -> object" "== Instance Methods" "= class Delegator < Object" "refm/api/src/delegate.rd")
(find-rurima "--- __setobj__(obj)" "== Instance Methods" "= class Delegator < Object" "refm/api/src/delegate.rd")
(find-rurima "--- marshal_dump -> object" "== Instance Methods" "= class Delegator < Object" "refm/api/src/delegate.rd")
(find-rurima "--- marshal_load(obj) -> object" "== Instance Methods" "= class Delegator < Object" "refm/api/src/delegate.rd")
(find-rurima "--- method_missing(m, *args) -> object" "== Instance Methods" "= class Delegator < Object" "refm/api/src/delegate.rd")
(find-rurima "--- respond_to?(m) -> bool" "== Instance Methods" "= class Delegator < Object" "refm/api/src/delegate.rd")
(find-rurima "--- freeze -> self" "== Instance Methods" "= class Delegator < Object" "refm/api/src/delegate.rd")
(find-rurima "--- methods -> [Symbol]" "== Instance Methods" "= class Delegator < Object" "refm/api/src/delegate.rd")
(find-rurima "--- protected_methods(all = true) -> [Symbol]" "== Instance Methods" "= class Delegator < Object" "refm/api/src/delegate.rd")
(find-rurima "--- public_methods(all = true) -> [Symbol]" "== Instance Methods" "= class Delegator < Object" "refm/api/src/delegate.rd")
(find-rurima "--- respond_to_missing?(m, include_private) -> bool" "== Instance Methods" "= class Delegator < Object" "refm/api/src/delegate.rd")
(find-rurima "== Constants" "= class Delegator < Object" "refm/api/src/delegate.rd")
(find-rurima "--- IgnoreBacktracePat -> Regexp" "== Constants" "= class Delegator < Object" "refm/api/src/delegate.rd")
(find-rurima "= module TclTkLib::VarAccessFlag" "refm/api/src/tcltklib/TclTkLib__VarAccessFlag")
(find-rurima "== Constants" "= module TclTkLib::VarAccessFlag" "refm/api/src/tcltklib/TclTkLib__VarAccessFlag")
(find-rurima "--- APPEND_VALUE" "== Constants" "= module TclTkLib::VarAccessFlag" "refm/api/src/tcltklib/TclTkLib__VarAccessFlag")
(find-rurima "--- GLOBAL_ONLY" "== Constants" "= module TclTkLib::VarAccessFlag" "refm/api/src/tcltklib/TclTkLib__VarAccessFlag")
(find-rurima "--- LEAVE_ERR_MSG" "== Constants" "= module TclTkLib::VarAccessFlag" "refm/api/src/tcltklib/TclTkLib__VarAccessFlag")
(find-rurima "--- LIST_ELEMENT" "== Constants" "= module TclTkLib::VarAccessFlag" "refm/api/src/tcltklib/TclTkLib__VarAccessFlag")
(find-rurima "--- NAMESPACE_ONLY" "== Constants" "= module TclTkLib::VarAccessFlag" "refm/api/src/tcltklib/TclTkLib__VarAccessFlag")
(find-rurima "--- NONE" "== Constants" "= module TclTkLib::VarAccessFlag" "refm/api/src/tcltklib/TclTkLib__VarAccessFlag")
(find-rurima "--- PARSE_VARNAME" "== Constants" "= module TclTkLib::VarAccessFlag" "refm/api/src/tcltklib/TclTkLib__VarAccessFlag")
(find-rurima "= class TkCallbackRedo < TkLocalJumpError" "refm/api/src/tcltklib/TkCallbackRedo")
(find-rurima "= class TclTkIp" "refm/api/src/tcltklib/TclTkIp")
(find-rurima "== Instance Methods" "= class TclTkIp" "refm/api/src/tcltklib/TclTkIp")
(find-rurima "--- _eval(cmd)" "== Instance Methods" "= class TclTkIp" "refm/api/src/tcltklib/TclTkIp")
(find-rurima "--- _invoke(*cmds)" "== Instance Methods" "= class TclTkIp" "refm/api/src/tcltklib/TclTkIp")
(find-rurima "--- _fromUTF8(str, encoding = nil)" "== Instance Methods" "= class TclTkIp" "refm/api/src/tcltklib/TclTkIp")
(find-rurima "--- _toUTF8(str, encoding = nil)" "== Instance Methods" "= class TclTkIp" "refm/api/src/tcltklib/TclTkIp")
(find-rurima "--- _conv_listelement(src)" "== Instance Methods" "= class TclTkIp" "refm/api/src/tcltklib/TclTkIp")
(find-rurima "--- _create_console" "== Instance Methods" "= class TclTkIp" "refm/api/src/tcltklib/TclTkIp")
(find-rurima "--- _get_global_var(var_name)" "== Instance Methods" "= class TclTkIp" "refm/api/src/tcltklib/TclTkIp")
(find-rurima "--- _get_global_var2(var_name, index)" "== Instance Methods" "= class TclTkIp" "refm/api/src/tcltklib/TclTkIp")
(find-rurima "--- _get_variable(var_name, flag)" "== Instance Methods" "= class TclTkIp" "refm/api/src/tcltklib/TclTkIp")
(find-rurima "--- _get_variable2(var_name, index, flag)" "== Instance Methods" "= class TclTkIp" "refm/api/src/tcltklib/TclTkIp")
(find-rurima "--- _immediate_invoke" "== Instance Methods" "= class TclTkIp" "refm/api/src/tcltklib/TclTkIp")
(find-rurima "--- _make_menu_embeddable(menu_path)" "== Instance Methods" "= class TclTkIp" "refm/api/src/tcltklib/TclTkIp")
(find-rurima "--- _merge_tklist" "== Instance Methods" "= class TclTkIp" "refm/api/src/tcltklib/TclTkIp")
(find-rurima "--- _return_value" "== Instance Methods" "= class TclTkIp" "refm/api/src/tcltklib/TclTkIp")
(find-rurima "--- _set_global_var(var_name, value)" "== Instance Methods" "= class TclTkIp" "refm/api/src/tcltklib/TclTkIp")
(find-rurima "--- _set_global_var2(var_name, index, value)" "== Instance Methods" "= class TclTkIp" "refm/api/src/tcltklib/TclTkIp")
(find-rurima "--- _set_variable(var_name, value, flag)" "== Instance Methods" "= class TclTkIp" "refm/api/src/tcltklib/TclTkIp")
(find-rurima "--- _set_variable(var_name, index, value, flag)" "== Instance Methods" "= class TclTkIp" "refm/api/src/tcltklib/TclTkIp")
(find-rurima "--- _split_tklist(list_str)" "== Instance Methods" "= class TclTkIp" "refm/api/src/tcltklib/TclTkIp")
(find-rurima "--- _thread_tkwait(mode, target)" "== Instance Methods" "= class TclTkIp" "refm/api/src/tcltklib/TclTkIp")
(find-rurima "--- _thread_vwait(var)" "== Instance Methods" "= class TclTkIp" "refm/api/src/tcltklib/TclTkIp")
(find-rurima "--- _unset_global_var(var_name)" "== Instance Methods" "= class TclTkIp" "refm/api/src/tcltklib/TclTkIp")
(find-rurima "--- _unset_global_var2(var_name, index)" "== Instance Methods" "= class TclTkIp" "refm/api/src/tcltklib/TclTkIp")
(find-rurima "--- _unset_variable(var_name, flag)" "== Instance Methods" "= class TclTkIp" "refm/api/src/tcltklib/TclTkIp")
(find-rurima "--- _unset_variable2(var_name, index, flag)" "== Instance Methods" "= class TclTkIp" "refm/api/src/tcltklib/TclTkIp")
(find-rurima "--- allow_ruby_exit=(val)" "== Instance Methods" "= class TclTkIp" "refm/api/src/tcltklib/TclTkIp")
(find-rurima "--- allow_ruby_exit?" "== Instance Methods" "= class TclTkIp" "refm/api/src/tcltklib/TclTkIp")
(find-rurima "--- create_slave" "== Instance Methods" "= class TclTkIp" "refm/api/src/tcltklib/TclTkIp")
(find-rurima "--- delete" "== Instance Methods" "= class TclTkIp" "refm/api/src/tcltklib/TclTkIp")
(find-rurima "--- deleted?" "== Instance Methods" "= class TclTkIp" "refm/api/src/tcltklib/TclTkIp")
(find-rurima "--- do_one_event" "== Instance Methods" "= class TclTkIp" "refm/api/src/tcltklib/TclTkIp")
(find-rurima "--- get_eventloop_tick" "== Instance Methods" "= class TclTkIp" "refm/api/src/tcltklib/TclTkIp")
(find-rurima "--- get_eventloop_weight" "== Instance Methods" "= class TclTkIp" "refm/api/src/tcltklib/TclTkIp")
(find-rurima "--- get_no_event_wait" "== Instance Methods" "= class TclTkIp" "refm/api/src/tcltklib/TclTkIp")
(find-rurima "--- has_mainwindow?" "== Instance Methods" "= class TclTkIp" "refm/api/src/tcltklib/TclTkIp")
(find-rurima "--- invalid_namespace?" "== Instance Methods" "= class TclTkIp" "refm/api/src/tcltklib/TclTkIp")
(find-rurima "--- mainloop" "== Instance Methods" "= class TclTkIp" "refm/api/src/tcltklib/TclTkIp")
(find-rurima "--- mainloop_abort_on_exception" "== Instance Methods" "= class TclTkIp" "refm/api/src/tcltklib/TclTkIp")
(find-rurima "--- mainloop_abort_on_exception=(val)" "== Instance Methods" "= class TclTkIp" "refm/api/src/tcltklib/TclTkIp")
(find-rurima "--- mainloop_watchdog" "== Instance Methods" "= class TclTkIp" "refm/api/src/tcltklib/TclTkIp")
(find-rurima "--- make_safe" "== Instance Methods" "= class TclTkIp" "refm/api/src/tcltklib/TclTkIp")
(find-rurima "--- restart" "== Instance Methods" "= class TclTkIp" "refm/api/src/tcltklib/TclTkIp")
(find-rurima "--- safe?" "== Instance Methods" "= class TclTkIp" "refm/api/src/tcltklib/TclTkIp")
(find-rurima "--- set_eventloop_tick(tick)" "== Instance Methods" "= class TclTkIp" "refm/api/src/tcltklib/TclTkIp")
(find-rurima "--- set_eventloop_weight(loop_max, no_event)" "== Instance Methods" "= class TclTkIp" "refm/api/src/tcltklib/TclTkIp")
(find-rurima "--- set_max_block_time(time)" "== Instance Methods" "= class TclTkIp" "refm/api/src/tcltklib/TclTkIp")
(find-rurima "--- set_no_event_wait(wait)" "== Instance Methods" "= class TclTkIp" "refm/api/src/tcltklib/TclTkIp")
(find-rurima "--- slave_of?(master)" "== Instance Methods" "= class TclTkIp" "refm/api/src/tcltklib/TclTkIp")
(find-rurima "= class TkCallbackThrow < TkLocalJumpError" "refm/api/src/tcltklib/TkCallbackThrow")
(find-rurima "= class TkLocalJumpError < LocalJumpError" "refm/api/src/tcltklib/TkLocalJumpError")
(find-rurima "= module TclTkLib" "refm/api/src/tcltklib/TclTkLib")
(find-rurima "== Constants" "= module TclTkLib" "refm/api/src/tcltklib/TclTkLib")
(find-rurima "--- COMPILE_INFO" "== Constants" "= module TclTkLib" "refm/api/src/tcltklib/TclTkLib")
(find-rurima "--- FINALIZE_PROC_NAME" "== Constants" "= module TclTkLib" "refm/api/src/tcltklib/TclTkLib")
(find-rurima "--- RELEASE_DATE" "== Constants" "= module TclTkLib" "refm/api/src/tcltklib/TclTkLib")
(find-rurima "== Class Methods" "= module TclTkLib" "refm/api/src/tcltklib/TclTkLib")
(find-rurima "--- _conv_listelement(src)" "== Class Methods" "= module TclTkLib" "refm/api/src/tcltklib/TclTkLib")
(find-rurima "--- _fromUTF8(*args)" "== Class Methods" "= module TclTkLib" "refm/api/src/tcltklib/TclTkLib")
(find-rurima "--- _mark_at_exit" "== Class Methods" "= module TclTkLib" "refm/api/src/tcltklib/TclTkLib")
(find-rurima "--- _merge_tklist(*args)" "== Class Methods" "= module TclTkLib" "refm/api/src/tcltklib/TclTkLib")
(find-rurima "--- _split_tklist(list_str)" "== Class Methods" "= module TclTkLib" "refm/api/src/tcltklib/TclTkLib")
(find-rurima "--- _subst_Tcl_backslash(str)" "== Class Methods" "= module TclTkLib" "refm/api/src/tcltklib/TclTkLib")
(find-rurima "--- _subst_UTF_backslash(str)" "== Class Methods" "= module TclTkLib" "refm/api/src/tcltklib/TclTkLib")
(find-rurima "--- _toUTF8(*args)" "== Class Methods" "= module TclTkLib" "refm/api/src/tcltklib/TclTkLib")
(find-rurima "--- do_one_event(*args)" "== Class Methods" "= module TclTkLib" "refm/api/src/tcltklib/TclTkLib")
(find-rurima "--- do_thread_callback(*args)" "== Class Methods" "= module TclTkLib" "refm/api/src/tcltklib/TclTkLib")
(find-rurima "--- encoding" "== Class Methods" "= module TclTkLib" "refm/api/src/tcltklib/TclTkLib")
(find-rurima "--- encoding=(enc_name)" "== Class Methods" "= module TclTkLib" "refm/api/src/tcltklib/TclTkLib")
(find-rurima "--- encoding_system" "== Class Methods" "= module TclTkLib" "refm/api/src/tcltklib/TclTkLib")
(find-rurima "--- encoding_system=(enc_name)" "== Class Methods" "= module TclTkLib" "refm/api/src/tcltklib/TclTkLib")
(find-rurima "--- get_eventloop_tick" "== Class Methods" "= module TclTkLib" "refm/api/src/tcltklib/TclTkLib")
(find-rurima "--- get_eventloop_weight" "== Class Methods" "= module TclTkLib" "refm/api/src/tcltklib/TclTkLib")
(find-rurima "--- get_no_event_wait" "== Class Methods" "= module TclTkLib" "refm/api/src/tcltklib/TclTkLib")
(find-rurima "--- mainloop(*args)" "== Class Methods" "= module TclTkLib" "refm/api/src/tcltklib/TclTkLib")
(find-rurima "--- mainloop_abort_on_exception" "== Class Methods" "= module TclTkLib" "refm/api/src/tcltklib/TclTkLib")
(find-rurima "--- mainloop_abort_on_exception=(val)" "== Class Methods" "= module TclTkLib" "refm/api/src/tcltklib/TclTkLib")
(find-rurima "--- mainloop_thread?" "== Class Methods" "= module TclTkLib" "refm/api/src/tcltklib/TclTkLib")
(find-rurima "--- mainloop_watchdog(*args)" "== Class Methods" "= module TclTkLib" "refm/api/src/tcltklib/TclTkLib")
(find-rurima "--- num_of_mainwindows" "== Class Methods" "= module TclTkLib" "refm/api/src/tcltklib/TclTkLib")
(find-rurima "--- set_eventloop_tick(tick)" "== Class Methods" "= module TclTkLib" "refm/api/src/tcltklib/TclTkLib")
(find-rurima "--- set_eventloop_weight(loop_max, no_event)" "== Class Methods" "= module TclTkLib" "refm/api/src/tcltklib/TclTkLib")
(find-rurima "--- set_max_block_time(time)" "== Class Methods" "= module TclTkLib" "refm/api/src/tcltklib/TclTkLib")
(find-rurima "--- set_no_event_wait(wait)" "== Class Methods" "= module TclTkLib" "refm/api/src/tcltklib/TclTkLib")
(find-rurima "= class TkCallbackReturn < StandardError" "refm/api/src/tcltklib/TkCallbackReturn")
(find-rurima "= class TkCallbackRetry < TkLocalJumpError" "refm/api/src/tcltklib/TkCallbackRetry")
(find-rurima "= class TkCallbackContinue < StandardError" "refm/api/src/tcltklib/TkCallbackContinue")
(find-rurima "= class TkCallbackBreak < StandardError" "refm/api/src/tcltklib/TkCallbackBreak")
(find-rurima "= module TclTkLib::EventFlag" "refm/api/src/tcltklib/TclTkLib__EventFlag")
(find-rurima "== Constants" "= module TclTkLib::EventFlag" "refm/api/src/tcltklib/TclTkLib__EventFlag")
(find-rurima "--- ALL" "== Constants" "= module TclTkLib::EventFlag" "refm/api/src/tcltklib/TclTkLib__EventFlag")
(find-rurima "--- DONT_WAIT" "== Constants" "= module TclTkLib::EventFlag" "refm/api/src/tcltklib/TclTkLib__EventFlag")
(find-rurima "--- FILE" "== Constants" "= module TclTkLib::EventFlag" "refm/api/src/tcltklib/TclTkLib__EventFlag")
(find-rurima "--- IDLE" "== Constants" "= module TclTkLib::EventFlag" "refm/api/src/tcltklib/TclTkLib__EventFlag")
(find-rurima "--- NONE" "== Constants" "= module TclTkLib::EventFlag" "refm/api/src/tcltklib/TclTkLib__EventFlag")
(find-rurima "--- TIMER" "== Constants" "= module TclTkLib::EventFlag" "refm/api/src/tcltklib/TclTkLib__EventFlag")
(find-rurima "--- WINDOW" "== Constants" "= module TclTkLib::EventFlag" "refm/api/src/tcltklib/TclTkLib__EventFlag")
(find-rurima "=== 使用例" "refm/api/src/importenv.rd")
(find-rurima "=== 注意" "refm/api/src/importenv.rd")
(find-rurima "=== サンプル" "refm/api/src/shell.rd")
(find-rurima "==== Example 1:" "=== サンプル" "refm/api/src/shell.rd")
(find-rurima "==== Example 2:" "=== サンプル" "refm/api/src/shell.rd")
(find-rurima "==== Example 3: Using Pipe" "=== サンプル" "refm/api/src/shell.rd")
(find-rurima "==== Example 4:" "=== サンプル" "refm/api/src/shell.rd")
(find-rurima "= class Shell < Object" "refm/api/src/shell.rd")
(find-rurima "== Class Methods" "= class Shell < Object" "refm/api/src/shell.rd")
(find-rurima "--- def_system_command(command, path = command) -> nil" "== Class Methods" "= class Shell < Object" "refm/api/src/shell.rd")
(find-rurima "--- undef_system_command(command) -> Shell::CommandProcessor" "== Class Methods" "= class Shell < Object" "refm/api/src/shell.rd")
(find-rurima "--- alias_command(alias, command, *opts) {...} -> self" "== Class Methods" "= class Shell < Object" "refm/api/src/shell.rd")
(find-rurima "--- unalias_command(alias) -> ()" "== Class Methods" "= class Shell < Object" "refm/api/src/shell.rd")
(find-rurima "--- install_system_commands(pre = \"sys_\") -> ()" "== Class Methods" "= class Shell < Object" "refm/api/src/shell.rd")
(find-rurima "--- new(pwd = Dir.pwd, umask = nil) -> Shell" "== Class Methods" "= class Shell < Object" "refm/api/src/shell.rd")
(find-rurima "--- new -> Shell" "== Class Methods" "= class Shell < Object" "refm/api/src/shell.rd")
(find-rurima "--- cd(path = nil, verbose = self.verbose) -> self" "== Class Methods" "= class Shell < Object" "refm/api/src/shell.rd")
(find-rurima "--- cd(path = nil) -> self" "== Class Methods" "= class Shell < Object" "refm/api/src/shell.rd")
(find-rurima "--- debug -> bool | Integer" "== Class Methods" "= class Shell < Object" "refm/api/src/shell.rd")
(find-rurima "--- debug? -> bool | Integer" "== Class Methods" "= class Shell < Object" "refm/api/src/shell.rd")
(find-rurima "--- debug=(val) " "== Class Methods" "= class Shell < Object" "refm/api/src/shell.rd")
(find-rurima "--- default_record_separator -> String" "== Class Methods" "= class Shell < Object" "refm/api/src/shell.rd")
(find-rurima "--- default_record_separator=(rs)" "== Class Methods" "= class Shell < Object" "refm/api/src/shell.rd")
(find-rurima "--- default_system_path -> Array" "== Class Methods" "= class Shell < Object" "refm/api/src/shell.rd")
(find-rurima "--- default_system_path=(path)" "== Class Methods" "= class Shell < Object" "refm/api/src/shell.rd")
(find-rurima "--- verbose -> bool  " "== Class Methods" "= class Shell < Object" "refm/api/src/shell.rd")
(find-rurima "--- verbose? -> bool" "== Class Methods" "= class Shell < Object" "refm/api/src/shell.rd")
(find-rurima "--- verbose=(flag)" "== Class Methods" "= class Shell < Object" "refm/api/src/shell.rd")
(find-rurima "--- cascade -> bool" "== Class Methods" "= class Shell < Object" "refm/api/src/shell.rd")
(find-rurima "--- cascade=(flag)" "== Class Methods" "= class Shell < Object" "refm/api/src/shell.rd")
(find-rurima "--- notify(*opts){|message| ... } -> String" "== Class Methods" "= class Shell < Object" "refm/api/src/shell.rd")
(find-rurima "--- debug_output_exclusive_unlock{ ... } -> Mutex | nil" "== Class Methods" "= class Shell < Object" "refm/api/src/shell.rd")
(find-rurima "--- debug_output_lock -> Mutex" "== Class Methods" "= class Shell < Object" "refm/api/src/shell.rd")
(find-rurima "--- debug_output_locked? -> bool" "== Class Methods" "= class Shell < Object" "refm/api/src/shell.rd")
(find-rurima "--- debug_output_synchronize" "== Class Methods" "= class Shell < Object" "refm/api/src/shell.rd")
(find-rurima "--- debug_output_try_lock -> bool" "== Class Methods" "= class Shell < Object" "refm/api/src/shell.rd")
(find-rurima "--- debug_output_unlock -> Mutex | nil" "== Class Methods" "= class Shell < Object" "refm/api/src/shell.rd")
(find-rurima "== Instance Methods" "= class Shell < Object" "refm/api/src/shell.rd")
(find-rurima "--- cwd -> String" "== Instance Methods" "= class Shell < Object" "refm/api/src/shell.rd")
(find-rurima "--- dir -> String" "== Instance Methods" "= class Shell < Object" "refm/api/src/shell.rd")
(find-rurima "--- getwd -> String" "== Instance Methods" "= class Shell < Object" "refm/api/src/shell.rd")
(find-rurima "--- pwd -> String" "== Instance Methods" "= class Shell < Object" "refm/api/src/shell.rd")
(find-rurima "--- system_path -> Array " "== Instance Methods" "= class Shell < Object" "refm/api/src/shell.rd")
(find-rurima "--- system_path=(path)" "== Instance Methods" "= class Shell < Object" "refm/api/src/shell.rd")
(find-rurima "--- umask -> object" "== Instance Methods" "= class Shell < Object" "refm/api/src/shell.rd")
(find-rurima "--- umask=(umask)" "== Instance Methods" "= class Shell < Object" "refm/api/src/shell.rd")
(find-rurima "--- jobs -> Array" "== Instance Methods" "= class Shell < Object" "refm/api/src/shell.rd")
(find-rurima "--- kill(signal, job) -> Integer" "== Instance Methods" "= class Shell < Object" "refm/api/src/shell.rd")
(find-rurima "--- cd(path, &block) -> self" "== Instance Methods" "= class Shell < Object" "refm/api/src/shell.rd")
(find-rurima "--- chdir(path, &block) -> self" "== Instance Methods" "= class Shell < Object" "refm/api/src/shell.rd")
(find-rurima "--- pushd(path = nil, &block) -> object" "== Instance Methods" "= class Shell < Object" "refm/api/src/shell.rd")
(find-rurima "--- pushdir(path = nil, &block) -> object" "== Instance Methods" "= class Shell < Object" "refm/api/src/shell.rd")
(find-rurima "--- popd -> ()" "== Instance Methods" "= class Shell < Object" "refm/api/src/shell.rd")
(find-rurima "--- popdir -> ()" "== Instance Methods" "= class Shell < Object" "refm/api/src/shell.rd")
(find-rurima "--- expand_path(path) -> String" "== Instance Methods" "= class Shell < Object" "refm/api/src/shell.rd")
(find-rurima "--- verbose -> bool  " "== Instance Methods" "= class Shell < Object" "refm/api/src/shell.rd")
(find-rurima "--- verbose? -> bool" "== Instance Methods" "= class Shell < Object" "refm/api/src/shell.rd")
(find-rurima "--- verbose=(flag)" "== Instance Methods" "= class Shell < Object" "refm/api/src/shell.rd")
(find-rurima "--- debug -> bool | Integer" "== Instance Methods" "= class Shell < Object" "refm/api/src/shell.rd")
(find-rurima "--- debug? -> bool | Integer" "== Instance Methods" "= class Shell < Object" "refm/api/src/shell.rd")
(find-rurima "--- debug=(flag)" "== Instance Methods" "= class Shell < Object" "refm/api/src/shell.rd")
(find-rurima "--- dirs -> [String]" "== Instance Methods" "= class Shell < Object" "refm/api/src/shell.rd")
(find-rurima "--- dir_stack -> [String]" "== Instance Methods" "= class Shell < Object" "refm/api/src/shell.rd")
(find-rurima "--- command_processor -> Shell::CommandProcessor" "== Instance Methods" "= class Shell < Object" "refm/api/src/shell.rd")
(find-rurima "--- process_controller -> Shell::ProcessController" "== Instance Methods" "= class Shell < Object" "refm/api/src/shell.rd")
(find-rurima "--- record_separator -> String" "== Instance Methods" "= class Shell < Object" "refm/api/src/shell.rd")
(find-rurima "--- record_separator=(rs)" "== Instance Methods" "= class Shell < Object" "refm/api/src/shell.rd")
(find-rurima "= class TopLevel" "refm/api/src/tkclass.rd")
(find-rurima "= class Frame" "refm/api/src/tkclass.rd")
(find-rurima "= class Label" "refm/api/src/tkclass.rd")
(find-rurima "= class Button" "refm/api/src/tkclass.rd")
(find-rurima "= class Radiobutton" "refm/api/src/tkclass.rd")
(find-rurima "= class Checkbutton" "refm/api/src/tkclass.rd")
(find-rurima "= class Message" "refm/api/src/tkclass.rd")
(find-rurima "= class Entry" "refm/api/src/tkclass.rd")
(find-rurima "= class Spinbox" "refm/api/src/tkclass.rd")
(find-rurima "= class Text" "refm/api/src/tkclass.rd")
(find-rurima "= class Scale" "refm/api/src/tkclass.rd")
(find-rurima "= class Scrollbar" "refm/api/src/tkclass.rd")
(find-rurima "= class Listbox" "refm/api/src/tkclass.rd")
(find-rurima "= class Menu" "refm/api/src/tkclass.rd")
(find-rurima "= class Menubutton" "refm/api/src/tkclass.rd")
(find-rurima "= class Canvas" "refm/api/src/tkclass.rd")
(find-rurima "= class Arc" "refm/api/src/tkclass.rd")
(find-rurima "= class Bitmap" "refm/api/src/tkclass.rd")
(find-rurima "= class Line" "refm/api/src/tkclass.rd")
(find-rurima "= class Oval" "refm/api/src/tkclass.rd")
(find-rurima "= class Polygon" "refm/api/src/tkclass.rd")
(find-rurima "= class Rectangle" "refm/api/src/tkclass.rd")
(find-rurima "= class TextItem" "refm/api/src/tkclass.rd")
(find-rurima "= class WindowItem" "refm/api/src/tkclass.rd")
(find-rurima "= class BitmapImage" "refm/api/src/tkclass.rd")
(find-rurima "= class PhotoImage" "refm/api/src/tkclass.rd")
(find-rurima "= class Selection" "refm/api/src/tkclass.rd")
(find-rurima "= class Winfo" "refm/api/src/tkclass.rd")
(find-rurima "= class Pack" "refm/api/src/tkclass.rd")
(find-rurima "= class Grid" "refm/api/src/tkclass.rd")
(find-rurima "= class Place" "refm/api/src/tkclass.rd")
(find-rurima "= class Variable" "refm/api/src/tkclass.rd")
(find-rurima "= class Font" "refm/api/src/tkclass.rd")
(find-rurima "= class VirtualEvent" "refm/api/src/tkclass.rd")
(find-rurima "= reopen Kernel" "refm/api/src/tkclass.rd")
(find-rurima "== Private Instance Methods" "= reopen Kernel" "refm/api/src/tkclass.rd")
(find-rurima "--- Mainloop" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/tkclass.rd")
(find-rurima "= module Abbrev" "refm/api/src/abbrev.rd")
(find-rurima "=== 例" "= module Abbrev" "refm/api/src/abbrev.rd")
(find-rurima "== Module Functions" "= module Abbrev" "refm/api/src/abbrev.rd")
(find-rurima "--- abbrev(words, pattern = nil) -> Hash" "== Module Functions" "= module Abbrev" "refm/api/src/abbrev.rd")
(find-rurima "= reopen Array" "refm/api/src/abbrev.rd")
(find-rurima "== Instance Methods" "= reopen Array" "refm/api/src/abbrev.rd")
(find-rurima "--- abbrev(pattern = nil) -> Hash" "== Instance Methods" "= reopen Array" "refm/api/src/abbrev.rd")
(find-rurima "= class Monitor < Object" "refm/api/src/monitor/Monitor")
(find-rurima "=== 例" "= class Monitor < Object" "refm/api/src/monitor/Monitor")
(find-rurima "== Class Methods" "= class Monitor < Object" "refm/api/src/monitor/Monitor")
(find-rurima "--- new -> Monitor" "== Class Methods" "= class Monitor < Object" "refm/api/src/monitor/Monitor")
(find-rurima "== Instance Methods" "= class Monitor < Object" "refm/api/src/monitor/Monitor")
(find-rurima "--- enter -> ()" "== Instance Methods" "= class Monitor < Object" "refm/api/src/monitor/Monitor")
(find-rurima "--- exit -> ()" "== Instance Methods" "= class Monitor < Object" "refm/api/src/monitor/Monitor")
(find-rurima "--- try_enter -> bool" "== Instance Methods" "= class Monitor < Object" "refm/api/src/monitor/Monitor")
(find-rurima "= module MonitorMixin" "refm/api/src/monitor/MonitorMixin")
(find-rurima "=== 例" "= module MonitorMixin" "refm/api/src/monitor/MonitorMixin")
(find-rurima "=== 初期化" "= module MonitorMixin" "refm/api/src/monitor/MonitorMixin")
(find-rurima "== Instance Methods" "= module MonitorMixin" "refm/api/src/monitor/MonitorMixin")
(find-rurima "--- mon_enter -> ()" "== Instance Methods" "= module MonitorMixin" "refm/api/src/monitor/MonitorMixin")
(find-rurima "--- mon_exit -> ()" "== Instance Methods" "= module MonitorMixin" "refm/api/src/monitor/MonitorMixin")
(find-rurima "--- mon_synchronize { ... } -> object" "== Instance Methods" "= module MonitorMixin" "refm/api/src/monitor/MonitorMixin")
(find-rurima "--- synchronize     { ... } -> object" "== Instance Methods" "= module MonitorMixin" "refm/api/src/monitor/MonitorMixin")
(find-rurima "--- mon_try_enter -> bool" "== Instance Methods" "= module MonitorMixin" "refm/api/src/monitor/MonitorMixin")
(find-rurima "--- try_mon_enter -> bool" "== Instance Methods" "= module MonitorMixin" "refm/api/src/monitor/MonitorMixin")
(find-rurima "--- new_cond -> MonitorMixin::ConditionVariable" "== Instance Methods" "= module MonitorMixin" "refm/api/src/monitor/MonitorMixin")
(find-rurima "= class MonitorMixin::ConditionVariable < Object" "refm/api/src/monitor/ConditionVariable")
(find-rurima "== Instance Methods" "= class MonitorMixin::ConditionVariable < Object" "refm/api/src/monitor/ConditionVariable")
(find-rurima "--- broadcast -> ()" "== Instance Methods" "= class MonitorMixin::ConditionVariable < Object" "refm/api/src/monitor/ConditionVariable")
(find-rurima "--- count_waiters -> Integer" "== Instance Methods" "= class MonitorMixin::ConditionVariable < Object" "refm/api/src/monitor/ConditionVariable")
(find-rurima "--- signal -> ()" "== Instance Methods" "= class MonitorMixin::ConditionVariable < Object" "refm/api/src/monitor/ConditionVariable")
(find-rurima "--- wait(timeout = nil) -> bool" "== Instance Methods" "= class MonitorMixin::ConditionVariable < Object" "refm/api/src/monitor/ConditionVariable")
(find-rurima "--- wait_while { ... } -> ()" "== Instance Methods" "= class MonitorMixin::ConditionVariable < Object" "refm/api/src/monitor/ConditionVariable")
(find-rurima "--- wait_until { ... } -> ()" "== Instance Methods" "= class MonitorMixin::ConditionVariable < Object" "refm/api/src/monitor/ConditionVariable")
(find-rurima "=== 参考" "refm/api/src/zlib.rd")
(find-rurima "=== 参考" "refm/api/src/tk.rd")
(find-rurima "= class WIN32OLERuntimeError < RuntimeError" "refm/api/src/win32ole.rd")
(find-rurima "= module WIN32OLE::VARIANT" "refm/api/src/win32ole.rd")
(find-rurima "== Constants" "= module WIN32OLE::VARIANT" "refm/api/src/win32ole.rd")
(find-rurima "--- VT_ARRAY -> Integer" "== Constants" "= module WIN32OLE::VARIANT" "refm/api/src/win32ole.rd")
(find-rurima "--- VT_BOOL -> Integer" "== Constants" "= module WIN32OLE::VARIANT" "refm/api/src/win32ole.rd")
(find-rurima "--- VT_BSTR -> Integer" "== Constants" "= module WIN32OLE::VARIANT" "refm/api/src/win32ole.rd")
(find-rurima "--- VT_BYREF -> Integer" "== Constants" "= module WIN32OLE::VARIANT" "refm/api/src/win32ole.rd")
(find-rurima "--- VT_CY -> Integer" "== Constants" "= module WIN32OLE::VARIANT" "refm/api/src/win32ole.rd")
(find-rurima "--- VT_DATE -> Integer" "== Constants" "= module WIN32OLE::VARIANT" "refm/api/src/win32ole.rd")
(find-rurima "--- VT_DISPATCH -> Integer" "== Constants" "= module WIN32OLE::VARIANT" "refm/api/src/win32ole.rd")
(find-rurima "--- VT_ERROR -> Integer" "== Constants" "= module WIN32OLE::VARIANT" "refm/api/src/win32ole.rd")
(find-rurima "--- VT_I1 -> Integer" "== Constants" "= module WIN32OLE::VARIANT" "refm/api/src/win32ole.rd")
(find-rurima "--- VT_I2 -> Integer" "== Constants" "= module WIN32OLE::VARIANT" "refm/api/src/win32ole.rd")
(find-rurima "--- VT_I4 -> Integer" "== Constants" "= module WIN32OLE::VARIANT" "refm/api/src/win32ole.rd")
(find-rurima "--- VT_INT -> Integer" "== Constants" "= module WIN32OLE::VARIANT" "refm/api/src/win32ole.rd")
(find-rurima "--- VT_PTR -> Integer" "== Constants" "= module WIN32OLE::VARIANT" "refm/api/src/win32ole.rd")
(find-rurima "--- VT_R4 -> Integer" "== Constants" "= module WIN32OLE::VARIANT" "refm/api/src/win32ole.rd")
(find-rurima "--- VT_R8 -> Integer" "== Constants" "= module WIN32OLE::VARIANT" "refm/api/src/win32ole.rd")
(find-rurima "--- VT_UI1 -> Integer" "== Constants" "= module WIN32OLE::VARIANT" "refm/api/src/win32ole.rd")
(find-rurima "--- VT_UI2 -> Integer" "== Constants" "= module WIN32OLE::VARIANT" "refm/api/src/win32ole.rd")
(find-rurima "--- VT_UI4 -> Integer" "== Constants" "= module WIN32OLE::VARIANT" "refm/api/src/win32ole.rd")
(find-rurima "--- VT_UINT -> Integer" "== Constants" "= module WIN32OLE::VARIANT" "refm/api/src/win32ole.rd")
(find-rurima "--- VT_UNKNOWN -> Integer" "== Constants" "= module WIN32OLE::VARIANT" "refm/api/src/win32ole.rd")
(find-rurima "--- VT_USERDEFINED -> Integer" "== Constants" "= module WIN32OLE::VARIANT" "refm/api/src/win32ole.rd")
(find-rurima "--- VT_VARIANT -> Integer" "== Constants" "= module WIN32OLE::VARIANT" "refm/api/src/win32ole.rd")
(find-rurima "--- VT_EMPTY -> Integer" "== Constants" "= module WIN32OLE::VARIANT" "refm/api/src/win32ole.rd")
(find-rurima "--- VT_NULL -> Integer" "== Constants" "= module WIN32OLE::VARIANT" "refm/api/src/win32ole.rd")
(find-rurima "=== 注意" "refm/api/src/iconv.rd")
(find-rurima "=== 例" "refm/api/src/iconv.rd")
(find-rurima "===[a:gnu_options] 環境依存の機能" "refm/api/src/iconv.rd")
(find-rurima "=== 参考" "refm/api/src/iconv.rd")
(find-rurima "= class Iconv < Data" "refm/api/src/iconv.rd")
(find-rurima "== Class Methods" "= class Iconv < Data" "refm/api/src/iconv.rd")
(find-rurima "--- new(to, from, options = nil)    -> Iconv" "== Class Methods" "= class Iconv < Data" "refm/api/src/iconv.rd")
(find-rurima "--- new(to, from)    -> Iconv" "== Class Methods" "= class Iconv < Data" "refm/api/src/iconv.rd")
(find-rurima "--- open(to, from, options = nil)               -> Iconv" "== Class Methods" "= class Iconv < Data" "refm/api/src/iconv.rd")
(find-rurima "--- open(to, from, options = nil) {|cd| ...}    -> object" "== Class Methods" "= class Iconv < Data" "refm/api/src/iconv.rd")
(find-rurima "--- open(to, from)               -> Iconv" "== Class Methods" "= class Iconv < Data" "refm/api/src/iconv.rd")
(find-rurima "--- open(to, from) {|cd| ...}    -> object" "== Class Methods" "= class Iconv < Data" "refm/api/src/iconv.rd")
(find-rurima "--- iconv(to, from, *strs)    -> [String]" "== Class Methods" "= class Iconv < Data" "refm/api/src/iconv.rd")
(find-rurima "--- conv(to, from, str)     -> String" "== Class Methods" "= class Iconv < Data" "refm/api/src/iconv.rd")
(find-rurima "--- list                       -> [String]" "== Class Methods" "= class Iconv < Data" "refm/api/src/iconv.rd")
(find-rurima "--- list {|*aliases| ... }     -> nil" "== Class Methods" "= class Iconv < Data" "refm/api/src/iconv.rd")
(find-rurima "--- charset_map -> {String => String}" "== Class Methods" "= class Iconv < Data" "refm/api/src/iconv.rd")
(find-rurima "--- ctlmethods -> [Symbol]" "== Class Methods" "= class Iconv < Data" "refm/api/src/iconv.rd")
(find-rurima "== Instance Methods" "= class Iconv < Data" "refm/api/src/iconv.rd")
(find-rurima "--- close    -> String" "== Instance Methods" "= class Iconv < Data" "refm/api/src/iconv.rd")
(find-rurima "--- iconv(str, start = 0, length = -1)    -> String" "== Instance Methods" "= class Iconv < Data" "refm/api/src/iconv.rd")
(find-rurima "--- conv(str) -> String" "== Instance Methods" "= class Iconv < Data" "refm/api/src/iconv.rd")
(find-rurima "--- discard_ilseq=(bool)" "== Instance Methods" "= class Iconv < Data" "refm/api/src/iconv.rd")
(find-rurima "--- discard_ilseq? -> bool" "== Instance Methods" "= class Iconv < Data" "refm/api/src/iconv.rd")
(find-rurima "--- transliterate=(bool)" "== Instance Methods" "= class Iconv < Data" "refm/api/src/iconv.rd")
(find-rurima "--- transliterate? -> bool" "== Instance Methods" "= class Iconv < Data" "refm/api/src/iconv.rd")
(find-rurima "--- trivial? -> bool" "== Instance Methods" "= class Iconv < Data" "refm/api/src/iconv.rd")
(find-rurima "= module Iconv::Failure" "refm/api/src/iconv.rd")
(find-rurima "== Instance Methods" "= module Iconv::Failure" "refm/api/src/iconv.rd")
(find-rurima "--- success    -> String | Array" "== Instance Methods" "= module Iconv::Failure" "refm/api/src/iconv.rd")
(find-rurima "--- failed    -> String | Array" "== Instance Methods" "= module Iconv::Failure" "refm/api/src/iconv.rd")
(find-rurima "--- inspect    -> String" "== Instance Methods" "= module Iconv::Failure" "refm/api/src/iconv.rd")
(find-rurima "= class Iconv::BrokenLibrary < RuntimeError" "refm/api/src/iconv.rd")
(find-rurima "= class Iconv::IllegalSequence < ArgumentError" "refm/api/src/iconv.rd")
(find-rurima "= class Iconv::InvalidCharacter < ArgumentError" "refm/api/src/iconv.rd")
(find-rurima "= class Iconv::InvalidEncoding < ArgumentError" "refm/api/src/iconv.rd")
(find-rurima "= class Iconv::OutOfRange < RuntimeError" "refm/api/src/iconv.rd")
(find-rurima "=== 使用例" "refm/api/src/open-uri.rd")
(find-rurima "= redefine Kernel" "refm/api/src/open-uri.rd")
(find-rurima "== Module Functions" "= redefine Kernel" "refm/api/src/open-uri.rd")
(find-rurima "--- open(name, mode = 'r', perm = nil, options = {})                -> StringIO | File" "== Module Functions" "= redefine Kernel" "refm/api/src/open-uri.rd")
(find-rurima "--- open(name, mode = 'r', perm = nil, options = {}) {|ouri| ...}   -> nil" "== Module Functions" "= redefine Kernel" "refm/api/src/open-uri.rd")
(find-rurima "= module OpenURI" "refm/api/src/open-uri.rd")
(find-rurima "== Singleton Methods" "= module OpenURI" "refm/api/src/open-uri.rd")
(find-rurima "--- open_uri(name, mode = 'r', perm = nil, options = {})                  -> StringIO" "== Singleton Methods" "= module OpenURI" "refm/api/src/open-uri.rd")
(find-rurima "--- open_uri(name, mode = 'r', perm = nil, options = {}){|sio| ... }     -> nil" "== Singleton Methods" "= module OpenURI" "refm/api/src/open-uri.rd")
(find-rurima "= module OpenURI::OpenRead " "refm/api/src/open-uri.rd")
(find-rurima "== Instance Methods" "= module OpenURI::OpenRead " "refm/api/src/open-uri.rd")
(find-rurima "--- open(mode = 'r', perm = nil, options = {})                 -> StringIO" "== Instance Methods" "= module OpenURI::OpenRead " "refm/api/src/open-uri.rd")
(find-rurima "--- open(mode = 'r', perm = nil, options = {}){|sio| ... }     -> nil" "== Instance Methods" "= module OpenURI::OpenRead " "refm/api/src/open-uri.rd")
(find-rurima "--- read(options = {})     -> String" "== Instance Methods" "= module OpenURI::OpenRead " "refm/api/src/open-uri.rd")
(find-rurima "= reopen URI::HTTP" "refm/api/src/open-uri.rd")
(find-rurima "= reopen URI::FTP" "refm/api/src/open-uri.rd")
(find-rurima "= module OpenURI::Meta" "refm/api/src/open-uri.rd")
(find-rurima "== Instance Methods" "= module OpenURI::Meta" "refm/api/src/open-uri.rd")
(find-rurima "--- last_modified    -> Time | nil" "== Instance Methods" "= module OpenURI::Meta" "refm/api/src/open-uri.rd")
(find-rurima "--- content_type    -> String" "== Instance Methods" "= module OpenURI::Meta" "refm/api/src/open-uri.rd")
(find-rurima "--- charset       -> String | nil" "== Instance Methods" "= module OpenURI::Meta" "refm/api/src/open-uri.rd")
(find-rurima "--- charset{ ... }  -> String" "== Instance Methods" "= module OpenURI::Meta" "refm/api/src/open-uri.rd")
(find-rurima "--- content_encoding    -> [String]" "== Instance Methods" "= module OpenURI::Meta" "refm/api/src/open-uri.rd")
(find-rurima "--- status    -> [String]" "== Instance Methods" "= module OpenURI::Meta" "refm/api/src/open-uri.rd")
(find-rurima "--- base_uri    -> URI" "== Instance Methods" "= module OpenURI::Meta" "refm/api/src/open-uri.rd")
(find-rurima "--- meta    -> Hash" "== Instance Methods" "= module OpenURI::Meta" "refm/api/src/open-uri.rd")
(find-rurima "= class OpenURI::HTTPError < StandardError" "refm/api/src/open-uri.rd")
(find-rurima "= class Win32API < Object" "refm/api/src/Win32API.rd")
(find-rurima "=== 使用例 1: MessageBox" "= class Win32API < Object" "refm/api/src/Win32API.rd")
(find-rurima "=== 使用例 2: Cygwin の uname コマンドの代わり" "= class Win32API < Object" "refm/api/src/Win32API.rd")
(find-rurima "=== 使用例 3: Cygwin の cygpath コマンドの代わり" "= class Win32API < Object" "refm/api/src/Win32API.rd")
(find-rurima "== Class Methods" "= class Win32API < Object" "refm/api/src/Win32API.rd")
(find-rurima "--- new(dllname, func, import, export)" "== Class Methods" "= class Win32API < Object" "refm/api/src/Win32API.rd")
(find-rurima "== Instance Methods" "= class Win32API < Object" "refm/api/src/Win32API.rd")
(find-rurima "--- call(*args)" "== Instance Methods" "= class Win32API < Object" "refm/api/src/Win32API.rd")
(find-rurima "--- Call(*args)" "== Instance Methods" "= class Win32API < Object" "refm/api/src/Win32API.rd")
(find-rurima "= class OpenSSL::PKey::EC < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__EC")
(find-rurima "== Class methods" "= class OpenSSL::PKey::EC < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__EC")
(find-rurima "--- builtin_curves -> [[String, String]]" "== Class methods" "= class OpenSSL::PKey::EC < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__EC")
(find-rurima "--- new -> OpenSSL::PKey::EC" "== Class methods" "= class OpenSSL::PKey::EC < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__EC")
(find-rurima "--- new(obj) -> OpenSSL::PKey::EC" "== Class methods" "= class OpenSSL::PKey::EC < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__EC")
(find-rurima "== Instance methods" "= class OpenSSL::PKey::EC < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__EC")
(find-rurima "--- group -> OpenSSL::PKey::EC::Group" "== Instance methods" "= class OpenSSL::PKey::EC < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__EC")
(find-rurima "--- group=(gr)" "== Instance methods" "= class OpenSSL::PKey::EC < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__EC")
(find-rurima "--- private_key -> OpenSSL::BN|nil" "== Instance methods" "= class OpenSSL::PKey::EC < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__EC")
(find-rurima "--- private_key=(privkey)" "== Instance methods" "= class OpenSSL::PKey::EC < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__EC")
(find-rurima "--- public_key -> OpenSSL::PKey::EC::Point|nil" "== Instance methods" "= class OpenSSL::PKey::EC < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__EC")
(find-rurima "--- public_key=(pubkey)" "== Instance methods" "= class OpenSSL::PKey::EC < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__EC")
(find-rurima "--- private_key? -> bool" "== Instance methods" "= class OpenSSL::PKey::EC < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__EC")
(find-rurima "--- public_key? -> bool" "== Instance methods" "= class OpenSSL::PKey::EC < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__EC")
(find-rurima "--- generate_key -> self" "== Instance methods" "= class OpenSSL::PKey::EC < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__EC")
(find-rurima "--- check_key -> true" "== Instance methods" "= class OpenSSL::PKey::EC < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__EC")
(find-rurima "--- dh_compute_key(pubkey) -> String" "== Instance methods" "= class OpenSSL::PKey::EC < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__EC")
(find-rurima "--- dsa_sign_asn1(data) -> String" "== Instance methods" "= class OpenSSL::PKey::EC < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__EC")
(find-rurima "--- dsa_verify_asn1(data, sig) -> bool" "== Instance methods" "= class OpenSSL::PKey::EC < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__EC")
(find-rurima "--- to_pem -> String" "== Instance methods" "= class OpenSSL::PKey::EC < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__EC")
(find-rurima "--- to_der -> String" "== Instance methods" "= class OpenSSL::PKey::EC < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__EC")
(find-rurima "--- to_text -> String" "== Instance methods" "= class OpenSSL::PKey::EC < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__EC")
(find-rurima "== Constants" "= class OpenSSL::PKey::EC < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__EC")
(find-rurima "--- NAMED_CURVE -> Integer" "== Constants" "= class OpenSSL::PKey::EC < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__EC")
(find-rurima "= class OpenSSL::PKey::ECError < OpenSSL::PKey::PKeyError" "refm/api/src/openssl/PKey__EC")
(find-rurima "= class OpenSSL::PKey::EC::Group" "refm/api/src/openssl/PKey__EC")
(find-rurima "== Class methods" "= class OpenSSL::PKey::EC::Group" "refm/api/src/openssl/PKey__EC")
(find-rurima "--- new(obj) -> OpenSSL::PKey::EC::Group" "== Class methods" "= class OpenSSL::PKey::EC::Group" "refm/api/src/openssl/PKey__EC")
(find-rurima "--- new(sym, p, a, b) -> OpenSSL::PKey::EC::Group" "== Class methods" "= class OpenSSL::PKey::EC::Group" "refm/api/src/openssl/PKey__EC")
(find-rurima "== Instance methods" "= class OpenSSL::PKey::EC::Group" "refm/api/src/openssl/PKey__EC")
(find-rurima "--- generator -> OpenSSL::PKey::EC::Point" "== Instance methods" "= class OpenSSL::PKey::EC::Group" "refm/api/src/openssl/PKey__EC")
(find-rurima "--- set_generator(generator, order, cofactor) -> self" "== Instance methods" "= class OpenSSL::PKey::EC::Group" "refm/api/src/openssl/PKey__EC")
(find-rurima "--- order -> OpenSSL::BN" "== Instance methods" "= class OpenSSL::PKey::EC::Group" "refm/api/src/openssl/PKey__EC")
(find-rurima "--- cofactor -> OpenSSL::BN" "== Instance methods" "= class OpenSSL::PKey::EC::Group" "refm/api/src/openssl/PKey__EC")
(find-rurima "--- curve_name -> String | nil" "== Instance methods" "= class OpenSSL::PKey::EC::Group" "refm/api/src/openssl/PKey__EC")
(find-rurima "--- asn1_flag -> Integer" "== Instance methods" "= class OpenSSL::PKey::EC::Group" "refm/api/src/openssl/PKey__EC")
(find-rurima "--- asn1_flag=(flags)" "== Instance methods" "= class OpenSSL::PKey::EC::Group" "refm/api/src/openssl/PKey__EC")
(find-rurima "--- point_conversion_form -> Symbol" "== Instance methods" "= class OpenSSL::PKey::EC::Group" "refm/api/src/openssl/PKey__EC")
(find-rurima "--- point_conversion_form=(sym)" "== Instance methods" "= class OpenSSL::PKey::EC::Group" "refm/api/src/openssl/PKey__EC")
(find-rurima "--- seed -> String | nil" "== Instance methods" "= class OpenSSL::PKey::EC::Group" "refm/api/src/openssl/PKey__EC")
(find-rurima "--- seed=(s)" "== Instance methods" "= class OpenSSL::PKey::EC::Group" "refm/api/src/openssl/PKey__EC")
(find-rurima "--- degree -> Integer" "== Instance methods" "= class OpenSSL::PKey::EC::Group" "refm/api/src/openssl/PKey__EC")
(find-rurima "--- to_pem -> String" "== Instance methods" "= class OpenSSL::PKey::EC::Group" "refm/api/src/openssl/PKey__EC")
(find-rurima "--- to_der -> String" "== Instance methods" "= class OpenSSL::PKey::EC::Group" "refm/api/src/openssl/PKey__EC")
(find-rurima "--- to_text -> String" "== Instance methods" "= class OpenSSL::PKey::EC::Group" "refm/api/src/openssl/PKey__EC")
(find-rurima "--- ==(other) -> bool" "== Instance methods" "= class OpenSSL::PKey::EC::Group" "refm/api/src/openssl/PKey__EC")
(find-rurima "--- eql?(other) -> bool" "== Instance methods" "= class OpenSSL::PKey::EC::Group" "refm/api/src/openssl/PKey__EC")
(find-rurima "= class OpenSSL::PKey::EC::Point" "refm/api/src/openssl/PKey__EC")
(find-rurima "== Class methods" "= class OpenSSL::PKey::EC::Point" "refm/api/src/openssl/PKey__EC")
(find-rurima "--- new(point) -> OpenSSL::PKey::EC::Point" "== Class methods" "= class OpenSSL::PKey::EC::Point" "refm/api/src/openssl/PKey__EC")
(find-rurima "--- new(group) -> OpenSSL::PKey::EC::Point" "== Class methods" "= class OpenSSL::PKey::EC::Point" "refm/api/src/openssl/PKey__EC")
(find-rurima "--- new(group, bn) -> OpenSSL::PKey::EC::Point" "== Class methods" "= class OpenSSL::PKey::EC::Point" "refm/api/src/openssl/PKey__EC")
(find-rurima "== Instance methods" "= class OpenSSL::PKey::EC::Point" "refm/api/src/openssl/PKey__EC")
(find-rurima "--- group -> OpenSSL::PKey::EC::Group" "== Instance methods" "= class OpenSSL::PKey::EC::Point" "refm/api/src/openssl/PKey__EC")
(find-rurima "--- eql?(other) -> bool" "== Instance methods" "= class OpenSSL::PKey::EC::Point" "refm/api/src/openssl/PKey__EC")
(find-rurima "--- ==(other) -> bool" "== Instance methods" "= class OpenSSL::PKey::EC::Point" "refm/api/src/openssl/PKey__EC")
(find-rurima "--- infinity? -> bool" "== Instance methods" "= class OpenSSL::PKey::EC::Point" "refm/api/src/openssl/PKey__EC")
(find-rurima "--- on_curve? -> bool" "== Instance methods" "= class OpenSSL::PKey::EC::Point" "refm/api/src/openssl/PKey__EC")
(find-rurima "--- make_affine! -> self" "== Instance methods" "= class OpenSSL::PKey::EC::Point" "refm/api/src/openssl/PKey__EC")
(find-rurima "--- invert! -> self" "== Instance methods" "= class OpenSSL::PKey::EC::Point" "refm/api/src/openssl/PKey__EC")
(find-rurima "--- set_to_infinity! -> self" "== Instance methods" "= class OpenSSL::PKey::EC::Point" "refm/api/src/openssl/PKey__EC")
(find-rurima "--- to_bn -> OpenSSL::BN" "== Instance methods" "= class OpenSSL::PKey::EC::Point" "refm/api/src/openssl/PKey__EC")
(find-rurima "= class OpenSSL::PKey::EC::Group::Error < OpenSSL::OpenSSLError" "refm/api/src/openssl/PKey__EC")
(find-rurima "= class OpenSSL::PKey::EC::Point::Error < OpenSSL::OpenSSLError" "refm/api/src/openssl/PKey__EC")
(find-rurima "= class OpenSSL::BN < Object" "refm/api/src/openssl/BN")
(find-rurima "== Class Methods" "= class OpenSSL::BN < Object" "refm/api/src/openssl/BN")
(find-rurima "--- new(str, base=10) -> OpenSSL::BN" "== Class Methods" "= class OpenSSL::BN < Object" "refm/api/src/openssl/BN")
(find-rurima "--- generate_prime(bits, safe=true, add=nil, rem=nil) -> OpenSSL::BN" "== Class Methods" "= class OpenSSL::BN < Object" "refm/api/src/openssl/BN")
(find-rurima "--- pseudo_rand(bits, fill=0, odd=false) -> OpenSSL::BN" "== Class Methods" "= class OpenSSL::BN < Object" "refm/api/src/openssl/BN")
(find-rurima "--- pseudo_rand_range(range) -> OpenSSL::BN" "== Class Methods" "= class OpenSSL::BN < Object" "refm/api/src/openssl/BN")
(find-rurima "--- rand(bits, fill=0, odd=false) -> OpenSSL::BN" "== Class Methods" "= class OpenSSL::BN < Object" "refm/api/src/openssl/BN")
(find-rurima "--- rand_range(range) -> OpenSSL::BN" "== Class Methods" "= class OpenSSL::BN < Object" "refm/api/src/openssl/BN")
(find-rurima "== Instance Methods" "= class OpenSSL::BN < Object" "refm/api/src/openssl/BN")
(find-rurima "--- %(other) -> OpenSSL::BN" "== Instance Methods" "= class OpenSSL::BN < Object" "refm/api/src/openssl/BN")
(find-rurima "--- *(other) -> OpenSSL::BN" "== Instance Methods" "= class OpenSSL::BN < Object" "refm/api/src/openssl/BN")
(find-rurima "--- **(other) -> OpenSSL::BN" "== Instance Methods" "= class OpenSSL::BN < Object" "refm/api/src/openssl/BN")
(find-rurima "--- +(other) -> OpenSSL::BN" "== Instance Methods" "= class OpenSSL::BN < Object" "refm/api/src/openssl/BN")
(find-rurima "--- -(other) -> OpenSSL::BN" "== Instance Methods" "= class OpenSSL::BN < Object" "refm/api/src/openssl/BN")
(find-rurima "--- /(other) -> [OpenSSL::BN, OpenSSL::BN]" "== Instance Methods" "= class OpenSSL::BN < Object" "refm/api/src/openssl/BN")
(find-rurima "--- <<(other) -> OpenSSL::BN" "== Instance Methods" "= class OpenSSL::BN < Object" "refm/api/src/openssl/BN")
(find-rurima "--- <=>(other) -> -1 | 0 | 1" "== Instance Methods" "= class OpenSSL::BN < Object" "refm/api/src/openssl/BN")
(find-rurima "--- cmp(other) -> -1 | 0 | 1" "== Instance Methods" "= class OpenSSL::BN < Object" "refm/api/src/openssl/BN")
(find-rurima "--- ==(other) -> bool" "== Instance Methods" "= class OpenSSL::BN < Object" "refm/api/src/openssl/BN")
(find-rurima "--- ===(other) -> bool" "== Instance Methods" "= class OpenSSL::BN < Object" "refm/api/src/openssl/BN")
(find-rurima "--- eql?(other) -> bool" "== Instance Methods" "= class OpenSSL::BN < Object" "refm/api/src/openssl/BN")
(find-rurima "--- >>(other) -> OpenSSL::BN" "== Instance Methods" "= class OpenSSL::BN < Object" "refm/api/src/openssl/BN")
(find-rurima "--- lshift!(n) -> self" "== Instance Methods" "= class OpenSSL::BN < Object" "refm/api/src/openssl/BN")
(find-rurima "--- rshift!(n) -> self" "== Instance Methods" "= class OpenSSL::BN < Object" "refm/api/src/openssl/BN")
(find-rurima "--- bit_set?(n) -> bool" "== Instance Methods" "= class OpenSSL::BN < Object" "refm/api/src/openssl/BN")
(find-rurima "--- clear_bit!(n) -> self" "== Instance Methods" "= class OpenSSL::BN < Object" "refm/api/src/openssl/BN")
(find-rurima "--- coerce(other) -> Array" "== Instance Methods" "= class OpenSSL::BN < Object" "refm/api/src/openssl/BN")
(find-rurima "--- copy(other) -> self" "== Instance Methods" "= class OpenSSL::BN < Object" "refm/api/src/openssl/BN")
(find-rurima "--- gcd(other) -> OpenSSL::BN" "== Instance Methods" "= class OpenSSL::BN < Object" "refm/api/src/openssl/BN")
(find-rurima "--- mask_bits!(n) -> self" "== Instance Methods" "= class OpenSSL::BN < Object" "refm/api/src/openssl/BN")
(find-rurima "--- mod_add(other, m) -> OpenSSL::BN" "== Instance Methods" "= class OpenSSL::BN < Object" "refm/api/src/openssl/BN")
(find-rurima "--- mod_exp(other, m) -> OpenSSL::BN" "== Instance Methods" "= class OpenSSL::BN < Object" "refm/api/src/openssl/BN")
(find-rurima "--- mod_inverse(m) -> OpenSSL::BN" "== Instance Methods" "= class OpenSSL::BN < Object" "refm/api/src/openssl/BN")
(find-rurima "--- mod_mul(other, m) -> OpenSSL::BN" "== Instance Methods" "= class OpenSSL::BN < Object" "refm/api/src/openssl/BN")
(find-rurima "--- mod_sqr(m) -> OpenSSL::BN" "== Instance Methods" "= class OpenSSL::BN < Object" "refm/api/src/openssl/BN")
(find-rurima "--- mod_sub(other, m) -> OpenSSL::BN" "== Instance Methods" "= class OpenSSL::BN < Object" "refm/api/src/openssl/BN")
(find-rurima "--- num_bits -> Integer" "== Instance Methods" "= class OpenSSL::BN < Object" "refm/api/src/openssl/BN")
(find-rurima "--- num_bytes -> Integer" "== Instance Methods" "= class OpenSSL::BN < Object" "refm/api/src/openssl/BN")
(find-rurima "--- odd? -> bool" "== Instance Methods" "= class OpenSSL::BN < Object" "refm/api/src/openssl/BN")
(find-rurima "--- one? -> bool" "== Instance Methods" "= class OpenSSL::BN < Object" "refm/api/src/openssl/BN")
(find-rurima "--- prime? -> bool" "== Instance Methods" "= class OpenSSL::BN < Object" "refm/api/src/openssl/BN")
(find-rurima "--- prime?(checks) -> bool" "== Instance Methods" "= class OpenSSL::BN < Object" "refm/api/src/openssl/BN")
(find-rurima "--- prime_fasttest?(checks=nil, vtrivdiv=true) -> bool" "== Instance Methods" "= class OpenSSL::BN < Object" "refm/api/src/openssl/BN")
(find-rurima "--- set_bit!(n) -> self" "== Instance Methods" "= class OpenSSL::BN < Object" "refm/api/src/openssl/BN")
(find-rurima "--- sqr -> OpenSSL::BN" "== Instance Methods" "= class OpenSSL::BN < Object" "refm/api/src/openssl/BN")
(find-rurima "--- to_bn -> self" "== Instance Methods" "= class OpenSSL::BN < Object" "refm/api/src/openssl/BN")
(find-rurima "--- to_i -> Integer" "== Instance Methods" "= class OpenSSL::BN < Object" "refm/api/src/openssl/BN")
(find-rurima "--- to_int -> Integer" "== Instance Methods" "= class OpenSSL::BN < Object" "refm/api/src/openssl/BN")
(find-rurima "--- to_s(base=10) -> String" "== Instance Methods" "= class OpenSSL::BN < Object" "refm/api/src/openssl/BN")
(find-rurima "--- ucmp(other) -> -1 | 0 | 1" "== Instance Methods" "= class OpenSSL::BN < Object" "refm/api/src/openssl/BN")
(find-rurima "--- zero? -> bool" "== Instance Methods" "= class OpenSSL::BN < Object" "refm/api/src/openssl/BN")
(find-rurima "= class OpenSSL::BNError < OpenSSL::OpenSSLError" "refm/api/src/openssl/BN")
(find-rurima "= reopen Integer" "refm/api/src/openssl/BN")
(find-rurima "== Instance Methods" "= reopen Integer" "refm/api/src/openssl/BN")
(find-rurima "--- to_bn -> OpenSSL::BN" "== Instance Methods" "= reopen Integer" "refm/api/src/openssl/BN")
(find-rurima "= module OpenSSL::X509" "refm/api/src/openssl/X509")
(find-rurima "===[a:verify_error] 検証時エラー定数" "= module OpenSSL::X509" "refm/api/src/openssl/X509")
(find-rurima "== Constants" "= module OpenSSL::X509" "refm/api/src/openssl/X509")
(find-rurima "--- PURPOSE_ANY -> Integer" "== Constants" "= module OpenSSL::X509" "refm/api/src/openssl/X509")
(find-rurima "--- PURPOSE_CRL_SIGN -> Integer" "== Constants" "= module OpenSSL::X509" "refm/api/src/openssl/X509")
(find-rurima "--- PURPOSE_NS_SSL_SERVER -> Integer" "== Constants" "= module OpenSSL::X509" "refm/api/src/openssl/X509")
(find-rurima "--- PURPOSE_SMIME_ENCRYPT -> Integer" "== Constants" "= module OpenSSL::X509" "refm/api/src/openssl/X509")
(find-rurima "--- PURPOSE_SMIME_SIGN -> Integer" "== Constants" "= module OpenSSL::X509" "refm/api/src/openssl/X509")
(find-rurima "--- PURPOSE_SSL_CLIENT -> Integer" "== Constants" "= module OpenSSL::X509" "refm/api/src/openssl/X509")
(find-rurima "--- PURPOSE_SSL_SERVER -> Integer" "== Constants" "= module OpenSSL::X509" "refm/api/src/openssl/X509")
(find-rurima "--- PURPOSE_OCSP_HELPER -> Integer" "== Constants" "= module OpenSSL::X509" "refm/api/src/openssl/X509")
(find-rurima "--- TRUST_COMPAT -> Integer" "== Constants" "= module OpenSSL::X509" "refm/api/src/openssl/X509")
(find-rurima "--- TRUST_EMAIL -> Integer" "== Constants" "= module OpenSSL::X509" "refm/api/src/openssl/X509")
(find-rurima "--- TRUST_OBJECT_SIGN -> Integer" "== Constants" "= module OpenSSL::X509" "refm/api/src/openssl/X509")
(find-rurima "--- TRUST_SSL_CLIENT -> Integer" "== Constants" "= module OpenSSL::X509" "refm/api/src/openssl/X509")
(find-rurima "--- TRUST_SSL_SERVER -> Integer" "== Constants" "= module OpenSSL::X509" "refm/api/src/openssl/X509")
(find-rurima "--- TRUST_OCSP_REQUEST -> Integer" "== Constants" "= module OpenSSL::X509" "refm/api/src/openssl/X509")
(find-rurima "--- TRUST_OCSP_SIGN -> Integer" "== Constants" "= module OpenSSL::X509" "refm/api/src/openssl/X509")
(find-rurima "--- V_OK -> Integer" "== Constants" "= module OpenSSL::X509" "refm/api/src/openssl/X509")
(find-rurima "--- V_ERR_AKID_SKID_MISMATCH -> Integer" "== Constants" "= module OpenSSL::X509" "refm/api/src/openssl/X509")
(find-rurima "--- V_ERR_APPLICATION_VERIFICATION -> Integer" "== Constants" "= module OpenSSL::X509" "refm/api/src/openssl/X509")
(find-rurima "--- V_ERR_CERT_CHAIN_TOO_LONG -> Integer" "== Constants" "= module OpenSSL::X509" "refm/api/src/openssl/X509")
(find-rurima "--- V_ERR_CERT_HAS_EXPIRED -> Integer" "== Constants" "= module OpenSSL::X509" "refm/api/src/openssl/X509")
(find-rurima "--- V_ERR_CERT_NOT_YET_VALID -> Integer" "== Constants" "= module OpenSSL::X509" "refm/api/src/openssl/X509")
(find-rurima "--- V_ERR_CERT_REJECTED -> Integer" "== Constants" "= module OpenSSL::X509" "refm/api/src/openssl/X509")
(find-rurima "--- V_ERR_CERT_REVOKED -> Integer" "== Constants" "= module OpenSSL::X509" "refm/api/src/openssl/X509")
(find-rurima "--- V_ERR_CERT_SIGNATURE_FAILURE -> Integer" "== Constants" "= module OpenSSL::X509" "refm/api/src/openssl/X509")
(find-rurima "--- V_ERR_CERT_UNTRUSTED -> Integer" "== Constants" "= module OpenSSL::X509" "refm/api/src/openssl/X509")
(find-rurima "--- V_ERR_CRL_HAS_EXPIRED -> Integer" "== Constants" "= module OpenSSL::X509" "refm/api/src/openssl/X509")
(find-rurima "--- V_ERR_CRL_NOT_YET_VALID -> Integer" "== Constants" "= module OpenSSL::X509" "refm/api/src/openssl/X509")
(find-rurima "--- V_ERR_CRL_SIGNATURE_FAILURE -> Integer" "== Constants" "= module OpenSSL::X509" "refm/api/src/openssl/X509")
(find-rurima "--- V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT -> Integer" "== Constants" "= module OpenSSL::X509" "refm/api/src/openssl/X509")
(find-rurima "--- V_ERR_ERROR_IN_CERT_NOT_AFTER_FIELD -> Integer" "== Constants" "= module OpenSSL::X509" "refm/api/src/openssl/X509")
(find-rurima "--- V_ERR_ERROR_IN_CERT_NOT_BEFORE_FIELD -> Integer" "== Constants" "= module OpenSSL::X509" "refm/api/src/openssl/X509")
(find-rurima "--- V_ERR_ERROR_IN_CRL_LAST_UPDATE_FIELD -> Integer" "== Constants" "= module OpenSSL::X509" "refm/api/src/openssl/X509")
(find-rurima "--- V_ERR_ERROR_IN_CRL_NEXT_UPDATE_FIELD -> Integer" "== Constants" "= module OpenSSL::X509" "refm/api/src/openssl/X509")
(find-rurima "--- V_ERR_INVALID_CA -> Integer" "== Constants" "= module OpenSSL::X509" "refm/api/src/openssl/X509")
(find-rurima "--- V_ERR_INVALID_PURPOSE -> Integer" "== Constants" "= module OpenSSL::X509" "refm/api/src/openssl/X509")
(find-rurima "--- V_ERR_KEYUSAGE_NO_CERTSIGN -> Integer" "== Constants" "= module OpenSSL::X509" "refm/api/src/openssl/X509")
(find-rurima "--- V_ERR_OUT_OF_MEM -> Integer" "== Constants" "= module OpenSSL::X509" "refm/api/src/openssl/X509")
(find-rurima "--- V_ERR_PATH_LENGTH_EXCEEDED -> Integer" "== Constants" "= module OpenSSL::X509" "refm/api/src/openssl/X509")
(find-rurima "--- V_ERR_SELF_SIGNED_CERT_IN_CHAIN -> Integer" "== Constants" "= module OpenSSL::X509" "refm/api/src/openssl/X509")
(find-rurima "--- V_ERR_SUBJECT_ISSUER_MISMATCH -> Integer" "== Constants" "= module OpenSSL::X509" "refm/api/src/openssl/X509")
(find-rurima "--- V_ERR_UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY -> Integer" "== Constants" "= module OpenSSL::X509" "refm/api/src/openssl/X509")
(find-rurima "--- V_ERR_UNABLE_TO_DECRYPT_CERT_SIGNATURE -> Integer" "== Constants" "= module OpenSSL::X509" "refm/api/src/openssl/X509")
(find-rurima "--- V_ERR_UNABLE_TO_DECRYPT_CRL_SIGNATURE -> Integer" "== Constants" "= module OpenSSL::X509" "refm/api/src/openssl/X509")
(find-rurima "--- V_ERR_UNABLE_TO_GET_CRL -> Integer" "== Constants" "= module OpenSSL::X509" "refm/api/src/openssl/X509")
(find-rurima "--- V_ERR_UNABLE_TO_GET_ISSUER_CERT -> Integer" "== Constants" "= module OpenSSL::X509" "refm/api/src/openssl/X509")
(find-rurima "--- V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY -> Integer" "== Constants" "= module OpenSSL::X509" "refm/api/src/openssl/X509")
(find-rurima "--- V_ERR_UNABLE_TO_VERIFY_LEAF_SIGNATURE -> Integer" "== Constants" "= module OpenSSL::X509" "refm/api/src/openssl/X509")
(find-rurima "--- V_ERR_AKID_ISSUER_SERIAL_MISMATCH -> Integer" "== Constants" "= module OpenSSL::X509" "refm/api/src/openssl/X509")
(find-rurima "--- V_FLAG_CRL_CHECK -> Integer" "== Constants" "= module OpenSSL::X509" "refm/api/src/openssl/X509")
(find-rurima "--- V_FLAG_CRL_CHECK_ALL -> Integer" "== Constants" "= module OpenSSL::X509" "refm/api/src/openssl/X509")
(find-rurima "--- DEFAULT_CERT_AREA -> String" "== Constants" "= module OpenSSL::X509" "refm/api/src/openssl/X509")
(find-rurima "--- DEFAULT_CERT_DIR -> String" "== Constants" "= module OpenSSL::X509" "refm/api/src/openssl/X509")
(find-rurima "--- DEFAULT_CERT_DIR_ENV -> String" "== Constants" "= module OpenSSL::X509" "refm/api/src/openssl/X509")
(find-rurima "--- DEFAULT_CERT_FILE -> String" "== Constants" "= module OpenSSL::X509" "refm/api/src/openssl/X509")
(find-rurima "--- DEFAULT_CERT_FILE_ENV -> String" "== Constants" "= module OpenSSL::X509" "refm/api/src/openssl/X509")
(find-rurima "--- DEFAULT_PRIVATE_DIR -> String" "== Constants" "= module OpenSSL::X509" "refm/api/src/openssl/X509")
(find-rurima "= class OpenSSL::HMAC < Object" "refm/api/src/openssl/HMAC")
(find-rurima "== Class Methods" "= class OpenSSL::HMAC < Object" "refm/api/src/openssl/HMAC")
(find-rurima "--- digest(digest, key, data) -> String" "== Class Methods" "= class OpenSSL::HMAC < Object" "refm/api/src/openssl/HMAC")
(find-rurima "--- hexdigest(digest, key, data) -> String" "== Class Methods" "= class OpenSSL::HMAC < Object" "refm/api/src/openssl/HMAC")
(find-rurima "--- new(key, digest) -> OpenSSL::HMAC" "== Class Methods" "= class OpenSSL::HMAC < Object" "refm/api/src/openssl/HMAC")
(find-rurima "== Instance Methods" "= class OpenSSL::HMAC < Object" "refm/api/src/openssl/HMAC")
(find-rurima "--- <<(data) -> self" "== Instance Methods" "= class OpenSSL::HMAC < Object" "refm/api/src/openssl/HMAC")
(find-rurima "--- update(data) -> self" "== Instance Methods" "= class OpenSSL::HMAC < Object" "refm/api/src/openssl/HMAC")
(find-rurima "--- digest -> String" "== Instance Methods" "= class OpenSSL::HMAC < Object" "refm/api/src/openssl/HMAC")
(find-rurima "--- hexdigest -> String" "== Instance Methods" "= class OpenSSL::HMAC < Object" "refm/api/src/openssl/HMAC")
(find-rurima "--- to_s -> String" "== Instance Methods" "= class OpenSSL::HMAC < Object" "refm/api/src/openssl/HMAC")
(find-rurima "--- inspect -> String" "== Instance Methods" "= class OpenSSL::HMAC < Object" "refm/api/src/openssl/HMAC")
(find-rurima "--- reset -> self" "== Instance Methods" "= class OpenSSL::HMAC < Object" "refm/api/src/openssl/HMAC")
(find-rurima "= class OpenSSL::HMACError < OpenSSL::OpenSSLError" "refm/api/src/openssl/HMAC")
(find-rurima "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "=== Constants" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "== Class Methods" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "--- new(ssl_method) -> OpenSSL::SSL::SSLContext" "== Class Methods" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "--- new -> OpenSSL::SSL::SSLContext" "== Class Methods" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "== Instance Methods" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "--- ciphers -> [[String, String, Integer, Integer]]" "== Instance Methods" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "--- ciphers=(ciphers)" "== Instance Methods" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "--- ca_file -> String | nil" "== Instance Methods" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "--- ca_file=(ca)" "== Instance Methods" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "--- ca_path -> String | nil" "== Instance Methods" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "--- ca_path=(ca)" "== Instance Methods" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "--- cert -> OpenSSL::X509::Certificate" "== Instance Methods" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "--- cert=(certificate)" "== Instance Methods" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "--- cert_store -> OpenSSL::X509::Store | nil" "== Instance Methods" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "--- cert_store=(store) " "== Instance Methods" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "--- client_ca -> [OpenSSL::X509::Certificate] | OpenSSL::X509::Certificate | nil" "== Instance Methods" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "--- client_ca=(ca)" "== Instance Methods" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "--- client_cert_cb -> Proc | nil" "== Instance Methods" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "--- client_cert_cb=(cb)" "== Instance Methods" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "--- extra_chain_cert -> [OpenSSL::X509::Certificate] | nil" "== Instance Methods" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "--- extra_chain_cert=(certificates)" "== Instance Methods" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "--- key -> OpenSSL::PKey::PKey | nil" "== Instance Methods" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "--- key=(key)" "== Instance Methods" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "--- options -> Integer | nil" "== Instance Methods" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "--- options=(options)" "== Instance Methods" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "--- timeout -> Integer | nil" "== Instance Methods" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "--- ssl_timeout -> Integer | nil" "== Instance Methods" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "--- timeout=(seconds)" "== Instance Methods" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "--- ssl_timeout=(seconds)" "== Instance Methods" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "--- verify_callback -> Proc | nil" "== Instance Methods" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "--- verify_callback=(proc)" "== Instance Methods" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "--- verify_depth -> Integer | nil" "== Instance Methods" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "--- verify_depth=(depth)" "== Instance Methods" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "--- verify_mode -> Integer | nil" "== Instance Methods" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "--- verify_mode=(mode)" "== Instance Methods" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "--- tmp_dh_callback -> Proc | nil" "== Instance Methods" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "--- tmp_dh_callback=(cb)" "== Instance Methods" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "--- session_id_context -> String | nil" "== Instance Methods" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "--- session_id_context=(id_context)" "== Instance Methods" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "--- set_params(params) -> Hash" "== Instance Methods" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "--- ssl_version=(ver)" "== Instance Methods" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "--- servername_cb -> Proc | nil" "== Instance Methods" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "--- servername_cb=(pr)" "== Instance Methods" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "--- session_add(sess) -> bool" "== Instance Methods" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "--- session_cache_mode -> Integer" "== Instance Methods" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "--- session_cache_mode=(mode)" "== Instance Methods" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "--- session_cache_size -> Integer" "== Instance Methods" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "--- session_cache_size=(size)" "== Instance Methods" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "--- session_cache_stats -> {Symbol -> Integer}" "== Instance Methods" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "--- session_get_cb -> Proc | nil" "== Instance Methods" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "--- session_get_cb=(cb)" "== Instance Methods" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "--- session_new_cb -> Proc | nil" "== Instance Methods" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "--- session_new_cb=(cb)" "== Instance Methods" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "--- session_remove(sess) -> bool" "== Instance Methods" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "--- session_remove_cb -> Proc | nil" "== Instance Methods" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "--- session_remove_cb=(cb)" "== Instance Methods" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "--- flush_sessions(time=nil) -> self" "== Instance Methods" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "== Constants" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "--- DEFAULT_CERT_STORE -> OpenSSL::X509::Store" "== Constants" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "--- DEFAULT_PARAMS -> { Symbol -> object }" "== Constants" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "--- METHODS -> [Symbol]" "== Constants" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "--- SESSION_CACHE_OFF -> Integer" "== Constants" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "--- SESSION_CACHE_CLIENT -> Integer" "== Constants" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "--- SESSION_CACHE_SERVER -> Integer" "== Constants" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "--- SESSION_CACHE_BOTH -> Integer" "== Constants" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "--- SESSION_CACHE_NO_AUTO_CLEAR -> Integer" "== Constants" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "--- SESSION_CACHE_NO_INTERNAL -> Integer" "== Constants" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "--- SESSION_CACHE_NO_INTERNAL_LOOKUP -> Integer" "== Constants" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "--- SESSION_CACHE_NO_INTERNAL_STORE -> Integer" "== Constants" "= class OpenSSL::SSL::SSLContext < Object" "refm/api/src/openssl/SSL__SSLContext")
(find-rurima "= class OpenSSL::X509::Attribute < Object" "refm/api/src/openssl/X509__Attribute")
(find-rurima "== Class Methods" "= class OpenSSL::X509::Attribute < Object" "refm/api/src/openssl/X509__Attribute")
(find-rurima "--- new(der) -> OpenSSL::X509::Attribute" "== Class Methods" "= class OpenSSL::X509::Attribute < Object" "refm/api/src/openssl/X509__Attribute")
(find-rurima "--- new(oid, value) -> OpenSSL::X509::Attribute" "== Class Methods" "= class OpenSSL::X509::Attribute < Object" "refm/api/src/openssl/X509__Attribute")
(find-rurima "== Instance Methods" "= class OpenSSL::X509::Attribute < Object" "refm/api/src/openssl/X509__Attribute")
(find-rurima "--- oid -> String" "== Instance Methods" "= class OpenSSL::X509::Attribute < Object" "refm/api/src/openssl/X509__Attribute")
(find-rurima "--- oid=(oid)" "== Instance Methods" "= class OpenSSL::X509::Attribute < Object" "refm/api/src/openssl/X509__Attribute")
(find-rurima "--- value -> OpenSSL::ASN1::ASN1Data" "== Instance Methods" "= class OpenSSL::X509::Attribute < Object" "refm/api/src/openssl/X509__Attribute")
(find-rurima "--- value=(val)" "== Instance Methods" "= class OpenSSL::X509::Attribute < Object" "refm/api/src/openssl/X509__Attribute")
(find-rurima "--- to_der -> String" "== Instance Methods" "= class OpenSSL::X509::Attribute < Object" "refm/api/src/openssl/X509__Attribute")
(find-rurima "= class OpenSSL::X509::AttributeError < OpenSSL::OpenSSLError" "refm/api/src/openssl/X509__Attribute")
(find-rurima "= module OpenSSL::SSL" "refm/api/src/openssl/SSL")
(find-rurima "== Constants" "= module OpenSSL::SSL" "refm/api/src/openssl/SSL")
(find-rurima "--- OP_ALL -> Integer" "== Constants" "= module OpenSSL::SSL" "refm/api/src/openssl/SSL")
(find-rurima "--- OP_CIPHER_SERVER_PREFERENCE -> Integer" "== Constants" "= module OpenSSL::SSL" "refm/api/src/openssl/SSL")
(find-rurima "--- OP_EPHEMERAL_RSA -> Integer" "== Constants" "= module OpenSSL::SSL" "refm/api/src/openssl/SSL")
(find-rurima "--- OP_NETSCAPE_CA_DN_BUG -> Integer" "== Constants" "= module OpenSSL::SSL" "refm/api/src/openssl/SSL")
(find-rurima "--- OP_NETSCAPE_DEMO_CIPHER_CHANGE_BUG -> Integer" "== Constants" "= module OpenSSL::SSL" "refm/api/src/openssl/SSL")
(find-rurima "--- OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION -> Integer" "== Constants" "= module OpenSSL::SSL" "refm/api/src/openssl/SSL")
(find-rurima "--- OP_NO_SSLv2 -> Integer" "== Constants" "= module OpenSSL::SSL" "refm/api/src/openssl/SSL")
(find-rurima "--- OP_NO_SSLv3 -> Integer" "== Constants" "= module OpenSSL::SSL" "refm/api/src/openssl/SSL")
(find-rurima "--- OP_NO_TLSv1 -> Integer" "== Constants" "= module OpenSSL::SSL" "refm/api/src/openssl/SSL")
(find-rurima "--- OP_NO_TICKET -> Integer" "== Constants" "= module OpenSSL::SSL" "refm/api/src/openssl/SSL")
(find-rurima "--- OP_PKCS1_CHECK_1 -> Integer" "== Constants" "= module OpenSSL::SSL" "refm/api/src/openssl/SSL")
(find-rurima "--- OP_PKCS1_CHECK_2 -> Integer" "== Constants" "= module OpenSSL::SSL" "refm/api/src/openssl/SSL")
(find-rurima "--- OP_SINGLE_DH_USE -> Integer" "== Constants" "= module OpenSSL::SSL" "refm/api/src/openssl/SSL")
(find-rurima "--- OP_SINGLE_ECDH_USE -> Integer" "== Constants" "= module OpenSSL::SSL" "refm/api/src/openssl/SSL")
(find-rurima "--- OP_TLS_ROLLBACK_BUG -> Integer" "== Constants" "= module OpenSSL::SSL" "refm/api/src/openssl/SSL")
(find-rurima "--- VERIFY_CLIENT_ONCE -> Integer" "== Constants" "= module OpenSSL::SSL" "refm/api/src/openssl/SSL")
(find-rurima "--- VERIFY_FAIL_IF_NO_PEER_CERT -> Integer" "== Constants" "= module OpenSSL::SSL" "refm/api/src/openssl/SSL")
(find-rurima "--- VERIFY_NONE -> Integer" "== Constants" "= module OpenSSL::SSL" "refm/api/src/openssl/SSL")
(find-rurima "--- VERIFY_PEER -> Integer" "== Constants" "= module OpenSSL::SSL" "refm/api/src/openssl/SSL")
(find-rurima "= class OpenSSL::SSL::SSLError < OpenSSL::OpenSSLError" "refm/api/src/openssl/SSL")
(find-rurima "= class OpenSSL::Engine < Object" "refm/api/src/openssl/Engine")
(find-rurima "== Class Methods" "= class OpenSSL::Engine < Object" "refm/api/src/openssl/Engine")
(find-rurima "--- by_id(id) -> OpenSSL::Engine" "== Class Methods" "= class OpenSSL::Engine < Object" "refm/api/src/openssl/Engine")
(find-rurima "--- cleanup -> nil" "== Class Methods" "= class OpenSSL::Engine < Object" "refm/api/src/openssl/Engine")
(find-rurima "--- engines -> [OpenSSL::Engine]" "== Class Methods" "= class OpenSSL::Engine < Object" "refm/api/src/openssl/Engine")
(find-rurima "--- load(name = nil) -> true | nil" "== Class Methods" "= class OpenSSL::Engine < Object" "refm/api/src/openssl/Engine")
(find-rurima "== Instance Methods" "= class OpenSSL::Engine < Object" "refm/api/src/openssl/Engine")
(find-rurima "--- cipher(name) -> OpenSSL::Cipher" "== Instance Methods" "= class OpenSSL::Engine < Object" "refm/api/src/openssl/Engine")
(find-rurima "--- cmds -> [[String, String, String]]" "== Instance Methods" "= class OpenSSL::Engine < Object" "refm/api/src/openssl/Engine")
(find-rurima "--- ctrl_cmd(cmd, val=nil) -> self" "== Instance Methods" "= class OpenSSL::Engine < Object" "refm/api/src/openssl/Engine")
(find-rurima "--- digest(name) -> OpenSSL::Digest" "== Instance Methods" "= class OpenSSL::Engine < Object" "refm/api/src/openssl/Engine")
(find-rurima "--- finish -> nil" "== Instance Methods" "= class OpenSSL::Engine < Object" "refm/api/src/openssl/Engine")
(find-rurima "--- id -> String" "== Instance Methods" "= class OpenSSL::Engine < Object" "refm/api/src/openssl/Engine")
(find-rurima "--- load_private_key(id=nil, data=nil) -> OpenSSL::PKey::PKey" "== Instance Methods" "= class OpenSSL::Engine < Object" "refm/api/src/openssl/Engine")
(find-rurima "--- load_public_key(id=nil, data=nil) -> OpenSSL::PKey::PKey" "== Instance Methods" "= class OpenSSL::Engine < Object" "refm/api/src/openssl/Engine")
(find-rurima "--- name -> String" "== Instance Methods" "= class OpenSSL::Engine < Object" "refm/api/src/openssl/Engine")
(find-rurima "--- set_default(flags) -> true" "== Instance Methods" "= class OpenSSL::Engine < Object" "refm/api/src/openssl/Engine")
(find-rurima "== Constants" "= class OpenSSL::Engine < Object" "refm/api/src/openssl/Engine")
(find-rurima "--- METHOD_ALL -> Integer" "== Constants" "= class OpenSSL::Engine < Object" "refm/api/src/openssl/Engine")
(find-rurima "--- METHOD_CIPHERS -> Integer" "== Constants" "= class OpenSSL::Engine < Object" "refm/api/src/openssl/Engine")
(find-rurima "--- METHOD_DH -> Integer" "== Constants" "= class OpenSSL::Engine < Object" "refm/api/src/openssl/Engine")
(find-rurima "--- METHOD_DIGESTS -> Integer" "== Constants" "= class OpenSSL::Engine < Object" "refm/api/src/openssl/Engine")
(find-rurima "--- METHOD_DSA -> Integer" "== Constants" "= class OpenSSL::Engine < Object" "refm/api/src/openssl/Engine")
(find-rurima "--- METHOD_NONE -> Integer" "== Constants" "= class OpenSSL::Engine < Object" "refm/api/src/openssl/Engine")
(find-rurima "--- METHOD_RAND -> Integer" "== Constants" "= class OpenSSL::Engine < Object" "refm/api/src/openssl/Engine")
(find-rurima "--- METHOD_RSA -> Integer" "== Constants" "= class OpenSSL::Engine < Object" "refm/api/src/openssl/Engine")
(find-rurima "= class OpenSSL::Engine::EngineError < OpenSSL::OpenSSLError" "refm/api/src/openssl/Engine")
(find-rurima "= class OpenSSL::Netscape::SPKI < Object" "refm/api/src/openssl/Netscape__SPKI")
(find-rurima "== Class Methods" "= class OpenSSL::Netscape::SPKI < Object" "refm/api/src/openssl/Netscape__SPKI")
(find-rurima "--- new() -> OpenSSL::Netscape::SPKI" "== Class Methods" "= class OpenSSL::Netscape::SPKI < Object" "refm/api/src/openssl/Netscape__SPKI")
(find-rurima "--- new(buf) -> OpenSSL::Netscape::SPKI" "== Class Methods" "= class OpenSSL::Netscape::SPKI < Object" "refm/api/src/openssl/Netscape__SPKI")
(find-rurima "== Instance Methods" "= class OpenSSL::Netscape::SPKI < Object" "refm/api/src/openssl/Netscape__SPKI")
(find-rurima "--- challenge -> String" "== Instance Methods" "= class OpenSSL::Netscape::SPKI < Object" "refm/api/src/openssl/Netscape__SPKI")
(find-rurima "--- challenge=(chg)" "== Instance Methods" "= class OpenSSL::Netscape::SPKI < Object" "refm/api/src/openssl/Netscape__SPKI")
(find-rurima "--- public_key -> OpenSSL::PKey::PKey" "== Instance Methods" "= class OpenSSL::Netscape::SPKI < Object" "refm/api/src/openssl/Netscape__SPKI")
(find-rurima "--- public_key=(pubkey)" "== Instance Methods" "= class OpenSSL::Netscape::SPKI < Object" "refm/api/src/openssl/Netscape__SPKI")
(find-rurima "--- sign(key, digest) -> self" "== Instance Methods" "= class OpenSSL::Netscape::SPKI < Object" "refm/api/src/openssl/Netscape__SPKI")
(find-rurima "--- to_der -> String" "== Instance Methods" "= class OpenSSL::Netscape::SPKI < Object" "refm/api/src/openssl/Netscape__SPKI")
(find-rurima "--- to_pem -> String" "== Instance Methods" "= class OpenSSL::Netscape::SPKI < Object" "refm/api/src/openssl/Netscape__SPKI")
(find-rurima "--- to_s -> String" "== Instance Methods" "= class OpenSSL::Netscape::SPKI < Object" "refm/api/src/openssl/Netscape__SPKI")
(find-rurima "--- to_text -> String" "== Instance Methods" "= class OpenSSL::Netscape::SPKI < Object" "refm/api/src/openssl/Netscape__SPKI")
(find-rurima "--- verify(key) -> bool" "== Instance Methods" "= class OpenSSL::Netscape::SPKI < Object" "refm/api/src/openssl/Netscape__SPKI")
(find-rurima "= class OpenSSL::Netscape::SPKIError < OpenSSL::OpenSSLError" "refm/api/src/openssl/Netscape__SPKI")
(find-rurima "= class OpenSSL::Config < Object" "refm/api/src/openssl/Config")
(find-rurima "== Class Methods" "= class OpenSSL::Config < Object" "refm/api/src/openssl/Config")
(find-rurima "--- load(filename = nil) -> OpenSSL::Config" "== Class Methods" "= class OpenSSL::Config < Object" "refm/api/src/openssl/Config")
(find-rurima "--- new(filename = nil) -> OpenSSL::Config" "== Class Methods" "= class OpenSSL::Config < Object" "refm/api/src/openssl/Config")
(find-rurima "--- parse(str) -> OpenSSL::Config" "== Class Methods" "= class OpenSSL::Config < Object" "refm/api/src/openssl/Config")
(find-rurima "== Instance Methods" "= class OpenSSL::Config < Object" "refm/api/src/openssl/Config")
(find-rurima "--- get_value(section, name) -> String | nil" "== Instance Methods" "= class OpenSSL::Config < Object" "refm/api/src/openssl/Config")
(find-rurima "--- value(name) -> String | nil" "== Instance Methods" "= class OpenSSL::Config < Object" "refm/api/src/openssl/Config")
(find-rurima "--- value(section, name) -> String | nil" "== Instance Methods" "= class OpenSSL::Config < Object" "refm/api/src/openssl/Config")
(find-rurima "--- add_value(section, name, value) -> String" "== Instance Methods" "= class OpenSSL::Config < Object" "refm/api/src/openssl/Config")
(find-rurima "--- []=(sec, hashtbl)" "== Instance Methods" "= class OpenSSL::Config < Object" "refm/api/src/openssl/Config")
(find-rurima "--- [](sec) -> {String => String}" "== Instance Methods" "= class OpenSSL::Config < Object" "refm/api/src/openssl/Config")
(find-rurima "--- section(sec) -> {String => String}" "== Instance Methods" "= class OpenSSL::Config < Object" "refm/api/src/openssl/Config")
(find-rurima "--- sections -> [String]" "== Instance Methods" "= class OpenSSL::Config < Object" "refm/api/src/openssl/Config")
(find-rurima "--- to_s -> String" "== Instance Methods" "= class OpenSSL::Config < Object" "refm/api/src/openssl/Config")
(find-rurima "--- each {|section, key, value| ... } -> self" "== Instance Methods" "= class OpenSSL::Config < Object" "refm/api/src/openssl/Config")
(find-rurima "== Constants" "= class OpenSSL::Config < Object" "refm/api/src/openssl/Config")
(find-rurima "--- DEFAULT_CONFIG_FILE -> String" "== Constants" "= class OpenSSL::Config < Object" "refm/api/src/openssl/Config")
(find-rurima "= class OpenSSL::ConfigError <  OpenSSL::OpenSSLError" "refm/api/src/openssl/Config")
(find-rurima "= class OpenSSL::ASN1::ASN1Data < Object" "refm/api/src/openssl/ASN1__ASN1Data")
(find-rurima "== Class Methods" "= class OpenSSL::ASN1::ASN1Data < Object" "refm/api/src/openssl/ASN1__ASN1Data")
(find-rurima "--- new(value, tag, tag_class) -> OpenSSL::ASN1::ASN1Data" "== Class Methods" "= class OpenSSL::ASN1::ASN1Data < Object" "refm/api/src/openssl/ASN1__ASN1Data")
(find-rurima "== Instance Methods" "= class OpenSSL::ASN1::ASN1Data < Object" "refm/api/src/openssl/ASN1__ASN1Data")
(find-rurima "--- value -> object" "== Instance Methods" "= class OpenSSL::ASN1::ASN1Data < Object" "refm/api/src/openssl/ASN1__ASN1Data")
(find-rurima "--- value=(value)" "== Instance Methods" "= class OpenSSL::ASN1::ASN1Data < Object" "refm/api/src/openssl/ASN1__ASN1Data")
(find-rurima "--- tag -> Integer" "== Instance Methods" "= class OpenSSL::ASN1::ASN1Data < Object" "refm/api/src/openssl/ASN1__ASN1Data")
(find-rurima "--- tag=(tag)" "== Instance Methods" "= class OpenSSL::ASN1::ASN1Data < Object" "refm/api/src/openssl/ASN1__ASN1Data")
(find-rurima "--- tag_class -> Symbol" "== Instance Methods" "= class OpenSSL::ASN1::ASN1Data < Object" "refm/api/src/openssl/ASN1__ASN1Data")
(find-rurima "--- tag_class=(tag_class)" "== Instance Methods" "= class OpenSSL::ASN1::ASN1Data < Object" "refm/api/src/openssl/ASN1__ASN1Data")
(find-rurima "--- to_der -> String" "== Instance Methods" "= class OpenSSL::ASN1::ASN1Data < Object" "refm/api/src/openssl/ASN1__ASN1Data")
(find-rurima "= class OpenSSL::SSL::SSLServer < Object" "refm/api/src/openssl/SSL__SSLServer")
(find-rurima "== Class Methods" "= class OpenSSL::SSL::SSLServer < Object" "refm/api/src/openssl/SSL__SSLServer")
(find-rurima "--- new(svr, ctx) -> OpenSSL::SSL::SSLServer" "== Class Methods" "= class OpenSSL::SSL::SSLServer < Object" "refm/api/src/openssl/SSL__SSLServer")
(find-rurima "== Instance Methods" "= class OpenSSL::SSL::SSLServer < Object" "refm/api/src/openssl/SSL__SSLServer")
(find-rurima "--- to_io -> TCPServer" "== Instance Methods" "= class OpenSSL::SSL::SSLServer < Object" "refm/api/src/openssl/SSL__SSLServer")
(find-rurima "--- accept -> OpenSSL::SSL::SSLSocket" "== Instance Methods" "= class OpenSSL::SSL::SSLServer < Object" "refm/api/src/openssl/SSL__SSLServer")
(find-rurima "--- close -> nil" "== Instance Methods" "= class OpenSSL::SSL::SSLServer < Object" "refm/api/src/openssl/SSL__SSLServer")
(find-rurima "--- listen(backlog=5) -> 0" "== Instance Methods" "= class OpenSSL::SSL::SSLServer < Object" "refm/api/src/openssl/SSL__SSLServer")
(find-rurima "--- start_immediately -> bool" "== Instance Methods" "= class OpenSSL::SSL::SSLServer < Object" "refm/api/src/openssl/SSL__SSLServer")
(find-rurima "--- start_immediately=(bool)" "== Instance Methods" "= class OpenSSL::SSL::SSLServer < Object" "refm/api/src/openssl/SSL__SSLServer")
(find-rurima "--- shutdown(how=Socket::SHUT_RDWR) -> 0" "== Instance Methods" "= class OpenSSL::SSL::SSLServer < Object" "refm/api/src/openssl/SSL__SSLServer")
(find-rurima "= module OpenSSL::Digest" "refm/api/src/openssl/Digest")
(find-rurima "= class OpenSSL::Digest < Digest::Class" "refm/api/src/openssl/Digest")
(find-rurima "== Class Method" "= class OpenSSL::Digest < Digest::Class" "refm/api/src/openssl/Digest")
(find-rurima "--- new(name, data=nil) -> OpenSSL::Digest" "== Class Method" "= class OpenSSL::Digest < Digest::Class" "refm/api/src/openssl/Digest")
(find-rurima "--- digest(name, data) -> String" "== Class Method" "= class OpenSSL::Digest < Digest::Class" "refm/api/src/openssl/Digest")
(find-rurima "== Instance Method" "= class OpenSSL::Digest < Digest::Class" "refm/api/src/openssl/Digest")
(find-rurima "--- reset -> self" "== Instance Method" "= class OpenSSL::Digest < Digest::Class" "refm/api/src/openssl/Digest")
(find-rurima "--- update(data) -> self" "== Instance Method" "= class OpenSSL::Digest < Digest::Class" "refm/api/src/openssl/Digest")
(find-rurima "--- <<(data) -> self" "== Instance Method" "= class OpenSSL::Digest < Digest::Class" "refm/api/src/openssl/Digest")
(find-rurima "--- digest_length -> Integer" "== Instance Method" "= class OpenSSL::Digest < Digest::Class" "refm/api/src/openssl/Digest")
(find-rurima "--- block_length -> Integer" "== Instance Method" "= class OpenSSL::Digest < Digest::Class" "refm/api/src/openssl/Digest")
(find-rurima "--- name -> String" "== Instance Method" "= class OpenSSL::Digest < Digest::Class" "refm/api/src/openssl/Digest")
(find-rurima "= class OpenSSL::Digest::DSS < OpenSSL::Digest" "refm/api/src/openssl/Digest")
(find-rurima "== Class Method" "= class OpenSSL::Digest::DSS < OpenSSL::Digest" "refm/api/src/openssl/Digest")
(find-rurima "--- new(data=nil) -> OpenSSL::Digest::DSS" "== Class Method" "= class OpenSSL::Digest::DSS < OpenSSL::Digest" "refm/api/src/openssl/Digest")
(find-rurima "--- digest(data) -> String" "== Class Method" "= class OpenSSL::Digest::DSS < OpenSSL::Digest" "refm/api/src/openssl/Digest")
(find-rurima "--- hexdigest(data) -> String" "== Class Method" "= class OpenSSL::Digest::DSS < OpenSSL::Digest" "refm/api/src/openssl/Digest")
(find-rurima "= class OpenSSL::Digest::DSS1 < OpenSSL::Digest" "refm/api/src/openssl/Digest")
(find-rurima "== Class Method" "= class OpenSSL::Digest::DSS1 < OpenSSL::Digest" "refm/api/src/openssl/Digest")
(find-rurima "--- new(data=nil) -> OpenSSL::Digest::DSS1" "== Class Method" "= class OpenSSL::Digest::DSS1 < OpenSSL::Digest" "refm/api/src/openssl/Digest")
(find-rurima "--- digest(data) -> String" "== Class Method" "= class OpenSSL::Digest::DSS1 < OpenSSL::Digest" "refm/api/src/openssl/Digest")
(find-rurima "--- hexdigest(data) -> String" "== Class Method" "= class OpenSSL::Digest::DSS1 < OpenSSL::Digest" "refm/api/src/openssl/Digest")
(find-rurima "= class OpenSSL::Digest::MD2 < OpenSSL::Digest::Digest" "refm/api/src/openssl/Digest")
(find-rurima "= class OpenSSL::Digest::MD2 < OpenSSL::Digest" "refm/api/src/openssl/Digest")
(find-rurima "== Class Method" "= class OpenSSL::Digest::MD2 < OpenSSL::Digest" "refm/api/src/openssl/Digest")
(find-rurima "--- new(data=nil) -> OpenSSL::Digest::MD2" "== Class Method" "= class OpenSSL::Digest::MD2 < OpenSSL::Digest" "refm/api/src/openssl/Digest")
(find-rurima "--- digest(data) -> String" "== Class Method" "= class OpenSSL::Digest::MD2 < OpenSSL::Digest" "refm/api/src/openssl/Digest")
(find-rurima "--- hexdigest(data) -> String" "== Class Method" "= class OpenSSL::Digest::MD2 < OpenSSL::Digest" "refm/api/src/openssl/Digest")
(find-rurima "= class OpenSSL::Digest::MD4 < OpenSSL::Digest::Digest" "refm/api/src/openssl/Digest")
(find-rurima "= class OpenSSL::Digest::MD4 < OpenSSL::Digest" "refm/api/src/openssl/Digest")
(find-rurima "== Class Method" "= class OpenSSL::Digest::MD4 < OpenSSL::Digest" "refm/api/src/openssl/Digest")
(find-rurima "--- new(data=nil) -> OpenSSL::Digest::MD4" "== Class Method" "= class OpenSSL::Digest::MD4 < OpenSSL::Digest" "refm/api/src/openssl/Digest")
(find-rurima "--- digest(data) -> String" "== Class Method" "= class OpenSSL::Digest::MD4 < OpenSSL::Digest" "refm/api/src/openssl/Digest")
(find-rurima "--- hexdigest(data) -> String" "== Class Method" "= class OpenSSL::Digest::MD4 < OpenSSL::Digest" "refm/api/src/openssl/Digest")
(find-rurima "= class OpenSSL::Digest::MD5 < OpenSSL::Digest::Digest" "refm/api/src/openssl/Digest")
(find-rurima "= class OpenSSL::Digest::MD5 < OpenSSL::Digest" "refm/api/src/openssl/Digest")
(find-rurima "== Class Method" "= class OpenSSL::Digest::MD5 < OpenSSL::Digest" "refm/api/src/openssl/Digest")
(find-rurima "--- new(data=nil) -> OpenSSL::Digest::MD5" "== Class Method" "= class OpenSSL::Digest::MD5 < OpenSSL::Digest" "refm/api/src/openssl/Digest")
(find-rurima "--- digest(data) -> String" "== Class Method" "= class OpenSSL::Digest::MD5 < OpenSSL::Digest" "refm/api/src/openssl/Digest")
(find-rurima "--- hexdigest(data) -> String" "== Class Method" "= class OpenSSL::Digest::MD5 < OpenSSL::Digest" "refm/api/src/openssl/Digest")
(find-rurima "= class OpenSSL::Digest::MDC2 < OpenSSL::Digest::Digest" "refm/api/src/openssl/Digest")
(find-rurima "= class OpenSSL::Digest::MDC2 < OpenSSL::Digest" "refm/api/src/openssl/Digest")
(find-rurima "== Class Method" "= class OpenSSL::Digest::MDC2 < OpenSSL::Digest" "refm/api/src/openssl/Digest")
(find-rurima "--- new(data=nil) -> OpenSSL::Digest::MDC2" "== Class Method" "= class OpenSSL::Digest::MDC2 < OpenSSL::Digest" "refm/api/src/openssl/Digest")
(find-rurima "--- digest(data) -> String" "== Class Method" "= class OpenSSL::Digest::MDC2 < OpenSSL::Digest" "refm/api/src/openssl/Digest")
(find-rurima "--- hexdigest(data) -> String" "== Class Method" "= class OpenSSL::Digest::MDC2 < OpenSSL::Digest" "refm/api/src/openssl/Digest")
(find-rurima "= class OpenSSL::Digest::RIPEMD160 < OpenSSL::Digest::Digest" "refm/api/src/openssl/Digest")
(find-rurima "= class OpenSSL::Digest::RIPEMD160 < OpenSSL::Digest" "refm/api/src/openssl/Digest")
(find-rurima "== Class Method" "= class OpenSSL::Digest::RIPEMD160 < OpenSSL::Digest" "refm/api/src/openssl/Digest")
(find-rurima "--- new(data=nil) -> OpenSSL::Digest::RIPEMD160" "== Class Method" "= class OpenSSL::Digest::RIPEMD160 < OpenSSL::Digest" "refm/api/src/openssl/Digest")
(find-rurima "--- digest(data) -> String" "== Class Method" "= class OpenSSL::Digest::RIPEMD160 < OpenSSL::Digest" "refm/api/src/openssl/Digest")
(find-rurima "--- hexdigest(data) -> String" "== Class Method" "= class OpenSSL::Digest::RIPEMD160 < OpenSSL::Digest" "refm/api/src/openssl/Digest")
(find-rurima "= class OpenSSL::Digest::SHA < OpenSSL::Digest::Digest" "refm/api/src/openssl/Digest")
(find-rurima "= class OpenSSL::Digest::SHA < OpenSSL::Digest" "refm/api/src/openssl/Digest")
(find-rurima "== Class Method" "= class OpenSSL::Digest::SHA < OpenSSL::Digest" "refm/api/src/openssl/Digest")
(find-rurima "--- new(data=nil) -> OpenSSL::Digest::SHA" "== Class Method" "= class OpenSSL::Digest::SHA < OpenSSL::Digest" "refm/api/src/openssl/Digest")
(find-rurima "--- digest(data) -> String" "== Class Method" "= class OpenSSL::Digest::SHA < OpenSSL::Digest" "refm/api/src/openssl/Digest")
(find-rurima "--- hexdigest(data) -> String" "== Class Method" "= class OpenSSL::Digest::SHA < OpenSSL::Digest" "refm/api/src/openssl/Digest")
(find-rurima "= class OpenSSL::Digest::SHA1 < OpenSSL::Digest::Digest" "refm/api/src/openssl/Digest")
(find-rurima "= class OpenSSL::Digest::SHA1 < OpenSSL::Digest" "refm/api/src/openssl/Digest")
(find-rurima "== Class Method" "= class OpenSSL::Digest::SHA1 < OpenSSL::Digest" "refm/api/src/openssl/Digest")
(find-rurima "--- new(data=nil) -> OpenSSL::Digest::SHA1" "== Class Method" "= class OpenSSL::Digest::SHA1 < OpenSSL::Digest" "refm/api/src/openssl/Digest")
(find-rurima "--- digest(data) -> String" "== Class Method" "= class OpenSSL::Digest::SHA1 < OpenSSL::Digest" "refm/api/src/openssl/Digest")
(find-rurima "--- hexdigest(data) -> String" "== Class Method" "= class OpenSSL::Digest::SHA1 < OpenSSL::Digest" "refm/api/src/openssl/Digest")
(find-rurima "= class OpenSSL::Digest::SHA224 < OpenSSL::Digest::Digest" "refm/api/src/openssl/Digest")
(find-rurima "= class OpenSSL::Digest::SHA224 < OpenSSL::Digest" "refm/api/src/openssl/Digest")
(find-rurima "== Class Method" "= class OpenSSL::Digest::SHA224 < OpenSSL::Digest" "refm/api/src/openssl/Digest")
(find-rurima "--- new(data=nil) -> OpenSSL::Digest::SHA224" "== Class Method" "= class OpenSSL::Digest::SHA224 < OpenSSL::Digest" "refm/api/src/openssl/Digest")
(find-rurima "--- digest(data) -> String" "== Class Method" "= class OpenSSL::Digest::SHA224 < OpenSSL::Digest" "refm/api/src/openssl/Digest")
(find-rurima "--- hexdigest(data) -> String" "== Class Method" "= class OpenSSL::Digest::SHA224 < OpenSSL::Digest" "refm/api/src/openssl/Digest")
(find-rurima "= class OpenSSL::Digest::SHA256 < OpenSSL::Digest::Digest" "refm/api/src/openssl/Digest")
(find-rurima "= class OpenSSL::Digest::SHA256 < OpenSSL::Digest" "refm/api/src/openssl/Digest")
(find-rurima "== Class Method" "= class OpenSSL::Digest::SHA256 < OpenSSL::Digest" "refm/api/src/openssl/Digest")
(find-rurima "--- new(data=nil) -> OpenSSL::Digest::SHA256" "== Class Method" "= class OpenSSL::Digest::SHA256 < OpenSSL::Digest" "refm/api/src/openssl/Digest")
(find-rurima "--- digest(data) -> String" "== Class Method" "= class OpenSSL::Digest::SHA256 < OpenSSL::Digest" "refm/api/src/openssl/Digest")
(find-rurima "--- hexdigest(data) -> String" "== Class Method" "= class OpenSSL::Digest::SHA256 < OpenSSL::Digest" "refm/api/src/openssl/Digest")
(find-rurima "= class OpenSSL::Digest::SHA384 < OpenSSL::Digest::Digest" "refm/api/src/openssl/Digest")
(find-rurima "= class OpenSSL::Digest::SHA384 < OpenSSL::Digest" "refm/api/src/openssl/Digest")
(find-rurima "== Class Method" "= class OpenSSL::Digest::SHA384 < OpenSSL::Digest" "refm/api/src/openssl/Digest")
(find-rurima "--- new(data=nil) -> OpenSSL::Digest::SHA384" "== Class Method" "= class OpenSSL::Digest::SHA384 < OpenSSL::Digest" "refm/api/src/openssl/Digest")
(find-rurima "--- digest(data) -> String" "== Class Method" "= class OpenSSL::Digest::SHA384 < OpenSSL::Digest" "refm/api/src/openssl/Digest")
(find-rurima "--- hexdigest(data) -> String" "== Class Method" "= class OpenSSL::Digest::SHA384 < OpenSSL::Digest" "refm/api/src/openssl/Digest")
(find-rurima "= class OpenSSL::Digest::SHA512 < OpenSSL::Digest::Digest" "refm/api/src/openssl/Digest")
(find-rurima "= class OpenSSL::Digest::SHA512 < OpenSSL::Digest" "refm/api/src/openssl/Digest")
(find-rurima "== Class Method" "= class OpenSSL::Digest::SHA512 < OpenSSL::Digest" "refm/api/src/openssl/Digest")
(find-rurima "--- new(data=nil) -> OpenSSL::Digest::SHA512" "== Class Method" "= class OpenSSL::Digest::SHA512 < OpenSSL::Digest" "refm/api/src/openssl/Digest")
(find-rurima "--- digest(data) -> String" "== Class Method" "= class OpenSSL::Digest::SHA512 < OpenSSL::Digest" "refm/api/src/openssl/Digest")
(find-rurima "--- hexdigest(data) -> String" "== Class Method" "= class OpenSSL::Digest::SHA512 < OpenSSL::Digest" "refm/api/src/openssl/Digest")
(find-rurima "= class OpenSSL::Digest::DigestError < OpenSSL::OpenSSLError" "refm/api/src/openssl/Digest")
(find-rurima "= class OpenSSL::X509::Revoked < Object" "refm/api/src/openssl/X509__Revoked")
(find-rurima "== Class Methods" "= class OpenSSL::X509::Revoked < Object" "refm/api/src/openssl/X509__Revoked")
(find-rurima "--- new -> OpenSSL::X509::Revoked" "== Class Methods" "= class OpenSSL::X509::Revoked < Object" "refm/api/src/openssl/X509__Revoked")
(find-rurima "== Instance Methods" "= class OpenSSL::X509::Revoked < Object" "refm/api/src/openssl/X509__Revoked")
(find-rurima "--- serial -> OpenSSL::BN" "== Instance Methods" "= class OpenSSL::X509::Revoked < Object" "refm/api/src/openssl/X509__Revoked")
(find-rurima "--- serial=(serial)" "== Instance Methods" "= class OpenSSL::X509::Revoked < Object" "refm/api/src/openssl/X509__Revoked")
(find-rurima "--- time -> Time" "== Instance Methods" "= class OpenSSL::X509::Revoked < Object" "refm/api/src/openssl/X509__Revoked")
(find-rurima "--- time=(time)" "== Instance Methods" "= class OpenSSL::X509::Revoked < Object" "refm/api/src/openssl/X509__Revoked")
(find-rurima "--- extensions -> [OpenSSL::X509::Extension]" "== Instance Methods" "= class OpenSSL::X509::Revoked < Object" "refm/api/src/openssl/X509__Revoked")
(find-rurima "--- extensions=(extensions)" "== Instance Methods" "= class OpenSSL::X509::Revoked < Object" "refm/api/src/openssl/X509__Revoked")
(find-rurima "--- add_extension(ex) -> OpenSSL::X509::Extension" "== Instance Methods" "= class OpenSSL::X509::Revoked < Object" "refm/api/src/openssl/X509__Revoked")
(find-rurima "= class OpenSSL::X509::RevokedError < OpenSSL::OpenSSLError" "refm/api/src/openssl/X509__Revoked")
(find-rurima "= module OpenSSL::PKCS5" "refm/api/src/openssl/PKCS5")
(find-rurima "== Module Functions" "= module OpenSSL::PKCS5" "refm/api/src/openssl/PKCS5")
(find-rurima "--- pbkdf2_hmac(pass, salt, iter, keylen, digest) -> String" "== Module Functions" "= module OpenSSL::PKCS5" "refm/api/src/openssl/PKCS5")
(find-rurima "--- pbkdf2_hmac_sha1(pass, salt, iter, keylen) -> String" "== Module Functions" "= module OpenSSL::PKCS5" "refm/api/src/openssl/PKCS5")
(find-rurima "= class OpenSSL::PKCS5::PKCS5Error < OpenSSL::OpenSSLError" "refm/api/src/openssl/PKCS5")
(find-rurima "= module OpenSSL::PKey" "refm/api/src/openssl/PKey__PKey")
(find-rurima "= class OpenSSL::PKey::PKey < Object" "refm/api/src/openssl/PKey__PKey")
(find-rurima "== Instance Methods" "= class OpenSSL::PKey::PKey < Object" "refm/api/src/openssl/PKey__PKey")
(find-rurima "--- sign(digest, data) -> String" "== Instance Methods" "= class OpenSSL::PKey::PKey < Object" "refm/api/src/openssl/PKey__PKey")
(find-rurima "--- verify(digest, sign, data) -> bool" "== Instance Methods" "= class OpenSSL::PKey::PKey < Object" "refm/api/src/openssl/PKey__PKey")
(find-rurima "--- to_der -> String" "== Instance Methods" "= class OpenSSL::PKey::PKey < Object" "refm/api/src/openssl/PKey__PKey")
(find-rurima "= class OpenSSL::PKey::PKeyError < OpenSSL::OpenSSLError" "refm/api/src/openssl/PKey__PKey")
(find-rurima "= module OpenSSL::Cipher" "refm/api/src/openssl/Cipher")
(find-rurima "== Module functions" "= module OpenSSL::Cipher" "refm/api/src/openssl/Cipher")
(find-rurima "--- ciphers -> [String]" "== Module functions" "= module OpenSSL::Cipher" "refm/api/src/openssl/Cipher")
(find-rurima "= class OpenSSL::Cipher::Cipher < Object" "refm/api/src/openssl/Cipher")
(find-rurima "= class OpenSSL::Cipher < Object" "refm/api/src/openssl/Cipher")
(find-rurima "=== ブロック暗号モード" "= class OpenSSL::Cipher < Object" "refm/api/src/openssl/Cipher")
(find-rurima "=== 使用例" "= class OpenSSL::Cipher < Object" "refm/api/src/openssl/Cipher")
(find-rurima "== Class Methods" "= class OpenSSL::Cipher < Object" "refm/api/src/openssl/Cipher")
(find-rurima "--- new(name) -> OpenSSL::Cipher::Cipher" "== Class Methods" "= class OpenSSL::Cipher < Object" "refm/api/src/openssl/Cipher")
(find-rurima "--- new(name) -> OpenSSL::Cipher" "== Class Methods" "= class OpenSSL::Cipher < Object" "refm/api/src/openssl/Cipher")
(find-rurima "--- ciphers -> [String]" "== Class Methods" "= class OpenSSL::Cipher < Object" "refm/api/src/openssl/Cipher")
(find-rurima "== Instance Methods" "= class OpenSSL::Cipher < Object" "refm/api/src/openssl/Cipher")
(find-rurima "--- reset -> self" "== Instance Methods" "= class OpenSSL::Cipher < Object" "refm/api/src/openssl/Cipher")
(find-rurima "--- encrypt -> self" "== Instance Methods" "= class OpenSSL::Cipher < Object" "refm/api/src/openssl/Cipher")
(find-rurima "--- encrypt(pass, iv = nil) -> self" "== Instance Methods" "= class OpenSSL::Cipher < Object" "refm/api/src/openssl/Cipher")
(find-rurima "--- decrypt(pass, iv = nil) -> self" "== Instance Methods" "= class OpenSSL::Cipher < Object" "refm/api/src/openssl/Cipher")
(find-rurima "--- update(data) -> String" "== Instance Methods" "= class OpenSSL::Cipher < Object" "refm/api/src/openssl/Cipher")
(find-rurima "--- <<(data) -> String" "== Instance Methods" "= class OpenSSL::Cipher < Object" "refm/api/src/openssl/Cipher")
(find-rurima "--- final -> String" "== Instance Methods" "= class OpenSSL::Cipher < Object" "refm/api/src/openssl/Cipher")
(find-rurima "--- key=(key) " "== Instance Methods" "= class OpenSSL::Cipher < Object" "refm/api/src/openssl/Cipher")
(find-rurima "--- key_len -> Integer" "== Instance Methods" "= class OpenSSL::Cipher < Object" "refm/api/src/openssl/Cipher")
(find-rurima "--- key_len=(length)" "== Instance Methods" "= class OpenSSL::Cipher < Object" "refm/api/src/openssl/Cipher")
(find-rurima "--- iv=(iv) " "== Instance Methods" "= class OpenSSL::Cipher < Object" "refm/api/src/openssl/Cipher")
(find-rurima "--- iv_len -> Integer" "== Instance Methods" "= class OpenSSL::Cipher < Object" "refm/api/src/openssl/Cipher")
(find-rurima "--- block_size -> Integer" "== Instance Methods" "= class OpenSSL::Cipher < Object" "refm/api/src/openssl/Cipher")
(find-rurima "--- padding=(padding)" "== Instance Methods" "= class OpenSSL::Cipher < Object" "refm/api/src/openssl/Cipher")
(find-rurima "--- pkcs5_keyivgen(pass, salt=nil, num=2048, digest=\"md5\") -> nil" "== Instance Methods" "= class OpenSSL::Cipher < Object" "refm/api/src/openssl/Cipher")
(find-rurima "--- random_iv -> String" "== Instance Methods" "= class OpenSSL::Cipher < Object" "refm/api/src/openssl/Cipher")
(find-rurima "--- random_key -> String" "== Instance Methods" "= class OpenSSL::Cipher < Object" "refm/api/src/openssl/Cipher")
(find-rurima "--- name -> String" "== Instance Methods" "= class OpenSSL::Cipher < Object" "refm/api/src/openssl/Cipher")
(find-rurima "= class OpenSSL::Cipher::Cipher < OpenSSL::Cipher" "refm/api/src/openssl/Cipher")
(find-rurima "= class OpenSSL::Cipher::AES < OpenSSL::Cipher::Cipher" "refm/api/src/openssl/Cipher")
(find-rurima "= class OpenSSL::Cipher::AES < OpenSSL::Cipher" "refm/api/src/openssl/Cipher")
(find-rurima "== Class Methods" "= class OpenSSL::Cipher::AES < OpenSSL::Cipher" "refm/api/src/openssl/Cipher")
(find-rurima "--- new(bit, mode) -> OpenSSL::Cipher::AES" "== Class Methods" "= class OpenSSL::Cipher::AES < OpenSSL::Cipher" "refm/api/src/openssl/Cipher")
(find-rurima "= class OpenSSL::Cipher::AES128 < OpenSSL::Cipher::Cipher" "refm/api/src/openssl/Cipher")
(find-rurima "= class OpenSSL::Cipher::AES128 < OpenSSL::Cipher" "refm/api/src/openssl/Cipher")
(find-rurima "== Class Methods" "= class OpenSSL::Cipher::AES128 < OpenSSL::Cipher" "refm/api/src/openssl/Cipher")
(find-rurima "--- new(mode) -> OpenSSL::Cipher::AES128" "== Class Methods" "= class OpenSSL::Cipher::AES128 < OpenSSL::Cipher" "refm/api/src/openssl/Cipher")
(find-rurima "= class OpenSSL::Cipher::AES192 < OpenSSL::Cipher::Cipher" "refm/api/src/openssl/Cipher")
(find-rurima "= class OpenSSL::Cipher::AES192 < OpenSSL::Cipher" "refm/api/src/openssl/Cipher")
(find-rurima "== Class Methods" "= class OpenSSL::Cipher::AES192 < OpenSSL::Cipher" "refm/api/src/openssl/Cipher")
(find-rurima "--- new(mode) -> OpenSSL::Cipher::AES192" "== Class Methods" "= class OpenSSL::Cipher::AES192 < OpenSSL::Cipher" "refm/api/src/openssl/Cipher")
(find-rurima "= class OpenSSL::Cipher::AES256 < OpenSSL::Cipher::Cipher" "refm/api/src/openssl/Cipher")
(find-rurima "= class OpenSSL::Cipher::AES256 < OpenSSL::Cipher" "refm/api/src/openssl/Cipher")
(find-rurima "== Class Methods" "= class OpenSSL::Cipher::AES256 < OpenSSL::Cipher" "refm/api/src/openssl/Cipher")
(find-rurima "--- new(mode) -> OpenSSL::Cipher::AES256" "== Class Methods" "= class OpenSSL::Cipher::AES256 < OpenSSL::Cipher" "refm/api/src/openssl/Cipher")
(find-rurima "= class OpenSSL::Cipher::BF < OpenSSL::Cipher::Cipher" "refm/api/src/openssl/Cipher")
(find-rurima "= class OpenSSL::Cipher::BF < OpenSSL::Cipher" "refm/api/src/openssl/Cipher")
(find-rurima "== Class Methods" "= class OpenSSL::Cipher::BF < OpenSSL::Cipher" "refm/api/src/openssl/Cipher")
(find-rurima "--- new(mode) -> OpenSSL::Cipher::BF" "== Class Methods" "= class OpenSSL::Cipher::BF < OpenSSL::Cipher" "refm/api/src/openssl/Cipher")
(find-rurima "= class OpenSSL::Cipher::Cast5 < OpenSSL::Cipher::Cipher" "refm/api/src/openssl/Cipher")
(find-rurima "= class OpenSSL::Cipher::CAST5 < OpenSSL::Cipher::Cipher" "refm/api/src/openssl/Cipher")
(find-rurima "= class OpenSSL::Cipher::CAST5 < OpenSSL::Cipher" "refm/api/src/openssl/Cipher")
(find-rurima "== Class Methods" "= class OpenSSL::Cipher::CAST5 < OpenSSL::Cipher" "refm/api/src/openssl/Cipher")
(find-rurima "--- new(mode) -> OpenSSL::Cipher::CAST5" "== Class Methods" "= class OpenSSL::Cipher::CAST5 < OpenSSL::Cipher" "refm/api/src/openssl/Cipher")
(find-rurima "= class OpenSSL::Cipher::DES < OpenSSL::Cipher::Cipher" "refm/api/src/openssl/Cipher")
(find-rurima "= class OpenSSL::Cipher::DES < OpenSSL::Cipher" "refm/api/src/openssl/Cipher")
(find-rurima "== Class Methods" "= class OpenSSL::Cipher::DES < OpenSSL::Cipher" "refm/api/src/openssl/Cipher")
(find-rurima "--- new(mode) -> OpenSSL::Cipher::DES" "== Class Methods" "= class OpenSSL::Cipher::DES < OpenSSL::Cipher" "refm/api/src/openssl/Cipher")
(find-rurima "= class OpenSSL::Cipher::Idea < OpenSSL::Cipher::Cipher" "refm/api/src/openssl/Cipher")
(find-rurima "= class OpenSSL::Cipher::IDEA < OpenSSL::Cipher::Cipher" "refm/api/src/openssl/Cipher")
(find-rurima "= class OpenSSL::Cipher::IDEA < OpenSSL::Cipher" "refm/api/src/openssl/Cipher")
(find-rurima "== Class Methods" "= class OpenSSL::Cipher::IDEA < OpenSSL::Cipher" "refm/api/src/openssl/Cipher")
(find-rurima "--- new(*args) -> OpenSSL::Cipher::IDEA" "== Class Methods" "= class OpenSSL::Cipher::IDEA < OpenSSL::Cipher" "refm/api/src/openssl/Cipher")
(find-rurima "= class OpenSSL::Cipher::RC2 < OpenSSL::Cipher::Cipher" "refm/api/src/openssl/Cipher")
(find-rurima "= class OpenSSL::Cipher::RC2 < OpenSSL::Cipher" "refm/api/src/openssl/Cipher")
(find-rurima "== Class Methods" "= class OpenSSL::Cipher::RC2 < OpenSSL::Cipher" "refm/api/src/openssl/Cipher")
(find-rurima "--- new(bit, mode) -> OpenSSL::Cipher::RC2" "== Class Methods" "= class OpenSSL::Cipher::RC2 < OpenSSL::Cipher" "refm/api/src/openssl/Cipher")
(find-rurima "--- new(mode) -> OpenSSL::Cipher::RC2" "== Class Methods" "= class OpenSSL::Cipher::RC2 < OpenSSL::Cipher" "refm/api/src/openssl/Cipher")
(find-rurima "= class OpenSSL::Cipher::RC4 < OpenSSL::Cipher::Cipher" "refm/api/src/openssl/Cipher")
(find-rurima "= class OpenSSL::Cipher::RC4 < OpenSSL::Cipher" "refm/api/src/openssl/Cipher")
(find-rurima "== Class Methods" "= class OpenSSL::Cipher::RC4 < OpenSSL::Cipher" "refm/api/src/openssl/Cipher")
(find-rurima "--- new() -> OpenSSL::Cipher::RC4" "== Class Methods" "= class OpenSSL::Cipher::RC4 < OpenSSL::Cipher" "refm/api/src/openssl/Cipher")
(find-rurima "--- new(bit) -> OpenSSL::Cipher::RC4" "== Class Methods" "= class OpenSSL::Cipher::RC4 < OpenSSL::Cipher" "refm/api/src/openssl/Cipher")
(find-rurima "= class OpenSSL::Cipher::RC5 < OpenSSL::Cipher::Cipher" "refm/api/src/openssl/Cipher")
(find-rurima "= class OpenSSL::Cipher::RC5 < OpenSSL::Cipher" "refm/api/src/openssl/Cipher")
(find-rurima "== Class Methods" "= class OpenSSL::Cipher::RC5 < OpenSSL::Cipher" "refm/api/src/openssl/Cipher")
(find-rurima "--- new(*args) -> OpenSSL::Cipher::RC5" "== Class Methods" "= class OpenSSL::Cipher::RC5 < OpenSSL::Cipher" "refm/api/src/openssl/Cipher")
(find-rurima "= class OpenSSL::CipherError < OpenSSL::OpenSSLError" "refm/api/src/openssl/Cipher")
(find-rurima "= class OpenSSL::Cipher::CipherError < OpenSSL::OpenSSLError" "refm/api/src/openssl/Cipher")
(find-rurima "= class OpenSSL::PKCS7 < Object" "refm/api/src/openssl/PKCS7")
(find-rurima "=== S/MIME メッセージの種類" "= class OpenSSL::PKCS7 < Object" "refm/api/src/openssl/PKCS7")
(find-rurima "== Class Methods" "= class OpenSSL::PKCS7 < Object" "refm/api/src/openssl/PKCS7")
(find-rurima "--- new -> OpenSSL::PKCS7" "== Class Methods" "= class OpenSSL::PKCS7 < Object" "refm/api/src/openssl/PKCS7")
(find-rurima "--- new(obj) -> OpenSSL::PKCS7" "== Class Methods" "= class OpenSSL::PKCS7 < Object" "refm/api/src/openssl/PKCS7")
(find-rurima "--- read_smime(obj) -> OpenSSL::PKCS7" "== Class Methods" "= class OpenSSL::PKCS7 < Object" "refm/api/src/openssl/PKCS7")
(find-rurima "--- write_smime(p7sig, data=nil, flags = 0) -> String" "== Class Methods" "= class OpenSSL::PKCS7 < Object" "refm/api/src/openssl/PKCS7")
(find-rurima "--- sign(cert, key, data, certs = [], flags = 0) -> OpenSSL::PKCS7" "== Class Methods" "= class OpenSSL::PKCS7 < Object" "refm/api/src/openssl/PKCS7")
(find-rurima "--- encrypt(certs, data, cipher=nil, flags=0) -> OpenSSL::PKCS7" "== Class Methods" "= class OpenSSL::PKCS7 < Object" "refm/api/src/openssl/PKCS7")
(find-rurima "== Instance Methods" "= class OpenSSL::PKCS7 < Object" "refm/api/src/openssl/PKCS7")
(find-rurima "--- type -> Symbol" "== Instance Methods" "= class OpenSSL::PKCS7 < Object" "refm/api/src/openssl/PKCS7")
(find-rurima "--- type=(type)" "== Instance Methods" "= class OpenSSL::PKCS7 < Object" "refm/api/src/openssl/PKCS7")
(find-rurima "--- detached=(b)" "== Instance Methods" "= class OpenSSL::PKCS7 < Object" "refm/api/src/openssl/PKCS7")
(find-rurima "--- detached? -> bool" "== Instance Methods" "= class OpenSSL::PKCS7 < Object" "refm/api/src/openssl/PKCS7")
(find-rurima "--- detached -> bool" "== Instance Methods" "= class OpenSSL::PKCS7 < Object" "refm/api/src/openssl/PKCS7")
(find-rurima "--- cipher=(cipher)" "== Instance Methods" "= class OpenSSL::PKCS7 < Object" "refm/api/src/openssl/PKCS7")
(find-rurima "--- add_signer(singer) -> self" "== Instance Methods" "= class OpenSSL::PKCS7 < Object" "refm/api/src/openssl/PKCS7")
(find-rurima "--- signers -> [OpenSSL::PKCS7::SignerInfo]" "== Instance Methods" "= class OpenSSL::PKCS7 < Object" "refm/api/src/openssl/PKCS7")
(find-rurima "--- add_recipient(recipient) -> self" "== Instance Methods" "= class OpenSSL::PKCS7 < Object" "refm/api/src/openssl/PKCS7")
(find-rurima "--- add_certificate(cert) -> self" "== Instance Methods" "= class OpenSSL::PKCS7 < Object" "refm/api/src/openssl/PKCS7")
(find-rurima "--- certificates -> [OpenSSL::X509::Certificate] | nil" "== Instance Methods" "= class OpenSSL::PKCS7 < Object" "refm/api/src/openssl/PKCS7")
(find-rurima "--- certificates=(certificates)" "== Instance Methods" "= class OpenSSL::PKCS7 < Object" "refm/api/src/openssl/PKCS7")
(find-rurima "--- add_crl(crl) -> self" "== Instance Methods" "= class OpenSSL::PKCS7 < Object" "refm/api/src/openssl/PKCS7")
(find-rurima "--- crls -> [OpenSSL::X509::CRL]" "== Instance Methods" "= class OpenSSL::PKCS7 < Object" "refm/api/src/openssl/PKCS7")
(find-rurima "--- crls=(crls)" "== Instance Methods" "= class OpenSSL::PKCS7 < Object" "refm/api/src/openssl/PKCS7")
(find-rurima "--- data -> String" "== Instance Methods" "= class OpenSSL::PKCS7 < Object" "refm/api/src/openssl/PKCS7")
(find-rurima "--- data=(data)" "== Instance Methods" "= class OpenSSL::PKCS7 < Object" "refm/api/src/openssl/PKCS7")
(find-rurima "--- add_data(data) -> data" "== Instance Methods" "= class OpenSSL::PKCS7 < Object" "refm/api/src/openssl/PKCS7")
(find-rurima "--- verify(certs, store, indata = nil, flags = 0) -> bool" "== Instance Methods" "= class OpenSSL::PKCS7 < Object" "refm/api/src/openssl/PKCS7")
(find-rurima "--- decrypt(pkey, cert, flags = 0) -> String" "== Instance Methods" "= class OpenSSL::PKCS7 < Object" "refm/api/src/openssl/PKCS7")
(find-rurima "--- to_pem -> String" "== Instance Methods" "= class OpenSSL::PKCS7 < Object" "refm/api/src/openssl/PKCS7")
(find-rurima "--- to_s -> String" "== Instance Methods" "= class OpenSSL::PKCS7 < Object" "refm/api/src/openssl/PKCS7")
(find-rurima "--- to_der -> String" "== Instance Methods" "= class OpenSSL::PKCS7 < Object" "refm/api/src/openssl/PKCS7")
(find-rurima "--- error_string -> String | nil" "== Instance Methods" "= class OpenSSL::PKCS7 < Object" "refm/api/src/openssl/PKCS7")
(find-rurima "--- error_string=(str)" "== Instance Methods" "= class OpenSSL::PKCS7 < Object" "refm/api/src/openssl/PKCS7")
(find-rurima "--- recipients -> [OpenSSL::PKCS7::RecipientInfo]" "== Instance Methods" "= class OpenSSL::PKCS7 < Object" "refm/api/src/openssl/PKCS7")
(find-rurima "== Constants" "= class OpenSSL::PKCS7 < Object" "refm/api/src/openssl/PKCS7")
(find-rurima "--- DETACHED -> Integer" "== Constants" "= class OpenSSL::PKCS7 < Object" "refm/api/src/openssl/PKCS7")
(find-rurima "--- TEXT  -> Integer" "== Constants" "= class OpenSSL::PKCS7 < Object" "refm/api/src/openssl/PKCS7")
(find-rurima "--- BINARY -> Integer" "== Constants" "= class OpenSSL::PKCS7 < Object" "refm/api/src/openssl/PKCS7")
(find-rurima "--- NOATTR -> Integer" "== Constants" "= class OpenSSL::PKCS7 < Object" "refm/api/src/openssl/PKCS7")
(find-rurima "--- NOCERTS  -> Integer" "== Constants" "= class OpenSSL::PKCS7 < Object" "refm/api/src/openssl/PKCS7")
(find-rurima "--- NOCHAIN  -> Integer" "== Constants" "= class OpenSSL::PKCS7 < Object" "refm/api/src/openssl/PKCS7")
(find-rurima "--- NOINTERN -> Integer" "== Constants" "= class OpenSSL::PKCS7 < Object" "refm/api/src/openssl/PKCS7")
(find-rurima "--- NOSIGS -> Integer" "== Constants" "= class OpenSSL::PKCS7 < Object" "refm/api/src/openssl/PKCS7")
(find-rurima "--- NOSMIMECAP -> Integer" "== Constants" "= class OpenSSL::PKCS7 < Object" "refm/api/src/openssl/PKCS7")
(find-rurima "--- NOVERIFY -> Integer" "== Constants" "= class OpenSSL::PKCS7 < Object" "refm/api/src/openssl/PKCS7")
(find-rurima "= class OpenSSL::PKCS7::PKCS7 < OpenSSL::PKCS7" "refm/api/src/openssl/PKCS7")
(find-rurima "= class OpenSSL::PKCS7::RecipientInfo < Object" "refm/api/src/openssl/PKCS7")
(find-rurima "== Class Methods" "= class OpenSSL::PKCS7::RecipientInfo < Object" "refm/api/src/openssl/PKCS7")
(find-rurima "--- new(cert) -> RecipientInfo" "== Class Methods" "= class OpenSSL::PKCS7::RecipientInfo < Object" "refm/api/src/openssl/PKCS7")
(find-rurima "== Instance Methods" "= class OpenSSL::PKCS7::RecipientInfo < Object" "refm/api/src/openssl/PKCS7")
(find-rurima "--- enc_key -> String" "== Instance Methods" "= class OpenSSL::PKCS7::RecipientInfo < Object" "refm/api/src/openssl/PKCS7")
(find-rurima "--- issuer -> OpenSSL::X509::Name" "== Instance Methods" "= class OpenSSL::PKCS7::RecipientInfo < Object" "refm/api/src/openssl/PKCS7")
(find-rurima "--- serial -> Integer" "== Instance Methods" "= class OpenSSL::PKCS7::RecipientInfo < Object" "refm/api/src/openssl/PKCS7")
(find-rurima "= class OpenSSL::PKCS7::Signer < Object" "refm/api/src/openssl/PKCS7")
(find-rurima "= class OpenSSL::PKCS7::SignerInfo < Object" "refm/api/src/openssl/PKCS7")
(find-rurima "== Class Methods" "= class OpenSSL::PKCS7::SignerInfo < Object" "refm/api/src/openssl/PKCS7")
(find-rurima "--- new(cert, key, digest) -> OpenSSL::PKCS7::SignerInfo" "== Class Methods" "= class OpenSSL::PKCS7::SignerInfo < Object" "refm/api/src/openssl/PKCS7")
(find-rurima "== Instance Methods" "= class OpenSSL::PKCS7::SignerInfo < Object" "refm/api/src/openssl/PKCS7")
(find-rurima "--- issuer -> OpenSSL::X509::Name" "== Instance Methods" "= class OpenSSL::PKCS7::SignerInfo < Object" "refm/api/src/openssl/PKCS7")
(find-rurima "--- name -> OpenSSL::X509::Name" "== Instance Methods" "= class OpenSSL::PKCS7::SignerInfo < Object" "refm/api/src/openssl/PKCS7")
(find-rurima "--- serial -> Integer" "== Instance Methods" "= class OpenSSL::PKCS7::SignerInfo < Object" "refm/api/src/openssl/PKCS7")
(find-rurima "--- signed_time -> Time" "== Instance Methods" "= class OpenSSL::PKCS7::SignerInfo < Object" "refm/api/src/openssl/PKCS7")
(find-rurima "= class OpenSSL::PKCS7::PKCS7Error < OpenSSL::OpenSSLError" "refm/api/src/openssl/PKCS7")
(find-rurima "= module OpenSSL::Random" "refm/api/src/openssl/Random")
(find-rurima "=== 暗号と乱数" "= module OpenSSL::Random" "refm/api/src/openssl/Random")
(find-rurima "== Module Functions" "= module OpenSSL::Random" "refm/api/src/openssl/Random")
(find-rurima "--- egd(filename) -> true" "== Module Functions" "= module OpenSSL::Random" "refm/api/src/openssl/Random")
(find-rurima "--- egd_bytes(filename, length) -> true" "== Module Functions" "= module OpenSSL::Random" "refm/api/src/openssl/Random")
(find-rurima "--- load_random_file(filename) -> true" "== Module Functions" "= module OpenSSL::Random" "refm/api/src/openssl/Random")
(find-rurima "--- pseudo_bytes(len) -> String" "== Module Functions" "= module OpenSSL::Random" "refm/api/src/openssl/Random")
(find-rurima "--- random_bytes(len) -> String" "== Module Functions" "= module OpenSSL::Random" "refm/api/src/openssl/Random")
(find-rurima "--- random_add(str, entropy) -> self" "== Module Functions" "= module OpenSSL::Random" "refm/api/src/openssl/Random")
(find-rurima "--- status? -> bool" "== Module Functions" "= module OpenSSL::Random" "refm/api/src/openssl/Random")
(find-rurima "--- seed(str) -> str" "== Module Functions" "= module OpenSSL::Random" "refm/api/src/openssl/Random")
(find-rurima "--- write_random_file(filename) -> true" "== Module Functions" "= module OpenSSL::Random" "refm/api/src/openssl/Random")
(find-rurima "= class OpenSSL::Random::RandomError < OpenSSL::OpenSSLError" "refm/api/src/openssl/Random")
(find-rurima "= class OpenSSL::X509::StoreContext < Object" "refm/api/src/openssl/X509__StoreContext")
(find-rurima "== Class Methods" "= class OpenSSL::X509::StoreContext < Object" "refm/api/src/openssl/X509__StoreContext")
(find-rurima "---new(store, cert, chain=nil) -> OpenSSL::X509::StoreContext" "== Class Methods" "= class OpenSSL::X509::StoreContext < Object" "refm/api/src/openssl/X509__StoreContext")
(find-rurima "== Instance Methods" "= class OpenSSL::X509::StoreContext < Object" "refm/api/src/openssl/X509__StoreContext")
(find-rurima "--- chain -> [OpenSSL::X509::Certificate] | nil" "== Instance Methods" "= class OpenSSL::X509::StoreContext < Object" "refm/api/src/openssl/X509__StoreContext")
(find-rurima "--- cleanup -> self" "== Instance Methods" "= class OpenSSL::X509::StoreContext < Object" "refm/api/src/openssl/X509__StoreContext")
(find-rurima "--- current_cert -> OpenSSL::X509::Certificate" "== Instance Methods" "= class OpenSSL::X509::StoreContext < Object" "refm/api/src/openssl/X509__StoreContext")
(find-rurima "--- current_crl -> OpenSSL::X509::CRL | nil" "== Instance Methods" "= class OpenSSL::X509::StoreContext < Object" "refm/api/src/openssl/X509__StoreContext")
(find-rurima "--- error -> Integer" "== Instance Methods" "= class OpenSSL::X509::StoreContext < Object" "refm/api/src/openssl/X509__StoreContext")
(find-rurima "--- error=(error)" "== Instance Methods" "= class OpenSSL::X509::StoreContext < Object" "refm/api/src/openssl/X509__StoreContext")
(find-rurima "--- error_depth -> Integer" "== Instance Methods" "= class OpenSSL::X509::StoreContext < Object" "refm/api/src/openssl/X509__StoreContext")
(find-rurima "--- error_string -> String" "== Instance Methods" "= class OpenSSL::X509::StoreContext < Object" "refm/api/src/openssl/X509__StoreContext")
(find-rurima "--- flags=(flags)" "== Instance Methods" "= class OpenSSL::X509::StoreContext < Object" "refm/api/src/openssl/X509__StoreContext")
(find-rurima "--- purpose=" "== Instance Methods" "= class OpenSSL::X509::StoreContext < Object" "refm/api/src/openssl/X509__StoreContext")
(find-rurima "--- time=" "== Instance Methods" "= class OpenSSL::X509::StoreContext < Object" "refm/api/src/openssl/X509__StoreContext")
(find-rurima "--- trust=(trust)" "== Instance Methods" "= class OpenSSL::X509::StoreContext < Object" "refm/api/src/openssl/X509__StoreContext")
(find-rurima "--- verify -> bool" "== Instance Methods" "= class OpenSSL::X509::StoreContext < Object" "refm/api/src/openssl/X509__StoreContext")
(find-rurima "= module OpenSSL::OCSP" "refm/api/src/openssl/OCSP")
(find-rurima "=== 例" "= module OpenSSL::OCSP" "refm/api/src/openssl/OCSP")
(find-rurima "== Constants" "= module OpenSSL::OCSP" "refm/api/src/openssl/OCSP")
(find-rurima "--- NOCASIGN -> Integer" "== Constants" "= module OpenSSL::OCSP" "refm/api/src/openssl/OCSP")
(find-rurima "--- NOCERTS -> Integer" "== Constants" "= module OpenSSL::OCSP" "refm/api/src/openssl/OCSP")
(find-rurima "--- NOCHAIN -> Integer" "== Constants" "= module OpenSSL::OCSP" "refm/api/src/openssl/OCSP")
(find-rurima "--- NOCHECKS -> Integer" "== Constants" "= module OpenSSL::OCSP" "refm/api/src/openssl/OCSP")
(find-rurima "--- NODELEGATED -> Integer" "== Constants" "= module OpenSSL::OCSP" "refm/api/src/openssl/OCSP")
(find-rurima "--- NOEXPLICIT -> Integer" "== Constants" "= module OpenSSL::OCSP" "refm/api/src/openssl/OCSP")
(find-rurima "--- NOINTERN -> Integer" "== Constants" "= module OpenSSL::OCSP" "refm/api/src/openssl/OCSP")
(find-rurima "--- NOSIGS -> Integer" "== Constants" "= module OpenSSL::OCSP" "refm/api/src/openssl/OCSP")
(find-rurima "--- NOTIME -> Integer" "== Constants" "= module OpenSSL::OCSP" "refm/api/src/openssl/OCSP")
(find-rurima "--- NOVERIFY -> Integer" "== Constants" "= module OpenSSL::OCSP" "refm/api/src/openssl/OCSP")
(find-rurima "--- RESPID_KEY -> Integer" "== Constants" "= module OpenSSL::OCSP" "refm/api/src/openssl/OCSP")
(find-rurima "--- RESPONSE_STATUS_INTERNALERROR -> Integer" "== Constants" "= module OpenSSL::OCSP" "refm/api/src/openssl/OCSP")
(find-rurima "--- RESPONSE_STATUS_MALFORMEDREQUEST -> Integer" "== Constants" "= module OpenSSL::OCSP" "refm/api/src/openssl/OCSP")
(find-rurima "--- RESPONSE_STATUS_SIGREQUIRED -> Integer" "== Constants" "= module OpenSSL::OCSP" "refm/api/src/openssl/OCSP")
(find-rurima "--- RESPONSE_STATUS_SUCCESSFUL -> Integer" "== Constants" "= module OpenSSL::OCSP" "refm/api/src/openssl/OCSP")
(find-rurima "--- RESPONSE_STATUS_TRYLATER -> Integer" "== Constants" "= module OpenSSL::OCSP" "refm/api/src/openssl/OCSP")
(find-rurima "--- RESPONSE_STATUS_UNAUTHORIZED -> Integer" "== Constants" "= module OpenSSL::OCSP" "refm/api/src/openssl/OCSP")
(find-rurima "--- REVOKED_STATUS_AFFILIATIONCHANGED -> Integer" "== Constants" "= module OpenSSL::OCSP" "refm/api/src/openssl/OCSP")
(find-rurima "--- REVOKED_STATUS_CACOMPROMISE -> Integer" "== Constants" "= module OpenSSL::OCSP" "refm/api/src/openssl/OCSP")
(find-rurima "--- REVOKED_STATUS_CERTIFICATEHOLD -> Integer" "== Constants" "= module OpenSSL::OCSP" "refm/api/src/openssl/OCSP")
(find-rurima "--- REVOKED_STATUS_CESSATIONOFOPERATION -> Integer" "== Constants" "= module OpenSSL::OCSP" "refm/api/src/openssl/OCSP")
(find-rurima "--- REVOKED_STATUS_KEYCOMPROMISE -> Integer" "== Constants" "= module OpenSSL::OCSP" "refm/api/src/openssl/OCSP")
(find-rurima "--- REVOKED_STATUS_NOSTATUS -> Integer" "== Constants" "= module OpenSSL::OCSP" "refm/api/src/openssl/OCSP")
(find-rurima "--- REVOKED_STATUS_REMOVEFROMCRL -> Integer" "== Constants" "= module OpenSSL::OCSP" "refm/api/src/openssl/OCSP")
(find-rurima "--- REVOKED_STATUS_SUPERSEDED -> Integer" "== Constants" "= module OpenSSL::OCSP" "refm/api/src/openssl/OCSP")
(find-rurima "--- REVOKED_STATUS_UNSPECIFIED -> Integer" "== Constants" "= module OpenSSL::OCSP" "refm/api/src/openssl/OCSP")
(find-rurima "--- TRUSTOTHER -> Integer" "== Constants" "= module OpenSSL::OCSP" "refm/api/src/openssl/OCSP")
(find-rurima "--- V_CERTSTATUS_GOOD -> Integer" "== Constants" "= module OpenSSL::OCSP" "refm/api/src/openssl/OCSP")
(find-rurima "--- V_CERTSTATUS_REVOKED -> Integer" "== Constants" "= module OpenSSL::OCSP" "refm/api/src/openssl/OCSP")
(find-rurima "--- V_CERTSTATUS_UNKNOWN -> Integer" "== Constants" "= module OpenSSL::OCSP" "refm/api/src/openssl/OCSP")
(find-rurima "= class OpenSSL::OCSP::OCSPError < OpenSSL::OpenSSLError" "refm/api/src/openssl/OCSP")
(find-rurima "= class OpenSSL::OCSP::BasicResponse < Object" "refm/api/src/openssl/OCSP")
(find-rurima "== Class Methods" "= class OpenSSL::OCSP::BasicResponse < Object" "refm/api/src/openssl/OCSP")
(find-rurima "--- new -> OpenSSL::OCSP::BasicResponse" "== Class Methods" "= class OpenSSL::OCSP::BasicResponse < Object" "refm/api/src/openssl/OCSP")
(find-rurima "== Instance Methods" "= class OpenSSL::OCSP::BasicResponse < Object" "refm/api/src/openssl/OCSP")
(find-rurima "--- add_nonce(val=nil) -> self" "== Instance Methods" "= class OpenSSL::OCSP::BasicResponse < Object" "refm/api/src/openssl/OCSP")
(find-rurima "--- add_status(cid, status, reason, revtime, thisupd, nextupd, exts) -> self" "== Instance Methods" "= class OpenSSL::OCSP::BasicResponse < Object" "refm/api/src/openssl/OCSP")
(find-rurima "--- copy_nonce(request) -> Integer" "== Instance Methods" "= class OpenSSL::OCSP::BasicResponse < Object" "refm/api/src/openssl/OCSP")
(find-rurima "--- sign(signer_cert, signer_key, certs = [], flags=0) -> self" "== Instance Methods" "= class OpenSSL::OCSP::BasicResponse < Object" "refm/api/src/openssl/OCSP")
(find-rurima "--- status -> [[OpenSSL::OCSP::CertificateId, Integer, Integer, Time|nil, Time, Time|nil, [OpenSSL::X509::Extension]]]" "== Instance Methods" "= class OpenSSL::OCSP::BasicResponse < Object" "refm/api/src/openssl/OCSP")
(find-rurima "--- verify(certs, store, flags=0) -> bool" "== Instance Methods" "= class OpenSSL::OCSP::BasicResponse < Object" "refm/api/src/openssl/OCSP")
(find-rurima "= class OpenSSL::OCSP::CertificateId < Object" "refm/api/src/openssl/OCSP")
(find-rurima "== Class Methods" "= class OpenSSL::OCSP::CertificateId < Object" "refm/api/src/openssl/OCSP")
(find-rurima "--- new(subject, issuer) -> OpenSSL::OCSP::CertificateId" "== Class Methods" "= class OpenSSL::OCSP::CertificateId < Object" "refm/api/src/openssl/OCSP")
(find-rurima "--- new(subject, issuer, digest=nil) -> OpenSSL::OCSP::CertificateId" "== Class Methods" "= class OpenSSL::OCSP::CertificateId < Object" "refm/api/src/openssl/OCSP")
(find-rurima "== Instance Methods" "= class OpenSSL::OCSP::CertificateId < Object" "refm/api/src/openssl/OCSP")
(find-rurima "--- cmp(other) -> bool" "== Instance Methods" "= class OpenSSL::OCSP::CertificateId < Object" "refm/api/src/openssl/OCSP")
(find-rurima "--- cmp_issuer(other) -> bool" "== Instance Methods" "= class OpenSSL::OCSP::CertificateId < Object" "refm/api/src/openssl/OCSP")
(find-rurima "--- serial -> OpenSSL::BN" "== Instance Methods" "= class OpenSSL::OCSP::CertificateId < Object" "refm/api/src/openssl/OCSP")
(find-rurima "= class OpenSSL::OCSP::Request < Object" "refm/api/src/openssl/OCSP")
(find-rurima "== Class Methods" "= class OpenSSL::OCSP::Request < Object" "refm/api/src/openssl/OCSP")
(find-rurima "--- new -> OpenSSL::OCSP::Request" "== Class Methods" "= class OpenSSL::OCSP::Request < Object" "refm/api/src/openssl/OCSP")
(find-rurima "--- new(der) -> OpenSSL::OCSP::Request" "== Class Methods" "= class OpenSSL::OCSP::Request < Object" "refm/api/src/openssl/OCSP")
(find-rurima "== Instance Methods" "= class OpenSSL::OCSP::Request < Object" "refm/api/src/openssl/OCSP")
(find-rurima "--- add_certid(cid) -> self" "== Instance Methods" "= class OpenSSL::OCSP::Request < Object" "refm/api/src/openssl/OCSP")
(find-rurima "--- add_nonce(nonce = nil) -> self" "== Instance Methods" "= class OpenSSL::OCSP::Request < Object" "refm/api/src/openssl/OCSP")
(find-rurima "--- certid -> [OpenSSL::OCSP::CertificateId]" "== Instance Methods" "= class OpenSSL::OCSP::Request < Object" "refm/api/src/openssl/OCSP")
(find-rurima "--- check_nonce(basic_resp) -> Integer" "== Instance Methods" "= class OpenSSL::OCSP::Request < Object" "refm/api/src/openssl/OCSP")
(find-rurima "--- sign(signer_cert, signer_key, certs=nil, flags=nil) -> self" "== Instance Methods" "= class OpenSSL::OCSP::Request < Object" "refm/api/src/openssl/OCSP")
(find-rurima "--- to_der -> String" "== Instance Methods" "= class OpenSSL::OCSP::Request < Object" "refm/api/src/openssl/OCSP")
(find-rurima "--- verify(certs, store, flags=0) -> bool" "== Instance Methods" "= class OpenSSL::OCSP::Request < Object" "refm/api/src/openssl/OCSP")
(find-rurima "= class OpenSSL::OCSP::Response < Object" "refm/api/src/openssl/OCSP")
(find-rurima "== Class Methods" "= class OpenSSL::OCSP::Response < Object" "refm/api/src/openssl/OCSP")
(find-rurima "--- new -> OpenSSL::OCSP::Response" "== Class Methods" "= class OpenSSL::OCSP::Response < Object" "refm/api/src/openssl/OCSP")
(find-rurima "--- new(der) -> OpenSSL::OCSP::Response" "== Class Methods" "= class OpenSSL::OCSP::Response < Object" "refm/api/src/openssl/OCSP")
(find-rurima "--- create(status, basic_resp) -> OpenSSL::OCSP::Response" "== Class Methods" "= class OpenSSL::OCSP::Response < Object" "refm/api/src/openssl/OCSP")
(find-rurima "== Instance Methods" "= class OpenSSL::OCSP::Response < Object" "refm/api/src/openssl/OCSP")
(find-rurima "--- basic -> OpenSSL::OCSP::BasicResponse | nil" "== Instance Methods" "= class OpenSSL::OCSP::Response < Object" "refm/api/src/openssl/OCSP")
(find-rurima "--- status  -> Integer" "== Instance Methods" "= class OpenSSL::OCSP::Response < Object" "refm/api/src/openssl/OCSP")
(find-rurima "--- status_string -> String" "== Instance Methods" "= class OpenSSL::OCSP::Response < Object" "refm/api/src/openssl/OCSP")
(find-rurima "--- to_der -> String" "== Instance Methods" "= class OpenSSL::OCSP::Response < Object" "refm/api/src/openssl/OCSP")
(find-rurima "= module OpenSSL::SSL::SocketForwarder " "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "== Instance Methods" "= module OpenSSL::SSL::SocketForwarder " "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "--- addr -> Array" "== Instance Methods" "= module OpenSSL::SSL::SocketForwarder " "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "--- peeraddr -> Array" "== Instance Methods" "= module OpenSSL::SSL::SocketForwarder " "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "--- setsockopt(level, optname, optval) -> 0" "== Instance Methods" "= module OpenSSL::SSL::SocketForwarder " "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "--- getsockopt(level, optname) -> String" "== Instance Methods" "= module OpenSSL::SSL::SocketForwarder " "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "--- fcntl(cmd, arg=0) -> Integer" "== Instance Methods" "= module OpenSSL::SSL::SocketForwarder " "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "--- closed? -> bool" "== Instance Methods" "= module OpenSSL::SSL::SocketForwarder " "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "--- do_not_reverse_lookup=(bool)" "== Instance Methods" "= module OpenSSL::SSL::SocketForwarder " "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "= module OpenSSL::Buffering" "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "=== IO との違い" "= module OpenSSL::Buffering" "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "== Instance Methods" "= module OpenSSL::Buffering" "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "--- <<(s) -> self" "== Instance Methods" "= module OpenSSL::Buffering" "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "--- close -> nil" "== Instance Methods" "= module OpenSSL::Buffering" "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "--- each(eol=$/){|line| ... } -> ()" "== Instance Methods" "= module OpenSSL::Buffering" "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "--- each_line(eol=$/){|line| ... } -> ()" "== Instance Methods" "= module OpenSSL::Buffering" "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "--- each_byte{|ch| ... } -> ()" "== Instance Methods" "= module OpenSSL::Buffering" "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "--- eof? -> bool" "== Instance Methods" "= module OpenSSL::Buffering" "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "--- eof -> bool" "== Instance Methods" "= module OpenSSL::Buffering" "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "--- flush -> ()" "== Instance Methods" "= module OpenSSL::Buffering" "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "--- getc -> Integer | nil" "== Instance Methods" "= module OpenSSL::Buffering" "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "--- getc -> String | nil" "== Instance Methods" "= module OpenSSL::Buffering" "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "--- gets(eol=$/, limit=nil) -> String | nil" "== Instance Methods" "= module OpenSSL::Buffering" "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "--- print(*args) -> nil" "== Instance Methods" "= module OpenSSL::Buffering" "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "--- printf(format, *args) -> nil" "== Instance Methods" "= module OpenSSL::Buffering" "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "--- puts(*objs) -> nil" "== Instance Methods" "= module OpenSSL::Buffering" "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "--- read(length=nil, buf=nil) -> String | nil" "== Instance Methods" "= module OpenSSL::Buffering" "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "--- readchar -> String" "== Instance Methods" "= module OpenSSL::Buffering" "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "--- readlines(eol=$/) -> [String]" "== Instance Methods" "= module OpenSSL::Buffering" "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "--- ungetc(char) -> ()" "== Instance Methods" "= module OpenSSL::Buffering" "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "--- write(str) -> Integer" "== Instance Methods" "= module OpenSSL::Buffering" "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "--- readline(eol=$/) -> String" "== Instance Methods" "= module OpenSSL::Buffering" "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "--- read_nonblock(maxlen, buf) -> String" "== Instance Methods" "= module OpenSSL::Buffering" "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "--- write_nonblock(s) -> Integer" "== Instance Methods" "= module OpenSSL::Buffering" "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "--- readpartial(maxlen, buf=nil) -> String | nil" "== Instance Methods" "= module OpenSSL::Buffering" "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "--- sync -> bool" "== Instance Methods" "= module OpenSSL::Buffering" "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "--- sync=(sync)" "== Instance Methods" "= module OpenSSL::Buffering" "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "== Constants" "= module OpenSSL::Buffering" "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "--- BLOCK_SIZE -> Integer" "== Constants" "= module OpenSSL::Buffering" "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "= class OpenSSL::SSL::SSLSocket < Object" "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "=== 例" "= class OpenSSL::SSL::SSLSocket < Object" "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "== Class Methods" "= class OpenSSL::SSL::SSLSocket < Object" "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "--- new(socket) -> OpenSSL::SSL::SSLSocket" "== Class Methods" "= class OpenSSL::SSL::SSLSocket < Object" "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "--- new(socket, context) -> OpenSSL::SSL::SSLSocket" "== Class Methods" "= class OpenSSL::SSL::SSLSocket < Object" "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "== Instance Methods" "= class OpenSSL::SSL::SSLSocket < Object" "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "--- io -> IO" "== Instance Methods" "= class OpenSSL::SSL::SSLSocket < Object" "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "--- to_io -> IO" "== Instance Methods" "= class OpenSSL::SSL::SSLSocket < Object" "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "--- context -> OpenSSL::SSL::SSLContext" "== Instance Methods" "= class OpenSSL::SSL::SSLSocket < Object" "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "--- sync_close -> bool" "== Instance Methods" "= class OpenSSL::SSL::SSLSocket < Object" "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "--- sync_close=(bool)" "== Instance Methods" "= class OpenSSL::SSL::SSLSocket < Object" "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "--- cert -> OpenSSL::X509::Certificate | nil" "== Instance Methods" "= class OpenSSL::SSL::SSLSocket < Object" "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "--- peer_cert -> OpenSSL::X509::Certificate | nil" "== Instance Methods" "= class OpenSSL::SSL::SSLSocket < Object" "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "--- peer_cert_chain -> [OpenSSL::X509::Certificate] | nil" "== Instance Methods" "= class OpenSSL::SSL::SSLSocket < Object" "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "--- state -> String" "== Instance Methods" "= class OpenSSL::SSL::SSLSocket < Object" "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "--- cipher -> [String, String, Integer, Integer]" "== Instance Methods" "= class OpenSSL::SSL::SSLSocket < Object" "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "--- pending -> Integer | nil" "== Instance Methods" "= class OpenSSL::SSL::SSLSocket < Object" "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "--- accept -> self" "== Instance Methods" "= class OpenSSL::SSL::SSLSocket < Object" "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "--- connect -> self" "== Instance Methods" "= class OpenSSL::SSL::SSLSocket < Object" "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "--- post_connection_check(hostname) -> true" "== Instance Methods" "= class OpenSSL::SSL::SSLSocket < Object" "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "--- sysclose -> nil" "== Instance Methods" "= class OpenSSL::SSL::SSLSocket < Object" "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "--- sysread(length, buf=nil) -> String" "== Instance Methods" "= class OpenSSL::SSL::SSLSocket < Object" "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "--- syswrite(string) -> Integer" "== Instance Methods" "= class OpenSSL::SSL::SSLSocket < Object" "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "--- accept_nonblock -> self" "== Instance Methods" "= class OpenSSL::SSL::SSLSocket < Object" "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "--- connect_nonblock -> self" "== Instance Methods" "= class OpenSSL::SSL::SSLSocket < Object" "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "--- hostname -> String | nil" "== Instance Methods" "= class OpenSSL::SSL::SSLSocket < Object" "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "--- hostname=(hostname)" "== Instance Methods" "= class OpenSSL::SSL::SSLSocket < Object" "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "--- session -> OpenSSL::SSL::Session" "== Instance Methods" "= class OpenSSL::SSL::SSLSocket < Object" "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "--- session=(sess)" "== Instance Methods" "= class OpenSSL::SSL::SSLSocket < Object" "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "--- session_reused? -> bool" "== Instance Methods" "= class OpenSSL::SSL::SSLSocket < Object" "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "--- verify_result -> Integer" "== Instance Methods" "= class OpenSSL::SSL::SSLSocket < Object" "refm/api/src/openssl/SSL__SSLSocket")
(find-rurima "= class OpenSSL::PKey::DSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__DSA")
(find-rurima "== Class Methods" "= class OpenSSL::PKey::DSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__DSA")
(find-rurima "--- generate(size) -> OpenSSL::PKey::DSA" "== Class Methods" "= class OpenSSL::PKey::DSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__DSA")
(find-rurima "--- generate(size){|u,n| ... } -> OpenSSL::PKey::DSA" "== Class Methods" "= class OpenSSL::PKey::DSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__DSA")
(find-rurima "--- new -> OpenSSL::PKey::DSA" "== Class Methods" "= class OpenSSL::PKey::DSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__DSA")
(find-rurima "--- new(size) -> OpenSSL::PKey::DSA" "== Class Methods" "= class OpenSSL::PKey::DSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__DSA")
(find-rurima "--- new(obj, pass=nil) -> OpenSSL::PKey::DSA" "== Class Methods" "= class OpenSSL::PKey::DSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__DSA")
(find-rurima "--- new(obj, pass=nil){|flag| ... } -> OpenSSL::PKey::DSA" "== Class Methods" "= class OpenSSL::PKey::DSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__DSA")
(find-rurima "== Instance Methods" "= class OpenSSL::PKey::DSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__DSA")
(find-rurima "--- export(cipher=nil, pass=nil) -> String" "== Instance Methods" "= class OpenSSL::PKey::DSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__DSA")
(find-rurima "--- export(cipher=nil, pass=nil){|flag| ... } -> String" "== Instance Methods" "= class OpenSSL::PKey::DSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__DSA")
(find-rurima "--- to_pem(cipher=nil, pass=nil) -> String" "== Instance Methods" "= class OpenSSL::PKey::DSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__DSA")
(find-rurima "--- to_pem(cipher=nil, pass=nil){|flag| ... } -> String" "== Instance Methods" "= class OpenSSL::PKey::DSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__DSA")
(find-rurima "--- to_s(cipher=nil, pass=nil) -> String" "== Instance Methods" "= class OpenSSL::PKey::DSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__DSA")
(find-rurima "--- to_s(cipher=nil, pass=nil){|flag| ... } -> String" "== Instance Methods" "= class OpenSSL::PKey::DSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__DSA")
(find-rurima "--- private? -> bool" "== Instance Methods" "= class OpenSSL::PKey::DSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__DSA")
(find-rurima "--- public? -> bool" "== Instance Methods" "= class OpenSSL::PKey::DSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__DSA")
(find-rurima "--- public_key -> OpenSSL::PKey::DSA" "== Instance Methods" "= class OpenSSL::PKey::DSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__DSA")
(find-rurima "--- to_der -> String" "== Instance Methods" "= class OpenSSL::PKey::DSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__DSA")
(find-rurima "--- to_text -> String" "== Instance Methods" "= class OpenSSL::PKey::DSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__DSA")
(find-rurima "--- syssign(data) -> String" "== Instance Methods" "= class OpenSSL::PKey::DSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__DSA")
(find-rurima "--- sysverify(data, sign) -> bool" "== Instance Methods" "= class OpenSSL::PKey::DSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__DSA")
(find-rurima "--- p -> OpenSSL::BN" "== Instance Methods" "= class OpenSSL::PKey::DSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__DSA")
(find-rurima "--- p=(p)" "== Instance Methods" "= class OpenSSL::PKey::DSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__DSA")
(find-rurima "--- q -> OpenSSL::BN" "== Instance Methods" "= class OpenSSL::PKey::DSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__DSA")
(find-rurima "--- q=(q)" "== Instance Methods" "= class OpenSSL::PKey::DSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__DSA")
(find-rurima "--- g -> OpenSSL::BN" "== Instance Methods" "= class OpenSSL::PKey::DSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__DSA")
(find-rurima "--- g=(g)" "== Instance Methods" "= class OpenSSL::PKey::DSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__DSA")
(find-rurima "--- pub_key -> OpenSSL::BN" "== Instance Methods" "= class OpenSSL::PKey::DSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__DSA")
(find-rurima "--- pub_key=(public_key)" "== Instance Methods" "= class OpenSSL::PKey::DSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__DSA")
(find-rurima "--- priv_key -> OpenSSL::BN" "== Instance Methods" "= class OpenSSL::PKey::DSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__DSA")
(find-rurima "--- priv_key=(private_key)" "== Instance Methods" "= class OpenSSL::PKey::DSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__DSA")
(find-rurima "--- params -> {String => OpenSSL::BN}" "== Instance Methods" "= class OpenSSL::PKey::DSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__DSA")
(find-rurima "= class OpenSSL::PKey::DSAError < OpenSSL::PKey::PKeyError" "refm/api/src/openssl/PKey__DSA")
(find-rurima "= class OpenSSL::ASN1::Primitive < OpenSSL::ASN1::ASN1Data" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "== Instance Methods" "= class OpenSSL::ASN1::Primitive < OpenSSL::ASN1::ASN1Data" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "--- tagging -> Symbol | nil" "== Instance Methods" "= class OpenSSL::ASN1::Primitive < OpenSSL::ASN1::ASN1Data" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "--- tagging=(tagging)" "== Instance Methods" "= class OpenSSL::ASN1::Primitive < OpenSSL::ASN1::ASN1Data" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "= class OpenSSL::ASN1::Boolean < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "== Class Methods" "= class OpenSSL::ASN1::Boolean < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "--- new(value) ->  OpenSSL::ASN1::Boolean" "== Class Methods" "= class OpenSSL::ASN1::Boolean < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "--- new(value, tag, tagging, tag_class) -> OpenSSL::ASN1::Boolean" "== Class Methods" "= class OpenSSL::ASN1::Boolean < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "= class OpenSSL::ASN1::Integer < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "== Class Methods" "= class OpenSSL::ASN1::Integer < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "--- new(value) ->  OpenSSL::ASN1::Integer" "== Class Methods" "= class OpenSSL::ASN1::Integer < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "--- new(value, tag, tagging, tag_class) -> OpenSSL::ASN1::Integer" "== Class Methods" "= class OpenSSL::ASN1::Integer < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "= class OpenSSL::ASN1::Enumerated < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "== Class Methods" "= class OpenSSL::ASN1::Enumerated < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "--- new(value) ->  OpenSSL::ASN1::Boolean" "== Class Methods" "= class OpenSSL::ASN1::Enumerated < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "--- new(value, tag, tagging, tag_class) -> OpenSSL::ASN1::Boolean" "== Class Methods" "= class OpenSSL::ASN1::Enumerated < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "= class OpenSSL::ASN1::BitString < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "== Class Methods" "= class OpenSSL::ASN1::BitString < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "--- new(value) ->  OpenSSL::ASN1::BitString" "== Class Methods" "= class OpenSSL::ASN1::BitString < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "--- new(value, tag, tagging, tag_class) -> OpenSSL::ASN1::BitString" "== Class Methods" "= class OpenSSL::ASN1::BitString < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "--- unused_bits -> Integer | nil" "== Class Methods" "= class OpenSSL::ASN1::BitString < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "--- unused_bits=(b)" "== Class Methods" "= class OpenSSL::ASN1::BitString < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "= class OpenSSL::ASN1::OctetString < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "== Class Methods" "= class OpenSSL::ASN1::OctetString < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "--- new(value) ->  OpenSSL::ASN1::OctetString" "== Class Methods" "= class OpenSSL::ASN1::OctetString < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "--- new(value, tag, tagging, tag_class) -> OpenSSL::ASN1::OctetString" "== Class Methods" "= class OpenSSL::ASN1::OctetString < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "= class OpenSSL::ASN1::UTF8String < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "== Class Methods" "= class OpenSSL::ASN1::UTF8String < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "--- new(value) ->  OpenSSL::ASN1::UTF8String" "== Class Methods" "= class OpenSSL::ASN1::UTF8String < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "--- new(value, tag, tagging, tag_class) -> OpenSSL::ASN1::UTF8String" "== Class Methods" "= class OpenSSL::ASN1::UTF8String < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "= class OpenSSL::ASN1::NumericString < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "== Class Methods" "= class OpenSSL::ASN1::NumericString < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "--- new(value) ->  OpenSSL::ASN1::NumericString" "== Class Methods" "= class OpenSSL::ASN1::NumericString < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "--- new(value, tag, tagging, tag_class) -> OpenSSL::ASN1::NumericString" "== Class Methods" "= class OpenSSL::ASN1::NumericString < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "= class OpenSSL::ASN1::PrintableString < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "== Class Methods" "= class OpenSSL::ASN1::PrintableString < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "--- new(value) ->  OpenSSL::ASN1::PrintableString" "== Class Methods" "= class OpenSSL::ASN1::PrintableString < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "--- new(value, tag, tagging, tag_class) -> OpenSSL::ASN1::PrintableString" "== Class Methods" "= class OpenSSL::ASN1::PrintableString < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "= class OpenSSL::ASN1::T61String < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "== Class Methods" "= class OpenSSL::ASN1::T61String < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "--- new(value) ->  OpenSSL::ASN1::T61String" "== Class Methods" "= class OpenSSL::ASN1::T61String < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "--- new(value, tag, tagging, tag_class) -> OpenSSL::ASN1::T61String" "== Class Methods" "= class OpenSSL::ASN1::T61String < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "= class OpenSSL::ASN1::VideotexString < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "== Class Methods" "= class OpenSSL::ASN1::VideotexString < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "--- new(value) ->  OpenSSL::ASN1::VideotexString" "== Class Methods" "= class OpenSSL::ASN1::VideotexString < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "--- new(value, tag, tagging, tag_class) -> OpenSSL::ASN1::VideotexString" "== Class Methods" "= class OpenSSL::ASN1::VideotexString < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "= class OpenSSL::ASN1::IA5String < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "== Class Methods" "= class OpenSSL::ASN1::IA5String < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "--- new(value) ->  OpenSSL::ASN1::IA5String" "== Class Methods" "= class OpenSSL::ASN1::IA5String < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "--- new(value, tag, tagging, tag_class) -> OpenSSL::ASN1::IA5String" "== Class Methods" "= class OpenSSL::ASN1::IA5String < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "= class OpenSSL::ASN1::GraphicString < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "== Class Methods" "= class OpenSSL::ASN1::GraphicString < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "--- new(value) ->  OpenSSL::ASN1::GraphicString" "== Class Methods" "= class OpenSSL::ASN1::GraphicString < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "--- new(value, tag, tagging, tag_class) -> OpenSSL::ASN1::GraphicString" "== Class Methods" "= class OpenSSL::ASN1::GraphicString < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "= class OpenSSL::ASN1::ISO64String < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "== Class Methods" "= class OpenSSL::ASN1::ISO64String < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "--- new(value) ->  OpenSSL::ASN1::ISO64String" "== Class Methods" "= class OpenSSL::ASN1::ISO64String < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "--- new(value, tag, tagging, tag_class) -> OpenSSL::ASN1::ISO64String" "== Class Methods" "= class OpenSSL::ASN1::ISO64String < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "= class OpenSSL::ASN1::GeneralString < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "== Class Methods" "= class OpenSSL::ASN1::GeneralString < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "--- new(value) ->  OpenSSL::ASN1::GeneralString" "== Class Methods" "= class OpenSSL::ASN1::GeneralString < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "--- new(value, tag, tagging, tag_class) -> OpenSSL::ASN1::GeneralString" "== Class Methods" "= class OpenSSL::ASN1::GeneralString < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "= class OpenSSL::ASN1::UniversalString < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "== Class Methods" "= class OpenSSL::ASN1::UniversalString < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "--- new(value) ->  OpenSSL::ASN1::UniversalString" "== Class Methods" "= class OpenSSL::ASN1::UniversalString < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "--- new(value, tag, tagging, tag_class) -> OpenSSL::ASN1::UniversalString" "== Class Methods" "= class OpenSSL::ASN1::UniversalString < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "= class OpenSSL::ASN1::BMPString < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "== Class Methods" "= class OpenSSL::ASN1::BMPString < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "--- new(value) ->  OpenSSL::ASN1::BMPString" "== Class Methods" "= class OpenSSL::ASN1::BMPString < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "--- new(value, tag, tagging, tag_class) -> OpenSSL::ASN1::BMPString" "== Class Methods" "= class OpenSSL::ASN1::BMPString < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "= class OpenSSL::ASN1::Null < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "== Class Methods" "= class OpenSSL::ASN1::Null < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "--- new(value) ->  OpenSSL::ASN1::Null" "== Class Methods" "= class OpenSSL::ASN1::Null < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "--- new(value, tag, tagging, tag_class) -> OpenSSL::ASN1::Null" "== Class Methods" "= class OpenSSL::ASN1::Null < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "= class OpenSSL::ASN1::UTCTime < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "== Class Methods" "= class OpenSSL::ASN1::UTCTime < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "--- new(value) ->  OpenSSL::ASN1::UTCTime" "== Class Methods" "= class OpenSSL::ASN1::UTCTime < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "--- new(value, tag, tagging, tag_class) -> OpenSSL::ASN1::UTCTime" "== Class Methods" "= class OpenSSL::ASN1::UTCTime < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "= class OpenSSL::ASN1::GeneralizedTime < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "== Class Methods" "= class OpenSSL::ASN1::GeneralizedTime < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "--- new(value) ->  OpenSSL::ASN1::GeneralizedTime" "== Class Methods" "= class OpenSSL::ASN1::GeneralizedTime < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "--- new(value, tag, tagging, tag_class) -> OpenSSL::ASN1::GeneralizedTime" "== Class Methods" "= class OpenSSL::ASN1::GeneralizedTime < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__Primitive")
(find-rurima "= class OpenSSL::SSL::Session" "refm/api/src/openssl/SSL__Session")
(find-rurima "=== クライアント側のセッションキャッシュ" "= class OpenSSL::SSL::Session" "refm/api/src/openssl/SSL__Session")
(find-rurima "=== サーバ側のセッションキャッシュ" "= class OpenSSL::SSL::Session" "refm/api/src/openssl/SSL__Session")
(find-rurima "== Class Methods" "= class OpenSSL::SSL::Session" "refm/api/src/openssl/SSL__Session")
(find-rurima "--- new(obj) -> OpenSSL::SSL::Session" "== Class Methods" "= class OpenSSL::SSL::Session" "refm/api/src/openssl/SSL__Session")
(find-rurima "== Instance Methods" "= class OpenSSL::SSL::Session" "refm/api/src/openssl/SSL__Session")
(find-rurima "--- ==(ohter) -> bool" "== Instance Methods" "= class OpenSSL::SSL::Session" "refm/api/src/openssl/SSL__Session")
(find-rurima "--- time -> Time" "== Instance Methods" "= class OpenSSL::SSL::Session" "refm/api/src/openssl/SSL__Session")
(find-rurima "--- time=(t)" "== Instance Methods" "= class OpenSSL::SSL::Session" "refm/api/src/openssl/SSL__Session")
(find-rurima "--- timeout -> Integer" "== Instance Methods" "= class OpenSSL::SSL::Session" "refm/api/src/openssl/SSL__Session")
(find-rurima "--- timeout=(t)" "== Instance Methods" "= class OpenSSL::SSL::Session" "refm/api/src/openssl/SSL__Session")
(find-rurima "--- id -> String" "== Instance Methods" "= class OpenSSL::SSL::Session" "refm/api/src/openssl/SSL__Session")
(find-rurima "--- to_der -> String" "== Instance Methods" "= class OpenSSL::SSL::Session" "refm/api/src/openssl/SSL__Session")
(find-rurima "--- to_pem -> String" "== Instance Methods" "= class OpenSSL::SSL::Session" "refm/api/src/openssl/SSL__Session")
(find-rurima "--- to_text -> String" "== Instance Methods" "= class OpenSSL::SSL::Session" "refm/api/src/openssl/SSL__Session")
(find-rurima "= class OpenSSL::SSL::Session::SessionError < OpenSSL::OpenSSLError" "refm/api/src/openssl/SSL__Session")
(find-rurima "= class OpenSSL::X509::CRL < Object" "refm/api/src/openssl/X509__CRL")
(find-rurima "== Class Methods" "= class OpenSSL::X509::CRL < Object" "refm/api/src/openssl/X509__CRL")
(find-rurima "--- new -> OpenSSL::X509::CRL" "== Class Methods" "= class OpenSSL::X509::CRL < Object" "refm/api/src/openssl/X509__CRL")
(find-rurima "--- new(obj) -> OpenSSL::X509::CRL" "== Class Methods" "= class OpenSSL::X509::CRL < Object" "refm/api/src/openssl/X509__CRL")
(find-rurima "== Instance Methods" "= class OpenSSL::X509::CRL < Object" "refm/api/src/openssl/X509__CRL")
(find-rurima "--- version -> Integer" "== Instance Methods" "= class OpenSSL::X509::CRL < Object" "refm/api/src/openssl/X509__CRL")
(find-rurima "--- version=(version)" "== Instance Methods" "= class OpenSSL::X509::CRL < Object" "refm/api/src/openssl/X509__CRL")
(find-rurima "--- signature_algorithm -> String" "== Instance Methods" "= class OpenSSL::X509::CRL < Object" "refm/api/src/openssl/X509__CRL")
(find-rurima "--- issuer -> OpenSSL::X509::Name" "== Instance Methods" "= class OpenSSL::X509::CRL < Object" "refm/api/src/openssl/X509__CRL")
(find-rurima "--- issuer=(issuer)" "== Instance Methods" "= class OpenSSL::X509::CRL < Object" "refm/api/src/openssl/X509__CRL")
(find-rurima "--- last_update -> Time" "== Instance Methods" "= class OpenSSL::X509::CRL < Object" "refm/api/src/openssl/X509__CRL")
(find-rurima "--- last_update=(time)" "== Instance Methods" "= class OpenSSL::X509::CRL < Object" "refm/api/src/openssl/X509__CRL")
(find-rurima "--- next_update -> Time" "== Instance Methods" "= class OpenSSL::X509::CRL < Object" "refm/api/src/openssl/X509__CRL")
(find-rurima "--- next_update=(time)" "== Instance Methods" "= class OpenSSL::X509::CRL < Object" "refm/api/src/openssl/X509__CRL")
(find-rurima "--- revoked -> [OpenSSL::X509::Revoked]" "== Instance Methods" "= class OpenSSL::X509::CRL < Object" "refm/api/src/openssl/X509__CRL")
(find-rurima "--- revoked=(revs)" "== Instance Methods" "= class OpenSSL::X509::CRL < Object" "refm/api/src/openssl/X509__CRL")
(find-rurima "--- add_revoked(rev) -> OpenSSL::X509::Revoked" "== Instance Methods" "= class OpenSSL::X509::CRL < Object" "refm/api/src/openssl/X509__CRL")
(find-rurima "--- sign(pkey, digest) -> self" "== Instance Methods" "= class OpenSSL::X509::CRL < Object" "refm/api/src/openssl/X509__CRL")
(find-rurima "--- verify(key) -> bool" "== Instance Methods" "= class OpenSSL::X509::CRL < Object" "refm/api/src/openssl/X509__CRL")
(find-rurima "--- to_der -> String" "== Instance Methods" "= class OpenSSL::X509::CRL < Object" "refm/api/src/openssl/X509__CRL")
(find-rurima "--- to_pem -> String" "== Instance Methods" "= class OpenSSL::X509::CRL < Object" "refm/api/src/openssl/X509__CRL")
(find-rurima "--- to_s -> String" "== Instance Methods" "= class OpenSSL::X509::CRL < Object" "refm/api/src/openssl/X509__CRL")
(find-rurima "--- to_text -> String" "== Instance Methods" "= class OpenSSL::X509::CRL < Object" "refm/api/src/openssl/X509__CRL")
(find-rurima "--- extensions -> [OpenSSL::X509::Extension]" "== Instance Methods" "= class OpenSSL::X509::CRL < Object" "refm/api/src/openssl/X509__CRL")
(find-rurima "--- extensions=(extensions)" "== Instance Methods" "= class OpenSSL::X509::CRL < Object" "refm/api/src/openssl/X509__CRL")
(find-rurima "--- add_extension(ex) -> OpenSSL::X509::Extension" "== Instance Methods" "= class OpenSSL::X509::CRL < Object" "refm/api/src/openssl/X509__CRL")
(find-rurima "= class OpenSSL::X509::CRLError < OpenSSL::OpenSSLError" "refm/api/src/openssl/X509__CRL")
(find-rurima "= class OpenSSL::ASN1::ObjectId < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__ObjectId")
(find-rurima "== Class Methods" "= class OpenSSL::ASN1::ObjectId < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__ObjectId")
(find-rurima "--- new(value) -> OpenSSL::ASN1::ObjectId" "== Class Methods" "= class OpenSSL::ASN1::ObjectId < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__ObjectId")
(find-rurima "--- new(value, tag, tagging, tag_class) -> OpenSSL::ASN1::ObjectId" "== Class Methods" "= class OpenSSL::ASN1::ObjectId < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__ObjectId")
(find-rurima "--- register(oid, short_name, long_name) -> true" "== Class Methods" "= class OpenSSL::ASN1::ObjectId < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__ObjectId")
(find-rurima "== Instance Methods" "= class OpenSSL::ASN1::ObjectId < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__ObjectId")
(find-rurima "--- oid -> String" "== Instance Methods" "= class OpenSSL::ASN1::ObjectId < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__ObjectId")
(find-rurima "--- sn -> String | nil" "== Instance Methods" "= class OpenSSL::ASN1::ObjectId < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__ObjectId")
(find-rurima "--- short_name -> String | nil" "== Instance Methods" "= class OpenSSL::ASN1::ObjectId < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__ObjectId")
(find-rurima "--- ln -> String | nil" "== Instance Methods" "= class OpenSSL::ASN1::ObjectId < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__ObjectId")
(find-rurima "--- long_name -> String | nil" "== Instance Methods" "= class OpenSSL::ASN1::ObjectId < OpenSSL::ASN1::Primitive" "refm/api/src/openssl/ASN1__ObjectId")
(find-rurima "= class OpenSSL::X509::ExtensionFactory < Object" "refm/api/src/openssl/X509__ExtensionFactory")
(find-rurima "== Class Methods" "= class OpenSSL::X509::ExtensionFactory < Object" "refm/api/src/openssl/X509__ExtensionFactory")
(find-rurima "--- new(issuer_cert=nil, subject_cert=nil, subject_req=nil, crl=nil) -> OpenSSL::X509::ExtensionFactory" "== Class Methods" "= class OpenSSL::X509::ExtensionFactory < Object" "refm/api/src/openssl/X509__ExtensionFactory")
(find-rurima "== Instance Methods" "= class OpenSSL::X509::ExtensionFactory < Object" "refm/api/src/openssl/X509__ExtensionFactory")
(find-rurima "--- create_ext(oid, value, critical = false)  -> OpenSSL::X509::Extension" "== Instance Methods" "= class OpenSSL::X509::ExtensionFactory < Object" "refm/api/src/openssl/X509__ExtensionFactory")
(find-rurima "--- create_extension(obj)  -> OpenSSL::X509::Extension" "== Instance Methods" "= class OpenSSL::X509::ExtensionFactory < Object" "refm/api/src/openssl/X509__ExtensionFactory")
(find-rurima "--- create_extension(oid, value, critical=false)  -> OpenSSL::X509::Extension" "== Instance Methods" "= class OpenSSL::X509::ExtensionFactory < Object" "refm/api/src/openssl/X509__ExtensionFactory")
(find-rurima "--- issuer_certificate -> OpenSSL::X509::Certificate | nil" "== Instance Methods" "= class OpenSSL::X509::ExtensionFactory < Object" "refm/api/src/openssl/X509__ExtensionFactory")
(find-rurima "--- issuer_certificate=(cert)" "== Instance Methods" "= class OpenSSL::X509::ExtensionFactory < Object" "refm/api/src/openssl/X509__ExtensionFactory")
(find-rurima "--- subject_certificate -> OpenSSL::X509::Certificate | nil" "== Instance Methods" "= class OpenSSL::X509::ExtensionFactory < Object" "refm/api/src/openssl/X509__ExtensionFactory")
(find-rurima "--- subject_certificate=(name)" "== Instance Methods" "= class OpenSSL::X509::ExtensionFactory < Object" "refm/api/src/openssl/X509__ExtensionFactory")
(find-rurima "--- subject_request -> OpenSSL::X509::Request | nil" "== Instance Methods" "= class OpenSSL::X509::ExtensionFactory < Object" "refm/api/src/openssl/X509__ExtensionFactory")
(find-rurima "--- subject_request=(req)" "== Instance Methods" "= class OpenSSL::X509::ExtensionFactory < Object" "refm/api/src/openssl/X509__ExtensionFactory")
(find-rurima "--- crl -> OpenSSL::X509::CRL | nil" "== Instance Methods" "= class OpenSSL::X509::ExtensionFactory < Object" "refm/api/src/openssl/X509__ExtensionFactory")
(find-rurima "--- crl=(crl)" "== Instance Methods" "= class OpenSSL::X509::ExtensionFactory < Object" "refm/api/src/openssl/X509__ExtensionFactory")
(find-rurima "--- config -> OpenSSL::Config" "== Instance Methods" "= class OpenSSL::X509::ExtensionFactory < Object" "refm/api/src/openssl/X509__ExtensionFactory")
(find-rurima "--- config=(config) " "== Instance Methods" "= class OpenSSL::X509::ExtensionFactory < Object" "refm/api/src/openssl/X509__ExtensionFactory")
(find-rurima "--- create_ext_from_array(ary) -> OpenSSL::X509::Extension" "== Instance Methods" "= class OpenSSL::X509::ExtensionFactory < Object" "refm/api/src/openssl/X509__ExtensionFactory")
(find-rurima "--- create_ext_from_hash(hash)  -> OpenSSL::X509::Extension" "== Instance Methods" "= class OpenSSL::X509::ExtensionFactory < Object" "refm/api/src/openssl/X509__ExtensionFactory")
(find-rurima "--- create_ext_from_string(str)  -> OpenSSL::X509::Extension" "== Instance Methods" "= class OpenSSL::X509::ExtensionFactory < Object" "refm/api/src/openssl/X509__ExtensionFactory")
(find-rurima "= class OpenSSL::X509::Name < Object" "refm/api/src/openssl/X509__Name")
(find-rurima "== Class Methods" "= class OpenSSL::X509::Name < Object" "refm/api/src/openssl/X509__Name")
(find-rurima "--- parse(str, template=OBJECT_TYPE_TEMPLATE) -> OpenSSL::X509::Name" "== Class Methods" "= class OpenSSL::X509::Name < Object" "refm/api/src/openssl/X509__Name")
(find-rurima "--- parse_openssl(str, template=OBJECT_TYPE_TEMPLATE) -> OpenSSL::X509::Name" "== Class Methods" "= class OpenSSL::X509::Name < Object" "refm/api/src/openssl/X509__Name")
(find-rurima "--- parse_rfc2253(str, template=OBJECT_TYPE_TEMPLATE) -> OpenSSL::X509::Name" "== Class Methods" "= class OpenSSL::X509::Name < Object" "refm/api/src/openssl/X509__Name")
(find-rurima "--- new -> OpenSSL::X509::Name" "== Class Methods" "= class OpenSSL::X509::Name < Object" "refm/api/src/openssl/X509__Name")
(find-rurima "--- new(ary, template = OBJECT_TYPE_TEMPLATE) -> OpenSSL::X509::Name" "== Class Methods" "= class OpenSSL::X509::Name < Object" "refm/api/src/openssl/X509__Name")
(find-rurima "--- new(obj) -> OpenSSL::X509::Name" "== Class Methods" "= class OpenSSL::X509::Name < Object" "refm/api/src/openssl/X509__Name")
(find-rurima "== Instance Methods" "= class OpenSSL::X509::Name < Object" "refm/api/src/openssl/X509__Name")
(find-rurima "--- add_entry(oid, value, type = nil)" "== Instance Methods" "= class OpenSSL::X509::Name < Object" "refm/api/src/openssl/X509__Name")
(find-rurima "--- to_s(flags=nil) -> String" "== Instance Methods" "= class OpenSSL::X509::Name < Object" "refm/api/src/openssl/X509__Name")
(find-rurima "--- to_a -> [[String, String, Integer]]" "== Instance Methods" "= class OpenSSL::X509::Name < Object" "refm/api/src/openssl/X509__Name")
(find-rurima "--- cmp(other) ->  -1 | 0 | 1 " "== Instance Methods" "= class OpenSSL::X509::Name < Object" "refm/api/src/openssl/X509__Name")
(find-rurima "--- <=>(ohter) ->  -1 | 0 | 1 " "== Instance Methods" "= class OpenSSL::X509::Name < Object" "refm/api/src/openssl/X509__Name")
(find-rurima "--- to_der -> String" "== Instance Methods" "= class OpenSSL::X509::Name < Object" "refm/api/src/openssl/X509__Name")
(find-rurima "== Constants" "= class OpenSSL::X509::Name < Object" "refm/api/src/openssl/X509__Name")
(find-rurima "--- OBJECT_TYPE_TEMPLATE -> { String => Integer }" "== Constants" "= class OpenSSL::X509::Name < Object" "refm/api/src/openssl/X509__Name")
(find-rurima "--- DEFAULT_OBJECT_TYPE -> Integer" "== Constants" "= class OpenSSL::X509::Name < Object" "refm/api/src/openssl/X509__Name")
(find-rurima "--- COMPAT -> Integer" "== Constants" "= class OpenSSL::X509::Name < Object" "refm/api/src/openssl/X509__Name")
(find-rurima "--- RFC2253 -> Integer" "== Constants" "= class OpenSSL::X509::Name < Object" "refm/api/src/openssl/X509__Name")
(find-rurima "--- ONELINE -> Integer" "== Constants" "= class OpenSSL::X509::Name < Object" "refm/api/src/openssl/X509__Name")
(find-rurima "--- MULTILINE -> Integer" "== Constants" "= class OpenSSL::X509::Name < Object" "refm/api/src/openssl/X509__Name")
(find-rurima "= class OpenSSL::X509::NameError < OpenSSL::OpenSSLError" "refm/api/src/openssl/X509__Name")
(find-rurima "= class OpenSSL::Digest::Digest < Object" "refm/api/src/openssl/Digest__Digest")
(find-rurima "== Class Methods" "= class OpenSSL::Digest::Digest < Object" "refm/api/src/openssl/Digest__Digest")
(find-rurima "--- new(name, data=nil) -> OpenSSL::Digest::Digest" "== Class Methods" "= class OpenSSL::Digest::Digest < Object" "refm/api/src/openssl/Digest__Digest")
(find-rurima "--- digest(name, data) -> String" "== Class Methods" "= class OpenSSL::Digest::Digest < Object" "refm/api/src/openssl/Digest__Digest")
(find-rurima "--- hexdigest(name, str) -> String" "== Class Methods" "= class OpenSSL::Digest::Digest < Object" "refm/api/src/openssl/Digest__Digest")
(find-rurima "== Instance Methods" "= class OpenSSL::Digest::Digest < Object" "refm/api/src/openssl/Digest__Digest")
(find-rurima "--- reset -> self" "== Instance Methods" "= class OpenSSL::Digest::Digest < Object" "refm/api/src/openssl/Digest__Digest")
(find-rurima "--- update(data) -> self" "== Instance Methods" "= class OpenSSL::Digest::Digest < Object" "refm/api/src/openssl/Digest__Digest")
(find-rurima "--- <<(data) -> self" "== Instance Methods" "= class OpenSSL::Digest::Digest < Object" "refm/api/src/openssl/Digest__Digest")
(find-rurima "--- size -> Integer" "== Instance Methods" "= class OpenSSL::Digest::Digest < Object" "refm/api/src/openssl/Digest__Digest")
(find-rurima "--- name -> String" "== Instance Methods" "= class OpenSSL::Digest::Digest < Object" "refm/api/src/openssl/Digest__Digest")
(find-rurima "--- digest -> String" "== Instance Methods" "= class OpenSSL::Digest::Digest < Object" "refm/api/src/openssl/Digest__Digest")
(find-rurima "--- hexdigest -> String" "== Instance Methods" "= class OpenSSL::Digest::Digest < Object" "refm/api/src/openssl/Digest__Digest")
(find-rurima "--- inspect -> String" "== Instance Methods" "= class OpenSSL::Digest::Digest < Object" "refm/api/src/openssl/Digest__Digest")
(find-rurima "--- to_s -> String" "== Instance Methods" "= class OpenSSL::Digest::Digest < Object" "refm/api/src/openssl/Digest__Digest")
(find-rurima "--- ==(digest) -> bool" "== Instance Methods" "= class OpenSSL::Digest::Digest < Object" "refm/api/src/openssl/Digest__Digest")
(find-rurima "= class OpenSSL::Digest::Digest < OpenSSL::Digest" "refm/api/src/openssl/Digest__Digest")
(find-rurima "== Class Methods" "= class OpenSSL::Digest::Digest < OpenSSL::Digest" "refm/api/src/openssl/Digest__Digest")
(find-rurima "--- new(*args) -> OpenSSL::Digest::Digest" "== Class Methods" "= class OpenSSL::Digest::Digest < OpenSSL::Digest" "refm/api/src/openssl/Digest__Digest")
(find-rurima "= class OpenSSL::PKey::RSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__RSA")
(find-rurima "== Class Methods" "= class OpenSSL::PKey::RSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__RSA")
(find-rurima "--- generate(size, exponent = 65537) -> OpenSSL::PKey::RSA" "== Class Methods" "= class OpenSSL::PKey::RSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__RSA")
(find-rurima "--- generate(size, exponent = 65537){|u,n| ... } -> OpenSSL::PKey::RSA" "== Class Methods" "= class OpenSSL::PKey::RSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__RSA")
(find-rurima "--- new -> OpenSSL::PKey::RSA" "== Class Methods" "= class OpenSSL::PKey::RSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__RSA")
(find-rurima "--- new(size, exponent = 65537) -> OpenSSL::PKey::RSA" "== Class Methods" "= class OpenSSL::PKey::RSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__RSA")
(find-rurima "--- new(size, exponent = 65537){|u,n| ... }  -> OpenSSL::PKey::RSA" "== Class Methods" "= class OpenSSL::PKey::RSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__RSA")
(find-rurima "--- new(obj, pass = nil) -> OpenSSL::PKey::RSA" "== Class Methods" "= class OpenSSL::PKey::RSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__RSA")
(find-rurima "--- new(obj, pass = nil){|flag| ... } -> OpenSSL::PKey::RSA" "== Class Methods" "= class OpenSSL::PKey::RSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__RSA")
(find-rurima "== Instance Methods" "= class OpenSSL::PKey::RSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__RSA")
(find-rurima "--- public? -> bool" "== Instance Methods" "= class OpenSSL::PKey::RSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__RSA")
(find-rurima "--- private? -> bool" "== Instance Methods" "= class OpenSSL::PKey::RSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__RSA")
(find-rurima "--- to_text -> String" "== Instance Methods" "= class OpenSSL::PKey::RSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__RSA")
(find-rurima "--- export(cipher=nil, pass=nil) -> String" "== Instance Methods" "= class OpenSSL::PKey::RSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__RSA")
(find-rurima "--- export(cipher=nil, pass=nil){|flag| ... } -> String" "== Instance Methods" "= class OpenSSL::PKey::RSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__RSA")
(find-rurima "--- to_pem(cipher=nil, pass=nil) -> String" "== Instance Methods" "= class OpenSSL::PKey::RSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__RSA")
(find-rurima "--- to_pem(cipher=nil, pass=nil){|flag| ... } -> String" "== Instance Methods" "= class OpenSSL::PKey::RSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__RSA")
(find-rurima "--- to_s(cipher=nil, pass=nil) -> String" "== Instance Methods" "= class OpenSSL::PKey::RSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__RSA")
(find-rurima "--- to_s(cipher=nil, pass=nil){|flag| ... } -> String" "== Instance Methods" "= class OpenSSL::PKey::RSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__RSA")
(find-rurima "--- to_der -> String" "== Instance Methods" "= class OpenSSL::PKey::RSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__RSA")
(find-rurima "--- public_key -> OpenSSL::PKey::RSA" "== Instance Methods" "= class OpenSSL::PKey::RSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__RSA")
(find-rurima "--- public_encrypt(str, mode = OpenSSL::PKey::RSA::PKCS1_PADDING) -> String" "== Instance Methods" "= class OpenSSL::PKey::RSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__RSA")
(find-rurima "--- public_decrypt(str, mode = OpenSSL::PKey::RSA::PKCS1_PADDING) -> String" "== Instance Methods" "= class OpenSSL::PKey::RSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__RSA")
(find-rurima "--- private_encrypt(str, mode = OpenSSL::PKey::RSA::PKCS1_PADDING) -> String" "== Instance Methods" "= class OpenSSL::PKey::RSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__RSA")
(find-rurima "--- private_decrypt(str, mode = OpenSSL::PKey::RSA::PKCS1_PADDING) -> String" "== Instance Methods" "= class OpenSSL::PKey::RSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__RSA")
(find-rurima "--- e -> OpenSSL::BN" "== Instance Methods" "= class OpenSSL::PKey::RSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__RSA")
(find-rurima "--- e=(new_e)" "== Instance Methods" "= class OpenSSL::PKey::RSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__RSA")
(find-rurima "--- iqmp -> OpenSSL::BN" "== Instance Methods" "= class OpenSSL::PKey::RSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__RSA")
(find-rurima "--- iqmp=(new_iqmp)" "== Instance Methods" "= class OpenSSL::PKey::RSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__RSA")
(find-rurima "--- d -> OpenSSL::BN" "== Instance Methods" "= class OpenSSL::PKey::RSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__RSA")
(find-rurima "--- d=(new_d)" "== Instance Methods" "= class OpenSSL::PKey::RSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__RSA")
(find-rurima "--- n -> OpenSSL::BN" "== Instance Methods" "= class OpenSSL::PKey::RSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__RSA")
(find-rurima "--- n=(new_n)" "== Instance Methods" "= class OpenSSL::PKey::RSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__RSA")
(find-rurima "--- p -> OpenSSL::BN" "== Instance Methods" "= class OpenSSL::PKey::RSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__RSA")
(find-rurima "--- p=(new_p)" "== Instance Methods" "= class OpenSSL::PKey::RSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__RSA")
(find-rurima "--- q -> OpenSSL::BN" "== Instance Methods" "= class OpenSSL::PKey::RSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__RSA")
(find-rurima "--- q=(new_q)" "== Instance Methods" "= class OpenSSL::PKey::RSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__RSA")
(find-rurima "--- dmp1 -> OpenSSL::BN" "== Instance Methods" "= class OpenSSL::PKey::RSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__RSA")
(find-rurima "--- dmp1=(new_dmp1)" "== Instance Methods" "= class OpenSSL::PKey::RSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__RSA")
(find-rurima "--- dmq1 -> OpenSSL::BN" "== Instance Methods" "= class OpenSSL::PKey::RSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__RSA")
(find-rurima "--- dmq1=(new_dmq1)" "== Instance Methods" "= class OpenSSL::PKey::RSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__RSA")
(find-rurima "--- params -> {String => OpenSSL::BN}" "== Instance Methods" "= class OpenSSL::PKey::RSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__RSA")
(find-rurima "== Constants" "= class OpenSSL::PKey::RSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__RSA")
(find-rurima "--- PKCS1_PADDING -> Integer" "== Constants" "= class OpenSSL::PKey::RSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__RSA")
(find-rurima "--- SSLV23_PADDING -> Integer" "== Constants" "= class OpenSSL::PKey::RSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__RSA")
(find-rurima "--- NO_PADDING -> Integer" "== Constants" "= class OpenSSL::PKey::RSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__RSA")
(find-rurima "--- PKCS1_OAEP_PADDING -> Integer" "== Constants" "= class OpenSSL::PKey::RSA < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__RSA")
(find-rurima "= class OpenSSL::PKey::RSAError < OpenSSL::PKey::PKeyError" "refm/api/src/openssl/PKey__RSA")
(find-rurima "= class OpenSSL::X509::Certificate < Object" "refm/api/src/openssl/X509__Certificate")
(find-rurima "== Class Methods" "= class OpenSSL::X509::Certificate < Object" "refm/api/src/openssl/X509__Certificate")
(find-rurima "--- new -> OpenSSL::X509::Certificate" "== Class Methods" "= class OpenSSL::X509::Certificate < Object" "refm/api/src/openssl/X509__Certificate")
(find-rurima "--- new(obj) -> OpenSSL::X509::Certificate" "== Class Methods" "= class OpenSSL::X509::Certificate < Object" "refm/api/src/openssl/X509__Certificate")
(find-rurima "== Instance Methods" "= class OpenSSL::X509::Certificate < Object" "refm/api/src/openssl/X509__Certificate")
(find-rurima "--- to_der -> String" "== Instance Methods" "= class OpenSSL::X509::Certificate < Object" "refm/api/src/openssl/X509__Certificate")
(find-rurima "--- to_pem -> String" "== Instance Methods" "= class OpenSSL::X509::Certificate < Object" "refm/api/src/openssl/X509__Certificate")
(find-rurima "--- to_s -> String" "== Instance Methods" "= class OpenSSL::X509::Certificate < Object" "refm/api/src/openssl/X509__Certificate")
(find-rurima "--- to_text -> String" "== Instance Methods" "= class OpenSSL::X509::Certificate < Object" "refm/api/src/openssl/X509__Certificate")
(find-rurima "--- version -> Integer" "== Instance Methods" "= class OpenSSL::X509::Certificate < Object" "refm/api/src/openssl/X509__Certificate")
(find-rurima "--- version=(version)" "== Instance Methods" "= class OpenSSL::X509::Certificate < Object" "refm/api/src/openssl/X509__Certificate")
(find-rurima "--- signature_algorithm -> String" "== Instance Methods" "= class OpenSSL::X509::Certificate < Object" "refm/api/src/openssl/X509__Certificate")
(find-rurima "--- serial -> Integer" "== Instance Methods" "= class OpenSSL::X509::Certificate < Object" "refm/api/src/openssl/X509__Certificate")
(find-rurima "--- serial=(serial)" "== Instance Methods" "= class OpenSSL::X509::Certificate < Object" "refm/api/src/openssl/X509__Certificate")
(find-rurima "--- subject -> OpenSSL::X509::Name" "== Instance Methods" "= class OpenSSL::X509::Certificate < Object" "refm/api/src/openssl/X509__Certificate")
(find-rurima "--- subject=(name)" "== Instance Methods" "= class OpenSSL::X509::Certificate < Object" "refm/api/src/openssl/X509__Certificate")
(find-rurima "--- issuer -> OpenSSL::X509::Name" "== Instance Methods" "= class OpenSSL::X509::Certificate < Object" "refm/api/src/openssl/X509__Certificate")
(find-rurima "--- issuer=(name)" "== Instance Methods" "= class OpenSSL::X509::Certificate < Object" "refm/api/src/openssl/X509__Certificate")
(find-rurima "--- not_before -> Time" "== Instance Methods" "= class OpenSSL::X509::Certificate < Object" "refm/api/src/openssl/X509__Certificate")
(find-rurima "--- not_before=(time)" "== Instance Methods" "= class OpenSSL::X509::Certificate < Object" "refm/api/src/openssl/X509__Certificate")
(find-rurima "--- not_after -> Time" "== Instance Methods" "= class OpenSSL::X509::Certificate < Object" "refm/api/src/openssl/X509__Certificate")
(find-rurima "--- not_after=(time)" "== Instance Methods" "= class OpenSSL::X509::Certificate < Object" "refm/api/src/openssl/X509__Certificate")
(find-rurima "--- extensions -> [OpenSSL::X509::Extension]" "== Instance Methods" "= class OpenSSL::X509::Certificate < Object" "refm/api/src/openssl/X509__Certificate")
(find-rurima "--- extensions=(extensions)" "== Instance Methods" "= class OpenSSL::X509::Certificate < Object" "refm/api/src/openssl/X509__Certificate")
(find-rurima "--- add_extension(ext) -> OpenSSL::X509::Extension" "== Instance Methods" "= class OpenSSL::X509::Certificate < Object" "refm/api/src/openssl/X509__Certificate")
(find-rurima "--- public_key -> OpenSSL::PKey::PKey" "== Instance Methods" "= class OpenSSL::X509::Certificate < Object" "refm/api/src/openssl/X509__Certificate")
(find-rurima "--- public_key=(pkey)" "== Instance Methods" "= class OpenSSL::X509::Certificate < Object" "refm/api/src/openssl/X509__Certificate")
(find-rurima "--- sign(pkey, digest) -> self" "== Instance Methods" "= class OpenSSL::X509::Certificate < Object" "refm/api/src/openssl/X509__Certificate")
(find-rurima "--- verify(key) -> bool" "== Instance Methods" "= class OpenSSL::X509::Certificate < Object" "refm/api/src/openssl/X509__Certificate")
(find-rurima "--- check_private_key(private_key) -> bool" "== Instance Methods" "= class OpenSSL::X509::Certificate < Object" "refm/api/src/openssl/X509__Certificate")
(find-rurima "= class OpenSSL::X509::CertificateError < OpenSSL::OpenSSLError" "refm/api/src/openssl/X509__Certificate")
(find-rurima "= class OpenSSL::X509::Store < Object" "refm/api/src/openssl/X509__Store")
(find-rurima "== Class Methods" "= class OpenSSL::X509::Store < Object" "refm/api/src/openssl/X509__Store")
(find-rurima "--- new -> OpenSSL::X509::Store" "== Class Methods" "= class OpenSSL::X509::Store < Object" "refm/api/src/openssl/X509__Store")
(find-rurima "== Instance Methods" "= class OpenSSL::X509::Store < Object" "refm/api/src/openssl/X509__Store")
(find-rurima "--- verify_callback -> Proc | nil" "== Instance Methods" "= class OpenSSL::X509::Store < Object" "refm/api/src/openssl/X509__Store")
(find-rurima "--- verify_callback=(proc)" "== Instance Methods" "= class OpenSSL::X509::Store < Object" "refm/api/src/openssl/X509__Store")
(find-rurima "--- error_string -> String | nil" "== Instance Methods" "= class OpenSSL::X509::Store < Object" "refm/api/src/openssl/X509__Store")
(find-rurima "--- error -> Integer | nil" "== Instance Methods" "= class OpenSSL::X509::Store < Object" "refm/api/src/openssl/X509__Store")
(find-rurima "--- flags=(flags)" "== Instance Methods" "= class OpenSSL::X509::Store < Object" "refm/api/src/openssl/X509__Store")
(find-rurima "--- chain -> [OpenSSL::X509::Certificate] | nil" "== Instance Methods" "= class OpenSSL::X509::Store < Object" "refm/api/src/openssl/X509__Store")
(find-rurima "--- purpose=(purpose)" "== Instance Methods" "= class OpenSSL::X509::Store < Object" "refm/api/src/openssl/X509__Store")
(find-rurima "--- trust=(trust)" "== Instance Methods" "= class OpenSSL::X509::Store < Object" "refm/api/src/openssl/X509__Store")
(find-rurima "--- add_path(path) -> self" "== Instance Methods" "= class OpenSSL::X509::Store < Object" "refm/api/src/openssl/X509__Store")
(find-rurima "--- add_file(file) -> self" "== Instance Methods" "= class OpenSSL::X509::Store < Object" "refm/api/src/openssl/X509__Store")
(find-rurima "--- add_cert(cert) -> self" "== Instance Methods" "= class OpenSSL::X509::Store < Object" "refm/api/src/openssl/X509__Store")
(find-rurima "--- add_crl(crl) -> self" "== Instance Methods" "= class OpenSSL::X509::Store < Object" "refm/api/src/openssl/X509__Store")
(find-rurima "--- verify(cert, chain = nil) -> bool" "== Instance Methods" "= class OpenSSL::X509::Store < Object" "refm/api/src/openssl/X509__Store")
(find-rurima "--- verify(cert, chain = nil){|ok, ctx| ... } -> bool" "== Instance Methods" "= class OpenSSL::X509::Store < Object" "refm/api/src/openssl/X509__Store")
(find-rurima "--- time=(time)" "== Instance Methods" "= class OpenSSL::X509::Store < Object" "refm/api/src/openssl/X509__Store")
(find-rurima "--- set_default_paths -> nil" "== Instance Methods" "= class OpenSSL::X509::Store < Object" "refm/api/src/openssl/X509__Store")
(find-rurima "= class OpenSSL::X509::StoreError < OpenSSL::OpenSSLError" "refm/api/src/openssl/X509__Store")
(find-rurima "= class OpenSSL::ASN1::Constructive < OpenSSL::ASN1::ASN1Data" "refm/api/src/openssl/ASN1__Constructive")
(find-rurima "== Instance Methods" "= class OpenSSL::ASN1::Constructive < OpenSSL::ASN1::ASN1Data" "refm/api/src/openssl/ASN1__Constructive")
(find-rurima "--- tagging -> Symbol | nil" "== Instance Methods" "= class OpenSSL::ASN1::Constructive < OpenSSL::ASN1::ASN1Data" "refm/api/src/openssl/ASN1__Constructive")
(find-rurima "--- tagging=(tag)" "== Instance Methods" "= class OpenSSL::ASN1::Constructive < OpenSSL::ASN1::ASN1Data" "refm/api/src/openssl/ASN1__Constructive")
(find-rurima "--- each {|item| ... } -> self" "== Instance Methods" "= class OpenSSL::ASN1::Constructive < OpenSSL::ASN1::ASN1Data" "refm/api/src/openssl/ASN1__Constructive")
(find-rurima "= class OpenSSL::ASN1::Set < OpenSSL::ASN1::Constructive" "refm/api/src/openssl/ASN1__Constructive")
(find-rurima "== Class method" "= class OpenSSL::ASN1::Set < OpenSSL::ASN1::Constructive" "refm/api/src/openssl/ASN1__Constructive")
(find-rurima "--- new(value) ->  OpenSSL::ASN1::Set" "== Class method" "= class OpenSSL::ASN1::Set < OpenSSL::ASN1::Constructive" "refm/api/src/openssl/ASN1__Constructive")
(find-rurima "--- new(value, tag, tagging, tag_class) -> OpenSSL::ASN1::Set" "== Class method" "= class OpenSSL::ASN1::Set < OpenSSL::ASN1::Constructive" "refm/api/src/openssl/ASN1__Constructive")
(find-rurima "= class OpenSSL::ASN1::Sequence < OpenSSL::ASN1::Constructive" "refm/api/src/openssl/ASN1__Constructive")
(find-rurima "== Class method" "= class OpenSSL::ASN1::Sequence < OpenSSL::ASN1::Constructive" "refm/api/src/openssl/ASN1__Constructive")
(find-rurima "--- new(value) ->  OpenSSL::ASN1::Sequence" "== Class method" "= class OpenSSL::ASN1::Sequence < OpenSSL::ASN1::Constructive" "refm/api/src/openssl/ASN1__Constructive")
(find-rurima "--- new(value, tag, tagging, tag_class) -> OpenSSL::ASN1::Sequence" "== Class method" "= class OpenSSL::ASN1::Sequence < OpenSSL::ASN1::Constructive" "refm/api/src/openssl/ASN1__Constructive")
(find-rurima "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "=== 概要" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "=== 参照" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "== Module Functions" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- decode(der) -> OpenSSL::ASN1::ASN1Data" "== Module Functions" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- decode_all(der) -> [OpenSSL::ASN1::ASN1Data]" "== Module Functions" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- traverse(der) {|depth, off, hlen, len, constructed, tag_class, tag| ...} -> Qnil" "== Module Functions" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- Boolean(value) -> OpenSSL::ASN1::Boolean" "== Module Functions" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- Boolean(value , tag , tagging , tag_class) -> OpenSSL::ASN1::Boolean" "== Module Functions" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- Integer(value) -> OpenSSL::ASN1::Integer" "== Module Functions" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- Integer(value, tag, tagging, tag_class) -> OpenSSL::ASN1::Integer" "== Module Functions" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- Enumerated(value) -> OpenSSL::ASN1::Enumerated" "== Module Functions" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- Enumerated(value, tag, tagging, tag_class) -> OpenSSL::ASN1::Enumerated" "== Module Functions" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- BitString(value) -> OpenSSL::ASN1::BitString -> OpenSSL::ASN1::BitString" "== Module Functions" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- BitString(value, tag, tagging, tag_class) -> OpenSSL::ASN1::BitString" "== Module Functions" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- OctetString(value) -> OpenSSL::ASN1::OctetString -> OpenSSL::ASN1::OctetString" "== Module Functions" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- OctetString(value, tag, tagging, tag_class) -> OpenSSL::ASN1::OctetString" "== Module Functions" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- UTF8String(value) -> OpenSSL::ASN1::UTF8String -> OpenSSL::ASN1::UTF8String" "== Module Functions" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- UTF8String(value, tag, tagging, tag_class) -> OpenSSL::ASN1::UTF8String" "== Module Functions" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- NumericString(value) -> OpenSSL::ASN1::NumericString -> OpenSSL::ASN1::NumericString" "== Module Functions" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- NumericString(value, tag, tagging, tag_class) -> OpenSSL::ASN1::NumericString" "== Module Functions" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- PrintableString(value) -> OpenSSL::ASN1::PrintableString -> OpenSSL::ASN1::PrintableString" "== Module Functions" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- PrintableString(value, tag, tagging, tag_class) -> OpenSSL::ASN1::PrintableString" "== Module Functions" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- T61String(value) -> OpenSSL::ASN1::T61String -> OpenSSL::ASN1::T61String" "== Module Functions" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- T61String(value, tag, tagging, tag_class) -> OpenSSL::ASN1::T61String" "== Module Functions" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- VideotexString(value) -> OpenSSL::ASN1::VideotexString -> OpenSSL::ASN1::VideotexString" "== Module Functions" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- VideotexString(value, tag, tagging, tag_class) -> OpenSSL::ASN1::VideotexString" "== Module Functions" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- IA5String(value) -> OpenSSL::ASN1::IA5String -> OpenSSL::ASN1::IA5String" "== Module Functions" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- IA5String(value, tag, tagging, tag_class) -> OpenSSL::ASN1::IA5String" "== Module Functions" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- GraphicString(value) -> OpenSSL::ASN1::GraphicString -> OpenSSL::ASN1::GraphicString" "== Module Functions" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- GraphicString(value, tag, tagging, tag_class) -> OpenSSL::ASN1::GraphicString" "== Module Functions" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- ISO64String(value) -> OpenSSL::ASN1::ISO64String -> OpenSSL::ASN1::ISO64String" "== Module Functions" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- ISO64String(value, tag, tagging, tag_class) -> OpenSSL::ASN1::ISO64String" "== Module Functions" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- GeneralString(value) -> OpenSSL::ASN1::GeneralString -> OpenSSL::ASN1::GeneralString" "== Module Functions" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- GeneralString(value, tag, tagging, tag_class) -> OpenSSL::ASN1::GeneralString" "== Module Functions" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- UniversalString(value) -> OpenSSL::ASN1::UniversalString -> OpenSSL::ASN1::UniversalString" "== Module Functions" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- UniversalString(value, tag, tagging, tag_class) -> OpenSSL::ASN1::UniversalString" "== Module Functions" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- BMPString(value) -> OpenSSL::ASN1::BMPString -> OpenSSL::ASN1::BMPString" "== Module Functions" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- BMPString(value, tag, tagging, tag_class) -> OpenSSL::ASN1::BMPString" "== Module Functions" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- Null(value) -> OpenSSL::ASN1::Null -> OpenSSL::ASN1::Null" "== Module Functions" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- Null(value, tag, tagging, tag_class) -> OpenSSL::ASN1::Null" "== Module Functions" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- ObjectId(value) -> OpenSSL::ASN1::ObjectId -> OpenSSL::ASN1::ObjectId" "== Module Functions" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- ObjectId(value, tag, tagging, tag_class) -> OpenSSL::ASN1::ObjectId" "== Module Functions" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- UTCTime(value) -> OpenSSL::ASN1::UTCTime -> OpenSSL::ASN1::UTCTime" "== Module Functions" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- UTCTime(value, tag, tagging, tag_class) -> OpenSSL::ASN1::UTCTime" "== Module Functions" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- GeneralizedTime(value) -> OpenSSL::ASN1::GeneralizedTime -> OpenSSL::ASN1::GeneralizedTime" "== Module Functions" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- GeneralizedTime(value, tag, tagging, tag_class) -> OpenSSL::ASN1::GeneralizedTime" "== Module Functions" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- Sequence(value) -> OpenSSL::ASN1::Sequence -> OpenSSL::ASN1::Sequence" "== Module Functions" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- Sequence(value, tag, tagging, tag_class) -> OpenSSL::ASN1::Sequence" "== Module Functions" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- Set(value) -> OpenSSL::ASN1::Set -> OpenSSL::ASN1::Set" "== Module Functions" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- Set(value, tag, tagging, tag_class) -> OpenSSL::ASN1::Set" "== Module Functions" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "== Constants" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- UNIVERSAL_TAG_NAME -> [String]" "== Constants" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- EOC -> Integer" "== Constants" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- BOOLEAN -> Integer" "== Constants" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- INTEGER -> Integer" "== Constants" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- BIT_STRING -> Integer" "== Constants" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- OCTET_STRING -> Integer" "== Constants" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- NULL -> Integer" "== Constants" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- OBJECT -> Integer" "== Constants" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- OBJECT_DESCRIPTOR -> Integer" "== Constants" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- EXTERNAL -> Integer" "== Constants" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- REAL -> Integer" "== Constants" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- ENUMERATED -> Integer" "== Constants" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- EMBEDDED_PDV -> Integer" "== Constants" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- UTF8STRING -> Integer" "== Constants" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- RELATIVE_OID -> Integer" "== Constants" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- SEQUENCE -> Integer" "== Constants" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- SET -> Integer" "== Constants" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- NUMERICSTRING -> Integer" "== Constants" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- PRINTABLESTRING -> Integer" "== Constants" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- T61STRING -> Integer" "== Constants" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- VIDEOTEXSTRING -> Integer" "== Constants" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- IA5STRING -> Integer" "== Constants" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- UTCTIME -> Integer" "== Constants" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- GENERALIZEDTIME -> Integer" "== Constants" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- GRAPHICSTRING -> Integer" "== Constants" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- ISO64STRING -> Integer" "== Constants" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- GENERALSTRING -> Integer" "== Constants" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- UNIVERSALSTRING -> Integer" "== Constants" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- CHARACTER_STRING -> Integer" "== Constants" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "--- BMPSTRING -> Integer" "== Constants" "= module OpenSSL::ASN1" "refm/api/src/openssl/ASN1")
(find-rurima "= class OpenSSL::ASN1::ASN1Error < OpenSSL::OpenSSLError" "refm/api/src/openssl/ASN1")
(find-rurima "= module OpenSSL::PKCS12" "refm/api/src/openssl/PKCS12")
(find-rurima "== Class methods" "= module OpenSSL::PKCS12" "refm/api/src/openssl/PKCS12")
(find-rurima "--- create(pass, name, pkey, cert, ca=nil, key_nid=nil, cert_nid=nil, key_iter=nil, mac_iter=nil, keytype=nil) -> OpenSSL::PKCS12" "== Class methods" "= module OpenSSL::PKCS12" "refm/api/src/openssl/PKCS12")
(find-rurima "--- new(obj=nil, pass=nil) -> OpenSSL::PKCS12" "== Class methods" "= module OpenSSL::PKCS12" "refm/api/src/openssl/PKCS12")
(find-rurima "== Instance Methods" "= module OpenSSL::PKCS12" "refm/api/src/openssl/PKCS12")
(find-rurima "--- ca_certs -> [OpenSSL::X509::Certificate]" "== Instance Methods" "= module OpenSSL::PKCS12" "refm/api/src/openssl/PKCS12")
(find-rurima "--- certificate -> OpenSSL::X509::Certificate" "== Instance Methods" "= module OpenSSL::PKCS12" "refm/api/src/openssl/PKCS12")
(find-rurima "--- key -> OpenSSL::PKey::PKey" "== Instance Methods" "= module OpenSSL::PKCS12" "refm/api/src/openssl/PKCS12")
(find-rurima "--- to_der -> String" "== Instance Methods" "= module OpenSSL::PKCS12" "refm/api/src/openssl/PKCS12")
(find-rurima "= class OpenSSL::PKCS12::PKCS12Error < OpenSSL::OpenSSLError" "refm/api/src/openssl/PKCS12")
(find-rurima "= class OpenSSL::X509::Extension < Object" "refm/api/src/openssl/X509__Extension")
(find-rurima "=== 参照" "= class OpenSSL::X509::Extension < Object" "refm/api/src/openssl/X509__Extension")
(find-rurima "== Class Methods" "= class OpenSSL::X509::Extension < Object" "refm/api/src/openssl/X509__Extension")
(find-rurima "--- new(der) -> OpenSSL::X509::Extension" "== Class Methods" "= class OpenSSL::X509::Extension < Object" "refm/api/src/openssl/X509__Extension")
(find-rurima "--- new(oid, value, critical=false) -> OpenSSL::X509::Extension" "== Class Methods" "= class OpenSSL::X509::Extension < Object" "refm/api/src/openssl/X509__Extension")
(find-rurima "== Instance Methods" "= class OpenSSL::X509::Extension < Object" "refm/api/src/openssl/X509__Extension")
(find-rurima "---critical? -> bool" "== Instance Methods" "= class OpenSSL::X509::Extension < Object" "refm/api/src/openssl/X509__Extension")
(find-rurima "---critical=(bool)" "== Instance Methods" "= class OpenSSL::X509::Extension < Object" "refm/api/src/openssl/X509__Extension")
(find-rurima "---oid -> String" "== Instance Methods" "= class OpenSSL::X509::Extension < Object" "refm/api/src/openssl/X509__Extension")
(find-rurima "---oid=(oid)" "== Instance Methods" "= class OpenSSL::X509::Extension < Object" "refm/api/src/openssl/X509__Extension")
(find-rurima "---to_der -> String" "== Instance Methods" "= class OpenSSL::X509::Extension < Object" "refm/api/src/openssl/X509__Extension")
(find-rurima "---value -> String" "== Instance Methods" "= class OpenSSL::X509::Extension < Object" "refm/api/src/openssl/X509__Extension")
(find-rurima "---value=(value)" "== Instance Methods" "= class OpenSSL::X509::Extension < Object" "refm/api/src/openssl/X509__Extension")
(find-rurima "--- to_a -> [String, String, bool]" "== Instance Methods" "= class OpenSSL::X509::Extension < Object" "refm/api/src/openssl/X509__Extension")
(find-rurima "--- to_h -> Hash" "== Instance Methods" "= class OpenSSL::X509::Extension < Object" "refm/api/src/openssl/X509__Extension")
(find-rurima "--- to_s -> String" "== Instance Methods" "= class OpenSSL::X509::Extension < Object" "refm/api/src/openssl/X509__Extension")
(find-rurima "= class OpenSSL::X509::ExtensionError < OpenSSL::OpenSSLError" "refm/api/src/openssl/X509__Extension")
(find-rurima "= class OpenSSL::X509::Request < Object" "refm/api/src/openssl/X509__Request")
(find-rurima "=== 例" "= class OpenSSL::X509::Request < Object" "refm/api/src/openssl/X509__Request")
(find-rurima "== Class Methods" "= class OpenSSL::X509::Request < Object" "refm/api/src/openssl/X509__Request")
(find-rurima "--- new -> OpenSSL::X509::Request" "== Class Methods" "= class OpenSSL::X509::Request < Object" "refm/api/src/openssl/X509__Request")
(find-rurima "--- new(obj) -> OpenSSL::X509::Request" "== Class Methods" "= class OpenSSL::X509::Request < Object" "refm/api/src/openssl/X509__Request")
(find-rurima "== Instance Methods" "= class OpenSSL::X509::Request < Object" "refm/api/src/openssl/X509__Request")
(find-rurima "--- add_attribute(attr) -> OpenSSL::X509::Attribute" "== Instance Methods" "= class OpenSSL::X509::Request < Object" "refm/api/src/openssl/X509__Request")
(find-rurima "--- attributes -> [OpenSSL::X509::Attribute]" "== Instance Methods" "= class OpenSSL::X509::Request < Object" "refm/api/src/openssl/X509__Request")
(find-rurima "--- attributes=(attrs)" "== Instance Methods" "= class OpenSSL::X509::Request < Object" "refm/api/src/openssl/X509__Request")
(find-rurima "--- public_key -> OpenSSL::PKey::PKey" "== Instance Methods" "= class OpenSSL::X509::Request < Object" "refm/api/src/openssl/X509__Request")
(find-rurima "--- public_key=(pkey)" "== Instance Methods" "= class OpenSSL::X509::Request < Object" "refm/api/src/openssl/X509__Request")
(find-rurima "--- sign(key, digest) -> self" "== Instance Methods" "= class OpenSSL::X509::Request < Object" "refm/api/src/openssl/X509__Request")
(find-rurima "--- signature_algorithm -> String" "== Instance Methods" "= class OpenSSL::X509::Request < Object" "refm/api/src/openssl/X509__Request")
(find-rurima "--- subject -> OpenSSL::X509::Name" "== Instance Methods" "= class OpenSSL::X509::Request < Object" "refm/api/src/openssl/X509__Request")
(find-rurima "--- subject=(subject)" "== Instance Methods" "= class OpenSSL::X509::Request < Object" "refm/api/src/openssl/X509__Request")
(find-rurima "--- to_der -> String" "== Instance Methods" "= class OpenSSL::X509::Request < Object" "refm/api/src/openssl/X509__Request")
(find-rurima "--- to_pem -> String" "== Instance Methods" "= class OpenSSL::X509::Request < Object" "refm/api/src/openssl/X509__Request")
(find-rurima "--- to_s -> String" "== Instance Methods" "= class OpenSSL::X509::Request < Object" "refm/api/src/openssl/X509__Request")
(find-rurima "--- to_text -> String" "== Instance Methods" "= class OpenSSL::X509::Request < Object" "refm/api/src/openssl/X509__Request")
(find-rurima "--- verify(key) -> bool" "== Instance Methods" "= class OpenSSL::X509::Request < Object" "refm/api/src/openssl/X509__Request")
(find-rurima "--- version -> Integer" "== Instance Methods" "= class OpenSSL::X509::Request < Object" "refm/api/src/openssl/X509__Request")
(find-rurima "--- version=(version)" "== Instance Methods" "= class OpenSSL::X509::Request < Object" "refm/api/src/openssl/X509__Request")
(find-rurima "= class OpenSSL::X509::RequestError < OpenSSL::OpenSSLError" "refm/api/src/openssl/X509__Request")
(find-rurima "= class OpenSSL::PKey::DH < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__DH")
(find-rurima "=== 例" "= class OpenSSL::PKey::DH < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__DH")
(find-rurima "== Class Methods" "= class OpenSSL::PKey::DH < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__DH")
(find-rurima "--- generate(size, generator = 2) -> PKey::DH" "== Class Methods" "= class OpenSSL::PKey::DH < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__DH")
(find-rurima "--- generate(size, generator = 2){|u,n| ... } -> PKey::DH" "== Class Methods" "= class OpenSSL::PKey::DH < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__DH")
(find-rurima "--- new(size, generator = 2) -> OpenSSL::PKey::DH" "== Class Methods" "= class OpenSSL::PKey::DH < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__DH")
(find-rurima "--- new(obj) -> OpenSSL::PKey::DH" "== Class Methods" "= class OpenSSL::PKey::DH < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__DH")
(find-rurima "--- new() -> OpenSSL::PKey::DH" "== Class Methods" "= class OpenSSL::PKey::DH < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__DH")
(find-rurima "== Instance Methods" "= class OpenSSL::PKey::DH < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__DH")
(find-rurima "--- compute_key(bn) -> String" "== Instance Methods" "= class OpenSSL::PKey::DH < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__DH")
(find-rurima "--- to_text -> String" "== Instance Methods" "= class OpenSSL::PKey::DH < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__DH")
(find-rurima "--- export -> String" "== Instance Methods" "= class OpenSSL::PKey::DH < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__DH")
(find-rurima "--- to_pem -> String" "== Instance Methods" "= class OpenSSL::PKey::DH < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__DH")
(find-rurima "--- to_s -> String" "== Instance Methods" "= class OpenSSL::PKey::DH < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__DH")
(find-rurima "--- to_der -> String" "== Instance Methods" "= class OpenSSL::PKey::DH < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__DH")
(find-rurima "--- params_ok? -> bool" "== Instance Methods" "= class OpenSSL::PKey::DH < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__DH")
(find-rurima "--- generate_key! -> self" "== Instance Methods" "= class OpenSSL::PKey::DH < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__DH")
(find-rurima "--- params -> {String => OpenSSL::BN}" "== Instance Methods" "= class OpenSSL::PKey::DH < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__DH")
(find-rurima "--- p -> OpenSSL::BN" "== Instance Methods" "= class OpenSSL::PKey::DH < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__DH")
(find-rurima "--- p=(p)" "== Instance Methods" "= class OpenSSL::PKey::DH < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__DH")
(find-rurima "--- g -> OpenSSL::BN" "== Instance Methods" "= class OpenSSL::PKey::DH < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__DH")
(find-rurima "--- g=(g)" "== Instance Methods" "= class OpenSSL::PKey::DH < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__DH")
(find-rurima "--- pub_key -> OpenSSL::BN" "== Instance Methods" "= class OpenSSL::PKey::DH < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__DH")
(find-rurima "--- pub_key=(public_key)" "== Instance Methods" "= class OpenSSL::PKey::DH < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__DH")
(find-rurima "--- priv_key -> OpenSSL::BN" "== Instance Methods" "= class OpenSSL::PKey::DH < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__DH")
(find-rurima "--- priv_key=(private_key)" "== Instance Methods" "= class OpenSSL::PKey::DH < OpenSSL::PKey::PKey" "refm/api/src/openssl/PKey__DH")
(find-rurima "= class OpenSSL::PKey::DHError < OpenSSL::PKey::PKeyError" "refm/api/src/openssl/PKey__DH")
(find-rurima "= class SOAP::Header::Handler < Object" "refm/api/src/soap/header/handler.rd")
(find-rurima "== Class Methods" "= class SOAP::Header::Handler < Object" "refm/api/src/soap/header/handler.rd")
(find-rurima "--- new(elename)" "== Class Methods" "= class SOAP::Header::Handler < Object" "refm/api/src/soap/header/handler.rd")
(find-rurima "== Instance Methods" "= class SOAP::Header::Handler < Object" "refm/api/src/soap/header/handler.rd")
(find-rurima "--- elename" "== Instance Methods" "= class SOAP::Header::Handler < Object" "refm/api/src/soap/header/handler.rd")
(find-rurima "--- mustunderstand" "== Instance Methods" "= class SOAP::Header::Handler < Object" "refm/api/src/soap/header/handler.rd")
(find-rurima "--- encodingstyle" "== Instance Methods" "= class SOAP::Header::Handler < Object" "refm/api/src/soap/header/handler.rd")
(find-rurima "--- on_outbound" "== Instance Methods" "= class SOAP::Header::Handler < Object" "refm/api/src/soap/header/handler.rd")
(find-rurima "--- on_inbound(header, mustunderstand = false)" "== Instance Methods" "= class SOAP::Header::Handler < Object" "refm/api/src/soap/header/handler.rd")
(find-rurima "--- on_outbound_headeritem" "== Instance Methods" "= class SOAP::Header::Handler < Object" "refm/api/src/soap/header/handler.rd")
(find-rurima "--- on_inbound_headeritem(header)" "== Instance Methods" "= class SOAP::Header::Handler < Object" "refm/api/src/soap/header/handler.rd")
(find-rurima "= class SOAP::Header::SimpleHandler < SOAP::Header::Handler" "refm/api/src/soap/header/simplehandler.rd")
(find-rurima "== Class Methods" "= class SOAP::Header::SimpleHandler < SOAP::Header::Handler" "refm/api/src/soap/header/simplehandler.rd")
(find-rurima "--- new(elename)" "== Class Methods" "= class SOAP::Header::SimpleHandler < SOAP::Header::Handler" "refm/api/src/soap/header/simplehandler.rd")
(find-rurima "== Instance Methods" "= class SOAP::Header::SimpleHandler < SOAP::Header::Handler" "refm/api/src/soap/header/simplehandler.rd")
(find-rurima "--- on_simple_outbound" "== Instance Methods" "= class SOAP::Header::SimpleHandler < SOAP::Header::Handler" "refm/api/src/soap/header/simplehandler.rd")
(find-rurima "--- on_simple_inbound(header, mustunderstand)" "== Instance Methods" "= class SOAP::Header::SimpleHandler < SOAP::Header::Handler" "refm/api/src/soap/header/simplehandler.rd")
(find-rurima "--- on_outbound" "== Instance Methods" "= class SOAP::Header::SimpleHandler < SOAP::Header::Handler" "refm/api/src/soap/header/simplehandler.rd")
(find-rurima "--- on_inbound(header, mustunderstand)" "== Instance Methods" "= class SOAP::Header::SimpleHandler < SOAP::Header::Handler" "refm/api/src/soap/header/simplehandler.rd")
(find-rurima "= class SOAP::Header::HandlerSet < Object" "refm/api/src/soap/header/handlerset.rd")
(find-rurima "== Class Methods" "= class SOAP::Header::HandlerSet < Object" "refm/api/src/soap/header/handlerset.rd")
(find-rurima "--- new" "== Class Methods" "= class SOAP::Header::HandlerSet < Object" "refm/api/src/soap/header/handlerset.rd")
(find-rurima "== Instance Methods" "= class SOAP::Header::HandlerSet < Object" "refm/api/src/soap/header/handlerset.rd")
(find-rurima "--- dup" "== Instance Methods" "= class SOAP::Header::HandlerSet < Object" "refm/api/src/soap/header/handlerset.rd")
(find-rurima "--- add(handler)" "== Instance Methods" "= class SOAP::Header::HandlerSet < Object" "refm/api/src/soap/header/handlerset.rd")
(find-rurima "--- <<(handler)" "== Instance Methods" "= class SOAP::Header::HandlerSet < Object" "refm/api/src/soap/header/handlerset.rd")
(find-rurima "--- delete(handler)" "== Instance Methods" "= class SOAP::Header::HandlerSet < Object" "refm/api/src/soap/header/handlerset.rd")
(find-rurima "--- include?(handler)" "== Instance Methods" "= class SOAP::Header::HandlerSet < Object" "refm/api/src/soap/header/handlerset.rd")
(find-rurima "--- on_outbound" "== Instance Methods" "= class SOAP::Header::HandlerSet < Object" "refm/api/src/soap/header/handlerset.rd")
(find-rurima "--- on_inbound(headers)" "== Instance Methods" "= class SOAP::Header::HandlerSet < Object" "refm/api/src/soap/header/handlerset.rd")
(find-rurima "== Protected Instance Methods" "= class SOAP::Header::HandlerSet < Object" "refm/api/src/soap/header/handlerset.rd")
(find-rurima "--- store=(store)" "== Protected Instance Methods" "= class SOAP::Header::HandlerSet < Object" "refm/api/src/soap/header/handlerset.rd")
(find-rurima "= module SOAP" "refm/api/src/soap/soap.rd")
(find-rurima "== Constants" "= module SOAP" "refm/api/src/soap/soap.rd")
(find-rurima "--- VERSION" "== Constants" "= module SOAP" "refm/api/src/soap/soap.rd")
(find-rurima "--- PropertyName" "== Constants" "= module SOAP" "refm/api/src/soap/soap.rd")
(find-rurima "--- EnvelopeNamespace" "== Constants" "= module SOAP" "refm/api/src/soap/soap.rd")
(find-rurima "--- EncodingNamespace" "== Constants" "= module SOAP" "refm/api/src/soap/soap.rd")
(find-rurima "--- LiteralNamespace" "== Constants" "= module SOAP" "refm/api/src/soap/soap.rd")
(find-rurima "--- NextActor" "== Constants" "= module SOAP" "refm/api/src/soap/soap.rd")
(find-rurima "--- EleEnvelope" "== Constants" "= module SOAP" "refm/api/src/soap/soap.rd")
(find-rurima "--- EleHeader" "== Constants" "= module SOAP" "refm/api/src/soap/soap.rd")
(find-rurima "--- EleBody" "== Constants" "= module SOAP" "refm/api/src/soap/soap.rd")
(find-rurima "--- EleFault" "== Constants" "= module SOAP" "refm/api/src/soap/soap.rd")
(find-rurima "--- EleFaultString" "== Constants" "= module SOAP" "refm/api/src/soap/soap.rd")
(find-rurima "--- EleFaultActor" "== Constants" "= module SOAP" "refm/api/src/soap/soap.rd")
(find-rurima "--- EleFaultCode" "== Constants" "= module SOAP" "refm/api/src/soap/soap.rd")
(find-rurima "--- EleFaultDetail" "== Constants" "= module SOAP" "refm/api/src/soap/soap.rd")
(find-rurima "--- AttrMustUnderstand" "== Constants" "= module SOAP" "refm/api/src/soap/soap.rd")
(find-rurima "--- AttrEncodingStyle" "== Constants" "= module SOAP" "refm/api/src/soap/soap.rd")
(find-rurima "--- AttrActor" "== Constants" "= module SOAP" "refm/api/src/soap/soap.rd")
(find-rurima "--- AttrRoot" "== Constants" "= module SOAP" "refm/api/src/soap/soap.rd")
(find-rurima "--- AttrArrayType" "== Constants" "= module SOAP" "refm/api/src/soap/soap.rd")
(find-rurima "--- AttrOffset" "== Constants" "= module SOAP" "refm/api/src/soap/soap.rd")
(find-rurima "--- AttrPosition" "== Constants" "= module SOAP" "refm/api/src/soap/soap.rd")
(find-rurima "--- ValueArray" "== Constants" "= module SOAP" "refm/api/src/soap/soap.rd")
(find-rurima "--- EleEnvelopeName" "== Constants" "= module SOAP" "refm/api/src/soap/soap.rd")
(find-rurima "--- EleHeaderName" "== Constants" "= module SOAP" "refm/api/src/soap/soap.rd")
(find-rurima "--- EleBodyName" "== Constants" "= module SOAP" "refm/api/src/soap/soap.rd")
(find-rurima "--- EleFaultName" "== Constants" "= module SOAP" "refm/api/src/soap/soap.rd")
(find-rurima "--- EleFaultStringName" "== Constants" "= module SOAP" "refm/api/src/soap/soap.rd")
(find-rurima "--- EleFaultActorName" "== Constants" "= module SOAP" "refm/api/src/soap/soap.rd")
(find-rurima "--- EleFaultCodeName" "== Constants" "= module SOAP" "refm/api/src/soap/soap.rd")
(find-rurima "--- EleFaultDetailName" "== Constants" "= module SOAP" "refm/api/src/soap/soap.rd")
(find-rurima "--- AttrMustUnderstandName" "== Constants" "= module SOAP" "refm/api/src/soap/soap.rd")
(find-rurima "--- AttrEncodingStyleName" "== Constants" "= module SOAP" "refm/api/src/soap/soap.rd")
(find-rurima "--- AttrRootName" "== Constants" "= module SOAP" "refm/api/src/soap/soap.rd")
(find-rurima "--- AttrArrayTypeName" "== Constants" "= module SOAP" "refm/api/src/soap/soap.rd")
(find-rurima "--- AttrOffsetName" "== Constants" "= module SOAP" "refm/api/src/soap/soap.rd")
(find-rurima "--- AttrPositionName" "== Constants" "= module SOAP" "refm/api/src/soap/soap.rd")
(find-rurima "--- ValueArrayName" "== Constants" "= module SOAP" "refm/api/src/soap/soap.rd")
(find-rurima "--- Base64Literal" "== Constants" "= module SOAP" "refm/api/src/soap/soap.rd")
(find-rurima "--- SOAPNamespaceTag" "== Constants" "= module SOAP" "refm/api/src/soap/soap.rd")
(find-rurima "--- XSDNamespaceTag" "== Constants" "= module SOAP" "refm/api/src/soap/soap.rd")
(find-rurima "--- XSINamespaceTag" "== Constants" "= module SOAP" "refm/api/src/soap/soap.rd")
(find-rurima "--- MediaType" "== Constants" "= module SOAP" "refm/api/src/soap/soap.rd")
(find-rurima "= class SOAP::Error < StandardError" "refm/api/src/soap/soap.rd")
(find-rurima "= class SOAP::StreamError < SOAP::Error" "refm/api/src/soap/soap.rd")
(find-rurima "= class SOAP::HTTPStreamError < SOAP::Error" "refm/api/src/soap/soap.rd")
(find-rurima "= class SOAP::PostUnavailableError < SOAP::Error" "refm/api/src/soap/soap.rd")
(find-rurima "= class SOAP::MPostUnavailableError < SOAP::Error" "refm/api/src/soap/soap.rd")
(find-rurima "= class SOAP::ArrayIndexOutOfBoundsError < SOAP::Error" "refm/api/src/soap/soap.rd")
(find-rurima "= class SOAP::ArrayStoreError < SOAP::Error" "refm/api/src/soap/soap.rd")
(find-rurima "= class SOAP::RPCRoutingError < SOAP::Error" "refm/api/src/soap/soap.rd")
(find-rurima "= class SOAP::EmptyResponseError < SOAP::Error" "refm/api/src/soap/soap.rd")
(find-rurima "= class SOAP::ResponseFormatError < SOAP::Error" "refm/api/src/soap/soap.rd")
(find-rurima "= class SOAP::UnhandledMustUnderstandHeaderError < SOAP::Error" "refm/api/src/soap/soap.rd")
(find-rurima "= class SOAP::SOAPStruct < XSD::NSDBase" "refm/api/src/soap/baseData/SOAPStruct")
(find-rurima "== Class Methods" "= class SOAP::SOAPStruct < XSD::NSDBase" "refm/api/src/soap/baseData/SOAPStruct")
(find-rurima "--- new(type = nil)" "== Class Methods" "= class SOAP::SOAPStruct < XSD::NSDBase" "refm/api/src/soap/baseData/SOAPStruct")
(find-rurima "--- decode(elename, type)" "== Class Methods" "= class SOAP::SOAPStruct < XSD::NSDBase" "refm/api/src/soap/baseData/SOAPStruct")
(find-rurima "== Instance Methods" "= class SOAP::SOAPStruct < XSD::NSDBase" "refm/api/src/soap/baseData/SOAPStruct")
(find-rurima "--- to_s" "== Instance Methods" "= class SOAP::SOAPStruct < XSD::NSDBase" "refm/api/src/soap/baseData/SOAPStruct")
(find-rurima "--- add(name, value)" "== Instance Methods" "= class SOAP::SOAPStruct < XSD::NSDBase" "refm/api/src/soap/baseData/SOAPStruct")
(find-rurima "--- [](idx)" "== Instance Methods" "= class SOAP::SOAPStruct < XSD::NSDBase" "refm/api/src/soap/baseData/SOAPStruct")
(find-rurima "--- []=(idx, data)" "== Instance Methods" "= class SOAP::SOAPStruct < XSD::NSDBase" "refm/api/src/soap/baseData/SOAPStruct")
(find-rurima "--- key?(name)" "== Instance Methods" "= class SOAP::SOAPStruct < XSD::NSDBase" "refm/api/src/soap/baseData/SOAPStruct")
(find-rurima "--- members" "== Instance Methods" "= class SOAP::SOAPStruct < XSD::NSDBase" "refm/api/src/soap/baseData/SOAPStruct")
(find-rurima "--- to_obj" "== Instance Methods" "= class SOAP::SOAPStruct < XSD::NSDBase" "refm/api/src/soap/baseData/SOAPStruct")
(find-rurima "--- each" "== Instance Methods" "= class SOAP::SOAPStruct < XSD::NSDBase" "refm/api/src/soap/baseData/SOAPStruct")
(find-rurima "--- replace" "== Instance Methods" "= class SOAP::SOAPStruct < XSD::NSDBase" "refm/api/src/soap/baseData/SOAPStruct")
(find-rurima "= class SOAP::SOAPBase64 < XSD::XSDBase64Binary" "refm/api/src/soap/baseData/SOAPBase64")
(find-rurima "== Class Methods" "= class SOAP::SOAPBase64 < XSD::XSDBase64Binary" "refm/api/src/soap/baseData/SOAPBase64")
(find-rurima "--- new(value = nil)" "== Class Methods" "= class SOAP::SOAPBase64 < XSD::XSDBase64Binary" "refm/api/src/soap/baseData/SOAPBase64")
(find-rurima "== Instance Methods" "= class SOAP::SOAPBase64 < XSD::XSDBase64Binary" "refm/api/src/soap/baseData/SOAPBase64")
(find-rurima "--- as_xsd" "== Instance Methods" "= class SOAP::SOAPBase64 < XSD::XSDBase64Binary" "refm/api/src/soap/baseData/SOAPBase64")
(find-rurima "== Constants" "= class SOAP::SOAPBase64 < XSD::XSDBase64Binary" "refm/api/src/soap/baseData/SOAPBase64")
(find-rurima "--- Type" "== Constants" "= class SOAP::SOAPBase64 < XSD::XSDBase64Binary" "refm/api/src/soap/baseData/SOAPBase64")
(find-rurima "= module SOAP::SOAPModuleUtils" "refm/api/src/soap/baseData/SOAPModuleUtils")
(find-rurima "== Instance Methods" "= module SOAP::SOAPModuleUtils" "refm/api/src/soap/baseData/SOAPModuleUtils")
(find-rurima "--- decode(elename)" "== Instance Methods" "= module SOAP::SOAPModuleUtils" "refm/api/src/soap/baseData/SOAPModuleUtils")
(find-rurima "= module SOAP::SOAPType" "refm/api/src/soap/baseData/SOAPType")
(find-rurima "== Instance Methods" "= module SOAP::SOAPType" "refm/api/src/soap/baseData/SOAPType")
(find-rurima "--- definedtype" "== Instance Methods" "= module SOAP::SOAPType" "refm/api/src/soap/baseData/SOAPType")
(find-rurima "--- definedtype=(value)" "== Instance Methods" "= module SOAP::SOAPType" "refm/api/src/soap/baseData/SOAPType")
(find-rurima "--- elename" "== Instance Methods" "= module SOAP::SOAPType" "refm/api/src/soap/baseData/SOAPType")
(find-rurima "--- elename=(value)" "== Instance Methods" "= module SOAP::SOAPType" "refm/api/src/soap/baseData/SOAPType")
(find-rurima "--- encodingstyle" "== Instance Methods" "= module SOAP::SOAPType" "refm/api/src/soap/baseData/SOAPType")
(find-rurima "--- encodingstyle=(value)" "== Instance Methods" "= module SOAP::SOAPType" "refm/api/src/soap/baseData/SOAPType")
(find-rurima "--- extraattr" "== Instance Methods" "= module SOAP::SOAPType" "refm/api/src/soap/baseData/SOAPType")
(find-rurima "--- id" "== Instance Methods" "= module SOAP::SOAPType" "refm/api/src/soap/baseData/SOAPType")
(find-rurima "--- id=(value)" "== Instance Methods" "= module SOAP::SOAPType" "refm/api/src/soap/baseData/SOAPType")
(find-rurima "--- initialize(*args)" "== Instance Methods" "= module SOAP::SOAPType" "refm/api/src/soap/baseData/SOAPType")
(find-rurima "--- inspect" "== Instance Methods" "= module SOAP::SOAPType" "refm/api/src/soap/baseData/SOAPType")
(find-rurima "--- parent" "== Instance Methods" "= module SOAP::SOAPType" "refm/api/src/soap/baseData/SOAPType")
(find-rurima "--- parent=(value)" "== Instance Methods" "= module SOAP::SOAPType" "refm/api/src/soap/baseData/SOAPType")
(find-rurima "--- position" "== Instance Methods" "= module SOAP::SOAPType" "refm/api/src/soap/baseData/SOAPType")
(find-rurima "--- position=(value)" "== Instance Methods" "= module SOAP::SOAPType" "refm/api/src/soap/baseData/SOAPType")
(find-rurima "--- precedents" "== Instance Methods" "= module SOAP::SOAPType" "refm/api/src/soap/baseData/SOAPType")
(find-rurima "--- root" "== Instance Methods" "= module SOAP::SOAPType" "refm/api/src/soap/baseData/SOAPType")
(find-rurima "--- root=(value)" "== Instance Methods" "= module SOAP::SOAPType" "refm/api/src/soap/baseData/SOAPType")
(find-rurima "--- rootnode" "== Instance Methods" "= module SOAP::SOAPType" "refm/api/src/soap/baseData/SOAPType")
(find-rurima "= class SOAP::SOAPExternalReference < XSD::NSDBase" "refm/api/src/soap/baseData/SOAPExternalReference")
(find-rurima "== Class Methods" "= class SOAP::SOAPExternalReference < XSD::NSDBase" "refm/api/src/soap/baseData/SOAPExternalReference")
(find-rurima "--- new" "== Class Methods" "= class SOAP::SOAPExternalReference < XSD::NSDBase" "refm/api/src/soap/baseData/SOAPExternalReference")
(find-rurima "== Instance Methods" "= class SOAP::SOAPExternalReference < XSD::NSDBase" "refm/api/src/soap/baseData/SOAPExternalReference")
(find-rurima "--- referred" "== Instance Methods" "= class SOAP::SOAPExternalReference < XSD::NSDBase" "refm/api/src/soap/baseData/SOAPExternalReference")
(find-rurima "--- refidstr" "== Instance Methods" "= class SOAP::SOAPExternalReference < XSD::NSDBase" "refm/api/src/soap/baseData/SOAPExternalReference")
(find-rurima "= module SOAP::SOAPCompoundtype" "refm/api/src/soap/baseData/SOAPCompoundtype")
(find-rurima "== Instance Methods" "= module SOAP::SOAPCompoundtype" "refm/api/src/soap/baseData/SOAPCompoundtype")
(find-rurima "--- initialize(*args)" "== Instance Methods" "= module SOAP::SOAPCompoundtype" "refm/api/src/soap/baseData/SOAPCompoundtype")
(find-rurima "--- definedtype" "== Instance Methods" "= module SOAP::SOAPCompoundtype" "refm/api/src/soap/baseData/SOAPCompoundtype")
(find-rurima "--- definedtype=(value)" "== Instance Methods" "= module SOAP::SOAPCompoundtype" "refm/api/src/soap/baseData/SOAPCompoundtype")
(find-rurima "--- elename" "== Instance Methods" "= module SOAP::SOAPCompoundtype" "refm/api/src/soap/baseData/SOAPCompoundtype")
(find-rurima "--- elename=(value)" "== Instance Methods" "= module SOAP::SOAPCompoundtype" "refm/api/src/soap/baseData/SOAPCompoundtype")
(find-rurima "--- encodingstyle" "== Instance Methods" "= module SOAP::SOAPCompoundtype" "refm/api/src/soap/baseData/SOAPCompoundtype")
(find-rurima "--- encodingstyle=(value)" "== Instance Methods" "= module SOAP::SOAPCompoundtype" "refm/api/src/soap/baseData/SOAPCompoundtype")
(find-rurima "--- extraattr" "== Instance Methods" "= module SOAP::SOAPCompoundtype" "refm/api/src/soap/baseData/SOAPCompoundtype")
(find-rurima "--- id" "== Instance Methods" "= module SOAP::SOAPCompoundtype" "refm/api/src/soap/baseData/SOAPCompoundtype")
(find-rurima "--- id=" "== Instance Methods" "= module SOAP::SOAPCompoundtype" "refm/api/src/soap/baseData/SOAPCompoundtype")
(find-rurima "--- parent" "== Instance Methods" "= module SOAP::SOAPCompoundtype" "refm/api/src/soap/baseData/SOAPCompoundtype")
(find-rurima "--- parent=(value)" "== Instance Methods" "= module SOAP::SOAPCompoundtype" "refm/api/src/soap/baseData/SOAPCompoundtype")
(find-rurima "--- position" "== Instance Methods" "= module SOAP::SOAPCompoundtype" "refm/api/src/soap/baseData/SOAPCompoundtype")
(find-rurima "--- position=(value)" "== Instance Methods" "= module SOAP::SOAPCompoundtype" "refm/api/src/soap/baseData/SOAPCompoundtype")
(find-rurima "--- precedents" "== Instance Methods" "= module SOAP::SOAPCompoundtype" "refm/api/src/soap/baseData/SOAPCompoundtype")
(find-rurima "--- root" "== Instance Methods" "= module SOAP::SOAPCompoundtype" "refm/api/src/soap/baseData/SOAPCompoundtype")
(find-rurima "--- root=(value)" "== Instance Methods" "= module SOAP::SOAPCompoundtype" "refm/api/src/soap/baseData/SOAPCompoundtype")
(find-rurima "= class SOAP::SOAPReference < XSD::NSDBase" "refm/api/src/soap/baseData/SOAPReference")
(find-rurima "== Class Methods" "= class SOAP::SOAPReference < XSD::NSDBase" "refm/api/src/soap/baseData/SOAPReference")
(find-rurima "--- new(obj = nil)" "== Class Methods" "= class SOAP::SOAPReference < XSD::NSDBase" "refm/api/src/soap/baseData/SOAPReference")
(find-rurima "--- create_refid(obj)" "== Class Methods" "= class SOAP::SOAPReference < XSD::NSDBase" "refm/api/src/soap/baseData/SOAPReference")
(find-rurima "--- decode(elename, refidstr)" "== Class Methods" "= class SOAP::SOAPReference < XSD::NSDBase" "refm/api/src/soap/baseData/SOAPReference")
(find-rurima "== Instance Methods" "= class SOAP::SOAPReference < XSD::NSDBase" "refm/api/src/soap/baseData/SOAPReference")
(find-rurima "--- __getobj__" "== Instance Methods" "= class SOAP::SOAPReference < XSD::NSDBase" "refm/api/src/soap/baseData/SOAPReference")
(find-rurima "--- __setobj__(obj)" "== Instance Methods" "= class SOAP::SOAPReference < XSD::NSDBase" "refm/api/src/soap/baseData/SOAPReference")
(find-rurima "--- method_missing(msg_id, *params)" "== Instance Methods" "= class SOAP::SOAPReference < XSD::NSDBase" "refm/api/src/soap/baseData/SOAPReference")
(find-rurima "--- refid" "== Instance Methods" "= class SOAP::SOAPReference < XSD::NSDBase" "refm/api/src/soap/baseData/SOAPReference")
(find-rurima "--- refid=(value)" "== Instance Methods" "= class SOAP::SOAPReference < XSD::NSDBase" "refm/api/src/soap/baseData/SOAPReference")
(find-rurima "--- refidstr" "== Instance Methods" "= class SOAP::SOAPReference < XSD::NSDBase" "refm/api/src/soap/baseData/SOAPReference")
(find-rurima "--- elename" "== Instance Methods" "= class SOAP::SOAPReference < XSD::NSDBase" "refm/api/src/soap/baseData/SOAPReference")
(find-rurima "--- elename=(value)" "== Instance Methods" "= class SOAP::SOAPReference < XSD::NSDBase" "refm/api/src/soap/baseData/SOAPReference")
(find-rurima "= module SOAP::SOAPBasetype" "refm/api/src/soap/baseData/SOAPBasetype")
(find-rurima "== Instance Methods" "= module SOAP::SOAPBasetype" "refm/api/src/soap/baseData/SOAPBasetype")
(find-rurima "--- initialize(*arg)" "== Instance Methods" "= module SOAP::SOAPBasetype" "refm/api/src/soap/baseData/SOAPBasetype")
(find-rurima "--- elename" "== Instance Methods" "= module SOAP::SOAPBasetype" "refm/api/src/soap/baseData/SOAPBasetype")
(find-rurima "--- elename=(value)" "== Instance Methods" "= module SOAP::SOAPBasetype" "refm/api/src/soap/baseData/SOAPBasetype")
(find-rurima "--- encodingstyle" "== Instance Methods" "= module SOAP::SOAPBasetype" "refm/api/src/soap/baseData/SOAPBasetype")
(find-rurima "--- encodingstyle=(value)" "== Instance Methods" "= module SOAP::SOAPBasetype" "refm/api/src/soap/baseData/SOAPBasetype")
(find-rurima "--- extraattr" "== Instance Methods" "= module SOAP::SOAPBasetype" "refm/api/src/soap/baseData/SOAPBasetype")
(find-rurima "--- id" "== Instance Methods" "= module SOAP::SOAPBasetype" "refm/api/src/soap/baseData/SOAPBasetype")
(find-rurima "--- id=(value)" "== Instance Methods" "= module SOAP::SOAPBasetype" "refm/api/src/soap/baseData/SOAPBasetype")
(find-rurima "--- parent" "== Instance Methods" "= module SOAP::SOAPBasetype" "refm/api/src/soap/baseData/SOAPBasetype")
(find-rurima "--- parent=(value)" "== Instance Methods" "= module SOAP::SOAPBasetype" "refm/api/src/soap/baseData/SOAPBasetype")
(find-rurima "--- position" "== Instance Methods" "= module SOAP::SOAPBasetype" "refm/api/src/soap/baseData/SOAPBasetype")
(find-rurima "--- position=(value)" "== Instance Methods" "= module SOAP::SOAPBasetype" "refm/api/src/soap/baseData/SOAPBasetype")
(find-rurima "--- precedents" "== Instance Methods" "= module SOAP::SOAPBasetype" "refm/api/src/soap/baseData/SOAPBasetype")
(find-rurima "--- root" "== Instance Methods" "= module SOAP::SOAPBasetype" "refm/api/src/soap/baseData/SOAPBasetype")
(find-rurima "--- root=(value)" "== Instance Methods" "= module SOAP::SOAPBasetype" "refm/api/src/soap/baseData/SOAPBasetype")
(find-rurima "= class SOAP::SOAPArray < XSD::NSDBase" "refm/api/src/soap/baseData/SOAPArray")
(find-rurima "== Class Methods" "= class SOAP::SOAPArray < XSD::NSDBase" "refm/api/src/soap/baseData/SOAPArray")
(find-rurima "--- new(type = nil, rank = 1, arytype = nil)" "== Class Methods" "= class SOAP::SOAPArray < XSD::NSDBase" "refm/api/src/soap/baseData/SOAPArray")
(find-rurima "--- decode(elename, type, arytype)" "== Class Methods" "= class SOAP::SOAPArray < XSD::NSDBase" "refm/api/src/soap/baseData/SOAPArray")
(find-rurima "--- create_arytype(typename, rank)" "== Class Methods" "= class SOAP::SOAPArray < XSD::NSDBase" "refm/api/src/soap/baseData/SOAPArray")
(find-rurima "--- parse_type(string)" "== Class Methods" "= class SOAP::SOAPArray < XSD::NSDBase" "refm/api/src/soap/baseData/SOAPArray")
(find-rurima "== Instance Methods" "= class SOAP::SOAPArray < XSD::NSDBase" "refm/api/src/soap/baseData/SOAPArray")
(find-rurima "--- sparse" "== Instance Methods" "= class SOAP::SOAPArray < XSD::NSDBase" "refm/api/src/soap/baseData/SOAPArray")
(find-rurima "--- sparse=(value)" "== Instance Methods" "= class SOAP::SOAPArray < XSD::NSDBase" "refm/api/src/soap/baseData/SOAPArray")
(find-rurima "--- offset" "== Instance Methods" "= class SOAP::SOAPArray < XSD::NSDBase" "refm/api/src/soap/baseData/SOAPArray")
(find-rurima "--- offset=(var)" "== Instance Methods" "= class SOAP::SOAPArray < XSD::NSDBase" "refm/api/src/soap/baseData/SOAPArray")
(find-rurima "--- rank" "== Instance Methods" "= class SOAP::SOAPArray < XSD::NSDBase" "refm/api/src/soap/baseData/SOAPArray")
(find-rurima "--- size" "== Instance Methods" "= class SOAP::SOAPArray < XSD::NSDBase" "refm/api/src/soap/baseData/SOAPArray")
(find-rurima "--- size=(value)" "== Instance Methods" "= class SOAP::SOAPArray < XSD::NSDBase" "refm/api/src/soap/baseData/SOAPArray")
(find-rurima "--- size_fixed" "== Instance Methods" "= class SOAP::SOAPArray < XSD::NSDBase" "refm/api/src/soap/baseData/SOAPArray")
(find-rurima "--- size_fixed=(value)" "== Instance Methods" "= class SOAP::SOAPArray < XSD::NSDBase" "refm/api/src/soap/baseData/SOAPArray")
(find-rurima "--- arytype" "== Instance Methods" "= class SOAP::SOAPArray < XSD::NSDBase" "refm/api/src/soap/baseData/SOAPArray")
(find-rurima "--- add(value)" "== Instance Methods" "= class SOAP::SOAPArray < XSD::NSDBase" "refm/api/src/soap/baseData/SOAPArray")
(find-rurima "--- [](*idxary)" "== Instance Methods" "= class SOAP::SOAPArray < XSD::NSDBase" "refm/api/src/soap/baseData/SOAPArray")
(find-rurima "--- []=(*idxary)" "== Instance Methods" "= class SOAP::SOAPArray < XSD::NSDBase" "refm/api/src/soap/baseData/SOAPArray")
(find-rurima "--- each {|data| ... }" "== Instance Methods" "= class SOAP::SOAPArray < XSD::NSDBase" "refm/api/src/soap/baseData/SOAPArray")
(find-rurima "--- to_a" "== Instance Methods" "= class SOAP::SOAPArray < XSD::NSDBase" "refm/api/src/soap/baseData/SOAPArray")
(find-rurima "--- replace {|ele| ... }" "== Instance Methods" "= class SOAP::SOAPArray < XSD::NSDBase" "refm/api/src/soap/baseData/SOAPArray")
(find-rurima "--- deep_map(ary) {|ele| ... }" "== Instance Methods" "= class SOAP::SOAPArray < XSD::NSDBase" "refm/api/src/soap/baseData/SOAPArray")
(find-rurima "--- include?(var)" "== Instance Methods" "= class SOAP::SOAPArray < XSD::NSDBase" "refm/api/src/soap/baseData/SOAPArray")
(find-rurima "--- traverse {|v, *rank| ... }" "== Instance Methods" "= class SOAP::SOAPArray < XSD::NSDBase" "refm/api/src/soap/baseData/SOAPArray")
(find-rurima "--- soap2array(ary)" "== Instance Methods" "= class SOAP::SOAPArray < XSD::NSDBase" "refm/api/src/soap/baseData/SOAPArray")
(find-rurima "--- position" "== Instance Methods" "= class SOAP::SOAPArray < XSD::NSDBase" "refm/api/src/soap/baseData/SOAPArray")
(find-rurima "== Constants" "= class SOAP::SOAPArray < XSD::NSDBase" "refm/api/src/soap/baseData/SOAPArray")
(find-rurima "--- ITEM_NAME" "== Constants" "= class SOAP::SOAPArray < XSD::NSDBase" "refm/api/src/soap/baseData/SOAPArray")
(find-rurima "--- TypeParseRegexp" "== Constants" "= class SOAP::SOAPArray < XSD::NSDBase" "refm/api/src/soap/baseData/SOAPArray")
(find-rurima "= class SOAP::SOAPElement" "refm/api/src/soap/baseData/SOAPElement")
(find-rurima "== Class Methods" "= class SOAP::SOAPElement" "refm/api/src/soap/baseData/SOAPElement")
(find-rurima "--- new(elename, text = nil)" "== Class Methods" "= class SOAP::SOAPElement" "refm/api/src/soap/baseData/SOAPElement")
(find-rurima "--- decode(elename)" "== Class Methods" "= class SOAP::SOAPElement" "refm/api/src/soap/baseData/SOAPElement")
(find-rurima "--- from_obj(obj, namespace = nil)" "== Class Methods" "= class SOAP::SOAPElement" "refm/api/src/soap/baseData/SOAPElement")
(find-rurima "--- to_elename(obj, namespace = nil)" "== Class Methods" "= class SOAP::SOAPElement" "refm/api/src/soap/baseData/SOAPElement")
(find-rurima "== Instance Methods" "= class SOAP::SOAPElement" "refm/api/src/soap/baseData/SOAPElement")
(find-rurima "--- encodingstyle" "== Instance Methods" "= class SOAP::SOAPElement" "refm/api/src/soap/baseData/SOAPElement")
(find-rurima "--- encodingstyle=(value)" "== Instance Methods" "= class SOAP::SOAPElement" "refm/api/src/soap/baseData/SOAPElement")
(find-rurima "--- elename" "== Instance Methods" "= class SOAP::SOAPElement" "refm/api/src/soap/baseData/SOAPElement")
(find-rurima "--- elename=(value)" "== Instance Methods" "= class SOAP::SOAPElement" "refm/api/src/soap/baseData/SOAPElement")
(find-rurima "--- id" "== Instance Methods" "= class SOAP::SOAPElement" "refm/api/src/soap/baseData/SOAPElement")
(find-rurima "--- id=(value)" "== Instance Methods" "= class SOAP::SOAPElement" "refm/api/src/soap/baseData/SOAPElement")
(find-rurima "--- precedents" "== Instance Methods" "= class SOAP::SOAPElement" "refm/api/src/soap/baseData/SOAPElement")
(find-rurima "--- root" "== Instance Methods" "= class SOAP::SOAPElement" "refm/api/src/soap/baseData/SOAPElement")
(find-rurima "--- root=(value)" "== Instance Methods" "= class SOAP::SOAPElement" "refm/api/src/soap/baseData/SOAPElement")
(find-rurima "--- parent" "== Instance Methods" "= class SOAP::SOAPElement" "refm/api/src/soap/baseData/SOAPElement")
(find-rurima "--- parent=(value)" "== Instance Methods" "= class SOAP::SOAPElement" "refm/api/src/soap/baseData/SOAPElement")
(find-rurima "--- position" "== Instance Methods" "= class SOAP::SOAPElement" "refm/api/src/soap/baseData/SOAPElement")
(find-rurima "--- position=(value)" "== Instance Methods" "= class SOAP::SOAPElement" "refm/api/src/soap/baseData/SOAPElement")
(find-rurima "--- extraattr" "== Instance Methods" "= class SOAP::SOAPElement" "refm/api/src/soap/baseData/SOAPElement")
(find-rurima "--- extraattr=(value)" "== Instance Methods" "= class SOAP::SOAPElement" "refm/api/src/soap/baseData/SOAPElement")
(find-rurima "--- qualified" "== Instance Methods" "= class SOAP::SOAPElement" "refm/api/src/soap/baseData/SOAPElement")
(find-rurima "--- qualified=(value)" "== Instance Methods" "= class SOAP::SOAPElement" "refm/api/src/soap/baseData/SOAPElement")
(find-rurima "--- inspect" "== Instance Methods" "= class SOAP::SOAPElement" "refm/api/src/soap/baseData/SOAPElement")
(find-rurima "--- text" "== Instance Methods" "= class SOAP::SOAPElement" "refm/api/src/soap/baseData/SOAPElement")
(find-rurima "--- text=(value)" "== Instance Methods" "= class SOAP::SOAPElement" "refm/api/src/soap/baseData/SOAPElement")
(find-rurima "--- data" "== Instance Methods" "= class SOAP::SOAPElement" "refm/api/src/soap/baseData/SOAPElement")
(find-rurima "--- add(value)" "== Instance Methods" "= class SOAP::SOAPElement" "refm/api/src/soap/baseData/SOAPElement")
(find-rurima "--- [](idx)" "== Instance Methods" "= class SOAP::SOAPElement" "refm/api/src/soap/baseData/SOAPElement")
(find-rurima "--- []=(idx, data)" "== Instance Methods" "= class SOAP::SOAPElement" "refm/api/src/soap/baseData/SOAPElement")
(find-rurima "--- key?(name)" "== Instance Methods" "= class SOAP::SOAPElement" "refm/api/src/soap/baseData/SOAPElement")
(find-rurima "--- members" "== Instance Methods" "= class SOAP::SOAPElement" "refm/api/src/soap/baseData/SOAPElement")
(find-rurima "--- to_obj" "== Instance Methods" "= class SOAP::SOAPElement" "refm/api/src/soap/baseData/SOAPElement")
(find-rurima "--- each {|key, value| ... }" "== Instance Methods" "= class SOAP::SOAPElement" "refm/api/src/soap/baseData/SOAPElement")
(find-rurima "= class SOAP::NetHttpClient < Object" "refm/api/src/soap/netHttpClient/NetHttpClient")
(find-rurima "== Class Methods" "= class SOAP::NetHttpClient < Object" "refm/api/src/soap/netHttpClient/NetHttpClient")
(find-rurima "--- new(proxy = nil, agent = nil)" "== Class Methods" "= class SOAP::NetHttpClient < Object" "refm/api/src/soap/netHttpClient/NetHttpClient")
(find-rurima "== Instance Methods" "= class SOAP::NetHttpClient < Object" "refm/api/src/soap/netHttpClient/NetHttpClient")
(find-rurima "--- proxy" "== Instance Methods" "= class SOAP::NetHttpClient < Object" "refm/api/src/soap/netHttpClient/NetHttpClient")
(find-rurima "--- no_proxy" "== Instance Methods" "= class SOAP::NetHttpClient < Object" "refm/api/src/soap/netHttpClient/NetHttpClient")
(find-rurima "--- no_proxy=(value)" "== Instance Methods" "= class SOAP::NetHttpClient < Object" "refm/api/src/soap/netHttpClient/NetHttpClient")
(find-rurima "--- debug_dev" "== Instance Methods" "= class SOAP::NetHttpClient < Object" "refm/api/src/soap/netHttpClient/NetHttpClient")
(find-rurima "--- debug_dev=(value)" "== Instance Methods" "= class SOAP::NetHttpClient < Object" "refm/api/src/soap/netHttpClient/NetHttpClient")
(find-rurima "--- ssl_config" "== Instance Methods" "= class SOAP::NetHttpClient < Object" "refm/api/src/soap/netHttpClient/NetHttpClient")
(find-rurima "--- ssl_config=(value)" "== Instance Methods" "= class SOAP::NetHttpClient < Object" "refm/api/src/soap/netHttpClient/NetHttpClient")
(find-rurima "--- protocol_version" "== Instance Methods" "= class SOAP::NetHttpClient < Object" "refm/api/src/soap/netHttpClient/NetHttpClient")
(find-rurima "--- protocol_version=(value)" "== Instance Methods" "= class SOAP::NetHttpClient < Object" "refm/api/src/soap/netHttpClient/NetHttpClient")
(find-rurima "--- connect_timeout" "== Instance Methods" "= class SOAP::NetHttpClient < Object" "refm/api/src/soap/netHttpClient/NetHttpClient")
(find-rurima "--- connect_timeout=(value)" "== Instance Methods" "= class SOAP::NetHttpClient < Object" "refm/api/src/soap/netHttpClient/NetHttpClient")
(find-rurima "--- send_timeout" "== Instance Methods" "= class SOAP::NetHttpClient < Object" "refm/api/src/soap/netHttpClient/NetHttpClient")
(find-rurima "--- send_timeout=(value)" "== Instance Methods" "= class SOAP::NetHttpClient < Object" "refm/api/src/soap/netHttpClient/NetHttpClient")
(find-rurima "--- receive_timeout" "== Instance Methods" "= class SOAP::NetHttpClient < Object" "refm/api/src/soap/netHttpClient/NetHttpClient")
(find-rurima "--- receive_timeout=(value)" "== Instance Methods" "= class SOAP::NetHttpClient < Object" "refm/api/src/soap/netHttpClient/NetHttpClient")
(find-rurima "--- test_loopback_response" "== Instance Methods" "= class SOAP::NetHttpClient < Object" "refm/api/src/soap/netHttpClient/NetHttpClient")
(find-rurima "--- proxy=(proxy)" "== Instance Methods" "= class SOAP::NetHttpClient < Object" "refm/api/src/soap/netHttpClient/NetHttpClient")
(find-rurima "--- set_basic_auth(uri, user_id, passwd)" "== Instance Methods" "= class SOAP::NetHttpClient < Object" "refm/api/src/soap/netHttpClient/NetHttpClient")
(find-rurima "--- set_cookie_store(filename)" "== Instance Methods" "= class SOAP::NetHttpClient < Object" "refm/api/src/soap/netHttpClient/NetHttpClient")
(find-rurima "--- save_cookie_store(filename)" "== Instance Methods" "= class SOAP::NetHttpClient < Object" "refm/api/src/soap/netHttpClient/NetHttpClient")
(find-rurima "--- reset(url)" "== Instance Methods" "= class SOAP::NetHttpClient < Object" "refm/api/src/soap/netHttpClient/NetHttpClient")
(find-rurima "--- reset_all" "== Instance Methods" "= class SOAP::NetHttpClient < Object" "refm/api/src/soap/netHttpClient/NetHttpClient")
(find-rurima "--- post(url, req_body, header = {})" "== Instance Methods" "= class SOAP::NetHttpClient < Object" "refm/api/src/soap/netHttpClient/NetHttpClient")
(find-rurima "--- get_content(url, header = {})" "== Instance Methods" "= class SOAP::NetHttpClient < Object" "refm/api/src/soap/netHttpClient/NetHttpClient")
(find-rurima "== Constants" "= class SOAP::NetHttpClient < Object" "refm/api/src/soap/netHttpClient/NetHttpClient")
(find-rurima "--- SSLEnabled" "== Constants" "= class SOAP::NetHttpClient < Object" "refm/api/src/soap/netHttpClient/NetHttpClient")
(find-rurima "--- NO_PROXY_HOSTS" "== Constants" "= class SOAP::NetHttpClient < Object" "refm/api/src/soap/netHttpClient/NetHttpClient")
(find-rurima "= class SOAP::NetHttpClient::SessionManager < Object" "refm/api/src/soap/netHttpClient/NetHttpClient__SessionManager")
(find-rurima "== Instance Methods" "= class SOAP::NetHttpClient::SessionManager < Object" "refm/api/src/soap/netHttpClient/NetHttpClient__SessionManager")
(find-rurima "--- connect_timeout" "== Instance Methods" "= class SOAP::NetHttpClient::SessionManager < Object" "refm/api/src/soap/netHttpClient/NetHttpClient__SessionManager")
(find-rurima "--- connect_timeout=(value)" "== Instance Methods" "= class SOAP::NetHttpClient::SessionManager < Object" "refm/api/src/soap/netHttpClient/NetHttpClient__SessionManager")
(find-rurima "--- send_timeout" "== Instance Methods" "= class SOAP::NetHttpClient::SessionManager < Object" "refm/api/src/soap/netHttpClient/NetHttpClient__SessionManager")
(find-rurima "--- send_timeout=(value)" "== Instance Methods" "= class SOAP::NetHttpClient::SessionManager < Object" "refm/api/src/soap/netHttpClient/NetHttpClient__SessionManager")
(find-rurima "--- receive_timeout" "== Instance Methods" "= class SOAP::NetHttpClient::SessionManager < Object" "refm/api/src/soap/netHttpClient/NetHttpClient__SessionManager")
(find-rurima "--- receive_timeout=(value)" "== Instance Methods" "= class SOAP::NetHttpClient::SessionManager < Object" "refm/api/src/soap/netHttpClient/NetHttpClient__SessionManager")
(find-rurima "= class SOAP::NetHttpClient::Response" "refm/api/src/soap/netHttpClient/NetHttpClient__Response")
(find-rurima "== Class Methods" "= class SOAP::NetHttpClient::Response" "refm/api/src/soap/netHttpClient/NetHttpClient__Response")
(find-rurima "--- new(res)" "== Class Methods" "= class SOAP::NetHttpClient::Response" "refm/api/src/soap/netHttpClient/NetHttpClient__Response")
(find-rurima "== Instance Methods" "= class SOAP::NetHttpClient::Response" "refm/api/src/soap/netHttpClient/NetHttpClient__Response")
(find-rurima "--- content" "== Instance Methods" "= class SOAP::NetHttpClient::Response" "refm/api/src/soap/netHttpClient/NetHttpClient__Response")
(find-rurima "--- status" "== Instance Methods" "= class SOAP::NetHttpClient::Response" "refm/api/src/soap/netHttpClient/NetHttpClient__Response")
(find-rurima "--- reason" "== Instance Methods" "= class SOAP::NetHttpClient::Response" "refm/api/src/soap/netHttpClient/NetHttpClient__Response")
(find-rurima "--- contenttype" "== Instance Methods" "= class SOAP::NetHttpClient::Response" "refm/api/src/soap/netHttpClient/NetHttpClient__Response")
(find-rurima "= class SOAP::EncodingStyle::ASPDotNetHandler::SOAPTemporalObject" "refm/api/src/soap/encodingstyle/aspDotNetHandler/EncodingStyle__ASPDotNetHandler__SOAPTemporalObject")
(find-rurima "== Class Methods" "= class SOAP::EncodingStyle::ASPDotNetHandler::SOAPTemporalObject" "refm/api/src/soap/encodingstyle/aspDotNetHandler/EncodingStyle__ASPDotNetHandler__SOAPTemporalObject")
(find-rurima "--- new" "== Class Methods" "= class SOAP::EncodingStyle::ASPDotNetHandler::SOAPTemporalObject" "refm/api/src/soap/encodingstyle/aspDotNetHandler/EncodingStyle__ASPDotNetHandler__SOAPTemporalObject")
(find-rurima "== Instance Methods" "= class SOAP::EncodingStyle::ASPDotNetHandler::SOAPTemporalObject" "refm/api/src/soap/encodingstyle/aspDotNetHandler/EncodingStyle__ASPDotNetHandler__SOAPTemporalObject")
(find-rurima "--- parent" "== Instance Methods" "= class SOAP::EncodingStyle::ASPDotNetHandler::SOAPTemporalObject" "refm/api/src/soap/encodingstyle/aspDotNetHandler/EncodingStyle__ASPDotNetHandler__SOAPTemporalObject")
(find-rurima "--- parent=(value)" "== Instance Methods" "= class SOAP::EncodingStyle::ASPDotNetHandler::SOAPTemporalObject" "refm/api/src/soap/encodingstyle/aspDotNetHandler/EncodingStyle__ASPDotNetHandler__SOAPTemporalObject")
(find-rurima "= class SOAP::EncodingStyle::ASPDotNetHandler < SOAP::EncodingStyle::Handler" "refm/api/src/soap/encodingstyle/aspDotNetHandler/EncodingStyle__ASPDotNetHandler")
(find-rurima "== Class Methods" "= class SOAP::EncodingStyle::ASPDotNetHandler < SOAP::EncodingStyle::Handler" "refm/api/src/soap/encodingstyle/aspDotNetHandler/EncodingStyle__ASPDotNetHandler")
(find-rurima "--- new(charset = nil)" "== Class Methods" "= class SOAP::EncodingStyle::ASPDotNetHandler < SOAP::EncodingStyle::Handler" "refm/api/src/soap/encodingstyle/aspDotNetHandler/EncodingStyle__ASPDotNetHandler")
(find-rurima "== Instance Methods" "= class SOAP::EncodingStyle::ASPDotNetHandler < SOAP::EncodingStyle::Handler" "refm/api/src/soap/encodingstyle/aspDotNetHandler/EncodingStyle__ASPDotNetHandler")
(find-rurima "--- encode_data(generator, ns, data, parent)" "== Instance Methods" "= class SOAP::EncodingStyle::ASPDotNetHandler < SOAP::EncodingStyle::Handler" "refm/api/src/soap/encodingstyle/aspDotNetHandler/EncodingStyle__ASPDotNetHandler")
(find-rurima "--- encode_data_end(generator, ns, data, parent)" "== Instance Methods" "= class SOAP::EncodingStyle::ASPDotNetHandler < SOAP::EncodingStyle::Handler" "refm/api/src/soap/encodingstyle/aspDotNetHandler/EncodingStyle__ASPDotNetHandler")
(find-rurima "--- decode_tag(ns, elename, attrs, parent)" "== Instance Methods" "= class SOAP::EncodingStyle::ASPDotNetHandler < SOAP::EncodingStyle::Handler" "refm/api/src/soap/encodingstyle/aspDotNetHandler/EncodingStyle__ASPDotNetHandler")
(find-rurima "--- decode_tag_end(ns, node)" "== Instance Methods" "= class SOAP::EncodingStyle::ASPDotNetHandler < SOAP::EncodingStyle::Handler" "refm/api/src/soap/encodingstyle/aspDotNetHandler/EncodingStyle__ASPDotNetHandler")
(find-rurima "--- decode_text(ns, text)" "== Instance Methods" "= class SOAP::EncodingStyle::ASPDotNetHandler < SOAP::EncodingStyle::Handler" "refm/api/src/soap/encodingstyle/aspDotNetHandler/EncodingStyle__ASPDotNetHandler")
(find-rurima "--- decode_prologue" "== Instance Methods" "= class SOAP::EncodingStyle::ASPDotNetHandler < SOAP::EncodingStyle::Handler" "refm/api/src/soap/encodingstyle/aspDotNetHandler/EncodingStyle__ASPDotNetHandler")
(find-rurima "--- decode_epilogue" "== Instance Methods" "= class SOAP::EncodingStyle::ASPDotNetHandler < SOAP::EncodingStyle::Handler" "refm/api/src/soap/encodingstyle/aspDotNetHandler/EncodingStyle__ASPDotNetHandler")
(find-rurima "--- decode_parent(parent, node)" "== Instance Methods" "= class SOAP::EncodingStyle::ASPDotNetHandler < SOAP::EncodingStyle::Handler" "refm/api/src/soap/encodingstyle/aspDotNetHandler/EncodingStyle__ASPDotNetHandler")
(find-rurima "== Constants" "= class SOAP::EncodingStyle::ASPDotNetHandler < SOAP::EncodingStyle::Handler" "refm/api/src/soap/encodingstyle/aspDotNetHandler/EncodingStyle__ASPDotNetHandler")
(find-rurima "--- Namespace" "== Constants" "= class SOAP::EncodingStyle::ASPDotNetHandler < SOAP::EncodingStyle::Handler" "refm/api/src/soap/encodingstyle/aspDotNetHandler/EncodingStyle__ASPDotNetHandler")
(find-rurima "= class SOAP::EncodingStyle::ASPDotNetHandler::SOAPUnknown < SOAP::EncodingStyle::ASPDotNetHandler::SOAPTemporalObject" "refm/api/src/soap/encodingstyle/aspDotNetHandler/EncodingStyle__ASPDotNetHandler__SOAPUnknown")
(find-rurima "== Class Methods" "= class SOAP::EncodingStyle::ASPDotNetHandler::SOAPUnknown < SOAP::EncodingStyle::ASPDotNetHandler::SOAPTemporalObject" "refm/api/src/soap/encodingstyle/aspDotNetHandler/EncodingStyle__ASPDotNetHandler__SOAPUnknown")
(find-rurima "--- new(handler, elename)" "== Class Methods" "= class SOAP::EncodingStyle::ASPDotNetHandler::SOAPUnknown < SOAP::EncodingStyle::ASPDotNetHandler::SOAPTemporalObject" "refm/api/src/soap/encodingstyle/aspDotNetHandler/EncodingStyle__ASPDotNetHandler__SOAPUnknown")
(find-rurima "== Instance Methods" "= class SOAP::EncodingStyle::ASPDotNetHandler::SOAPUnknown < SOAP::EncodingStyle::ASPDotNetHandler::SOAPTemporalObject" "refm/api/src/soap/encodingstyle/aspDotNetHandler/EncodingStyle__ASPDotNetHandler__SOAPUnknown")
(find-rurima "--- as_struct" "== Instance Methods" "= class SOAP::EncodingStyle::ASPDotNetHandler::SOAPUnknown < SOAP::EncodingStyle::ASPDotNetHandler::SOAPTemporalObject" "refm/api/src/soap/encodingstyle/aspDotNetHandler/EncodingStyle__ASPDotNetHandler__SOAPUnknown")
(find-rurima "--- as_string" "== Instance Methods" "= class SOAP::EncodingStyle::ASPDotNetHandler::SOAPUnknown < SOAP::EncodingStyle::ASPDotNetHandler::SOAPTemporalObject" "refm/api/src/soap/encodingstyle/aspDotNetHandler/EncodingStyle__ASPDotNetHandler__SOAPUnknown")
(find-rurima "--- as_nil" "== Instance Methods" "= class SOAP::EncodingStyle::ASPDotNetHandler::SOAPUnknown < SOAP::EncodingStyle::ASPDotNetHandler::SOAPTemporalObject" "refm/api/src/soap/encodingstyle/aspDotNetHandler/EncodingStyle__ASPDotNetHandler__SOAPUnknown")
(find-rurima "= class SOAP::EncodingStyle::LiteralHandler::SOAPUnknown < SOAP::EncodingStyle::LiteralHandler::SOAPTemporalObject" "refm/api/src/soap/encodingstyle/literalHandler/EncodingStyle__LiteralHandler__SOAPUnknown")
(find-rurima "== Class Methods" "= class SOAP::EncodingStyle::LiteralHandler::SOAPUnknown < SOAP::EncodingStyle::LiteralHandler::SOAPTemporalObject" "refm/api/src/soap/encodingstyle/literalHandler/EncodingStyle__LiteralHandler__SOAPUnknown")
(find-rurima "--- new(handler, elename, extraattr)" "== Class Methods" "= class SOAP::EncodingStyle::LiteralHandler::SOAPUnknown < SOAP::EncodingStyle::LiteralHandler::SOAPTemporalObject" "refm/api/src/soap/encodingstyle/literalHandler/EncodingStyle__LiteralHandler__SOAPUnknown")
(find-rurima "== Instance Methods" "= class SOAP::EncodingStyle::LiteralHandler::SOAPUnknown < SOAP::EncodingStyle::LiteralHandler::SOAPTemporalObject" "refm/api/src/soap/encodingstyle/literalHandler/EncodingStyle__LiteralHandler__SOAPUnknown")
(find-rurima "--- as_element" "== Instance Methods" "= class SOAP::EncodingStyle::LiteralHandler::SOAPUnknown < SOAP::EncodingStyle::LiteralHandler::SOAPTemporalObject" "refm/api/src/soap/encodingstyle/literalHandler/EncodingStyle__LiteralHandler__SOAPUnknown")
(find-rurima "--- as_string" "== Instance Methods" "= class SOAP::EncodingStyle::LiteralHandler::SOAPUnknown < SOAP::EncodingStyle::LiteralHandler::SOAPTemporalObject" "refm/api/src/soap/encodingstyle/literalHandler/EncodingStyle__LiteralHandler__SOAPUnknown")
(find-rurima "--- as_nil" "== Instance Methods" "= class SOAP::EncodingStyle::LiteralHandler::SOAPUnknown < SOAP::EncodingStyle::LiteralHandler::SOAPTemporalObject" "refm/api/src/soap/encodingstyle/literalHandler/EncodingStyle__LiteralHandler__SOAPUnknown")
(find-rurima "--- as_struct" "== Instance Methods" "= class SOAP::EncodingStyle::LiteralHandler::SOAPUnknown < SOAP::EncodingStyle::LiteralHandler::SOAPTemporalObject" "refm/api/src/soap/encodingstyle/literalHandler/EncodingStyle__LiteralHandler__SOAPUnknown")
(find-rurima "= class SOAP::EncodingStyle::LiteralHandler < SOAP::EncodingStyle::Handler" "refm/api/src/soap/encodingstyle/literalHandler/EncodingStyle__LiteralHandler")
(find-rurima "== Class Methods" "= class SOAP::EncodingStyle::LiteralHandler < SOAP::EncodingStyle::Handler" "refm/api/src/soap/encodingstyle/literalHandler/EncodingStyle__LiteralHandler")
(find-rurima "--- new(charset = nil)" "== Class Methods" "= class SOAP::EncodingStyle::LiteralHandler < SOAP::EncodingStyle::Handler" "refm/api/src/soap/encodingstyle/literalHandler/EncodingStyle__LiteralHandler")
(find-rurima "== Instance Methods" "= class SOAP::EncodingStyle::LiteralHandler < SOAP::EncodingStyle::Handler" "refm/api/src/soap/encodingstyle/literalHandler/EncodingStyle__LiteralHandler")
(find-rurima "--- encode_data(generator, ns, data, parent)" "== Instance Methods" "= class SOAP::EncodingStyle::LiteralHandler < SOAP::EncodingStyle::Handler" "refm/api/src/soap/encodingstyle/literalHandler/EncodingStyle__LiteralHandler")
(find-rurima "--- encode_data_end(generator, ns, data, parent)" "== Instance Methods" "= class SOAP::EncodingStyle::LiteralHandler < SOAP::EncodingStyle::Handler" "refm/api/src/soap/encodingstyle/literalHandler/EncodingStyle__LiteralHandler")
(find-rurima "--- decode_tag(ns, elename, attrs, parent)" "== Instance Methods" "= class SOAP::EncodingStyle::LiteralHandler < SOAP::EncodingStyle::Handler" "refm/api/src/soap/encodingstyle/literalHandler/EncodingStyle__LiteralHandler")
(find-rurima "--- decode_tag_end(ns, node)" "== Instance Methods" "= class SOAP::EncodingStyle::LiteralHandler < SOAP::EncodingStyle::Handler" "refm/api/src/soap/encodingstyle/literalHandler/EncodingStyle__LiteralHandler")
(find-rurima "--- decode_text(ns, text)" "== Instance Methods" "= class SOAP::EncodingStyle::LiteralHandler < SOAP::EncodingStyle::Handler" "refm/api/src/soap/encodingstyle/literalHandler/EncodingStyle__LiteralHandler")
(find-rurima "--- decode_attrs(ns, attrs)" "== Instance Methods" "= class SOAP::EncodingStyle::LiteralHandler < SOAP::EncodingStyle::Handler" "refm/api/src/soap/encodingstyle/literalHandler/EncodingStyle__LiteralHandler")
(find-rurima "--- decode_prologue" "== Instance Methods" "= class SOAP::EncodingStyle::LiteralHandler < SOAP::EncodingStyle::Handler" "refm/api/src/soap/encodingstyle/literalHandler/EncodingStyle__LiteralHandler")
(find-rurima "--- decode_epilogue" "== Instance Methods" "= class SOAP::EncodingStyle::LiteralHandler < SOAP::EncodingStyle::Handler" "refm/api/src/soap/encodingstyle/literalHandler/EncodingStyle__LiteralHandler")
(find-rurima "--- decode_parent(parent, node)" "== Instance Methods" "= class SOAP::EncodingStyle::LiteralHandler < SOAP::EncodingStyle::Handler" "refm/api/src/soap/encodingstyle/literalHandler/EncodingStyle__LiteralHandler")
(find-rurima "== Constants" "= class SOAP::EncodingStyle::LiteralHandler < SOAP::EncodingStyle::Handler" "refm/api/src/soap/encodingstyle/literalHandler/EncodingStyle__LiteralHandler")
(find-rurima "--- Namespace" "== Constants" "= class SOAP::EncodingStyle::LiteralHandler < SOAP::EncodingStyle::Handler" "refm/api/src/soap/encodingstyle/literalHandler/EncodingStyle__LiteralHandler")
(find-rurima "= class SOAP::EncodingStyle::LiteralHandler::SOAPTemporalObject < Object" "refm/api/src/soap/encodingstyle/literalHandler/EncodingStyle__LiteralHandler__SOAPTemporalObject")
(find-rurima "== Class Methods" "= class SOAP::EncodingStyle::LiteralHandler::SOAPTemporalObject < Object" "refm/api/src/soap/encodingstyle/literalHandler/EncodingStyle__LiteralHandler__SOAPTemporalObject")
(find-rurima "--- new" "== Class Methods" "= class SOAP::EncodingStyle::LiteralHandler::SOAPTemporalObject < Object" "refm/api/src/soap/encodingstyle/literalHandler/EncodingStyle__LiteralHandler__SOAPTemporalObject")
(find-rurima "== Instance Methods" "= class SOAP::EncodingStyle::LiteralHandler::SOAPTemporalObject < Object" "refm/api/src/soap/encodingstyle/literalHandler/EncodingStyle__LiteralHandler__SOAPTemporalObject")
(find-rurima "--- parent" "== Instance Methods" "= class SOAP::EncodingStyle::LiteralHandler::SOAPTemporalObject < Object" "refm/api/src/soap/encodingstyle/literalHandler/EncodingStyle__LiteralHandler__SOAPTemporalObject")
(find-rurima "--- parent=(value)" "== Instance Methods" "= class SOAP::EncodingStyle::LiteralHandler::SOAPTemporalObject < Object" "refm/api/src/soap/encodingstyle/literalHandler/EncodingStyle__LiteralHandler__SOAPTemporalObject")
(find-rurima "= class SOAP::EncodingStyle::Handler < Object" "refm/api/src/soap/encodingstyle/handler.rd")
(find-rurima "== Class Methods" "= class SOAP::EncodingStyle::Handler < Object" "refm/api/src/soap/encodingstyle/handler.rd")
(find-rurima "--- new(charset)" "== Class Methods" "= class SOAP::EncodingStyle::Handler < Object" "refm/api/src/soap/encodingstyle/handler.rd")
(find-rurima "--- uri" "== Class Methods" "= class SOAP::EncodingStyle::Handler < Object" "refm/api/src/soap/encodingstyle/handler.rd")
(find-rurima "--- handler(uri)" "== Class Methods" "= class SOAP::EncodingStyle::Handler < Object" "refm/api/src/soap/encodingstyle/handler.rd")
(find-rurima "--- each {|value| ... }" "== Class Methods" "= class SOAP::EncodingStyle::Handler < Object" "refm/api/src/soap/encodingstyle/handler.rd")
(find-rurima "== Instance Methods" "= class SOAP::EncodingStyle::Handler < Object" "refm/api/src/soap/encodingstyle/handler.rd")
(find-rurima "--- charset" "== Instance Methods" "= class SOAP::EncodingStyle::Handler < Object" "refm/api/src/soap/encodingstyle/handler.rd")
(find-rurima "--- generate_explicit_type" "== Instance Methods" "= class SOAP::EncodingStyle::Handler < Object" "refm/api/src/soap/encodingstyle/handler.rd")
(find-rurima "--- generate_explicit_type=(value)" "== Instance Methods" "= class SOAP::EncodingStyle::Handler < Object" "refm/api/src/soap/encodingstyle/handler.rd")
(find-rurima "--- decode_typemap=(definedtypes)" "== Instance Methods" "= class SOAP::EncodingStyle::Handler < Object" "refm/api/src/soap/encodingstyle/handler.rd")
(find-rurima "--- encode_data(generator, ns, data, parent)" "== Instance Methods" "= class SOAP::EncodingStyle::Handler < Object" "refm/api/src/soap/encodingstyle/handler.rd")
(find-rurima "--- encode_data_end(generator, ns, data, parent)" "== Instance Methods" "= class SOAP::EncodingStyle::Handler < Object" "refm/api/src/soap/encodingstyle/handler.rd")
(find-rurima "--- encode_prologue" "== Instance Methods" "= class SOAP::EncodingStyle::Handler < Object" "refm/api/src/soap/encodingstyle/handler.rd")
(find-rurima "--- encode_epilogue" "== Instance Methods" "= class SOAP::EncodingStyle::Handler < Object" "refm/api/src/soap/encodingstyle/handler.rd")
(find-rurima "--- decode_tag(ns, name, attrs, parent)" "== Instance Methods" "= class SOAP::EncodingStyle::Handler < Object" "refm/api/src/soap/encodingstyle/handler.rd")
(find-rurima "--- decode_tag_end(ns, name)" "== Instance Methods" "= class SOAP::EncodingStyle::Handler < Object" "refm/api/src/soap/encodingstyle/handler.rd")
(find-rurima "--- decode_text(ns, text)" "== Instance Methods" "= class SOAP::EncodingStyle::Handler < Object" "refm/api/src/soap/encodingstyle/handler.rd")
(find-rurima "--- decode_prologue" "== Instance Methods" "= class SOAP::EncodingStyle::Handler < Object" "refm/api/src/soap/encodingstyle/handler.rd")
(find-rurima "--- decode_epilogue" "== Instance Methods" "= class SOAP::EncodingStyle::Handler < Object" "refm/api/src/soap/encodingstyle/handler.rd")
(find-rurima "= class SOAP::EncodingStyle::Handler::EncodingStyleError < SOAP::Error" "refm/api/src/soap/encodingstyle/handler.rd")
(find-rurima "= class SOAP::EncodingStyle::SOAPHandler::SOAPUnknown < SOAP::EncodingStyle::SOAPHandler::SOAPTemporalObject" "refm/api/src/soap/encodingstyle/soapHandler/EncodingStyle__SOAPHandler__SOAPUnknown")
(find-rurima "== Class Methods" "= class SOAP::EncodingStyle::SOAPHandler::SOAPUnknown < SOAP::EncodingStyle::SOAPHandler::SOAPTemporalObject" "refm/api/src/soap/encodingstyle/soapHandler/EncodingStyle__SOAPHandler__SOAPUnknown")
(find-rurima "--- new(handler, elename, type, extraattr)" "== Class Methods" "= class SOAP::EncodingStyle::SOAPHandler::SOAPUnknown < SOAP::EncodingStyle::SOAPHandler::SOAPTemporalObject" "refm/api/src/soap/encodingstyle/soapHandler/EncodingStyle__SOAPHandler__SOAPUnknown")
(find-rurima "== Instance Methods" "= class SOAP::EncodingStyle::SOAPHandler::SOAPUnknown < SOAP::EncodingStyle::SOAPHandler::SOAPTemporalObject" "refm/api/src/soap/encodingstyle/soapHandler/EncodingStyle__SOAPHandler__SOAPUnknown")
(find-rurima "--- type" "== Instance Methods" "= class SOAP::EncodingStyle::SOAPHandler::SOAPUnknown < SOAP::EncodingStyle::SOAPHandler::SOAPTemporalObject" "refm/api/src/soap/encodingstyle/soapHandler/EncodingStyle__SOAPHandler__SOAPUnknown")
(find-rurima "--- definedtype" "== Instance Methods" "= class SOAP::EncodingStyle::SOAPHandler::SOAPUnknown < SOAP::EncodingStyle::SOAPHandler::SOAPTemporalObject" "refm/api/src/soap/encodingstyle/soapHandler/EncodingStyle__SOAPHandler__SOAPUnknown")
(find-rurima "--- definedtype=(value)" "== Instance Methods" "= class SOAP::EncodingStyle::SOAPHandler::SOAPUnknown < SOAP::EncodingStyle::SOAPHandler::SOAPTemporalObject" "refm/api/src/soap/encodingstyle/soapHandler/EncodingStyle__SOAPHandler__SOAPUnknown")
(find-rurima "--- extraattr" "== Instance Methods" "= class SOAP::EncodingStyle::SOAPHandler::SOAPUnknown < SOAP::EncodingStyle::SOAPHandler::SOAPTemporalObject" "refm/api/src/soap/encodingstyle/soapHandler/EncodingStyle__SOAPHandler__SOAPUnknown")
(find-rurima "--- as_struct" "== Instance Methods" "= class SOAP::EncodingStyle::SOAPHandler::SOAPUnknown < SOAP::EncodingStyle::SOAPHandler::SOAPTemporalObject" "refm/api/src/soap/encodingstyle/soapHandler/EncodingStyle__SOAPHandler__SOAPUnknown")
(find-rurima "--- as_string" "== Instance Methods" "= class SOAP::EncodingStyle::SOAPHandler::SOAPUnknown < SOAP::EncodingStyle::SOAPHandler::SOAPTemporalObject" "refm/api/src/soap/encodingstyle/soapHandler/EncodingStyle__SOAPHandler__SOAPUnknown")
(find-rurima "--- as_nil" "== Instance Methods" "= class SOAP::EncodingStyle::SOAPHandler::SOAPUnknown < SOAP::EncodingStyle::SOAPHandler::SOAPTemporalObject" "refm/api/src/soap/encodingstyle/soapHandler/EncodingStyle__SOAPHandler__SOAPUnknown")
(find-rurima "= class SOAP::EncodingStyle::SOAPHandler::SOAPTemporalObject < Object" "refm/api/src/soap/encodingstyle/soapHandler/EncodingStyle__SOAPHandler__SOAPTemporalObject")
(find-rurima "== Class Methods" "= class SOAP::EncodingStyle::SOAPHandler::SOAPTemporalObject < Object" "refm/api/src/soap/encodingstyle/soapHandler/EncodingStyle__SOAPHandler__SOAPTemporalObject")
(find-rurima "--- new" "== Class Methods" "= class SOAP::EncodingStyle::SOAPHandler::SOAPTemporalObject < Object" "refm/api/src/soap/encodingstyle/soapHandler/EncodingStyle__SOAPHandler__SOAPTemporalObject")
(find-rurima "== Instance Methods" "= class SOAP::EncodingStyle::SOAPHandler::SOAPTemporalObject < Object" "refm/api/src/soap/encodingstyle/soapHandler/EncodingStyle__SOAPHandler__SOAPTemporalObject")
(find-rurima "--- parent" "== Instance Methods" "= class SOAP::EncodingStyle::SOAPHandler::SOAPTemporalObject < Object" "refm/api/src/soap/encodingstyle/soapHandler/EncodingStyle__SOAPHandler__SOAPTemporalObject")
(find-rurima "--- parent=(value)" "== Instance Methods" "= class SOAP::EncodingStyle::SOAPHandler::SOAPTemporalObject < Object" "refm/api/src/soap/encodingstyle/soapHandler/EncodingStyle__SOAPHandler__SOAPTemporalObject")
(find-rurima "--- position" "== Instance Methods" "= class SOAP::EncodingStyle::SOAPHandler::SOAPTemporalObject < Object" "refm/api/src/soap/encodingstyle/soapHandler/EncodingStyle__SOAPHandler__SOAPTemporalObject")
(find-rurima "--- position=(value)" "== Instance Methods" "= class SOAP::EncodingStyle::SOAPHandler::SOAPTemporalObject < Object" "refm/api/src/soap/encodingstyle/soapHandler/EncodingStyle__SOAPHandler__SOAPTemporalObject")
(find-rurima "--- id" "== Instance Methods" "= class SOAP::EncodingStyle::SOAPHandler::SOAPTemporalObject < Object" "refm/api/src/soap/encodingstyle/soapHandler/EncodingStyle__SOAPHandler__SOAPTemporalObject")
(find-rurima "--- id=(value)" "== Instance Methods" "= class SOAP::EncodingStyle::SOAPHandler::SOAPTemporalObject < Object" "refm/api/src/soap/encodingstyle/soapHandler/EncodingStyle__SOAPHandler__SOAPTemporalObject")
(find-rurima "--- root" "== Instance Methods" "= class SOAP::EncodingStyle::SOAPHandler::SOAPTemporalObject < Object" "refm/api/src/soap/encodingstyle/soapHandler/EncodingStyle__SOAPHandler__SOAPTemporalObject")
(find-rurima "--- root=(value)" "== Instance Methods" "= class SOAP::EncodingStyle::SOAPHandler::SOAPTemporalObject < Object" "refm/api/src/soap/encodingstyle/soapHandler/EncodingStyle__SOAPHandler__SOAPTemporalObject")
(find-rurima "= class SOAP::EncodingStyle::SOAPHandler < SOAP::EncodingStyle::Handler" "refm/api/src/soap/encodingstyle/soapHandler/EncodingStyle__SOAPHandler")
(find-rurima "== Class Methods" "= class SOAP::EncodingStyle::SOAPHandler < SOAP::EncodingStyle::Handler" "refm/api/src/soap/encodingstyle/soapHandler/EncodingStyle__SOAPHandler")
(find-rurima "--- new(charset = nil)" "== Class Methods" "= class SOAP::EncodingStyle::SOAPHandler < SOAP::EncodingStyle::Handler" "refm/api/src/soap/encodingstyle/soapHandler/EncodingStyle__SOAPHandler")
(find-rurima "== Instance Methods" "= class SOAP::EncodingStyle::SOAPHandler < SOAP::EncodingStyle::Handler" "refm/api/src/soap/encodingstyle/soapHandler/EncodingStyle__SOAPHandler")
(find-rurima "--- encode_data(generator, ns, data, parent)" "== Instance Methods" "= class SOAP::EncodingStyle::SOAPHandler < SOAP::EncodingStyle::Handler" "refm/api/src/soap/encodingstyle/soapHandler/EncodingStyle__SOAPHandler")
(find-rurima "--- encode_data_end(generator, ns, data, parent)" "== Instance Methods" "= class SOAP::EncodingStyle::SOAPHandler < SOAP::EncodingStyle::Handler" "refm/api/src/soap/encodingstyle/soapHandler/EncodingStyle__SOAPHandler")
(find-rurima "--- decode_tag(ns, elename, attrs, parent)" "== Instance Methods" "= class SOAP::EncodingStyle::SOAPHandler < SOAP::EncodingStyle::Handler" "refm/api/src/soap/encodingstyle/soapHandler/EncodingStyle__SOAPHandler")
(find-rurima "--- decode_tag_end(ns, node)" "== Instance Methods" "= class SOAP::EncodingStyle::SOAPHandler < SOAP::EncodingStyle::Handler" "refm/api/src/soap/encodingstyle/soapHandler/EncodingStyle__SOAPHandler")
(find-rurima "--- decode_text(ns, text)" "== Instance Methods" "= class SOAP::EncodingStyle::SOAPHandler < SOAP::EncodingStyle::Handler" "refm/api/src/soap/encodingstyle/soapHandler/EncodingStyle__SOAPHandler")
(find-rurima "--- decode_prologue" "== Instance Methods" "= class SOAP::EncodingStyle::SOAPHandler < SOAP::EncodingStyle::Handler" "refm/api/src/soap/encodingstyle/soapHandler/EncodingStyle__SOAPHandler")
(find-rurima "--- decode_epilogue" "== Instance Methods" "= class SOAP::EncodingStyle::SOAPHandler < SOAP::EncodingStyle::Handler" "refm/api/src/soap/encodingstyle/soapHandler/EncodingStyle__SOAPHandler")
(find-rurima "--- decode_parent(parent, node)" "== Instance Methods" "= class SOAP::EncodingStyle::SOAPHandler < SOAP::EncodingStyle::Handler" "refm/api/src/soap/encodingstyle/soapHandler/EncodingStyle__SOAPHandler")
(find-rurima "== Constants" "= class SOAP::EncodingStyle::SOAPHandler < SOAP::EncodingStyle::Handler" "refm/api/src/soap/encodingstyle/soapHandler/EncodingStyle__SOAPHandler")
(find-rurima "--- Namespace" "== Constants" "= class SOAP::EncodingStyle::SOAPHandler < SOAP::EncodingStyle::Handler" "refm/api/src/soap/encodingstyle/soapHandler/EncodingStyle__SOAPHandler")
(find-rurima "--- NilLiteralMap" "== Constants" "= class SOAP::EncodingStyle::SOAPHandler < SOAP::EncodingStyle::Handler" "refm/api/src/soap/encodingstyle/soapHandler/EncodingStyle__SOAPHandler")
(find-rurima "--- RootLiteralMap" "== Constants" "= class SOAP::EncodingStyle::SOAPHandler < SOAP::EncodingStyle::Handler" "refm/api/src/soap/encodingstyle/soapHandler/EncodingStyle__SOAPHandler")
(find-rurima "= module SOAP::SOAPEnvelopeElement" "refm/api/src/soap/element.rd")
(find-rurima "= class SOAP::SOAPFault < SOAP::SOAPStruct" "refm/api/src/soap/element.rd")
(find-rurima "== Class Methods" "= class SOAP::SOAPFault < SOAP::SOAPStruct" "refm/api/src/soap/element.rd")
(find-rurima "--- new(faultcode = nil, faultstring = nil, faultactor = nil, detail = nil)" "== Class Methods" "= class SOAP::SOAPFault < SOAP::SOAPStruct" "refm/api/src/soap/element.rd")
(find-rurima "== Instance Methods" "= class SOAP::SOAPFault < SOAP::SOAPStruct" "refm/api/src/soap/element.rd")
(find-rurima "--- faultcode" "== Instance Methods" "= class SOAP::SOAPFault < SOAP::SOAPStruct" "refm/api/src/soap/element.rd")
(find-rurima "--- faultcode=(rhs)" "== Instance Methods" "= class SOAP::SOAPFault < SOAP::SOAPStruct" "refm/api/src/soap/element.rd")
(find-rurima "--- faultstring" "== Instance Methods" "= class SOAP::SOAPFault < SOAP::SOAPStruct" "refm/api/src/soap/element.rd")
(find-rurima "--- faultstring=(rhs)" "== Instance Methods" "= class SOAP::SOAPFault < SOAP::SOAPStruct" "refm/api/src/soap/element.rd")
(find-rurima "--- faultactor" "== Instance Methods" "= class SOAP::SOAPFault < SOAP::SOAPStruct" "refm/api/src/soap/element.rd")
(find-rurima "--- faultactor=(rhs)" "== Instance Methods" "= class SOAP::SOAPFault < SOAP::SOAPStruct" "refm/api/src/soap/element.rd")
(find-rurima "--- detail" "== Instance Methods" "= class SOAP::SOAPFault < SOAP::SOAPStruct" "refm/api/src/soap/element.rd")
(find-rurima "--- detail=(rhs)" "== Instance Methods" "= class SOAP::SOAPFault < SOAP::SOAPStruct" "refm/api/src/soap/element.rd")
(find-rurima "--- encode(generator, ns, attrs = {})" "== Instance Methods" "= class SOAP::SOAPFault < SOAP::SOAPStruct" "refm/api/src/soap/element.rd")
(find-rurima "= class SOAP::SOAPBody < SOAP::SOAPStruct" "refm/api/src/soap/element.rd")
(find-rurima "== Class Methods" "= class SOAP::SOAPBody < SOAP::SOAPStruct" "refm/api/src/soap/element.rd")
(find-rurima "--- new(data = nil, is_fault = nil)" "== Class Methods" "= class SOAP::SOAPBody < SOAP::SOAPStruct" "refm/api/src/soap/element.rd")
(find-rurima "== Instance Methods" "= class SOAP::SOAPBody < SOAP::SOAPStruct" "refm/api/src/soap/element.rd")
(find-rurima "--- encode(generator, ns, attrs = {})" "== Instance Methods" "= class SOAP::SOAPBody < SOAP::SOAPStruct" "refm/api/src/soap/element.rd")
(find-rurima "--- root_node" "== Instance Methods" "= class SOAP::SOAPBody < SOAP::SOAPStruct" "refm/api/src/soap/element.rd")
(find-rurima "= class SOAP::SOAPHeaderItem < XSD::NSDBase" "refm/api/src/soap/element.rd")
(find-rurima "== Class Methods" "= class SOAP::SOAPHeaderItem < XSD::NSDBase" "refm/api/src/soap/element.rd")
(find-rurima "--- new(element, mustunderstand = true, encodingstyle = nil)" "== Class Methods" "= class SOAP::SOAPHeaderItem < XSD::NSDBase" "refm/api/src/soap/element.rd")
(find-rurima "== Instance Methods" "= class SOAP::SOAPHeaderItem < XSD::NSDBase" "refm/api/src/soap/element.rd")
(find-rurima "--- element" "== Instance Methods" "= class SOAP::SOAPHeaderItem < XSD::NSDBase" "refm/api/src/soap/element.rd")
(find-rurima "--- element=(value)" "== Instance Methods" "= class SOAP::SOAPHeaderItem < XSD::NSDBase" "refm/api/src/soap/element.rd")
(find-rurima "--- content" "== Instance Methods" "= class SOAP::SOAPHeaderItem < XSD::NSDBase" "refm/api/src/soap/element.rd")
(find-rurima "--- content=(value)" "== Instance Methods" "= class SOAP::SOAPHeaderItem < XSD::NSDBase" "refm/api/src/soap/element.rd")
(find-rurima "--- mustunderstand" "== Instance Methods" "= class SOAP::SOAPHeaderItem < XSD::NSDBase" "refm/api/src/soap/element.rd")
(find-rurima "--- mustunderstand=(value)" "== Instance Methods" "= class SOAP::SOAPHeaderItem < XSD::NSDBase" "refm/api/src/soap/element.rd")
(find-rurima "--- encodingstyle" "== Instance Methods" "= class SOAP::SOAPHeaderItem < XSD::NSDBase" "refm/api/src/soap/element.rd")
(find-rurima "--- encodingstyle=(value)" "== Instance Methods" "= class SOAP::SOAPHeaderItem < XSD::NSDBase" "refm/api/src/soap/element.rd")
(find-rurima "--- encode(generator, ns, attrs = {})" "== Instance Methods" "= class SOAP::SOAPHeaderItem < XSD::NSDBase" "refm/api/src/soap/element.rd")
(find-rurima "= class SOAP::SOAPHeader < SOAP::SOAPStruct" "refm/api/src/soap/element.rd")
(find-rurima "= class SOAP::SOAPHeader < SOAP::SOAPArray" "refm/api/src/soap/element.rd")
(find-rurima "== Class Methods" "= class SOAP::SOAPHeader < SOAP::SOAPArray" "refm/api/src/soap/element.rd")
(find-rurima "--- new" "== Class Methods" "= class SOAP::SOAPHeader < SOAP::SOAPArray" "refm/api/src/soap/element.rd")
(find-rurima "== Instance Methods" "= class SOAP::SOAPHeader < SOAP::SOAPArray" "refm/api/src/soap/element.rd")
(find-rurima "--- encode(generator, ns, attrs = {})" "== Instance Methods" "= class SOAP::SOAPHeader < SOAP::SOAPArray" "refm/api/src/soap/element.rd")
(find-rurima "--- add(name, value)" "== Instance Methods" "= class SOAP::SOAPHeader < SOAP::SOAPArray" "refm/api/src/soap/element.rd")
(find-rurima "--- length" "== Instance Methods" "= class SOAP::SOAPHeader < SOAP::SOAPArray" "refm/api/src/soap/element.rd")
(find-rurima "--- size" "== Instance Methods" "= class SOAP::SOAPHeader < SOAP::SOAPArray" "refm/api/src/soap/element.rd")
(find-rurima "= class SOAP::SOAPEnvelope < XSD::NSDBase" "refm/api/src/soap/element.rd")
(find-rurima "== Class Methods" "= class SOAP::SOAPEnvelope < XSD::NSDBase" "refm/api/src/soap/element.rd")
(find-rurima "--- new(header = nil, body = nil)" "== Class Methods" "= class SOAP::SOAPEnvelope < XSD::NSDBase" "refm/api/src/soap/element.rd")
(find-rurima "== Instance Methods" "= class SOAP::SOAPEnvelope < XSD::NSDBase" "refm/api/src/soap/element.rd")
(find-rurima "--- header" "== Instance Methods" "= class SOAP::SOAPEnvelope < XSD::NSDBase" "refm/api/src/soap/element.rd")
(find-rurima "--- header=(header)" "== Instance Methods" "= class SOAP::SOAPEnvelope < XSD::NSDBase" "refm/api/src/soap/element.rd")
(find-rurima "--- body" "== Instance Methods" "= class SOAP::SOAPEnvelope < XSD::NSDBase" "refm/api/src/soap/element.rd")
(find-rurima "--- body=(body)" "== Instance Methods" "= class SOAP::SOAPEnvelope < XSD::NSDBase" "refm/api/src/soap/element.rd")
(find-rurima "--- external_content" "== Instance Methods" "= class SOAP::SOAPEnvelope < XSD::NSDBase" "refm/api/src/soap/element.rd")
(find-rurima "--- encode(generator, ns, attrs = {})" "== Instance Methods" "= class SOAP::SOAPEnvelope < XSD::NSDBase" "refm/api/src/soap/element.rd")
(find-rurima "--- to_ary" "== Instance Methods" "= class SOAP::SOAPEnvelope < XSD::NSDBase" "refm/api/src/soap/element.rd")
(find-rurima "= reopen SOAP::Mapping" "refm/api/src/soap/mapping/factory.rd")
(find-rurima "== Constants" "= reopen SOAP::Mapping" "refm/api/src/soap/mapping/factory.rd")
(find-rurima "--- MapQName" "== Constants" "= reopen SOAP::Mapping" "refm/api/src/soap/mapping/factory.rd")
(find-rurima "= module SOAP::Marshallable" "refm/api/src/soap/mapping/registry.rd")
(find-rurima "= module SOAP::Mapping::MappedException" "refm/api/src/soap/mapping/registry.rd")
(find-rurima "= reopen SOAP::Mapping" "refm/api/src/soap/mapping/registry.rd")
(find-rurima "== Constants" "= reopen SOAP::Mapping" "refm/api/src/soap/mapping/registry.rd")
(find-rurima "--- RubyTypeName" "== Constants" "= reopen SOAP::Mapping" "refm/api/src/soap/mapping/registry.rd")
(find-rurima "--- RubyExtendName" "== Constants" "= reopen SOAP::Mapping" "refm/api/src/soap/mapping/registry.rd")
(find-rurima "--- RubyIVarName" "== Constants" "= reopen SOAP::Mapping" "refm/api/src/soap/mapping/registry.rd")
(find-rurima "= class SOAP::Mapping::MappingError < SOAP::Error" "refm/api/src/soap/mapping/registry.rd")
(find-rurima "= reopen SOAP::Mapping" "refm/api/src/soap/mapping/registry.rd")
(find-rurima "== Constants" "= reopen SOAP::Mapping" "refm/api/src/soap/mapping/registry.rd")
(find-rurima "--- DefaultRegistry" "== Constants" "= reopen SOAP::Mapping" "refm/api/src/soap/mapping/registry.rd")
(find-rurima "--- RubyOriginalRegistry" "== Constants" "= reopen SOAP::Mapping" "refm/api/src/soap/mapping/registry.rd")
(find-rurima "= class SOAP::Mapping::DateTimeFactory_ < SOAP::Mapping::Factory" "refm/api/src/soap/mapping/factory/Mapping__DateTimeFactory_")
(find-rurima "== Class Methods" "= class SOAP::Mapping::DateTimeFactory_ < SOAP::Mapping::Factory" "refm/api/src/soap/mapping/factory/Mapping__DateTimeFactory_")
(find-rurima "--- new(allow_original_mapping = false)" "== Class Methods" "= class SOAP::Mapping::DateTimeFactory_ < SOAP::Mapping::Factory" "refm/api/src/soap/mapping/factory/Mapping__DateTimeFactory_")
(find-rurima "== Instance Methods" "= class SOAP::Mapping::DateTimeFactory_ < SOAP::Mapping::Factory" "refm/api/src/soap/mapping/factory/Mapping__DateTimeFactory_")
(find-rurima "--- obj2soap(soap_class, obj, info, map)" "== Instance Methods" "= class SOAP::Mapping::DateTimeFactory_ < SOAP::Mapping::Factory" "refm/api/src/soap/mapping/factory/Mapping__DateTimeFactory_")
(find-rurima "--- soap2obj(obj_class, node, info, map)" "== Instance Methods" "= class SOAP::Mapping::DateTimeFactory_ < SOAP::Mapping::Factory" "refm/api/src/soap/mapping/factory/Mapping__DateTimeFactory_")
(find-rurima "= class SOAP::Mapping::TypedStructFactory_ < SOAP::Mapping::Factory" "refm/api/src/soap/mapping/factory/Mapping__TypedStructFactory_")
(find-rurima "== Instance Methods" "= class SOAP::Mapping::TypedStructFactory_ < SOAP::Mapping::Factory" "refm/api/src/soap/mapping/factory/Mapping__TypedStructFactory_")
(find-rurima "--- obj2soap(soap_class, obj, info, map)" "== Instance Methods" "= class SOAP::Mapping::TypedStructFactory_ < SOAP::Mapping::Factory" "refm/api/src/soap/mapping/factory/Mapping__TypedStructFactory_")
(find-rurima "--- soap2obj(obj_class, node, info, map)" "== Instance Methods" "= class SOAP::Mapping::TypedStructFactory_ < SOAP::Mapping::Factory" "refm/api/src/soap/mapping/factory/Mapping__TypedStructFactory_")
(find-rurima "= class SOAP::Mapping::TypedArrayFactory_ < SOAP::Mapping::Factory" "refm/api/src/soap/mapping/factory/Mapping__TypedArrayFactory_")
(find-rurima "== Class Methods" "= class SOAP::Mapping::TypedArrayFactory_ < SOAP::Mapping::Factory" "refm/api/src/soap/mapping/factory/Mapping__TypedArrayFactory_")
(find-rurima "--- new(allow_original_mapping = false)" "== Class Methods" "= class SOAP::Mapping::TypedArrayFactory_ < SOAP::Mapping::Factory" "refm/api/src/soap/mapping/factory/Mapping__TypedArrayFactory_")
(find-rurima "== Instance Methods" "= class SOAP::Mapping::TypedArrayFactory_ < SOAP::Mapping::Factory" "refm/api/src/soap/mapping/factory/Mapping__TypedArrayFactory_")
(find-rurima "--- obj2soap(soap_class, obj, info, map)" "== Instance Methods" "= class SOAP::Mapping::TypedArrayFactory_ < SOAP::Mapping::Factory" "refm/api/src/soap/mapping/factory/Mapping__TypedArrayFactory_")
(find-rurima "--- soap2obj(obj_class, node, info, map)" "== Instance Methods" "= class SOAP::Mapping::TypedArrayFactory_ < SOAP::Mapping::Factory" "refm/api/src/soap/mapping/factory/Mapping__TypedArrayFactory_")
(find-rurima "= class SOAP::Mapping::BasetypeFactory_ < SOAP::Mapping::Factory" "refm/api/src/soap/mapping/factory/Mapping__BasetypeFactory_")
(find-rurima "== Class Methods" "= class SOAP::Mapping::BasetypeFactory_ < SOAP::Mapping::Factory" "refm/api/src/soap/mapping/factory/Mapping__BasetypeFactory_")
(find-rurima "--- new(allow_original_mapping = false)" "== Class Methods" "= class SOAP::Mapping::BasetypeFactory_ < SOAP::Mapping::Factory" "refm/api/src/soap/mapping/factory/Mapping__BasetypeFactory_")
(find-rurima "== Instance Methods" "= class SOAP::Mapping::BasetypeFactory_ < SOAP::Mapping::Factory" "refm/api/src/soap/mapping/factory/Mapping__BasetypeFactory_")
(find-rurima "--- obj2soap(soap_class, obj, info, map)" "== Instance Methods" "= class SOAP::Mapping::BasetypeFactory_ < SOAP::Mapping::Factory" "refm/api/src/soap/mapping/factory/Mapping__BasetypeFactory_")
(find-rurima "--- soap2obj(obj_class, node, info, map)" "== Instance Methods" "= class SOAP::Mapping::BasetypeFactory_ < SOAP::Mapping::Factory" "refm/api/src/soap/mapping/factory/Mapping__BasetypeFactory_")
(find-rurima "= class SOAP::Mapping::Base64Factory_ < SOAP::Mapping::Factory" "refm/api/src/soap/mapping/factory/Mapping__Base64Factory_")
(find-rurima "== Instance Methods" "= class SOAP::Mapping::Base64Factory_ < SOAP::Mapping::Factory" "refm/api/src/soap/mapping/factory/Mapping__Base64Factory_")
(find-rurima "--- obj2soap(soap_class, obj, info, map)" "== Instance Methods" "= class SOAP::Mapping::Base64Factory_ < SOAP::Mapping::Factory" "refm/api/src/soap/mapping/factory/Mapping__Base64Factory_")
(find-rurima "--- soap2obj(obj_class, node, info, map)" "== Instance Methods" "= class SOAP::Mapping::Base64Factory_ < SOAP::Mapping::Factory" "refm/api/src/soap/mapping/factory/Mapping__Base64Factory_")
(find-rurima "= class SOAP::Mapping::ArrayFactory_ < SOAP::Mapping::Factory" "refm/api/src/soap/mapping/factory/Mapping__ArrayFactory_")
(find-rurima "== Class Methods" "= class SOAP::Mapping::ArrayFactory_ < SOAP::Mapping::Factory" "refm/api/src/soap/mapping/factory/Mapping__ArrayFactory_")
(find-rurima "--- new(allow_original_mapping = false)" "== Class Methods" "= class SOAP::Mapping::ArrayFactory_ < SOAP::Mapping::Factory" "refm/api/src/soap/mapping/factory/Mapping__ArrayFactory_")
(find-rurima "== Instance Methods" "= class SOAP::Mapping::ArrayFactory_ < SOAP::Mapping::Factory" "refm/api/src/soap/mapping/factory/Mapping__ArrayFactory_")
(find-rurima "--- obj2soap(soap_class, obj, info, map)" "== Instance Methods" "= class SOAP::Mapping::ArrayFactory_ < SOAP::Mapping::Factory" "refm/api/src/soap/mapping/factory/Mapping__ArrayFactory_")
(find-rurima "--- soap2obj(obj_class, node, info, map)" "== Instance Methods" "= class SOAP::Mapping::ArrayFactory_ < SOAP::Mapping::Factory" "refm/api/src/soap/mapping/factory/Mapping__ArrayFactory_")
(find-rurima "= class SOAP::Mapping::HashFactory_ < SOAP::Mapping::Factory" "refm/api/src/soap/mapping/factory/Mapping__HashFactory_")
(find-rurima "== Class Methods" "= class SOAP::Mapping::HashFactory_ < SOAP::Mapping::Factory" "refm/api/src/soap/mapping/factory/Mapping__HashFactory_")
(find-rurima "--- new(allow_original_mapping = false)" "== Class Methods" "= class SOAP::Mapping::HashFactory_ < SOAP::Mapping::Factory" "refm/api/src/soap/mapping/factory/Mapping__HashFactory_")
(find-rurima "== Instance Methods" "= class SOAP::Mapping::HashFactory_ < SOAP::Mapping::Factory" "refm/api/src/soap/mapping/factory/Mapping__HashFactory_")
(find-rurima "--- obj2soap(soap_class, obj, info, map)" "== Instance Methods" "= class SOAP::Mapping::HashFactory_ < SOAP::Mapping::Factory" "refm/api/src/soap/mapping/factory/Mapping__HashFactory_")
(find-rurima "--- soap2obj(obj_class, node, info, map)" "== Instance Methods" "= class SOAP::Mapping::HashFactory_ < SOAP::Mapping::Factory" "refm/api/src/soap/mapping/factory/Mapping__HashFactory_")
(find-rurima "= class SOAP::Mapping::URIFactory_ < SOAP::Mapping::Factory" "refm/api/src/soap/mapping/factory/Mapping__URIFactory_")
(find-rurima "== Instance Methods" "= class SOAP::Mapping::URIFactory_ < SOAP::Mapping::Factory" "refm/api/src/soap/mapping/factory/Mapping__URIFactory_")
(find-rurima "--- obj2soap(soap_class, obj, info, map)" "== Instance Methods" "= class SOAP::Mapping::URIFactory_ < SOAP::Mapping::Factory" "refm/api/src/soap/mapping/factory/Mapping__URIFactory_")
(find-rurima "--- soap2obj(obj_class, node, info, map)" "== Instance Methods" "= class SOAP::Mapping::URIFactory_ < SOAP::Mapping::Factory" "refm/api/src/soap/mapping/factory/Mapping__URIFactory_")
(find-rurima "= class SOAP::Mapping::Factory < Object" "refm/api/src/soap/mapping/factory/Mapping__Factory")
(find-rurima "== Class Methods" "= class SOAP::Mapping::Factory < Object" "refm/api/src/soap/mapping/factory/Mapping__Factory")
(find-rurima "--- new" "== Class Methods" "= class SOAP::Mapping::Factory < Object" "refm/api/src/soap/mapping/factory/Mapping__Factory")
(find-rurima "== Instance Methods" "= class SOAP::Mapping::Factory < Object" "refm/api/src/soap/mapping/factory/Mapping__Factory")
(find-rurima "--- obj2soap(soap_class, obj, info, map)" "== Instance Methods" "= class SOAP::Mapping::Factory < Object" "refm/api/src/soap/mapping/factory/Mapping__Factory")
(find-rurima "--- soap2obj(obj_class, node, info, map)" "== Instance Methods" "= class SOAP::Mapping::Factory < Object" "refm/api/src/soap/mapping/factory/Mapping__Factory")
(find-rurima "--- setiv2obj(obj, node, map)" "== Instance Methods" "= class SOAP::Mapping::Factory < Object" "refm/api/src/soap/mapping/factory/Mapping__Factory")
(find-rurima "--- setiv2soap(node, obj, map)" "== Instance Methods" "= class SOAP::Mapping::Factory < Object" "refm/api/src/soap/mapping/factory/Mapping__Factory")
(find-rurima "--- capitalize(taget)" "== Instance Methods" "= class SOAP::Mapping::Factory < Object" "refm/api/src/soap/mapping/factory/Mapping__Factory")
(find-rurima "--- create_empty_object(klass)" "== Instance Methods" "= class SOAP::Mapping::Factory < Object" "refm/api/src/soap/mapping/factory/Mapping__Factory")
(find-rurima "--- name2typename(name)" "== Instance Methods" "= class SOAP::Mapping::Factory < Object" "refm/api/src/soap/mapping/factory/Mapping__Factory")
(find-rurima "--- mark_marshalled_obj(obj, soap_obj)" "== Instance Methods" "= class SOAP::Mapping::Factory < Object" "refm/api/src/soap/mapping/factory/Mapping__Factory")
(find-rurima "--- mark_unmarshalled_obj(node, obj)" "== Instance Methods" "= class SOAP::Mapping::Factory < Object" "refm/api/src/soap/mapping/factory/Mapping__Factory")
(find-rurima "= class SOAP::Mapping::StringFactory_ < SOAP::Mapping::Factory" "refm/api/src/soap/mapping/factory/Mapping__StringFactory_")
(find-rurima "== Class Methods" "= class SOAP::Mapping::StringFactory_ < SOAP::Mapping::Factory" "refm/api/src/soap/mapping/factory/Mapping__StringFactory_")
(find-rurima "--- new(allow_original_mapping = false)" "== Class Methods" "= class SOAP::Mapping::StringFactory_ < SOAP::Mapping::Factory" "refm/api/src/soap/mapping/factory/Mapping__StringFactory_")
(find-rurima "== Instance Methods" "= class SOAP::Mapping::StringFactory_ < SOAP::Mapping::Factory" "refm/api/src/soap/mapping/factory/Mapping__StringFactory_")
(find-rurima "--- obj2soap(soap_class, obj, info, map)" "== Instance Methods" "= class SOAP::Mapping::StringFactory_ < SOAP::Mapping::Factory" "refm/api/src/soap/mapping/factory/Mapping__StringFactory_")
(find-rurima "--- soap2obj(obj_class, node, info, map)" "== Instance Methods" "= class SOAP::Mapping::StringFactory_ < SOAP::Mapping::Factory" "refm/api/src/soap/mapping/factory/Mapping__StringFactory_")
(find-rurima "= module SOAP::Mapping::TraverseSupport" "refm/api/src/soap/mapping/mapping/Mapping__TraverseSupport")
(find-rurima "== Instance Methods" "= module SOAP::Mapping::TraverseSupport" "refm/api/src/soap/mapping/mapping/Mapping__TraverseSupport")
(find-rurima "--- mark_marshalled_obj(obj, soap_obj)" "== Instance Methods" "= module SOAP::Mapping::TraverseSupport" "refm/api/src/soap/mapping/mapping/Mapping__TraverseSupport")
(find-rurima "--- mark_unmarshalled_obj(node, obj)" "== Instance Methods" "= module SOAP::Mapping::TraverseSupport" "refm/api/src/soap/mapping/mapping/Mapping__TraverseSupport")
(find-rurima "= module SOAP::Mapping" "refm/api/src/soap/mapping/mapping/Mapping__")
(find-rurima "== Class Methods" "= module SOAP::Mapping" "refm/api/src/soap/mapping/mapping/Mapping__")
(find-rurima "--- obj2soap(obj, registry = nil, type = nil, opt = EMPTY_OPT)" "== Class Methods" "= module SOAP::Mapping" "refm/api/src/soap/mapping/mapping/Mapping__")
(find-rurima "--- soap2obj(node, registry = nil, klass = nil, opt = EMPTY_OPT)" "== Class Methods" "= module SOAP::Mapping" "refm/api/src/soap/mapping/mapping/Mapping__")
(find-rurima "--- ary2soap(ary, type_ns = XSD::Namespace, typename = XSD::AnyTypeLiteral, registry = nil, opt = EMPTY_OPT)" "== Class Methods" "= module SOAP::Mapping" "refm/api/src/soap/mapping/mapping/Mapping__")
(find-rurima "--- ary2md(ary, rank, type_ns = XSD::Namespace, typename = XSD::AnyTypeLiteral, registry = nil, opt = EMPTY_OPT)" "== Class Methods" "= module SOAP::Mapping" "refm/api/src/soap/mapping/mapping/Mapping__")
(find-rurima "--- fault2exception(fault, registry = nil)" "== Class Methods" "= module SOAP::Mapping" "refm/api/src/soap/mapping/mapping/Mapping__")
(find-rurima "--- _obj2soap(obj, registry, type = nil)" "== Class Methods" "= module SOAP::Mapping" "refm/api/src/soap/mapping/mapping/Mapping__")
(find-rurima "--- _soap2obj(node, registry, klass = nil)" "== Class Methods" "= module SOAP::Mapping" "refm/api/src/soap/mapping/mapping/Mapping__")
(find-rurima "--- create_empty_object(klass)" "== Class Methods" "= module SOAP::Mapping" "refm/api/src/soap/mapping/mapping/Mapping__")
(find-rurima "--- name2elename(name)" "== Class Methods" "= module SOAP::Mapping" "refm/api/src/soap/mapping/mapping/Mapping__")
(find-rurima "--- elename2name(name)" "== Class Methods" "= module SOAP::Mapping" "refm/api/src/soap/mapping/mapping/Mapping__")
(find-rurima "--- const_from_name(name, lenient = false)" "== Class Methods" "= module SOAP::Mapping" "refm/api/src/soap/mapping/mapping/Mapping__")
(find-rurima "--- class_from_name(name, lenient = false)" "== Class Methods" "= module SOAP::Mapping" "refm/api/src/soap/mapping/mapping/Mapping__")
(find-rurima "--- module_from_name(name, lenient = false)" "== Class Methods" "= module SOAP::Mapping" "refm/api/src/soap/mapping/mapping/Mapping__")
(find-rurima "--- class2qname(klass)" "== Class Methods" "= module SOAP::Mapping" "refm/api/src/soap/mapping/mapping/Mapping__")
(find-rurima "--- class2element(klass)" "== Class Methods" "= module SOAP::Mapping" "refm/api/src/soap/mapping/mapping/Mapping__")
(find-rurima "--- obj2element(obj)" "== Class Methods" "= module SOAP::Mapping" "refm/api/src/soap/mapping/mapping/Mapping__")
(find-rurima "--- define_singleton_method(obj, name) { ... }" "== Class Methods" "= module SOAP::Mapping" "refm/api/src/soap/mapping/mapping/Mapping__")
(find-rurima "--- get_attribute(obj, attr_name)" "== Class Methods" "= module SOAP::Mapping" "refm/api/src/soap/mapping/mapping/Mapping__")
(find-rurima "--- set_attributes(obj, values)" "== Class Methods" "= module SOAP::Mapping" "refm/api/src/soap/mapping/mapping/Mapping__")
(find-rurima "--- define_attr_accessor(obj, name, getterproc, setterproc = nil)" "== Class Methods" "= module SOAP::Mapping" "refm/api/src/soap/mapping/mapping/Mapping__")
(find-rurima "--- schema_type_definition(klass)" "== Class Methods" "= module SOAP::Mapping" "refm/api/src/soap/mapping/mapping/Mapping__")
(find-rurima "--- schema_ns_definition(klass)" "== Class Methods" "= module SOAP::Mapping" "refm/api/src/soap/mapping/mapping/Mapping__")
(find-rurima "--- schema_element_definition(klass)" "== Class Methods" "= module SOAP::Mapping" "refm/api/src/soap/mapping/mapping/Mapping__")
(find-rurima "--- schema_attribute_definition(klass)" "== Class Methods" "= module SOAP::Mapping" "refm/api/src/soap/mapping/mapping/Mapping__")
(find-rurima "--- find_attribute(obj, attr_name)" "== Class Methods" "= module SOAP::Mapping" "refm/api/src/soap/mapping/mapping/Mapping__")
(find-rurima "--- set_instance_vars(obj, values)" "== Class Methods" "= module SOAP::Mapping" "refm/api/src/soap/mapping/mapping/Mapping__")
(find-rurima "== Constants" "= module SOAP::Mapping" "refm/api/src/soap/mapping/mapping/Mapping__")
(find-rurima "--- RubyTypeNamespace" "== Constants" "= module SOAP::Mapping" "refm/api/src/soap/mapping/mapping/Mapping__")
(find-rurima "--- RubyTypeInstanceNamespace" "== Constants" "= module SOAP::Mapping" "refm/api/src/soap/mapping/mapping/Mapping__")
(find-rurima "--- RubyCustomTypeNamespace" "== Constants" "= module SOAP::Mapping" "refm/api/src/soap/mapping/mapping/Mapping__")
(find-rurima "--- ApacheSOAPTypeNamespace" "== Constants" "= module SOAP::Mapping" "refm/api/src/soap/mapping/mapping/Mapping__")
(find-rurima "--- EMPTY_OPT" "== Constants" "= module SOAP::Mapping" "refm/api/src/soap/mapping/mapping/Mapping__")
(find-rurima "= class SOAP::Mapping::Registry < Object" "refm/api/src/soap/mapping/registry/Mapping__Registry")
(find-rurima "== Class Methods" "= class SOAP::Mapping::Registry < Object" "refm/api/src/soap/mapping/registry/Mapping__Registry")
(find-rurima "--- new(config = {})" "== Class Methods" "= class SOAP::Mapping::Registry < Object" "refm/api/src/soap/mapping/registry/Mapping__Registry")
(find-rurima "== Instance Methods" "= class SOAP::Mapping::Registry < Object" "refm/api/src/soap/mapping/registry/Mapping__Registry")
(find-rurima "--- default_factory" "== Instance Methods" "= class SOAP::Mapping::Registry < Object" "refm/api/src/soap/mapping/registry/Mapping__Registry")
(find-rurima "--- default_factory=(value)" "== Instance Methods" "= class SOAP::Mapping::Registry < Object" "refm/api/src/soap/mapping/registry/Mapping__Registry")
(find-rurima "--- excn_handler_obj2soap" "== Instance Methods" "= class SOAP::Mapping::Registry < Object" "refm/api/src/soap/mapping/registry/Mapping__Registry")
(find-rurima "--- excn_handler_obj2soap=(value)" "== Instance Methods" "= class SOAP::Mapping::Registry < Object" "refm/api/src/soap/mapping/registry/Mapping__Registry")
(find-rurima "--- excn_handler_soap2obj" "== Instance Methods" "= class SOAP::Mapping::Registry < Object" "refm/api/src/soap/mapping/registry/Mapping__Registry")
(find-rurima "--- excn_handler_soap2obj=(value)" "== Instance Methods" "= class SOAP::Mapping::Registry < Object" "refm/api/src/soap/mapping/registry/Mapping__Registry")
(find-rurima "--- add(obj_class, soap_class, factory, info = nil)" "== Instance Methods" "= class SOAP::Mapping::Registry < Object" "refm/api/src/soap/mapping/registry/Mapping__Registry")
(find-rurima "--- set(obj_class, soap_class, factory, info = nil)" "== Instance Methods" "= class SOAP::Mapping::Registry < Object" "refm/api/src/soap/mapping/registry/Mapping__Registry")
(find-rurima "--- obj2soap(obj, type_qname = nil)" "== Instance Methods" "= class SOAP::Mapping::Registry < Object" "refm/api/src/soap/mapping/registry/Mapping__Registry")
(find-rurima "--- soap2obj(node, klass = nil)" "== Instance Methods" "= class SOAP::Mapping::Registry < Object" "refm/api/src/soap/mapping/registry/Mapping__Registry")
(find-rurima "--- find_mapped_soap_class(obj_class)" "== Instance Methods" "= class SOAP::Mapping::Registry < Object" "refm/api/src/soap/mapping/registry/Mapping__Registry")
(find-rurima "--- find_mapped_obj_class(soap_class)" "== Instance Methods" "= class SOAP::Mapping::Registry < Object" "refm/api/src/soap/mapping/registry/Mapping__Registry")
(find-rurima "== Constants" "= class SOAP::Mapping::Registry < Object" "refm/api/src/soap/mapping/registry/Mapping__Registry")
(find-rurima "--- StringFactory" "== Constants" "= class SOAP::Mapping::Registry < Object" "refm/api/src/soap/mapping/registry/Mapping__Registry")
(find-rurima "--- BasetypeFactory" "== Constants" "= class SOAP::Mapping::Registry < Object" "refm/api/src/soap/mapping/registry/Mapping__Registry")
(find-rurima "--- DateTimeFactory" "== Constants" "= class SOAP::Mapping::Registry < Object" "refm/api/src/soap/mapping/registry/Mapping__Registry")
(find-rurima "--- ArrayFactory" "== Constants" "= class SOAP::Mapping::Registry < Object" "refm/api/src/soap/mapping/registry/Mapping__Registry")
(find-rurima "--- Base64Factory" "== Constants" "= class SOAP::Mapping::Registry < Object" "refm/api/src/soap/mapping/registry/Mapping__Registry")
(find-rurima "--- URIFactory" "== Constants" "= class SOAP::Mapping::Registry < Object" "refm/api/src/soap/mapping/registry/Mapping__Registry")
(find-rurima "--- TypedArrayFactory" "== Constants" "= class SOAP::Mapping::Registry < Object" "refm/api/src/soap/mapping/registry/Mapping__Registry")
(find-rurima "--- TypedStructFactory" "== Constants" "= class SOAP::Mapping::Registry < Object" "refm/api/src/soap/mapping/registry/Mapping__Registry")
(find-rurima "--- HashFactory" "== Constants" "= class SOAP::Mapping::Registry < Object" "refm/api/src/soap/mapping/registry/Mapping__Registry")
(find-rurima "--- SOAPBaseMap" "== Constants" "= class SOAP::Mapping::Registry < Object" "refm/api/src/soap/mapping/registry/Mapping__Registry")
(find-rurima "--- RubyOriginalMap" "== Constants" "= class SOAP::Mapping::Registry < Object" "refm/api/src/soap/mapping/registry/Mapping__Registry")
(find-rurima "= class SOAP::Mapping::Object < Object" "refm/api/src/soap/mapping/registry/Mapping__Object")
(find-rurima "== Class Methods" "= class SOAP::Mapping::Object < Object" "refm/api/src/soap/mapping/registry/Mapping__Object")
(find-rurima "--- initialize" "== Class Methods" "= class SOAP::Mapping::Object < Object" "refm/api/src/soap/mapping/registry/Mapping__Object")
(find-rurima "== Instance Methods" "= class SOAP::Mapping::Object < Object" "refm/api/src/soap/mapping/registry/Mapping__Object")
(find-rurima "--- inspect" "== Instance Methods" "= class SOAP::Mapping::Object < Object" "refm/api/src/soap/mapping/registry/Mapping__Object")
(find-rurima "--- __xmlattr" "== Instance Methods" "= class SOAP::Mapping::Object < Object" "refm/api/src/soap/mapping/registry/Mapping__Object")
(find-rurima "--- __xmlele" "== Instance Methods" "= class SOAP::Mapping::Object < Object" "refm/api/src/soap/mapping/registry/Mapping__Object")
(find-rurima "--- [](qname)" "== Instance Methods" "= class SOAP::Mapping::Object < Object" "refm/api/src/soap/mapping/registry/Mapping__Object")
(find-rurima "--- []=(qname, value)" "== Instance Methods" "= class SOAP::Mapping::Object < Object" "refm/api/src/soap/mapping/registry/Mapping__Object")
(find-rurima "--- __add_xmlele_value(qname, value)" "== Instance Methods" "= class SOAP::Mapping::Object < Object" "refm/api/src/soap/mapping/registry/Mapping__Object")
(find-rurima "= class SOAP::Mapping::SOAPException" "refm/api/src/soap/mapping/registry/Mapping__SOAPException")
(find-rurima "== Class Methods" "= class SOAP::Mapping::SOAPException" "refm/api/src/soap/mapping/registry/Mapping__SOAPException")
(find-rurima "--- new(e)" "== Class Methods" "= class SOAP::Mapping::SOAPException" "refm/api/src/soap/mapping/registry/Mapping__SOAPException")
(find-rurima "== Instance Methods" "= class SOAP::Mapping::SOAPException" "refm/api/src/soap/mapping/registry/Mapping__SOAPException")
(find-rurima "--- excn_type_name" "== Instance Methods" "= class SOAP::Mapping::SOAPException" "refm/api/src/soap/mapping/registry/Mapping__SOAPException")
(find-rurima "--- cause" "== Instance Methods" "= class SOAP::Mapping::SOAPException" "refm/api/src/soap/mapping/registry/Mapping__SOAPException")
(find-rurima "--- to_e" "== Instance Methods" "= class SOAP::Mapping::SOAPException" "refm/api/src/soap/mapping/registry/Mapping__SOAPException")
(find-rurima "= class SOAP::Mapping::Registry::Map < Object" "refm/api/src/soap/mapping/registry/Mapping__Registry__Map")
(find-rurima "== Class Methods" "= class SOAP::Mapping::Registry::Map < Object" "refm/api/src/soap/mapping/registry/Mapping__Registry__Map")
(find-rurima "--- new(registry)" "== Class Methods" "= class SOAP::Mapping::Registry::Map < Object" "refm/api/src/soap/mapping/registry/Mapping__Registry__Map")
(find-rurima "== Instance Methods" "= class SOAP::Mapping::Registry::Map < Object" "refm/api/src/soap/mapping/registry/Mapping__Registry__Map")
(find-rurima "--- obj2soap(obj)" "== Instance Methods" "= class SOAP::Mapping::Registry::Map < Object" "refm/api/src/soap/mapping/registry/Mapping__Registry__Map")
(find-rurima "--- soap2obj(node, klass = nil)" "== Instance Methods" "= class SOAP::Mapping::Registry::Map < Object" "refm/api/src/soap/mapping/registry/Mapping__Registry__Map")
(find-rurima "--- init(init_map = [])" "== Instance Methods" "= class SOAP::Mapping::Registry::Map < Object" "refm/api/src/soap/mapping/registry/Mapping__Registry__Map")
(find-rurima "--- add(obj_class, soap_class, factory, info)" "== Instance Methods" "= class SOAP::Mapping::Registry::Map < Object" "refm/api/src/soap/mapping/registry/Mapping__Registry__Map")
(find-rurima "--- clear" "== Instance Methods" "= class SOAP::Mapping::Registry::Map < Object" "refm/api/src/soap/mapping/registry/Mapping__Registry__Map")
(find-rurima "--- find_mapped_soap_class(target_obj_class)" "== Instance Methods" "= class SOAP::Mapping::Registry::Map < Object" "refm/api/src/soap/mapping/registry/Mapping__Registry__Map")
(find-rurima "--- find_mapped_obj_class(target_soap_class)" "== Instance Methods" "= class SOAP::Mapping::Registry::Map < Object" "refm/api/src/soap/mapping/registry/Mapping__Registry__Map")
(find-rurima "= class SOAP::Mapping::RubytypeFactory < SOAP::Mapping::Factory" "refm/api/src/soap/mapping/rubytypeFactory.rd")
(find-rurima "== Class Methods" "= class SOAP::Mapping::RubytypeFactory < SOAP::Mapping::Factory" "refm/api/src/soap/mapping/rubytypeFactory.rd")
(find-rurima "--- new(config = {})" "== Class Methods" "= class SOAP::Mapping::RubytypeFactory < SOAP::Mapping::Factory" "refm/api/src/soap/mapping/rubytypeFactory.rd")
(find-rurima "== Instance Methods" "= class SOAP::Mapping::RubytypeFactory < SOAP::Mapping::Factory" "refm/api/src/soap/mapping/rubytypeFactory.rd")
(find-rurima "--- obj2soap(soap_class, obj, info, map)" "== Instance Methods" "= class SOAP::Mapping::RubytypeFactory < SOAP::Mapping::Factory" "refm/api/src/soap/mapping/rubytypeFactory.rd")
(find-rurima "--- soap2obj(obj_class, node, info, map)" "== Instance Methods" "= class SOAP::Mapping::RubytypeFactory < SOAP::Mapping::Factory" "refm/api/src/soap/mapping/rubytypeFactory.rd")
(find-rurima "== Constants" "= class SOAP::Mapping::RubytypeFactory < SOAP::Mapping::Factory" "refm/api/src/soap/mapping/rubytypeFactory.rd")
(find-rurima "--- TYPE_STRING" "== Constants" "= class SOAP::Mapping::RubytypeFactory < SOAP::Mapping::Factory" "refm/api/src/soap/mapping/rubytypeFactory.rd")
(find-rurima "--- TYPE_TIME" "== Constants" "= class SOAP::Mapping::RubytypeFactory < SOAP::Mapping::Factory" "refm/api/src/soap/mapping/rubytypeFactory.rd")
(find-rurima "--- TYPE_ARRAY" "== Constants" "= class SOAP::Mapping::RubytypeFactory < SOAP::Mapping::Factory" "refm/api/src/soap/mapping/rubytypeFactory.rd")
(find-rurima "--- TYPE_REGEXP" "== Constants" "= class SOAP::Mapping::RubytypeFactory < SOAP::Mapping::Factory" "refm/api/src/soap/mapping/rubytypeFactory.rd")
(find-rurima "--- TYPE_RANGE" "== Constants" "= class SOAP::Mapping::RubytypeFactory < SOAP::Mapping::Factory" "refm/api/src/soap/mapping/rubytypeFactory.rd")
(find-rurima "--- TYPE_CLASS" "== Constants" "= class SOAP::Mapping::RubytypeFactory < SOAP::Mapping::Factory" "refm/api/src/soap/mapping/rubytypeFactory.rd")
(find-rurima "--- TYPE_MODULE" "== Constants" "= class SOAP::Mapping::RubytypeFactory < SOAP::Mapping::Factory" "refm/api/src/soap/mapping/rubytypeFactory.rd")
(find-rurima "--- TYPE_SYMBOL" "== Constants" "= class SOAP::Mapping::RubytypeFactory < SOAP::Mapping::Factory" "refm/api/src/soap/mapping/rubytypeFactory.rd")
(find-rurima "--- TYPE_STRUCT" "== Constants" "= class SOAP::Mapping::RubytypeFactory < SOAP::Mapping::Factory" "refm/api/src/soap/mapping/rubytypeFactory.rd")
(find-rurima "--- TYPE_HASH" "== Constants" "= class SOAP::Mapping::RubytypeFactory < SOAP::Mapping::Factory" "refm/api/src/soap/mapping/rubytypeFactory.rd")
(find-rurima "= class SOAP::Mapping::WSDLEncodedRegistry < SOAP::Mapping::Registry" "refm/api/src/soap/mapping/wsdlencodedregistry.rd")
(find-rurima "== Class Methods" "= class SOAP::Mapping::WSDLEncodedRegistry < SOAP::Mapping::Registry" "refm/api/src/soap/mapping/wsdlencodedregistry.rd")
(find-rurima "--- new(definedtypes = XSD::NamedElements::Empty)" "== Class Methods" "= class SOAP::Mapping::WSDLEncodedRegistry < SOAP::Mapping::Registry" "refm/api/src/soap/mapping/wsdlencodedregistry.rd")
(find-rurima "== Instance Methods" "= class SOAP::Mapping::WSDLEncodedRegistry < SOAP::Mapping::Registry" "refm/api/src/soap/mapping/wsdlencodedregistry.rd")
(find-rurima "--- definedelements" "== Instance Methods" "= class SOAP::Mapping::WSDLEncodedRegistry < SOAP::Mapping::Registry" "refm/api/src/soap/mapping/wsdlencodedregistry.rd")
(find-rurima "--- definedtypes" "== Instance Methods" "= class SOAP::Mapping::WSDLEncodedRegistry < SOAP::Mapping::Registry" "refm/api/src/soap/mapping/wsdlencodedregistry.rd")
(find-rurima "--- excn_handler_obj2soap" "== Instance Methods" "= class SOAP::Mapping::WSDLEncodedRegistry < SOAP::Mapping::Registry" "refm/api/src/soap/mapping/wsdlencodedregistry.rd")
(find-rurima "--- excn_handler_obj2soap=(value)" "== Instance Methods" "= class SOAP::Mapping::WSDLEncodedRegistry < SOAP::Mapping::Registry" "refm/api/src/soap/mapping/wsdlencodedregistry.rd")
(find-rurima "--- excn_handler_soap2obj" "== Instance Methods" "= class SOAP::Mapping::WSDLEncodedRegistry < SOAP::Mapping::Registry" "refm/api/src/soap/mapping/wsdlencodedregistry.rd")
(find-rurima "--- excn_handler_soap2obj=(value)" "== Instance Methods" "= class SOAP::Mapping::WSDLEncodedRegistry < SOAP::Mapping::Registry" "refm/api/src/soap/mapping/wsdlencodedregistry.rd")
(find-rurima "--- obj2soap(obj, qname = nil)" "== Instance Methods" "= class SOAP::Mapping::WSDLEncodedRegistry < SOAP::Mapping::Registry" "refm/api/src/soap/mapping/wsdlencodedregistry.rd")
(find-rurima "--- soap2obj(node, obj_class = nil)" "== Instance Methods" "= class SOAP::Mapping::WSDLEncodedRegistry < SOAP::Mapping::Registry" "refm/api/src/soap/mapping/wsdlencodedregistry.rd")
(find-rurima "== Constants" "= class SOAP::Mapping::WSDLEncodedRegistry < SOAP::Mapping::Registry" "refm/api/src/soap/mapping/wsdlencodedregistry.rd")
(find-rurima "--- MapKeyName" "== Constants" "= class SOAP::Mapping::WSDLEncodedRegistry < SOAP::Mapping::Registry" "refm/api/src/soap/mapping/wsdlencodedregistry.rd")
(find-rurima "--- MapValueName" "== Constants" "= class SOAP::Mapping::WSDLEncodedRegistry < SOAP::Mapping::Registry" "refm/api/src/soap/mapping/wsdlencodedregistry.rd")
(find-rurima "= reopen SOAP" "refm/api/src/soap/mapping/typeMap.rd")
(find-rurima "== Constants" "= reopen SOAP" "refm/api/src/soap/mapping/typeMap.rd")
(find-rurima "--- TypeMap" "== Constants" "= reopen SOAP" "refm/api/src/soap/mapping/typeMap.rd")
(find-rurima "= class SOAP::Mapping::WSDLLiteralRegistry < SOAP::Mapping::Registry" "refm/api/src/soap/mapping/wsdlliteralregistry.rd")
(find-rurima "== Class Methods" "= class SOAP::Mapping::WSDLLiteralRegistry < SOAP::Mapping::Registry" "refm/api/src/soap/mapping/wsdlliteralregistry.rd")
(find-rurima "--- new(definedtypes = XSD::NamedElements::Empty, definedelements = XSD::namedElements::Empty)" "== Class Methods" "= class SOAP::Mapping::WSDLLiteralRegistry < SOAP::Mapping::Registry" "refm/api/src/soap/mapping/wsdlliteralregistry.rd")
(find-rurima "== Instance Methods" "= class SOAP::Mapping::WSDLLiteralRegistry < SOAP::Mapping::Registry" "refm/api/src/soap/mapping/wsdlliteralregistry.rd")
(find-rurima "--- definedelements" "== Instance Methods" "= class SOAP::Mapping::WSDLLiteralRegistry < SOAP::Mapping::Registry" "refm/api/src/soap/mapping/wsdlliteralregistry.rd")
(find-rurima "--- definedtypes" "== Instance Methods" "= class SOAP::Mapping::WSDLLiteralRegistry < SOAP::Mapping::Registry" "refm/api/src/soap/mapping/wsdlliteralregistry.rd")
(find-rurima "--- excn_handler_obj2soap" "== Instance Methods" "= class SOAP::Mapping::WSDLLiteralRegistry < SOAP::Mapping::Registry" "refm/api/src/soap/mapping/wsdlliteralregistry.rd")
(find-rurima "--- excn_handler_obj2soap=(value)" "== Instance Methods" "= class SOAP::Mapping::WSDLLiteralRegistry < SOAP::Mapping::Registry" "refm/api/src/soap/mapping/wsdlliteralregistry.rd")
(find-rurima "--- excn_handler_soap2obj" "== Instance Methods" "= class SOAP::Mapping::WSDLLiteralRegistry < SOAP::Mapping::Registry" "refm/api/src/soap/mapping/wsdlliteralregistry.rd")
(find-rurima "--- excn_handler_soap2obj=(value)" "== Instance Methods" "= class SOAP::Mapping::WSDLLiteralRegistry < SOAP::Mapping::Registry" "refm/api/src/soap/mapping/wsdlliteralregistry.rd")
(find-rurima "--- obj2soap(obj, qname)" "== Instance Methods" "= class SOAP::Mapping::WSDLLiteralRegistry < SOAP::Mapping::Registry" "refm/api/src/soap/mapping/wsdlliteralregistry.rd")
(find-rurima "--- soap2obj(node, obj_class = nil)" "== Instance Methods" "= class SOAP::Mapping::WSDLLiteralRegistry < SOAP::Mapping::Registry" "refm/api/src/soap/mapping/wsdlliteralregistry.rd")
(find-rurima "== Constants" "= class SOAP::Mapping::WSDLLiteralRegistry < SOAP::Mapping::Registry" "refm/api/src/soap/mapping/wsdlliteralregistry.rd")
(find-rurima "--- MAPPING_OPT" "== Constants" "= class SOAP::Mapping::WSDLLiteralRegistry < SOAP::Mapping::Registry" "refm/api/src/soap/mapping/wsdlliteralregistry.rd")
(find-rurima "= class SOAP::SOAPGenerator" "refm/api/src/soap/generator.rd")
(find-rurima "== Class Methods" "= class SOAP::SOAPGenerator" "refm/api/src/soap/generator.rd")
(find-rurima "--- new(opt = {})" "== Class Methods" "= class SOAP::SOAPGenerator" "refm/api/src/soap/generator.rd")
(find-rurima "--- assign_ns(attrs, ns, namespace, tag = nil)" "== Class Methods" "= class SOAP::SOAPGenerator" "refm/api/src/soap/generator.rd")
(find-rurima "== Instance Methods" "= class SOAP::SOAPGenerator" "refm/api/src/soap/generator.rd")
(find-rurima "--- charset" "== Instance Methods" "= class SOAP::SOAPGenerator" "refm/api/src/soap/generator.rd")
(find-rurima "--- charset=(value)" "== Instance Methods" "= class SOAP::SOAPGenerator" "refm/api/src/soap/generator.rd")
(find-rurima "--- default_encodingstyle" "== Instance Methods" "= class SOAP::SOAPGenerator" "refm/api/src/soap/generator.rd")
(find-rurima "--- default_encodingstyle=(value)" "== Instance Methods" "= class SOAP::SOAPGenerator" "refm/api/src/soap/generator.rd")
(find-rurima "--- generate_explicit_type" "== Instance Methods" "= class SOAP::SOAPGenerator" "refm/api/src/soap/generator.rd")
(find-rurima "--- generate_explicit_type=(value)" "== Instance Methods" "= class SOAP::SOAPGenerator" "refm/api/src/soap/generator.rd")
(find-rurima "--- use_numeric_character_reference" "== Instance Methods" "= class SOAP::SOAPGenerator" "refm/api/src/soap/generator.rd")
(find-rurima "--- use_numeric_character_reference=(value)" "== Instance Methods" "= class SOAP::SOAPGenerator" "refm/api/src/soap/generator.rd")
(find-rurima "--- generate(obj, io = nil)" "== Instance Methods" "= class SOAP::SOAPGenerator" "refm/api/src/soap/generator.rd")
(find-rurima "--- encode_data(ns, obj, parent)" "== Instance Methods" "= class SOAP::SOAPGenerator" "refm/api/src/soap/generator.rd")
(find-rurima "--- add_reftarget(name, node)" "== Instance Methods" "= class SOAP::SOAPGenerator" "refm/api/src/soap/generator.rd")
(find-rurima "--- encode_child(ns, child, parent)" "== Instance Methods" "= class SOAP::SOAPGenerator" "refm/api/src/soap/generator.rd")
(find-rurima "--- encode_element(ns, obj, parent)" "== Instance Methods" "= class SOAP::SOAPGenerator" "refm/api/src/soap/generator.rd")
(find-rurima "--- encode_name(ns, data, attrs)" "== Instance Methods" "= class SOAP::SOAPGenerator" "refm/api/src/soap/generator.rd")
(find-rurima "--- encode_name_end(ns, data)" "== Instance Methods" "= class SOAP::SOAPGenerator" "refm/api/src/soap/generator.rd")
(find-rurima "--- encode_tag(elename, attrs = nil)" "== Instance Methods" "= class SOAP::SOAPGenerator" "refm/api/src/soap/generator.rd")
(find-rurima "--- encode_tag_end(elename, cr = nil)" "== Instance Methods" "= class SOAP::SOAPGenerator" "refm/api/src/soap/generator.rd")
(find-rurima "--- encode_rawstring(str)" "== Instance Methods" "= class SOAP::SOAPGenerator" "refm/api/src/soap/generator.rd")
(find-rurima "--- encode_string(str)" "== Instance Methods" "= class SOAP::SOAPGenerator" "refm/api/src/soap/generator.rd")
(find-rurima "--- element_local?(element)" "== Instance Methods" "= class SOAP::SOAPGenerator" "refm/api/src/soap/generator.rd")
(find-rurima "--- element_qualified?(element)" "== Instance Methods" "= class SOAP::SOAPGenerator" "refm/api/src/soap/generator.rd")
(find-rurima "== Constants" "= class SOAP::SOAPGenerator" "refm/api/src/soap/generator.rd")
(find-rurima "--- EncodeMap" "== Constants" "= class SOAP::SOAPGenerator" "refm/api/src/soap/generator.rd")
(find-rurima "--- EncodeCharRegexp" "== Constants" "= class SOAP::SOAPGenerator" "refm/api/src/soap/generator.rd")
(find-rurima "= class SOAP::SOAPGenerator::FormatEncodeError < SOAP::Error" "refm/api/src/soap/generator.rd")
(find-rurima "= class SOAP::Parser::ParseFrame::NodeContainer" "refm/api/src/soap/parser/Parser__ParseFrame__NodeContainer")
(find-rurima "== Class Methods" "= class SOAP::Parser::ParseFrame::NodeContainer" "refm/api/src/soap/parser/Parser__ParseFrame__NodeContainer")
(find-rurima "--- new(node)" "== Class Methods" "= class SOAP::Parser::ParseFrame::NodeContainer" "refm/api/src/soap/parser/Parser__ParseFrame__NodeContainer")
(find-rurima "== Instance Methods" "= class SOAP::Parser::ParseFrame::NodeContainer" "refm/api/src/soap/parser/Parser__ParseFrame__NodeContainer")
(find-rurima "--- node" "== Instance Methods" "= class SOAP::Parser::ParseFrame::NodeContainer" "refm/api/src/soap/parser/Parser__ParseFrame__NodeContainer")
(find-rurima "--- replace_node(node)" "== Instance Methods" "= class SOAP::Parser::ParseFrame::NodeContainer" "refm/api/src/soap/parser/Parser__ParseFrame__NodeContainer")
(find-rurima "= class SOAP::Parser::ParseFrame < Object" "refm/api/src/soap/parser/Parser__ParseFrame")
(find-rurima "== Class Methods" "= class SOAP::Parser::ParseFrame < Object" "refm/api/src/soap/parser/Parser__ParseFrame")
(find-rurima "--- new(ns, name, node, encodingstyle)" "== Class Methods" "= class SOAP::Parser::ParseFrame < Object" "refm/api/src/soap/parser/Parser__ParseFrame")
(find-rurima "== Instance Methods" "= class SOAP::Parser::ParseFrame < Object" "refm/api/src/soap/parser/Parser__ParseFrame")
(find-rurima "--- node" "== Instance Methods" "= class SOAP::Parser::ParseFrame < Object" "refm/api/src/soap/parser/Parser__ParseFrame")
(find-rurima "--- name" "== Instance Methods" "= class SOAP::Parser::ParseFrame < Object" "refm/api/src/soap/parser/Parser__ParseFrame")
(find-rurima "--- ns" "== Instance Methods" "= class SOAP::Parser::ParseFrame < Object" "refm/api/src/soap/parser/Parser__ParseFrame")
(find-rurima "--- encodingstyle" "== Instance Methods" "= class SOAP::Parser::ParseFrame < Object" "refm/api/src/soap/parser/Parser__ParseFrame")
(find-rurima "--- node=(node)" "== Instance Methods" "= class SOAP::Parser::ParseFrame < Object" "refm/api/src/soap/parser/Parser__ParseFrame")
(find-rurima "= class SOAP::Parser < Object" "refm/api/src/soap/parser/Parser")
(find-rurima "== Class Methods" "= class SOAP::Parser < Object" "refm/api/src/soap/parser/Parser")
(find-rurima "--- new(opt = {})" "== Class Methods" "= class SOAP::Parser < Object" "refm/api/src/soap/parser/Parser")
(find-rurima "== Instance Methods" "= class SOAP::Parser < Object" "refm/api/src/soap/parser/Parser")
(find-rurima "--- envelopenamespace" "== Instance Methods" "= class SOAP::Parser < Object" "refm/api/src/soap/parser/Parser")
(find-rurima "--- envelopenamespace=(value)" "== Instance Methods" "= class SOAP::Parser < Object" "refm/api/src/soap/parser/Parser")
(find-rurima "--- default_encodingstyle" "== Instance Methods" "= class SOAP::Parser < Object" "refm/api/src/soap/parser/Parser")
(find-rurima "--- default_encodingstyle=(value)" "== Instance Methods" "= class SOAP::Parser < Object" "refm/api/src/soap/parser/Parser")
(find-rurima "--- decode_typemap" "== Instance Methods" "= class SOAP::Parser < Object" "refm/api/src/soap/parser/Parser")
(find-rurima "--- decode_typemap=(value)" "== Instance Methods" "= class SOAP::Parser < Object" "refm/api/src/soap/parser/Parser")
(find-rurima "--- allow_unqualified_element" "== Instance Methods" "= class SOAP::Parser < Object" "refm/api/src/soap/parser/Parser")
(find-rurima "--- allow_unqualified_element=(value)" "== Instance Methods" "= class SOAP::Parser < Object" "refm/api/src/soap/parser/Parser")
(find-rurima "--- charset" "== Instance Methods" "= class SOAP::Parser < Object" "refm/api/src/soap/parser/Parser")
(find-rurima "--- parse(string_or_readable)" "== Instance Methods" "= class SOAP::Parser < Object" "refm/api/src/soap/parser/Parser")
(find-rurima "--- start_element(name, attrs)" "== Instance Methods" "= class SOAP::Parser < Object" "refm/api/src/soap/parser/Parser")
(find-rurima "--- characters(text)" "== Instance Methods" "= class SOAP::Parser < Object" "refm/api/src/soap/parser/Parser")
(find-rurima "--- end_element(name)" "== Instance Methods" "= class SOAP::Parser < Object" "refm/api/src/soap/parser/Parser")
(find-rurima "= class SOAP::Parser::ParseError < SOAP::Error" "refm/api/src/soap/parser/Parser")
(find-rurima "= class SOAP::Parser::FormatDecodeError < SOAP::Parser::ParseError" "refm/api/src/soap/parser/Parser")
(find-rurima "= class SOAP::Parser::UnexpectedElementError < SOAP::Parser::ParseError" "refm/api/src/soap/parser/Parser")
(find-rurima "= class SOAP::Property < Object" "refm/api/src/soap/property/Property")
(find-rurima "== Class Methods" "= class SOAP::Property < Object" "refm/api/src/soap/property/Property")
(find-rurima "--- load(stream)" "== Class Methods" "= class SOAP::Property < Object" "refm/api/src/soap/property/Property")
(find-rurima "--- open(filename)" "== Class Methods" "= class SOAP::Property < Object" "refm/api/src/soap/property/Property")
(find-rurima "--- loadproperty(propname)" "== Class Methods" "= class SOAP::Property < Object" "refm/api/src/soap/property/Property")
(find-rurima "--- new" "== Class Methods" "= class SOAP::Property < Object" "refm/api/src/soap/property/Property")
(find-rurima "== Instance Methods" "= class SOAP::Property < Object" "refm/api/src/soap/property/Property")
(find-rurima "--- load(stream)" "== Instance Methods" "= class SOAP::Property < Object" "refm/api/src/soap/property/Property")
(find-rurima "--- loadproperty(propname)" "== Instance Methods" "= class SOAP::Property < Object" "refm/api/src/soap/property/Property")
(find-rurima "--- [](name)" "== Instance Methods" "= class SOAP::Property < Object" "refm/api/src/soap/property/Property")
(find-rurima "--- []=(name, value)" "== Instance Methods" "= class SOAP::Property < Object" "refm/api/src/soap/property/Property")
(find-rurima "--- <<(value)" "== Instance Methods" "= class SOAP::Property < Object" "refm/api/src/soap/property/Property")
(find-rurima "--- add_hook(name = nil, cascade = false, &hook)" "== Instance Methods" "= class SOAP::Property < Object" "refm/api/src/soap/property/Property")
(find-rurima "--- each {|key, value| ... }" "== Instance Methods" "= class SOAP::Property < Object" "refm/api/src/soap/property/Property")
(find-rurima "--- empty?" "== Instance Methods" "= class SOAP::Property < Object" "refm/api/src/soap/property/Property")
(find-rurima "--- keys" "== Instance Methods" "= class SOAP::Property < Object" "refm/api/src/soap/property/Property")
(find-rurima "--- values" "== Instance Methods" "= class SOAP::Property < Object" "refm/api/src/soap/property/Property")
(find-rurima "--- lock(cascade = false)" "== Instance Methods" "= class SOAP::Property < Object" "refm/api/src/soap/property/Property")
(find-rurima "--- unlock(cascade = false)" "== Instance Methods" "= class SOAP::Property < Object" "refm/api/src/soap/property/Property")
(find-rurima "--- locked?" "== Instance Methods" "= class SOAP::Property < Object" "refm/api/src/soap/property/Property")
(find-rurima "== Protected Instance Methods" "= class SOAP::Property < Object" "refm/api/src/soap/property/Property")
(find-rurima "--- deref_key(key)" "== Protected Instance Methods" "= class SOAP::Property < Object" "refm/api/src/soap/property/Property")
(find-rurima "--- local_referent(key)" "== Protected Instance Methods" "= class SOAP::Property < Object" "refm/api/src/soap/property/Property")
(find-rurima "--- local_assign(key, value)" "== Protected Instance Methods" "= class SOAP::Property < Object" "refm/api/src/soap/property/Property")
(find-rurima "--- local_hook(key, dirent)" "== Protected Instance Methods" "= class SOAP::Property < Object" "refm/api/src/soap/property/Property")
(find-rurima "--- local_assign_hook(key, cascade, &hook)" "== Protected Instance Methods" "= class SOAP::Property < Object" "refm/api/src/soap/property/Property")
(find-rurima "== Constants" "= class SOAP::Property < Object" "refm/api/src/soap/property/Property")
(find-rurima "--- FrozenError" "== Constants" "= class SOAP::Property < Object" "refm/api/src/soap/property/Property")
(find-rurima "--- KEY_REGSRC" "== Constants" "= class SOAP::Property < Object" "refm/api/src/soap/property/Property")
(find-rurima "--- DEF_REGSRC" "== Constants" "= class SOAP::Property < Object" "refm/api/src/soap/property/Property")
(find-rurima "--- COMMENT_REGEXP" "== Constants" "= class SOAP::Property < Object" "refm/api/src/soap/property/Property")
(find-rurima "--- CATDEF_REGEXP" "== Constants" "= class SOAP::Property < Object" "refm/api/src/soap/property/Property")
(find-rurima "--- LINE_REGEXP" "== Constants" "= class SOAP::Property < Object" "refm/api/src/soap/property/Property")
(find-rurima "--- NO_HOOK" "== Constants" "= class SOAP::Property < Object" "refm/api/src/soap/property/Property")
(find-rurima "= module SOAP::Property::Util" "refm/api/src/soap/property/Property__Util")
(find-rurima "== Module Functions" "= module SOAP::Property::Util" "refm/api/src/soap/property/Property__Util")
(find-rurima "--- const_from_name(fqname)" "== Module Functions" "= module SOAP::Property::Util" "refm/api/src/soap/property/Property__Util")
(find-rurima "--- require_from_name(fqname)" "== Module Functions" "= module SOAP::Property::Util" "refm/api/src/soap/property/Property__Util")
(find-rurima "= class SOAP::WSDLDriverFactory < Object" "refm/api/src/soap/wsdlDriver/WSDLDriverFactory")
(find-rurima "== Class Methods" "= class SOAP::WSDLDriverFactory < Object" "refm/api/src/soap/wsdlDriver/WSDLDriverFactory")
(find-rurima "--- new(wsdl)" "== Class Methods" "= class SOAP::WSDLDriverFactory < Object" "refm/api/src/soap/wsdlDriver/WSDLDriverFactory")
(find-rurima "== Instance Methods" "= class SOAP::WSDLDriverFactory < Object" "refm/api/src/soap/wsdlDriver/WSDLDriverFactory")
(find-rurima "--- wsdl" "== Instance Methods" "= class SOAP::WSDLDriverFactory < Object" "refm/api/src/soap/wsdlDriver/WSDLDriverFactory")
(find-rurima "--- inspect" "== Instance Methods" "= class SOAP::WSDLDriverFactory < Object" "refm/api/src/soap/wsdlDriver/WSDLDriverFactory")
(find-rurima "--- create_rpc_driver(servicename = nil, portname = nil)" "== Instance Methods" "= class SOAP::WSDLDriverFactory < Object" "refm/api/src/soap/wsdlDriver/WSDLDriverFactory")
(find-rurima "--- create_driver(service = nil, port = nil)" "== Instance Methods" "= class SOAP::WSDLDriverFactory < Object" "refm/api/src/soap/wsdlDriver/WSDLDriverFactory")
(find-rurima "--- createDriver(service = nil, port = nil)" "== Instance Methods" "= class SOAP::WSDLDriverFactory < Object" "refm/api/src/soap/wsdlDriver/WSDLDriverFactory")
(find-rurima "= class SOAP::WSDLDriverFactory::FactoryError < StandardError" "refm/api/src/soap/wsdlDriver/WSDLDriverFactory")
(find-rurima "= class SOAP::WSDLDriver::Servant__" "refm/api/src/soap/wsdlDriver/WSDLDriver__Servant__")
(find-rurima "== Class Methods" "= class SOAP::WSDLDriver::Servant__" "refm/api/src/soap/wsdlDriver/WSDLDriver__Servant__")
(find-rurima "--- new(host, wsdl, port, logdev)" "== Class Methods" "= class SOAP::WSDLDriver::Servant__" "refm/api/src/soap/wsdlDriver/WSDLDriver__Servant__")
(find-rurima "== Instance Methods" "= class SOAP::WSDLDriver::Servant__" "refm/api/src/soap/wsdlDriver/WSDLDriver__Servant__")
(find-rurima "--- options" "== Instance Methods" "= class SOAP::WSDLDriver::Servant__" "refm/api/src/soap/wsdlDriver/WSDLDriver__Servant__")
(find-rurima "--- port" "== Instance Methods" "= class SOAP::WSDLDriver::Servant__" "refm/api/src/soap/wsdlDriver/WSDLDriver__Servant__")
(find-rurima "--- soapaction" "== Instance Methods" "= class SOAP::WSDLDriver::Servant__" "refm/api/src/soap/wsdlDriver/WSDLDriver__Servant__")
(find-rurima "--- soapaction=(value)" "== Instance Methods" "= class SOAP::WSDLDriver::Servant__" "refm/api/src/soap/wsdlDriver/WSDLDriver__Servant__")
(find-rurima "--- default_encodingstyle" "== Instance Methods" "= class SOAP::WSDLDriver::Servant__" "refm/api/src/soap/wsdlDriver/WSDLDriver__Servant__")
(find-rurima "--- default_encodingstyle=(value)" "== Instance Methods" "= class SOAP::WSDLDriver::Servant__" "refm/api/src/soap/wsdlDriver/WSDLDriver__Servant__")
(find-rurima "--- allow_unqualified_element" "== Instance Methods" "= class SOAP::WSDLDriver::Servant__" "refm/api/src/soap/wsdlDriver/WSDLDriver__Servant__")
(find-rurima "--- allow_unqualified_element=(value)" "== Instance Methods" "= class SOAP::WSDLDriver::Servant__" "refm/api/src/soap/wsdlDriver/WSDLDriver__Servant__")
(find-rurima "--- generate_explicit_type" "== Instance Methods" "= class SOAP::WSDLDriver::Servant__" "refm/api/src/soap/wsdlDriver/WSDLDriver__Servant__")
(find-rurima "--- generate_explicit_type=(value)" "== Instance Methods" "= class SOAP::WSDLDriver::Servant__" "refm/api/src/soap/wsdlDriver/WSDLDriver__Servant__")
(find-rurima "--- mapping_registry" "== Instance Methods" "= class SOAP::WSDLDriver::Servant__" "refm/api/src/soap/wsdlDriver/WSDLDriver__Servant__")
(find-rurima "--- mapping_registry=(value)" "== Instance Methods" "= class SOAP::WSDLDriver::Servant__" "refm/api/src/soap/wsdlDriver/WSDLDriver__Servant__")
(find-rurima "--- wsdl_mapping_registry" "== Instance Methods" "= class SOAP::WSDLDriver::Servant__" "refm/api/src/soap/wsdlDriver/WSDLDriver__Servant__")
(find-rurima "--- wsdl_mapping_registry=(value)" "== Instance Methods" "= class SOAP::WSDLDriver::Servant__" "refm/api/src/soap/wsdlDriver/WSDLDriver__Servant__")
(find-rurima "--- inspect" "== Instance Methods" "= class SOAP::WSDLDriver::Servant__" "refm/api/src/soap/wsdlDriver/WSDLDriver__Servant__")
(find-rurima "--- endpoint_url" "== Instance Methods" "= class SOAP::WSDLDriver::Servant__" "refm/api/src/soap/wsdlDriver/WSDLDriver__Servant__")
(find-rurima "--- endpoint_url=(endpoint_url)" "== Instance Methods" "= class SOAP::WSDLDriver::Servant__" "refm/api/src/soap/wsdlDriver/WSDLDriver__Servant__")
(find-rurima "--- headerhandler" "== Instance Methods" "= class SOAP::WSDLDriver::Servant__" "refm/api/src/soap/wsdlDriver/WSDLDriver__Servant__")
(find-rurima "--- streamhandler" "== Instance Methods" "= class SOAP::WSDLDriver::Servant__" "refm/api/src/soap/wsdlDriver/WSDLDriver__Servant__")
(find-rurima "--- test_loopback_response" "== Instance Methods" "= class SOAP::WSDLDriver::Servant__" "refm/api/src/soap/wsdlDriver/WSDLDriver__Servant__")
(find-rurima "--- reset_stream" "== Instance Methods" "= class SOAP::WSDLDriver::Servant__" "refm/api/src/soap/wsdlDriver/WSDLDriver__Servant__")
(find-rurima "--- rpc_call(name, *values)" "== Instance Methods" "= class SOAP::WSDLDriver::Servant__" "refm/api/src/soap/wsdlDriver/WSDLDriver__Servant__")
(find-rurima "--- rpc_send(method_name, *params)" "== Instance Methods" "= class SOAP::WSDLDriver::Servant__" "refm/api/src/soap/wsdlDriver/WSDLDriver__Servant__")
(find-rurima "--- document_call(name, param)" "== Instance Methods" "= class SOAP::WSDLDriver::Servant__" "refm/api/src/soap/wsdlDriver/WSDLDriver__Servant__")
(find-rurima "--- document_send(name, header_obj, body_obj)" "== Instance Methods" "= class SOAP::WSDLDriver::Servant__" "refm/api/src/soap/wsdlDriver/WSDLDriver__Servant__")
(find-rurima "= class SOAP::WSDLDriver::Servant__::Mapper" "refm/api/src/soap/wsdlDriver/WSDLDriver__Servant__")
(find-rurima "== Class Methods" "= class SOAP::WSDLDriver::Servant__::Mapper" "refm/api/src/soap/wsdlDriver/WSDLDriver__Servant__")
(find-rurima "--- new(elements, types)" "== Class Methods" "= class SOAP::WSDLDriver::Servant__::Mapper" "refm/api/src/soap/wsdlDriver/WSDLDriver__Servant__")
(find-rurima "== Instance Methods" "= class SOAP::WSDLDriver::Servant__::Mapper" "refm/api/src/soap/wsdlDriver/WSDLDriver__Servant__")
(find-rurima "--- obj2ele(obj, name)" "== Instance Methods" "= class SOAP::WSDLDriver::Servant__::Mapper" "refm/api/src/soap/wsdlDriver/WSDLDriver__Servant__")
(find-rurima "--- ele2obj(obj, name)" "== Instance Methods" "= class SOAP::WSDLDriver::Servant__::Mapper" "refm/api/src/soap/wsdlDriver/WSDLDriver__Servant__")
(find-rurima "= class SOAP::WSDLDriver < Object" "refm/api/src/soap/wsdlDriver/WSDLDriver")
(find-rurima "== Class Methods" "= class SOAP::WSDLDriver < Object" "refm/api/src/soap/wsdlDriver/WSDLDriver")
(find-rurima "--- __attr_proxy(symbol, assignable = false)" "== Class Methods" "= class SOAP::WSDLDriver < Object" "refm/api/src/soap/wsdlDriver/WSDLDriver")
(find-rurima "--- new(wsdl, port, logdev)" "== Class Methods" "= class SOAP::WSDLDriver < Object" "refm/api/src/soap/wsdlDriver/WSDLDriver")
(find-rurima "== Instance Methods" "= class SOAP::WSDLDriver < Object" "refm/api/src/soap/wsdlDriver/WSDLDriver")
(find-rurima "--- options" "== Instance Methods" "= class SOAP::WSDLDriver < Object" "refm/api/src/soap/wsdlDriver/WSDLDriver")
(find-rurima "--- headerhandler" "== Instance Methods" "= class SOAP::WSDLDriver < Object" "refm/api/src/soap/wsdlDriver/WSDLDriver")
(find-rurima "--- streamhandler" "== Instance Methods" "= class SOAP::WSDLDriver < Object" "refm/api/src/soap/wsdlDriver/WSDLDriver")
(find-rurima "--- test_loopback_response" "== Instance Methods" "= class SOAP::WSDLDriver < Object" "refm/api/src/soap/wsdlDriver/WSDLDriver")
(find-rurima "--- endpoint_url" "== Instance Methods" "= class SOAP::WSDLDriver < Object" "refm/api/src/soap/wsdlDriver/WSDLDriver")
(find-rurima "--- endpoint_url=(value)" "== Instance Methods" "= class SOAP::WSDLDriver < Object" "refm/api/src/soap/wsdlDriver/WSDLDriver")
(find-rurima "--- mapping_registry" "== Instance Methods" "= class SOAP::WSDLDriver < Object" "refm/api/src/soap/wsdlDriver/WSDLDriver")
(find-rurima "--- mapping_registry=(value)" "== Instance Methods" "= class SOAP::WSDLDriver < Object" "refm/api/src/soap/wsdlDriver/WSDLDriver")
(find-rurima "--- wsdl_mapping_registry" "== Instance Methods" "= class SOAP::WSDLDriver < Object" "refm/api/src/soap/wsdlDriver/WSDLDriver")
(find-rurima "--- wsdl_mapping_registry=(value)" "== Instance Methods" "= class SOAP::WSDLDriver < Object" "refm/api/src/soap/wsdlDriver/WSDLDriver")
(find-rurima "--- default_encodingstyle" "== Instance Methods" "= class SOAP::WSDLDriver < Object" "refm/api/src/soap/wsdlDriver/WSDLDriver")
(find-rurima "--- default_encodingstyle=(value)" "== Instance Methods" "= class SOAP::WSDLDriver < Object" "refm/api/src/soap/wsdlDriver/WSDLDriver")
(find-rurima "--- generate_explicit_type" "== Instance Methods" "= class SOAP::WSDLDriver < Object" "refm/api/src/soap/wsdlDriver/WSDLDriver")
(find-rurima "--- generate_explicit_type=(value)" "== Instance Methods" "= class SOAP::WSDLDriver < Object" "refm/api/src/soap/wsdlDriver/WSDLDriver")
(find-rurima "--- generateEncodeType=(value)" "== Instance Methods" "= class SOAP::WSDLDriver < Object" "refm/api/src/soap/wsdlDriver/WSDLDriver")
(find-rurima "--- allow_unqualified_element" "== Instance Methods" "= class SOAP::WSDLDriver < Object" "refm/api/src/soap/wsdlDriver/WSDLDriver")
(find-rurima "--- allow_unqualified_element=(value)" "== Instance Methods" "= class SOAP::WSDLDriver < Object" "refm/api/src/soap/wsdlDriver/WSDLDriver")
(find-rurima "--- httpproxy" "== Instance Methods" "= class SOAP::WSDLDriver < Object" "refm/api/src/soap/wsdlDriver/WSDLDriver")
(find-rurima "--- httpproxy=(httpproxy)" "== Instance Methods" "= class SOAP::WSDLDriver < Object" "refm/api/src/soap/wsdlDriver/WSDLDriver")
(find-rurima "--- wiredump_dev" "== Instance Methods" "= class SOAP::WSDLDriver < Object" "refm/api/src/soap/wsdlDriver/WSDLDriver")
(find-rurima "--- wiredump_dev=(wire_dump_dev)" "== Instance Methods" "= class SOAP::WSDLDriver < Object" "refm/api/src/soap/wsdlDriver/WSDLDriver")
(find-rurima "--- mandatorycharset" "== Instance Methods" "= class SOAP::WSDLDriver < Object" "refm/api/src/soap/wsdlDriver/WSDLDriver")
(find-rurima "--- mandatorycharset=(mandatorycharset)" "== Instance Methods" "= class SOAP::WSDLDriver < Object" "refm/api/src/soap/wsdlDriver/WSDLDriver")
(find-rurima "--- wiredump_file_base" "== Instance Methods" "= class SOAP::WSDLDriver < Object" "refm/api/src/soap/wsdlDriver/WSDLDriver")
(find-rurima "--- wiredump_file_base=(wiredump_file_base)" "== Instance Methods" "= class SOAP::WSDLDriver < Object" "refm/api/src/soap/wsdlDriver/WSDLDriver")
(find-rurima "--- inspect" "== Instance Methods" "= class SOAP::WSDLDriver < Object" "refm/api/src/soap/wsdlDriver/WSDLDriver")
(find-rurima "--- reset_stream" "== Instance Methods" "= class SOAP::WSDLDriver < Object" "refm/api/src/soap/wsdlDriver/WSDLDriver")
(find-rurima "= class SOAP::HTTPStreamHandler < SOAP::StreamHandler" "refm/api/src/soap/streamHandler/HTTPStreamHandler")
(find-rurima "== Class Methods" "= class SOAP::HTTPStreamHandler < SOAP::StreamHandler" "refm/api/src/soap/streamHandler/HTTPStreamHandler")
(find-rurima "--- new(options)" "== Class Methods" "= class SOAP::HTTPStreamHandler < SOAP::StreamHandler" "refm/api/src/soap/streamHandler/HTTPStreamHandler")
(find-rurima "== Instance Methods" "= class SOAP::HTTPStreamHandler < SOAP::StreamHandler" "refm/api/src/soap/streamHandler/HTTPStreamHandler")
(find-rurima "--- client" "== Instance Methods" "= class SOAP::HTTPStreamHandler < SOAP::StreamHandler" "refm/api/src/soap/streamHandler/HTTPStreamHandler")
(find-rurima "--- wiredump_file_base" "== Instance Methods" "= class SOAP::HTTPStreamHandler < SOAP::StreamHandler" "refm/api/src/soap/streamHandler/HTTPStreamHandler")
(find-rurima "--- wiredump_file_base=(value)" "== Instance Methods" "= class SOAP::HTTPStreamHandler < SOAP::StreamHandler" "refm/api/src/soap/streamHandler/HTTPStreamHandler")
(find-rurima "--- test_loopback_response" "== Instance Methods" "= class SOAP::HTTPStreamHandler < SOAP::StreamHandler" "refm/api/src/soap/streamHandler/HTTPStreamHandler")
(find-rurima "--- accept_encoding_gzip=(allow)" "== Instance Methods" "= class SOAP::HTTPStreamHandler < SOAP::StreamHandler" "refm/api/src/soap/streamHandler/HTTPStreamHandler")
(find-rurima "--- inspect" "== Instance Methods" "= class SOAP::HTTPStreamHandler < SOAP::StreamHandler" "refm/api/src/soap/streamHandler/HTTPStreamHandler")
(find-rurima "--- send(endpoint_url, conn_data, soapaction = nil, charset = @charset)" "== Instance Methods" "= class SOAP::HTTPStreamHandler < SOAP::StreamHandler" "refm/api/src/soap/streamHandler/HTTPStreamHandler")
(find-rurima "--- reset(endpoint_url = nil)" "== Instance Methods" "= class SOAP::HTTPStreamHandler < SOAP::StreamHandler" "refm/api/src/soap/streamHandler/HTTPStreamHandler")
(find-rurima "== Constants" "= class SOAP::HTTPStreamHandler < SOAP::StreamHandler" "refm/api/src/soap/streamHandler/HTTPStreamHandler")
(find-rurima "--- Client" "== Constants" "= class SOAP::HTTPStreamHandler < SOAP::StreamHandler" "refm/api/src/soap/streamHandler/HTTPStreamHandler")
(find-rurima "--- RETRYABLE" "== Constants" "= class SOAP::HTTPStreamHandler < SOAP::StreamHandler" "refm/api/src/soap/streamHandler/HTTPStreamHandler")
(find-rurima "--- MAX_RETRY_COUNT" "== Constants" "= class SOAP::HTTPStreamHandler < SOAP::StreamHandler" "refm/api/src/soap/streamHandler/HTTPStreamHandler")
(find-rurima "= class SOAP::StreamHandler < Object" "refm/api/src/soap/streamHandler/StreamHandler")
(find-rurima "== Class Methods" "= class SOAP::StreamHandler < Object" "refm/api/src/soap/streamHandler/StreamHandler")
(find-rurima "--- parse_media_type(str)" "== Class Methods" "= class SOAP::StreamHandler < Object" "refm/api/src/soap/streamHandler/StreamHandler")
(find-rurima "--- create_media_type(charset)" "== Class Methods" "= class SOAP::StreamHandler < Object" "refm/api/src/soap/streamHandler/StreamHandler")
(find-rurima "== Constants" "= class SOAP::StreamHandler < Object" "refm/api/src/soap/streamHandler/StreamHandler")
(find-rurima "--- RUBY_VERSION_STRING" "== Constants" "= class SOAP::StreamHandler < Object" "refm/api/src/soap/streamHandler/StreamHandler")
(find-rurima "= class SOAP::StreamHandler::ConnectionData < Object" "refm/api/src/soap/streamHandler/StreamHandler__ConnectionData")
(find-rurima "== Class Methods" "= class SOAP::StreamHandler::ConnectionData < Object" "refm/api/src/soap/streamHandler/StreamHandler__ConnectionData")
(find-rurima "--- new(send_string = nil)" "== Class Methods" "= class SOAP::StreamHandler::ConnectionData < Object" "refm/api/src/soap/streamHandler/StreamHandler__ConnectionData")
(find-rurima "== Instance Methods" "= class SOAP::StreamHandler::ConnectionData < Object" "refm/api/src/soap/streamHandler/StreamHandler__ConnectionData")
(find-rurima "--- send_string" "== Instance Methods" "= class SOAP::StreamHandler::ConnectionData < Object" "refm/api/src/soap/streamHandler/StreamHandler__ConnectionData")
(find-rurima "--- send_string=(value)" "== Instance Methods" "= class SOAP::StreamHandler::ConnectionData < Object" "refm/api/src/soap/streamHandler/StreamHandler__ConnectionData")
(find-rurima "--- send_contenttype" "== Instance Methods" "= class SOAP::StreamHandler::ConnectionData < Object" "refm/api/src/soap/streamHandler/StreamHandler__ConnectionData")
(find-rurima "--- send_contenttype=(value)" "== Instance Methods" "= class SOAP::StreamHandler::ConnectionData < Object" "refm/api/src/soap/streamHandler/StreamHandler__ConnectionData")
(find-rurima "--- receive_string" "== Instance Methods" "= class SOAP::StreamHandler::ConnectionData < Object" "refm/api/src/soap/streamHandler/StreamHandler__ConnectionData")
(find-rurima "--- receive_string=(value)" "== Instance Methods" "= class SOAP::StreamHandler::ConnectionData < Object" "refm/api/src/soap/streamHandler/StreamHandler__ConnectionData")
(find-rurima "--- receive_contenttype" "== Instance Methods" "= class SOAP::StreamHandler::ConnectionData < Object" "refm/api/src/soap/streamHandler/StreamHandler__ConnectionData")
(find-rurima "--- receive_contenttype=(value)" "== Instance Methods" "= class SOAP::StreamHandler::ConnectionData < Object" "refm/api/src/soap/streamHandler/StreamHandler__ConnectionData")
(find-rurima "--- is_fault" "== Instance Methods" "= class SOAP::StreamHandler::ConnectionData < Object" "refm/api/src/soap/streamHandler/StreamHandler__ConnectionData")
(find-rurima "--- is_fault=(value)" "== Instance Methods" "= class SOAP::StreamHandler::ConnectionData < Object" "refm/api/src/soap/streamHandler/StreamHandler__ConnectionData")
(find-rurima "--- soapaction" "== Instance Methods" "= class SOAP::StreamHandler::ConnectionData < Object" "refm/api/src/soap/streamHandler/StreamHandler__ConnectionData")
(find-rurima "--- soapaction=(value)" "== Instance Methods" "= class SOAP::StreamHandler::ConnectionData < Object" "refm/api/src/soap/streamHandler/StreamHandler__ConnectionData")
(find-rurima "= module SOAP::Marshal" "refm/api/src/soap/marshal.rd")
(find-rurima "== Class Methods" "= module SOAP::Marshal" "refm/api/src/soap/marshal.rd")
(find-rurima "--- dump(obj, io = nil)" "== Class Methods" "= module SOAP::Marshal" "refm/api/src/soap/marshal.rd")
(find-rurima "--- load(stream)" "== Class Methods" "= module SOAP::Marshal" "refm/api/src/soap/marshal.rd")
(find-rurima "--- marshal(obj, mapping_registry = SOAP::Marshal::MarshalMappingRegistry, io = nil)" "== Class Methods" "= module SOAP::Marshal" "refm/api/src/soap/marshal.rd")
(find-rurima "--- unmarshal(stream, mapping_registry = SOAP::Marshal::MarshalMappingRegistry)" "== Class Methods" "= module SOAP::Marshal" "refm/api/src/soap/marshal.rd")
(find-rurima "== Constants" "= module SOAP::Marshal" "refm/api/src/soap/marshal.rd")
(find-rurima "--- MarshalMappingRegistry" "== Constants" "= module SOAP::Marshal" "refm/api/src/soap/marshal.rd")
(find-rurima "= class SOAP::Attachment" "refm/api/src/soap/attachment/Attachment")
(find-rurima "== Class Methods" "= class SOAP::Attachment" "refm/api/src/soap/attachment/Attachment")
(find-rurima "--- new(string_or_readable = nil)" "== Class Methods" "= class SOAP::Attachment" "refm/api/src/soap/attachment/Attachment")
(find-rurima "--- contentid(obj)" "== Class Methods" "= class SOAP::Attachment" "refm/api/src/soap/attachment/Attachment")
(find-rurima "--- mime_contentid(obj)" "== Class Methods" "= class SOAP::Attachment" "refm/api/src/soap/attachment/Attachment")
(find-rurima "== Instance Methods" "= class SOAP::Attachment" "refm/api/src/soap/attachment/Attachment")
(find-rurima "--- content" "== Instance Methods" "= class SOAP::Attachment" "refm/api/src/soap/attachment/Attachment")
(find-rurima "--- contentid" "== Instance Methods" "= class SOAP::Attachment" "refm/api/src/soap/attachment/Attachment")
(find-rurima "--- contentid=(contentid)" "== Instance Methods" "= class SOAP::Attachment" "refm/api/src/soap/attachment/Attachment")
(find-rurima "--- contentype" "== Instance Methods" "= class SOAP::Attachment" "refm/api/src/soap/attachment/Attachment")
(find-rurima "--- contentype=(contenttype)" "== Instance Methods" "= class SOAP::Attachment" "refm/api/src/soap/attachment/Attachment")
(find-rurima "--- io" "== Instance Methods" "= class SOAP::Attachment" "refm/api/src/soap/attachment/Attachment")
(find-rurima "--- mime_contentid" "== Instance Methods" "= class SOAP::Attachment" "refm/api/src/soap/attachment/Attachment")
(find-rurima "--- save(filename)" "== Instance Methods" "= class SOAP::Attachment" "refm/api/src/soap/attachment/Attachment")
(find-rurima "--- to_s" "== Instance Methods" "= class SOAP::Attachment" "refm/api/src/soap/attachment/Attachment")
(find-rurima "--- write(out)" "== Instance Methods" "= class SOAP::Attachment" "refm/api/src/soap/attachment/Attachment")
(find-rurima "= class SOAP::Mapping::AttachmentFactory < SOAP::Mapping::Factory" "refm/api/src/soap/attachment/Mapping__AttachmentFactory")
(find-rurima "== Instance Methods" "= class SOAP::Mapping::AttachmentFactory < SOAP::Mapping::Factory" "refm/api/src/soap/attachment/Mapping__AttachmentFactory")
(find-rurima "--- obj2soap(soap_class, obj, info, map)" "== Instance Methods" "= class SOAP::Mapping::AttachmentFactory < SOAP::Mapping::Factory" "refm/api/src/soap/attachment/Mapping__AttachmentFactory")
(find-rurima "--- soap2obj(obj_class, node, info, map)" "== Instance Methods" "= class SOAP::Mapping::AttachmentFactory < SOAP::Mapping::Factory" "refm/api/src/soap/attachment/Mapping__AttachmentFactory")
(find-rurima "= class SOAP::SOAPAttachment < SOAP::SOAPExternalReference" "refm/api/src/soap/attachment/SOAPAttachment")
(find-rurima "== Class Methods" "= class SOAP::SOAPAttachment < SOAP::SOAPExternalReference" "refm/api/src/soap/attachment/SOAPAttachment")
(find-rurima "--- new(value)" "== Class Methods" "= class SOAP::SOAPAttachment < SOAP::SOAPExternalReference" "refm/api/src/soap/attachment/SOAPAttachment")
(find-rurima "== Instance Methods" "= class SOAP::SOAPAttachment < SOAP::SOAPExternalReference" "refm/api/src/soap/attachment/SOAPAttachment")
(find-rurima "--- data" "== Instance Methods" "= class SOAP::SOAPAttachment < SOAP::SOAPExternalReference" "refm/api/src/soap/attachment/SOAPAttachment")
(find-rurima "= class SOAP::SOAPNil < XSD::XSDNil" "refm/api/src/soap/baseData.rd")
(find-rurima "= class SOAP::SOAPRawString < XSD::XSDString" "refm/api/src/soap/baseData.rd")
(find-rurima "= class SOAP::SOAPAnySimpleType < XSD::XSDAnySimpleType" "refm/api/src/soap/baseData.rd")
(find-rurima "= class SOAP::SOAPString < XSD::XSDString" "refm/api/src/soap/baseData.rd")
(find-rurima "= class SOAP::SOAPBoolean < XSD::XSDBoolean" "refm/api/src/soap/baseData.rd")
(find-rurima "= class SOAP::SOAPDecimal < XSD::XSDDecimal" "refm/api/src/soap/baseData.rd")
(find-rurima "= class SOAP::SOAPFloat < XSD::XSDFloat" "refm/api/src/soap/baseData.rd")
(find-rurima "= class SOAP::SOAPDouble < XSD::XSDDouble" "refm/api/src/soap/baseData.rd")
(find-rurima "= class SOAP::SOAPDuration < XSD::XSDDuration" "refm/api/src/soap/baseData.rd")
(find-rurima "= class SOAP::SOAPDateTime < XSD::XSDDateTime" "refm/api/src/soap/baseData.rd")
(find-rurima "= class SOAP::SOAPTime < XSD::XSDTime" "refm/api/src/soap/baseData.rd")
(find-rurima "= class SOAP::SOAPDate < XSD::XSDDate" "refm/api/src/soap/baseData.rd")
(find-rurima "= class SOAP::SOAPGYearMonth < XSD::XSDGYearMonth" "refm/api/src/soap/baseData.rd")
(find-rurima "= class SOAP::SOAPGYear < XSD::XSDGYear" "refm/api/src/soap/baseData.rd")
(find-rurima "= class SOAP::SOAPGMonthDay < XSD::XSDGMonthDay" "refm/api/src/soap/baseData.rd")
(find-rurima "= class SOAP::SOAPGDay < XSD::XSDGDay" "refm/api/src/soap/baseData.rd")
(find-rurima "= class SOAP::SOAPGMonth < XSD::XSDGMonth" "refm/api/src/soap/baseData.rd")
(find-rurima "= class SOAP::SOAPHexBinary < XSD::XSDHexBinary" "refm/api/src/soap/baseData.rd")
(find-rurima "= class SOAP::SOAPAnyURI < XSD::XSDAnyURI" "refm/api/src/soap/baseData.rd")
(find-rurima "= class SOAP::SOAPQName < XSD::XSDQName" "refm/api/src/soap/baseData.rd")
(find-rurima "= class SOAP::SOAPInteger < XSD::XSDInteger" "refm/api/src/soap/baseData.rd")
(find-rurima "= class SOAP::SOAPNonPositiveInteger < XSD::XSDPositiveInteger" "refm/api/src/soap/baseData.rd")
(find-rurima "= class SOAP::SOAPNegativeInteger < XSD::XSDNegativeInteger" "refm/api/src/soap/baseData.rd")
(find-rurima "= class SOAP::SOAPLong < XSD::XSDLong" "refm/api/src/soap/baseData.rd")
(find-rurima "= class SOAP::SOAPInt < XSD::XSDInt" "refm/api/src/soap/baseData.rd")
(find-rurima "= class SOAP::SOAPShort < XSD::XSDShort" "refm/api/src/soap/baseData.rd")
(find-rurima "= class SOAP::SOAPByte < XSD::XSDByte" "refm/api/src/soap/baseData.rd")
(find-rurima "= class SOAP::SOAPNonNegativeInteger < XSD::XSDNonNegativeInteger" "refm/api/src/soap/baseData.rd")
(find-rurima "= class SOAP::SOAPUnsignedLong < XSD::XSDUnsignedLong" "refm/api/src/soap/baseData.rd")
(find-rurima "= class SOAP::SOAPUnsignedInt < XSD::XSDUnsignedInt" "refm/api/src/soap/baseData.rd")
(find-rurima "= class SOAP::SOAPUnsignedShort < XSD::XSDUnsignedShort" "refm/api/src/soap/baseData.rd")
(find-rurima "= class SOAP::SOAPUnsignedByte < XSD::XSDUnsignedByte" "refm/api/src/soap/baseData.rd")
(find-rurima "= class SOAP::SOAPPositiveInteger < XSD::XSDPositiveInteger" "refm/api/src/soap/baseData.rd")
(find-rurima "= module SOAP::Processor" "refm/api/src/soap/processor.rd")
(find-rurima "== Class Methods" "= module SOAP::Processor" "refm/api/src/soap/processor.rd")
(find-rurima "--- marshal(env, opt = {}, io = nil)" "== Class Methods" "= module SOAP::Processor" "refm/api/src/soap/processor.rd")
(find-rurima "--- unmarshal(stream, opt = {})" "== Class Methods" "= module SOAP::Processor" "refm/api/src/soap/processor.rd")
(find-rurima "--- default_parser_option" "== Class Methods" "= module SOAP::Processor" "refm/api/src/soap/processor.rd")
(find-rurima "--- default_parser_option=(rhs)" "== Class Methods" "= module SOAP::Processor" "refm/api/src/soap/processor.rd")
(find-rurima "= class SOAP::MIMEMessage::Part" "refm/api/src/soap/mimemessage/MIMEMessage__Part")
(find-rurima "== Class Methods" "= class SOAP::MIMEMessage::Part" "refm/api/src/soap/mimemessage/MIMEMessage__Part")
(find-rurima "--- new" "== Class Methods" "= class SOAP::MIMEMessage::Part" "refm/api/src/soap/mimemessage/MIMEMessage__Part")
(find-rurima "--- parse(str)" "== Class Methods" "= class SOAP::MIMEMessage::Part" "refm/api/src/soap/mimemessage/MIMEMessage__Part")
(find-rurima "== Instance Methods" "= class SOAP::MIMEMessage::Part" "refm/api/src/soap/mimemessage/MIMEMessage__Part")
(find-rurima "--- headers" "== Instance Methods" "= class SOAP::MIMEMessage::Part" "refm/api/src/soap/mimemessage/MIMEMessage__Part")
(find-rurima "--- headers=(value)" "== Instance Methods" "= class SOAP::MIMEMessage::Part" "refm/api/src/soap/mimemessage/MIMEMessage__Part")
(find-rurima "--- body" "== Instance Methods" "= class SOAP::MIMEMessage::Part" "refm/api/src/soap/mimemessage/MIMEMessage__Part")
(find-rurima "--- body=(value)" "== Instance Methods" "= class SOAP::MIMEMessage::Part" "refm/api/src/soap/mimemessage/MIMEMessage__Part")
(find-rurima "--- content" "== Instance Methods" "= class SOAP::MIMEMessage::Part" "refm/api/src/soap/mimemessage/MIMEMessage__Part")
(find-rurima "--- parse(str)" "== Instance Methods" "= class SOAP::MIMEMessage::Part" "refm/api/src/soap/mimemessage/MIMEMessage__Part")
(find-rurima "--- contentid" "== Instance Methods" "= class SOAP::MIMEMessage::Part" "refm/api/src/soap/mimemessage/MIMEMessage__Part")
(find-rurima "--- to_s" "== Instance Methods" "= class SOAP::MIMEMessage::Part" "refm/api/src/soap/mimemessage/MIMEMessage__Part")
(find-rurima "= class SOAP::MIMEMessage < Object" "refm/api/src/soap/mimemessage/MIMEMessage")
(find-rurima "== Class Methods" "= class SOAP::MIMEMessage < Object" "refm/api/src/soap/mimemessage/MIMEMessage")
(find-rurima "--- new" "== Class Methods" "= class SOAP::MIMEMessage < Object" "refm/api/src/soap/mimemessage/MIMEMessage")
(find-rurima "--- parse(head, str)" "== Class Methods" "= class SOAP::MIMEMessage < Object" "refm/api/src/soap/mimemessage/MIMEMessage")
(find-rurima "== Instance Methods" "= class SOAP::MIMEMessage < Object" "refm/api/src/soap/mimemessage/MIMEMessage")
(find-rurima "--- parts" "== Instance Methods" "= class SOAP::MIMEMessage < Object" "refm/api/src/soap/mimemessage/MIMEMessage")
(find-rurima "--- headers" "== Instance Methods" "= class SOAP::MIMEMessage < Object" "refm/api/src/soap/mimemessage/MIMEMessage")
(find-rurima "--- close" "== Instance Methods" "= class SOAP::MIMEMessage < Object" "refm/api/src/soap/mimemessage/MIMEMessage")
(find-rurima "--- parse(head, str)" "== Instance Methods" "= class SOAP::MIMEMessage < Object" "refm/api/src/soap/mimemessage/MIMEMessage")
(find-rurima "--- root" "== Instance Methods" "= class SOAP::MIMEMessage < Object" "refm/api/src/soap/mimemessage/MIMEMessage")
(find-rurima "--- boundary" "== Instance Methods" "= class SOAP::MIMEMessage < Object" "refm/api/src/soap/mimemessage/MIMEMessage")
(find-rurima "--- add_part(content)" "== Instance Methods" "= class SOAP::MIMEMessage < Object" "refm/api/src/soap/mimemessage/MIMEMessage")
(find-rurima "--- add_attachment(attach)" "== Instance Methods" "= class SOAP::MIMEMessage < Object" "refm/api/src/soap/mimemessage/MIMEMessage")
(find-rurima "--- has_parts?" "== Instance Methods" "= class SOAP::MIMEMessage < Object" "refm/api/src/soap/mimemessage/MIMEMessage")
(find-rurima "--- headers_str" "== Instance Methods" "= class SOAP::MIMEMessage < Object" "refm/api/src/soap/mimemessage/MIMEMessage")
(find-rurima "--- content_str" "== Instance Methods" "= class SOAP::MIMEMessage < Object" "refm/api/src/soap/mimemessage/MIMEMessage")
(find-rurima "--- to_s" "== Instance Methods" "= class SOAP::MIMEMessage < Object" "refm/api/src/soap/mimemessage/MIMEMessage")
(find-rurima "== Constants" "= class SOAP::MIMEMessage < Object" "refm/api/src/soap/mimemessage/MIMEMessage")
(find-rurima "--- MultipartContentType" "== Constants" "= class SOAP::MIMEMessage < Object" "refm/api/src/soap/mimemessage/MIMEMessage")
(find-rurima "= class SOAP::MIMEMessage::MIMEMessageError < StandardError" "refm/api/src/soap/mimemessage/MIMEMessage")
(find-rurima "= class SOAP::MIMEMessage::Header < Object" "refm/api/src/soap/mimemessage/MIMEMessage__Header")
(find-rurima "== Class Methods" "= class SOAP::MIMEMessage::Header < Object" "refm/api/src/soap/mimemessage/MIMEMessage__Header")
(find-rurima "--- new" "== Class Methods" "= class SOAP::MIMEMessage::Header < Object" "refm/api/src/soap/mimemessage/MIMEMessage__Header")
(find-rurima "== Instance Methods" "= class SOAP::MIMEMessage::Header < Object" "refm/api/src/soap/mimemessage/MIMEMessage__Header")
(find-rurima "--- str" "== Instance Methods" "= class SOAP::MIMEMessage::Header < Object" "refm/api/src/soap/mimemessage/MIMEMessage__Header")
(find-rurima "--- str=(value)" "== Instance Methods" "= class SOAP::MIMEMessage::Header < Object" "refm/api/src/soap/mimemessage/MIMEMessage__Header")
(find-rurima "--- key" "== Instance Methods" "= class SOAP::MIMEMessage::Header < Object" "refm/api/src/soap/mimemessage/MIMEMessage__Header")
(find-rurima "--- key=(value)" "== Instance Methods" "= class SOAP::MIMEMessage::Header < Object" "refm/api/src/soap/mimemessage/MIMEMessage__Header")
(find-rurima "--- root" "== Instance Methods" "= class SOAP::MIMEMessage::Header < Object" "refm/api/src/soap/mimemessage/MIMEMessage__Header")
(find-rurima "--- root=(value)" "== Instance Methods" "= class SOAP::MIMEMessage::Header < Object" "refm/api/src/soap/mimemessage/MIMEMessage__Header")
(find-rurima "--- [](key)" "== Instance Methods" "= class SOAP::MIMEMessage::Header < Object" "refm/api/src/soap/mimemessage/MIMEMessage__Header")
(find-rurima "--- []=(key, value)" "== Instance Methods" "= class SOAP::MIMEMessage::Header < Object" "refm/api/src/soap/mimemessage/MIMEMessage__Header")
(find-rurima "--- to_s" "== Instance Methods" "= class SOAP::MIMEMessage::Header < Object" "refm/api/src/soap/mimemessage/MIMEMessage__Header")
(find-rurima "= class SOAP::MIMEMessage::Headers < Hash" "refm/api/src/soap/mimemessage/MIMEMessage__Headers")
(find-rurima "== Class Methods" "= class SOAP::MIMEMessage::Headers < Hash" "refm/api/src/soap/mimemessage/MIMEMessage__Headers")
(find-rurima "--- parse(str)" "== Class Methods" "= class SOAP::MIMEMessage::Headers < Hash" "refm/api/src/soap/mimemessage/MIMEMessage__Headers")
(find-rurima "== Instance Methods" "= class SOAP::MIMEMessage::Headers < Hash" "refm/api/src/soap/mimemessage/MIMEMessage__Headers")
(find-rurima "--- parse(str)" "== Instance Methods" "= class SOAP::MIMEMessage::Headers < Hash" "refm/api/src/soap/mimemessage/MIMEMessage__Headers")
(find-rurima "--- parse_line(line)" "== Instance Methods" "= class SOAP::MIMEMessage::Headers < Hash" "refm/api/src/soap/mimemessage/MIMEMessage__Headers")
(find-rurima "--- parse_rhs(str)" "== Instance Methods" "= class SOAP::MIMEMessage::Headers < Hash" "refm/api/src/soap/mimemessage/MIMEMessage__Headers")
(find-rurima "--- add(key, value)" "== Instance Methods" "= class SOAP::MIMEMessage::Headers < Hash" "refm/api/src/soap/mimemessage/MIMEMessage__Headers")
(find-rurima "--- to_s" "== Instance Methods" "= class SOAP::MIMEMessage::Headers < Hash" "refm/api/src/soap/mimemessage/MIMEMessage__Headers")
(find-rurima "= class SOAP::FaultError < SOAP::Error" "refm/api/src/soap/soap/FaultError")
(find-rurima "== Class Methods" "= class SOAP::FaultError < SOAP::Error" "refm/api/src/soap/soap/FaultError")
(find-rurima "--- new(fault)" "== Class Methods" "= class SOAP::FaultError < SOAP::Error" "refm/api/src/soap/soap/FaultError")
(find-rurima "== Instance Methods" "= class SOAP::FaultError < SOAP::Error" "refm/api/src/soap/soap/FaultError")
(find-rurima "--- faultcode" "== Instance Methods" "= class SOAP::FaultError < SOAP::Error" "refm/api/src/soap/soap/FaultError")
(find-rurima "--- faultstring" "== Instance Methods" "= class SOAP::FaultError < SOAP::Error" "refm/api/src/soap/soap/FaultError")
(find-rurima "--- faultactor" "== Instance Methods" "= class SOAP::FaultError < SOAP::Error" "refm/api/src/soap/soap/FaultError")
(find-rurima "--- detail" "== Instance Methods" "= class SOAP::FaultError < SOAP::Error" "refm/api/src/soap/soap/FaultError")
(find-rurima "--- detail=(value)" "== Instance Methods" "= class SOAP::FaultError < SOAP::Error" "refm/api/src/soap/soap/FaultError")
(find-rurima "--- to_s" "== Instance Methods" "= class SOAP::FaultError < SOAP::Error" "refm/api/src/soap/soap/FaultError")
(find-rurima "= module SOAP::Env" "refm/api/src/soap/soap/Env")
(find-rurima "== Class Methods" "= module SOAP::Env" "refm/api/src/soap/soap/Env")
(find-rurima "--- getenv(name)" "== Class Methods" "= module SOAP::Env" "refm/api/src/soap/soap/Env")
(find-rurima "== Constants" "= module SOAP::Env" "refm/api/src/soap/soap/Env")
(find-rurima "--- HTTP_PROXY" "== Constants" "= module SOAP::Env" "refm/api/src/soap/soap/Env")
(find-rurima "--- NO_PROXY" "== Constants" "= module SOAP::Env" "refm/api/src/soap/soap/Env")
(find-rurima "= module SOAP::HTTPConfigLoader" "refm/api/src/soap/httpconfigloader.rd")
(find-rurima "== Module Functions" "= module SOAP::HTTPConfigLoader" "refm/api/src/soap/httpconfigloader.rd")
(find-rurima "--- set_options(client, options)" "== Module Functions" "= module SOAP::HTTPConfigLoader" "refm/api/src/soap/httpconfigloader.rd")
(find-rurima "--- set_basic_auth(client, basic_auth)" "== Module Functions" "= module SOAP::HTTPConfigLoader" "refm/api/src/soap/httpconfigloader.rd")
(find-rurima "--- set_ssl_config(client, ssl_config)" "== Module Functions" "= module SOAP::HTTPConfigLoader" "refm/api/src/soap/httpconfigloader.rd")
(find-rurima "--- ssl_config_int(value)" "== Module Functions" "= module SOAP::HTTPConfigLoader" "refm/api/src/soap/httpconfigloader.rd")
(find-rurima "--- cert_from_file(filename)" "== Module Functions" "= module SOAP::HTTPConfigLoader" "refm/api/src/soap/httpconfigloader.rd")
(find-rurima "--- key_from_file(filename)" "== Module Functions" "= module SOAP::HTTPConfigLoader" "refm/api/src/soap/httpconfigloader.rd")
(find-rurima "= module SOAP::RPC" "refm/api/src/soap/rpc/rpc.rd")
(find-rurima "== Class Methods" "= module SOAP::RPC" "refm/api/src/soap/rpc/rpc.rd")
(find-rurima "--- defined_methods(obj)" "== Class Methods" "= module SOAP::RPC" "refm/api/src/soap/rpc/rpc.rd")
(find-rurima "== Constants" "= module SOAP::RPC" "refm/api/src/soap/rpc/rpc.rd")
(find-rurima "--- ServerException" "== Constants" "= module SOAP::RPC" "refm/api/src/soap/rpc/rpc.rd")
(find-rurima "= class SOAP::RPC::CGIStub::SOAPFCGIRequest < SOAP::RPC::CGIStub::SOAPRequest" "refm/api/src/soap/rpc/cgistub/RPC__CGIStub__SOAPFCGIRequest")
(find-rurima "== Class Methods" "= class SOAP::RPC::CGIStub::SOAPFCGIRequest < SOAP::RPC::CGIStub::SOAPRequest" "refm/api/src/soap/rpc/cgistub/RPC__CGIStub__SOAPFCGIRequest")
(find-rurima "--- new(request)" "== Class Methods" "= class SOAP::RPC::CGIStub::SOAPFCGIRequest < SOAP::RPC::CGIStub::SOAPRequest" "refm/api/src/soap/rpc/cgistub/RPC__CGIStub__SOAPFCGIRequest")
(find-rurima "== Instance Methods" "= class SOAP::RPC::CGIStub::SOAPFCGIRequest < SOAP::RPC::CGIStub::SOAPRequest" "refm/api/src/soap/rpc/cgistub/RPC__CGIStub__SOAPFCGIRequest")
(find-rurima "--- body" "== Instance Methods" "= class SOAP::RPC::CGIStub::SOAPFCGIRequest < SOAP::RPC::CGIStub::SOAPRequest" "refm/api/src/soap/rpc/cgistub/RPC__CGIStub__SOAPFCGIRequest")
(find-rurima "--- [](var)" "== Instance Methods" "= class SOAP::RPC::CGIStub::SOAPFCGIRequest < SOAP::RPC::CGIStub::SOAPRequest" "refm/api/src/soap/rpc/cgistub/RPC__CGIStub__SOAPFCGIRequest")
(find-rurima "--- meta_vars" "== Instance Methods" "= class SOAP::RPC::CGIStub::SOAPFCGIRequest < SOAP::RPC::CGIStub::SOAPRequest" "refm/api/src/soap/rpc/cgistub/RPC__CGIStub__SOAPFCGIRequest")
(find-rurima "= class SOAP::RPC::CGIStub::SOAPRequest < Object" "refm/api/src/soap/rpc/cgistub/RPC__CGIStub__SOAPRequest")
(find-rurima "== Instance Methods" "= class SOAP::RPC::CGIStub::SOAPRequest < Object" "refm/api/src/soap/rpc/cgistub/RPC__CGIStub__SOAPRequest")
(find-rurima "--- body" "== Instance Methods" "= class SOAP::RPC::CGIStub::SOAPRequest < Object" "refm/api/src/soap/rpc/cgistub/RPC__CGIStub__SOAPRequest")
(find-rurima "--- [](var)" "== Instance Methods" "= class SOAP::RPC::CGIStub::SOAPRequest < Object" "refm/api/src/soap/rpc/cgistub/RPC__CGIStub__SOAPRequest")
(find-rurima "--- meta_vars" "== Instance Methods" "= class SOAP::RPC::CGIStub::SOAPRequest < Object" "refm/api/src/soap/rpc/cgistub/RPC__CGIStub__SOAPRequest")
(find-rurima "= class SOAP::RPC::CGIStub < Logger::Application" "refm/api/src/soap/rpc/cgistub/RPC__CGIStub")
(find-rurima "== Class Methods" "= class SOAP::RPC::CGIStub < Logger::Application" "refm/api/src/soap/rpc/cgistub/RPC__CGIStub")
(find-rurima "--- new(appname, default_namespace)" "== Class Methods" "= class SOAP::RPC::CGIStub < Logger::Application" "refm/api/src/soap/rpc/cgistub/RPC__CGIStub")
(find-rurima "== Instance Methods" "= class SOAP::RPC::CGIStub < Logger::Application" "refm/api/src/soap/rpc/cgistub/RPC__CGIStub")
(find-rurima "--- on_init" "== Instance Methods" "= class SOAP::RPC::CGIStub < Logger::Application" "refm/api/src/soap/rpc/cgistub/RPC__CGIStub")
(find-rurima "--- mapping_registry" "== Instance Methods" "= class SOAP::RPC::CGIStub < Logger::Application" "refm/api/src/soap/rpc/cgistub/RPC__CGIStub")
(find-rurima "--- mapping_registry=(value)" "== Instance Methods" "= class SOAP::RPC::CGIStub < Logger::Application" "refm/api/src/soap/rpc/cgistub/RPC__CGIStub")
(find-rurima "--- generate_explicit_type" "== Instance Methods" "= class SOAP::RPC::CGIStub < Logger::Application" "refm/api/src/soap/rpc/cgistub/RPC__CGIStub")
(find-rurima "--- generate_explicit_type=(generate_explicit_type)" "== Instance Methods" "= class SOAP::RPC::CGIStub < Logger::Application" "refm/api/src/soap/rpc/cgistub/RPC__CGIStub")
(find-rurima "--- add_rpc_servant(obj, namespace = @default_namespace)" "== Instance Methods" "= class SOAP::RPC::CGIStub < Logger::Application" "refm/api/src/soap/rpc/cgistub/RPC__CGIStub")
(find-rurima "--- add_servant" "== Instance Methods" "= class SOAP::RPC::CGIStub < Logger::Application" "refm/api/src/soap/rpc/cgistub/RPC__CGIStub")
(find-rurima "--- add_headerhandler(obj)" "== Instance Methods" "= class SOAP::RPC::CGIStub < Logger::Application" "refm/api/src/soap/rpc/cgistub/RPC__CGIStub")
(find-rurima "--- add_rpc_headerhandler(obj)" "== Instance Methods" "= class SOAP::RPC::CGIStub < Logger::Application" "refm/api/src/soap/rpc/cgistub/RPC__CGIStub")
(find-rurima "--- add_rpc_method(obj, name, *param)" "== Instance Methods" "= class SOAP::RPC::CGIStub < Logger::Application" "refm/api/src/soap/rpc/cgistub/RPC__CGIStub")
(find-rurima "--- add_method" "== Instance Methods" "= class SOAP::RPC::CGIStub < Logger::Application" "refm/api/src/soap/rpc/cgistub/RPC__CGIStub")
(find-rurima "--- add_rpc_method_as(obj, name, name_as, *param)" "== Instance Methods" "= class SOAP::RPC::CGIStub < Logger::Application" "refm/api/src/soap/rpc/cgistub/RPC__CGIStub")
(find-rurima "--- add_method_as(obj, name, name_as, *param)" "== Instance Methods" "= class SOAP::RPC::CGIStub < Logger::Application" "refm/api/src/soap/rpc/cgistub/RPC__CGIStub")
(find-rurima "--- add_rpc_method_with_namespace(namespace, obj, name, *param)" "== Instance Methods" "= class SOAP::RPC::CGIStub < Logger::Application" "refm/api/src/soap/rpc/cgistub/RPC__CGIStub")
(find-rurima "--- add_method_with_namespace(namespace, obj, name, *param)" "== Instance Methods" "= class SOAP::RPC::CGIStub < Logger::Application" "refm/api/src/soap/rpc/cgistub/RPC__CGIStub")
(find-rurima "--- add_rpc_method_with_namespace_as(namespace, obj, name, name_as, *param)" "== Instance Methods" "= class SOAP::RPC::CGIStub < Logger::Application" "refm/api/src/soap/rpc/cgistub/RPC__CGIStub")
(find-rurima "--- add_method_with_namespace_as(namespace, obj, name, name_as, *param)" "== Instance Methods" "= class SOAP::RPC::CGIStub < Logger::Application" "refm/api/src/soap/rpc/cgistub/RPC__CGIStub")
(find-rurima "--- add_rpc_operation(receiver, qname, soapaction, name, param_def, opt = {})" "== Instance Methods" "= class SOAP::RPC::CGIStub < Logger::Application" "refm/api/src/soap/rpc/cgistub/RPC__CGIStub")
(find-rurima "--- add_document_operation(receiver, soapaction, name, param_def, opt = {})" "== Instance Methods" "= class SOAP::RPC::CGIStub < Logger::Application" "refm/api/src/soap/rpc/cgistub/RPC__CGIStub")
(find-rurima "--- set_fcgi_request(request)" "== Instance Methods" "= class SOAP::RPC::CGIStub < Logger::Application" "refm/api/src/soap/rpc/cgistub/RPC__CGIStub")
(find-rurima "--- create_fault_response(e)" "== Instance Methods" "= class SOAP::RPC::CGIStub < Logger::Application" "refm/api/src/soap/rpc/cgistub/RPC__CGIStub")
(find-rurima "--- mediatype" "== Instance Methods" "= class SOAP::RPC::CGIStub < Logger::Application" "refm/api/src/soap/rpc/cgistub/RPC__CGIStub")
(find-rurima "--- mediatype=(value)" "== Instance Methods" "= class SOAP::RPC::CGIStub < Logger::Application" "refm/api/src/soap/rpc/cgistub/RPC__CGIStub")
(find-rurima "--- route(request_string, charset)" "== Instance Methods" "= class SOAP::RPC::CGIStub < Logger::Application" "refm/api/src/soap/rpc/cgistub/RPC__CGIStub")
(find-rurima "== Constants" "= class SOAP::RPC::CGIStub < Logger::Application" "refm/api/src/soap/rpc/cgistub/RPC__CGIStub")
(find-rurima "--- HTTPVersion" "== Constants" "= class SOAP::RPC::CGIStub < Logger::Application" "refm/api/src/soap/rpc/cgistub/RPC__CGIStub")
(find-rurima "= class SOAP::RPC::CGIStub::CGIError < SOAP::Error" "refm/api/src/soap/rpc/cgistub/RPC__CGIStub")
(find-rurima "= class SOAP::RPC::CGIStub::SOAPStdinRequest < SOAP::RPC::CGIStub::SOAPRequest" "refm/api/src/soap/rpc/cgistub/RPC__CGIStub__SOAPStdinRequest")
(find-rurima "== Class Methods" "= class SOAP::RPC::CGIStub::SOAPStdinRequest < SOAP::RPC::CGIStub::SOAPRequest" "refm/api/src/soap/rpc/cgistub/RPC__CGIStub__SOAPStdinRequest")
(find-rurima "--- new(stream)" "== Class Methods" "= class SOAP::RPC::CGIStub::SOAPStdinRequest < SOAP::RPC::CGIStub::SOAPRequest" "refm/api/src/soap/rpc/cgistub/RPC__CGIStub__SOAPStdinRequest")
(find-rurima "== Instance Methods" "= class SOAP::RPC::CGIStub::SOAPStdinRequest < SOAP::RPC::CGIStub::SOAPRequest" "refm/api/src/soap/rpc/cgistub/RPC__CGIStub__SOAPStdinRequest")
(find-rurima "--- body" "== Instance Methods" "= class SOAP::RPC::CGIStub::SOAPStdinRequest < SOAP::RPC::CGIStub::SOAPRequest" "refm/api/src/soap/rpc/cgistub/RPC__CGIStub__SOAPStdinRequest")
(find-rurima "--- [](var)" "== Instance Methods" "= class SOAP::RPC::CGIStub::SOAPStdinRequest < SOAP::RPC::CGIStub::SOAPRequest" "refm/api/src/soap/rpc/cgistub/RPC__CGIStub__SOAPStdinRequest")
(find-rurima "--- meta_vars" "== Instance Methods" "= class SOAP::RPC::CGIStub::SOAPStdinRequest < SOAP::RPC::CGIStub::SOAPRequest" "refm/api/src/soap/rpc/cgistub/RPC__CGIStub__SOAPStdinRequest")
(find-rurima "= redefine WEBrick::Log" "refm/api/src/soap/rpc/soaplet.rd")
(find-rurima "== Instance Methods" "= redefine WEBrick::Log" "refm/api/src/soap/rpc/soaplet.rd")
(find-rurima "--- debug(msg = nil)" "== Instance Methods" "= redefine WEBrick::Log" "refm/api/src/soap/rpc/soaplet.rd")
(find-rurima "--- debug(msg = nil) {|msg| ... }" "== Instance Methods" "= redefine WEBrick::Log" "refm/api/src/soap/rpc/soaplet.rd")
(find-rurima "= class SOAP::RPC::SOAPlet < WEBrick::HTTPServlet::AbstractServlet" "refm/api/src/soap/rpc/soaplet.rd")
(find-rurima "== Class Methods" "= class SOAP::RPC::SOAPlet < WEBrick::HTTPServlet::AbstractServlet" "refm/api/src/soap/rpc/soaplet.rd")
(find-rurima "--- new(router = nil)" "== Class Methods" "= class SOAP::RPC::SOAPlet < WEBrick::HTTPServlet::AbstractServlet" "refm/api/src/soap/rpc/soaplet.rd")
(find-rurima "== Instance Methods" "= class SOAP::RPC::SOAPlet < WEBrick::HTTPServlet::AbstractServlet" "refm/api/src/soap/rpc/soaplet.rd")
(find-rurima "--- options" "== Instance Methods" "= class SOAP::RPC::SOAPlet < WEBrick::HTTPServlet::AbstractServlet" "refm/api/src/soap/rpc/soaplet.rd")
(find-rurima "--- app_scope_router" "== Instance Methods" "= class SOAP::RPC::SOAPlet < WEBrick::HTTPServlet::AbstractServlet" "refm/api/src/soap/rpc/soaplet.rd")
(find-rurima "--- add_ervant(obj, namespace)" "== Instance Methods" "= class SOAP::RPC::SOAPlet < WEBrick::HTTPServlet::AbstractServlet" "refm/api/src/soap/rpc/soaplet.rd")
(find-rurima "--- allow_content_encoding_gzip=(allow)" "== Instance Methods" "= class SOAP::RPC::SOAPlet < WEBrick::HTTPServlet::AbstractServlet" "refm/api/src/soap/rpc/soaplet.rd")
(find-rurima "--- get_instance(config, *options)" "== Instance Methods" "= class SOAP::RPC::SOAPlet < WEBrick::HTTPServlet::AbstractServlet" "refm/api/src/soap/rpc/soaplet.rd")
(find-rurima "--- require_path_info?" "== Instance Methods" "= class SOAP::RPC::SOAPlet < WEBrick::HTTPServlet::AbstractServlet" "refm/api/src/soap/rpc/soaplet.rd")
(find-rurima "--- do_GET(req, res)" "== Instance Methods" "= class SOAP::RPC::SOAPlet < WEBrick::HTTPServlet::AbstractServlet" "refm/api/src/soap/rpc/soaplet.rd")
(find-rurima "--- do_POST(req, res)" "== Instance Methods" "= class SOAP::RPC::SOAPlet < WEBrick::HTTPServlet::AbstractServlet" "refm/api/src/soap/rpc/soaplet.rd")
(find-rurima "= class SOAP::RPC::StandaloneServer < SOAP::RPC::HTTPServer" "refm/api/src/soap/rpc/standaloneServer.rd")
(find-rurima "== Class Methods" "= class SOAP::RPC::StandaloneServer < SOAP::RPC::HTTPServer" "refm/api/src/soap/rpc/standaloneServer.rd")
(find-rurima "--- new(appname, default_namespace, host = \"0.0.0.0\", port = 8080)" "== Class Methods" "= class SOAP::RPC::StandaloneServer < SOAP::RPC::HTTPServer" "refm/api/src/soap/rpc/standaloneServer.rd")
(find-rurima "== Instance Methods" "= class SOAP::RPC::StandaloneServer < SOAP::RPC::HTTPServer" "refm/api/src/soap/rpc/standaloneServer.rd")
(find-rurima "--- add_servant(obj, namespace = @default_namespace)" "== Instance Methods" "= class SOAP::RPC::StandaloneServer < SOAP::RPC::HTTPServer" "refm/api/src/soap/rpc/standaloneServer.rd")
(find-rurima "--- add_headerhandler(obj)" "== Instance Methods" "= class SOAP::RPC::StandaloneServer < SOAP::RPC::HTTPServer" "refm/api/src/soap/rpc/standaloneServer.rd")
(find-rurima "= class SOAP::RPC::Driver < Object" "refm/api/src/soap/rpc/driver.rd")
(find-rurima "== Class Methods" "= class SOAP::RPC::Driver < Object" "refm/api/src/soap/rpc/driver.rd")
(find-rurima "--- __attr_proxy(symbol, assignable = false)" "== Class Methods" "= class SOAP::RPC::Driver < Object" "refm/api/src/soap/rpc/driver.rd")
(find-rurima "--- new(endpoint_url, namespace = nil, soapaction = nil)" "== Class Methods" "= class SOAP::RPC::Driver < Object" "refm/api/src/soap/rpc/driver.rd")
(find-rurima "== Instance Methods" "= class SOAP::RPC::Driver < Object" "refm/api/src/soap/rpc/driver.rd")
(find-rurima "--- endpoint_url" "== Instance Methods" "= class SOAP::RPC::Driver < Object" "refm/api/src/soap/rpc/driver.rd")
(find-rurima "--- endpoint_url=(value)" "== Instance Methods" "= class SOAP::RPC::Driver < Object" "refm/api/src/soap/rpc/driver.rd")
(find-rurima "--- mapping_registry" "== Instance Methods" "= class SOAP::RPC::Driver < Object" "refm/api/src/soap/rpc/driver.rd")
(find-rurima "--- mapping_registry=(value)" "== Instance Methods" "= class SOAP::RPC::Driver < Object" "refm/api/src/soap/rpc/driver.rd")
(find-rurima "--- default_encodingstyle" "== Instance Methods" "= class SOAP::RPC::Driver < Object" "refm/api/src/soap/rpc/driver.rd")
(find-rurima "--- default_encodingstyle=(value)" "== Instance Methods" "= class SOAP::RPC::Driver < Object" "refm/api/src/soap/rpc/driver.rd")
(find-rurima "--- generate_explicit_type" "== Instance Methods" "= class SOAP::RPC::Driver < Object" "refm/api/src/soap/rpc/driver.rd")
(find-rurima "--- generate_explicit_type=(value)" "== Instance Methods" "= class SOAP::RPC::Driver < Object" "refm/api/src/soap/rpc/driver.rd")
(find-rurima "--- allow_unqualified_element" "== Instance Methods" "= class SOAP::RPC::Driver < Object" "refm/api/src/soap/rpc/driver.rd")
(find-rurima "--- allow_unqualified_element=(value)" "== Instance Methods" "= class SOAP::RPC::Driver < Object" "refm/api/src/soap/rpc/driver.rd")
(find-rurima "--- headerhandler" "== Instance Methods" "= class SOAP::RPC::Driver < Object" "refm/api/src/soap/rpc/driver.rd")
(find-rurima "--- headerhandler=(value)" "== Instance Methods" "= class SOAP::RPC::Driver < Object" "refm/api/src/soap/rpc/driver.rd")
(find-rurima "--- streamhandler" "== Instance Methods" "= class SOAP::RPC::Driver < Object" "refm/api/src/soap/rpc/driver.rd")
(find-rurima "--- streamhandler=(value)" "== Instance Methods" "= class SOAP::RPC::Driver < Object" "refm/api/src/soap/rpc/driver.rd")
(find-rurima "--- test_loopback_response" "== Instance Methods" "= class SOAP::RPC::Driver < Object" "refm/api/src/soap/rpc/driver.rd")
(find-rurima "--- test_loopback_response=(value)" "== Instance Methods" "= class SOAP::RPC::Driver < Object" "refm/api/src/soap/rpc/driver.rd")
(find-rurima "--- reset_stream" "== Instance Methods" "= class SOAP::RPC::Driver < Object" "refm/api/src/soap/rpc/driver.rd")
(find-rurima "--- reset_stream=(value)" "== Instance Methods" "= class SOAP::RPC::Driver < Object" "refm/api/src/soap/rpc/driver.rd")
(find-rurima "--- proxy" "== Instance Methods" "= class SOAP::RPC::Driver < Object" "refm/api/src/soap/rpc/driver.rd")
(find-rurima "--- options" "== Instance Methods" "= class SOAP::RPC::Driver < Object" "refm/api/src/soap/rpc/driver.rd")
(find-rurima "--- soapaction" "== Instance Methods" "= class SOAP::RPC::Driver < Object" "refm/api/src/soap/rpc/driver.rd")
(find-rurima "--- soapaction=(value)" "== Instance Methods" "= class SOAP::RPC::Driver < Object" "refm/api/src/soap/rpc/driver.rd")
(find-rurima "--- inspect" "== Instance Methods" "= class SOAP::RPC::Driver < Object" "refm/api/src/soap/rpc/driver.rd")
(find-rurima "--- httpproxy" "== Instance Methods" "= class SOAP::RPC::Driver < Object" "refm/api/src/soap/rpc/driver.rd")
(find-rurima "--- httpproxy=(httpproxy)" "== Instance Methods" "= class SOAP::RPC::Driver < Object" "refm/api/src/soap/rpc/driver.rd")
(find-rurima "--- wiredump_dev" "== Instance Methods" "= class SOAP::RPC::Driver < Object" "refm/api/src/soap/rpc/driver.rd")
(find-rurima "--- wiredump_dev=(value)" "== Instance Methods" "= class SOAP::RPC::Driver < Object" "refm/api/src/soap/rpc/driver.rd")
(find-rurima "--- mandatorycharset" "== Instance Methods" "= class SOAP::RPC::Driver < Object" "refm/api/src/soap/rpc/driver.rd")
(find-rurima "--- wiredump_file_base" "== Instance Methods" "= class SOAP::RPC::Driver < Object" "refm/api/src/soap/rpc/driver.rd")
(find-rurima "--- wiredump_file_base=(value)" "== Instance Methods" "= class SOAP::RPC::Driver < Object" "refm/api/src/soap/rpc/driver.rd")
(find-rurima "--- loadproperty(propertyname)" "== Instance Methods" "= class SOAP::RPC::Driver < Object" "refm/api/src/soap/rpc/driver.rd")
(find-rurima "--- add_rpc_method(name, *params)" "== Instance Methods" "= class SOAP::RPC::Driver < Object" "refm/api/src/soap/rpc/driver.rd")
(find-rurima "--- add_method(name, *params)" "== Instance Methods" "= class SOAP::RPC::Driver < Object" "refm/api/src/soap/rpc/driver.rd")
(find-rurima "--- add_rpc_method_as(name, name_as, *params)" "== Instance Methods" "= class SOAP::RPC::Driver < Object" "refm/api/src/soap/rpc/driver.rd")
(find-rurima "--- add_method_as(name, name_as, *params)" "== Instance Methods" "= class SOAP::RPC::Driver < Object" "refm/api/src/soap/rpc/driver.rd")
(find-rurima "--- add_rpc_method_with_soapaction(name, soapaction, *params)" "== Instance Methods" "= class SOAP::RPC::Driver < Object" "refm/api/src/soap/rpc/driver.rd")
(find-rurima "--- add_method_with_soapaction(name, soapaction, *params)" "== Instance Methods" "= class SOAP::RPC::Driver < Object" "refm/api/src/soap/rpc/driver.rd")
(find-rurima "--- add_rpc_method_with_soapaction_as(name, name_as, soapaction, *params)" "== Instance Methods" "= class SOAP::RPC::Driver < Object" "refm/api/src/soap/rpc/driver.rd")
(find-rurima "--- add_method_with_soapaction_as(name, name_as, soapaction, *params)" "== Instance Methods" "= class SOAP::RPC::Driver < Object" "refm/api/src/soap/rpc/driver.rd")
(find-rurima "--- add_document_method(name, soapaction, req_qname, res_qname)" "== Instance Methods" "= class SOAP::RPC::Driver < Object" "refm/api/src/soap/rpc/driver.rd")
(find-rurima "--- add_rpc_operation(qname, soapaction, name, param_def, opt = {})" "== Instance Methods" "= class SOAP::RPC::Driver < Object" "refm/api/src/soap/rpc/driver.rd")
(find-rurima "--- add_document_operation(soapaction, name, param_def, opt = {})" "== Instance Methods" "= class SOAP::RPC::Driver < Object" "refm/api/src/soap/rpc/driver.rd")
(find-rurima "--- invoke(headers, body)" "== Instance Methods" "= class SOAP::RPC::Driver < Object" "refm/api/src/soap/rpc/driver.rd")
(find-rurima "--- call(name, *params)" "== Instance Methods" "= class SOAP::RPC::Driver < Object" "refm/api/src/soap/rpc/driver.rd")
(find-rurima "= reopen SOAP::SOAPBody" "refm/api/src/soap/rpc/element.rd")
(find-rurima "== Instance Methods" "= reopen SOAP::SOAPBody" "refm/api/src/soap/rpc/element.rd")
(find-rurima "--- request" "== Instance Methods" "= reopen SOAP::SOAPBody" "refm/api/src/soap/rpc/element.rd")
(find-rurima "--- response" "== Instance Methods" "= reopen SOAP::SOAPBody" "refm/api/src/soap/rpc/element.rd")
(find-rurima "--- outparams" "== Instance Methods" "= reopen SOAP::SOAPBody" "refm/api/src/soap/rpc/element.rd")
(find-rurima "--- fault" "== Instance Methods" "= reopen SOAP::SOAPBody" "refm/api/src/soap/rpc/element.rd")
(find-rurima "--- fault=(fault)" "== Instance Methods" "= reopen SOAP::SOAPBody" "refm/api/src/soap/rpc/element.rd")
(find-rurima "= class SOAP::RPC::RPCError < SOAP::Error" "refm/api/src/soap/rpc/element.rd")
(find-rurima "= class SOAP::RPC::MethodDefinitionError < SOAP::RPC::RPCError" "refm/api/src/soap/rpc/element.rd")
(find-rurima "= class SOAP::RPC::ParameterError < SOAP::RPC::RPCError" "refm/api/src/soap/rpc/element.rd")
(find-rurima "= class SOAP::RPC::SOAPMethod < SOAP::SOAPStruct" "refm/api/src/soap/rpc/element.rd")
(find-rurima "== Class Methods" "= class SOAP::RPC::SOAPMethod < SOAP::SOAPStruct" "refm/api/src/soap/rpc/element.rd")
(find-rurima "--- new(qname, param_def = nil)" "== Class Methods" "= class SOAP::RPC::SOAPMethod < SOAP::SOAPStruct" "refm/api/src/soap/rpc/element.rd")
(find-rurima "--- param_count(paramdef, *type)" "== Class Methods" "= class SOAP::RPC::SOAPMethod < SOAP::SOAPStruct" "refm/api/src/soap/rpc/element.rd")
(find-rurima "--- derive_rpc_param_def(obj, name, *param)" "== Class Methods" "= class SOAP::RPC::SOAPMethod < SOAP::SOAPStruct" "refm/api/src/soap/rpc/element.rd")
(find-rurima "--- create_rpc_param_def(param_names)" "== Class Methods" "= class SOAP::RPC::SOAPMethod < SOAP::SOAPStruct" "refm/api/src/soap/rpc/element.rd")
(find-rurima "--- create_doc_param_def(req_qnames, res_qnames)" "== Class Methods" "= class SOAP::RPC::SOAPMethod < SOAP::SOAPStruct" "refm/api/src/soap/rpc/element.rd")
(find-rurima "== Instance Methods" "= class SOAP::RPC::SOAPMethod < SOAP::SOAPStruct" "refm/api/src/soap/rpc/element.rd")
(find-rurima "--- param_def" "== Instance Methods" "= class SOAP::RPC::SOAPMethod < SOAP::SOAPStruct" "refm/api/src/soap/rpc/element.rd")
(find-rurima "--- inparam" "== Instance Methods" "= class SOAP::RPC::SOAPMethod < SOAP::SOAPStruct" "refm/api/src/soap/rpc/element.rd")
(find-rurima "--- outparam" "== Instance Methods" "= class SOAP::RPC::SOAPMethod < SOAP::SOAPStruct" "refm/api/src/soap/rpc/element.rd")
(find-rurima "--- retval_name" "== Instance Methods" "= class SOAP::RPC::SOAPMethod < SOAP::SOAPStruct" "refm/api/src/soap/rpc/element.rd")
(find-rurima "--- retval_class_name" "== Instance Methods" "= class SOAP::RPC::SOAPMethod < SOAP::SOAPStruct" "refm/api/src/soap/rpc/element.rd")
(find-rurima "--- have_outparam?" "== Instance Methods" "= class SOAP::RPC::SOAPMethod < SOAP::SOAPStruct" "refm/api/src/soap/rpc/element.rd")
(find-rurima "--- input_params" "== Instance Methods" "= class SOAP::RPC::SOAPMethod < SOAP::SOAPStruct" "refm/api/src/soap/rpc/element.rd")
(find-rurima "--- output_params" "== Instance Methods" "= class SOAP::RPC::SOAPMethod < SOAP::SOAPStruct" "refm/api/src/soap/rpc/element.rd")
(find-rurima "--- set_param(params)" "== Instance Methods" "= class SOAP::RPC::SOAPMethod < SOAP::SOAPStruct" "refm/api/src/soap/rpc/element.rd")
(find-rurima "--- set_outparam(params)" "== Instance Methods" "= class SOAP::RPC::SOAPMethod < SOAP::SOAPStruct" "refm/api/src/soap/rpc/element.rd")
(find-rurima "== Constants" "= class SOAP::RPC::SOAPMethod < SOAP::SOAPStruct" "refm/api/src/soap/rpc/element.rd")
(find-rurima "--- RETVAL" "== Constants" "= class SOAP::RPC::SOAPMethod < SOAP::SOAPStruct" "refm/api/src/soap/rpc/element.rd")
(find-rurima "--- IN" "== Constants" "= class SOAP::RPC::SOAPMethod < SOAP::SOAPStruct" "refm/api/src/soap/rpc/element.rd")
(find-rurima "--- OUT" "== Constants" "= class SOAP::RPC::SOAPMethod < SOAP::SOAPStruct" "refm/api/src/soap/rpc/element.rd")
(find-rurima "--- INOUT" "== Constants" "= class SOAP::RPC::SOAPMethod < SOAP::SOAPStruct" "refm/api/src/soap/rpc/element.rd")
(find-rurima "= class SOAP::RPC::SOAPMethodRequest < SOAP::RPC::SOAPMethod" "refm/api/src/soap/rpc/element.rd")
(find-rurima "== Class Methods" "= class SOAP::RPC::SOAPMethodRequest < SOAP::RPC::SOAPMethod" "refm/api/src/soap/rpc/element.rd")
(find-rurima "--- create_request(qname, *params)" "== Class Methods" "= class SOAP::RPC::SOAPMethodRequest < SOAP::RPC::SOAPMethod" "refm/api/src/soap/rpc/element.rd")
(find-rurima "--- new(qname, param_def = nil, soapaction = nil)" "== Class Methods" "= class SOAP::RPC::SOAPMethodRequest < SOAP::RPC::SOAPMethod" "refm/api/src/soap/rpc/element.rd")
(find-rurima "== Instance Methods" "= class SOAP::RPC::SOAPMethodRequest < SOAP::RPC::SOAPMethod" "refm/api/src/soap/rpc/element.rd")
(find-rurima "--- soapaction" "== Instance Methods" "= class SOAP::RPC::SOAPMethodRequest < SOAP::RPC::SOAPMethod" "refm/api/src/soap/rpc/element.rd")
(find-rurima "--- soapaction=(value)" "== Instance Methods" "= class SOAP::RPC::SOAPMethodRequest < SOAP::RPC::SOAPMethod" "refm/api/src/soap/rpc/element.rd")
(find-rurima "--- each {|name, inparam| ... }" "== Instance Methods" "= class SOAP::RPC::SOAPMethodRequest < SOAP::RPC::SOAPMethod" "refm/api/src/soap/rpc/element.rd")
(find-rurima "--- dup" "== Instance Methods" "= class SOAP::RPC::SOAPMethodRequest < SOAP::RPC::SOAPMethod" "refm/api/src/soap/rpc/element.rd")
(find-rurima "--- create_method_response(response_name = nil)" "== Instance Methods" "= class SOAP::RPC::SOAPMethodRequest < SOAP::RPC::SOAPMethod" "refm/api/src/soap/rpc/element.rd")
(find-rurima "= class SOAP::RPC::SOAPMethodResponse < SOAP::RPC::SOAPMethod" "refm/api/src/soap/rpc/element.rd")
(find-rurima "== Class Methods" "= class SOAP::RPC::SOAPMethodResponse < SOAP::RPC::SOAPMethod" "refm/api/src/soap/rpc/element.rd")
(find-rurima "--- new(qname, param_def = nil)" "== Class Methods" "= class SOAP::RPC::SOAPMethodResponse < SOAP::RPC::SOAPMethod" "refm/api/src/soap/rpc/element.rd")
(find-rurima "== Instance Methods" "= class SOAP::RPC::SOAPMethodResponse < SOAP::RPC::SOAPMethod" "refm/api/src/soap/rpc/element.rd")
(find-rurima "--- retval=(retval)" "== Instance Methods" "= class SOAP::RPC::SOAPMethodResponse < SOAP::RPC::SOAPMethod" "refm/api/src/soap/rpc/element.rd")
(find-rurima "--- each {|retval_name, retval| ... }" "== Instance Methods" "= class SOAP::RPC::SOAPMethodResponse < SOAP::RPC::SOAPMethod" "refm/api/src/soap/rpc/element.rd")
(find-rurima "= class SOAP::RPC::SOAPVoid < XSD::XSDAnySimpleType" "refm/api/src/soap/rpc/element.rd")
(find-rurima "== Class Methods" "= class SOAP::RPC::SOAPVoid < XSD::XSDAnySimpleType" "refm/api/src/soap/rpc/element.rd")
(find-rurima "--- new" "== Class Methods" "= class SOAP::RPC::SOAPVoid < XSD::XSDAnySimpleType" "refm/api/src/soap/rpc/element.rd")
(find-rurima "== Constants" "= class SOAP::RPC::SOAPVoid < XSD::XSDAnySimpleType" "refm/api/src/soap/rpc/element.rd")
(find-rurima "--- Name" "== Constants" "= class SOAP::RPC::SOAPVoid < XSD::XSDAnySimpleType" "refm/api/src/soap/rpc/element.rd")
(find-rurima "= class SOAP::RPC::Proxy < Object" "refm/api/src/soap/rpc/proxy/RPC__Proxy")
(find-rurima "== Class Methods" "= class SOAP::RPC::Proxy < Object" "refm/api/src/soap/rpc/proxy/RPC__Proxy")
(find-rurima "--- new(endpoint_url, soapaction, options)" "== Class Methods" "= class SOAP::RPC::Proxy < Object" "refm/api/src/soap/rpc/proxy/RPC__Proxy")
(find-rurima "== Instance Methods" "= class SOAP::RPC::Proxy < Object" "refm/api/src/soap/rpc/proxy/RPC__Proxy")
(find-rurima "--- soapaction" "== Instance Methods" "= class SOAP::RPC::Proxy < Object" "refm/api/src/soap/rpc/proxy/RPC__Proxy")
(find-rurima "--- soapaction=(value)" "== Instance Methods" "= class SOAP::RPC::Proxy < Object" "refm/api/src/soap/rpc/proxy/RPC__Proxy")
(find-rurima "--- mandatorycharset" "== Instance Methods" "= class SOAP::RPC::Proxy < Object" "refm/api/src/soap/rpc/proxy/RPC__Proxy")
(find-rurima "--- mandatorycharset=(value)" "== Instance Methods" "= class SOAP::RPC::Proxy < Object" "refm/api/src/soap/rpc/proxy/RPC__Proxy")
(find-rurima "--- allow_unqualified_element" "== Instance Methods" "= class SOAP::RPC::Proxy < Object" "refm/api/src/soap/rpc/proxy/RPC__Proxy")
(find-rurima "--- allow_unqualified_element=(value)" "== Instance Methods" "= class SOAP::RPC::Proxy < Object" "refm/api/src/soap/rpc/proxy/RPC__Proxy")
(find-rurima "--- default_encodingstyle" "== Instance Methods" "= class SOAP::RPC::Proxy < Object" "refm/api/src/soap/rpc/proxy/RPC__Proxy")
(find-rurima "--- default_encodingstyle=(value)" "== Instance Methods" "= class SOAP::RPC::Proxy < Object" "refm/api/src/soap/rpc/proxy/RPC__Proxy")
(find-rurima "--- generate_explicit_type" "== Instance Methods" "= class SOAP::RPC::Proxy < Object" "refm/api/src/soap/rpc/proxy/RPC__Proxy")
(find-rurima "--- generate_explicit_type=(value)" "== Instance Methods" "= class SOAP::RPC::Proxy < Object" "refm/api/src/soap/rpc/proxy/RPC__Proxy")
(find-rurima "--- headerhandler" "== Instance Methods" "= class SOAP::RPC::Proxy < Object" "refm/api/src/soap/rpc/proxy/RPC__Proxy")
(find-rurima "--- streamhandler" "== Instance Methods" "= class SOAP::RPC::Proxy < Object" "refm/api/src/soap/rpc/proxy/RPC__Proxy")
(find-rurima "--- mapping_registry" "== Instance Methods" "= class SOAP::RPC::Proxy < Object" "refm/api/src/soap/rpc/proxy/RPC__Proxy")
(find-rurima "--- mapping_registry=(value)" "== Instance Methods" "= class SOAP::RPC::Proxy < Object" "refm/api/src/soap/rpc/proxy/RPC__Proxy")
(find-rurima "--- literal_mapping_registry" "== Instance Methods" "= class SOAP::RPC::Proxy < Object" "refm/api/src/soap/rpc/proxy/RPC__Proxy")
(find-rurima "--- literal_mapping_registry=(value)" "== Instance Methods" "= class SOAP::RPC::Proxy < Object" "refm/api/src/soap/rpc/proxy/RPC__Proxy")
(find-rurima "--- operation" "== Instance Methods" "= class SOAP::RPC::Proxy < Object" "refm/api/src/soap/rpc/proxy/RPC__Proxy")
(find-rurima "--- inspect" "== Instance Methods" "= class SOAP::RPC::Proxy < Object" "refm/api/src/soap/rpc/proxy/RPC__Proxy")
(find-rurima "--- endpoint_url" "== Instance Methods" "= class SOAP::RPC::Proxy < Object" "refm/api/src/soap/rpc/proxy/RPC__Proxy")
(find-rurima "--- endpoint_url=(endpoint_url)" "== Instance Methods" "= class SOAP::RPC::Proxy < Object" "refm/api/src/soap/rpc/proxy/RPC__Proxy")
(find-rurima "--- reset_stream" "== Instance Methods" "= class SOAP::RPC::Proxy < Object" "refm/api/src/soap/rpc/proxy/RPC__Proxy")
(find-rurima "--- set_wiredump_file_base(wiredump_file_base)" "== Instance Methods" "= class SOAP::RPC::Proxy < Object" "refm/api/src/soap/rpc/proxy/RPC__Proxy")
(find-rurima "--- test_loopback_response" "== Instance Methods" "= class SOAP::RPC::Proxy < Object" "refm/api/src/soap/rpc/proxy/RPC__Proxy")
(find-rurima "--- add_rpc_operation(qname, soapaction, name, param_def, opt = {})" "== Instance Methods" "= class SOAP::RPC::Proxy < Object" "refm/api/src/soap/rpc/proxy/RPC__Proxy")
(find-rurima "--- add_method(qname, soapaction, name, param_def, opt = {})" "== Instance Methods" "= class SOAP::RPC::Proxy < Object" "refm/api/src/soap/rpc/proxy/RPC__Proxy")
(find-rurima "--- add_rpc_method(qname, soapaction, name, param_def, opt = {})" "== Instance Methods" "= class SOAP::RPC::Proxy < Object" "refm/api/src/soap/rpc/proxy/RPC__Proxy")
(find-rurima "--- add_document_operation(soapaction, name, param_def, opt = {})" "== Instance Methods" "= class SOAP::RPC::Proxy < Object" "refm/api/src/soap/rpc/proxy/RPC__Proxy")
(find-rurima "--- add_document_method(soapaction, name, param_def, opt = {})" "== Instance Methods" "= class SOAP::RPC::Proxy < Object" "refm/api/src/soap/rpc/proxy/RPC__Proxy")
(find-rurima "--- invoke(req_header, req_body, opt = nil)" "== Instance Methods" "= class SOAP::RPC::Proxy < Object" "refm/api/src/soap/rpc/proxy/RPC__Proxy")
(find-rurima "--- call(name, *params)" "== Instance Methods" "= class SOAP::RPC::Proxy < Object" "refm/api/src/soap/rpc/proxy/RPC__Proxy")
(find-rurima "--- route(req_header, req_body, reqopt, resopt)" "== Instance Methods" "= class SOAP::RPC::Proxy < Object" "refm/api/src/soap/rpc/proxy/RPC__Proxy")
(find-rurima "--- check_fault(body)" "== Instance Methods" "= class SOAP::RPC::Proxy < Object" "refm/api/src/soap/rpc/proxy/RPC__Proxy")
(find-rurima "= class SOAP::RPC::Proxy::Operation < Object" "refm/api/src/soap/rpc/proxy/RPC__Proxy__Operation")
(find-rurima "== Class Methods" "= class SOAP::RPC::Proxy::Operation < Object" "refm/api/src/soap/rpc/proxy/RPC__Proxy__Operation")
(find-rurima "--- new(soapaction, param_def, opt)" "== Class Methods" "= class SOAP::RPC::Proxy::Operation < Object" "refm/api/src/soap/rpc/proxy/RPC__Proxy__Operation")
(find-rurima "== Instance Methods" "= class SOAP::RPC::Proxy::Operation < Object" "refm/api/src/soap/rpc/proxy/RPC__Proxy__Operation")
(find-rurima "--- soapaction" "== Instance Methods" "= class SOAP::RPC::Proxy::Operation < Object" "refm/api/src/soap/rpc/proxy/RPC__Proxy__Operation")
(find-rurima "--- request_style" "== Instance Methods" "= class SOAP::RPC::Proxy::Operation < Object" "refm/api/src/soap/rpc/proxy/RPC__Proxy__Operation")
(find-rurima "--- response_style" "== Instance Methods" "= class SOAP::RPC::Proxy::Operation < Object" "refm/api/src/soap/rpc/proxy/RPC__Proxy__Operation")
(find-rurima "--- request_use" "== Instance Methods" "= class SOAP::RPC::Proxy::Operation < Object" "refm/api/src/soap/rpc/proxy/RPC__Proxy__Operation")
(find-rurima "--- response_use" "== Instance Methods" "= class SOAP::RPC::Proxy::Operation < Object" "refm/api/src/soap/rpc/proxy/RPC__Proxy__Operation")
(find-rurima "--- elementformdefault" "== Instance Methods" "= class SOAP::RPC::Proxy::Operation < Object" "refm/api/src/soap/rpc/proxy/RPC__Proxy__Operation")
(find-rurima "--- attributeformdefault" "== Instance Methods" "= class SOAP::RPC::Proxy::Operation < Object" "refm/api/src/soap/rpc/proxy/RPC__Proxy__Operation")
(find-rurima "--- request_default_encodingstyle" "== Instance Methods" "= class SOAP::RPC::Proxy::Operation < Object" "refm/api/src/soap/rpc/proxy/RPC__Proxy__Operation")
(find-rurima "--- response_default_encodingstyle" "== Instance Methods" "= class SOAP::RPC::Proxy::Operation < Object" "refm/api/src/soap/rpc/proxy/RPC__Proxy__Operation")
(find-rurima "--- request_body(values, mapping_registry, literal_mapping_registry, opt)" "== Instance Methods" "= class SOAP::RPC::Proxy::Operation < Object" "refm/api/src/soap/rpc/proxy/RPC__Proxy__Operation")
(find-rurima "--- response_obj(body, mapping_registry, literal_mapping_registry, opt)" "== Instance Methods" "= class SOAP::RPC::Proxy::Operation < Object" "refm/api/src/soap/rpc/proxy/RPC__Proxy__Operation")
(find-rurima "--- raise_fault(mapping_registry, literal_mapping_registry)" "== Instance Methods" "= class SOAP::RPC::Proxy::Operation < Object" "refm/api/src/soap/rpc/proxy/RPC__Proxy__Operation")
(find-rurima "= class SOAP::RPC::Router::Operation < Object" "refm/api/src/soap/rpc/router/RPC__Router__Operation")
(find-rurima "== Class Methods" "= class SOAP::RPC::Router::Operation < Object" "refm/api/src/soap/rpc/router/RPC__Router__Operation")
(find-rurima "--- new(soapaction, name, param_def, opt)" "== Class Methods" "= class SOAP::RPC::Router::Operation < Object" "refm/api/src/soap/rpc/router/RPC__Router__Operation")
(find-rurima "== Instance Methods" "= class SOAP::RPC::Router::Operation < Object" "refm/api/src/soap/rpc/router/RPC__Router__Operation")
(find-rurima "--- name" "== Instance Methods" "= class SOAP::RPC::Router::Operation < Object" "refm/api/src/soap/rpc/router/RPC__Router__Operation")
(find-rurima "--- soapaction" "== Instance Methods" "= class SOAP::RPC::Router::Operation < Object" "refm/api/src/soap/rpc/router/RPC__Router__Operation")
(find-rurima "--- request_style" "== Instance Methods" "= class SOAP::RPC::Router::Operation < Object" "refm/api/src/soap/rpc/router/RPC__Router__Operation")
(find-rurima "--- response_style" "== Instance Methods" "= class SOAP::RPC::Router::Operation < Object" "refm/api/src/soap/rpc/router/RPC__Router__Operation")
(find-rurima "--- request_use" "== Instance Methods" "= class SOAP::RPC::Router::Operation < Object" "refm/api/src/soap/rpc/router/RPC__Router__Operation")
(find-rurima "--- response_use" "== Instance Methods" "= class SOAP::RPC::Router::Operation < Object" "refm/api/src/soap/rpc/router/RPC__Router__Operation")
(find-rurima "--- request_default_encodingstyle" "== Instance Methods" "= class SOAP::RPC::Router::Operation < Object" "refm/api/src/soap/rpc/router/RPC__Router__Operation")
(find-rurima "--- response_default_encodingstyle" "== Instance Methods" "= class SOAP::RPC::Router::Operation < Object" "refm/api/src/soap/rpc/router/RPC__Router__Operation")
(find-rurima "--- call(body,mapping_registry, literal_mapping_registry, opt)" "== Instance Methods" "= class SOAP::RPC::Router::Operation < Object" "refm/api/src/soap/rpc/router/RPC__Router__Operation")
(find-rurima "= class SOAP::RPC::Router::RequestScopeOperation < SOAP::RPC::Router::Operation" "refm/api/src/soap/rpc/router/RPC__Router__RequestScopeOperation")
(find-rurima "== Class Methods" "= class SOAP::RPC::Router::RequestScopeOperation < SOAP::RPC::Router::Operation" "refm/api/src/soap/rpc/router/RPC__Router__RequestScopeOperation")
(find-rurima "--- new(soapaction, receiver_factory, name, param_def, opt)" "== Class Methods" "= class SOAP::RPC::Router::RequestScopeOperation < SOAP::RPC::Router::Operation" "refm/api/src/soap/rpc/router/RPC__Router__RequestScopeOperation")
(find-rurima "= class SOAP::RPC::Router::ApplicationScopeOperation < SOAP::RPC::Router::Operation" "refm/api/src/soap/rpc/router/RPC__Router__ApplicationScopeOperation")
(find-rurima "== Class Methods" "= class SOAP::RPC::Router::ApplicationScopeOperation < SOAP::RPC::Router::Operation" "refm/api/src/soap/rpc/router/RPC__Router__ApplicationScopeOperation")
(find-rurima "--- new(soapaction, receiver, name, param_def, opt)" "== Class Methods" "= class SOAP::RPC::Router::ApplicationScopeOperation < SOAP::RPC::Router::Operation" "refm/api/src/soap/rpc/router/RPC__Router__ApplicationScopeOperation")
(find-rurima "= class SOAP::RPC::Router < Object" "refm/api/src/soap/rpc/router/RPC__Router")
(find-rurima "== Class Methods" "= class SOAP::RPC::Router < Object" "refm/api/src/soap/rpc/router/RPC__Router")
(find-rurima "--- new(actor)" "== Class Methods" "= class SOAP::RPC::Router < Object" "refm/api/src/soap/rpc/router/RPC__Router")
(find-rurima "== Instance Methods" "= class SOAP::RPC::Router < Object" "refm/api/src/soap/rpc/router/RPC__Router")
(find-rurima "--- actor" "== Instance Methods" "= class SOAP::RPC::Router < Object" "refm/api/src/soap/rpc/router/RPC__Router")
(find-rurima "--- mapping_registry" "== Instance Methods" "= class SOAP::RPC::Router < Object" "refm/api/src/soap/rpc/router/RPC__Router")
(find-rurima "--- mapping_registry=(value)" "== Instance Methods" "= class SOAP::RPC::Router < Object" "refm/api/src/soap/rpc/router/RPC__Router")
(find-rurima "--- literal_mapping_registry" "== Instance Methods" "= class SOAP::RPC::Router < Object" "refm/api/src/soap/rpc/router/RPC__Router")
(find-rurima "--- literal_mapping_registry=(value)" "== Instance Methods" "= class SOAP::RPC::Router < Object" "refm/api/src/soap/rpc/router/RPC__Router")
(find-rurima "--- generate_explicit_type" "== Instance Methods" "= class SOAP::RPC::Router < Object" "refm/api/src/soap/rpc/router/RPC__Router")
(find-rurima "--- generate_explicit_type=(value)" "== Instance Methods" "= class SOAP::RPC::Router < Object" "refm/api/src/soap/rpc/router/RPC__Router")
(find-rurima "--- external_ces" "== Instance Methods" "= class SOAP::RPC::Router < Object" "refm/api/src/soap/rpc/router/RPC__Router")
(find-rurima "--- external_ces=(value)" "== Instance Methods" "= class SOAP::RPC::Router < Object" "refm/api/src/soap/rpc/router/RPC__Router")
(find-rurima "--- add_request_headerhandler(factory)" "== Instance Methods" "= class SOAP::RPC::Router < Object" "refm/api/src/soap/rpc/router/RPC__Router")
(find-rurima "--- add_headerhandler(handler)" "== Instance Methods" "= class SOAP::RPC::Router < Object" "refm/api/src/soap/rpc/router/RPC__Router")
(find-rurima "--- add_rpc_request_servant(factory, namespace)" "== Instance Methods" "= class SOAP::RPC::Router < Object" "refm/api/src/soap/rpc/router/RPC__Router")
(find-rurima "--- add_rpc_servant(obj, namespace)" "== Instance Methods" "= class SOAP::RPC::Router < Object" "refm/api/src/soap/rpc/router/RPC__Router")
(find-rurima "--- add_servant(obj, namespace)" "== Instance Methods" "= class SOAP::RPC::Router < Object" "refm/api/src/soap/rpc/router/RPC__Router")
(find-rurima "--- add_rpc_operation(receiver, qname, soapaction, name, param_def, opt = {})" "== Instance Methods" "= class SOAP::RPC::Router < Object" "refm/api/src/soap/rpc/router/RPC__Router")
(find-rurima "--- add_method(receiver, qname, soapaction, name, param_def, opt = {})" "== Instance Methods" "= class SOAP::RPC::Router < Object" "refm/api/src/soap/rpc/router/RPC__Router")
(find-rurima "--- add_rpc_method(receiver, qname, soapaction, name, param_def, opt = {})" "== Instance Methods" "= class SOAP::RPC::Router < Object" "refm/api/src/soap/rpc/router/RPC__Router")
(find-rurima "--- add_rpc_request_operation(factory, qname, soapaction, name, param_def, opt = {})" "== Instance Methods" "= class SOAP::RPC::Router < Object" "refm/api/src/soap/rpc/router/RPC__Router")
(find-rurima "--- add_document_operation(receiver, soapaction, name, param_def, opt = {})" "== Instance Methods" "= class SOAP::RPC::Router < Object" "refm/api/src/soap/rpc/router/RPC__Router")
(find-rurima "--- add_document_method(receiver, soapaction, name, param_def, opt = {})" "== Instance Methods" "= class SOAP::RPC::Router < Object" "refm/api/src/soap/rpc/router/RPC__Router")
(find-rurima "--- add_document_request_operation(factory, soapaction, name, param_def, opt = {})" "== Instance Methods" "= class SOAP::RPC::Router < Object" "refm/api/src/soap/rpc/router/RPC__Router")
(find-rurima "--- route(conn_data)" "== Instance Methods" "= class SOAP::RPC::Router < Object" "refm/api/src/soap/rpc/router/RPC__Router")
(find-rurima "--- create_fault_response(e)" "== Instance Methods" "= class SOAP::RPC::Router < Object" "refm/api/src/soap/rpc/router/RPC__Router")
(find-rurima "= class SOAP::RPC::HTTPServer < Logger::Application" "refm/api/src/soap/rpc/httpserver.rd")
(find-rurima "== Class Methods" "= class SOAP::RPC::HTTPServer < Logger::Application" "refm/api/src/soap/rpc/httpserver.rd")
(find-rurima "--- new(config)" "== Class Methods" "= class SOAP::RPC::HTTPServer < Logger::Application" "refm/api/src/soap/rpc/httpserver.rd")
(find-rurima "== Instance Methods" "= class SOAP::RPC::HTTPServer < Logger::Application" "refm/api/src/soap/rpc/httpserver.rd")
(find-rurima "--- server" "== Instance Methods" "= class SOAP::RPC::HTTPServer < Logger::Application" "refm/api/src/soap/rpc/httpserver.rd")
(find-rurima "--- default_namespace" "== Instance Methods" "= class SOAP::RPC::HTTPServer < Logger::Application" "refm/api/src/soap/rpc/httpserver.rd")
(find-rurima "--- default_namespace=(value)" "== Instance Methods" "= class SOAP::RPC::HTTPServer < Logger::Application" "refm/api/src/soap/rpc/httpserver.rd")
(find-rurima "--- on_init" "== Instance Methods" "= class SOAP::RPC::HTTPServer < Logger::Application" "refm/api/src/soap/rpc/httpserver.rd")
(find-rurima "--- status" "== Instance Methods" "= class SOAP::RPC::HTTPServer < Logger::Application" "refm/api/src/soap/rpc/httpserver.rd")
(find-rurima "--- shutdown" "== Instance Methods" "= class SOAP::RPC::HTTPServer < Logger::Application" "refm/api/src/soap/rpc/httpserver.rd")
(find-rurima "--- mapping_registry" "== Instance Methods" "= class SOAP::RPC::HTTPServer < Logger::Application" "refm/api/src/soap/rpc/httpserver.rd")
(find-rurima "--- mapping_registry=(mapping_registry)" "== Instance Methods" "= class SOAP::RPC::HTTPServer < Logger::Application" "refm/api/src/soap/rpc/httpserver.rd")
(find-rurima "--- generate_explicit_type" "== Instance Methods" "= class SOAP::RPC::HTTPServer < Logger::Application" "refm/api/src/soap/rpc/httpserver.rd")
(find-rurima "--- generate_explicit_type=(generate_explicit_type)" "== Instance Methods" "= class SOAP::RPC::HTTPServer < Logger::Application" "refm/api/src/soap/rpc/httpserver.rd")
(find-rurima "--- add_rpc_request_servant(factory, namespace = @default_namespace)" "== Instance Methods" "= class SOAP::RPC::HTTPServer < Logger::Application" "refm/api/src/soap/rpc/httpserver.rd")
(find-rurima "--- add_rpc_servant(obj, namespace = @default_namespace)" "== Instance Methods" "= class SOAP::RPC::HTTPServer < Logger::Application" "refm/api/src/soap/rpc/httpserver.rd")
(find-rurima "--- add_request_headerhandler(factory)" "== Instance Methods" "= class SOAP::RPC::HTTPServer < Logger::Application" "refm/api/src/soap/rpc/httpserver.rd")
(find-rurima "--- add_headerhandler(obj)" "== Instance Methods" "= class SOAP::RPC::HTTPServer < Logger::Application" "refm/api/src/soap/rpc/httpserver.rd")
(find-rurima "--- add_rpc_headerhandler(obj)" "== Instance Methods" "= class SOAP::RPC::HTTPServer < Logger::Application" "refm/api/src/soap/rpc/httpserver.rd")
(find-rurima "--- add_rpc_method(obj, name, *param)" "== Instance Methods" "= class SOAP::RPC::HTTPServer < Logger::Application" "refm/api/src/soap/rpc/httpserver.rd")
(find-rurima "--- add_method(obj, name, *param)" "== Instance Methods" "= class SOAP::RPC::HTTPServer < Logger::Application" "refm/api/src/soap/rpc/httpserver.rd")
(find-rurima "--- add_rpc_method_as(obj, name, name_as, *param)" "== Instance Methods" "= class SOAP::RPC::HTTPServer < Logger::Application" "refm/api/src/soap/rpc/httpserver.rd")
(find-rurima "--- add_method_as(obj, name, name_as, *param)" "== Instance Methods" "= class SOAP::RPC::HTTPServer < Logger::Application" "refm/api/src/soap/rpc/httpserver.rd")
(find-rurima "--- add_document_method(obj, soapaction, name, req_qnames, res_qnames)" "== Instance Methods" "= class SOAP::RPC::HTTPServer < Logger::Application" "refm/api/src/soap/rpc/httpserver.rd")
(find-rurima "--- add_rpc_operation(receiver, qname, soapaction, name, param_def, opt = {})" "== Instance Methods" "= class SOAP::RPC::HTTPServer < Logger::Application" "refm/api/src/soap/rpc/httpserver.rd")
(find-rurima "--- add_rpc_request_operation(factory, qname, soapaction, name, param_def, opt = {})" "== Instance Methods" "= class SOAP::RPC::HTTPServer < Logger::Application" "refm/api/src/soap/rpc/httpserver.rd")
(find-rurima "--- add_document_operation(reseicer, soapaction, name, param_def, opt = {})" "== Instance Methods" "= class SOAP::RPC::HTTPServer < Logger::Application" "refm/api/src/soap/rpc/httpserver.rd")
(find-rurima "--- add_document_request_operation(factory, soapaction, name, param_def, opt = {})" "== Instance Methods" "= class SOAP::RPC::HTTPServer < Logger::Application" "refm/api/src/soap/rpc/httpserver.rd")
(find-rurima "= reopen Fiber" "refm/api/src/fiber.rd")
(find-rurima "== Singleton Methods" "= reopen Fiber" "refm/api/src/fiber.rd")
(find-rurima "--- current -> Fiber" "== Singleton Methods" "= reopen Fiber" "refm/api/src/fiber.rd")
(find-rurima "== Public Instance Methods" "= reopen Fiber" "refm/api/src/fiber.rd")
(find-rurima "--- transfer(*args) -> object" "== Public Instance Methods" "= reopen Fiber" "refm/api/src/fiber.rd")
(find-rurima "--- alive? -> bool" "== Public Instance Methods" "= reopen Fiber" "refm/api/src/fiber.rd")
(find-rurima "=== 注意事項" "refm/api/src/set.rd")
(find-rurima "=== 例" "refm/api/src/set.rd")
(find-rurima "= class Set < Object" "refm/api/src/set.rd")
(find-rurima "== Class Methods" "= class Set < Object" "refm/api/src/set.rd")
(find-rurima "--- new(enum = nil) -> Set" "== Class Methods" "= class Set < Object" "refm/api/src/set.rd")
(find-rurima "--- new(enum = nil) {|o| ... } -> Set" "== Class Methods" "= class Set < Object" "refm/api/src/set.rd")
(find-rurima "--- [](*ary) -> Set" "== Class Methods" "= class Set < Object" "refm/api/src/set.rd")
(find-rurima "== Instance Methods" "= class Set < Object" "refm/api/src/set.rd")
(find-rurima "--- clone -> Set" "== Instance Methods" "= class Set < Object" "refm/api/src/set.rd")
(find-rurima "--- dup -> Set" "== Instance Methods" "= class Set < Object" "refm/api/src/set.rd")
(find-rurima "--- size -> Integer" "== Instance Methods" "= class Set < Object" "refm/api/src/set.rd")
(find-rurima "--- length -> Integer" "== Instance Methods" "= class Set < Object" "refm/api/src/set.rd")
(find-rurima "--- empty? -> bool" "== Instance Methods" "= class Set < Object" "refm/api/src/set.rd")
(find-rurima "--- clear -> self" "== Instance Methods" "= class Set < Object" "refm/api/src/set.rd")
(find-rurima "--- replace(enum) -> self" "== Instance Methods" "= class Set < Object" "refm/api/src/set.rd")
(find-rurima "--- flatten -> Set" "== Instance Methods" "= class Set < Object" "refm/api/src/set.rd")
(find-rurima "--- flatten! -> self | nil" "== Instance Methods" "= class Set < Object" "refm/api/src/set.rd")
(find-rurima "--- to_a -> Array" "== Instance Methods" "= class Set < Object" "refm/api/src/set.rd")
(find-rurima "--- include?(o) -> bool" "== Instance Methods" "= class Set < Object" "refm/api/src/set.rd")
(find-rurima "--- member?(o) -> bool" "== Instance Methods" "= class Set < Object" "refm/api/src/set.rd")
(find-rurima "--- superset?(set) -> bool" "== Instance Methods" "= class Set < Object" "refm/api/src/set.rd")
(find-rurima "--- proper_superset?(set) -> bool" "== Instance Methods" "= class Set < Object" "refm/api/src/set.rd")
(find-rurima "--- subset?(set) -> bool" "== Instance Methods" "= class Set < Object" "refm/api/src/set.rd")
(find-rurima "--- proper_subset?(set) -> bool" "== Instance Methods" "= class Set < Object" "refm/api/src/set.rd")
(find-rurima "--- each {|o| ... } -> self" "== Instance Methods" "= class Set < Object" "refm/api/src/set.rd")
(find-rurima "--- collect! {|o| ...} -> self" "== Instance Methods" "= class Set < Object" "refm/api/src/set.rd")
(find-rurima "--- map! {|o| ...} -> self" "== Instance Methods" "= class Set < Object" "refm/api/src/set.rd")
(find-rurima "--- add(o) -> self" "== Instance Methods" "= class Set < Object" "refm/api/src/set.rd")
(find-rurima "--- <<(o) -> self" "== Instance Methods" "= class Set < Object" "refm/api/src/set.rd")
(find-rurima "--- add?(o) -> self | nil" "== Instance Methods" "= class Set < Object" "refm/api/src/set.rd")
(find-rurima "--- delete(o) -> self" "== Instance Methods" "= class Set < Object" "refm/api/src/set.rd")
(find-rurima "--- delete?(o) -> self | nil" "== Instance Methods" "= class Set < Object" "refm/api/src/set.rd")
(find-rurima "--- delete_if {|o| ... } -> self" "== Instance Methods" "= class Set < Object" "refm/api/src/set.rd")
(find-rurima "--- reject! {|o| ... } -> self | nil" "== Instance Methods" "= class Set < Object" "refm/api/src/set.rd")
(find-rurima "--- merge(enum) -> self" "== Instance Methods" "= class Set < Object" "refm/api/src/set.rd")
(find-rurima "--- subtract(enum) -> self" "== Instance Methods" "= class Set < Object" "refm/api/src/set.rd")
(find-rurima "--- union(enum) -> Set" "== Instance Methods" "= class Set < Object" "refm/api/src/set.rd")
(find-rurima "--- +(enum) -> Set" "== Instance Methods" "= class Set < Object" "refm/api/src/set.rd")
(find-rurima "--- |(enum) -> Set" "== Instance Methods" "= class Set < Object" "refm/api/src/set.rd")
(find-rurima "--- difference(enum) -> Set" "== Instance Methods" "= class Set < Object" "refm/api/src/set.rd")
(find-rurima "--- -(enum) -> Set" "== Instance Methods" "= class Set < Object" "refm/api/src/set.rd")
(find-rurima "--- intersection(enum) -> Set" "== Instance Methods" "= class Set < Object" "refm/api/src/set.rd")
(find-rurima "--- &(enum) -> Set" "== Instance Methods" "= class Set < Object" "refm/api/src/set.rd")
(find-rurima "--- ^(enum) -> Set" "== Instance Methods" "= class Set < Object" "refm/api/src/set.rd")
(find-rurima "--- ==(set) -> bool" "== Instance Methods" "= class Set < Object" "refm/api/src/set.rd")
(find-rurima "--- classify {|o| ... } -> Hash" "== Instance Methods" "= class Set < Object" "refm/api/src/set.rd")
(find-rurima "--- divide {|o| ... } -> Set" "== Instance Methods" "= class Set < Object" "refm/api/src/set.rd")
(find-rurima "--- divide {|o1, o2| ... } -> Set" "== Instance Methods" "= class Set < Object" "refm/api/src/set.rd")
(find-rurima "==== 例1" "== Instance Methods" "= class Set < Object" "refm/api/src/set.rd")
(find-rurima "==== 例2" "== Instance Methods" "= class Set < Object" "refm/api/src/set.rd")
(find-rurima "==== 応用例" "== Instance Methods" "= class Set < Object" "refm/api/src/set.rd")
(find-rurima "--- inspect -> String" "==== 応用例" "== Instance Methods" "= class Set < Object" "refm/api/src/set.rd")
(find-rurima "= class SortedSet < Set" "refm/api/src/set.rd")
(find-rurima "= reopen Enumerable" "refm/api/src/set.rd")
(find-rurima "== Instance Methods" "= reopen Enumerable" "refm/api/src/set.rd")
(find-rurima "--- to_set(klass = Set, *args) -> Set" "== Instance Methods" "= reopen Enumerable" "refm/api/src/set.rd")
(find-rurima "--- to_set(klass = Set, *args) {|o| ... } -> Set" "== Instance Methods" "= reopen Enumerable" "refm/api/src/set.rd")
(find-rurima "= reopen IRB" "refm/api/src/irb/help.rd")
(find-rurima "== Singleton Methods" "= reopen IRB" "refm/api/src/irb/help.rd")
(find-rurima "--- print_usage -> ()" "== Singleton Methods" "= reopen IRB" "refm/api/src/irb/help.rd")
(find-rurima "=== 関数として使う" "refm/api/src/irb/xmp.rd")
(find-rurima "=== XMPインスタンスを用いる." "refm/api/src/irb/xmp.rd")
(find-rurima "=== コンテキストに関して" "refm/api/src/irb/xmp.rd")
(find-rurima "= reopen Kernel" "refm/api/src/irb/xmp.rd")
(find-rurima "== Private Instance Methods" "= reopen Kernel" "refm/api/src/irb/xmp.rd")
(find-rurima "--- xmp" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/irb/xmp.rd")
(find-rurima "= class XMP" "refm/api/src/irb/xmp.rd")
(find-rurima "== Class Methods" "= class XMP" "refm/api/src/irb/xmp.rd")
(find-rurima "--- new" "== Class Methods" "= class XMP" "refm/api/src/irb/xmp.rd")
(find-rurima "== Instance Methods" "= class XMP" "refm/api/src/irb/xmp.rd")
(find-rurima "--- puts" "== Instance Methods" "= class XMP" "refm/api/src/irb/xmp.rd")
(find-rurima "= reopen IRB" "refm/api/src/irb/input-method.rd")
(find-rurima "== Constants" "= reopen IRB" "refm/api/src/irb/input-method.rd")
(find-rurima "--- STDIN_FILE_NAME -> \"(line)\"" "== Constants" "= reopen IRB" "refm/api/src/irb/input-method.rd")
(find-rurima "= class IRB::InputMethod < Object" "refm/api/src/irb/input-method.rd")
(find-rurima "== Class Methods" "= class IRB::InputMethod < Object" "refm/api/src/irb/input-method.rd")
(find-rurima "--- new(file = STDIN_FILE_NAME) -> IRB::InputMethod" "== Class Methods" "= class IRB::InputMethod < Object" "refm/api/src/irb/input-method.rd")
(find-rurima "== Instance Methods" "= class IRB::InputMethod < Object" "refm/api/src/irb/input-method.rd")
(find-rurima "--- file_name -> String" "== Instance Methods" "= class IRB::InputMethod < Object" "refm/api/src/irb/input-method.rd")
(find-rurima "--- gets" "== Instance Methods" "= class IRB::InputMethod < Object" "refm/api/src/irb/input-method.rd")
(find-rurima "--- readable_atfer_eof? -> false" "== Instance Methods" "= class IRB::InputMethod < Object" "refm/api/src/irb/input-method.rd")
(find-rurima "= class IRB::StdioInputMethod < IRB::InputMethod" "refm/api/src/irb/input-method.rd")
(find-rurima "== Class Methods" "= class IRB::StdioInputMethod < IRB::InputMethod" "refm/api/src/irb/input-method.rd")
(find-rurima "--- new -> IRB::StdioInputMethod" "== Class Methods" "= class IRB::StdioInputMethod < IRB::InputMethod" "refm/api/src/irb/input-method.rd")
(find-rurima "== Instance Methods" "= class IRB::StdioInputMethod < IRB::InputMethod" "refm/api/src/irb/input-method.rd")
(find-rurima "--- gets -> String" "== Instance Methods" "= class IRB::StdioInputMethod < IRB::InputMethod" "refm/api/src/irb/input-method.rd")
(find-rurima "--- eof? -> bool" "== Instance Methods" "= class IRB::StdioInputMethod < IRB::InputMethod" "refm/api/src/irb/input-method.rd")
(find-rurima "--- readable_atfer_eof? -> true" "== Instance Methods" "= class IRB::StdioInputMethod < IRB::InputMethod" "refm/api/src/irb/input-method.rd")
(find-rurima "--- line(line_no) -> String" "== Instance Methods" "= class IRB::StdioInputMethod < IRB::InputMethod" "refm/api/src/irb/input-method.rd")
(find-rurima "--- encoding -> Encoding" "== Instance Methods" "= class IRB::StdioInputMethod < IRB::InputMethod" "refm/api/src/irb/input-method.rd")
(find-rurima "= class IRB::FileInputMethod < IRB::InputMethod" "refm/api/src/irb/input-method.rd")
(find-rurima "== Class Methods" "= class IRB::FileInputMethod < IRB::InputMethod" "refm/api/src/irb/input-method.rd")
(find-rurima "--- new(path) -> IRB::FileInputMethod" "== Class Methods" "= class IRB::FileInputMethod < IRB::InputMethod" "refm/api/src/irb/input-method.rd")
(find-rurima "== Instance Methods" "= class IRB::FileInputMethod < IRB::InputMethod" "refm/api/src/irb/input-method.rd")
(find-rurima "--- gets -> String" "== Instance Methods" "= class IRB::FileInputMethod < IRB::InputMethod" "refm/api/src/irb/input-method.rd")
(find-rurima "--- encoding -> Encoding" "== Instance Methods" "= class IRB::FileInputMethod < IRB::InputMethod" "refm/api/src/irb/input-method.rd")
(find-rurima "= class IRB::ReadlineInputMethod < IRB::InputMethod" "refm/api/src/irb/input-method.rd")
(find-rurima "== Class Methods" "= class IRB::ReadlineInputMethod < IRB::InputMethod" "refm/api/src/irb/input-method.rd")
(find-rurima "--- new -> IRB::ReadlineInputMethod" "== Class Methods" "= class IRB::ReadlineInputMethod < IRB::InputMethod" "refm/api/src/irb/input-method.rd")
(find-rurima "== Instance Methods" "= class IRB::ReadlineInputMethod < IRB::InputMethod" "refm/api/src/irb/input-method.rd")
(find-rurima "--- gets -> String" "== Instance Methods" "= class IRB::ReadlineInputMethod < IRB::InputMethod" "refm/api/src/irb/input-method.rd")
(find-rurima "--- eof? -> bool" "== Instance Methods" "= class IRB::ReadlineInputMethod < IRB::InputMethod" "refm/api/src/irb/input-method.rd")
(find-rurima "--- readable_atfer_eof? -> false" "== Instance Methods" "= class IRB::ReadlineInputMethod < IRB::InputMethod" "refm/api/src/irb/input-method.rd")
(find-rurima "--- line(line_no) -> String" "== Instance Methods" "= class IRB::ReadlineInputMethod < IRB::InputMethod" "refm/api/src/irb/input-method.rd")
(find-rurima "--- encoding -> Encoding" "== Instance Methods" "= class IRB::ReadlineInputMethod < IRB::InputMethod" "refm/api/src/irb/input-method.rd")
(find-rurima "= class IRB::Locale < Object" "refm/api/src/irb/locale.rd")
(find-rurima "== Instance Methods" "= class IRB::Locale < Object" "refm/api/src/irb/locale.rd")
(find-rurima "--- String" "== Instance Methods" "= class IRB::Locale < Object" "refm/api/src/irb/locale.rd")
(find-rurima "--- encoding" "== Instance Methods" "= class IRB::Locale < Object" "refm/api/src/irb/locale.rd")
(find-rurima "--- find" "== Instance Methods" "= class IRB::Locale < Object" "refm/api/src/irb/locale.rd")
(find-rurima "--- format" "== Instance Methods" "= class IRB::Locale < Object" "refm/api/src/irb/locale.rd")
(find-rurima "--- gets" "== Instance Methods" "= class IRB::Locale < Object" "refm/api/src/irb/locale.rd")
(find-rurima "--- lang" "== Instance Methods" "= class IRB::Locale < Object" "refm/api/src/irb/locale.rd")
(find-rurima "--- load" "== Instance Methods" "= class IRB::Locale < Object" "refm/api/src/irb/locale.rd")
(find-rurima "--- modifieer" "== Instance Methods" "= class IRB::Locale < Object" "refm/api/src/irb/locale.rd")
(find-rurima "--- print" "== Instance Methods" "= class IRB::Locale < Object" "refm/api/src/irb/locale.rd")
(find-rurima "--- printf" "== Instance Methods" "= class IRB::Locale < Object" "refm/api/src/irb/locale.rd")
(find-rurima "--- puts" "== Instance Methods" "= class IRB::Locale < Object" "refm/api/src/irb/locale.rd")
(find-rurima "--- readline" "== Instance Methods" "= class IRB::Locale < Object" "refm/api/src/irb/locale.rd")
(find-rurima "--- require(file, priv = nil)" "== Instance Methods" "= class IRB::Locale < Object" "refm/api/src/irb/locale.rd")
(find-rurima "--- territory" "== Instance Methods" "= class IRB::Locale < Object" "refm/api/src/irb/locale.rd")
(find-rurima "== Constants" "= class IRB::Locale < Object" "refm/api/src/irb/locale.rd")
(find-rurima "--- JPDefaultLocale" "== Constants" "= class IRB::Locale < Object" "refm/api/src/irb/locale.rd")
(find-rurima "--- LOCALE_DIR" "== Constants" "= class IRB::Locale < Object" "refm/api/src/irb/locale.rd")
(find-rurima "--- LOCALE_NAME_RE" "== Constants" "= class IRB::Locale < Object" "refm/api/src/irb/locale.rd")
(find-rurima "= module IRB::ExtendCommandBundle" "refm/api/src/irb/extend-command.rd")
(find-rurima "== Singleton Methods" "= module IRB::ExtendCommandBundle" "refm/api/src/irb/extend-command.rd")
(find-rurima "--- def_extend_command(cmd_name, cmd_class, load_file = nil, *aliases) -> object" "== Singleton Methods" "= module IRB::ExtendCommandBundle" "refm/api/src/irb/extend-command.rd")
(find-rurima "--- extend_object(obj) -> IRB::ExtendCommandBundle" "== Singleton Methods" "= module IRB::ExtendCommandBundle" "refm/api/src/irb/extend-command.rd")
(find-rurima "--- install_extend_commands -> object" "== Singleton Methods" "= module IRB::ExtendCommandBundle" "refm/api/src/irb/extend-command.rd")
(find-rurima "--- irb_original_method_name(method_name) -> String" "== Singleton Methods" "= module IRB::ExtendCommandBundle" "refm/api/src/irb/extend-command.rd")
(find-rurima "== Instance Methods" "= module IRB::ExtendCommandBundle" "refm/api/src/irb/extend-command.rd")
(find-rurima "--- install_alias_method(to, from, override = NO_OVERRIDE)" "== Instance Methods" "= module IRB::ExtendCommandBundle" "refm/api/src/irb/extend-command.rd")
(find-rurima "--- irb_exit(ret = 0) -> object" "== Instance Methods" "= module IRB::ExtendCommandBundle" "refm/api/src/irb/extend-command.rd")
(find-rurima "--- irb_context -> IRB::Context" "== Instance Methods" "= module IRB::ExtendCommandBundle" "refm/api/src/irb/extend-command.rd")
(find-rurima "== Constants" "= module IRB::ExtendCommandBundle" "refm/api/src/irb/extend-command.rd")
(find-rurima "--- NO_OVERRIDE -> 0" "== Constants" "= module IRB::ExtendCommandBundle" "refm/api/src/irb/extend-command.rd")
(find-rurima "--- OVERRIDE_ALL -> 1" "== Constants" "= module IRB::ExtendCommandBundle" "refm/api/src/irb/extend-command.rd")
(find-rurima "--- OVERRIDE_PRIVATE_ONLY -> 2" "== Constants" "= module IRB::ExtendCommandBundle" "refm/api/src/irb/extend-command.rd")
(find-rurima "= module IRB::ContextExtender" "refm/api/src/irb/extend-command.rd")
(find-rurima "== Singleton Methods" "= module IRB::ContextExtender" "refm/api/src/irb/extend-command.rd")
(find-rurima "--- install_extend_commands -> object" "== Singleton Methods" "= module IRB::ContextExtender" "refm/api/src/irb/extend-command.rd")
(find-rurima "--- def_extend_command(cmd_name, load_file, *aliases) -> object" "== Singleton Methods" "= module IRB::ContextExtender" "refm/api/src/irb/extend-command.rd")
(find-rurima "= module IRB::Notifier" "refm/api/src/irb/notifier.rd")
(find-rurima "== Module Functions" "= module IRB::Notifier" "refm/api/src/irb/notifier.rd")
(find-rurima "--- def_notifier(prefix = \"\", output_method = StdioOutputMethod.new)" "== Module Functions" "= module IRB::Notifier" "refm/api/src/irb/notifier.rd")
(find-rurima "= class IRB::Notifier::AbstractNotifier < Object" "refm/api/src/irb/notifier.rd")
(find-rurima "= class IRB::Notifier::AbstructNotifier < Object" "refm/api/src/irb/notifier.rd")
(find-rurima "== Instance Methods" "= class IRB::Notifier::AbstructNotifier < Object" "refm/api/src/irb/notifier.rd")
(find-rurima "--- prefix" "== Instance Methods" "= class IRB::Notifier::AbstructNotifier < Object" "refm/api/src/irb/notifier.rd")
(find-rurima "--- notify? -> bool" "== Instance Methods" "= class IRB::Notifier::AbstructNotifier < Object" "refm/api/src/irb/notifier.rd")
(find-rurima "--- print(*opts)" "== Instance Methods" "= class IRB::Notifier::AbstructNotifier < Object" "refm/api/src/irb/notifier.rd")
(find-rurima "--- printn(*opts)" "== Instance Methods" "= class IRB::Notifier::AbstructNotifier < Object" "refm/api/src/irb/notifier.rd")
(find-rurima "--- printf(format, *opts)" "== Instance Methods" "= class IRB::Notifier::AbstructNotifier < Object" "refm/api/src/irb/notifier.rd")
(find-rurima "--- puts(*objs)" "== Instance Methods" "= class IRB::Notifier::AbstructNotifier < Object" "refm/api/src/irb/notifier.rd")
(find-rurima "--- pp(*objs)" "== Instance Methods" "= class IRB::Notifier::AbstructNotifier < Object" "refm/api/src/irb/notifier.rd")
(find-rurima "--- ppx(prefix, *objs)" "== Instance Methods" "= class IRB::Notifier::AbstructNotifier < Object" "refm/api/src/irb/notifier.rd")
(find-rurima "--- exec_if{|base_notifier| ... }" "== Instance Methods" "= class IRB::Notifier::AbstructNotifier < Object" "refm/api/src/irb/notifier.rd")
(find-rurima "= class IRB::Notifier::CompositeNotifier < IRB::Notifier::AbstractNotifier" "refm/api/src/irb/notifier.rd")
(find-rurima "= class IRB::Notifier::LeveledNotifier < IRB::Notifier::AbstractNotifier" "refm/api/src/irb/notifier.rd")
(find-rurima "= class IRB::Notifier::NoMsgNotifier < IRB::Notifier::LeveledNotifier" "refm/api/src/irb/notifier.rd")
(find-rurima "= class IRB::Frame" "refm/api/src/irb/frame.rd")
(find-rurima "== Class Methods" "= class IRB::Frame" "refm/api/src/irb/frame.rd")
(find-rurima "--- top(n = 0)" "== Class Methods" "= class IRB::Frame" "refm/api/src/irb/frame.rd")
(find-rurima "--- bottom(n = 0)" "== Class Methods" "= class IRB::Frame" "refm/api/src/irb/frame.rd")
(find-rurima "--- sender" "== Class Methods" "= class IRB::Frame" "refm/api/src/irb/frame.rd")
(find-rurima "== Instance Methods" "= class IRB::Frame" "refm/api/src/irb/frame.rd")
(find-rurima "--- bottom(n = 0)" "== Instance Methods" "= class IRB::Frame" "refm/api/src/irb/frame.rd")
(find-rurima "--- top(n = 0)" "== Instance Methods" "= class IRB::Frame" "refm/api/src/irb/frame.rd")
(find-rurima "--- trace_func(event, file, line, id, binding)" "== Instance Methods" "= class IRB::Frame" "refm/api/src/irb/frame.rd")
(find-rurima "= reopen IRB" "refm/api/src/irb/inspector.rd")
(find-rurima "== Singleton Methods" "= reopen IRB" "refm/api/src/irb/inspector.rd")
(find-rurima "--- Inspector(inspect, init = nil) -> IRB::Inspector" "== Singleton Methods" "= reopen IRB" "refm/api/src/irb/inspector.rd")
(find-rurima "= class IRB::Inspector" "refm/api/src/irb/inspector.rd")
(find-rurima "== Instance Methods" "= class IRB::Inspector" "refm/api/src/irb/inspector.rd")
(find-rurima "--- init -> ()" "== Instance Methods" "= class IRB::Inspector" "refm/api/src/irb/inspector.rd")
(find-rurima "--- inspect_value(v) -> ()" "== Instance Methods" "= class IRB::Inspector" "refm/api/src/irb/inspector.rd")
(find-rurima "= object IRB::INSPECTORS" "refm/api/src/irb/inspector.rd")
(find-rurima "--- keys_with_inspector(inspector) -> Array" "= object IRB::INSPECTORS" "refm/api/src/irb/inspector.rd")
(find-rurima "--- def_inspector(key, arg = nil) { |v| ... } -> object" "= object IRB::INSPECTORS" "refm/api/src/irb/inspector.rd")
(find-rurima "= class IRB::OutputMethod" "refm/api/src/irb/output-method.rd")
(find-rurima "== Instance Methods" "= class IRB::OutputMethod" "refm/api/src/irb/output-method.rd")
(find-rurima "--- print(*objs)" "== Instance Methods" "= class IRB::OutputMethod" "refm/api/src/irb/output-method.rd")
(find-rurima "--- printn(*objs) -> nil" "== Instance Methods" "= class IRB::OutputMethod" "refm/api/src/irb/output-method.rd")
(find-rurima "--- puts(*objs) -> object" "== Instance Methods" "= class IRB::OutputMethod" "refm/api/src/irb/output-method.rd")
(find-rurima "--- pp(*objs) -> object" "== Instance Methods" "= class IRB::OutputMethod" "refm/api/src/irb/output-method.rd")
(find-rurima "--- ppx(prefix, *objs) -> object" "== Instance Methods" "= class IRB::OutputMethod" "refm/api/src/irb/output-method.rd")
(find-rurima "= class IRB::StdioOutputMethod < IRB::OutputMethod" "refm/api/src/irb/output-method.rd")
(find-rurima "== Instance Methods" "= class IRB::StdioOutputMethod < IRB::OutputMethod" "refm/api/src/irb/output-method.rd")
(find-rurima "--- print(*objs) -> nil" "== Instance Methods" "= class IRB::StdioOutputMethod < IRB::OutputMethod" "refm/api/src/irb/output-method.rd")
(find-rurima "= class IRB::Context" "refm/api/src/irb/context.rd")
(find-rurima "== Instance Methods" "= class IRB::Context" "refm/api/src/irb/context.rd")
(find-rurima "--- eval_history=(n)" "== Instance Methods" "= class IRB::Context" "refm/api/src/irb/context.rd")
(find-rurima "--- back_trace_limit" "== Instance Methods" "= class IRB::Context" "refm/api/src/irb/context.rd")
(find-rurima "--- debug_level=(n)" "== Instance Methods" "= class IRB::Context" "refm/api/src/irb/context.rd")
(find-rurima "--- ignore_eof" "== Instance Methods" "= class IRB::Context" "refm/api/src/irb/context.rd")
(find-rurima "--- ignore_eof=(bool)" "== Instance Methods" "= class IRB::Context" "refm/api/src/irb/context.rd")
(find-rurima "--- ignore_sigint" "== Instance Methods" "= class IRB::Context" "refm/api/src/irb/context.rd")
(find-rurima "--- ignore_sigint=(bool)" "== Instance Methods" "= class IRB::Context" "refm/api/src/irb/context.rd")
(find-rurima "--- inf_ruby_mode" "== Instance Methods" "= class IRB::Context" "refm/api/src/irb/context.rd")
(find-rurima "--- inf_ruby_mode=(bool)" "== Instance Methods" "= class IRB::Context" "refm/api/src/irb/context.rd")
(find-rurima "--- inspect_mode=(val)" "== Instance Methods" "= class IRB::Context" "refm/api/src/irb/context.rd")
(find-rurima "--- math_mode" "== Instance Methods" "= class IRB::Context" "refm/api/src/irb/context.rd")
(find-rurima "--- use_loader" "== Instance Methods" "= class IRB::Context" "refm/api/src/irb/context.rd")
(find-rurima "--- use_loader=(bool)" "== Instance Methods" "= class IRB::Context" "refm/api/src/irb/context.rd")
(find-rurima "--- prompt_c" "== Instance Methods" "= class IRB::Context" "refm/api/src/irb/context.rd")
(find-rurima "--- prompt_i" "== Instance Methods" "= class IRB::Context" "refm/api/src/irb/context.rd")
(find-rurima "--- prompt_s" "== Instance Methods" "= class IRB::Context" "refm/api/src/irb/context.rd")
(find-rurima "--- rc" "== Instance Methods" "= class IRB::Context" "refm/api/src/irb/context.rd")
(find-rurima "--- use_prompt" "== Instance Methods" "= class IRB::Context" "refm/api/src/irb/context.rd")
(find-rurima "--- use_prompt=(bool)" "== Instance Methods" "= class IRB::Context" "refm/api/src/irb/context.rd")
(find-rurima "--- use_readline=(val)" "== Instance Methods" "= class IRB::Context" "refm/api/src/irb/context.rd")
(find-rurima "= object IRB::MagickFile" "refm/api/src/irb/magic-file.rd")
(find-rurima "--- ENCODING_SPEC_RE -> %r\"coding\\s*[=:]\\s*([[:alnum:]\\-_]+)\"" "= object IRB::MagickFile" "refm/api/src/irb/magic-file.rd")
(find-rurima "--- open(path) { |io| ... }" "= object IRB::MagickFile" "refm/api/src/irb/magic-file.rd")
(find-rurima "= class IRB::ExtendCommand::Help < IRB::ExtendCommand::Nop" "refm/api/src/irb/cmd/help.rd")
(find-rurima "== Instance Methods" "= class IRB::ExtendCommand::Help < IRB::ExtendCommand::Nop" "refm/api/src/irb/cmd/help.rd")
(find-rurima "--- execute(*names) -> nil" "== Instance Methods" "= class IRB::ExtendCommand::Help < IRB::ExtendCommand::Nop" "refm/api/src/irb/cmd/help.rd")
(find-rurima "= class IRB::ExtendCommand::Workspaces < IRB::ExtendCommand::Nop" "refm/api/src/irb/cmd/pushws.rd")
(find-rurima "== Instance Methods" "= class IRB::ExtendCommand::Workspaces < IRB::ExtendCommand::Nop" "refm/api/src/irb/cmd/pushws.rd")
(find-rurima "--- execute(*obj) -> [IRB::WorkSpace]" "== Instance Methods" "= class IRB::ExtendCommand::Workspaces < IRB::ExtendCommand::Nop" "refm/api/src/irb/cmd/pushws.rd")
(find-rurima "= class IRB::ExtendCommand::PushWorkspace < IRB::ExtendCommand::Nop" "refm/api/src/irb/cmd/pushws.rd")
(find-rurima "== Instance Methods" "= class IRB::ExtendCommand::PushWorkspace < IRB::ExtendCommand::Nop" "refm/api/src/irb/cmd/pushws.rd")
(find-rurima "--- execute(*obj) -> [IRB::WorkSpace]" "== Instance Methods" "= class IRB::ExtendCommand::PushWorkspace < IRB::ExtendCommand::Nop" "refm/api/src/irb/cmd/pushws.rd")
(find-rurima "= class IRB::ExtendCommand::PopWorkspace < IRB::ExtendCommand::Nop" "refm/api/src/irb/cmd/pushws.rd")
(find-rurima "== Instance Methods" "= class IRB::ExtendCommand::PopWorkspace < IRB::ExtendCommand::Nop" "refm/api/src/irb/cmd/pushws.rd")
(find-rurima "--- execute(*obj) -> [IRB::WorkSpace]" "== Instance Methods" "= class IRB::ExtendCommand::PopWorkspace < IRB::ExtendCommand::Nop" "refm/api/src/irb/cmd/pushws.rd")
(find-rurima "= class IRB::ExtendCommand::CurrentWorkingWorkspace < IRB::ExtendCommand::Nop" "refm/api/src/irb/cmd/chws.rd")
(find-rurima "== Instance Methods" "= class IRB::ExtendCommand::CurrentWorkingWorkspace < IRB::ExtendCommand::Nop" "refm/api/src/irb/cmd/chws.rd")
(find-rurima "--- execute(*obj) -> obj" "== Instance Methods" "= class IRB::ExtendCommand::CurrentWorkingWorkspace < IRB::ExtendCommand::Nop" "refm/api/src/irb/cmd/chws.rd")
(find-rurima "= class IRB::ExtendCommand::ChangeWorkspace < IRB::ExtendCommand::Nop" "refm/api/src/irb/cmd/chws.rd")
(find-rurima "== Instance Methods" "= class IRB::ExtendCommand::ChangeWorkspace < IRB::ExtendCommand::Nop" "refm/api/src/irb/cmd/chws.rd")
(find-rurima "--- execute(*obj) -> obj" "== Instance Methods" "= class IRB::ExtendCommand::ChangeWorkspace < IRB::ExtendCommand::Nop" "refm/api/src/irb/cmd/chws.rd")
(find-rurima "= class IRB::ExtendCommand::Nop" "refm/api/src/irb/cmd/nop.rd")
(find-rurima "== Class Methods" "= class IRB::ExtendCommand::Nop" "refm/api/src/irb/cmd/nop.rd")
(find-rurima "--- execute(conf, *opts) -> ()" "== Class Methods" "= class IRB::ExtendCommand::Nop" "refm/api/src/irb/cmd/nop.rd")
(find-rurima "--- new(conf) -> IRB::ExtendCommand::Nop" "== Class Methods" "= class IRB::ExtendCommand::Nop" "refm/api/src/irb/cmd/nop.rd")
(find-rurima "== Instance Methods" "= class IRB::ExtendCommand::Nop" "refm/api/src/irb/cmd/nop.rd")
(find-rurima "--- irb_context -> IRB::Context" "== Instance Methods" "= class IRB::ExtendCommand::Nop" "refm/api/src/irb/cmd/nop.rd")
(find-rurima "--- execute(*opts) -> ()" "== Instance Methods" "= class IRB::ExtendCommand::Nop" "refm/api/src/irb/cmd/nop.rd")
(find-rurima "= class IRB::ExtendCommand::Load < IRB::ExtendCommand::Nop" "refm/api/src/irb/cmd/load.rd")
(find-rurima "== Instance Methods" "= class IRB::ExtendCommand::Load < IRB::ExtendCommand::Nop" "refm/api/src/irb/cmd/load.rd")
(find-rurima "--- execute(file_name, priv = nil) -> nil" "== Instance Methods" "= class IRB::ExtendCommand::Load < IRB::ExtendCommand::Nop" "refm/api/src/irb/cmd/load.rd")
(find-rurima "= class IRB::ExtendCommand::Require < IRB::ExtendCommand::Nop" "refm/api/src/irb/cmd/load.rd")
(find-rurima "== Instance Methods" "= class IRB::ExtendCommand::Require < IRB::ExtendCommand::Nop" "refm/api/src/irb/cmd/load.rd")
(find-rurima "--- execute(file_name) -> bool" "== Instance Methods" "= class IRB::ExtendCommand::Require < IRB::ExtendCommand::Nop" "refm/api/src/irb/cmd/load.rd")
(find-rurima "= class IRB::ExtendCommand::Source < IRB::ExtendCommand::Nop" "refm/api/src/irb/cmd/load.rd")
(find-rurima "== Instance Methods" "= class IRB::ExtendCommand::Source < IRB::ExtendCommand::Nop" "refm/api/src/irb/cmd/load.rd")
(find-rurima "--- execute(file_name) -> nil" "== Instance Methods" "= class IRB::ExtendCommand::Source < IRB::ExtendCommand::Nop" "refm/api/src/irb/cmd/load.rd")
(find-rurima "= class IRB::ExtendCommand::IrbCommand < IRB::ExtendCommand::Nop" "refm/api/src/irb/cmd/subirb.rd")
(find-rurima "== Instance Methods" "= class IRB::ExtendCommand::IrbCommand < IRB::ExtendCommand::Nop" "refm/api/src/irb/cmd/subirb.rd")
(find-rurima "--- execute(*obj) -> IRB::Irb" "== Instance Methods" "= class IRB::ExtendCommand::IrbCommand < IRB::ExtendCommand::Nop" "refm/api/src/irb/cmd/subirb.rd")
(find-rurima "= class IRB::ExtendCommand::Jobs < IRB::ExtendCommand::Nop" "refm/api/src/irb/cmd/subirb.rd")
(find-rurima "== Instance Methods" "= class IRB::ExtendCommand::Jobs < IRB::ExtendCommand::Nop" "refm/api/src/irb/cmd/subirb.rd")
(find-rurima "--- execute -> IRB::JobManager" "== Instance Methods" "= class IRB::ExtendCommand::Jobs < IRB::ExtendCommand::Nop" "refm/api/src/irb/cmd/subirb.rd")
(find-rurima "= class IRB::ExtendCommand::Foreground < IRB::ExtendCommand::Nop" "refm/api/src/irb/cmd/subirb.rd")
(find-rurima "== Instance Methods" "= class IRB::ExtendCommand::Foreground < IRB::ExtendCommand::Nop" "refm/api/src/irb/cmd/subirb.rd")
(find-rurima "--- execute(*obj) -> IRB::Irb" "== Instance Methods" "= class IRB::ExtendCommand::Foreground < IRB::ExtendCommand::Nop" "refm/api/src/irb/cmd/subirb.rd")
(find-rurima "= class IRB::ExtendCommand::Kill < IRB::ExtendCommand::Nop" "refm/api/src/irb/cmd/subirb.rd")
(find-rurima "== Instance Methods" "= class IRB::ExtendCommand::Kill < IRB::ExtendCommand::Nop" "refm/api/src/irb/cmd/subirb.rd")
(find-rurima "--- execute(*obj) -> object" "== Instance Methods" "= class IRB::ExtendCommand::Kill < IRB::ExtendCommand::Nop" "refm/api/src/irb/cmd/subirb.rd")
(find-rurima "=== 使い方" "refm/api/src/irb/completion.rd")
(find-rurima "= module IRB::Completor" "refm/api/src/irb/completion.rd")
(find-rurima "= reopen IRB::Context" "refm/api/src/irb/ext/math-mode.rd")
(find-rurima "== Instance Methods" "= reopen IRB::Context" "refm/api/src/irb/ext/math-mode.rd")
(find-rurima "--- math_mode -> bool" "== Instance Methods" "= reopen IRB::Context" "refm/api/src/irb/ext/math-mode.rd")
(find-rurima "--- math?     -> bool" "== Instance Methods" "= reopen IRB::Context" "refm/api/src/irb/ext/math-mode.rd")
(find-rurima "--- math_mode=(opt)" "== Instance Methods" "= reopen IRB::Context" "refm/api/src/irb/ext/math-mode.rd")
(find-rurima "--- inspect? -> bool" "== Instance Methods" "= reopen IRB::Context" "refm/api/src/irb/ext/math-mode.rd")
(find-rurima "= reopen IRB::Context" "refm/api/src/irb/ext/save-history.rd")
(find-rurima "== Instance Methods" "= reopen IRB::Context" "refm/api/src/irb/ext/save-history.rd")
(find-rurima "--- init_save_history -> ()" "== Instance Methods" "= reopen IRB::Context" "refm/api/src/irb/ext/save-history.rd")
(find-rurima "--- save_history -> Integer | nil" "== Instance Methods" "= reopen IRB::Context" "refm/api/src/irb/ext/save-history.rd")
(find-rurima "--- save_history=(val)" "== Instance Methods" "= reopen IRB::Context" "refm/api/src/irb/ext/save-history.rd")
(find-rurima "--- history_file -> String | nil" "== Instance Methods" "= reopen IRB::Context" "refm/api/src/irb/ext/save-history.rd")
(find-rurima "--- history_file=(hist)" "== Instance Methods" "= reopen IRB::Context" "refm/api/src/irb/ext/save-history.rd")
(find-rurima "= module IRB::HistorySavingAbility" "refm/api/src/irb/ext/save-history.rd")
(find-rurima "== Class Methods" "= module IRB::HistorySavingAbility" "refm/api/src/irb/ext/save-history.rd")
(find-rurima "--- extended(obj) -> object" "== Class Methods" "= module IRB::HistorySavingAbility" "refm/api/src/irb/ext/save-history.rd")
(find-rurima "== Instance Methods" "= module IRB::HistorySavingAbility" "refm/api/src/irb/ext/save-history.rd")
(find-rurima "--- load_history -> ()" "== Instance Methods" "= module IRB::HistorySavingAbility" "refm/api/src/irb/ext/save-history.rd")
(find-rurima "--- save_history -> ()" "== Instance Methods" "= module IRB::HistorySavingAbility" "refm/api/src/irb/ext/save-history.rd")
(find-rurima "= class JSON::State < Object" "refm/api/src/json/JSON__State")
(find-rurima "== Singleton Methods" "= class JSON::State < Object" "refm/api/src/json/JSON__State")
(find-rurima "--- new(options = {}) -> JSON::State" "== Singleton Methods" "= class JSON::State < Object" "refm/api/src/json/JSON__State")
(find-rurima "--- from_state(options) -> JSON::State" "== Singleton Methods" "= class JSON::State < Object" "refm/api/src/json/JSON__State")
(find-rurima "== Public Instance Methods" "= class JSON::State < Object" "refm/api/src/json/JSON__State")
(find-rurima "--- allow_nan? -> bool" "== Public Instance Methods" "= class JSON::State < Object" "refm/api/src/json/JSON__State")
(find-rurima "--- array_nl -> String" "== Public Instance Methods" "= class JSON::State < Object" "refm/api/src/json/JSON__State")
(find-rurima "--- array_nl=(str)" "== Public Instance Methods" "= class JSON::State < Object" "refm/api/src/json/JSON__State")
(find-rurima "--- check_circular? -> bool" "== Public Instance Methods" "= class JSON::State < Object" "refm/api/src/json/JSON__State")
(find-rurima "--- configure(options = {}) -> self" "== Public Instance Methods" "= class JSON::State < Object" "refm/api/src/json/JSON__State")
(find-rurima "--- forget(object) -> object" "== Public Instance Methods" "= class JSON::State < Object" "refm/api/src/json/JSON__State")
(find-rurima "--- indent -> String" "== Public Instance Methods" "= class JSON::State < Object" "refm/api/src/json/JSON__State")
(find-rurima "--- indent=(string)" "== Public Instance Methods" "= class JSON::State < Object" "refm/api/src/json/JSON__State")
(find-rurima "--- max_nesting -> Integer" "== Public Instance Methods" "= class JSON::State < Object" "refm/api/src/json/JSON__State")
(find-rurima "--- max_nesting=(depth)" "== Public Instance Methods" "= class JSON::State < Object" "refm/api/src/json/JSON__State")
(find-rurima "--- object_nl -> String" "== Public Instance Methods" "= class JSON::State < Object" "refm/api/src/json/JSON__State")
(find-rurima "--- object_nl=(string)" "== Public Instance Methods" "= class JSON::State < Object" "refm/api/src/json/JSON__State")
(find-rurima "--- remember(object) -> true" "== Public Instance Methods" "= class JSON::State < Object" "refm/api/src/json/JSON__State")
(find-rurima "--- seen?(object) -> bool" "== Public Instance Methods" "= class JSON::State < Object" "refm/api/src/json/JSON__State")
(find-rurima "--- space -> String" "== Public Instance Methods" "= class JSON::State < Object" "refm/api/src/json/JSON__State")
(find-rurima "--- space=(string)" "== Public Instance Methods" "= class JSON::State < Object" "refm/api/src/json/JSON__State")
(find-rurima "--- space_before -> String" "== Public Instance Methods" "= class JSON::State < Object" "refm/api/src/json/JSON__State")
(find-rurima "--- space_before=(string)" "== Public Instance Methods" "= class JSON::State < Object" "refm/api/src/json/JSON__State")
(find-rurima "--- to_h -> Hash" "== Public Instance Methods" "= class JSON::State < Object" "refm/api/src/json/JSON__State")
(find-rurima "= reopen Time" "refm/api/src/json/add/core.rd")
(find-rurima "== Singleton Methods" "= reopen Time" "refm/api/src/json/add/core.rd")
(find-rurima "--- json_create(hash) -> Time" "== Singleton Methods" "= reopen Time" "refm/api/src/json/add/core.rd")
(find-rurima "== Public Instance Methods" "= reopen Time" "refm/api/src/json/add/core.rd")
(find-rurima "--- to_json(*args) -> String" "== Public Instance Methods" "= reopen Time" "refm/api/src/json/add/core.rd")
(find-rurima "= reopen Date" "refm/api/src/json/add/core.rd")
(find-rurima "== Singleton Methods" "= reopen Date" "refm/api/src/json/add/core.rd")
(find-rurima "--- json_create(hash) -> Date" "== Singleton Methods" "= reopen Date" "refm/api/src/json/add/core.rd")
(find-rurima "== Public Instance Methods" "= reopen Date" "refm/api/src/json/add/core.rd")
(find-rurima "--- to_json(*args) -> String" "== Public Instance Methods" "= reopen Date" "refm/api/src/json/add/core.rd")
(find-rurima "= reopen DateTime" "refm/api/src/json/add/core.rd")
(find-rurima "== Singleton Methods" "= reopen DateTime" "refm/api/src/json/add/core.rd")
(find-rurima "--- json_create(hash) -> DateTime" "== Singleton Methods" "= reopen DateTime" "refm/api/src/json/add/core.rd")
(find-rurima "== Public Instance Methods" "= reopen DateTime" "refm/api/src/json/add/core.rd")
(find-rurima "--- to_json(*args) -> String" "== Public Instance Methods" "= reopen DateTime" "refm/api/src/json/add/core.rd")
(find-rurima "= reopen Range" "refm/api/src/json/add/core.rd")
(find-rurima "== Singleton Methods" "= reopen Range" "refm/api/src/json/add/core.rd")
(find-rurima "--- json_create(hash) -> Range" "== Singleton Methods" "= reopen Range" "refm/api/src/json/add/core.rd")
(find-rurima "== Public Instance Methods" "= reopen Range" "refm/api/src/json/add/core.rd")
(find-rurima "--- to_json(*args) -> String" "== Public Instance Methods" "= reopen Range" "refm/api/src/json/add/core.rd")
(find-rurima "= reopen Struct" "refm/api/src/json/add/core.rd")
(find-rurima "== Singleton Methods" "= reopen Struct" "refm/api/src/json/add/core.rd")
(find-rurima "--- json_create(hash) -> Struct" "== Singleton Methods" "= reopen Struct" "refm/api/src/json/add/core.rd")
(find-rurima "== Public Instance Methods" "= reopen Struct" "refm/api/src/json/add/core.rd")
(find-rurima "--- to_json(*args) -> String" "== Public Instance Methods" "= reopen Struct" "refm/api/src/json/add/core.rd")
(find-rurima "= reopen Exception" "refm/api/src/json/add/core.rd")
(find-rurima "== Singleton Methods" "= reopen Exception" "refm/api/src/json/add/core.rd")
(find-rurima "--- json_create(hash) -> Exception" "== Singleton Methods" "= reopen Exception" "refm/api/src/json/add/core.rd")
(find-rurima "== Public Instance Methods" "= reopen Exception" "refm/api/src/json/add/core.rd")
(find-rurima "--- to_json(*args) -> String" "== Public Instance Methods" "= reopen Exception" "refm/api/src/json/add/core.rd")
(find-rurima "= reopen Regexp" "refm/api/src/json/add/core.rd")
(find-rurima "== Singleton Methods" "= reopen Regexp" "refm/api/src/json/add/core.rd")
(find-rurima "--- json_create(hash) -> Regexp" "== Singleton Methods" "= reopen Regexp" "refm/api/src/json/add/core.rd")
(find-rurima "== Public Instance Methods" "= reopen Regexp" "refm/api/src/json/add/core.rd")
(find-rurima "--- to_json(*args) -> String" "== Public Instance Methods" "= reopen Regexp" "refm/api/src/json/add/core.rd")
(find-rurima "= module JSON::Editor" "refm/api/src/json/editor.rd")
(find-rurima "= module JSON" "refm/api/src/json/JSON")
(find-rurima "== Singleton Methods" "= module JSON" "refm/api/src/json/JSON")
(find-rurima "--- [](object, options) -> object" "== Singleton Methods" "= module JSON" "refm/api/src/json/JSON")
(find-rurima "--- create_id -> String" "== Singleton Methods" "= module JSON" "refm/api/src/json/JSON")
(find-rurima "--- create_id=(identifier)" "== Singleton Methods" "= module JSON" "refm/api/src/json/JSON")
(find-rurima "--- generator -> JSON::Ext::Generator" "== Singleton Methods" "= module JSON" "refm/api/src/json/JSON")
(find-rurima "--- parser -> JSON::Ext::Parser" "== Singleton Methods" "= module JSON" "refm/api/src/json/JSON")
(find-rurima "--- state -> JSON::Ext::Generator::State" "== Singleton Methods" "= module JSON" "refm/api/src/json/JSON")
(find-rurima "== Module Functions" "= module JSON" "refm/api/src/json/JSON")
(find-rurima "--- dump(object, io = nil, limit = nil) -> String | IO" "== Module Functions" "= module JSON" "refm/api/src/json/JSON")
(find-rurima "--- fast_generate(object) -> String" "== Module Functions" "= module JSON" "refm/api/src/json/JSON")
(find-rurima "--- fast_unparse(object) -> String" "== Module Functions" "= module JSON" "refm/api/src/json/JSON")
(find-rurima "--- generate(object, state = nil) -> String" "== Module Functions" "= module JSON" "refm/api/src/json/JSON")
(find-rurima "--- unparse(object, state = nil) -> String" "== Module Functions" "= module JSON" "refm/api/src/json/JSON")
(find-rurima "--- load(source, proc = nil) -> object" "== Module Functions" "= module JSON" "refm/api/src/json/JSON")
(find-rurima "--- restore(source, proc = nil) -> object" "== Module Functions" "= module JSON" "refm/api/src/json/JSON")
(find-rurima "--- parse(source, options = {}) -> object" "== Module Functions" "= module JSON" "refm/api/src/json/JSON")
(find-rurima "--- parse!(source, options = {}) -> object" "== Module Functions" "= module JSON" "refm/api/src/json/JSON")
(find-rurima "--- pretty_generate(object, options = nil) -> String" "== Module Functions" "= module JSON" "refm/api/src/json/JSON")
(find-rurima "--- pretty_unparse(object, options = nil) -> String" "== Module Functions" "= module JSON" "refm/api/src/json/JSON")
(find-rurima "== Constants" "= module JSON" "refm/api/src/json/JSON")
(find-rurima "--- VARIANT_BINARY -> bool" "== Constants" "= module JSON" "refm/api/src/json/JSON")
(find-rurima "--- JSON::VERSION -> String" "== Constants" "= module JSON" "refm/api/src/json/JSON")
(find-rurima "--- Infinity -> Float" "== Constants" "= module JSON" "refm/api/src/json/JSON")
(find-rurima "--- MinusInfinity -> Float" "== Constants" "= module JSON" "refm/api/src/json/JSON")
(find-rurima "--- NaN -> Float" "== Constants" "= module JSON" "refm/api/src/json/JSON")
(find-rurima "--- JSON_LOADED -> bool" "== Constants" "= module JSON" "refm/api/src/json/JSON")
(find-rurima "= class JSON::JSONError < StandardError" "refm/api/src/json/JSON")
(find-rurima "= class JSON::ParserError < JSON::JSONError" "refm/api/src/json/JSON")
(find-rurima "= class JSON::GeneratorError < JSON::JSONError" "refm/api/src/json/JSON")
(find-rurima "= class JSON::CircularDatastructure < JSON::GeneratorError" "refm/api/src/json/JSON")
(find-rurima "= class JSON::MissingUnicodeSupport < JSON::JSONError" "refm/api/src/json/JSON")
(find-rurima "= class JSON::NestingError < JSON::ParserError" "refm/api/src/json/JSON")
(find-rurima "= module JSON::Generator::GeneratorMethods::Array" "refm/api/src/json/JSON__Generator__GeneratorMethods")
(find-rurima "== Public Instance Methods" "= module JSON::Generator::GeneratorMethods::Array" "refm/api/src/json/JSON__Generator__GeneratorMethods")
(find-rurima "--- to_json(state = nil, depth = 0) -> String" "== Public Instance Methods" "= module JSON::Generator::GeneratorMethods::Array" "refm/api/src/json/JSON__Generator__GeneratorMethods")
(find-rurima "= module JSON::Generator::GeneratorMethods::FalseClass" "refm/api/src/json/JSON__Generator__GeneratorMethods")
(find-rurima "== Public Instance Methods" "= module JSON::Generator::GeneratorMethods::FalseClass" "refm/api/src/json/JSON__Generator__GeneratorMethods")
(find-rurima "--- to_json -> String" "== Public Instance Methods" "= module JSON::Generator::GeneratorMethods::FalseClass" "refm/api/src/json/JSON__Generator__GeneratorMethods")
(find-rurima "= module JSON::Generator::GeneratorMethods::Float" "refm/api/src/json/JSON__Generator__GeneratorMethods")
(find-rurima "== Public Instance Methods" "= module JSON::Generator::GeneratorMethods::Float" "refm/api/src/json/JSON__Generator__GeneratorMethods")
(find-rurima "--- to_json -> String" "== Public Instance Methods" "= module JSON::Generator::GeneratorMethods::Float" "refm/api/src/json/JSON__Generator__GeneratorMethods")
(find-rurima "= module JSON::Generator::GeneratorMethods::Hash" "refm/api/src/json/JSON__Generator__GeneratorMethods")
(find-rurima "== Public Instance Methods" "= module JSON::Generator::GeneratorMethods::Hash" "refm/api/src/json/JSON__Generator__GeneratorMethods")
(find-rurima "--- to_json(state = nil, depth = 0) -> String" "== Public Instance Methods" "= module JSON::Generator::GeneratorMethods::Hash" "refm/api/src/json/JSON__Generator__GeneratorMethods")
(find-rurima "= module JSON::Generator::GeneratorMethods::Integer" "refm/api/src/json/JSON__Generator__GeneratorMethods")
(find-rurima "== Public Instance Methods" "= module JSON::Generator::GeneratorMethods::Integer" "refm/api/src/json/JSON__Generator__GeneratorMethods")
(find-rurima "--- to_json -> String" "== Public Instance Methods" "= module JSON::Generator::GeneratorMethods::Integer" "refm/api/src/json/JSON__Generator__GeneratorMethods")
(find-rurima "= module JSON::Generator::GeneratorMethods::NilClass" "refm/api/src/json/JSON__Generator__GeneratorMethods")
(find-rurima "== Public Instance Methods" "= module JSON::Generator::GeneratorMethods::NilClass" "refm/api/src/json/JSON__Generator__GeneratorMethods")
(find-rurima "--- to_json -> String" "== Public Instance Methods" "= module JSON::Generator::GeneratorMethods::NilClass" "refm/api/src/json/JSON__Generator__GeneratorMethods")
(find-rurima "= module JSON::Generator::GeneratorMethods::Object" "refm/api/src/json/JSON__Generator__GeneratorMethods")
(find-rurima "== Public Instance Methods" "= module JSON::Generator::GeneratorMethods::Object" "refm/api/src/json/JSON__Generator__GeneratorMethods")
(find-rurima "--- to_json -> String" "== Public Instance Methods" "= module JSON::Generator::GeneratorMethods::Object" "refm/api/src/json/JSON__Generator__GeneratorMethods")
(find-rurima "= module JSON::Generator::GeneratorMethods::String" "refm/api/src/json/JSON__Generator__GeneratorMethods")
(find-rurima "== Public Instance Methods" "= module JSON::Generator::GeneratorMethods::String" "refm/api/src/json/JSON__Generator__GeneratorMethods")
(find-rurima "--- to_json -> String" "== Public Instance Methods" "= module JSON::Generator::GeneratorMethods::String" "refm/api/src/json/JSON__Generator__GeneratorMethods")
(find-rurima "--- to_json_raw -> String" "== Public Instance Methods" "= module JSON::Generator::GeneratorMethods::String" "refm/api/src/json/JSON__Generator__GeneratorMethods")
(find-rurima "--- to_json_raw_object -> Hash" "== Public Instance Methods" "= module JSON::Generator::GeneratorMethods::String" "refm/api/src/json/JSON__Generator__GeneratorMethods")
(find-rurima "= module JSON::Generator::GeneratorMethods::String::Extend" "refm/api/src/json/JSON__Generator__GeneratorMethods")
(find-rurima "== Class Methods" "= module JSON::Generator::GeneratorMethods::String::Extend" "refm/api/src/json/JSON__Generator__GeneratorMethods")
(find-rurima "--- json_create(hash) -> String" "== Class Methods" "= module JSON::Generator::GeneratorMethods::String::Extend" "refm/api/src/json/JSON__Generator__GeneratorMethods")
(find-rurima "= module JSON::Generator::GeneratorMethods::TrueClass" "refm/api/src/json/JSON__Generator__GeneratorMethods")
(find-rurima "== Public Instance Methods" "= module JSON::Generator::GeneratorMethods::TrueClass" "refm/api/src/json/JSON__Generator__GeneratorMethods")
(find-rurima "--- to_json -> String" "== Public Instance Methods" "= module JSON::Generator::GeneratorMethods::TrueClass" "refm/api/src/json/JSON__Generator__GeneratorMethods")
(find-rurima "= class JSON::Parser < Object" "refm/api/src/json/JSON__Parser")
(find-rurima "== Singleton Methods" "= class JSON::Parser < Object" "refm/api/src/json/JSON__Parser")
(find-rurima "--- new(source, options => {})" "== Singleton Methods" "= class JSON::Parser < Object" "refm/api/src/json/JSON__Parser")
(find-rurima "== Public Instance Methods" "= class JSON::Parser < Object" "refm/api/src/json/JSON__Parser")
(find-rurima "--- parse -> object" "== Public Instance Methods" "= class JSON::Parser < Object" "refm/api/src/json/JSON__Parser")
(find-rurima "--- source -> String" "== Public Instance Methods" "= class JSON::Parser < Object" "refm/api/src/json/JSON__Parser")
(find-rurima "= class RDoc::RDoc" "refm/api/src/rdoc/RDoc__RDoc")
(find-rurima "== Instance Methods" "= class RDoc::RDoc" "refm/api/src/rdoc/RDoc__RDoc")
(find-rurima "--- document(argv) -> nil" "== Instance Methods" "= class RDoc::RDoc" "refm/api/src/rdoc/RDoc__RDoc")
(find-rurima "= module RDoc::TokenStream" "refm/api/src/rdoc/tokenstream.rd")
(find-rurima "= module TokenStream" "refm/api/src/rdoc/tokenstream.rd")
(find-rurima "= class RDoc::Stats" "refm/api/src/rdoc/RDoc__Stats")
(find-rurima "== Class Methods" "= class RDoc::Stats" "refm/api/src/rdoc/RDoc__Stats")
(find-rurima "--- new -> RDoc::Stats" "== Class Methods" "= class RDoc::Stats" "refm/api/src/rdoc/RDoc__Stats")
(find-rurima "== Instance Methods" "= class RDoc::Stats" "refm/api/src/rdoc/RDoc__Stats")
(find-rurima "--- print -> ()" "== Instance Methods" "= class RDoc::Stats" "refm/api/src/rdoc/RDoc__Stats")
(find-rurima "--- num_files -> Integer" "== Instance Methods" "= class RDoc::Stats" "refm/api/src/rdoc/RDoc__Stats")
(find-rurima "--- num_files=(val)" "== Instance Methods" "= class RDoc::Stats" "refm/api/src/rdoc/RDoc__Stats")
(find-rurima "--- num_classes -> Integer" "== Instance Methods" "= class RDoc::Stats" "refm/api/src/rdoc/RDoc__Stats")
(find-rurima "--- num_classes=(val)" "== Instance Methods" "= class RDoc::Stats" "refm/api/src/rdoc/RDoc__Stats")
(find-rurima "--- num_modules -> Integer" "== Instance Methods" "= class RDoc::Stats" "refm/api/src/rdoc/RDoc__Stats")
(find-rurima "--- num_modules=(val)" "== Instance Methods" "= class RDoc::Stats" "refm/api/src/rdoc/RDoc__Stats")
(find-rurima "--- num_methods -> Integer" "== Instance Methods" "= class RDoc::Stats" "refm/api/src/rdoc/RDoc__Stats")
(find-rurima "--- num_methods=(val)" "== Instance Methods" "= class RDoc::Stats" "refm/api/src/rdoc/RDoc__Stats")
(find-rurima "= reopen RDoc" "refm/api/src/rdoc/RDoc__KNOWN_CLASSES")
(find-rurima "== Constants" "= reopen RDoc" "refm/api/src/rdoc/RDoc__KNOWN_CLASSES")
(find-rurima "--- KNOWN_CLASSES -> {String => String}" "== Constants" "= reopen RDoc" "refm/api/src/rdoc/RDoc__KNOWN_CLASSES")
(find-rurima "= class RDoc::CodeObject" "refm/api/src/rdoc/RDoc__CodeObject")
(find-rurima "== Class Methods" "= class RDoc::CodeObject" "refm/api/src/rdoc/RDoc__CodeObject")
(find-rurima "--- new -> RDoc::CodeObject" "== Class Methods" "= class RDoc::CodeObject" "refm/api/src/rdoc/RDoc__CodeObject")
(find-rurima "== Instance Methods" "= class RDoc::CodeObject" "refm/api/src/rdoc/RDoc__CodeObject")
(find-rurima "--- comment -> String" "== Instance Methods" "= class RDoc::CodeObject" "refm/api/src/rdoc/RDoc__CodeObject")
(find-rurima "--- comment=(comment)" "== Instance Methods" "= class RDoc::CodeObject" "refm/api/src/rdoc/RDoc__CodeObject")
(find-rurima "--- document_children -> bool" "== Instance Methods" "= class RDoc::CodeObject" "refm/api/src/rdoc/RDoc__CodeObject")
(find-rurima "--- document_children=(val)" "== Instance Methods" "= class RDoc::CodeObject" "refm/api/src/rdoc/RDoc__CodeObject")
(find-rurima "--- document_self -> bool" "== Instance Methods" "= class RDoc::CodeObject" "refm/api/src/rdoc/RDoc__CodeObject")
(find-rurima "--- document_self=(val)" "== Instance Methods" "= class RDoc::CodeObject" "refm/api/src/rdoc/RDoc__CodeObject")
(find-rurima "--- remove_classes_and_modules -> ()" "== Instance Methods" "= class RDoc::CodeObject" "refm/api/src/rdoc/RDoc__CodeObject")
(find-rurima "--- remove_methods_etc -> ()" "== Instance Methods" "= class RDoc::CodeObject" "refm/api/src/rdoc/RDoc__CodeObject")
(find-rurima "--- start_doc -> ()" "== Instance Methods" "= class RDoc::CodeObject" "refm/api/src/rdoc/RDoc__CodeObject")
(find-rurima "--- stop_doc -> ()" "== Instance Methods" "= class RDoc::CodeObject" "refm/api/src/rdoc/RDoc__CodeObject")
(find-rurima "--- parent -> RDoc::CodeObject" "== Instance Methods" "= class RDoc::CodeObject" "refm/api/src/rdoc/RDoc__CodeObject")
(find-rurima "--- parent=(val)" "== Instance Methods" "= class RDoc::CodeObject" "refm/api/src/rdoc/RDoc__CodeObject")
(find-rurima "--- section -> RDoc::Context::Section" "== Instance Methods" "= class RDoc::CodeObject" "refm/api/src/rdoc/RDoc__CodeObject")
(find-rurima "--- section=(val)" "== Instance Methods" "= class RDoc::CodeObject" "refm/api/src/rdoc/RDoc__CodeObject")
(find-rurima "--- parent_file_name -> String" "== Instance Methods" "= class RDoc::CodeObject" "refm/api/src/rdoc/RDoc__CodeObject")
(find-rurima "--- parent_name -> String" "== Instance Methods" "= class RDoc::CodeObject" "refm/api/src/rdoc/RDoc__CodeObject")
(find-rurima "--- documented? -> bool" "== Instance Methods" "= class RDoc::CodeObject" "refm/api/src/rdoc/RDoc__CodeObject")
(find-rurima "--- metadata -> Hash" "== Instance Methods" "= class RDoc::CodeObject" "refm/api/src/rdoc/RDoc__CodeObject")
(find-rurima "= class RDoc::Require < RDoc::CodeObject" "refm/api/src/rdoc/RDoc__Require")
(find-rurima "= class RDoc::Diagram" "refm/api/src/rdoc/diagram.rd")
(find-rurima "== Constants" "= class RDoc::Diagram" "refm/api/src/rdoc/diagram.rd")
(find-rurima "--- FONT -> \"Arial\"" "== Constants" "= class RDoc::Diagram" "refm/api/src/rdoc/diagram.rd")
(find-rurima "--- DOT_PATH -> \"dot\"" "== Constants" "= class RDoc::Diagram" "refm/api/src/rdoc/diagram.rd")
(find-rurima "== Class Methods" "= class RDoc::Diagram" "refm/api/src/rdoc/diagram.rd")
(find-rurima "--- new(info, options) -> RDoc::Diagram" "== Class Methods" "= class RDoc::Diagram" "refm/api/src/rdoc/diagram.rd")
(find-rurima "== Instance Methods" "= class RDoc::Diagram" "refm/api/src/rdoc/diagram.rd")
(find-rurima "--- draw -> ()" "== Instance Methods" "= class RDoc::Diagram" "refm/api/src/rdoc/diagram.rd")
(find-rurima "= class RDoc::AnonClass < RDoc::ClassModule" "refm/api/src/rdoc/RDoc__AnonClass")
(find-rurima "= class RDoc::NormalModule < RDoc::ClassModule" "refm/api/src/rdoc/RDoc__NormalModule")
(find-rurima "= class RDoc::AnyMethod < RDoc::CodeObject" "refm/api/src/rdoc/RDoc__AnyMethod")
(find-rurima "= class RDoc::MetaMethod < RDoc::AnyMethod" "refm/api/src/rdoc/RDoc__MetaMethod")
(find-rurima "= class RDoc::Parser::C < RDoc::Parser" "refm/api/src/rdoc/parsers/parse_c.rd")
(find-rurima "= class RDoc::C_Parser" "refm/api/src/rdoc/parsers/parse_c.rd")
(find-rurima "== Class Methods" "= class RDoc::C_Parser" "refm/api/src/rdoc/parsers/parse_c.rd")
(find-rurima "--- new(top_level, file_name, body, options, stats) -> RDoc::Parser::C" "== Class Methods" "= class RDoc::C_Parser" "refm/api/src/rdoc/parsers/parse_c.rd")
(find-rurima "--- new(top_level, file_name, body, options, stats) -> RDoc::C_Parser" "== Class Methods" "= class RDoc::C_Parser" "refm/api/src/rdoc/parsers/parse_c.rd")
(find-rurima "== Instance Methods" "= class RDoc::C_Parser" "refm/api/src/rdoc/parsers/parse_c.rd")
(find-rurima "--- progress -> IO" "== Instance Methods" "= class RDoc::C_Parser" "refm/api/src/rdoc/parsers/parse_c.rd")
(find-rurima "--- progress=(val)" "== Instance Methods" "= class RDoc::C_Parser" "refm/api/src/rdoc/parsers/parse_c.rd")
(find-rurima "--- scan -> RDoc::TopLevel" "== Instance Methods" "= class RDoc::C_Parser" "refm/api/src/rdoc/parsers/parse_c.rd")
(find-rurima "=== Fortran95 プログラムとの対応" "refm/api/src/rdoc/parsers/parse_f95.rd")
(find-rurima "=== 解析可能な情報" "refm/api/src/rdoc/parsers/parse_f95.rd")
(find-rurima "=== コメントのフォーマット" "refm/api/src/rdoc/parsers/parse_f95.rd")
(find-rurima "= class RDoc::Parser::F95 < RDoc::Parser" "refm/api/src/rdoc/parsers/parse_f95.rd")
(find-rurima "= class RDoc::Fortran95parser" "refm/api/src/rdoc/parsers/parse_f95.rd")
(find-rurima "== Constants" "= class RDoc::Fortran95parser" "refm/api/src/rdoc/parsers/parse_f95.rd")
(find-rurima "--- COMMENTS_ARE_UPPER -> false" "== Constants" "= class RDoc::Fortran95parser" "refm/api/src/rdoc/parsers/parse_f95.rd")
(find-rurima "--- INTERNAL_ALIAS_MES -> \"Alias for\"" "== Constants" "= class RDoc::Fortran95parser" "refm/api/src/rdoc/parsers/parse_f95.rd")
(find-rurima "--- EXTERNAL_ALIAS_MES -> \"The entity is\"" "== Constants" "= class RDoc::Fortran95parser" "refm/api/src/rdoc/parsers/parse_f95.rd")
(find-rurima "== Class Methods" "= class RDoc::Fortran95parser" "refm/api/src/rdoc/parsers/parse_f95.rd")
(find-rurima "--- new(top_level, file_name, body, options, stats) -> RDoc::Fortran95parser" "== Class Methods" "= class RDoc::Fortran95parser" "refm/api/src/rdoc/parsers/parse_f95.rd")
(find-rurima "== Instance Methods" "= class RDoc::Fortran95parser" "refm/api/src/rdoc/parsers/parse_f95.rd")
(find-rurima "--- scan -> RDoc::TopLevel" "== Instance Methods" "= class RDoc::Fortran95parser" "refm/api/src/rdoc/parsers/parse_f95.rd")
(find-rurima "= class RDoc::Parser::Simple < RDoc::Parser" "refm/api/src/rdoc/parsers/parse_simple.rd")
(find-rurima "= class RDoc::SimpleParser" "refm/api/src/rdoc/parsers/parse_simple.rd")
(find-rurima "== Class Methods" "= class RDoc::SimpleParser" "refm/api/src/rdoc/parsers/parse_simple.rd")
(find-rurima "--- new(top_level, file_name, body, options, stats) -> RDoc::Parser::Simple" "== Class Methods" "= class RDoc::SimpleParser" "refm/api/src/rdoc/parsers/parse_simple.rd")
(find-rurima "--- new(top_level, file_name, body, options, stats) -> RDoc::SimpleParser" "== Class Methods" "= class RDoc::SimpleParser" "refm/api/src/rdoc/parsers/parse_simple.rd")
(find-rurima "== Instance Methods" "= class RDoc::SimpleParser" "refm/api/src/rdoc/parsers/parse_simple.rd")
(find-rurima "--- scan -> RDoc::TopLevel" "== Instance Methods" "= class RDoc::SimpleParser" "refm/api/src/rdoc/parsers/parse_simple.rd")
(find-rurima "--- remove_private_comments(comment) -> String" "== Instance Methods" "= class RDoc::SimpleParser" "refm/api/src/rdoc/parsers/parse_simple.rd")
(find-rurima "= class RDoc::Parser" "refm/api/src/rdoc/parsers/parserfactory.rd")
(find-rurima "= module RDoc::ParserFactory" "refm/api/src/rdoc/parsers/parserfactory.rd")
(find-rurima "== class Methods" "= module RDoc::ParserFactory" "refm/api/src/rdoc/parsers/parserfactory.rd")
(find-rurima "--- can_parse(file_name) -> RDoc::Parser | nil" "== class Methods" "= module RDoc::ParserFactory" "refm/api/src/rdoc/parsers/parserfactory.rd")
(find-rurima "--- can_parse(file_name) -> RDoc::C_Parser | RDoc::RubyParser | RDoc::Fortran95parser | nil" "== class Methods" "= module RDoc::ParserFactory" "refm/api/src/rdoc/parsers/parserfactory.rd")
(find-rurima "--- alias_extension(old_ext, new_ext) -> bool" "== class Methods" "= module RDoc::ParserFactory" "refm/api/src/rdoc/parsers/parserfactory.rd")
(find-rurima "--- parser_for(top_level, file_name, body, options, stats) -> RDoc::Parser" "== class Methods" "= module RDoc::ParserFactory" "refm/api/src/rdoc/parsers/parserfactory.rd")
(find-rurima "--- parser_for(top_level, file_name, body, options, stats) -> RDoc::C_Parser | RDoc::RubyParser | RDoc::Fortran95parser | RDoc::SimpleParser" "== class Methods" "= module RDoc::ParserFactory" "refm/api/src/rdoc/parsers/parserfactory.rd")
(find-rurima "--- parsers -> [[Regexp, RDoc::Parser]]" "== class Methods" "= module RDoc::ParserFactory" "refm/api/src/rdoc/parsers/parserfactory.rd")
(find-rurima "== Instance Methods" "= module RDoc::ParserFactory" "refm/api/src/rdoc/parsers/parserfactory.rd")
(find-rurima "--- parse_files_matching(regexp) -> ()" "== Instance Methods" "= module RDoc::ParserFactory" "refm/api/src/rdoc/parsers/parserfactory.rd")
(find-rurima "=== メタプログラミングされたメソッド" "refm/api/src/rdoc/parsers/parse_rb.rd")
(find-rurima "=== 隠しメソッド、属性" "refm/api/src/rdoc/parsers/parse_rb.rd")
(find-rurima "= module RDoc::RubyToken" "refm/api/src/rdoc/parsers/parse_rb.rd")
(find-rurima "= module RubyToken" "refm/api/src/rdoc/parsers/parse_rb.rd")
(find-rurima "= class RDoc::RubyLex" "refm/api/src/rdoc/parsers/parse_rb.rd")
(find-rurima "= class RubyLex" "refm/api/src/rdoc/parsers/parse_rb.rd")
(find-rurima "= reopen RDoc" "refm/api/src/rdoc/parsers/parse_rb.rd")
(find-rurima "== Constants" "= reopen RDoc" "refm/api/src/rdoc/parsers/parse_rb.rd")
(find-rurima "= class RDoc::Parser::Ruby < RDoc::Parser" "refm/api/src/rdoc/parsers/parse_rb.rd")
(find-rurima "= class RDoc::RubyParser" "refm/api/src/rdoc/parsers/parse_rb.rd")
(find-rurima "== Constants" "= class RDoc::RubyParser" "refm/api/src/rdoc/parsers/parse_rb.rd")
(find-rurima "--- NORMAL -> \"::\"" "== Constants" "= class RDoc::RubyParser" "refm/api/src/rdoc/parsers/parse_rb.rd")
(find-rurima "--- SINGLE -> \"<<\"" "== Constants" "= class RDoc::RubyParser" "refm/api/src/rdoc/parsers/parse_rb.rd")
(find-rurima "== Class Methods" "= class RDoc::RubyParser" "refm/api/src/rdoc/parsers/parse_rb.rd")
(find-rurima "--- new(top_level, file_name, body, options, stats) -> RDoc::Parser::Ruby" "== Class Methods" "= class RDoc::RubyParser" "refm/api/src/rdoc/parsers/parse_rb.rd")
(find-rurima "--- new(top_level, file_name, body, options, stats) -> RDoc::RubyParser" "== Class Methods" "= class RDoc::RubyParser" "refm/api/src/rdoc/parsers/parse_rb.rd")
(find-rurima "== Instance Methods" "= class RDoc::RubyParser" "refm/api/src/rdoc/parsers/parse_rb.rd")
(find-rurima "--- scan -> RDoc::TopLevel" "== Instance Methods" "= class RDoc::RubyParser" "refm/api/src/rdoc/parsers/parse_rb.rd")
(find-rurima "= class RDoc::Parser::PerlPOD < RDoc::Parser" "refm/api/src/rdoc/parser/perl.rd")
(find-rurima "== Class Methods" "= class RDoc::Parser::PerlPOD < RDoc::Parser" "refm/api/src/rdoc/parser/perl.rd")
(find-rurima "--- new(top_level, file_name, body, options, stats) -> RDoc::Parser::PerlPOD" "== Class Methods" "= class RDoc::Parser::PerlPOD < RDoc::Parser" "refm/api/src/rdoc/parser/perl.rd")
(find-rurima "== Instance Methods" "= class RDoc::Parser::PerlPOD < RDoc::Parser" "refm/api/src/rdoc/parser/perl.rd")
(find-rurima "--- scan -> RDoc::TopLevel" "== Instance Methods" "= class RDoc::Parser::PerlPOD < RDoc::Parser" "refm/api/src/rdoc/parser/perl.rd")
(find-rurima "--- filter(comment) -> String" "== Instance Methods" "= class RDoc::Parser::PerlPOD < RDoc::Parser" "refm/api/src/rdoc/parser/perl.rd")
(find-rurima "= module RDoc::Parser::RubyTools" "refm/api/src/rdoc/parser/ruby_tools.rd")
(find-rurima "= class RDoc::Options" "refm/api/src/rdoc/options.rd")
(find-rurima "= class Options" "refm/api/src/rdoc/options.rd")
(find-rurima "== Instance Methods" "= class Options" "refm/api/src/rdoc/options.rd")
(find-rurima "--- exclude -> Regexp" "== Instance Methods" "= class Options" "refm/api/src/rdoc/options.rd")
(find-rurima "--- exclude=(val)" "== Instance Methods" "= class Options" "refm/api/src/rdoc/options.rd")
(find-rurima "--- op_dir -> String" "== Instance Methods" "= class Options" "refm/api/src/rdoc/options.rd")
(find-rurima "--- op_dir=(val)" "== Instance Methods" "= class Options" "refm/api/src/rdoc/options.rd")
(find-rurima "--- op_name -> String" "== Instance Methods" "= class Options" "refm/api/src/rdoc/options.rd")
(find-rurima "--- show_all -> bool" "== Instance Methods" "= class Options" "refm/api/src/rdoc/options.rd")
(find-rurima "--- show_all=(val)" "== Instance Methods" "= class Options" "refm/api/src/rdoc/options.rd")
(find-rurima "--- main_page -> String | nil" "== Instance Methods" "= class Options" "refm/api/src/rdoc/options.rd")
(find-rurima "--- main_page=(val)" "== Instance Methods" "= class Options" "refm/api/src/rdoc/options.rd")
(find-rurima "--- merge -> true | nil" "== Instance Methods" "= class Options" "refm/api/src/rdoc/options.rd")
(find-rurima "--- quiet -> bool" "== Instance Methods" "= class Options" "refm/api/src/rdoc/options.rd")
(find-rurima "--- generator -> Generator" "== Instance Methods" "= class Options" "refm/api/src/rdoc/options.rd")
(find-rurima "--- generator=(val)" "== Instance Methods" "= class Options" "refm/api/src/rdoc/options.rd")
(find-rurima "--- files -> [String]" "== Instance Methods" "= class Options" "refm/api/src/rdoc/options.rd")
(find-rurima "--- rdoc_include -> [String]" "== Instance Methods" "= class Options" "refm/api/src/rdoc/options.rd")
(find-rurima "--- template -> String" "== Instance Methods" "= class Options" "refm/api/src/rdoc/options.rd")
(find-rurima "--- diagram -> bool" "== Instance Methods" "= class Options" "refm/api/src/rdoc/options.rd")
(find-rurima "--- fileboxes -> bool" "== Instance Methods" "= class Options" "refm/api/src/rdoc/options.rd")
(find-rurima "--- show_hash -> bool" "== Instance Methods" "= class Options" "refm/api/src/rdoc/options.rd")
(find-rurima "--- image_format -> String" "== Instance Methods" "= class Options" "refm/api/src/rdoc/options.rd")
(find-rurima "--- charset -> String" "== Instance Methods" "= class Options" "refm/api/src/rdoc/options.rd")
(find-rurima "--- inline_source -> bool" "== Instance Methods" "= class Options" "refm/api/src/rdoc/options.rd")
(find-rurima "--- all_one_file -> bool" "== Instance Methods" "= class Options" "refm/api/src/rdoc/options.rd")
(find-rurima "--- tab_width -> Integer" "== Instance Methods" "= class Options" "refm/api/src/rdoc/options.rd")
(find-rurima "--- include_line_numbers -> bool" "== Instance Methods" "= class Options" "refm/api/src/rdoc/options.rd")
(find-rurima "--- extra_accessors -> Regexp | nil" "== Instance Methods" "= class Options" "refm/api/src/rdoc/options.rd")
(find-rurima "--- extra_accessor_flags -> {String => String}" "== Instance Methods" "= class Options" "refm/api/src/rdoc/options.rd")
(find-rurima "--- css -> String" "== Instance Methods" "= class Options" "refm/api/src/rdoc/options.rd")
(find-rurima "--- webcvs -> String | nil" "== Instance Methods" "= class Options" "refm/api/src/rdoc/options.rd")
(find-rurima "--- promiscuous" "== Instance Methods" "= class Options" "refm/api/src/rdoc/options.rd")
(find-rurima "--- force_update -> bool" "== Instance Methods" "= class Options" "refm/api/src/rdoc/options.rd")
(find-rurima "--- parse(argv) -> ()" "== Instance Methods" "= class Options" "refm/api/src/rdoc/options.rd")
(find-rurima "--- parse(argv, generators) -> ()" "== Instance Methods" "= class Options" "refm/api/src/rdoc/options.rd")
(find-rurima "--- title -> String | nil" "== Instance Methods" "= class Options" "refm/api/src/rdoc/options.rd")
(find-rurima "--- title -> String | \"RDoc Documentation\"" "== Instance Methods" "= class Options" "refm/api/src/rdoc/options.rd")
(find-rurima "--- title=(string)" "== Instance Methods" "= class Options" "refm/api/src/rdoc/options.rd")
(find-rurima "--- formatter -> nil" "== Instance Methods" "= class Options" "refm/api/src/rdoc/options.rd")
(find-rurima "--- formatter=(val)" "== Instance Methods" "= class Options" "refm/api/src/rdoc/options.rd")
(find-rurima "--- verbosity -> 0 | 1 | 2" "== Instance Methods" "= class Options" "refm/api/src/rdoc/options.rd")
(find-rurima "--- verbosity=(val)" "== Instance Methods" "= class Options" "refm/api/src/rdoc/options.rd")
(find-rurima "--- pipe -> bool" "== Instance Methods" "= class Options" "refm/api/src/rdoc/options.rd")
(find-rurima "--- pipe=(val)" "== Instance Methods" "= class Options" "refm/api/src/rdoc/options.rd")
(find-rurima "--- dry_run -> bool" "== Instance Methods" "= class Options" "refm/api/src/rdoc/options.rd")
(find-rurima "--- dry_run=(val)" "== Instance Methods" "= class Options" "refm/api/src/rdoc/options.rd")
(find-rurima "--- encoding -> Encoding" "== Instance Methods" "= class Options" "refm/api/src/rdoc/options.rd")
(find-rurima "--- encoding=(val)" "== Instance Methods" "= class Options" "refm/api/src/rdoc/options.rd")
(find-rurima "--- force_output -> bool" "== Instance Methods" "= class Options" "refm/api/src/rdoc/options.rd")
(find-rurima "--- force_output=(val)" "== Instance Methods" "= class Options" "refm/api/src/rdoc/options.rd")
(find-rurima "--- hyperlink_all -> bool" "== Instance Methods" "= class Options" "refm/api/src/rdoc/options.rd")
(find-rurima "--- hyperlink_all=(val)" "== Instance Methods" "= class Options" "refm/api/src/rdoc/options.rd")
(find-rurima "--- line_numbers -> bool" "== Instance Methods" "= class Options" "refm/api/src/rdoc/options.rd")
(find-rurima "--- line_numbers=(val)" "== Instance Methods" "= class Options" "refm/api/src/rdoc/options.rd")
(find-rurima "--- coverage_report -> Integer | false" "== Instance Methods" "= class Options" "refm/api/src/rdoc/options.rd")
(find-rurima "--- coverage_report=(val)" "== Instance Methods" "= class Options" "refm/api/src/rdoc/options.rd")
(find-rurima "--- template_dir -> String | nil" "== Instance Methods" "= class Options" "refm/api/src/rdoc/options.rd")
(find-rurima "--- template_dir=(val)" "== Instance Methods" "= class Options" "refm/api/src/rdoc/options.rd")
(find-rurima "--- visibility -> :public | :protected | :private" "== Instance Methods" "= class Options" "refm/api/src/rdoc/options.rd")
(find-rurima "--- visibility=(val)" "== Instance Methods" "= class Options" "refm/api/src/rdoc/options.rd")
(find-rurima "= class RDoc::Error < Exception" "refm/api/src/rdoc/RDoc__Error")
(find-rurima "= class RDoc::RDocError < Exception" "refm/api/src/rdoc/RDoc__Error")
(find-rurima "= class RDoc::TopLevel < RDoc::Context" "refm/api/src/rdoc/RDoc__TopLevel")
(find-rurima "== Class Methods" "= class RDoc::TopLevel < RDoc::Context" "refm/api/src/rdoc/RDoc__TopLevel")
(find-rurima "--- all_classes_and_modules -> [RDoc::NormalClass | RDoc::SingleClass | RDoc::NormalModule]" "== Class Methods" "= class RDoc::TopLevel < RDoc::Context" "refm/api/src/rdoc/RDoc__TopLevel")
(find-rurima "--- find_class_named(name) -> RDoc::NormalClass | RDoc::SingleClass | nil" "== Class Methods" "= class RDoc::TopLevel < RDoc::Context" "refm/api/src/rdoc/RDoc__TopLevel")
(find-rurima "--- new(file_name) -> RDoc::TopLevel" "== Class Methods" "= class RDoc::TopLevel < RDoc::Context" "refm/api/src/rdoc/RDoc__TopLevel")
(find-rurima "--- reset -> ()" "== Class Methods" "= class RDoc::TopLevel < RDoc::Context" "refm/api/src/rdoc/RDoc__TopLevel")
(find-rurima "== Instance Methods" "= class RDoc::TopLevel < RDoc::Context" "refm/api/src/rdoc/RDoc__TopLevel")
(find-rurima "--- add_class_or_module(collection, class_type, name, superclass) -> RDoc::NormalClass | RDoc::SingleClass | RDoc::NormalModule" "== Instance Methods" "= class RDoc::TopLevel < RDoc::Context" "refm/api/src/rdoc/RDoc__TopLevel")
(find-rurima "--- find_class_or_module_named(name) -> RDoc::NormalClass | RDoc::SingleClass | RDoc::NormalModule" "== Instance Methods" "= class RDoc::TopLevel < RDoc::Context" "refm/api/src/rdoc/RDoc__TopLevel")
(find-rurima "--- find_local_symbol(name) -> RDoc::NormalClass | RDoc::SingleClass | RDoc::NormalModule | RDoc::AnyMethod | RDoc::Alias | RDoc::Attr | RDoc::Constant" "== Instance Methods" "= class RDoc::TopLevel < RDoc::Context" "refm/api/src/rdoc/RDoc__TopLevel")
(find-rurima "--- find_module_named(name) -> RDoc::NormalModule" "== Instance Methods" "= class RDoc::TopLevel < RDoc::Context" "refm/api/src/rdoc/RDoc__TopLevel")
(find-rurima "--- full_name -> String" "== Instance Methods" "= class RDoc::TopLevel < RDoc::Context" "refm/api/src/rdoc/RDoc__TopLevel")
(find-rurima "--- full_name -> nil" "== Instance Methods" "= class RDoc::TopLevel < RDoc::Context" "refm/api/src/rdoc/RDoc__TopLevel")
(find-rurima "--- file_stat -> File::Stat" "== Instance Methods" "= class RDoc::TopLevel < RDoc::Context" "refm/api/src/rdoc/RDoc__TopLevel")
(find-rurima "--- file_stat=(val)" "== Instance Methods" "= class RDoc::TopLevel < RDoc::Context" "refm/api/src/rdoc/RDoc__TopLevel")
(find-rurima "--- file_relative_name -> String" "== Instance Methods" "= class RDoc::TopLevel < RDoc::Context" "refm/api/src/rdoc/RDoc__TopLevel")
(find-rurima "--- file_relative_name=(val)" "== Instance Methods" "= class RDoc::TopLevel < RDoc::Context" "refm/api/src/rdoc/RDoc__TopLevel")
(find-rurima "--- file_absolute_name -> String" "== Instance Methods" "= class RDoc::TopLevel < RDoc::Context" "refm/api/src/rdoc/RDoc__TopLevel")
(find-rurima "--- file_absolute_name=(val)" "== Instance Methods" "= class RDoc::TopLevel < RDoc::Context" "refm/api/src/rdoc/RDoc__TopLevel")
(find-rurima "= class RDoc::Include < RDoc::CodeObject" "refm/api/src/rdoc/RDoc__Include")
(find-rurima "= class RDoc::ClassModule < RDoc::Context" "refm/api/src/rdoc/RDoc__ClassModule")
(find-rurima "= class RDoc::Attr < RDoc::CodeObject" "refm/api/src/rdoc/RDoc__Attr")
(find-rurima "= module RDoc" "refm/api/src/rdoc/RDoc")
(find-rurima "== Constants" "= module RDoc" "refm/api/src/rdoc/RDoc")
(find-rurima "--- DOT_DOC_FILENAME -> \".document\"" "== Constants" "= module RDoc" "refm/api/src/rdoc/RDoc")
(find-rurima "--- VERSION -> String" "== Constants" "= module RDoc" "refm/api/src/rdoc/RDoc")
(find-rurima "= class SM::ToFlow" "refm/api/src/rdoc/markup/simple_markup/to_flow.rd")
(find-rurima "== Class Methods" "= class SM::ToFlow" "refm/api/src/rdoc/markup/simple_markup/to_flow.rd")
(find-rurima "--- new -> SM::ToFlow" "== Class Methods" "= class SM::ToFlow" "refm/api/src/rdoc/markup/simple_markup/to_flow.rd")
(find-rurima "== Instance Methods" "= class SM::ToFlow" "refm/api/src/rdoc/markup/simple_markup/to_flow.rd")
(find-rurima "--- add_tag(name, start, stop) -> ()" "== Instance Methods" "= class SM::ToFlow" "refm/api/src/rdoc/markup/simple_markup/to_flow.rd")
(find-rurima "= class SM::ToLaTeX" "refm/api/src/rdoc/markup/simple_markup/to_latex.rd")
(find-rurima "== Class Methods" "= class SM::ToLaTeX" "refm/api/src/rdoc/markup/simple_markup/to_latex.rd")
(find-rurima "--- new -> SM::ToLaTeX" "== Class Methods" "= class SM::ToLaTeX" "refm/api/src/rdoc/markup/simple_markup/to_latex.rd")
(find-rurima "== Instance Methods" "= class SM::ToLaTeX" "refm/api/src/rdoc/markup/simple_markup/to_latex.rd")
(find-rurima "--- add_tag(name, start, stop) -> ()" "== Instance Methods" "= class SM::ToLaTeX" "refm/api/src/rdoc/markup/simple_markup/to_latex.rd")
(find-rurima "= class SM::ToHtml" "refm/api/src/rdoc/markup/simple_markup/to_html.rd")
(find-rurima "== Class Methods" "= class SM::ToHtml" "refm/api/src/rdoc/markup/simple_markup/to_html.rd")
(find-rurima "--- new -> SM::ToHtml" "== Class Methods" "= class SM::ToHtml" "refm/api/src/rdoc/markup/simple_markup/to_html.rd")
(find-rurima "== Instance Methods" "= class SM::ToHtml" "refm/api/src/rdoc/markup/simple_markup/to_html.rd")
(find-rurima "--- add_tag(name, start, stop) -> ()" "== Instance Methods" "= class SM::ToHtml" "refm/api/src/rdoc/markup/simple_markup/to_html.rd")
(find-rurima "= class RDoc::Markup::ToBs < RDoc::Markup::ToRdoc" "refm/api/src/rdoc/markup/to_bs.rd")
(find-rurima "== Class Methods" "= class RDoc::Markup::ToBs < RDoc::Markup::ToRdoc" "refm/api/src/rdoc/markup/to_bs.rd")
(find-rurima "--- new(markup = nil) -> RDoc::Markup::ToBs" "== Class Methods" "= class RDoc::Markup::ToBs < RDoc::Markup::ToRdoc" "refm/api/src/rdoc/markup/to_bs.rd")
(find-rurima "--- new -> RDoc::Markup::ToBs" "== Class Methods" "= class RDoc::Markup::ToBs < RDoc::Markup::ToRdoc" "refm/api/src/rdoc/markup/to_bs.rd")
(find-rurima "=== Markup" "refm/api/src/rdoc/markup/simple_markup.rd")
(find-rurima "===[a:output_format] 出力可能な形式" "refm/api/src/rdoc/markup/simple_markup.rd")
(find-rurima "= class RDoc::Markup" "refm/api/src/rdoc/markup/simple_markup.rd")
(find-rurima "= class SM::SimpleMarkup" "refm/api/src/rdoc/markup/simple_markup.rd")
(find-rurima "== Constants" "= class SM::SimpleMarkup" "refm/api/src/rdoc/markup/simple_markup.rd")
(find-rurima "--- SPACE -> ?\\s" "== Constants" "= class SM::SimpleMarkup" "refm/api/src/rdoc/markup/simple_markup.rd")
(find-rurima "--- SIMPLE_LIST_RE -> Regexp" "== Constants" "= class SM::SimpleMarkup" "refm/api/src/rdoc/markup/simple_markup.rd")
(find-rurima "--- LABEL_LIST_RE -> Regexp" "== Constants" "= class SM::SimpleMarkup" "refm/api/src/rdoc/markup/simple_markup.rd")
(find-rurima "== Class Methods" "= class SM::SimpleMarkup" "refm/api/src/rdoc/markup/simple_markup.rd")
(find-rurima "--- new(attribute_manager = nil) -> RDoc::Markup" "== Class Methods" "= class SM::SimpleMarkup" "refm/api/src/rdoc/markup/simple_markup.rd")
(find-rurima "--- new -> RDoc::Markup" "== Class Methods" "= class SM::SimpleMarkup" "refm/api/src/rdoc/markup/simple_markup.rd")
(find-rurima "--- new -> SM:SimpleMarkup" "== Class Methods" "= class SM::SimpleMarkup" "refm/api/src/rdoc/markup/simple_markup.rd")
(find-rurima "== Instance Methods" "= class SM::SimpleMarkup" "refm/api/src/rdoc/markup/simple_markup.rd")
(find-rurima "--- add_word_pair(start, stop, name) -> ()" "== Instance Methods" "= class SM::SimpleMarkup" "refm/api/src/rdoc/markup/simple_markup.rd")
(find-rurima "--- add_html(tag, name) -> ()" "== Instance Methods" "= class SM::SimpleMarkup" "refm/api/src/rdoc/markup/simple_markup.rd")
(find-rurima "--- add_special(pattern, name) -> ()" "== Instance Methods" "= class SM::SimpleMarkup" "refm/api/src/rdoc/markup/simple_markup.rd")
(find-rurima "--- convert(str, formatter) -> object | \"\"" "== Instance Methods" "= class SM::SimpleMarkup" "refm/api/src/rdoc/markup/simple_markup.rd")
(find-rurima "--- content -> String" "== Instance Methods" "= class SM::SimpleMarkup" "refm/api/src/rdoc/markup/simple_markup.rd")
(find-rurima "--- get_line_types -> [Symbol]" "== Instance Methods" "= class SM::SimpleMarkup" "refm/api/src/rdoc/markup/simple_markup.rd")
(find-rurima "--- attribute_manager -> RDoc::AttributeManager" "== Instance Methods" "= class SM::SimpleMarkup" "refm/api/src/rdoc/markup/simple_markup.rd")
(find-rurima "= class RDoc::Markup::Formatter" "refm/api/src/rdoc/markup/formatter.rd")
(find-rurima "== Class Methods" "= class RDoc::Markup::Formatter" "refm/api/src/rdoc/markup/formatter.rd")
(find-rurima "--- new(markup = nil) -> RDoc::Markup::Formatter" "== Class Methods" "= class RDoc::Markup::Formatter" "refm/api/src/rdoc/markup/formatter.rd")
(find-rurima "--- new -> RDoc::Markup::Formatter" "== Class Methods" "= class RDoc::Markup::Formatter" "refm/api/src/rdoc/markup/formatter.rd")
(find-rurima "== Instance Methods" "= class RDoc::Markup::Formatter" "refm/api/src/rdoc/markup/formatter.rd")
(find-rurima "--- convert(content) -> ()" "== Instance Methods" "= class RDoc::Markup::Formatter" "refm/api/src/rdoc/markup/formatter.rd")
(find-rurima "--- add_tag(name, start, stop) -> ()" "== Instance Methods" "= class RDoc::Markup::Formatter" "refm/api/src/rdoc/markup/formatter.rd")
(find-rurima "= class RDoc::Markup::ToAnsi < RDoc::Markup::ToRdoc" "refm/api/src/rdoc/markup/to_ansi.rd")
(find-rurima "== Class Methods" "= class RDoc::Markup::ToAnsi < RDoc::Markup::ToRdoc" "refm/api/src/rdoc/markup/to_ansi.rd")
(find-rurima "--- new(makup = nil) -> RDoc::Markup::ToAnsi" "== Class Methods" "= class RDoc::Markup::ToAnsi < RDoc::Markup::ToRdoc" "refm/api/src/rdoc/markup/to_ansi.rd")
(find-rurima "--- new -> RDoc::Markup::ToAnsi" "== Class Methods" "= class RDoc::Markup::ToAnsi < RDoc::Markup::ToRdoc" "refm/api/src/rdoc/markup/to_ansi.rd")
(find-rurima "= class RDoc::Markup::ToTexInfo < RDoc::Markup::Formatter" "refm/api/src/rdoc/markup/to_texinfo.rd")
(find-rurima "== Class Methods" "= class RDoc::Markup::ToTexInfo < RDoc::Markup::Formatter" "refm/api/src/rdoc/markup/to_texinfo.rd")
(find-rurima "--- new -> RDoc::Markup::ToTexInfo" "== Class Methods" "= class RDoc::Markup::ToTexInfo < RDoc::Markup::Formatter" "refm/api/src/rdoc/markup/to_texinfo.rd")
(find-rurima "= class RDoc::Markup::ToTest < RDoc::Markup::Formatter" "refm/api/src/rdoc/markup/to_test.rd")
(find-rurima "== Class Methods" "= class RDoc::Markup::ToTest < RDoc::Markup::Formatter" "refm/api/src/rdoc/markup/to_test.rd")
(find-rurima "--- new -> RDoc::Markup::ToTest" "== Class Methods" "= class RDoc::Markup::ToTest < RDoc::Markup::Formatter" "refm/api/src/rdoc/markup/to_test.rd")
(find-rurima "= class RDoc::Markup::ToHtmlCrossref < RDoc::Markup::ToHtml" "refm/api/src/rdoc/markup/to_html_crossref.rd")
(find-rurima "== Class Methods" "= class RDoc::Markup::ToHtmlCrossref < RDoc::Markup::ToHtml" "refm/api/src/rdoc/markup/to_html_crossref.rd")
(find-rurima "--- new(path, context, show_hash) -> RDoc::Markup::ToHtmlCrossref" "== Class Methods" "= class RDoc::Markup::ToHtmlCrossref < RDoc::Markup::ToHtml" "refm/api/src/rdoc/markup/to_html_crossref.rd")
(find-rurima "= class RDoc::Markup::ToRdoc < RDoc::Markup::Formatter" "refm/api/src/rdoc/markup/to_rdoc.rd")
(find-rurima "== Class Methods" "= class RDoc::Markup::ToRdoc < RDoc::Markup::Formatter" "refm/api/src/rdoc/markup/to_rdoc.rd")
(find-rurima "--- new(markup = nil) -> RDoc::Markup::ToRdoc" "== Class Methods" "= class RDoc::Markup::ToRdoc < RDoc::Markup::Formatter" "refm/api/src/rdoc/markup/to_rdoc.rd")
(find-rurima "--- new -> RDoc::Markup::ToRdoc" "== Class Methods" "= class RDoc::Markup::ToRdoc < RDoc::Markup::Formatter" "refm/api/src/rdoc/markup/to_rdoc.rd")
(find-rurima "= class RDoc::Markup::ToFlow < RDoc::Markup::Formatter" "refm/api/src/rdoc/markup/to_flow.rd")
(find-rurima "== Class Methods" "= class RDoc::Markup::ToFlow < RDoc::Markup::Formatter" "refm/api/src/rdoc/markup/to_flow.rd")
(find-rurima "--- new -> RDoc::Markup::ToFlow" "== Class Methods" "= class RDoc::Markup::ToFlow < RDoc::Markup::Formatter" "refm/api/src/rdoc/markup/to_flow.rd")
(find-rurima "= class RDoc::Markup::ToLaTeX < RDoc::Markup::Formatter" "refm/api/src/rdoc/markup/to_latex.rd")
(find-rurima "== Class Methods" "= class RDoc::Markup::ToLaTeX < RDoc::Markup::Formatter" "refm/api/src/rdoc/markup/to_latex.rd")
(find-rurima "--- new -> RDoc::Markup::ToLaTeX" "== Class Methods" "= class RDoc::Markup::ToLaTeX < RDoc::Markup::Formatter" "refm/api/src/rdoc/markup/to_latex.rd")
(find-rurima "= class RDoc::Markup::ToHtml < RDoc::Markup::Formatter" "refm/api/src/rdoc/markup/to_html.rd")
(find-rurima "== Class Methods" "= class RDoc::Markup::ToHtml < RDoc::Markup::Formatter" "refm/api/src/rdoc/markup/to_html.rd")
(find-rurima "--- new -> RDoc::Markup::ToHtml" "== Class Methods" "= class RDoc::Markup::ToHtml < RDoc::Markup::Formatter" "refm/api/src/rdoc/markup/to_html.rd")
(find-rurima "= module DOT" "refm/api/src/rdoc/dot.rd")
(find-rurima "--- GENERAL_MODIFIERS  -> [String]" "refm/api/src/rdoc/RDoc__constants")
(find-rurima "--- CLASS_MODIFIERS    -> [String]" "refm/api/src/rdoc/RDoc__constants")
(find-rurima "--- ATTR_MODIFIERS     -> [String]" "refm/api/src/rdoc/RDoc__constants")
(find-rurima "--- CONSTANT_MODIFIERS -> [String]" "refm/api/src/rdoc/RDoc__constants")
(find-rurima "--- METHOD_MODIFIERS   -> [String]" "refm/api/src/rdoc/RDoc__constants")
(find-rurima "= module RDoc::Text" "refm/api/src/rdoc/text.rd")
(find-rurima "== Instance Methods" "= module RDoc::Text" "refm/api/src/rdoc/text.rd")
(find-rurima "--- expand_tabs(text) -> String" "== Instance Methods" "= module RDoc::Text" "refm/api/src/rdoc/text.rd")
(find-rurima "--- flush_left(text) -> String" "== Instance Methods" "= module RDoc::Text" "refm/api/src/rdoc/text.rd")
(find-rurima "--- markup(text) -> String" "== Instance Methods" "= module RDoc::Text" "refm/api/src/rdoc/text.rd")
(find-rurima "--- normalize_comment(text) -> String" "== Instance Methods" "= module RDoc::Text" "refm/api/src/rdoc/text.rd")
(find-rurima "--- parse(text) -> RDoc::Markup::Document | Array" "== Instance Methods" "= module RDoc::Text" "refm/api/src/rdoc/text.rd")
(find-rurima "--- strip_hashes(text) -> String" "== Instance Methods" "= module RDoc::Text" "refm/api/src/rdoc/text.rd")
(find-rurima "--- strip_newlines(text) -> String" "== Instance Methods" "= module RDoc::Text" "refm/api/src/rdoc/text.rd")
(find-rurima "--- strip_stars(text) -> String" "== Instance Methods" "= module RDoc::Text" "refm/api/src/rdoc/text.rd")
(find-rurima "= class RDoc::GhostMethod < RDoc::AnyMethod" "refm/api/src/rdoc/RDoc__GhostMethod")
(find-rurima "===[a:usage] 使い方" "refm/api/src/rdoc/usage.rd")
(find-rurima "=== 使用例" "refm/api/src/rdoc/usage.rd")
(find-rurima "= reopen RDoc" "refm/api/src/rdoc/usage.rd")
(find-rurima "== Singleton Methods" "= reopen RDoc" "refm/api/src/rdoc/usage.rd")
(find-rurima "--- usage(*args) -> ()" "== Singleton Methods" "= reopen RDoc" "refm/api/src/rdoc/usage.rd")
(find-rurima "--- usage_no_exit(*args) -> ()" "== Singleton Methods" "= reopen RDoc" "refm/api/src/rdoc/usage.rd")
(find-rurima "= class RDoc::SingleClass < RDoc::ClassModule" "refm/api/src/rdoc/RDoc__SingleClass")
(find-rurima "= class RDoc::Alias < RDoc::CodeObject" "refm/api/src/rdoc/RDoc__Alias")
(find-rurima "= class RDoc::Constant < RDoc::CodeObject" "refm/api/src/rdoc/RDoc__Constant")
(find-rurima "= class RDoc::NormalClass < RDoc::ClassModule" "refm/api/src/rdoc/RDoc__NormalClass")
(find-rurima "= class RDoc::Context::Section" "refm/api/src/rdoc/RDoc__Context__Section")
(find-rurima "== Class Methods" "= class RDoc::Context::Section" "refm/api/src/rdoc/RDoc__Context__Section")
(find-rurima "--- new(parent, title, comment) -> RDoc::Context::Section" "== Class Methods" "= class RDoc::Context::Section" "refm/api/src/rdoc/RDoc__Context__Section")
(find-rurima "--- new(title, comment) -> RDoc::Context::Section" "== Class Methods" "= class RDoc::Context::Section" "refm/api/src/rdoc/RDoc__Context__Section")
(find-rurima "== Instance Methods" "= class RDoc::Context::Section" "refm/api/src/rdoc/RDoc__Context__Section")
(find-rurima "--- title -> String | nil" "== Instance Methods" "= class RDoc::Context::Section" "refm/api/src/rdoc/RDoc__Context__Section")
(find-rurima "--- comment -> String | nil" "== Instance Methods" "= class RDoc::Context::Section" "refm/api/src/rdoc/RDoc__Context__Section")
(find-rurima "--- sequence -> String" "== Instance Methods" "= class RDoc::Context::Section" "refm/api/src/rdoc/RDoc__Context__Section")
(find-rurima "--- ==(other) -> bool" "== Instance Methods" "= class RDoc::Context::Section" "refm/api/src/rdoc/RDoc__Context__Section")
(find-rurima "--- inspect -> String" "== Instance Methods" "= class RDoc::Context::Section" "refm/api/src/rdoc/RDoc__Context__Section")
(find-rurima "--- set_comment(comment) -> ()" "== Instance Methods" "= class RDoc::Context::Section" "refm/api/src/rdoc/RDoc__Context__Section")
(find-rurima "--- parent -> RDoc::Context" "== Instance Methods" "= class RDoc::Context::Section" "refm/api/src/rdoc/RDoc__Context__Section")
(find-rurima "= class RDoc::Context < RDoc::CodeObject" "refm/api/src/rdoc/RDoc__Context")
(find-rurima "== Constants" "= class RDoc::Context < RDoc::CodeObject" "refm/api/src/rdoc/RDoc__Context")
(find-rurima "--- TYPES -> [\"class\", \"instance\"]" "== Constants" "= class RDoc::Context < RDoc::CodeObject" "refm/api/src/rdoc/RDoc__Context")
(find-rurima "--- VISIBILITIES -> [:public, :protected, :private]" "== Constants" "= class RDoc::Context < RDoc::CodeObject" "refm/api/src/rdoc/RDoc__Context")
(find-rurima "== Class Methods" "= class RDoc::Context < RDoc::CodeObject" "refm/api/src/rdoc/RDoc__Context")
(find-rurima "--- new -> RDoc::Context" "== Class Methods" "= class RDoc::Context < RDoc::CodeObject" "refm/api/src/rdoc/RDoc__Context")
(find-rurima "== Instance Methods" "= class RDoc::Context < RDoc::CodeObject" "refm/api/src/rdoc/RDoc__Context")
(find-rurima "--- aliases -> [RDoc::Alias]" "== Instance Methods" "= class RDoc::Context < RDoc::CodeObject" "refm/api/src/rdoc/RDoc__Context")
(find-rurima "--- attributes -> [RDoc::Attr]" "== Instance Methods" "= class RDoc::Context < RDoc::CodeObject" "refm/api/src/rdoc/RDoc__Context")
(find-rurima "--- constants -> [RDoc::Constant]" "== Instance Methods" "= class RDoc::Context < RDoc::CodeObject" "refm/api/src/rdoc/RDoc__Context")
(find-rurima "--- in_files" "== Instance Methods" "= class RDoc::Context < RDoc::CodeObject" "refm/api/src/rdoc/RDoc__Context")
(find-rurima "--- includes -> [RDoc::Include]" "== Instance Methods" "= class RDoc::Context < RDoc::CodeObject" "refm/api/src/rdoc/RDoc__Context")
(find-rurima "--- method_list -> [RDoc::AnyMethod]" "== Instance Methods" "= class RDoc::Context < RDoc::CodeObject" "refm/api/src/rdoc/RDoc__Context")
(find-rurima "--- name -> String" "== Instance Methods" "= class RDoc::Context < RDoc::CodeObject" "refm/api/src/rdoc/RDoc__Context")
(find-rurima "--- requires -> [RDoc::Require]" "== Instance Methods" "= class RDoc::Context < RDoc::CodeObject" "refm/api/src/rdoc/RDoc__Context")
(find-rurima "--- sections -> RDoc::Context::Section" "== Instance Methods" "= class RDoc::Context < RDoc::CodeObject" "refm/api/src/rdoc/RDoc__Context")
(find-rurima "--- visibility -> :public | :protected | :private" "== Instance Methods" "= class RDoc::Context < RDoc::CodeObject" "refm/api/src/rdoc/RDoc__Context")
(find-rurima "--- <=>(other) -> -1 | 0 | 1" "== Instance Methods" "= class RDoc::Context < RDoc::CodeObject" "refm/api/src/rdoc/RDoc__Context")
(find-rurima "--- add_alias(an_alias) -> RDoc::Alias" "== Instance Methods" "= class RDoc::Context < RDoc::CodeObject" "refm/api/src/rdoc/RDoc__Context")
(find-rurima "--- add_attribute(an_attribute) -> ()" "== Instance Methods" "= class RDoc::Context < RDoc::CodeObject" "refm/api/src/rdoc/RDoc__Context")
(find-rurima "--- add_class(class_type, name, superclass) -> RDoc::SingleClass | RDoc::NormalClass" "== Instance Methods" "= class RDoc::Context < RDoc::CodeObject" "refm/api/src/rdoc/RDoc__Context")
(find-rurima "--- add_class_or_module(collection, class_type, name, superclass = nil) -> RDoc::NormalClass | RDoc::SingleClass | RDoc::NormalModule" "== Instance Methods" "= class RDoc::Context < RDoc::CodeObject" "refm/api/src/rdoc/RDoc__Context")
(find-rurima "--- add_constant(const) -> ()" "== Instance Methods" "= class RDoc::Context < RDoc::CodeObject" "refm/api/src/rdoc/RDoc__Context")
(find-rurima "--- add_include(an_include) -> ()" "== Instance Methods" "= class RDoc::Context < RDoc::CodeObject" "refm/api/src/rdoc/RDoc__Context")
(find-rurima "--- add_method(a_method) -> ()" "== Instance Methods" "= class RDoc::Context < RDoc::CodeObject" "refm/api/src/rdoc/RDoc__Context")
(find-rurima "--- add_module(class_type, name) -> RDoc::NormalModule | RDoc::SingleClass | RDoc::NormalClass" "== Instance Methods" "= class RDoc::Context < RDoc::CodeObject" "refm/api/src/rdoc/RDoc__Context")
(find-rurima "--- add_require(a_require) -> ()" "== Instance Methods" "= class RDoc::Context < RDoc::CodeObject" "refm/api/src/rdoc/RDoc__Context")
(find-rurima "--- add_to(array, thing) -> ()" "== Instance Methods" "= class RDoc::Context < RDoc::CodeObject" "refm/api/src/rdoc/RDoc__Context")
(find-rurima "--- classes -> [RDoc::SingleClass | RDoc::NormalClass]" "== Instance Methods" "= class RDoc::Context < RDoc::CodeObject" "refm/api/src/rdoc/RDoc__Context")
(find-rurima "--- defined_in?(file)" "== Instance Methods" "= class RDoc::Context < RDoc::CodeObject" "refm/api/src/rdoc/RDoc__Context")
(find-rurima "--- each_attribute {|a| ... } -> [RDoc::Attr]" "== Instance Methods" "= class RDoc::Context < RDoc::CodeObject" "refm/api/src/rdoc/RDoc__Context")
(find-rurima "--- each_classmodule {|m| ... } -> [RDoc::SingleClass | RDoc::NormalClass | RDoc::NormalModule]" "== Instance Methods" "= class RDoc::Context < RDoc::CodeObject" "refm/api/src/rdoc/RDoc__Context")
(find-rurima "--- each_constant {|c| ... } -> [RDoc::Constant]" "== Instance Methods" "= class RDoc::Context < RDoc::CodeObject" "refm/api/src/rdoc/RDoc__Context")
(find-rurima "--- each_method {|m| ... } -> [RDoc::AnyMethod]" "== Instance Methods" "= class RDoc::Context < RDoc::CodeObject" "refm/api/src/rdoc/RDoc__Context")
(find-rurima "--- find_enclosing_module_named(name) -> RDoc::NormalModule | nil" "== Instance Methods" "= class RDoc::Context < RDoc::CodeObject" "refm/api/src/rdoc/RDoc__Context")
(find-rurima "--- find_local_symbol(symbol)" "== Instance Methods" "= class RDoc::Context < RDoc::CodeObject" "refm/api/src/rdoc/RDoc__Context")
(find-rurima "--- find_module_named(name) -> RDoc::NormalModule | nil" "== Instance Methods" "= class RDoc::Context < RDoc::CodeObject" "refm/api/src/rdoc/RDoc__Context")
(find-rurima "--- find_symbol(symbol, method=nil)" "== Instance Methods" "= class RDoc::Context < RDoc::CodeObject" "refm/api/src/rdoc/RDoc__Context")
(find-rurima "--- initialize_classes_and_modules -> ()" "== Instance Methods" "= class RDoc::Context < RDoc::CodeObject" "refm/api/src/rdoc/RDoc__Context")
(find-rurima "--- initialize_methods_etc -> ()" "== Instance Methods" "= class RDoc::Context < RDoc::CodeObject" "refm/api/src/rdoc/RDoc__Context")
(find-rurima "--- modules -> [RDoc::NormalModule]" "== Instance Methods" "= class RDoc::Context < RDoc::CodeObject" "refm/api/src/rdoc/RDoc__Context")
(find-rurima "--- ongoing_visibility=(vis)" "== Instance Methods" "= class RDoc::Context < RDoc::CodeObject" "refm/api/src/rdoc/RDoc__Context")
(find-rurima "--- record_location(toplevel)" "== Instance Methods" "= class RDoc::Context < RDoc::CodeObject" "refm/api/src/rdoc/RDoc__Context")
(find-rurima "--- set_current_section(title, comment) -> ()" "== Instance Methods" "= class RDoc::Context < RDoc::CodeObject" "refm/api/src/rdoc/RDoc__Context")
(find-rurima "--- set_visibility_for(methods, visibility, singleton = false) -> ()" "== Instance Methods" "= class RDoc::Context < RDoc::CodeObject" "refm/api/src/rdoc/RDoc__Context")
(find-rurima "--- toplevel -> RDoc::TopLevel" "== Instance Methods" "= class RDoc::Context < RDoc::CodeObject" "refm/api/src/rdoc/RDoc__Context")
(find-rurima "--- current_section -> RDoc::Context::Section" "== Instance Methods" "= class RDoc::Context < RDoc::CodeObject" "refm/api/src/rdoc/RDoc__Context")
(find-rurima "--- unmatched_alias_lists -> {String => RDoc::Alias}" "== Instance Methods" "= class RDoc::Context < RDoc::CodeObject" "refm/api/src/rdoc/RDoc__Context")
(find-rurima "--- unmatched_alias_lists=(val)" "== Instance Methods" "= class RDoc::Context < RDoc::CodeObject" "refm/api/src/rdoc/RDoc__Context")
(find-rurima "=== バックエンドの選択" "refm/api/src/yaml.rd")
(find-rurima "=== タグの指定" "refm/api/src/yaml.rd")
(find-rurima "=== 注意" "refm/api/src/yaml.rd")
(find-rurima "=== 参考" "refm/api/src/yaml.rd")
(find-rurima "= module YAML" "refm/api/src/yaml.rd")
(find-rurima "== Constants" "= module YAML" "refm/api/src/yaml.rd")
(find-rurima "--- ENGINE -> YAML::EngineManager" "== Constants" "= module YAML" "refm/api/src/yaml.rd")
(find-rurima "= class YAML::EngineManager" "refm/api/src/yaml.rd")
(find-rurima "== Class Methods" "= class YAML::EngineManager" "refm/api/src/yaml.rd")
(find-rurima "--- new -> YAML::EngineManager" "== Class Methods" "= class YAML::EngineManager" "refm/api/src/yaml.rd")
(find-rurima "== Instance Methods" "= class YAML::EngineManager" "refm/api/src/yaml.rd")
(find-rurima "--- yamler -> String" "== Instance Methods" "= class YAML::EngineManager" "refm/api/src/yaml.rd")
(find-rurima "--- yamler=(engine)" "== Instance Methods" "= class YAML::EngineManager" "refm/api/src/yaml.rd")
(find-rurima "--- syck? -> bool" "== Instance Methods" "= class YAML::EngineManager" "refm/api/src/yaml.rd")
(find-rurima "=== 使い方" "refm/api/src/e2mmap.rd")
(find-rurima "= module Exception2MessageMapper" "refm/api/src/e2mmap.rd")
(find-rurima "== Singleton Methods" "= module Exception2MessageMapper" "refm/api/src/e2mmap.rd")
(find-rurima "--- def_e2message(klass, exception_class, message_format) -> Class" "== Singleton Methods" "= module Exception2MessageMapper" "refm/api/src/e2mmap.rd")
(find-rurima "--- def_exception(klass, exception_name, message_format, superklass = StandardError) -> Class" "== Singleton Methods" "= module Exception2MessageMapper" "refm/api/src/e2mmap.rd")
(find-rurima "--- e2mm_message(klass, exp) -> String | nil" "== Singleton Methods" "= module Exception2MessageMapper" "refm/api/src/e2mmap.rd")
(find-rurima "--- message(klass, exp) -> String | nil" "== Singleton Methods" "= module Exception2MessageMapper" "refm/api/src/e2mmap.rd")
(find-rurima "--- extend_object(cl) -> ()" "== Singleton Methods" "= module Exception2MessageMapper" "refm/api/src/e2mmap.rd")
(find-rurima "--- Raise(klass = E2MM, exception_class = nil, *rest) -> ()" "== Singleton Methods" "= module Exception2MessageMapper" "refm/api/src/e2mmap.rd")
(find-rurima "--- Fail(klass = E2MM, exception_class = nil, *rest)  -> ()" "== Singleton Methods" "= module Exception2MessageMapper" "refm/api/src/e2mmap.rd")
(find-rurima "--- fail(exception_class = nil, *rest) -> ()" "== Singleton Methods" "= module Exception2MessageMapper" "refm/api/src/e2mmap.rd")
(find-rurima "--- extend_to(b) -> Class" "== Singleton Methods" "= module Exception2MessageMapper" "refm/api/src/e2mmap.rd")
(find-rurima "== Instance Methods" "= module Exception2MessageMapper" "refm/api/src/e2mmap.rd")
(find-rurima "--- bind(cl) -> ()" "== Instance Methods" "= module Exception2MessageMapper" "refm/api/src/e2mmap.rd")
(find-rurima "--- Raise(exception_class = nil, *rest) -> ()" "== Instance Methods" "= module Exception2MessageMapper" "refm/api/src/e2mmap.rd")
(find-rurima "--- Fail(exception_class = nil, *rest)  -> ()" "== Instance Methods" "= module Exception2MessageMapper" "refm/api/src/e2mmap.rd")
(find-rurima "--- fail(exception_class = nil, *rest) -> ()" "== Instance Methods" "= module Exception2MessageMapper" "refm/api/src/e2mmap.rd")
(find-rurima "--- def_e2message(exception_class, message_format) -> Class" "== Instance Methods" "= module Exception2MessageMapper" "refm/api/src/e2mmap.rd")
(find-rurima "--- def_exception(exception_name, message_format, superclass = StandardError) -> Class" "== Instance Methods" "= module Exception2MessageMapper" "refm/api/src/e2mmap.rd")
(find-rurima "= class Exception2MessageMapper::ErrNotRegisteredException < StandardError" "refm/api/src/e2mmap.rd")
(find-rurima "=== irb の使い方" "refm/api/src/irb.rd")
(find-rurima "=== irb のコマンドラインオプション" "refm/api/src/irb.rd")
(find-rurima "=== irb のカスタマイズ" "refm/api/src/irb.rd")
(find-rurima "==== プロンプトのカスタマイズ" "=== irb のカスタマイズ" "refm/api/src/irb.rd")
(find-rurima "=== サブ irb" "refm/api/src/irb.rd")
(find-rurima "=== サブ irb の設定" "refm/api/src/irb.rd")
(find-rurima "=== irb の使用例" "refm/api/src/irb.rd")
(find-rurima "=== irb で使用可能なコマンド一覧" "refm/api/src/irb.rd")
(find-rurima "==== コマンド実行時の注意" "=== irb で使用可能なコマンド一覧" "refm/api/src/irb.rd")
(find-rurima "=== システム変数" "refm/api/src/irb.rd")
(find-rurima "=== 使用上の制限" "refm/api/src/irb.rd")
(find-rurima "==== ローカル変数の宣言" "=== 使用上の制限" "refm/api/src/irb.rd")
(find-rurima "==== ヒアドキュメント" "=== 使用上の制限" "refm/api/src/irb.rd")
(find-rurima "==== シンボル" "=== 使用上の制限" "refm/api/src/irb.rd")
(find-rurima "===[a:history] 履歴の保存" "refm/api/src/irb.rd")
(find-rurima "===[a:inspect_mode] 実行結果の出力方式" "refm/api/src/irb.rd")
(find-rurima "= module IRB" "refm/api/src/irb.rd")
(find-rurima "== Class Methods" "= module IRB" "refm/api/src/irb.rd")
(find-rurima "--- conf -> Hash" "== Class Methods" "= module IRB" "refm/api/src/irb.rd")
(find-rurima "--- version -> String" "== Class Methods" "= module IRB" "refm/api/src/irb.rd")
(find-rurima "--- CurrentContext -> IRB::Context" "== Class Methods" "= module IRB" "refm/api/src/irb.rd")
(find-rurima "--- start(ap_path = nil) -> ()" "== Class Methods" "= module IRB" "refm/api/src/irb.rd")
(find-rurima "--- irb_at_exit -> ()" "== Class Methods" "= module IRB" "refm/api/src/irb.rd")
(find-rurima "--- irb_exit(irb, ret) -> object" "== Class Methods" "= module IRB" "refm/api/src/irb.rd")
(find-rurima "--- irb_abort(irb, exception = Abort)" "== Class Methods" "= module IRB" "refm/api/src/irb.rd")
(find-rurima "= class IRB::Irb" "refm/api/src/irb.rd")
(find-rurima "= class IRB::Abort < Exception" "refm/api/src/irb.rd")
(find-rurima "=== 使い方" "refm/api/src/coverage.rd")
(find-rurima "=== 例" "refm/api/src/coverage.rd")
(find-rurima "= class Coverage" "refm/api/src/coverage.rd")
(find-rurima "== Class Methods" "= class Coverage" "refm/api/src/coverage.rd")
(find-rurima "--- start  -> nil" "== Class Methods" "= class Coverage" "refm/api/src/coverage.rd")
(find-rurima "--- result  -> Hash" "== Class Methods" "= class Coverage" "refm/api/src/coverage.rd")
(find-rurima "= module MiniTest::Assertions" "refm/api/src/minitest/MiniTest__Assertions")
(find-rurima "== Public Instance Methods" "= module MiniTest::Assertions" "refm/api/src/minitest/MiniTest__Assertions")
(find-rurima "--- _assertions -> Fixnum" "== Public Instance Methods" "= module MiniTest::Assertions" "refm/api/src/minitest/MiniTest__Assertions")
(find-rurima "--- _assertions=(count)" "== Public Instance Methods" "= module MiniTest::Assertions" "refm/api/src/minitest/MiniTest__Assertions")
(find-rurima "--- assert(test, message = nil) -> true" "== Public Instance Methods" "= module MiniTest::Assertions" "refm/api/src/minitest/MiniTest__Assertions")
(find-rurima "--- assert_block(message = nil){ ... } -> true" "== Public Instance Methods" "= module MiniTest::Assertions" "refm/api/src/minitest/MiniTest__Assertions")
(find-rurima "--- assert_empty(object, message = nil) -> true" "== Public Instance Methods" "= module MiniTest::Assertions" "refm/api/src/minitest/MiniTest__Assertions")
(find-rurima "--- assert_equal(expected, actual, message = nil) -> true" "== Public Instance Methods" "= module MiniTest::Assertions" "refm/api/src/minitest/MiniTest__Assertions")
(find-rurima "--- assert_in_delta(expected, actual, delta = 0.001, message = nil) -> true" "== Public Instance Methods" "= module MiniTest::Assertions" "refm/api/src/minitest/MiniTest__Assertions")
(find-rurima "--- assert_in_epsilon(actual, expected, epsilon = 0.001, message = nil) -> true" "== Public Instance Methods" "= module MiniTest::Assertions" "refm/api/src/minitest/MiniTest__Assertions")
(find-rurima "--- assert_includes(collection, object, message = nil) -> true" "== Public Instance Methods" "= module MiniTest::Assertions" "refm/api/src/minitest/MiniTest__Assertions")
(find-rurima "--- assert_instance_of(klass, object, message = nil) -> true" "== Public Instance Methods" "= module MiniTest::Assertions" "refm/api/src/minitest/MiniTest__Assertions")
(find-rurima "--- assert_kind_of(klass, object, message) -> true" "== Public Instance Methods" "= module MiniTest::Assertions" "refm/api/src/minitest/MiniTest__Assertions")
(find-rurima "--- assert_match(regexp, str, message = nil) -> true" "== Public Instance Methods" "= module MiniTest::Assertions" "refm/api/src/minitest/MiniTest__Assertions")
(find-rurima "--- assert_nil(object, message = nil) -> true" "== Public Instance Methods" "= module MiniTest::Assertions" "refm/api/src/minitest/MiniTest__Assertions")
(find-rurima "--- assert_operator(operand1, operator, operand2, message = nil) -> true" "== Public Instance Methods" "= module MiniTest::Assertions" "refm/api/src/minitest/MiniTest__Assertions")
(find-rurima "--- assert_raises(*args){ ... } -> true" "== Public Instance Methods" "= module MiniTest::Assertions" "refm/api/src/minitest/MiniTest__Assertions")
(find-rurima "--- assert_respond_to(object, method_name, message = nil) -> true" "== Public Instance Methods" "= module MiniTest::Assertions" "refm/api/src/minitest/MiniTest__Assertions")
(find-rurima "--- assert_same(expected, actual, message = nil) -> true" "== Public Instance Methods" "= module MiniTest::Assertions" "refm/api/src/minitest/MiniTest__Assertions")
(find-rurima "--- assert_send(array, message = nil) -> true" "== Public Instance Methods" "= module MiniTest::Assertions" "refm/api/src/minitest/MiniTest__Assertions")
(find-rurima "--- assert_throws(tag, message = nil){ ... } -> true" "== Public Instance Methods" "= module MiniTest::Assertions" "refm/api/src/minitest/MiniTest__Assertions")
(find-rurima "--- capture_io{ ... } -> Array" "== Public Instance Methods" "= module MiniTest::Assertions" "refm/api/src/minitest/MiniTest__Assertions")
(find-rurima "--- exception_details(exception, message) -> String" "== Public Instance Methods" "= module MiniTest::Assertions" "refm/api/src/minitest/MiniTest__Assertions")
(find-rurima "--- flunk(message = nil)" "== Public Instance Methods" "= module MiniTest::Assertions" "refm/api/src/minitest/MiniTest__Assertions")
(find-rurima "--- message(message){ ... } -> Proc" "== Public Instance Methods" "= module MiniTest::Assertions" "refm/api/src/minitest/MiniTest__Assertions")
(find-rurima "--- mu_pp(object) -> String" "== Public Instance Methods" "= module MiniTest::Assertions" "refm/api/src/minitest/MiniTest__Assertions")
(find-rurima "--- pass(message = nil) -> true" "== Public Instance Methods" "= module MiniTest::Assertions" "refm/api/src/minitest/MiniTest__Assertions")
(find-rurima "--- skip(message = nil, backtrace = caller)" "== Public Instance Methods" "= module MiniTest::Assertions" "refm/api/src/minitest/MiniTest__Assertions")
(find-rurima "= reopen Module" "refm/api/src/minitest/spec.rd")
(find-rurima "== Public Instance Methods" "= reopen Module" "refm/api/src/minitest/spec.rd")
(find-rurima "--- infect_with_assertions(positive_prefix, negative_prefix, skip_regexp, map = {}) -> ()" "== Public Instance Methods" "= reopen Module" "refm/api/src/minitest/spec.rd")
(find-rurima "= reopen Object" "refm/api/src/minitest/spec.rd")
(find-rurima "== Public Instance Methods" "= reopen Object" "refm/api/src/minitest/spec.rd")
(find-rurima "--- must_be_empty -> true" "== Public Instance Methods" "= reopen Object" "refm/api/src/minitest/spec.rd")
(find-rurima "--- must_equal(expected) -> true" "== Public Instance Methods" "= reopen Object" "refm/api/src/minitest/spec.rd")
(find-rurima "--- must_be_within_delta(expected, delta = 0.001) -> true" "== Public Instance Methods" "= reopen Object" "refm/api/src/minitest/spec.rd")
(find-rurima "--- must_be_close_to(expected, delta = 0.001) -> true" "== Public Instance Methods" "= reopen Object" "refm/api/src/minitest/spec.rd")
(find-rurima "--- must_be_within_epsilon(actual, epsilon = 0.001) -> true" "== Public Instance Methods" "= reopen Object" "refm/api/src/minitest/spec.rd")
(find-rurima "--- must_include(object) -> true" "== Public Instance Methods" "= reopen Object" "refm/api/src/minitest/spec.rd")
(find-rurima "--- must_be_instance_of(klass) -> true" "== Public Instance Methods" "= reopen Object" "refm/api/src/minitest/spec.rd")
(find-rurima "--- must_be_kind_of(klass) -> true" "== Public Instance Methods" "= reopen Object" "refm/api/src/minitest/spec.rd")
(find-rurima "--- must_match(regexp) -> true" "== Public Instance Methods" "= reopen Object" "refm/api/src/minitest/spec.rd")
(find-rurima "--- must_be_nil -> true" "== Public Instance Methods" "= reopen Object" "refm/api/src/minitest/spec.rd")
(find-rurima "--- must_be -> true" "== Public Instance Methods" "= reopen Object" "refm/api/src/minitest/spec.rd")
(find-rurima "--- must_raise(*args) -> true" "== Public Instance Methods" "= reopen Object" "refm/api/src/minitest/spec.rd")
(find-rurima "--- must_respond_to(method_name) -> true" "== Public Instance Methods" "= reopen Object" "refm/api/src/minitest/spec.rd")
(find-rurima "--- must_be_same_as(actual) -> true" "== Public Instance Methods" "= reopen Object" "refm/api/src/minitest/spec.rd")
(find-rurima "--- must_send -> true" "== Public Instance Methods" "= reopen Object" "refm/api/src/minitest/spec.rd")
(find-rurima "--- must_throw(tag) -> true" "== Public Instance Methods" "= reopen Object" "refm/api/src/minitest/spec.rd")
(find-rurima "= reopen Kernel" "refm/api/src/minitest/spec.rd")
(find-rurima "== Private Instance Methods" "= reopen Kernel" "refm/api/src/minitest/spec.rd")
(find-rurima "--- describe(desc){ ... }" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/minitest/spec.rd")
(find-rurima "= class MiniTest::Unit::TestCase" "refm/api/src/minitest/spec.rd")
(find-rurima "= class MiniTest::Spec < MiniTest::Unit::TestCase" "refm/api/src/minitest/spec.rd")
(find-rurima "== Singleton Methods" "= class MiniTest::Spec < MiniTest::Unit::TestCase" "refm/api/src/minitest/spec.rd")
(find-rurima "--- new(name)" "== Singleton Methods" "= class MiniTest::Spec < MiniTest::Unit::TestCase" "refm/api/src/minitest/spec.rd")
(find-rurima "--- current -> MiniTest::Spec" "== Singleton Methods" "= class MiniTest::Spec < MiniTest::Unit::TestCase" "refm/api/src/minitest/spec.rd")
(find-rurima "--- before(type = :each){ ... } -> Proc" "== Singleton Methods" "= class MiniTest::Spec < MiniTest::Unit::TestCase" "refm/api/src/minitest/spec.rd")
(find-rurima "--- after(type = :each){ ... } -> Proc" "== Singleton Methods" "= class MiniTest::Spec < MiniTest::Unit::TestCase" "refm/api/src/minitest/spec.rd")
(find-rurima "--- it(desc){ ... } -> ()" "== Singleton Methods" "= class MiniTest::Spec < MiniTest::Unit::TestCase" "refm/api/src/minitest/spec.rd")
(find-rurima "= class MiniTest::Unit" "refm/api/src/minitest/MiniTest__Unit")
(find-rurima "== Public Instance Methods" "= class MiniTest::Unit" "refm/api/src/minitest/MiniTest__Unit")
(find-rurima "--- assertion_count -> Fixnum" "== Public Instance Methods" "= class MiniTest::Unit" "refm/api/src/minitest/MiniTest__Unit")
(find-rurima "--- assertion_count=(count)" "== Public Instance Methods" "= class MiniTest::Unit" "refm/api/src/minitest/MiniTest__Unit")
(find-rurima "--- errors -> Fixnum" "== Public Instance Methods" "= class MiniTest::Unit" "refm/api/src/minitest/MiniTest__Unit")
(find-rurima "--- errors=(count)" "== Public Instance Methods" "= class MiniTest::Unit" "refm/api/src/minitest/MiniTest__Unit")
(find-rurima "--- failures -> Fixnum" "== Public Instance Methods" "= class MiniTest::Unit" "refm/api/src/minitest/MiniTest__Unit")
(find-rurima "--- failures=(count)" "== Public Instance Methods" "= class MiniTest::Unit" "refm/api/src/minitest/MiniTest__Unit")
(find-rurima "--- location(exception) -> String" "== Public Instance Methods" "= class MiniTest::Unit" "refm/api/src/minitest/MiniTest__Unit")
(find-rurima "--- puke(klass, method_name, exception) -> String" "== Public Instance Methods" "= class MiniTest::Unit" "refm/api/src/minitest/MiniTest__Unit")
(find-rurima "--- report -> Array" "== Public Instance Methods" "= class MiniTest::Unit" "refm/api/src/minitest/MiniTest__Unit")
(find-rurima "--- report=(list)" "== Public Instance Methods" "= class MiniTest::Unit" "refm/api/src/minitest/MiniTest__Unit")
(find-rurima "--- run(args = []) -> Fixnum | nil" "== Public Instance Methods" "= class MiniTest::Unit" "refm/api/src/minitest/MiniTest__Unit")
(find-rurima "--- run_test_suites(filter = /./) -> Array" "== Public Instance Methods" "= class MiniTest::Unit" "refm/api/src/minitest/MiniTest__Unit")
(find-rurima "--- skips -> Fixnum" "== Public Instance Methods" "= class MiniTest::Unit" "refm/api/src/minitest/MiniTest__Unit")
(find-rurima "--- skips=(count)" "== Public Instance Methods" "= class MiniTest::Unit" "refm/api/src/minitest/MiniTest__Unit")
(find-rurima "--- test_count -> Fixnum" "== Public Instance Methods" "= class MiniTest::Unit" "refm/api/src/minitest/MiniTest__Unit")
(find-rurima "--- test_count=(count)" "== Public Instance Methods" "= class MiniTest::Unit" "refm/api/src/minitest/MiniTest__Unit")
(find-rurima "--- process_args(args = []) -> Hash" "== Public Instance Methods" "= class MiniTest::Unit" "refm/api/src/minitest/MiniTest__Unit")
(find-rurima "--- start_time -> Time" "== Public Instance Methods" "= class MiniTest::Unit" "refm/api/src/minitest/MiniTest__Unit")
(find-rurima "--- start_time=(time)" "== Public Instance Methods" "= class MiniTest::Unit" "refm/api/src/minitest/MiniTest__Unit")
(find-rurima "--- status(io = @@out) -> ()" "== Public Instance Methods" "= class MiniTest::Unit" "refm/api/src/minitest/MiniTest__Unit")
(find-rurima "== Singleton Methods" "= class MiniTest::Unit" "refm/api/src/minitest/MiniTest__Unit")
(find-rurima "--- autorun -> true" "== Singleton Methods" "= class MiniTest::Unit" "refm/api/src/minitest/MiniTest__Unit")
(find-rurima "--- output=(stream)" "== Singleton Methods" "= class MiniTest::Unit" "refm/api/src/minitest/MiniTest__Unit")
(find-rurima "== Constants" "= class MiniTest::Unit" "refm/api/src/minitest/MiniTest__Unit")
(find-rurima "--- VERSION -> String" "== Constants" "= class MiniTest::Unit" "refm/api/src/minitest/MiniTest__Unit")
(find-rurima "=== 使い方" "refm/api/src/minitest/unit.rd")
(find-rurima "=== 使用可能なオプション" "refm/api/src/minitest/unit.rd")
(find-rurima "=== いつテストは実行されるか" "refm/api/src/minitest/unit.rd")
(find-rurima "=== Error と Failure と Skip の違い" "refm/api/src/minitest/unit.rd")
(find-rurima "=== test/unit からの移行" "refm/api/src/minitest/unit.rd")
(find-rurima "= module MiniTest" "refm/api/src/minitest/unit.rd")
(find-rurima "== Singleton Methods" "= module MiniTest" "refm/api/src/minitest/unit.rd")
(find-rurima "--- filter_backtrace(backtrace) -> Array" "== Singleton Methods" "= module MiniTest" "refm/api/src/minitest/unit.rd")
(find-rurima "== Constants" "= module MiniTest" "refm/api/src/minitest/unit.rd")
(find-rurima "--- MINI_DIR -> String" "== Constants" "= module MiniTest" "refm/api/src/minitest/unit.rd")
(find-rurima "= class MiniTest::Assertion < Exception" "refm/api/src/minitest/unit.rd")
(find-rurima "= class MiniTest::Skip < MiniTest::Assertion" "refm/api/src/minitest/unit.rd")
(find-rurima "= class MiniTest::Unit::TestCase" "refm/api/src/minitest/MiniTest__Unit__TestCase")
(find-rurima "== Public Instance Methods" "= class MiniTest::Unit::TestCase" "refm/api/src/minitest/MiniTest__Unit__TestCase")
(find-rurima "--- __name__ -> String" "== Public Instance Methods" "= class MiniTest::Unit::TestCase" "refm/api/src/minitest/MiniTest__Unit__TestCase")
(find-rurima "--- name -> String" "== Public Instance Methods" "= class MiniTest::Unit::TestCase" "refm/api/src/minitest/MiniTest__Unit__TestCase")
(find-rurima "--- passed? -> bool" "== Public Instance Methods" "= class MiniTest::Unit::TestCase" "refm/api/src/minitest/MiniTest__Unit__TestCase")
(find-rurima "--- run(runner) -> String" "== Public Instance Methods" "= class MiniTest::Unit::TestCase" "refm/api/src/minitest/MiniTest__Unit__TestCase")
(find-rurima "--- setup" "== Public Instance Methods" "= class MiniTest::Unit::TestCase" "refm/api/src/minitest/MiniTest__Unit__TestCase")
(find-rurima "--- teardown" "== Public Instance Methods" "= class MiniTest::Unit::TestCase" "refm/api/src/minitest/MiniTest__Unit__TestCase")
(find-rurima "== Singleton Methods" "= class MiniTest::Unit::TestCase" "refm/api/src/minitest/MiniTest__Unit__TestCase")
(find-rurima "--- new(name)" "== Singleton Methods" "= class MiniTest::Unit::TestCase" "refm/api/src/minitest/MiniTest__Unit__TestCase")
(find-rurima "--- inherited(klass)" "== Singleton Methods" "= class MiniTest::Unit::TestCase" "refm/api/src/minitest/MiniTest__Unit__TestCase")
(find-rurima "--- reset" "== Singleton Methods" "= class MiniTest::Unit::TestCase" "refm/api/src/minitest/MiniTest__Unit__TestCase")
(find-rurima "--- test_methods -> Array" "== Singleton Methods" "= class MiniTest::Unit::TestCase" "refm/api/src/minitest/MiniTest__Unit__TestCase")
(find-rurima "--- test_order -> Symbol" "== Singleton Methods" "= class MiniTest::Unit::TestCase" "refm/api/src/minitest/MiniTest__Unit__TestCase")
(find-rurima "--- test_suites -> Array" "== Singleton Methods" "= class MiniTest::Unit::TestCase" "refm/api/src/minitest/MiniTest__Unit__TestCase")
(find-rurima "== Constants" "= class MiniTest::Unit::TestCase" "refm/api/src/minitest/MiniTest__Unit__TestCase")
(find-rurima "--- PASSTHROUGH_EXCEPTIONS -> [Class]" "== Constants" "= class MiniTest::Unit::TestCase" "refm/api/src/minitest/MiniTest__Unit__TestCase")
(find-rurima "--- SUPPORTS_INFO_SIGNAL -> Fixnum | nil" "== Constants" "= class MiniTest::Unit::TestCase" "refm/api/src/minitest/MiniTest__Unit__TestCase")
(find-rurima "= class MiniTest::Mock" "refm/api/src/minitest/mock.rd")
(find-rurima "== Class Methods" "= class MiniTest::Mock" "refm/api/src/minitest/mock.rd")
(find-rurima "--- new" "== Class Methods" "= class MiniTest::Mock" "refm/api/src/minitest/mock.rd")
(find-rurima "== Public Instance Methods" "= class MiniTest::Mock" "refm/api/src/minitest/mock.rd")
(find-rurima "--- expect(name, retval, args = []) -> self" "== Public Instance Methods" "= class MiniTest::Mock" "refm/api/src/minitest/mock.rd")
(find-rurima "--- verify -> true" "== Public Instance Methods" "= class MiniTest::Mock" "refm/api/src/minitest/mock.rd")
(find-rurima "= class MockExpectationError < StandardError" "refm/api/src/minitest/mock.rd")
(find-rurima "=== 例" "refm/api/src/openssl.rd")
(find-rurima "===[a:references] 参考文献" "refm/api/src/openssl.rd")
(find-rurima "= module OpenSSL" "refm/api/src/openssl.rd")
(find-rurima "== Module functions" "= module OpenSSL" "refm/api/src/openssl.rd")
(find-rurima "--- debug -> bool" "== Module functions" "= module OpenSSL" "refm/api/src/openssl.rd")
(find-rurima "--- debug=(b)" "== Module functions" "= module OpenSSL" "refm/api/src/openssl.rd")
(find-rurima "--- errors -> [String]" "== Module functions" "= module OpenSSL" "refm/api/src/openssl.rd")
(find-rurima "== Constants" "= module OpenSSL" "refm/api/src/openssl.rd")
(find-rurima "--- VERSION -> String" "== Constants" "= module OpenSSL" "refm/api/src/openssl.rd")
(find-rurima "--- OPENSSL_VERSION -> String" "== Constants" "= module OpenSSL" "refm/api/src/openssl.rd")
(find-rurima "--- OPENSSL_VERSION_NUMBER -> Integer" "== Constants" "= module OpenSSL" "refm/api/src/openssl.rd")
(find-rurima "= class OpenSSL::OpenSSLError < StandardError" "refm/api/src/openssl.rd")
(find-rurima "=== どちらが読みやすいでしょうか?" "refm/api/src/pp.rd")
(find-rurima "=== 出力のカスタマイズ" "refm/api/src/pp.rd")
(find-rurima "= class PP < PrettyPrint" "refm/api/src/pp.rd")
(find-rurima "== Class Methods" "= class PP < PrettyPrint" "refm/api/src/pp.rd")
(find-rurima "--- pp(obj, out = $>, width = 79)    -> object" "== Class Methods" "= class PP < PrettyPrint" "refm/api/src/pp.rd")
(find-rurima "--- sharing_detection                 -> bool" "== Class Methods" "= class PP < PrettyPrint" "refm/api/src/pp.rd")
(find-rurima "--- sharing_detection=(boolean)" "== Class Methods" "= class PP < PrettyPrint" "refm/api/src/pp.rd")
(find-rurima "--- singleline_pp(obj, out=$>)    -> object" "== Class Methods" "= class PP < PrettyPrint" "refm/api/src/pp.rd")
(find-rurima "== Instance Methods" "= class PP < PrettyPrint" "refm/api/src/pp.rd")
(find-rurima "--- pp(obj)    -> ()" "== Instance Methods" "= class PP < PrettyPrint" "refm/api/src/pp.rd")
(find-rurima "--- object_group(obj) { ... }    -> ()" "== Instance Methods" "= class PP < PrettyPrint" "refm/api/src/pp.rd")
(find-rurima "--- comma_breakable    -> ()" "== Instance Methods" "= class PP < PrettyPrint" "refm/api/src/pp.rd")
(find-rurima "--- seplist(list, sep = lambda { comma_breakable }, iter_method = :each){|e| ...}    -> ()" "== Instance Methods" "= class PP < PrettyPrint" "refm/api/src/pp.rd")
(find-rurima "= reopen Object" "refm/api/src/pp.rd")
(find-rurima "== Instance Methods" "= reopen Object" "refm/api/src/pp.rd")
(find-rurima "--- pretty_print(pp)    -> ()" "== Instance Methods" "= reopen Object" "refm/api/src/pp.rd")
(find-rurima "--- pretty_print_cycle(pp)    -> ()" "== Instance Methods" "= reopen Object" "refm/api/src/pp.rd")
(find-rurima "--- pretty_print_instance_variables    -> [String | Symbol]" "== Instance Methods" "= reopen Object" "refm/api/src/pp.rd")
(find-rurima "--- pretty_print_inspect    -> String" "== Instance Methods" "= reopen Object" "refm/api/src/pp.rd")
(find-rurima "= reopen Kernel" "refm/api/src/pp.rd")
(find-rurima "== Module Functions" "= reopen Kernel" "refm/api/src/pp.rd")
(find-rurima "--- pp(*obj)    -> object" "== Module Functions" "= reopen Kernel" "refm/api/src/pp.rd")
(find-rurima "--- pp(*obj)    -> nil" "== Module Functions" "= reopen Kernel" "refm/api/src/pp.rd")
(find-rurima "= reopen Object" "refm/api/src/pp.rd")
(find-rurima "== Instance Methods" "= reopen Object" "refm/api/src/pp.rd")
(find-rurima "--- pretty_inspect    -> String" "== Instance Methods" "= reopen Object" "refm/api/src/pp.rd")
(find-rurima "= class YAML::DBM < DBM" "refm/api/src/yaml/dbm.rd")
(find-rurima "== Constants" "= class YAML::DBM < DBM" "refm/api/src/yaml/dbm.rd")
(find-rurima "--- VERSION -> \"0.1\"" "== Constants" "= class YAML::DBM < DBM" "refm/api/src/yaml/dbm.rd")
(find-rurima "== Instance Methods" "= class YAML::DBM < DBM" "refm/api/src/yaml/dbm.rd")
(find-rurima "--- [](key) -> object | nil" "== Instance Methods" "= class YAML::DBM < DBM" "refm/api/src/yaml/dbm.rd")
(find-rurima "--- []=(key, value) -> object" "== Instance Methods" "= class YAML::DBM < DBM" "refm/api/src/yaml/dbm.rd")
(find-rurima "--- store(key, value) -> object" "== Instance Methods" "= class YAML::DBM < DBM" "refm/api/src/yaml/dbm.rd")
(find-rurima "--- delete(key) -> object | nil" "== Instance Methods" "= class YAML::DBM < DBM" "refm/api/src/yaml/dbm.rd")
(find-rurima "--- delete_if {|key, val| ... } -> YAML::DBM" "== Instance Methods" "= class YAML::DBM < DBM" "refm/api/src/yaml/dbm.rd")
(find-rurima "--- each                        -> YAML::DBM" "== Instance Methods" "= class YAML::DBM < DBM" "refm/api/src/yaml/dbm.rd")
(find-rurima "--- each_pair {|key, val| ... } -> YAML::DBM" "== Instance Methods" "= class YAML::DBM < DBM" "refm/api/src/yaml/dbm.rd")
(find-rurima "--- each_value {|val| ... } -> YAML::DBM" "== Instance Methods" "= class YAML::DBM < DBM" "refm/api/src/yaml/dbm.rd")
(find-rurima "--- fetch(key, ifnone = nil) -> object" "== Instance Methods" "= class YAML::DBM < DBM" "refm/api/src/yaml/dbm.rd")
(find-rurima "--- has_value?(value) -> bool" "== Instance Methods" "= class YAML::DBM < DBM" "refm/api/src/yaml/dbm.rd")
(find-rurima "--- shift -> [String, object]" "== Instance Methods" "= class YAML::DBM < DBM" "refm/api/src/yaml/dbm.rd")
(find-rurima "--- index(value) -> String | nil" "== Instance Methods" "= class YAML::DBM < DBM" "refm/api/src/yaml/dbm.rd")
(find-rurima "--- invert -> {object => String}" "== Instance Methods" "= class YAML::DBM < DBM" "refm/api/src/yaml/dbm.rd")
(find-rurima "--- reject {|key, val| ... } -> {String => object}" "== Instance Methods" "= class YAML::DBM < DBM" "refm/api/src/yaml/dbm.rd")
(find-rurima "--- replace(other) -> YAML::DBM" "== Instance Methods" "= class YAML::DBM < DBM" "refm/api/src/yaml/dbm.rd")
(find-rurima "--- select(*keys) -> [object]" "== Instance Methods" "= class YAML::DBM < DBM" "refm/api/src/yaml/dbm.rd")
(find-rurima "--- select { ... } -> [[String, object]]" "== Instance Methods" "= class YAML::DBM < DBM" "refm/api/src/yaml/dbm.rd")
(find-rurima "--- update(other) -> YAML::DBM" "== Instance Methods" "= class YAML::DBM < DBM" "refm/api/src/yaml/dbm.rd")
(find-rurima "--- to_a -> [[String, object]]" "== Instance Methods" "= class YAML::DBM < DBM" "refm/api/src/yaml/dbm.rd")
(find-rurima "--- to_hash -> Hash" "== Instance Methods" "= class YAML::DBM < DBM" "refm/api/src/yaml/dbm.rd")
(find-rurima "--- values -> object" "== Instance Methods" "= class YAML::DBM < DBM" "refm/api/src/yaml/dbm.rd")
(find-rurima "--- values_at(*keys) -> [object]" "== Instance Methods" "= class YAML::DBM < DBM" "refm/api/src/yaml/dbm.rd")
(find-rurima "= reopen Syck" "refm/api/src/yaml/stringio.rd")
(find-rurima "= reopen YAML" "refm/api/src/yaml/stringio.rd")
(find-rurima "== Class Methods" "= reopen YAML" "refm/api/src/yaml/stringio.rd")
(find-rurima "--- make_stream(io) -> StringIO | IO" "== Class Methods" "= reopen YAML" "refm/api/src/yaml/stringio.rd")
(find-rurima "== Singleton Methods" "refm/api/src/yaml/YAML.inside")
(find-rurima "--- add_builtin_type(type_tag){|type, val| ...} -> nil" "== Singleton Methods" "refm/api/src/yaml/YAML.inside")
(find-rurima "--- add_domain_type(domain, type_tag){|type, val| ...} -> nil" "== Singleton Methods" "refm/api/src/yaml/YAML.inside")
(find-rurima "--- add_private_type(type_re){|type, val| ...} -> nil" "== Singleton Methods" "refm/api/src/yaml/YAML.inside")
(find-rurima "--- add_ruby_type(type_tag){|type, val| ...} -> nil" "== Singleton Methods" "refm/api/src/yaml/YAML.inside")
(find-rurima "--- detect_implicit(val) -> String" "== Singleton Methods" "refm/api/src/yaml/YAML.inside")
(find-rurima "--- dump(obj, io = nil) -> String | IO" "== Singleton Methods" "refm/api/src/yaml/YAML.inside")
(find-rurima "--- dump_stream(*objs) -> String" "== Singleton Methods" "refm/api/src/yaml/YAML.inside")
(find-rurima "--- each_document(io) {|obj| ...} -> nil" "== Singleton Methods" "refm/api/src/yaml/YAML.inside")
(find-rurima "--- load_documents(io) {|obj| ...} -> nil" "== Singleton Methods" "refm/api/src/yaml/YAML.inside")
(find-rurima "--- each_node(io) {|obj| ...} -> nil" "== Singleton Methods" "refm/api/src/yaml/YAML.inside")
(find-rurima "--- load(io)  -> object" "== Singleton Methods" "refm/api/src/yaml/YAML.inside")
(find-rurima "--- load(str) -> object" "== Singleton Methods" "refm/api/src/yaml/YAML.inside")
(find-rurima "--- load_file(file) -> object" "== Singleton Methods" "refm/api/src/yaml/YAML.inside")
(find-rurima "--- load_stream(io) -> object" "== Singleton Methods" "refm/api/src/yaml/YAML.inside")
(find-rurima "--- object_maker(obj_class, val) -> object" "== Singleton Methods" "refm/api/src/yaml/YAML.inside")
(find-rurima "--- object_maker(obj_class, val, is_attr = false) -> object" "== Singleton Methods" "refm/api/src/yaml/YAML.inside")
(find-rurima "--- parse(io) -> Syck::Node" "== Singleton Methods" "refm/api/src/yaml/YAML.inside")
(find-rurima "--- parse(io) -> YAML::Syck::Node" "== Singleton Methods" "refm/api/src/yaml/YAML.inside")
(find-rurima "--- parse_documents(io) {|obj| ...} -> nil" "== Singleton Methods" "refm/api/src/yaml/YAML.inside")
(find-rurima "--- parse_file(file_path)" "== Singleton Methods" "refm/api/src/yaml/YAML.inside")
(find-rurima "--- quick_emit(oid, opts={}) {|obj| ...} -> String" "== Singleton Methods" "refm/api/src/yaml/YAML.inside")
(find-rurima "--- read_type_class(type, obj_class) -> [String, Class]" "== Singleton Methods" "refm/api/src/yaml/YAML.inside")
(find-rurima "--- tagurize(val) -> String" "== Singleton Methods" "refm/api/src/yaml/YAML.inside")
(find-rurima "--- transfer(type_id, obj) -> object" "== Singleton Methods" "refm/api/src/yaml/YAML.inside")
(find-rurima "--- try_implicit(obj) -> object" "== Singleton Methods" "refm/api/src/yaml/YAML.inside")
(find-rurima "--- emitter -> Syck::Emitter" "== Singleton Methods" "refm/api/src/yaml/YAML.inside")
(find-rurima "--- emitter -> YAML::Syck::Emitter" "== Singleton Methods" "refm/api/src/yaml/YAML.inside")
(find-rurima "--- generic_parser -> Syck::Parser" "== Singleton Methods" "refm/api/src/yaml/YAML.inside")
(find-rurima "--- generic_parser -> YAML::Syck::Parser" "== Singleton Methods" "refm/api/src/yaml/YAML.inside")
(find-rurima "--- parser -> Syck::Parser" "== Singleton Methods" "refm/api/src/yaml/YAML.inside")
(find-rurima "--- parser -> YAML::Syck::Parser" "== Singleton Methods" "refm/api/src/yaml/YAML.inside")
(find-rurima "--- resolver -> Syck::DefaultResolver" "== Singleton Methods" "refm/api/src/yaml/YAML.inside")
(find-rurima "--- resolver -> YAML::Syck::DefaultResolver" "== Singleton Methods" "refm/api/src/yaml/YAML.inside")
(find-rurima "= class Syck::YPath" "refm/api/src/yaml/ypath.rd")
(find-rurima "= class YAML::YPath" "refm/api/src/yaml/ypath.rd")
(find-rurima "=== 参考" "= class YAML::YPath" "refm/api/src/yaml/ypath.rd")
(find-rurima "== class methods" "= class YAML::YPath" "refm/api/src/yaml/ypath.rd")
(find-rurima "--- new(str) -> Syck::YPath" "== class methods" "= class YAML::YPath" "refm/api/src/yaml/ypath.rd")
(find-rurima "--- new(str) -> YAML::YPath" "== class methods" "= class YAML::YPath" "refm/api/src/yaml/ypath.rd")
(find-rurima "--- each_path(str) {|ypath| ...} -> Array" "== class methods" "= class YAML::YPath" "refm/api/src/yaml/ypath.rd")
(find-rurima "== instance methods" "= class YAML::YPath" "refm/api/src/yaml/ypath.rd")
(find-rurima "--- segments -> [String]" "== instance methods" "= class YAML::YPath" "refm/api/src/yaml/ypath.rd")
(find-rurima "--- segments=(val)" "== instance methods" "= class YAML::YPath" "refm/api/src/yaml/ypath.rd")
(find-rurima "--- predicates -> [String]" "== instance methods" "= class YAML::YPath" "refm/api/src/yaml/ypath.rd")
(find-rurima "--- predicates=(val)" "== instance methods" "= class YAML::YPath" "refm/api/src/yaml/ypath.rd")
(find-rurima "--- flags -> nil" "== instance methods" "= class YAML::YPath" "refm/api/src/yaml/ypath.rd")
(find-rurima "--- flags=(val)" "== instance methods" "= class YAML::YPath" "refm/api/src/yaml/ypath.rd")
(find-rurima "= class YAML::Store < PStore" "refm/api/src/yaml/store.rd")
(find-rurima "== Class Methods" "= class YAML::Store < PStore" "refm/api/src/yaml/store.rd")
(find-rurima "--- new(*options) -> YAML::Store" "== Class Methods" "= class YAML::Store < PStore" "refm/api/src/yaml/store.rd")
(find-rurima "== Instance Methods" "= class YAML::Store < PStore" "refm/api/src/yaml/store.rd")
(find-rurima "--- dump(table) -> String" "== Instance Methods" "= class YAML::Store < PStore" "refm/api/src/yaml/store.rd")
(find-rurima "--- load(content) -> object" "== Instance Methods" "= class YAML::Store < PStore" "refm/api/src/yaml/store.rd")
(find-rurima "--- load_file(file) -> object" "== Instance Methods" "= class YAML::Store < PStore" "refm/api/src/yaml/store.rd")
(find-rurima "--- empty_marshal_checksum -> String" "== Instance Methods" "= class YAML::Store < PStore" "refm/api/src/yaml/store.rd")
(find-rurima "--- empty_marshal_data -> String" "== Instance Methods" "= class YAML::Store < PStore" "refm/api/src/yaml/store.rd")
(find-rurima "--- marshal_dump_supports_canonical_option? -> false" "== Instance Methods" "= class YAML::Store < PStore" "refm/api/src/yaml/store.rd")
(find-rurima "--- transaction(read_only = false) -> ()" "== Instance Methods" "= class YAML::Store < PStore" "refm/api/src/yaml/store.rd")
(find-rurima "== Constants" "= class YAML::Store < PStore" "refm/api/src/yaml/store.rd")
(find-rurima "--- EMPTY_MARSHAL_CHECKSUM -> String" "== Constants" "= class YAML::Store < PStore" "refm/api/src/yaml/store.rd")
(find-rurima "--- EMPTY_MARSHAL_DATA -> String" "== Constants" "= class YAML::Store < PStore" "refm/api/src/yaml/store.rd")
(find-rurima "= reopen Syck" "refm/api/src/yaml/tag.rd")
(find-rurima "= reopen YAML" "refm/api/src/yaml/tag.rd")
(find-rurima "== Class Methods" "= reopen YAML" "refm/api/src/yaml/tag.rd")
(find-rurima "--- tag_class(tag, cls) -> ()" "== Class Methods" "= reopen YAML" "refm/api/src/yaml/tag.rd")
(find-rurima "--- tagged_classes -> {String => Class}" "== Class Methods" "= reopen YAML" "refm/api/src/yaml/tag.rd")
(find-rurima "= reopen Kernel" "refm/api/src/yaml/Kernel")
(find-rurima "== Private Instance Methods" "= reopen Kernel" "refm/api/src/yaml/Kernel")
(find-rurima "--- y(obj) -> object" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/yaml/Kernel")
(find-rurima "= reopen Class" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "== Instance Methods" "= reopen Class" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- to_yaml(opts = {}) -> String" "== Instance Methods" "= reopen Class" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "= reopen Object" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "== Class Methods" "= reopen Object" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- yaml_tag_subclasses? -> true" "== Class Methods" "= reopen Object" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "== Instance Methods" "= reopen Object" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- taguri -> String" "== Instance Methods" "= reopen Object" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- taguri=(val)" "== Instance Methods" "= reopen Object" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- to_yaml(opts = {})" "== Instance Methods" "= reopen Object" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- to_yaml_style -> nil" "== Instance Methods" "= reopen Object" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- to_yaml_properties -> [String]" "== Instance Methods" "= reopen Object" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "= reopen Hash" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "== Class Methods" "= reopen Hash" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- yaml_tag_subclasses? -> true" "== Class Methods" "= reopen Hash" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "== Instance Methods" "= reopen Hash" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- taguri -> String" "== Instance Methods" "= reopen Hash" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- taguri=(val)" "== Instance Methods" "= reopen Hash" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- to_yaml(opts = {})" "== Instance Methods" "= reopen Hash" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- yaml_initialize(tag, val)" "== Instance Methods" "= reopen Hash" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "= reopen Struct" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "== Class Methods" "= reopen Struct" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- yaml_new(klass, tag, val)" "== Class Methods" "= reopen Struct" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- yaml_tag_class_name -> String" "== Class Methods" "= reopen Struct" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- yaml_tag_subclasses? -> true" "== Class Methods" "= reopen Struct" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- yaml_tag_read_class(name) -> String" "== Class Methods" "= reopen Struct" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "== Instance Methods" "= reopen Struct" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- taguri -> String" "== Instance Methods" "= reopen Struct" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- taguri=(val)" "== Instance Methods" "= reopen Struct" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- to_yaml(opts = {})" "== Instance Methods" "= reopen Struct" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "= reopen Array" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "== Class Methods" "= reopen Array" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- yaml_tag_subclasses? -> true" "== Class Methods" "= reopen Array" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "== Instance Methods" "= reopen Array" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- taguri -> String" "== Instance Methods" "= reopen Array" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- taguri=(val)" "== Instance Methods" "= reopen Array" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- to_yaml(opts = {})" "== Instance Methods" "= reopen Array" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- yaml_initialize(tag, val)" "== Instance Methods" "= reopen Array" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "= reopen Exception" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "== Class Methods" "= reopen Exception" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- yaml_new(klass, tag, val)" "== Class Methods" "= reopen Exception" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- yaml_tag_subclasses? -> true" "== Class Methods" "= reopen Exception" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "== Instance Methods" "= reopen Exception" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- taguri -> String" "== Instance Methods" "= reopen Exception" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- taguri=(val)" "== Instance Methods" "= reopen Exception" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- to_yaml(opts = {})" "== Instance Methods" "= reopen Exception" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "= reopen String" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "== Class Methods" "= reopen String" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- yaml_new(klass, tag, val)" "== Class Methods" "= reopen String" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- yaml_tag_subclasses? -> true" "== Class Methods" "= reopen String" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "== Instance Methods" "= reopen String" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- is_complex_yaml? -> Integer | nil" "== Instance Methods" "= reopen String" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- is_binary_data? -> true | nil" "== Instance Methods" "= reopen String" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- taguri -> String" "== Instance Methods" "= reopen String" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- taguri=(val)" "== Instance Methods" "= reopen String" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- to_yaml(opts = {})" "== Instance Methods" "= reopen String" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "= reopen Symbol" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "== Class Methods" "= reopen Symbol" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- yaml_new(klass, tag, val)" "== Class Methods" "= reopen Symbol" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- yaml_tag_subclasses? -> true" "== Class Methods" "= reopen Symbol" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "== Instance Methods" "= reopen Symbol" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- taguri -> String" "== Instance Methods" "= reopen Symbol" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- taguri=(val)" "== Instance Methods" "= reopen Symbol" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- to_yaml(opts = {})" "== Instance Methods" "= reopen Symbol" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "= reopen Range" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "== Class Methods" "= reopen Range" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- yaml_new(klass, tag, val)" "== Class Methods" "= reopen Range" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- yaml_tag_subclasses? -> true" "== Class Methods" "= reopen Range" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "== Instance Methods" "= reopen Range" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- taguri -> String" "== Instance Methods" "= reopen Range" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- taguri=(val)" "== Instance Methods" "= reopen Range" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- to_yaml(opts = {})" "== Instance Methods" "= reopen Range" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "= reopen Regexp" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "== Class Methods" "= reopen Regexp" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- yaml_new(klass, tag, val)" "== Class Methods" "= reopen Regexp" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- yaml_tag_subclasses? -> true" "== Class Methods" "= reopen Regexp" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "== Instance Methods" "= reopen Regexp" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- taguri -> String" "== Instance Methods" "= reopen Regexp" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- taguri=(val)" "== Instance Methods" "= reopen Regexp" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- to_yaml(opts = {})" "== Instance Methods" "= reopen Regexp" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "= reopen Time" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "== Class Methods" "= reopen Time" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- yaml_new(klass, tag, val)" "== Class Methods" "= reopen Time" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- yaml_tag_subclasses? -> true" "== Class Methods" "= reopen Time" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "== Instance Methods" "= reopen Time" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- taguri -> String" "== Instance Methods" "= reopen Time" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- taguri=(val)" "== Instance Methods" "= reopen Time" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- to_yaml(opts = {})" "== Instance Methods" "= reopen Time" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "= reopen Date" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "== Class Methods" "= reopen Date" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- yaml_tag_subclasses? -> true" "== Class Methods" "= reopen Date" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "== Instance Methods" "= reopen Date" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- taguri -> String" "== Instance Methods" "= reopen Date" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- taguri=(val)" "== Instance Methods" "= reopen Date" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- to_yaml(opts = {})" "== Instance Methods" "= reopen Date" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "= reopen Integer" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "== Class Methods" "= reopen Integer" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- yaml_tag_subclasses? -> true" "== Class Methods" "= reopen Integer" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "== Instance Methods" "= reopen Integer" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- taguri -> String" "== Instance Methods" "= reopen Integer" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- taguri=(val)" "== Instance Methods" "= reopen Integer" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- to_yaml(opts = {})" "== Instance Methods" "= reopen Integer" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "= reopen Float" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "== Class Methods" "= reopen Float" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- yaml_tag_subclasses? -> true" "== Class Methods" "= reopen Float" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "== Instance Methods" "= reopen Float" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- taguri -> String" "== Instance Methods" "= reopen Float" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- taguri=(val)" "== Instance Methods" "= reopen Float" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- to_yaml(opts = {})" "== Instance Methods" "= reopen Float" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "= reopen TrueClass" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "== Class Methods" "= reopen TrueClass" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- yaml_tag_subclasses? -> true" "== Class Methods" "= reopen TrueClass" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "== Instance Methods" "= reopen TrueClass" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- taguri -> String" "== Instance Methods" "= reopen TrueClass" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- taguri=(val)" "== Instance Methods" "= reopen TrueClass" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- to_yaml(opts = {})" "== Instance Methods" "= reopen TrueClass" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "= reopen FalseClass" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "== Class Methods" "= reopen FalseClass" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- yaml_tag_subclasses? -> true" "== Class Methods" "= reopen FalseClass" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "== Instance Methods" "= reopen FalseClass" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- taguri -> String" "== Instance Methods" "= reopen FalseClass" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- taguri=(val)" "== Instance Methods" "= reopen FalseClass" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- to_yaml(opts = {})" "== Instance Methods" "= reopen FalseClass" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "= reopen NilClass" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "== Class Methods" "= reopen NilClass" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- yaml_tag_subclasses? -> true" "== Class Methods" "= reopen NilClass" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "== Instance Methods" "= reopen NilClass" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- taguri -> String" "== Instance Methods" "= reopen NilClass" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- taguri=(val)" "== Instance Methods" "= reopen NilClass" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "--- to_yaml(opts = {})" "== Instance Methods" "= reopen NilClass" "refm/api/src/yaml/rubytypes.rd")
(find-rurima "= class Syck::Error < StandardError" "refm/api/src/yaml/error.rd")
(find-rurima "= class YAML::Error < StandardError" "refm/api/src/yaml/error.rd")
(find-rurima "= class Syck::ParseError < Syck::Error" "refm/api/src/yaml/error.rd")
(find-rurima "= class YAML::ParseError < YAML::Error" "refm/api/src/yaml/error.rd")
(find-rurima "= class Syck::TypeError < StandardError" "refm/api/src/yaml/error.rd")
(find-rurima "= class YAML::TypeError < StandardError" "refm/api/src/yaml/error.rd")
(find-rurima "= reopen Syck" "refm/api/src/yaml/constants.rd")
(find-rurima "= reopen YAML" "refm/api/src/yaml/constants.rd")
(find-rurima "== Constants" "= reopen YAML" "refm/api/src/yaml/constants.rd")
(find-rurima "--- VERSION -> \"0.60\"" "== Constants" "= reopen YAML" "refm/api/src/yaml/constants.rd")
(find-rurima "--- SUPPORTED_YAML_VERSIONS -> [\"1.0\"]" "== Constants" "= reopen YAML" "refm/api/src/yaml/constants.rd")
(find-rurima "--- DEFAULTS -> Hash" "== Constants" "= reopen YAML" "refm/api/src/yaml/constants.rd")
(find-rurima "= class Syck::YamlNode" "refm/api/src/yaml/yamlnode.rd")
(find-rurima "= class YAML::YamlNode" "refm/api/src/yaml/yamlnode.rd")
(find-rurima "== class methods" "= class YAML::YamlNode" "refm/api/src/yaml/yamlnode.rd")
(find-rurima "--- new(type, val) -> Syck::YamlNode" "== class methods" "= class YAML::YamlNode" "refm/api/src/yaml/yamlnode.rd")
(find-rurima "--- new(type, val) -> YAML::YamlNode" "== class methods" "= class YAML::YamlNode" "refm/api/src/yaml/yamlnode.rd")
(find-rurima "== instance methods" "= class YAML::YamlNode" "refm/api/src/yaml/yamlnode.rd")
(find-rurima "--- anchor -> object" "== instance methods" "= class YAML::YamlNode" "refm/api/src/yaml/yamlnode.rd")
(find-rurima "--- anchor=(val)" "== instance methods" "= class YAML::YamlNode" "refm/api/src/yaml/yamlnode.rd")
(find-rurima "--- kind -> \"map\" | \"seq\" | \"scalar\"" "== instance methods" "= class YAML::YamlNode" "refm/api/src/yaml/yamlnode.rd")
(find-rurima "--- kind=(val)" "== instance methods" "= class YAML::YamlNode" "refm/api/src/yaml/yamlnode.rd")
(find-rurima "--- transform -> object" "== instance methods" "= class YAML::YamlNode" "refm/api/src/yaml/yamlnode.rd")
(find-rurima "--- type_id -> String" "== instance methods" "= class YAML::YamlNode" "refm/api/src/yaml/yamlnode.rd")
(find-rurima "--- type_id=(val)" "== instance methods" "= class YAML::YamlNode" "refm/api/src/yaml/yamlnode.rd")
(find-rurima "--- value -> String | Array | Hash" "== instance methods" "= class YAML::YamlNode" "refm/api/src/yaml/yamlnode.rd")
(find-rurima "--- value=(val)" "== instance methods" "= class YAML::YamlNode" "refm/api/src/yaml/yamlnode.rd")
(find-rurima "= module Syck::BaseNode" "refm/api/src/yaml/basenode.rd")
(find-rurima "= module YAML::BaseNode" "refm/api/src/yaml/basenode.rd")
(find-rurima "== instance methods" "= module YAML::BaseNode" "refm/api/src/yaml/basenode.rd")
(find-rurima "--- [](*key) -> object | [object] | nil" "== instance methods" "= module YAML::BaseNode" "refm/api/src/yaml/basenode.rd")
(find-rurima "--- at(segment) -> object | nil" "== instance methods" "= module YAML::BaseNode" "refm/api/src/yaml/basenode.rd")
(find-rurima "--- children -> [object]" "== instance methods" "= module YAML::BaseNode" "refm/api/src/yaml/basenode.rd")
(find-rurima "--- children_with_index -> [[object, Integer]]" "== instance methods" "= module YAML::BaseNode" "refm/api/src/yaml/basenode.rd")
(find-rurima "--- emit -> String" "== instance methods" "= module YAML::BaseNode" "refm/api/src/yaml/basenode.rd")
(find-rurima "--- match_path(ypath_str) -> Array" "== instance methods" "= module YAML::BaseNode" "refm/api/src/yaml/basenode.rd")
(find-rurima "--- match_segment(ypath, depth) -> Array" "== instance methods" "= module YAML::BaseNode" "refm/api/src/yaml/basenode.rd")
(find-rurima "--- search(ypath_str) -> [String]" "== instance methods" "= module YAML::BaseNode" "refm/api/src/yaml/basenode.rd")
(find-rurima "--- select(ypath_str) -> [YAML::Syck::Node]" "== instance methods" "= module YAML::BaseNode" "refm/api/src/yaml/basenode.rd")
(find-rurima "--- select!(ypath_str) -> [object]" "== instance methods" "= module YAML::BaseNode" "refm/api/src/yaml/basenode.rd")
(find-rurima "= class Syck::Stream < Object" "refm/api/src/yaml/stream.rd")
(find-rurima "= class YAML::Stream < Object" "refm/api/src/yaml/stream.rd")
(find-rurima "=== 参考" "= class YAML::Stream < Object" "refm/api/src/yaml/stream.rd")
(find-rurima "== class methods" "= class YAML::Stream < Object" "refm/api/src/yaml/stream.rd")
(find-rurima "--- new(opts = {}) -> Syck::Stream" "== class methods" "= class YAML::Stream < Object" "refm/api/src/yaml/stream.rd")
(find-rurima "--- new(opts = {}) -> YAML::Stream" "== class methods" "= class YAML::Stream < Object" "refm/api/src/yaml/stream.rd")
(find-rurima "== instance methods" "= class YAML::Stream < Object" "refm/api/src/yaml/stream.rd")
(find-rurima "--- [](i) -> object" "== instance methods" "= class YAML::Stream < Object" "refm/api/src/yaml/stream.rd")
(find-rurima "--- add(doc) -> ()" "== instance methods" "= class YAML::Stream < Object" "refm/api/src/yaml/stream.rd")
(find-rurima "--- edit(doc_num, doc) -> ()" "== instance methods" "= class YAML::Stream < Object" "refm/api/src/yaml/stream.rd")
(find-rurima "--- emit(io = nil) -> IO | String" "== instance methods" "= class YAML::Stream < Object" "refm/api/src/yaml/stream.rd")
(find-rurima "--- documents -> Array" "== instance methods" "= class YAML::Stream < Object" "refm/api/src/yaml/stream.rd")
(find-rurima "--- documents=(val)" "== instance methods" "= class YAML::Stream < Object" "refm/api/src/yaml/stream.rd")
(find-rurima "--- options -> {Symbol => object}" "== instance methods" "= class YAML::Stream < Object" "refm/api/src/yaml/stream.rd")
(find-rurima "--- options=(val)" "== instance methods" "= class YAML::Stream < Object" "refm/api/src/yaml/stream.rd")
(find-rurima "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- A1 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- A3 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- B2 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- BACKSPACE -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- BEG -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- BREAK -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- BTAB -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- C1 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- C3 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- CANCEL -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- CATAB -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- CLEAR -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- CLOSE -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- COMMAND -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- COPY -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- CREATE -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- CTAB -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- DC -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- DL -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- DOWN -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- EIC -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- END -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- ENTER -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- EOL -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- EOS -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- EXIT -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- F0 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- F1 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- F10 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- F11 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- F12 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- F13 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- F14 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- F15 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- F16 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- F17 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- F18 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- F19 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- F2 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- F20 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- F21 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- F22 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- F23 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- F24 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- F25 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- F26 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- F27 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- F28 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- F29 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- F3 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- F30 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- F31 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- F32 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- F33 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- F34 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- F35 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- F36 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- F37 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- F38 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- F39 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- F4 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- F40 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- F41 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- F42 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- F43 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- F44 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- F45 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- F46 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- F47 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- F48 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- F49 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- F5 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- F50 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- F51 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- F52 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- F53 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- F54 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- F55 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- F56 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- F57 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- F58 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- F59 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- F6 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- F60 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- F61 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- F62 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- F63 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- F7 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- F8 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- F9 -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- FIND -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- HELP -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- HOME -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- IC -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- IL -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- LEFT -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- LL -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- MARK -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- MAX -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- MESSAGE -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- MIN -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- MOUSE -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- MOVE -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- NEXT -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- NPAGE -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- OPEN -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- OPTIONS -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- PPAGE -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- PREVIOUS -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- PRINT -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- REDO -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- REFERENCE -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- REFRESH -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- REPLACE -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- RESET -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- RESIZE -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- RESTART -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- RESUME -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- RIGHT -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- SAVE -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- SBEG -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- SCANCEL -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- SCOMMAND -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- SCOPY -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- SCREATE -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- SDC -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- SDL -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- SELECT -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- SEND -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- SEOL -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- SEXIT -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- SF -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- SFIND -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- SHELP -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- SHOME -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- SIC -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- SLEFT -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- SMESSAGE -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- SMOVE -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- SNEXT -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- SOPTIONS -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- SPREVIOUS -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- SPRINT -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- SR -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- SREDO -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- SREPLACE -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- SRESET -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- SRIGHT -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- SRSUME -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- SSAVE -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- SSUSPEND -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- STAB -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- SUNDO -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- SUSPEND -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- UNDO -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "--- UP -> Integer" "== Constants" "= module Curses::Key" "refm/api/src/curses/Curses__Key")
(find-rurima "= class Curses::Window < Object" "refm/api/src/curses/Curses__Window")
(find-rurima "== Class Methods" "= class Curses::Window < Object" "refm/api/src/curses/Curses__Window")
(find-rurima "--- new(height, width, y, x) -> Curses::Window" "== Class Methods" "= class Curses::Window < Object" "refm/api/src/curses/Curses__Window")
(find-rurima "== Instance Methods" "= class Curses::Window < Object" "refm/api/src/curses/Curses__Window")
(find-rurima "--- subwin(height, width, y, x) -> Curses::Window" "== Instance Methods" "= class Curses::Window < Object" "refm/api/src/curses/Curses__Window")
(find-rurima "--- close -> nil" "== Instance Methods" "= class Curses::Window < Object" "refm/api/src/curses/Curses__Window")
(find-rurima "--- clear -> nil" "== Instance Methods" "= class Curses::Window < Object" "refm/api/src/curses/Curses__Window")
(find-rurima "--- refresh -> nil" "== Instance Methods" "= class Curses::Window < Object" "refm/api/src/curses/Curses__Window")
(find-rurima "--- box(vertical_char, horizontal_char) -> nil" "== Instance Methods" "= class Curses::Window < Object" "refm/api/src/curses/Curses__Window")
(find-rurima "--- move(y, x) -> nil" "== Instance Methods" "= class Curses::Window < Object" "refm/api/src/curses/Curses__Window")
(find-rurima "--- setpos(y, x) -> nil" "== Instance Methods" "= class Curses::Window < Object" "refm/api/src/curses/Curses__Window")
(find-rurima "--- cury -> Integer" "== Instance Methods" "= class Curses::Window < Object" "refm/api/src/curses/Curses__Window")
(find-rurima "--- curx -> Integer" "== Instance Methods" "= class Curses::Window < Object" "refm/api/src/curses/Curses__Window")
(find-rurima "--- maxy -> Integer" "== Instance Methods" "= class Curses::Window < Object" "refm/api/src/curses/Curses__Window")
(find-rurima "--- maxx -> Integer" "== Instance Methods" "= class Curses::Window < Object" "refm/api/src/curses/Curses__Window")
(find-rurima "--- begy -> Integer" "== Instance Methods" "= class Curses::Window < Object" "refm/api/src/curses/Curses__Window")
(find-rurima "--- begx -> Integer" "== Instance Methods" "= class Curses::Window < Object" "refm/api/src/curses/Curses__Window")
(find-rurima "--- standout -> nil" "== Instance Methods" "= class Curses::Window < Object" "refm/api/src/curses/Curses__Window")
(find-rurima "--- standend -> nil" "== Instance Methods" "= class Curses::Window < Object" "refm/api/src/curses/Curses__Window")
(find-rurima "--- inch -> Integer" "== Instance Methods" "= class Curses::Window < Object" "refm/api/src/curses/Curses__Window")
(find-rurima "--- addch(ch) -> nil" "== Instance Methods" "= class Curses::Window < Object" "refm/api/src/curses/Curses__Window")
(find-rurima "--- insch(ch) -> nil" "== Instance Methods" "= class Curses::Window < Object" "refm/api/src/curses/Curses__Window")
(find-rurima "--- addstr(str) -> nil" "== Instance Methods" "= class Curses::Window < Object" "refm/api/src/curses/Curses__Window")
(find-rurima "--- <<(str)     -> nil" "== Instance Methods" "= class Curses::Window < Object" "refm/api/src/curses/Curses__Window")
(find-rurima "--- getch -> Integer" "== Instance Methods" "= class Curses::Window < Object" "refm/api/src/curses/Curses__Window")
(find-rurima "--- getstr -> String" "== Instance Methods" "= class Curses::Window < Object" "refm/api/src/curses/Curses__Window")
(find-rurima "--- delch -> nil" "== Instance Methods" "= class Curses::Window < Object" "refm/api/src/curses/Curses__Window")
(find-rurima "--- deleteln -> nil" "== Instance Methods" "= class Curses::Window < Object" "refm/api/src/curses/Curses__Window")
(find-rurima "--- attroff(attrs) -> Integer | true" "== Instance Methods" "= class Curses::Window < Object" "refm/api/src/curses/Curses__Window")
(find-rurima "--- attron(attrs) -> Integer | true" "== Instance Methods" "= class Curses::Window < Object" "refm/api/src/curses/Curses__Window")
(find-rurima "--- attrset(attrs)" "== Instance Methods" "= class Curses::Window < Object" "refm/api/src/curses/Curses__Window")
(find-rurima "--- bkgd(ch) -> bool" "== Instance Methods" "= class Curses::Window < Object" "refm/api/src/curses/Curses__Window")
(find-rurima "--- bkgdset(ch) -> nil" "== Instance Methods" "= class Curses::Window < Object" "refm/api/src/curses/Curses__Window")
(find-rurima "--- clrtoeol -> nil" "== Instance Methods" "= class Curses::Window < Object" "refm/api/src/curses/Curses__Window")
(find-rurima "--- color_set(color) -> bool" "== Instance Methods" "= class Curses::Window < Object" "refm/api/src/curses/Curses__Window")
(find-rurima "--- getbkgd -> Integer | nil" "== Instance Methods" "= class Curses::Window < Object" "refm/api/src/curses/Curses__Window")
(find-rurima "--- idlok(bf)" "== Instance Methods" "= class Curses::Window < Object" "refm/api/src/curses/Curses__Window")
(find-rurima "--- insertln -> nil" "== Instance Methods" "= class Curses::Window < Object" "refm/api/src/curses/Curses__Window")
(find-rurima "--- keypad(val) -> bool | nil" "== Instance Methods" "= class Curses::Window < Object" "refm/api/src/curses/Curses__Window")
(find-rurima "--- keypad=(val) -> bool | nil" "== Instance Methods" "= class Curses::Window < Object" "refm/api/src/curses/Curses__Window")
(find-rurima "--- nodelay(val)" "== Instance Methods" "= class Curses::Window < Object" "refm/api/src/curses/Curses__Window")
(find-rurima "--- noutrefresh -> nil" "== Instance Methods" "= class Curses::Window < Object" "refm/api/src/curses/Curses__Window")
(find-rurima "--- resize(lines, cols) -> bool | nil" "== Instance Methods" "= class Curses::Window < Object" "refm/api/src/curses/Curses__Window")
(find-rurima "--- scrl(num)" "== Instance Methods" "= class Curses::Window < Object" "refm/api/src/curses/Curses__Window")
(find-rurima "--- scroll -> bool" "== Instance Methods" "= class Curses::Window < Object" "refm/api/src/curses/Curses__Window")
(find-rurima "--- scrollok(bf) -> nil" "== Instance Methods" "= class Curses::Window < Object" "refm/api/src/curses/Curses__Window")
(find-rurima "--- setscrreg(top, bottom) -> bool" "== Instance Methods" "= class Curses::Window < Object" "refm/api/src/curses/Curses__Window")
(find-rurima "+top+ and +bottom+ are lines numbers of the margin." "== Instance Methods" "= class Curses::Window < Object" "refm/api/src/curses/Curses__Window")
(find-rurima "--- timeout=(delay)" "+top+ and +bottom+ are lines numbers of the margin." "== Instance Methods" "= class Curses::Window < Object" "refm/api/src/curses/Curses__Window")
(find-rurima "= class Curses::MouseEvent < Object" "refm/api/src/curses/Curses__MouseEvent")
(find-rurima "== Instance Methods" "= class Curses::MouseEvent < Object" "refm/api/src/curses/Curses__MouseEvent")
(find-rurima "--- bstate -> Integer" "== Instance Methods" "= class Curses::MouseEvent < Object" "refm/api/src/curses/Curses__MouseEvent")
(find-rurima "--- eid -> Integer" "== Instance Methods" "= class Curses::MouseEvent < Object" "refm/api/src/curses/Curses__MouseEvent")
(find-rurima "--- x -> Integer" "== Instance Methods" "= class Curses::MouseEvent < Object" "refm/api/src/curses/Curses__MouseEvent")
(find-rurima "--- y -> Integer" "== Instance Methods" "= class Curses::MouseEvent < Object" "refm/api/src/curses/Curses__MouseEvent")
(find-rurima "--- z -> Integer" "== Instance Methods" "= class Curses::MouseEvent < Object" "refm/api/src/curses/Curses__MouseEvent")
(find-rurima "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "=== 簡単なつかいかた" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "=== 用語の定義" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "==== 暦日付" "=== 用語の定義" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "==== 年間通算日 (年日付)" "=== 用語の定義" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "==== 暦週日付" "=== 用語の定義" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "==== ユリウス日" "=== 用語の定義" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "==== 修正ユリウス日" "=== 用語の定義" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "== Constants" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- ENGLAND" "== Constants" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- GREGORIAN" "== Constants" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- ITALY" "== Constants" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- JULIAN" "== Constants" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "== Class Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- civil(year = -4712, mon = 1, mday = 1, start = Date::ITALY) -> Date" "== Class Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- new3(year = -4712, mon = 1, mday = 1, start = Date::ITALY) -> Date" "== Class Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- new(year = -4712, mon = 1, mday = 1, start = Date::ITALY) -> Date" "== Class Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- commercial(cwyear = -4712, cweek = 1, cwday = 1, start = Date::ITALY) -> Date" "== Class Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- commercial(cwyear = 1582, cweek = 41, cwday = 5, start = Date::ITALY) -> Date" "== Class Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- neww(cwyear = 1582, cweek = 41, cwday = 5, start = Date::ITALY) -> Date" "== Class Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- gregorian_leap? (year) -> bool" "== Class Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- leap? (year) -> bool" "== Class Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- _httpdate(str) -> Hash" "== Class Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- httpdate(str = 'Mon, 01 Jan -4712 00:00:00 GMT', start = Date::ITALY) -> Date" "== Class Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- _iso8601(str) -> Hash" "== Class Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- iso8601(str = '-4712-01-01', start = Date::ITALY) -> Date" "== Class Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- _jisx0301(str) -> Hash" "== Class Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- jisx0301(str = '-4712-01-01', start = Date::ITALY) -> Date" "== Class Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- jd(jd = 0, start = Date::ITALY) -> Date" "== Class Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- new1(jd = 0, start = Date::ITALY) -> Date" "== Class Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- julian_leap? (year) -> bool" "== Class Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- ordinal(year = -4712, yday = 1, start = Date::ITALY) -> Date" "== Class Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- new2(year = -4712, yday = 1, start = Date::ITALY) -> Date" "== Class Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- _parse(str, complete = true) -> Hash" "== Class Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- _parse(str, complete = false) -> Hash" "== Class Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- parse(str = '-4712-01-01', complete = true, start = Date::ITALY) -> Date" "== Class Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- parse(str = '-4712-01-01', complete = false, start = Date::ITALY) -> Date" "== Class Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- _rfc2822(str) -> Hash" "== Class Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- _rfc822(str) -> Hash" "== Class Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- rfc2822(str = 'Mon, 1 Jan -4712 00:00:00 +0000', start = Date::ITALY) -> Date" "== Class Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- rfc822(str = 'Mon, 1 Jan -4712 00:00:00 +0000', start = Date::ITALY) -> Date" "== Class Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- _rfc3339(str) -> Hash" "== Class Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- rfc3339(str = '-4712-01-01T00:00:00+00:00', start = Date::ITALY) -> Date" "== Class Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- _strptime(str, format = '%F') -> Hash" "== Class Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- strptime(str = '-4712-01-01', format = '%F', start = Date::ITALY) -> Date" "== Class Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- today(start = Date::ITALY) -> Date" "== Class Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- valid_civil? (year, mon, mday, start = Date::GREGORIAN) -> bool" "== Class Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- valid_date? (year, mon, mday, start = Date::GREGORIAN) -> bool" "== Class Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- valid_civil? (year, mon, mday, start = Date::GREGORIAN) -> Numeric | nil" "== Class Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- valid_date? (year, mon, mday, start = Date::GREGORIAN) -> Numeric | nil" "== Class Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- exist? (year, mon, mday, start = Date::GREGORIAN) -> Numeric | nil" "== Class Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- exist3? (year, mon, mday, start = Date::GREGORIAN) -> Numeric | nil" "== Class Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- valid_commercial? (cwyear, cweek, cwday, start = Date::GREGORIAN) -> bool" "== Class Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- valid_commercial? (cwyear, cweek, cwday, start = Date::GREGORIAN) -> Numeric | nil" "== Class Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- existw? (cwyear, cweek, cwday, start = Date::GREGORIAN) -> Numeric | nil" "== Class Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- valid_jd? (jd, start = Date::GREGORIAN) -> bool" "== Class Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- valid_jd? (jd, start = Date::GREGORIAN) -> Numeric | nil" "== Class Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- exist1? (jd, start = Date::GREGORIAN) -> Numeric | nil" "== Class Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- valid_ordinal? (year, yday, start = Date::GREGORIAN) -> bool" "== Class Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- valid_ordinal? (year, yday, start = Date::GREGORIAN) -> Numeric | nil" "== Class Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- exist2? (year, yday, start = Date::GREGORIAN) -> Numeric | nil" "== Class Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- _xmlschema(str) -> Hash" "== Class Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- xmlschema(str = '-4712-01-01', start = Date::ITALY) -> Date" "== Class Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- + (n) -> Date" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- - (x) -> Rational | Date" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- << (n) -> Date" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- <=> (other) -> Integer" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- === (other) -> bool" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- >> (n) -> Date" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- ajd -> Rational" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- amjd -> Rational" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- asctime -> String" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- ctime -> String" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- cwday -> Integer" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- cweek -> Integer" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- cwyear -> Integer" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- downto(min){|date| ...} -> self" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- downto(min) -> Enumerator" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- england -> Date" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- friday? -> bool" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- gregorian -> Date" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- gregorian? -> bool" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- ns? -> bool" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- httpdate -> String" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- iso8601 -> String" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- rfc3339 -> String" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- italy -> Date" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- jd -> Integer" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- jisx0301 -> String" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- julian -> Date" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- julian? -> bool" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- os? -> bool" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- ld -> Integer" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- leap? -> bool" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- mday -> Integer" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- day -> Integer" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- mjd -> Integer" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- mon -> Integer" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- month -> Integer" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- monday? -> bool" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- new_start(start = Date::ITALY) -> Date" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- newsg(start = Date::ITALY) -> Date" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- next_day(n = 1) -> Date" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- next_month(n = 1) -> Date" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- next_year(n = 1) -> Date" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- prev_day(n = 1) -> Date" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- prev_month(n = 1) -> Date" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- prev_year(n = 1) -> Date" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- rfc2822 -> String" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- rfc822 -> String" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- saturday? -> bool" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- start -> Integer" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- sg -> Integer" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- step(limit, step = 1){|date| ...} -> self" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- step(limit, step = 1) -> Enumerator" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- sunday? -> bool" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- strftime(format = '%F') -> String" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- succ -> Date" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- next -> Date" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- thursday? -> bool" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- to_date -> Date" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- to_datetime -> DateTime" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- to_s -> String" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- to_time -> Time" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- tuesday? -> bool" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- upto(max){|date| ...} -> self" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- upto(max) -> Enumerator" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- wday -> Integer" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- wednesday? -> bool" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- xmlschema -> String" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- yday -> Integer" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "--- year -> Integer" "== Instance Methods" "= class Date < Object" "refm/api/src/date/Date")
(find-rurima "= reopen Time" "refm/api/src/date/Date")
(find-rurima "== Instance Methods" "= reopen Time" "refm/api/src/date/Date")
(find-rurima "--- to_date -> Date" "== Instance Methods" "= reopen Time" "refm/api/src/date/Date")
(find-rurima "--- to_datetime -> DateTime" "== Instance Methods" "= reopen Time" "refm/api/src/date/Date")
(find-rurima "--- to_time -> Time" "== Instance Methods" "= reopen Time" "refm/api/src/date/Date")
(find-rurima "= class DateTime < Date" "refm/api/src/date/DateTime")
(find-rurima "=== 簡単なつかいかた" "= class DateTime < Date" "refm/api/src/date/DateTime")
(find-rurima "== Class Methods" "= class DateTime < Date" "refm/api/src/date/DateTime")
(find-rurima "--- civil(year = -4712, mon = 1, mday = 1, hour = 0, min = 0, sec = 0, offset = 0, start = Date::ITALY) -> DateTime" "== Class Methods" "= class DateTime < Date" "refm/api/src/date/DateTime")
(find-rurima "--- new(year = -4712, mon = 1, mday = 1, hour = 0, min = 0, sec = 0, offset = 0, start = Date::ITALY) -> DateTime" "== Class Methods" "= class DateTime < Date" "refm/api/src/date/DateTime")
(find-rurima "--- commercial(cwyear = -4712, cweek = 1, cwday = 1, hour = 0, min = 0, sec = 0, offset = 0, start = Date::ITALY) -> DateTime" "== Class Methods" "= class DateTime < Date" "refm/api/src/date/DateTime")
(find-rurima "--- commercial(cwyear = 1582, cweek = 41, cwday = 5, hour = 0, min = 0, sec = 0, offset = 0, start = Date::ITALY) -> DateTime" "== Class Methods" "= class DateTime < Date" "refm/api/src/date/DateTime")
(find-rurima "--- httpdate(str = 'Mon, 01 Jan -4712 00:00:00 GMT', start = Date::ITALY) -> DateTime" "== Class Methods" "= class DateTime < Date" "refm/api/src/date/DateTime")
(find-rurima "--- iso8601(str = '-4712-01-01T00:00:00+00:00', start = Date::ITALY) -> DateTime" "== Class Methods" "= class DateTime < Date" "refm/api/src/date/DateTime")
(find-rurima "--- jd(jd = 0, hour = 0, min = 0, sec = 0, offset = 0, start = Date::ITALY) -> DateTime" "== Class Methods" "= class DateTime < Date" "refm/api/src/date/DateTime")
(find-rurima "--- jisx0301(str = '-4712-01-01T00:00:00+00:00', start = Date::ITALY) -> DateTime" "== Class Methods" "= class DateTime < Date" "refm/api/src/date/DateTime")
(find-rurima "--- now(start = Date::ITALY) -> DateTime" "== Class Methods" "= class DateTime < Date" "refm/api/src/date/DateTime")
(find-rurima "--- ordinal(year = -4712, yday = 1, hour = 0, min = 0, sec = 0, offset = 0, start = Date::ITALY) -> DateTime" "== Class Methods" "= class DateTime < Date" "refm/api/src/date/DateTime")
(find-rurima "--- rfc2822(str = 'Mon, 1 Jan -4712 00:00:00 +0000', start = Date::ITALY) -> DateTime" "== Class Methods" "= class DateTime < Date" "refm/api/src/date/DateTime")
(find-rurima "--- rfc822(str = 'Mon, 1 Jan -4712 00:00:00 +0000', start = Date::ITALY) -> DateTime" "== Class Methods" "= class DateTime < Date" "refm/api/src/date/DateTime")
(find-rurima "--- rfc3339(str = '-4712-01-01T00:00:00+00:00', start = Date::ITALY) -> DateTime" "== Class Methods" "= class DateTime < Date" "refm/api/src/date/DateTime")
(find-rurima "--- today(start = Date::ITALY) -> Date" "== Class Methods" "= class DateTime < Date" "refm/api/src/date/DateTime")
(find-rurima "--- xmlschema(str = '-4712-01-01T00:00:00+00:00', start = Date::ITALY) -> DateTime" "== Class Methods" "= class DateTime < Date" "refm/api/src/date/DateTime")
(find-rurima "--- parse(str = '-4712-01-01T00:00:00+00:00', complete = true, start = Date::ITALY) -> DateTime" "== Class Methods" "= class DateTime < Date" "refm/api/src/date/DateTime")
(find-rurima "--- parse(str = '-4712-01-01T00:00:00+00:00', complete = false, start = Date::ITALY) -> DateTime" "== Class Methods" "= class DateTime < Date" "refm/api/src/date/DateTime")
(find-rurima "--- _strptime(str, format = '%FT%T%z') -> Hash" "== Class Methods" "= class DateTime < Date" "refm/api/src/date/DateTime")
(find-rurima "--- strptime(str = '-4712-01-01T00:00:00+00:00', format = '%FT%T%z', start = Date::ITALY) -> DateTime" "== Class Methods" "= class DateTime < Date" "refm/api/src/date/DateTime")
(find-rurima "== Instance Methods" "= class DateTime < Date" "refm/api/src/date/DateTime")
(find-rurima "--- hour -> Integer" "== Instance Methods" "= class DateTime < Date" "refm/api/src/date/DateTime")
(find-rurima "--- iso8601(n = 0) -> String" "== Instance Methods" "= class DateTime < Date" "refm/api/src/date/DateTime")
(find-rurima "--- rfc3339(n = 0) -> String" "== Instance Methods" "= class DateTime < Date" "refm/api/src/date/DateTime")
(find-rurima "--- xmlschema(n = 0) -> String" "== Instance Methods" "= class DateTime < Date" "refm/api/src/date/DateTime")
(find-rurima "--- jisx0301(n = 0) -> String" "== Instance Methods" "= class DateTime < Date" "refm/api/src/date/DateTime")
(find-rurima "--- min -> Integer" "== Instance Methods" "= class DateTime < Date" "refm/api/src/date/DateTime")
(find-rurima "--- new_offset(offset = 0) -> DateTime" "== Instance Methods" "= class DateTime < Date" "refm/api/src/date/DateTime")
(find-rurima "--- newof(offset = 0) -> DateTime" "== Instance Methods" "= class DateTime < Date" "refm/api/src/date/DateTime")
(find-rurima "--- offset -> Rational" "== Instance Methods" "= class DateTime < Date" "refm/api/src/date/DateTime")
(find-rurima "--- of -> Rational" "== Instance Methods" "= class DateTime < Date" "refm/api/src/date/DateTime")
(find-rurima "--- sec -> Integer" "== Instance Methods" "= class DateTime < Date" "refm/api/src/date/DateTime")
(find-rurima "--- zone -> String" "== Instance Methods" "= class DateTime < Date" "refm/api/src/date/DateTime")
(find-rurima "= class Mail < Object " "refm/api/src/mailread.rd")
(find-rurima "=== mailread の使い方" "= class Mail < Object " "refm/api/src/mailread.rd")
(find-rurima "== Class Methods" "= class Mail < Object " "refm/api/src/mailread.rd")
(find-rurima "--- new(file)" "== Class Methods" "= class Mail < Object " "refm/api/src/mailread.rd")
(find-rurima "== Instance Methods" "= class Mail < Object " "refm/api/src/mailread.rd")
(find-rurima "--- header -> Hash" "== Instance Methods" "= class Mail < Object " "refm/api/src/mailread.rd")
(find-rurima "--- body -> [ String ]" "== Instance Methods" "= class Mail < Object " "refm/api/src/mailread.rd")
(find-rurima "--- [](field) -> String | nil" "== Instance Methods" "= class Mail < Object " "refm/api/src/mailread.rd")
(find-rurima "= module Open3" "refm/api/src/open3.rd")
(find-rurima "=== 使用例" "= module Open3" "refm/api/src/open3.rd")
(find-rurima "== Module Functions" "= module Open3" "refm/api/src/open3.rd")
(find-rurima "--- popen3(*cmd) -> [IO, IO, IO, Thread]" "== Module Functions" "= module Open3" "refm/api/src/open3.rd")
(find-rurima "--- popen3(*cmd) {|stdin, stdout, stderr, wait_thr| ... } -> ()" "== Module Functions" "= module Open3" "refm/api/src/open3.rd")
(find-rurima "--- popen3(*cmd) -> [IO, IO, IO]" "== Module Functions" "= module Open3" "refm/api/src/open3.rd")
(find-rurima "--- popen3(*cmd) {|stdin, stdout, stderr| ... } -> ()" "== Module Functions" "= module Open3" "refm/api/src/open3.rd")
(find-rurima "--- popen2(*cmd) -> [IO, IO, Thread]" "== Module Functions" "= module Open3" "refm/api/src/open3.rd")
(find-rurima "--- popen2(*cmd) {|stdin, stdout, wait_thr| ... } -> ()" "== Module Functions" "= module Open3" "refm/api/src/open3.rd")
(find-rurima "--- popen2e(*cmd) -> [IO, IO, Thread]" "== Module Functions" "= module Open3" "refm/api/src/open3.rd")
(find-rurima "--- popen2e(*cmd) {|stdin, stdout_and_stderr, wait_thr| ... } -> ()" "== Module Functions" "= module Open3" "refm/api/src/open3.rd")
(find-rurima "--- capture3(*cmd) -> [String, String, Process::Status]" "== Module Functions" "= module Open3" "refm/api/src/open3.rd")
(find-rurima "--- capture2(*cmd) -> [String, Process::Status]" "== Module Functions" "= module Open3" "refm/api/src/open3.rd")
(find-rurima "--- capture2e(*cmd) -> [String, Process::Status]" "== Module Functions" "= module Open3" "refm/api/src/open3.rd")
(find-rurima "--- pipeline_rw(*cmds) -> [IO, IO, [Thread]]" "== Module Functions" "= module Open3" "refm/api/src/open3.rd")
(find-rurima "--- pipeline_rw(*cmds) {|first_stdin, last_stdout, wait_thrs| ... } -> ()" "== Module Functions" "= module Open3" "refm/api/src/open3.rd")
(find-rurima "--- pipeline_r(*cmds) -> [IO, [Thread]]" "== Module Functions" "= module Open3" "refm/api/src/open3.rd")
(find-rurima "--- pipeline_r(*cmds) {|last_stdout, wait_thrs| ... } -> ()" "== Module Functions" "= module Open3" "refm/api/src/open3.rd")
(find-rurima "--- pipeline_w(*cmds) -> [IO, [Thread]]" "== Module Functions" "= module Open3" "refm/api/src/open3.rd")
(find-rurima "--- pipeline_w(*cmds) {|first_stdin, wait_thrs| ... } -> ()" "== Module Functions" "= module Open3" "refm/api/src/open3.rd")
(find-rurima "--- pipeline_start(*cmds) -> [Thread]" "== Module Functions" "= module Open3" "refm/api/src/open3.rd")
(find-rurima "--- pipeline_start(*cmds) {|wait_thrs| ... } -> ()" "== Module Functions" "= module Open3" "refm/api/src/open3.rd")
(find-rurima "--- pipeline(*cmds) -> [Process::Status]" "== Module Functions" "= module Open3" "refm/api/src/open3.rd")
(find-rurima "= module Base64" "refm/api/src/base64/Base64")
(find-rurima "== Module Functions" "= module Base64" "refm/api/src/base64/Base64")
(find-rurima "--- decode64(str) -> String" "== Module Functions" "= module Base64" "refm/api/src/base64/Base64")
(find-rurima "--- encode64(bin) -> String" "== Module Functions" "= module Base64" "refm/api/src/base64/Base64")
(find-rurima "--- strict_decode64(str) -> String" "== Module Functions" "= module Base64" "refm/api/src/base64/Base64")
(find-rurima "--- strict_encode64(bin) -> String" "== Module Functions" "= module Base64" "refm/api/src/base64/Base64")
(find-rurima "--- urlsafe_decode64(str) -> String" "== Module Functions" "= module Base64" "refm/api/src/base64/Base64")
(find-rurima "--- urlsafe_encode64(bin) -> String" "== Module Functions" "= module Base64" "refm/api/src/base64/Base64")
(find-rurima "= module Base64" "refm/api/src/base64/Base64")
(find-rurima "== Module Functions" "= module Base64" "refm/api/src/base64/Base64")
(find-rurima "--- decode64(str) -> String" "== Module Functions" "= module Base64" "refm/api/src/base64/Base64")
(find-rurima "--- encode64(str) -> String" "== Module Functions" "= module Base64" "refm/api/src/base64/Base64")
(find-rurima "--- decode_b(str) -> String" "== Module Functions" "= module Base64" "refm/api/src/base64/Base64")
(find-rurima "--- b64encode(bin, len = 60) -> ()" "== Module Functions" "= module Base64" "refm/api/src/base64/Base64")
(find-rurima "= reopen Kernel" "refm/api/src/base64/Base64")
(find-rurima "== Module Functions" "= reopen Kernel" "refm/api/src/base64/Base64")
(find-rurima "--- decode64(str) -> String" "== Module Functions" "= reopen Kernel" "refm/api/src/base64/Base64")
(find-rurima "--- encode64(str) -> String" "== Module Functions" "= reopen Kernel" "refm/api/src/base64/Base64")
(find-rurima "--- decode_b(str) -> String" "== Module Functions" "= reopen Kernel" "refm/api/src/base64/Base64")
(find-rurima "--- b64encode(bin, len = 60) -> ()" "== Module Functions" "= reopen Kernel" "refm/api/src/base64/Base64")
(find-rurima "= reopen Kernel" "refm/api/src/base64/Base64")
(find-rurima "== Private Instance Methods" "= reopen Kernel" "refm/api/src/base64/Base64")
(find-rurima "--- decode64(str) -> String" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/base64/Base64")
(find-rurima "--- encode64(str) -> String" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/base64/Base64")
(find-rurima "--- decode_b(str) -> String" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/base64/Base64")
(find-rurima "--- b64encode(bin, len = 60) -> ()" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/base64/Base64")
(find-rurima "= module Base64::Deprecated" "refm/api/src/base64/Base64__Deprecated")
(find-rurima "== Module Functions" "= module Base64::Deprecated" "refm/api/src/base64/Base64__Deprecated")
(find-rurima "--- decode64(str) -> String" "== Module Functions" "= module Base64::Deprecated" "refm/api/src/base64/Base64__Deprecated")
(find-rurima "--- encode64(str) -> String" "== Module Functions" "= module Base64::Deprecated" "refm/api/src/base64/Base64__Deprecated")
(find-rurima "--- decode_b(str) -> String" "== Module Functions" "= module Base64::Deprecated" "refm/api/src/base64/Base64__Deprecated")
(find-rurima "--- b64encode(bin, len = 60) -> ()" "== Module Functions" "= module Base64::Deprecated" "refm/api/src/base64/Base64__Deprecated")
(find-rurima "= reopen Ripper" "refm/api/src/ripper/lexer.rd")
(find-rurima "--- Ripper.lex(src, filename = '-', lineno = 1) -> [[Integer, Integer], Symbol, String]" "= reopen Ripper" "refm/api/src/ripper/lexer.rd")
(find-rurima "--- Ripper.tokenize(src, filename = '-', lineno = 1) -> [String]" "= reopen Ripper" "refm/api/src/ripper/lexer.rd")
(find-rurima "--- Ripper.slice(src, pattern, n = 0) -> String | nil" "= reopen Ripper" "refm/api/src/ripper/lexer.rd")
(find-rurima "--- Ripper.token_match(src, pattern) -> Ripper::TokenPattern::MatchData | nil" "= reopen Ripper" "refm/api/src/ripper/lexer.rd")
(find-rurima "= class Ripper::Lexer < Ripper" "refm/api/src/ripper/lexer.rd")
(find-rurima "== Instance Methods" "= class Ripper::Lexer < Ripper" "refm/api/src/ripper/lexer.rd")
(find-rurima "--- tokenize -> [String]" "== Instance Methods" "= class Ripper::Lexer < Ripper" "refm/api/src/ripper/lexer.rd")
(find-rurima "--- lex -> [[Integer, Integer], Symbol, String]" "== Instance Methods" "= class Ripper::Lexer < Ripper" "refm/api/src/ripper/lexer.rd")
(find-rurima "--- parse -> [[Integer, Integer], Symbol, String]" "== Instance Methods" "= class Ripper::Lexer < Ripper" "refm/api/src/ripper/lexer.rd")
(find-rurima "= class Ripper::Filter" "refm/api/src/ripper/filter.rd")
(find-rurima "=== 使用例" "= class Ripper::Filter" "refm/api/src/ripper/filter.rd")
(find-rurima "== Class Methods" "= class Ripper::Filter" "refm/api/src/ripper/filter.rd")
(find-rurima "--- new(src, filename = '-', lineno = 1) -> Ripper::Filter" "== Class Methods" "= class Ripper::Filter" "refm/api/src/ripper/filter.rd")
(find-rurima "== Instance Methods" "= class Ripper::Filter" "refm/api/src/ripper/filter.rd")
(find-rurima "--- filename -> String" "== Instance Methods" "= class Ripper::Filter" "refm/api/src/ripper/filter.rd")
(find-rurima "--- lineno -> Integer | nil" "== Instance Methods" "= class Ripper::Filter" "refm/api/src/ripper/filter.rd")
(find-rurima "--- column -> Integer | nil" "== Instance Methods" "= class Ripper::Filter" "refm/api/src/ripper/filter.rd")
(find-rurima "--- parse(init = nil) -> object" "== Instance Methods" "= class Ripper::Filter" "refm/api/src/ripper/filter.rd")
(find-rurima "== Private Instance Methods" "= class Ripper::Filter" "refm/api/src/ripper/filter.rd")
(find-rurima "--- on_default(event, token, data) -> object" "== Private Instance Methods" "= class Ripper::Filter" "refm/api/src/ripper/filter.rd")
(find-rurima "--- on_XXX(token, data) -> object" "== Private Instance Methods" "= class Ripper::Filter" "refm/api/src/ripper/filter.rd")
(find-rurima "= reopen Ripper" "refm/api/src/ripper/sexp.rd")
(find-rurima "--- Ripper.sexp(src, filename = '-', lineno = 1) -> object" "= reopen Ripper" "refm/api/src/ripper/sexp.rd")
(find-rurima "--- Ripper.sexp_raw(src, filename = '-', lineno = 1)" "= reopen Ripper" "refm/api/src/ripper/sexp.rd")
(find-rurima "= module Mutex_m" "refm/api/src/mutex_m.rd")
(find-rurima "=== 例" "= module Mutex_m" "refm/api/src/mutex_m.rd")
(find-rurima "== Singleton Methods" "= module Mutex_m" "refm/api/src/mutex_m.rd")
(find-rurima "--- append_features(klass) -> Class | nil" "== Singleton Methods" "= module Mutex_m" "refm/api/src/mutex_m.rd")
(find-rurima "--- define_aliases(klass) -> Class" "== Singleton Methods" "= module Mutex_m" "refm/api/src/mutex_m.rd")
(find-rurima "--- extend_object(module) -> Module" "== Singleton Methods" "= module Mutex_m" "refm/api/src/mutex_m.rd")
(find-rurima "== Instance Methods" "= module Mutex_m" "refm/api/src/mutex_m.rd")
(find-rurima "--- mu_extended -> Mutex" "== Instance Methods" "= module Mutex_m" "refm/api/src/mutex_m.rd")
(find-rurima "--- mu_synchronize{ ... } -> object" "== Instance Methods" "= module Mutex_m" "refm/api/src/mutex_m.rd")
(find-rurima "--- synchronize{ ... } -> object" "== Instance Methods" "= module Mutex_m" "refm/api/src/mutex_m.rd")
(find-rurima "--- mu_lock -> self" "== Instance Methods" "= module Mutex_m" "refm/api/src/mutex_m.rd")
(find-rurima "--- lock -> self" "== Instance Methods" "= module Mutex_m" "refm/api/src/mutex_m.rd")
(find-rurima "--- mu_lock -> ()" "== Instance Methods" "= module Mutex_m" "refm/api/src/mutex_m.rd")
(find-rurima "--- lock -> ()" "== Instance Methods" "= module Mutex_m" "refm/api/src/mutex_m.rd")
(find-rurima "--- mu_locked? -> bool" "== Instance Methods" "= module Mutex_m" "refm/api/src/mutex_m.rd")
(find-rurima "--- locked? -> bool" "== Instance Methods" "= module Mutex_m" "refm/api/src/mutex_m.rd")
(find-rurima "--- mu_try_lock -> bool" "== Instance Methods" "= module Mutex_m" "refm/api/src/mutex_m.rd")
(find-rurima "--- try_lock -> bool" "== Instance Methods" "= module Mutex_m" "refm/api/src/mutex_m.rd")
(find-rurima "--- mu_unlock -> self | nil" "== Instance Methods" "= module Mutex_m" "refm/api/src/mutex_m.rd")
(find-rurima "--- unlock -> self | nil" "== Instance Methods" "= module Mutex_m" "refm/api/src/mutex_m.rd")
(find-rurima "--- mu_unlock -> ()" "== Instance Methods" "= module Mutex_m" "refm/api/src/mutex_m.rd")
(find-rurima "--- unlock -> ()" "== Instance Methods" "= module Mutex_m" "refm/api/src/mutex_m.rd")
(find-rurima "= class WeakRef < Delegator" "refm/api/src/weakref.rd")
(find-rurima "=== サンプルコード" "= class WeakRef < Delegator" "refm/api/src/weakref.rd")
(find-rurima "== Class Methods" "= class WeakRef < Delegator" "refm/api/src/weakref.rd")
(find-rurima "--- new(orig) -> WeakRef" "== Class Methods" "= class WeakRef < Delegator" "refm/api/src/weakref.rd")
(find-rurima "== Instance Methods" "= class WeakRef < Delegator" "refm/api/src/weakref.rd")
(find-rurima "--- weakref_alive? -> bool" "== Instance Methods" "= class WeakRef < Delegator" "refm/api/src/weakref.rd")
(find-rurima "--- __getobj__ -> object" "== Instance Methods" "= class WeakRef < Delegator" "refm/api/src/weakref.rd")
(find-rurima "--- __setobj__(obj) -> ()" "== Instance Methods" "= class WeakRef < Delegator" "refm/api/src/weakref.rd")
(find-rurima "== Constants" "= class WeakRef < Delegator" "refm/api/src/weakref.rd")
(find-rurima "--- ID_MAP -> Hash" "== Constants" "= class WeakRef < Delegator" "refm/api/src/weakref.rd")
(find-rurima "--- ID_REV_MAP -> Hash" "== Constants" "= class WeakRef < Delegator" "refm/api/src/weakref.rd")
(find-rurima "= class WeakRef::RefError < StandardError" "refm/api/src/weakref.rd")
(find-rurima "= class RSS::RDF < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "== Instance Methods" "= class RSS::RDF < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- channel" "== Instance Methods" "= class RSS::RDF < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- channel=" "== Instance Methods" "= class RSS::RDF < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- encoding" "== Instance Methods" "= class RSS::RDF < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- encoding=" "== Instance Methods" "= class RSS::RDF < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- image" "== Instance Methods" "= class RSS::RDF < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- image=" "== Instance Methods" "= class RSS::RDF < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- item" "== Instance Methods" "= class RSS::RDF < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- item=" "== Instance Methods" "= class RSS::RDF < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- items" "== Instance Methods" "= class RSS::RDF < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- rss_version" "== Instance Methods" "= class RSS::RDF < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- rss_version=" "== Instance Methods" "= class RSS::RDF < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- standalone" "== Instance Methods" "= class RSS::RDF < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- standalone=" "== Instance Methods" "= class RSS::RDF < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- textinput" "== Instance Methods" "= class RSS::RDF < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- textinput=" "== Instance Methods" "= class RSS::RDF < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- version" "== Instance Methods" "= class RSS::RDF < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- version=" "== Instance Methods" "= class RSS::RDF < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "= module RSS::ImageModelUtils" "refm/api/src/rss/1.0.rd")
(find-rurima "= module RSS::DublinCoreModel" "refm/api/src/rss/1.0.rd")
(find-rurima "= class RSS::RDF::Channel < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "== Instance Methods" "= class RSS::RDF::Channel < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- about" "== Instance Methods" "= class RSS::RDF::Channel < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- about=" "== Instance Methods" "= class RSS::RDF::Channel < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- date" "== Instance Methods" "= class RSS::RDF::Channel < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- date=" "== Instance Methods" "= class RSS::RDF::Channel < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- description" "== Instance Methods" "= class RSS::RDF::Channel < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- description=" "== Instance Methods" "= class RSS::RDF::Channel < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- image" "== Instance Methods" "= class RSS::RDF::Channel < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- image=" "== Instance Methods" "= class RSS::RDF::Channel < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- items" "== Instance Methods" "= class RSS::RDF::Channel < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- items=" "== Instance Methods" "= class RSS::RDF::Channel < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- link" "== Instance Methods" "= class RSS::RDF::Channel < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- link=" "== Instance Methods" "= class RSS::RDF::Channel < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- textinput" "== Instance Methods" "= class RSS::RDF::Channel < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- textinput=" "== Instance Methods" "= class RSS::RDF::Channel < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- title" "== Instance Methods" "= class RSS::RDF::Channel < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- title=" "== Instance Methods" "= class RSS::RDF::Channel < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "= class RSS::RDF::Channel::Image < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "== Instance Methods" "= class RSS::RDF::Channel::Image < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- resource" "== Instance Methods" "= class RSS::RDF::Channel::Image < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- resource=" "== Instance Methods" "= class RSS::RDF::Channel::Image < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "= class RSS::RDF::Channel::Textinput < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "== Instance Methods" "= class RSS::RDF::Channel::Textinput < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- resource" "== Instance Methods" "= class RSS::RDF::Channel::Textinput < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- resource=" "== Instance Methods" "= class RSS::RDF::Channel::Textinput < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "= class RSS::RDF::Channel::Items < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "== Instance Methods" "= class RSS::RDF::Channel::Items < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- resources" "== Instance Methods" "= class RSS::RDF::Channel::Items < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "= class RSS::RDF::Channel::ImageFavicon < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "== Instance Methods" "= class RSS::RDF::Channel::ImageFavicon < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- about" "== Instance Methods" "= class RSS::RDF::Channel::ImageFavicon < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- about=" "== Instance Methods" "= class RSS::RDF::Channel::ImageFavicon < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- date" "== Instance Methods" "= class RSS::RDF::Channel::ImageFavicon < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- date=" "== Instance Methods" "= class RSS::RDF::Channel::ImageFavicon < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- image_size" "== Instance Methods" "= class RSS::RDF::Channel::ImageFavicon < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- size" "== Instance Methods" "= class RSS::RDF::Channel::ImageFavicon < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- image_size=" "== Instance Methods" "= class RSS::RDF::Channel::ImageFavicon < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- size=" "== Instance Methods" "= class RSS::RDF::Channel::ImageFavicon < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "= class RSS::RDF::Image < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "== Instance Methods" "= class RSS::RDF::Image < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- about" "== Instance Methods" "= class RSS::RDF::Image < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- about=" "== Instance Methods" "= class RSS::RDF::Image < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- date" "== Instance Methods" "= class RSS::RDF::Image < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- date=" "== Instance Methods" "= class RSS::RDF::Image < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- link" "== Instance Methods" "= class RSS::RDF::Image < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- link=" "== Instance Methods" "= class RSS::RDF::Image < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- title" "== Instance Methods" "= class RSS::RDF::Image < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- title=" "== Instance Methods" "= class RSS::RDF::Image < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- url" "== Instance Methods" "= class RSS::RDF::Image < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- url=" "== Instance Methods" "= class RSS::RDF::Image < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "= class RSS::RDF::Textinput < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "== Instance Methods" "= class RSS::RDF::Textinput < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- about" "== Instance Methods" "= class RSS::RDF::Textinput < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- about=" "== Instance Methods" "= class RSS::RDF::Textinput < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- date" "== Instance Methods" "= class RSS::RDF::Textinput < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- date=" "== Instance Methods" "= class RSS::RDF::Textinput < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- description" "== Instance Methods" "= class RSS::RDF::Textinput < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- description=" "== Instance Methods" "= class RSS::RDF::Textinput < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- link" "== Instance Methods" "= class RSS::RDF::Textinput < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- link=" "== Instance Methods" "= class RSS::RDF::Textinput < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- name" "== Instance Methods" "= class RSS::RDF::Textinput < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- name=" "== Instance Methods" "= class RSS::RDF::Textinput < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- title" "== Instance Methods" "= class RSS::RDF::Textinput < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- title=" "== Instance Methods" "= class RSS::RDF::Textinput < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "= class RSS::RDF::Item < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "== Instance Methods" "= class RSS::RDF::Item < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- about" "== Instance Methods" "= class RSS::RDF::Item < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- about=" "== Instance Methods" "= class RSS::RDF::Item < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- date" "== Instance Methods" "= class RSS::RDF::Item < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- date=" "== Instance Methods" "= class RSS::RDF::Item < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- description" "== Instance Methods" "= class RSS::RDF::Item < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- description=" "== Instance Methods" "= class RSS::RDF::Item < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- link" "== Instance Methods" "= class RSS::RDF::Item < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- link=" "== Instance Methods" "= class RSS::RDF::Item < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- title" "== Instance Methods" "= class RSS::RDF::Item < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "--- title=" "== Instance Methods" "= class RSS::RDF::Item < RSS::Element" "refm/api/src/rss/1.0.rd")
(find-rurima "= module DublinCoreModel" "refm/api/src/rss/dublincore.rd")
(find-rurima "== Instance Methods" "= module DublinCoreModel" "refm/api/src/rss/dublincore.rd")
(find-rurima "--- dc_contributor" "== Instance Methods" "= module DublinCoreModel" "refm/api/src/rss/dublincore.rd")
(find-rurima "--- dc_contributor=" "== Instance Methods" "= module DublinCoreModel" "refm/api/src/rss/dublincore.rd")
(find-rurima "--- dc_contributors" "== Instance Methods" "= module DublinCoreModel" "refm/api/src/rss/dublincore.rd")
(find-rurima "--- dc_coverage" "== Instance Methods" "= module DublinCoreModel" "refm/api/src/rss/dublincore.rd")
(find-rurima "--- dc_coverage=" "== Instance Methods" "= module DublinCoreModel" "refm/api/src/rss/dublincore.rd")
(find-rurima "--- dc_coverages" "== Instance Methods" "= module DublinCoreModel" "refm/api/src/rss/dublincore.rd")
(find-rurima "--- dc_creator" "== Instance Methods" "= module DublinCoreModel" "refm/api/src/rss/dublincore.rd")
(find-rurima "--- dc_creator=" "== Instance Methods" "= module DublinCoreModel" "refm/api/src/rss/dublincore.rd")
(find-rurima "--- dc_creators" "== Instance Methods" "= module DublinCoreModel" "refm/api/src/rss/dublincore.rd")
(find-rurima "--- dc_date" "== Instance Methods" "= module DublinCoreModel" "refm/api/src/rss/dublincore.rd")
(find-rurima "--- dc_date=" "== Instance Methods" "= module DublinCoreModel" "refm/api/src/rss/dublincore.rd")
(find-rurima "--- dc_dates" "== Instance Methods" "= module DublinCoreModel" "refm/api/src/rss/dublincore.rd")
(find-rurima "--- dc_description" "== Instance Methods" "= module DublinCoreModel" "refm/api/src/rss/dublincore.rd")
(find-rurima "--- dc_description=" "== Instance Methods" "= module DublinCoreModel" "refm/api/src/rss/dublincore.rd")
(find-rurima "--- dc_descriptions" "== Instance Methods" "= module DublinCoreModel" "refm/api/src/rss/dublincore.rd")
(find-rurima "--- dc_format" "== Instance Methods" "= module DublinCoreModel" "refm/api/src/rss/dublincore.rd")
(find-rurima "--- dc_format=" "== Instance Methods" "= module DublinCoreModel" "refm/api/src/rss/dublincore.rd")
(find-rurima "--- dc_formats" "== Instance Methods" "= module DublinCoreModel" "refm/api/src/rss/dublincore.rd")
(find-rurima "--- dc_identifier" "== Instance Methods" "= module DublinCoreModel" "refm/api/src/rss/dublincore.rd")
(find-rurima "--- dc_identifier=" "== Instance Methods" "= module DublinCoreModel" "refm/api/src/rss/dublincore.rd")
(find-rurima "--- dc_identifiers" "== Instance Methods" "= module DublinCoreModel" "refm/api/src/rss/dublincore.rd")
(find-rurima "--- dc_language" "== Instance Methods" "= module DublinCoreModel" "refm/api/src/rss/dublincore.rd")
(find-rurima "--- dc_language=" "== Instance Methods" "= module DublinCoreModel" "refm/api/src/rss/dublincore.rd")
(find-rurima "--- dc_languages" "== Instance Methods" "= module DublinCoreModel" "refm/api/src/rss/dublincore.rd")
(find-rurima "--- dc_publisher" "== Instance Methods" "= module DublinCoreModel" "refm/api/src/rss/dublincore.rd")
(find-rurima "--- dc_publisher=" "== Instance Methods" "= module DublinCoreModel" "refm/api/src/rss/dublincore.rd")
(find-rurima "--- dc_publishers" "== Instance Methods" "= module DublinCoreModel" "refm/api/src/rss/dublincore.rd")
(find-rurima "--- dc_relation" "== Instance Methods" "= module DublinCoreModel" "refm/api/src/rss/dublincore.rd")
(find-rurima "--- dc_relation=" "== Instance Methods" "= module DublinCoreModel" "refm/api/src/rss/dublincore.rd")
(find-rurima "--- dc_relations" "== Instance Methods" "= module DublinCoreModel" "refm/api/src/rss/dublincore.rd")
(find-rurima "--- dc_rights" "== Instance Methods" "= module DublinCoreModel" "refm/api/src/rss/dublincore.rd")
(find-rurima "--- dc_rights=" "== Instance Methods" "= module DublinCoreModel" "refm/api/src/rss/dublincore.rd")
(find-rurima "--- dc_rightses" "== Instance Methods" "= module DublinCoreModel" "refm/api/src/rss/dublincore.rd")
(find-rurima "--- dc_source" "== Instance Methods" "= module DublinCoreModel" "refm/api/src/rss/dublincore.rd")
(find-rurima "--- dc_source=" "== Instance Methods" "= module DublinCoreModel" "refm/api/src/rss/dublincore.rd")
(find-rurima "--- dc_sources" "== Instance Methods" "= module DublinCoreModel" "refm/api/src/rss/dublincore.rd")
(find-rurima "--- dc_subject" "== Instance Methods" "= module DublinCoreModel" "refm/api/src/rss/dublincore.rd")
(find-rurima "--- dc_subject=" "== Instance Methods" "= module DublinCoreModel" "refm/api/src/rss/dublincore.rd")
(find-rurima "--- dc_subjects" "== Instance Methods" "= module DublinCoreModel" "refm/api/src/rss/dublincore.rd")
(find-rurima "--- dc_title" "== Instance Methods" "= module DublinCoreModel" "refm/api/src/rss/dublincore.rd")
(find-rurima "--- dc_title=" "== Instance Methods" "= module DublinCoreModel" "refm/api/src/rss/dublincore.rd")
(find-rurima "--- dc_titles" "== Instance Methods" "= module DublinCoreModel" "refm/api/src/rss/dublincore.rd")
(find-rurima "--- dc_type" "== Instance Methods" "= module DublinCoreModel" "refm/api/src/rss/dublincore.rd")
(find-rurima "--- dc_type=" "== Instance Methods" "= module DublinCoreModel" "refm/api/src/rss/dublincore.rd")
(find-rurima "--- dc_types" "== Instance Methods" "= module DublinCoreModel" "refm/api/src/rss/dublincore.rd")
(find-rurima "= module  RSS::SyndicationModel" "refm/api/src/rss/syndication.rd")
(find-rurima "== Instance Methods" "= module  RSS::SyndicationModel" "refm/api/src/rss/syndication.rd")
(find-rurima "--- sy_updateBase" "== Instance Methods" "= module  RSS::SyndicationModel" "refm/api/src/rss/syndication.rd")
(find-rurima "--- sy_updateBase=" "== Instance Methods" "= module  RSS::SyndicationModel" "refm/api/src/rss/syndication.rd")
(find-rurima "--- sy_updateFrequency" "== Instance Methods" "= module  RSS::SyndicationModel" "refm/api/src/rss/syndication.rd")
(find-rurima "--- sy_updateFrequency=" "== Instance Methods" "= module  RSS::SyndicationModel" "refm/api/src/rss/syndication.rd")
(find-rurima "--- sy_updatePeriod" "== Instance Methods" "= module  RSS::SyndicationModel" "refm/api/src/rss/syndication.rd")
(find-rurima "--- sy_updatePeriod=" "== Instance Methods" "= module  RSS::SyndicationModel" "refm/api/src/rss/syndication.rd")
(find-rurima "= module RSS::ContentModel" "refm/api/src/rss/content.rd")
(find-rurima "== Instance Methods" "= module RSS::ContentModel" "refm/api/src/rss/content.rd")
(find-rurima "--- content_encoded" "== Instance Methods" "= module RSS::ContentModel" "refm/api/src/rss/content.rd")
(find-rurima "--- content_encoded=" "== Instance Methods" "= module RSS::ContentModel" "refm/api/src/rss/content.rd")
(find-rurima "=== 注意" "refm/api/src/rss/Tutorial")
(find-rurima "=== パース" "refm/api/src/rss/Tutorial")
(find-rurima "==== 知らない要素の扱い" "=== パース" "refm/api/src/rss/Tutorial")
(find-rurima "=== パースされたRSS" "refm/api/src/rss/Tutorial")
(find-rurima "==== リーダ(reader)" "=== パースされたRSS" "refm/api/src/rss/Tutorial")
(find-rurima "==== ライタ(writer)" "=== パースされたRSS" "refm/api/src/rss/Tutorial")
(find-rurima "=== 出力" "refm/api/src/rss/Tutorial")
(find-rurima "==== 基本" "=== 出力" "refm/api/src/rss/Tutorial")
(find-rurima "==== xml-stylesheet" "=== 出力" "refm/api/src/rss/Tutorial")
(find-rurima "==== RSSオブジェクトを作る" "=== 出力" "refm/api/src/rss/Tutorial")
(find-rurima "=== サンプル" "refm/api/src/rss/Tutorial")
(find-rurima "==== サンプル1 - 項目一覧" "=== サンプル" "refm/api/src/rss/Tutorial")
(find-rurima "==== サンプル2 - 更新順表示" "=== サンプル" "refm/api/src/rss/Tutorial")
(find-rurima "==== サンプル3 - 複数のRSSをブレンド" "=== サンプル" "refm/api/src/rss/Tutorial")
(find-rurima "= module RSS::ImageItemModel" "refm/api/src/rss/image.rd")
(find-rurima "== Instance Methods" "= module RSS::ImageItemModel" "refm/api/src/rss/image.rd")
(find-rurima "--- image_item" "== Instance Methods" "= module RSS::ImageItemModel" "refm/api/src/rss/image.rd")
(find-rurima "--- image_item=" "== Instance Methods" "= module RSS::ImageItemModel" "refm/api/src/rss/image.rd")
(find-rurima "= class RSS::ImageItemModel::ImageItem < RSS::Element" "refm/api/src/rss/image.rd")
(find-rurima "== Instance Methods" "= class RSS::ImageItemModel::ImageItem < RSS::Element" "refm/api/src/rss/image.rd")
(find-rurima "--- about" "== Instance Methods" "= class RSS::ImageItemModel::ImageItem < RSS::Element" "refm/api/src/rss/image.rd")
(find-rurima "--- about=" "== Instance Methods" "= class RSS::ImageItemModel::ImageItem < RSS::Element" "refm/api/src/rss/image.rd")
(find-rurima "--- date" "== Instance Methods" "= class RSS::ImageItemModel::ImageItem < RSS::Element" "refm/api/src/rss/image.rd")
(find-rurima "--- date=" "== Instance Methods" "= class RSS::ImageItemModel::ImageItem < RSS::Element" "refm/api/src/rss/image.rd")
(find-rurima "--- image_height" "== Instance Methods" "= class RSS::ImageItemModel::ImageItem < RSS::Element" "refm/api/src/rss/image.rd")
(find-rurima "--- image_height=" "== Instance Methods" "= class RSS::ImageItemModel::ImageItem < RSS::Element" "refm/api/src/rss/image.rd")
(find-rurima "--- height" "== Instance Methods" "= class RSS::ImageItemModel::ImageItem < RSS::Element" "refm/api/src/rss/image.rd")
(find-rurima "--- height=" "== Instance Methods" "= class RSS::ImageItemModel::ImageItem < RSS::Element" "refm/api/src/rss/image.rd")
(find-rurima "--- image_width" "== Instance Methods" "= class RSS::ImageItemModel::ImageItem < RSS::Element" "refm/api/src/rss/image.rd")
(find-rurima "--- image_width=" "== Instance Methods" "= class RSS::ImageItemModel::ImageItem < RSS::Element" "refm/api/src/rss/image.rd")
(find-rurima "--- width" "== Instance Methods" "= class RSS::ImageItemModel::ImageItem < RSS::Element" "refm/api/src/rss/image.rd")
(find-rurima "--- width=" "== Instance Methods" "= class RSS::ImageItemModel::ImageItem < RSS::Element" "refm/api/src/rss/image.rd")
(find-rurima "--- resource" "== Instance Methods" "= class RSS::ImageItemModel::ImageItem < RSS::Element" "refm/api/src/rss/image.rd")
(find-rurima "--- resource=" "== Instance Methods" "= class RSS::ImageItemModel::ImageItem < RSS::Element" "refm/api/src/rss/image.rd")
(find-rurima "= module RSS::ImageFaviconModel" "refm/api/src/rss/image.rd")
(find-rurima "== Instance Methods" "= module RSS::ImageFaviconModel" "refm/api/src/rss/image.rd")
(find-rurima "--- image_favicon" "== Instance Methods" "= module RSS::ImageFaviconModel" "refm/api/src/rss/image.rd")
(find-rurima "--- image_favicon=" "== Instance Methods" "= module RSS::ImageFaviconModel" "refm/api/src/rss/image.rd")
(find-rurima "= class RSS::ImageFaviconModel::ImageFavicon < RSS::Element" "refm/api/src/rss/image.rd")
(find-rurima "== Instance Methods" "= class RSS::ImageFaviconModel::ImageFavicon < RSS::Element" "refm/api/src/rss/image.rd")
(find-rurima "--- about" "== Instance Methods" "= class RSS::ImageFaviconModel::ImageFavicon < RSS::Element" "refm/api/src/rss/image.rd")
(find-rurima "--- about=" "== Instance Methods" "= class RSS::ImageFaviconModel::ImageFavicon < RSS::Element" "refm/api/src/rss/image.rd")
(find-rurima "--- date" "== Instance Methods" "= class RSS::ImageFaviconModel::ImageFavicon < RSS::Element" "refm/api/src/rss/image.rd")
(find-rurima "--- date=" "== Instance Methods" "= class RSS::ImageFaviconModel::ImageFavicon < RSS::Element" "refm/api/src/rss/image.rd")
(find-rurima "--- image_size" "== Instance Methods" "= class RSS::ImageFaviconModel::ImageFavicon < RSS::Element" "refm/api/src/rss/image.rd")
(find-rurima "--- size" "== Instance Methods" "= class RSS::ImageFaviconModel::ImageFavicon < RSS::Element" "refm/api/src/rss/image.rd")
(find-rurima "--- image_size=" "== Instance Methods" "= class RSS::ImageFaviconModel::ImageFavicon < RSS::Element" "refm/api/src/rss/image.rd")
(find-rurima "--- size=" "== Instance Methods" "= class RSS::ImageFaviconModel::ImageFavicon < RSS::Element" "refm/api/src/rss/image.rd")
(find-rurima "= module RSS::TaxonomyTopicModel" "refm/api/src/rss/taxonomy.rd")
(find-rurima "== Instance Methods" "= module RSS::TaxonomyTopicModel" "refm/api/src/rss/taxonomy.rd")
(find-rurima "--- taxo_topic" "== Instance Methods" "= module RSS::TaxonomyTopicModel" "refm/api/src/rss/taxonomy.rd")
(find-rurima "--- taxo_topic=" "== Instance Methods" "= module RSS::TaxonomyTopicModel" "refm/api/src/rss/taxonomy.rd")
(find-rurima "= class RSS::TaxonomyTopicModel::TaxonomyTopic < RSS::Element" "refm/api/src/rss/taxonomy.rd")
(find-rurima "== Instance Methods" "= class RSS::TaxonomyTopicModel::TaxonomyTopic < RSS::Element" "refm/api/src/rss/taxonomy.rd")
(find-rurima "--- about" "== Instance Methods" "= class RSS::TaxonomyTopicModel::TaxonomyTopic < RSS::Element" "refm/api/src/rss/taxonomy.rd")
(find-rurima "--- about=" "== Instance Methods" "= class RSS::TaxonomyTopicModel::TaxonomyTopic < RSS::Element" "refm/api/src/rss/taxonomy.rd")
(find-rurima "--- date" "== Instance Methods" "= class RSS::TaxonomyTopicModel::TaxonomyTopic < RSS::Element" "refm/api/src/rss/taxonomy.rd")
(find-rurima "--- date=" "== Instance Methods" "= class RSS::TaxonomyTopicModel::TaxonomyTopic < RSS::Element" "refm/api/src/rss/taxonomy.rd")
(find-rurima "--- taxo_link" "== Instance Methods" "= class RSS::TaxonomyTopicModel::TaxonomyTopic < RSS::Element" "refm/api/src/rss/taxonomy.rd")
(find-rurima "--- taxo_link=" "== Instance Methods" "= class RSS::TaxonomyTopicModel::TaxonomyTopic < RSS::Element" "refm/api/src/rss/taxonomy.rd")
(find-rurima "= module RSS::TaxonomyTopicsModel" "refm/api/src/rss/taxonomy.rd")
(find-rurima "== Instance Methods" "= module RSS::TaxonomyTopicsModel" "refm/api/src/rss/taxonomy.rd")
(find-rurima "--- taxo_topics" "== Instance Methods" "= module RSS::TaxonomyTopicsModel" "refm/api/src/rss/taxonomy.rd")
(find-rurima "= class RSS::TaxonomyTopicsModel::TaxonomyTopics < RSS::Element" "refm/api/src/rss/taxonomy.rd")
(find-rurima "== Instance Methods" "= class RSS::TaxonomyTopicsModel::TaxonomyTopics < RSS::Element" "refm/api/src/rss/taxonomy.rd")
(find-rurima "--- resources" "== Instance Methods" "= class RSS::TaxonomyTopicsModel::TaxonomyTopics < RSS::Element" "refm/api/src/rss/taxonomy.rd")
(find-rurima "= class RSS::Maker::ChannelBase::SkipDaysBase < Object" "refm/api/src/rss/maker/SkipDays")
(find-rurima "== Instance Methods" "= class RSS::Maker::ChannelBase::SkipDaysBase < Object" "refm/api/src/rss/maker/SkipDays")
(find-rurima "--- new_day" "== Instance Methods" "= class RSS::Maker::ChannelBase::SkipDaysBase < Object" "refm/api/src/rss/maker/SkipDays")
(find-rurima "= class RSS::Maker::RSS09::Channel::SkipDays < RSS::Maker::ChannelBase::SkipDaysBase" "refm/api/src/rss/maker/SkipDays")
(find-rurima "= class RSS::Maker::RSS20::Channel::SkipDays < RSS::Maker::RSS09::Channel::SkipDays" "refm/api/src/rss/maker/SkipDays")
(find-rurima "= class RSS::Maker::ChannelBase::SkipDaysBase::DayBase < Object" "refm/api/src/rss/maker/SkipDays")
(find-rurima "== Instance Methods" "= class RSS::Maker::ChannelBase::SkipDaysBase::DayBase < Object" "refm/api/src/rss/maker/SkipDays")
(find-rurima "--- content" "== Instance Methods" "= class RSS::Maker::ChannelBase::SkipDaysBase::DayBase < Object" "refm/api/src/rss/maker/SkipDays")
(find-rurima "--- content=()" "== Instance Methods" "= class RSS::Maker::ChannelBase::SkipDaysBase::DayBase < Object" "refm/api/src/rss/maker/SkipDays")
(find-rurima "= class RSS::Maker::RSS09::Channel::SkipDays::Day < RSS::Maker::ChannelBase::SkipDaysBase::DayBase" "refm/api/src/rss/maker/SkipDays")
(find-rurima "= class RSS::Maker::RSS20::Channel::SkipDays::Day < RSS::Maker::RSS09::Channel::SkipDays::Day" "refm/api/src/rss/maker/SkipDays")
(find-rurima "= class RSS::Maker::ChannelBase::CategoriesBase < Object" "refm/api/src/rss/maker/Categories")
(find-rurima "== Instance Methods" "= class RSS::Maker::ChannelBase::CategoriesBase < Object" "refm/api/src/rss/maker/Categories")
(find-rurima "--- new_category" "== Instance Methods" "= class RSS::Maker::ChannelBase::CategoriesBase < Object" "refm/api/src/rss/maker/Categories")
(find-rurima "= class RSS::Maker::ChannelBase::CategoriesBase::CategoryBase < Object" "refm/api/src/rss/maker/Categories")
(find-rurima "== Instance Methods" "= class RSS::Maker::ChannelBase::CategoriesBase::CategoryBase < Object" "refm/api/src/rss/maker/Categories")
(find-rurima "--- domain" "== Instance Methods" "= class RSS::Maker::ChannelBase::CategoriesBase::CategoryBase < Object" "refm/api/src/rss/maker/Categories")
(find-rurima "--- domain=()" "== Instance Methods" "= class RSS::Maker::ChannelBase::CategoriesBase::CategoryBase < Object" "refm/api/src/rss/maker/Categories")
(find-rurima "--- content" "== Instance Methods" "= class RSS::Maker::ChannelBase::CategoriesBase::CategoryBase < Object" "refm/api/src/rss/maker/Categories")
(find-rurima "--- content=()" "== Instance Methods" "= class RSS::Maker::ChannelBase::CategoriesBase::CategoryBase < Object" "refm/api/src/rss/maker/Categories")
(find-rurima "= class RSS::Maker::RSS09::Channel::Categories < RSS::Maker::ChannelBase::CategoriesBase" "refm/api/src/rss/maker/Categories")
(find-rurima "= class RSS::Maker::RSS10::Channel::Categories < RSS::Maker::ChannelBase::CategoriesBase" "refm/api/src/rss/maker/Categories")
(find-rurima "= class RSS::Maker::RSS20::Channel::Categories < RSS::Maker::RSS09::Channel::Categories" "refm/api/src/rss/maker/Categories")
(find-rurima "= class RSS::Maker::RSS09::Channel::Categories::Category < RSS::Maker::ChannelBase::CategoriesBase::CategoryBase" "refm/api/src/rss/maker/Categories")
(find-rurima "= class RSS::Maker::RSS10::Channel::Categories::Category < RSS::Maker::ChannelBase::CategoriesBase::CategoryBase" "refm/api/src/rss/maker/Categories")
(find-rurima "= class RSS::Maker::RSS20::Channel::Categories::Category < RSS::Maker::RSS09::Channel::Categories::Category" "refm/api/src/rss/maker/Categories")
(find-rurima "= class RSS::Maker::TextinputBase" "refm/api/src/rss/maker/Textinput")
(find-rurima "== Instance Methods" "= class RSS::Maker::TextinputBase" "refm/api/src/rss/maker/Textinput")
(find-rurima "--- title" "== Instance Methods" "= class RSS::Maker::TextinputBase" "refm/api/src/rss/maker/Textinput")
(find-rurima "--- title=()" "== Instance Methods" "= class RSS::Maker::TextinputBase" "refm/api/src/rss/maker/Textinput")
(find-rurima "--- description" "== Instance Methods" "= class RSS::Maker::TextinputBase" "refm/api/src/rss/maker/Textinput")
(find-rurima "--- description=()" "== Instance Methods" "= class RSS::Maker::TextinputBase" "refm/api/src/rss/maker/Textinput")
(find-rurima "--- name" "== Instance Methods" "= class RSS::Maker::TextinputBase" "refm/api/src/rss/maker/Textinput")
(find-rurima "--- name=()" "== Instance Methods" "= class RSS::Maker::TextinputBase" "refm/api/src/rss/maker/Textinput")
(find-rurima "--- link" "== Instance Methods" "= class RSS::Maker::TextinputBase" "refm/api/src/rss/maker/Textinput")
(find-rurima "--- link=()" "== Instance Methods" "= class RSS::Maker::TextinputBase" "refm/api/src/rss/maker/Textinput")
(find-rurima "= class RSS::Maker::RSS09::Textinput < RSS::Maker::TextinputBase" "refm/api/src/rss/maker/Textinput")
(find-rurima "= class RSS::Maker::RSS10::Textinput < RSS::Maker::TextinputBase" "refm/api/src/rss/maker/Textinput")
(find-rurima "= class RSS::Maker::RSS20::Textinput < RSS::Maker::RSS09::Textinput" "refm/api/src/rss/maker/Textinput")
(find-rurima "= class RSS::Maker::Base < Object" "refm/api/src/rss/maker/Items")
(find-rurima "= class RSS::Maker::ItemsBase < RSS::Maker::Base" "refm/api/src/rss/maker/Items")
(find-rurima "== Instance Methods" "= class RSS::Maker::ItemsBase < RSS::Maker::Base" "refm/api/src/rss/maker/Items")
(find-rurima "--- new_item" "== Instance Methods" "= class RSS::Maker::ItemsBase < RSS::Maker::Base" "refm/api/src/rss/maker/Items")
(find-rurima "--- do_sort" "== Instance Methods" "= class RSS::Maker::ItemsBase < RSS::Maker::Base" "refm/api/src/rss/maker/Items")
(find-rurima "--- do_sort=()" "== Instance Methods" "= class RSS::Maker::ItemsBase < RSS::Maker::Base" "refm/api/src/rss/maker/Items")
(find-rurima "--- max_size" "== Instance Methods" "= class RSS::Maker::ItemsBase < RSS::Maker::Base" "refm/api/src/rss/maker/Items")
(find-rurima "--- max_size=()" "== Instance Methods" "= class RSS::Maker::ItemsBase < RSS::Maker::Base" "refm/api/src/rss/maker/Items")
(find-rurima "= class RSS::Maker::RSS09::Items < RSS::Maker::ItemsBase" "refm/api/src/rss/maker/Items")
(find-rurima "= class RSS::Maker::RSS10::Items < RSS::Maker::ItemsBase" "refm/api/src/rss/maker/Items")
(find-rurima "= class RSS::Maker::RSS20::Items < RSS::Maker::RSS09::Items" "refm/api/src/rss/maker/Items")
(find-rurima "= class RSS::Maker::ItemsBase::ItemBase < Object" "refm/api/src/rss/maker/Items")
(find-rurima "== Instance Methods" "= class RSS::Maker::ItemsBase::ItemBase < Object" "refm/api/src/rss/maker/Items")
(find-rurima "--- title" "== Instance Methods" "= class RSS::Maker::ItemsBase::ItemBase < Object" "refm/api/src/rss/maker/Items")
(find-rurima "--- title=()" "== Instance Methods" "= class RSS::Maker::ItemsBase::ItemBase < Object" "refm/api/src/rss/maker/Items")
(find-rurima "--- link" "== Instance Methods" "= class RSS::Maker::ItemsBase::ItemBase < Object" "refm/api/src/rss/maker/Items")
(find-rurima "--- link=()" "== Instance Methods" "= class RSS::Maker::ItemsBase::ItemBase < Object" "refm/api/src/rss/maker/Items")
(find-rurima "--- description" "== Instance Methods" "= class RSS::Maker::ItemsBase::ItemBase < Object" "refm/api/src/rss/maker/Items")
(find-rurima "--- description=()" "== Instance Methods" "= class RSS::Maker::ItemsBase::ItemBase < Object" "refm/api/src/rss/maker/Items")
(find-rurima "--- date" "== Instance Methods" "= class RSS::Maker::ItemsBase::ItemBase < Object" "refm/api/src/rss/maker/Items")
(find-rurima "--- date=()" "== Instance Methods" "= class RSS::Maker::ItemsBase::ItemBase < Object" "refm/api/src/rss/maker/Items")
(find-rurima "--- pubDate" "== Instance Methods" "= class RSS::Maker::ItemsBase::ItemBase < Object" "refm/api/src/rss/maker/Items")
(find-rurima "--- pubDate=()" "== Instance Methods" "= class RSS::Maker::ItemsBase::ItemBase < Object" "refm/api/src/rss/maker/Items")
(find-rurima "--- author" "== Instance Methods" "= class RSS::Maker::ItemsBase::ItemBase < Object" "refm/api/src/rss/maker/Items")
(find-rurima "--- author=()" "== Instance Methods" "= class RSS::Maker::ItemsBase::ItemBase < Object" "refm/api/src/rss/maker/Items")
(find-rurima "--- comments" "== Instance Methods" "= class RSS::Maker::ItemsBase::ItemBase < Object" "refm/api/src/rss/maker/Items")
(find-rurima "--- comments=()" "== Instance Methods" "= class RSS::Maker::ItemsBase::ItemBase < Object" "refm/api/src/rss/maker/Items")
(find-rurima "--- guid" "== Instance Methods" "= class RSS::Maker::ItemsBase::ItemBase < Object" "refm/api/src/rss/maker/Items")
(find-rurima "--- enclosure" "== Instance Methods" "= class RSS::Maker::ItemsBase::ItemBase < Object" "refm/api/src/rss/maker/Items")
(find-rurima "--- source" "== Instance Methods" "= class RSS::Maker::ItemsBase::ItemBase < Object" "refm/api/src/rss/maker/Items")
(find-rurima "--- categories" "== Instance Methods" "= class RSS::Maker::ItemsBase::ItemBase < Object" "refm/api/src/rss/maker/Items")
(find-rurima "= class RSS::Maker::RSS09::Items::Item < RSS::Maker::ItemsBase::ItemBase" "refm/api/src/rss/maker/Items")
(find-rurima "= class RSS::Maker::RSS10::Items::Item < RSS::Maker::ItemsBase::ItemBase" "refm/api/src/rss/maker/Items")
(find-rurima "= class RSS::Maker::RSS20::Items::Item < RSS::Maker::RSS09::Items::Item" "refm/api/src/rss/maker/Items")
(find-rurima "= class RSS::Maker::ItemsBase::ItemBase::GuidBase < RSS::Maker::Base" "refm/api/src/rss/maker/Items")
(find-rurima "= class RSS::Maker::RSS09::Items::Item::Guid < RSS::Maker::ItemsBase::ItemBase::GuidBase" "refm/api/src/rss/maker/Items")
(find-rurima "= class RSS::Maker::RSS20::Items::Item::Guid < RSS::Maker::RSS09::Items::Item::Guid" "refm/api/src/rss/maker/Items")
(find-rurima "== Instance Methods" "= class RSS::Maker::RSS20::Items::Item::Guid < RSS::Maker::RSS09::Items::Item::Guid" "refm/api/src/rss/maker/Items")
(find-rurima "--- isPermaLink" "== Instance Methods" "= class RSS::Maker::RSS20::Items::Item::Guid < RSS::Maker::RSS09::Items::Item::Guid" "refm/api/src/rss/maker/Items")
(find-rurima "--- isPermaLink=()" "== Instance Methods" "= class RSS::Maker::RSS20::Items::Item::Guid < RSS::Maker::RSS09::Items::Item::Guid" "refm/api/src/rss/maker/Items")
(find-rurima "--- content" "== Instance Methods" "= class RSS::Maker::RSS20::Items::Item::Guid < RSS::Maker::RSS09::Items::Item::Guid" "refm/api/src/rss/maker/Items")
(find-rurima "--- content=()" "== Instance Methods" "= class RSS::Maker::RSS20::Items::Item::Guid < RSS::Maker::RSS09::Items::Item::Guid" "refm/api/src/rss/maker/Items")
(find-rurima "= class RSS::Maker::ItemsBase::ItemBase::EnclosureBase < RSS::Maker::Base" "refm/api/src/rss/maker/Items")
(find-rurima "= class RSS::Maker::RSS09::Items::Item::Enclosure < RSS::Maker::ItemsBase::ItemBase::EnclosureBase" "refm/api/src/rss/maker/Items")
(find-rurima "= class RSS::Maker::RSS20::Items::Item::Enclosure < RSS::Maker::RSS09::Items::Item::Enclosure" "refm/api/src/rss/maker/Items")
(find-rurima "== Instance Methods" "= class RSS::Maker::RSS20::Items::Item::Enclosure < RSS::Maker::RSS09::Items::Item::Enclosure" "refm/api/src/rss/maker/Items")
(find-rurima "--- url" "== Instance Methods" "= class RSS::Maker::RSS20::Items::Item::Enclosure < RSS::Maker::RSS09::Items::Item::Enclosure" "refm/api/src/rss/maker/Items")
(find-rurima "--- url=()" "== Instance Methods" "= class RSS::Maker::RSS20::Items::Item::Enclosure < RSS::Maker::RSS09::Items::Item::Enclosure" "refm/api/src/rss/maker/Items")
(find-rurima "--- length" "== Instance Methods" "= class RSS::Maker::RSS20::Items::Item::Enclosure < RSS::Maker::RSS09::Items::Item::Enclosure" "refm/api/src/rss/maker/Items")
(find-rurima "--- length=()" "== Instance Methods" "= class RSS::Maker::RSS20::Items::Item::Enclosure < RSS::Maker::RSS09::Items::Item::Enclosure" "refm/api/src/rss/maker/Items")
(find-rurima "--- type" "== Instance Methods" "= class RSS::Maker::RSS20::Items::Item::Enclosure < RSS::Maker::RSS09::Items::Item::Enclosure" "refm/api/src/rss/maker/Items")
(find-rurima "--- type=()" "== Instance Methods" "= class RSS::Maker::RSS20::Items::Item::Enclosure < RSS::Maker::RSS09::Items::Item::Enclosure" "refm/api/src/rss/maker/Items")
(find-rurima "= class RSS::Maker::ItemsBase::ItemBase::SourceBase < RSS::Maker::Base" "refm/api/src/rss/maker/Items")
(find-rurima "= class RSS::Maker::RSS09::Items::Item::Source < RSS::Maker::ItemsBase::ItemBase::SourceBase" "refm/api/src/rss/maker/Items")
(find-rurima "= class RSS::Maker::RSS20::Items::Item::Source < RSS::Maker::RSS09::Items::Item::Source" "refm/api/src/rss/maker/Items")
(find-rurima "== Instance Methods" "= class RSS::Maker::RSS20::Items::Item::Source < RSS::Maker::RSS09::Items::Item::Source" "refm/api/src/rss/maker/Items")
(find-rurima "--- url" "== Instance Methods" "= class RSS::Maker::RSS20::Items::Item::Source < RSS::Maker::RSS09::Items::Item::Source" "refm/api/src/rss/maker/Items")
(find-rurima "--- url=()" "== Instance Methods" "= class RSS::Maker::RSS20::Items::Item::Source < RSS::Maker::RSS09::Items::Item::Source" "refm/api/src/rss/maker/Items")
(find-rurima "--- content" "== Instance Methods" "= class RSS::Maker::RSS20::Items::Item::Source < RSS::Maker::RSS09::Items::Item::Source" "refm/api/src/rss/maker/Items")
(find-rurima "--- content=()" "== Instance Methods" "= class RSS::Maker::RSS20::Items::Item::Source < RSS::Maker::RSS09::Items::Item::Source" "refm/api/src/rss/maker/Items")
(find-rurima "= class RSS::Maker::ItemsBase::ItemBase::CategoriesBase < RSS::Maker::Base" "refm/api/src/rss/maker/Items")
(find-rurima "= class RSS::Maker::RSS09::Items::Item::Categories < RSS::Maker::ItemsBase::ItemBase::CategoriesBase" "refm/api/src/rss/maker/Items")
(find-rurima "= class RSS::Maker::RSS20::Items::Item::Categories < RSS::Maker::RSS09::Items::Item::Categories" "refm/api/src/rss/maker/Items")
(find-rurima "== Instance Methods" "= class RSS::Maker::RSS20::Items::Item::Categories < RSS::Maker::RSS09::Items::Item::Categories" "refm/api/src/rss/maker/Items")
(find-rurima "--- new_category" "== Instance Methods" "= class RSS::Maker::RSS20::Items::Item::Categories < RSS::Maker::RSS09::Items::Item::Categories" "refm/api/src/rss/maker/Items")
(find-rurima "= class RSS::Maker::ImageBase" "refm/api/src/rss/maker/Image")
(find-rurima "== Instance Methods" "= class RSS::Maker::ImageBase" "refm/api/src/rss/maker/Image")
(find-rurima "--- title" "== Instance Methods" "= class RSS::Maker::ImageBase" "refm/api/src/rss/maker/Image")
(find-rurima "--- title=()" "== Instance Methods" "= class RSS::Maker::ImageBase" "refm/api/src/rss/maker/Image")
(find-rurima "--- url" "== Instance Methods" "= class RSS::Maker::ImageBase" "refm/api/src/rss/maker/Image")
(find-rurima "--- url=()" "== Instance Methods" "= class RSS::Maker::ImageBase" "refm/api/src/rss/maker/Image")
(find-rurima "--- width" "== Instance Methods" "= class RSS::Maker::ImageBase" "refm/api/src/rss/maker/Image")
(find-rurima "--- width=()" "== Instance Methods" "= class RSS::Maker::ImageBase" "refm/api/src/rss/maker/Image")
(find-rurima "--- height" "== Instance Methods" "= class RSS::Maker::ImageBase" "refm/api/src/rss/maker/Image")
(find-rurima "--- height=()" "== Instance Methods" "= class RSS::Maker::ImageBase" "refm/api/src/rss/maker/Image")
(find-rurima "--- description" "== Instance Methods" "= class RSS::Maker::ImageBase" "refm/api/src/rss/maker/Image")
(find-rurima "--- description=()" "== Instance Methods" "= class RSS::Maker::ImageBase" "refm/api/src/rss/maker/Image")
(find-rurima "= class RSS::Maker::RSS09::Image < RSS::Maker::ImageBase" "refm/api/src/rss/maker/Image")
(find-rurima "= class RSS::Maker::RSS10::Image < RSS::Maker::ImageBase" "refm/api/src/rss/maker/Image")
(find-rurima "= class RSS::Maker::RSS20::Image < RSS::Maker::RSS09::Image" "refm/api/src/rss/maker/Image")
(find-rurima "= class RSS::Maker::ChannelBase::CloudBase < Object" "refm/api/src/rss/maker/Cloud")
(find-rurima "== Instance Methods" "= class RSS::Maker::ChannelBase::CloudBase < Object" "refm/api/src/rss/maker/Cloud")
(find-rurima "--- domain" "== Instance Methods" "= class RSS::Maker::ChannelBase::CloudBase < Object" "refm/api/src/rss/maker/Cloud")
(find-rurima "--- domain=()" "== Instance Methods" "= class RSS::Maker::ChannelBase::CloudBase < Object" "refm/api/src/rss/maker/Cloud")
(find-rurima "--- port" "== Instance Methods" "= class RSS::Maker::ChannelBase::CloudBase < Object" "refm/api/src/rss/maker/Cloud")
(find-rurima "--- port=()" "== Instance Methods" "= class RSS::Maker::ChannelBase::CloudBase < Object" "refm/api/src/rss/maker/Cloud")
(find-rurima "--- path" "== Instance Methods" "= class RSS::Maker::ChannelBase::CloudBase < Object" "refm/api/src/rss/maker/Cloud")
(find-rurima "--- path=()" "== Instance Methods" "= class RSS::Maker::ChannelBase::CloudBase < Object" "refm/api/src/rss/maker/Cloud")
(find-rurima "--- registerProcedure" "== Instance Methods" "= class RSS::Maker::ChannelBase::CloudBase < Object" "refm/api/src/rss/maker/Cloud")
(find-rurima "--- registerProcedure=()" "== Instance Methods" "= class RSS::Maker::ChannelBase::CloudBase < Object" "refm/api/src/rss/maker/Cloud")
(find-rurima "--- protocol" "== Instance Methods" "= class RSS::Maker::ChannelBase::CloudBase < Object" "refm/api/src/rss/maker/Cloud")
(find-rurima "--- protocol=()" "== Instance Methods" "= class RSS::Maker::ChannelBase::CloudBase < Object" "refm/api/src/rss/maker/Cloud")
(find-rurima "= class RSS::Maker::RSS09::Channel::Cloud < RSS::Maker::ChannelBase::CloudBase" "refm/api/src/rss/maker/Cloud")
(find-rurima "= class RSS::Maker::RSS10::Channel::Cloud < RSS::Maker::ChannelBase::CloudBase" "refm/api/src/rss/maker/Cloud")
(find-rurima "= class RSS::Maker::RSS20::Channel::Cloud < RSS::Maker::RSS09::Channel::Cloud" "refm/api/src/rss/maker/Cloud")
(find-rurima "= class RSS::Maker::ChannelBase < Object" "refm/api/src/rss/maker/Channel")
(find-rurima "== Instance Methods" "= class RSS::Maker::ChannelBase < Object" "refm/api/src/rss/maker/Channel")
(find-rurima "--- about" "== Instance Methods" "= class RSS::Maker::ChannelBase < Object" "refm/api/src/rss/maker/Channel")
(find-rurima "--- about=()" "== Instance Methods" "= class RSS::Maker::ChannelBase < Object" "refm/api/src/rss/maker/Channel")
(find-rurima "--- title" "== Instance Methods" "= class RSS::Maker::ChannelBase < Object" "refm/api/src/rss/maker/Channel")
(find-rurima "--- title=()" "== Instance Methods" "= class RSS::Maker::ChannelBase < Object" "refm/api/src/rss/maker/Channel")
(find-rurima "--- link" "== Instance Methods" "= class RSS::Maker::ChannelBase < Object" "refm/api/src/rss/maker/Channel")
(find-rurima "--- link=()" "== Instance Methods" "= class RSS::Maker::ChannelBase < Object" "refm/api/src/rss/maker/Channel")
(find-rurima "--- description" "== Instance Methods" "= class RSS::Maker::ChannelBase < Object" "refm/api/src/rss/maker/Channel")
(find-rurima "--- description=()" "== Instance Methods" "= class RSS::Maker::ChannelBase < Object" "refm/api/src/rss/maker/Channel")
(find-rurima "--- language" "== Instance Methods" "= class RSS::Maker::ChannelBase < Object" "refm/api/src/rss/maker/Channel")
(find-rurima "--- language=()" "== Instance Methods" "= class RSS::Maker::ChannelBase < Object" "refm/api/src/rss/maker/Channel")
(find-rurima "--- copyright" "== Instance Methods" "= class RSS::Maker::ChannelBase < Object" "refm/api/src/rss/maker/Channel")
(find-rurima "--- copyright=()" "== Instance Methods" "= class RSS::Maker::ChannelBase < Object" "refm/api/src/rss/maker/Channel")
(find-rurima "--- managingEditor" "== Instance Methods" "= class RSS::Maker::ChannelBase < Object" "refm/api/src/rss/maker/Channel")
(find-rurima "--- managingEditor=()" "== Instance Methods" "= class RSS::Maker::ChannelBase < Object" "refm/api/src/rss/maker/Channel")
(find-rurima "--- webMaster" "== Instance Methods" "= class RSS::Maker::ChannelBase < Object" "refm/api/src/rss/maker/Channel")
(find-rurima "--- webMaster=()" "== Instance Methods" "= class RSS::Maker::ChannelBase < Object" "refm/api/src/rss/maker/Channel")
(find-rurima "--- rating" "== Instance Methods" "= class RSS::Maker::ChannelBase < Object" "refm/api/src/rss/maker/Channel")
(find-rurima "--- rating=()" "== Instance Methods" "= class RSS::Maker::ChannelBase < Object" "refm/api/src/rss/maker/Channel")
(find-rurima "--- docs" "== Instance Methods" "= class RSS::Maker::ChannelBase < Object" "refm/api/src/rss/maker/Channel")
(find-rurima "--- docs=()" "== Instance Methods" "= class RSS::Maker::ChannelBase < Object" "refm/api/src/rss/maker/Channel")
(find-rurima "--- date" "== Instance Methods" "= class RSS::Maker::ChannelBase < Object" "refm/api/src/rss/maker/Channel")
(find-rurima "--- date=()" "== Instance Methods" "= class RSS::Maker::ChannelBase < Object" "refm/api/src/rss/maker/Channel")
(find-rurima "--- pubDate" "== Instance Methods" "= class RSS::Maker::ChannelBase < Object" "refm/api/src/rss/maker/Channel")
(find-rurima "--- pubDate=()" "== Instance Methods" "= class RSS::Maker::ChannelBase < Object" "refm/api/src/rss/maker/Channel")
(find-rurima "--- lastBuildDate" "== Instance Methods" "= class RSS::Maker::ChannelBase < Object" "refm/api/src/rss/maker/Channel")
(find-rurima "--- lastBuildDate=()" "== Instance Methods" "= class RSS::Maker::ChannelBase < Object" "refm/api/src/rss/maker/Channel")
(find-rurima "--- generator" "== Instance Methods" "= class RSS::Maker::ChannelBase < Object" "refm/api/src/rss/maker/Channel")
(find-rurima "--- generator=()" "== Instance Methods" "= class RSS::Maker::ChannelBase < Object" "refm/api/src/rss/maker/Channel")
(find-rurima "--- ttl" "== Instance Methods" "= class RSS::Maker::ChannelBase < Object" "refm/api/src/rss/maker/Channel")
(find-rurima "--- ttl=()" "== Instance Methods" "= class RSS::Maker::ChannelBase < Object" "refm/api/src/rss/maker/Channel")
(find-rurima "--- categories" "== Instance Methods" "= class RSS::Maker::ChannelBase < Object" "refm/api/src/rss/maker/Channel")
(find-rurima "--- cloud" "== Instance Methods" "= class RSS::Maker::ChannelBase < Object" "refm/api/src/rss/maker/Channel")
(find-rurima "--- skipDays" "== Instance Methods" "= class RSS::Maker::ChannelBase < Object" "refm/api/src/rss/maker/Channel")
(find-rurima "--- skipHours" "== Instance Methods" "= class RSS::Maker::ChannelBase < Object" "refm/api/src/rss/maker/Channel")
(find-rurima "= class RSS::Maker::RSS09::Channel < RSS::Maker::ChannelBase" "refm/api/src/rss/maker/Channel")
(find-rurima "= class RSS::Maker::RSS10::Channel < RSS::Maker::ChannelBase" "refm/api/src/rss/maker/Channel")
(find-rurima "= class RSS::Maker::RSS20::Channel < RSS::Maker::RSS09::Channel" "refm/api/src/rss/maker/Channel")
(find-rurima "= module RSS::Maker" "refm/api/src/rss/maker/Maker")
(find-rurima "== Singleton Methods" "= module RSS::Maker" "refm/api/src/rss/maker/Maker")
(find-rurima "--- make(version, &block)" "== Singleton Methods" "= module RSS::Maker" "refm/api/src/rss/maker/Maker")
(find-rurima "= class RSS::Maker::RSSBase" "refm/api/src/rss/maker/Maker")
(find-rurima "== Instance Methods" "= class RSS::Maker::RSSBase" "refm/api/src/rss/maker/Maker")
(find-rurima "--- version" "== Instance Methods" "= class RSS::Maker::RSSBase" "refm/api/src/rss/maker/Maker")
(find-rurima "--- version=()" "== Instance Methods" "= class RSS::Maker::RSSBase" "refm/api/src/rss/maker/Maker")
(find-rurima "--- encoding" "== Instance Methods" "= class RSS::Maker::RSSBase" "refm/api/src/rss/maker/Maker")
(find-rurima "--- encoding=()" "== Instance Methods" "= class RSS::Maker::RSSBase" "refm/api/src/rss/maker/Maker")
(find-rurima "--- standalone" "== Instance Methods" "= class RSS::Maker::RSSBase" "refm/api/src/rss/maker/Maker")
(find-rurima "--- standalone=()" "== Instance Methods" "= class RSS::Maker::RSSBase" "refm/api/src/rss/maker/Maker")
(find-rurima "--- rss_version" "== Instance Methods" "= class RSS::Maker::RSSBase" "refm/api/src/rss/maker/Maker")
(find-rurima "--- xml_stylesheets" "== Instance Methods" "= class RSS::Maker::RSSBase" "refm/api/src/rss/maker/Maker")
(find-rurima "--- channel" "== Instance Methods" "= class RSS::Maker::RSSBase" "refm/api/src/rss/maker/Maker")
(find-rurima "--- image" "== Instance Methods" "= class RSS::Maker::RSSBase" "refm/api/src/rss/maker/Maker")
(find-rurima "--- items" "== Instance Methods" "= class RSS::Maker::RSSBase" "refm/api/src/rss/maker/Maker")
(find-rurima "--- textinput" "== Instance Methods" "= class RSS::Maker::RSSBase" "refm/api/src/rss/maker/Maker")
(find-rurima "= class RSS::Maker::RSS10 < RSS::Maker::RSSBase" "refm/api/src/rss/maker/Maker")
(find-rurima "= class RSS::Maker::RSS20 < RSS::Maker::RSSBase" "refm/api/src/rss/maker/Maker")
(find-rurima "= class RSS::Maker::ChannelBase::SkipHoursBase < Object" "refm/api/src/rss/maker/SkipHours")
(find-rurima "== Instance Methods" "= class RSS::Maker::ChannelBase::SkipHoursBase < Object" "refm/api/src/rss/maker/SkipHours")
(find-rurima "--- new_hour" "== Instance Methods" "= class RSS::Maker::ChannelBase::SkipHoursBase < Object" "refm/api/src/rss/maker/SkipHours")
(find-rurima "= class RSS::Maker::RSS09::Channel::SkipHours < RSS::Maker::ChannelBase::SkipHoursBase" "refm/api/src/rss/maker/SkipHours")
(find-rurima "= class RSS::Maker::RSS20::Channel::SkipHours < RSS::Maker::RSS09::Channel::SkipHours" "refm/api/src/rss/maker/SkipHours")
(find-rurima "= class RSS::Maker::ChannelBase::SkipHoursBase::HourBase < Object" "refm/api/src/rss/maker/SkipHours")
(find-rurima "== Instance Methods" "= class RSS::Maker::ChannelBase::SkipHoursBase::HourBase < Object" "refm/api/src/rss/maker/SkipHours")
(find-rurima "--- content" "== Instance Methods" "= class RSS::Maker::ChannelBase::SkipHoursBase::HourBase < Object" "refm/api/src/rss/maker/SkipHours")
(find-rurima "--- content=()" "== Instance Methods" "= class RSS::Maker::ChannelBase::SkipHoursBase::HourBase < Object" "refm/api/src/rss/maker/SkipHours")
(find-rurima "= class RSS::Maker::RSS09::Channel::SkipHours::Hour < RSS::Maker::ChannelBase::SkipHoursBase::HourBase" "refm/api/src/rss/maker/SkipHours")
(find-rurima "= class RSS::Maker::RSS20::Channel::SkipHours::Hour < RSS::Maker::RSS09::Channel::SkipHours::Hour" "refm/api/src/rss/maker/SkipHours")
(find-rurima "= class RSS::Maker::XMLStyleSheets::XMLStyleSheet < Object" "refm/api/src/rss/maker/XMLStyleSheet")
(find-rurima "== Instance Methods" "= class RSS::Maker::XMLStyleSheets::XMLStyleSheet < Object" "refm/api/src/rss/maker/XMLStyleSheet")
(find-rurima "--- href" "== Instance Methods" "= class RSS::Maker::XMLStyleSheets::XMLStyleSheet < Object" "refm/api/src/rss/maker/XMLStyleSheet")
(find-rurima "--- href=()" "== Instance Methods" "= class RSS::Maker::XMLStyleSheets::XMLStyleSheet < Object" "refm/api/src/rss/maker/XMLStyleSheet")
(find-rurima "--- type" "== Instance Methods" "= class RSS::Maker::XMLStyleSheets::XMLStyleSheet < Object" "refm/api/src/rss/maker/XMLStyleSheet")
(find-rurima "--- type=()" "== Instance Methods" "= class RSS::Maker::XMLStyleSheets::XMLStyleSheet < Object" "refm/api/src/rss/maker/XMLStyleSheet")
(find-rurima "--- title" "== Instance Methods" "= class RSS::Maker::XMLStyleSheets::XMLStyleSheet < Object" "refm/api/src/rss/maker/XMLStyleSheet")
(find-rurima "--- title=()" "== Instance Methods" "= class RSS::Maker::XMLStyleSheets::XMLStyleSheet < Object" "refm/api/src/rss/maker/XMLStyleSheet")
(find-rurima "--- media" "== Instance Methods" "= class RSS::Maker::XMLStyleSheets::XMLStyleSheet < Object" "refm/api/src/rss/maker/XMLStyleSheet")
(find-rurima "--- media=()" "== Instance Methods" "= class RSS::Maker::XMLStyleSheets::XMLStyleSheet < Object" "refm/api/src/rss/maker/XMLStyleSheet")
(find-rurima "--- charset" "== Instance Methods" "= class RSS::Maker::XMLStyleSheets::XMLStyleSheet < Object" "refm/api/src/rss/maker/XMLStyleSheet")
(find-rurima "--- charset=()" "== Instance Methods" "= class RSS::Maker::XMLStyleSheets::XMLStyleSheet < Object" "refm/api/src/rss/maker/XMLStyleSheet")
(find-rurima "--- alternate" "== Instance Methods" "= class RSS::Maker::XMLStyleSheets::XMLStyleSheet < Object" "refm/api/src/rss/maker/XMLStyleSheet")
(find-rurima "--- alternate=()" "== Instance Methods" "= class RSS::Maker::XMLStyleSheets::XMLStyleSheet < Object" "refm/api/src/rss/maker/XMLStyleSheet")
(find-rurima "= module RSS::Maker::DublinCoreModel" "refm/api/src/rss/maker/DublinCore")
(find-rurima "= class RSS::Rss < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "== Instance Methods" "= class RSS::Rss < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- channel" "== Instance Methods" "= class RSS::Rss < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- channel=" "== Instance Methods" "= class RSS::Rss < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- encoding" "== Instance Methods" "= class RSS::Rss < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- encoding=" "== Instance Methods" "= class RSS::Rss < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- image" "== Instance Methods" "= class RSS::Rss < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- items" "== Instance Methods" "= class RSS::Rss < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- rss_version" "== Instance Methods" "= class RSS::Rss < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- rss_version=" "== Instance Methods" "= class RSS::Rss < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- standalone" "== Instance Methods" "= class RSS::Rss < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- standalone=" "== Instance Methods" "= class RSS::Rss < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- textinput" "== Instance Methods" "= class RSS::Rss < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- version" "== Instance Methods" "= class RSS::Rss < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- version=" "== Instance Methods" "= class RSS::Rss < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "= class RSS::Rss::Channel < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "== Instance Methods" "= class RSS::Rss::Channel < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- categories" "== Instance Methods" "= class RSS::Rss::Channel < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- category" "== Instance Methods" "= class RSS::Rss::Channel < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- category=" "== Instance Methods" "= class RSS::Rss::Channel < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- copyright" "== Instance Methods" "= class RSS::Rss::Channel < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- copyright=" "== Instance Methods" "= class RSS::Rss::Channel < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- date" "== Instance Methods" "= class RSS::Rss::Channel < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- pubDate" "== Instance Methods" "= class RSS::Rss::Channel < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- date=" "== Instance Methods" "= class RSS::Rss::Channel < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- pubDate=" "== Instance Methods" "= class RSS::Rss::Channel < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- description" "== Instance Methods" "= class RSS::Rss::Channel < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- description=" "== Instance Methods" "= class RSS::Rss::Channel < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- docs" "== Instance Methods" "= class RSS::Rss::Channel < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- docs=" "== Instance Methods" "= class RSS::Rss::Channel < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- image" "== Instance Methods" "= class RSS::Rss::Channel < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- image=" "== Instance Methods" "= class RSS::Rss::Channel < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- items" "== Instance Methods" "= class RSS::Rss::Channel < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- item" "== Instance Methods" "= class RSS::Rss::Channel < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- item=" "== Instance Methods" "= class RSS::Rss::Channel < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- language" "== Instance Methods" "= class RSS::Rss::Channel < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- language=" "== Instance Methods" "= class RSS::Rss::Channel < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- lastBuildDate" "== Instance Methods" "= class RSS::Rss::Channel < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- lastBuildDate=" "== Instance Methods" "= class RSS::Rss::Channel < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- link" "== Instance Methods" "= class RSS::Rss::Channel < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- link=" "== Instance Methods" "= class RSS::Rss::Channel < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- managingEditor" "== Instance Methods" "= class RSS::Rss::Channel < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- managingEditor=" "== Instance Methods" "= class RSS::Rss::Channel < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- rating" "== Instance Methods" "= class RSS::Rss::Channel < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- rating=" "== Instance Methods" "= class RSS::Rss::Channel < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- skipDays" "== Instance Methods" "= class RSS::Rss::Channel < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- skipDays=" "== Instance Methods" "= class RSS::Rss::Channel < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- skipHours" "== Instance Methods" "= class RSS::Rss::Channel < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- skipHours=" "== Instance Methods" "= class RSS::Rss::Channel < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- textInput" "== Instance Methods" "= class RSS::Rss::Channel < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- textInput=" "== Instance Methods" "= class RSS::Rss::Channel < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- title" "== Instance Methods" "= class RSS::Rss::Channel < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- title=" "== Instance Methods" "= class RSS::Rss::Channel < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- webMaster" "== Instance Methods" "= class RSS::Rss::Channel < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- webMaster=" "== Instance Methods" "= class RSS::Rss::Channel < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "= class RSS::Rss::SkipDays < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "== Instance Methods" "= class RSS::Rss::SkipDays < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- day" "== Instance Methods" "= class RSS::Rss::SkipDays < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- day=" "== Instance Methods" "= class RSS::Rss::SkipDays < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- days" "== Instance Methods" "= class RSS::Rss::SkipDays < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "= class RSS::Rss::SkipHours < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "== Instance Methods" "= class RSS::Rss::SkipHours < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- hour" "== Instance Methods" "= class RSS::Rss::SkipHours < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- hour=" "== Instance Methods" "= class RSS::Rss::SkipHours < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- hours" "== Instance Methods" "= class RSS::Rss::SkipHours < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "= class RSS::Rss::Channel::Image < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "== Instance Methods" "= class RSS::Rss::Channel::Image < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- description" "== Instance Methods" "= class RSS::Rss::Channel::Image < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- description=" "== Instance Methods" "= class RSS::Rss::Channel::Image < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- height" "== Instance Methods" "= class RSS::Rss::Channel::Image < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- height=" "== Instance Methods" "= class RSS::Rss::Channel::Image < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- link" "== Instance Methods" "= class RSS::Rss::Channel::Image < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- link=" "== Instance Methods" "= class RSS::Rss::Channel::Image < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- title" "== Instance Methods" "= class RSS::Rss::Channel::Image < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- title=" "== Instance Methods" "= class RSS::Rss::Channel::Image < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- url" "== Instance Methods" "= class RSS::Rss::Channel::Image < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- url=" "== Instance Methods" "= class RSS::Rss::Channel::Image < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- width" "== Instance Methods" "= class RSS::Rss::Channel::Image < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- width=" "== Instance Methods" "= class RSS::Rss::Channel::Image < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "= class RSS::Rss::Channel::Cloud < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "== Instance Methods" "= class RSS::Rss::Channel::Cloud < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- domain" "== Instance Methods" "= class RSS::Rss::Channel::Cloud < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- domain=" "== Instance Methods" "= class RSS::Rss::Channel::Cloud < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- path" "== Instance Methods" "= class RSS::Rss::Channel::Cloud < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- path=" "== Instance Methods" "= class RSS::Rss::Channel::Cloud < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- port" "== Instance Methods" "= class RSS::Rss::Channel::Cloud < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- port=" "== Instance Methods" "= class RSS::Rss::Channel::Cloud < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- protocol" "== Instance Methods" "= class RSS::Rss::Channel::Cloud < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- protocol=" "== Instance Methods" "= class RSS::Rss::Channel::Cloud < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- registerProcedure" "== Instance Methods" "= class RSS::Rss::Channel::Cloud < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- registerProcedure=" "== Instance Methods" "= class RSS::Rss::Channel::Cloud < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "= class RSS::Rss::Channel::Item < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "== Instance Methods" "= class RSS::Rss::Channel::Item < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- categories" "== Instance Methods" "= class RSS::Rss::Channel::Item < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- category" "== Instance Methods" "= class RSS::Rss::Channel::Item < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- category=" "== Instance Methods" "= class RSS::Rss::Channel::Item < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- date" "== Instance Methods" "= class RSS::Rss::Channel::Item < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- date=" "== Instance Methods" "= class RSS::Rss::Channel::Item < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- description" "== Instance Methods" "= class RSS::Rss::Channel::Item < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- description=" "== Instance Methods" "= class RSS::Rss::Channel::Item < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- enclosure" "== Instance Methods" "= class RSS::Rss::Channel::Item < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- enclosure=" "== Instance Methods" "= class RSS::Rss::Channel::Item < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- link" "== Instance Methods" "= class RSS::Rss::Channel::Item < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- link=" "== Instance Methods" "= class RSS::Rss::Channel::Item < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- source" "== Instance Methods" "= class RSS::Rss::Channel::Item < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- source=" "== Instance Methods" "= class RSS::Rss::Channel::Item < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- title" "== Instance Methods" "= class RSS::Rss::Channel::Item < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- title=" "== Instance Methods" "= class RSS::Rss::Channel::Item < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "= class RSS::Rss::Channel::Item::Source < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "== Instance Methods" "= class RSS::Rss::Channel::Item::Source < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- content" "== Instance Methods" "= class RSS::Rss::Channel::Item::Source < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- content=" "== Instance Methods" "= class RSS::Rss::Channel::Item::Source < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- url" "== Instance Methods" "= class RSS::Rss::Channel::Item::Source < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- url=" "== Instance Methods" "= class RSS::Rss::Channel::Item::Source < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "= class RSS::Rss::Channel::Item::Enclosure < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "== Instance Methods" "= class RSS::Rss::Channel::Item::Enclosure < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- length" "== Instance Methods" "= class RSS::Rss::Channel::Item::Enclosure < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- length=" "== Instance Methods" "= class RSS::Rss::Channel::Item::Enclosure < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- type" "== Instance Methods" "= class RSS::Rss::Channel::Item::Enclosure < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- type=" "== Instance Methods" "= class RSS::Rss::Channel::Item::Enclosure < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- url" "== Instance Methods" "= class RSS::Rss::Channel::Item::Enclosure < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- url=" "== Instance Methods" "= class RSS::Rss::Channel::Item::Enclosure < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "= class RSS::Rss::Channel::Item::Category < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "== Instance Methods" "= class RSS::Rss::Channel::Item::Category < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- content" "== Instance Methods" "= class RSS::Rss::Channel::Item::Category < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- content=" "== Instance Methods" "= class RSS::Rss::Channel::Item::Category < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- domain" "== Instance Methods" "= class RSS::Rss::Channel::Item::Category < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- domain=" "== Instance Methods" "= class RSS::Rss::Channel::Item::Category < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "= class RSS::Rss::Channel::TextInput < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "== Instance Methods" "= class RSS::Rss::Channel::TextInput < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- description" "== Instance Methods" "= class RSS::Rss::Channel::TextInput < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- description=" "== Instance Methods" "= class RSS::Rss::Channel::TextInput < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- link" "== Instance Methods" "= class RSS::Rss::Channel::TextInput < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- link=" "== Instance Methods" "= class RSS::Rss::Channel::TextInput < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- name" "== Instance Methods" "= class RSS::Rss::Channel::TextInput < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- name=" "== Instance Methods" "= class RSS::Rss::Channel::TextInput < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- title" "== Instance Methods" "= class RSS::Rss::Channel::TextInput < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "--- title=" "== Instance Methods" "= class RSS::Rss::Channel::TextInput < RSS::Element" "refm/api/src/rss/0.9.rd")
(find-rurima "= module RSS::BaseTrackBackModel" "refm/api/src/rss/trackback.rd")
(find-rurima "== Instance Methods" "= module RSS::BaseTrackBackModel" "refm/api/src/rss/trackback.rd")
(find-rurima "--- trackback_about" "== Instance Methods" "= module RSS::BaseTrackBackModel" "refm/api/src/rss/trackback.rd")
(find-rurima "--- trackback_about=" "== Instance Methods" "= module RSS::BaseTrackBackModel" "refm/api/src/rss/trackback.rd")
(find-rurima "--- trackback_abouts" "== Instance Methods" "= module RSS::BaseTrackBackModel" "refm/api/src/rss/trackback.rd")
(find-rurima "--- trackback_ping" "== Instance Methods" "= module RSS::BaseTrackBackModel" "refm/api/src/rss/trackback.rd")
(find-rurima "--- trackback_ping=" "== Instance Methods" "= module RSS::BaseTrackBackModel" "refm/api/src/rss/trackback.rd")
(find-rurima "= module RSS::TrackBackModel10" "refm/api/src/rss/trackback.rd")
(find-rurima "= class RSS::TrackBackModel10::TrackBackPing < RSS::Element" "refm/api/src/rss/trackback.rd")
(find-rurima "== Instance Methods" "= class RSS::TrackBackModel10::TrackBackPing < RSS::Element" "refm/api/src/rss/trackback.rd")
(find-rurima "--- resource" "== Instance Methods" "= class RSS::TrackBackModel10::TrackBackPing < RSS::Element" "refm/api/src/rss/trackback.rd")
(find-rurima "--- resource=" "== Instance Methods" "= class RSS::TrackBackModel10::TrackBackPing < RSS::Element" "refm/api/src/rss/trackback.rd")
(find-rurima "--- value" "== Instance Methods" "= class RSS::TrackBackModel10::TrackBackPing < RSS::Element" "refm/api/src/rss/trackback.rd")
(find-rurima "--- value=" "== Instance Methods" "= class RSS::TrackBackModel10::TrackBackPing < RSS::Element" "refm/api/src/rss/trackback.rd")
(find-rurima "= class RSS::TrackBackModel10::TrackBackAbout < RSS::Element" "refm/api/src/rss/trackback.rd")
(find-rurima "== Instance Methods" "= class RSS::TrackBackModel10::TrackBackAbout < RSS::Element" "refm/api/src/rss/trackback.rd")
(find-rurima "--- resource" "== Instance Methods" "= class RSS::TrackBackModel10::TrackBackAbout < RSS::Element" "refm/api/src/rss/trackback.rd")
(find-rurima "--- resource=" "== Instance Methods" "= class RSS::TrackBackModel10::TrackBackAbout < RSS::Element" "refm/api/src/rss/trackback.rd")
(find-rurima "--- value" "== Instance Methods" "= class RSS::TrackBackModel10::TrackBackAbout < RSS::Element" "refm/api/src/rss/trackback.rd")
(find-rurima "--- value=" "== Instance Methods" "= class RSS::TrackBackModel10::TrackBackAbout < RSS::Element" "refm/api/src/rss/trackback.rd")
(find-rurima "= module RSS::TrackBackModel20" "refm/api/src/rss/trackback.rd")
(find-rurima "= class RSS::TrackBackModel20::TrackBackPing < RSS::Element" "refm/api/src/rss/trackback.rd")
(find-rurima "== Instance Methods" "= class RSS::TrackBackModel20::TrackBackPing < RSS::Element" "refm/api/src/rss/trackback.rd")
(find-rurima "--- content" "== Instance Methods" "= class RSS::TrackBackModel20::TrackBackPing < RSS::Element" "refm/api/src/rss/trackback.rd")
(find-rurima "--- content=" "== Instance Methods" "= class RSS::TrackBackModel20::TrackBackPing < RSS::Element" "refm/api/src/rss/trackback.rd")
(find-rurima "--- value" "== Instance Methods" "= class RSS::TrackBackModel20::TrackBackPing < RSS::Element" "refm/api/src/rss/trackback.rd")
(find-rurima "--- value=" "== Instance Methods" "= class RSS::TrackBackModel20::TrackBackPing < RSS::Element" "refm/api/src/rss/trackback.rd")
(find-rurima "= class RSS::TrackBackModel20::TrackBackAbout < RSS::Element" "refm/api/src/rss/trackback.rd")
(find-rurima "== Instance Methods" "= class RSS::TrackBackModel20::TrackBackAbout < RSS::Element" "refm/api/src/rss/trackback.rd")
(find-rurima "--- content" "== Instance Methods" "= class RSS::TrackBackModel20::TrackBackAbout < RSS::Element" "refm/api/src/rss/trackback.rd")
(find-rurima "--- content=" "== Instance Methods" "= class RSS::TrackBackModel20::TrackBackAbout < RSS::Element" "refm/api/src/rss/trackback.rd")
(find-rurima "--- value" "== Instance Methods" "= class RSS::TrackBackModel20::TrackBackAbout < RSS::Element" "refm/api/src/rss/trackback.rd")
(find-rurima "--- value=" "== Instance Methods" "= class RSS::TrackBackModel20::TrackBackAbout < RSS::Element" "refm/api/src/rss/trackback.rd")
(find-rurima "= class RSS::Parser < Object" "refm/api/src/rss/Parser")
(find-rurima "== Class Methods" "= class RSS::Parser < Object" "refm/api/src/rss/Parser")
(find-rurima "--- parse" "== Class Methods" "= class RSS::Parser < Object" "refm/api/src/rss/Parser")
(find-rurima "--- new" "== Class Methods" "= class RSS::Parser < Object" "refm/api/src/rss/Parser")
(find-rurima "== Instance Methods" "= class RSS::Parser < Object" "refm/api/src/rss/Parser")
(find-rurima "--- do_validate" "== Instance Methods" "= class RSS::Parser < Object" "refm/api/src/rss/Parser")
(find-rurima "--- do_validate=" "== Instance Methods" "= class RSS::Parser < Object" "refm/api/src/rss/Parser")
(find-rurima "--- ignore_unknown_element" "== Instance Methods" "= class RSS::Parser < Object" "refm/api/src/rss/Parser")
(find-rurima "--- ignore_unknown_element=" "== Instance Methods" "= class RSS::Parser < Object" "refm/api/src/rss/Parser")
(find-rurima "--- parse" "== Instance Methods" "= class RSS::Parser < Object" "refm/api/src/rss/Parser")
(find-rurima "--- rss" "== Instance Methods" "= class RSS::Parser < Object" "refm/api/src/rss/Parser")
(find-rurima "= class RSS::NotWellFormedError < RSS::Error" "refm/api/src/rss/Parser")
(find-rurima "== Instance Methods" "= class RSS::NotWellFormedError < RSS::Error" "refm/api/src/rss/Parser")
(find-rurima "--- line " "== Instance Methods" "= class RSS::NotWellFormedError < RSS::Error" "refm/api/src/rss/Parser")
(find-rurima "--- element" "== Instance Methods" "= class RSS::NotWellFormedError < RSS::Error" "refm/api/src/rss/Parser")
(find-rurima "= class RSS::XMLParserNotFound < RSS::Error" "refm/api/src/rss/Parser")
(find-rurima "= class RSS::NotValidXMLParser < RSS::Error" "refm/api/src/rss/Parser")
(find-rurima "= class RSS::NSError < RSS::Error" "refm/api/src/rss/Parser")
(find-rurima "== Instance Methods" "= class RSS::NSError < RSS::Error" "refm/api/src/rss/Parser")
(find-rurima "--- tag" "== Instance Methods" "= class RSS::NSError < RSS::Error" "refm/api/src/rss/Parser")
(find-rurima "--- prefix" "== Instance Methods" "= class RSS::NSError < RSS::Error" "refm/api/src/rss/Parser")
(find-rurima "--- uri" "== Instance Methods" "= class RSS::NSError < RSS::Error" "refm/api/src/rss/Parser")
(find-rurima "= class RSS::XMLStyleSheet < Object" "refm/api/src/rss/XMLStyleSheet")
(find-rurima "== Instance Methods" "= class RSS::XMLStyleSheet < Object" "refm/api/src/rss/XMLStyleSheet")
(find-rurima "--- alternate" "== Instance Methods" "= class RSS::XMLStyleSheet < Object" "refm/api/src/rss/XMLStyleSheet")
(find-rurima "--- alternate=" "== Instance Methods" "= class RSS::XMLStyleSheet < Object" "refm/api/src/rss/XMLStyleSheet")
(find-rurima "--- charset" "== Instance Methods" "= class RSS::XMLStyleSheet < Object" "refm/api/src/rss/XMLStyleSheet")
(find-rurima "--- charset=" "== Instance Methods" "= class RSS::XMLStyleSheet < Object" "refm/api/src/rss/XMLStyleSheet")
(find-rurima "--- href" "== Instance Methods" "= class RSS::XMLStyleSheet < Object" "refm/api/src/rss/XMLStyleSheet")
(find-rurima "--- href=" "== Instance Methods" "= class RSS::XMLStyleSheet < Object" "refm/api/src/rss/XMLStyleSheet")
(find-rurima "--- media" "== Instance Methods" "= class RSS::XMLStyleSheet < Object" "refm/api/src/rss/XMLStyleSheet")
(find-rurima "--- media=" "== Instance Methods" "= class RSS::XMLStyleSheet < Object" "refm/api/src/rss/XMLStyleSheet")
(find-rurima "--- title" "== Instance Methods" "= class RSS::XMLStyleSheet < Object" "refm/api/src/rss/XMLStyleSheet")
(find-rurima "--- title=" "== Instance Methods" "= class RSS::XMLStyleSheet < Object" "refm/api/src/rss/XMLStyleSheet")
(find-rurima "--- type" "== Instance Methods" "= class RSS::XMLStyleSheet < Object" "refm/api/src/rss/XMLStyleSheet")
(find-rurima "--- type=" "== Instance Methods" "= class RSS::XMLStyleSheet < Object" "refm/api/src/rss/XMLStyleSheet")
(find-rurima "= module RSS::XMLStyleSheetMixin " "refm/api/src/rss/XMLStyleSheet")
(find-rurima "== Instance Methods" "= module RSS::XMLStyleSheetMixin " "refm/api/src/rss/XMLStyleSheet")
(find-rurima "--- xml_stylesheets" "== Instance Methods" "= module RSS::XMLStyleSheetMixin " "refm/api/src/rss/XMLStyleSheet")
(find-rurima "--- xml_stylesheets=" "== Instance Methods" "= module RSS::XMLStyleSheetMixin " "refm/api/src/rss/XMLStyleSheet")
(find-rurima "= reopen RSS::Rss::Channel " "refm/api/src/rss/2.0.rd")
(find-rurima "== Instance Methods" "= reopen RSS::Rss::Channel " "refm/api/src/rss/2.0.rd")
(find-rurima "--- generator" "== Instance Methods" "= reopen RSS::Rss::Channel " "refm/api/src/rss/2.0.rd")
(find-rurima "--- generator=" "== Instance Methods" "= reopen RSS::Rss::Channel " "refm/api/src/rss/2.0.rd")
(find-rurima "--- ttl" "== Instance Methods" "= reopen RSS::Rss::Channel " "refm/api/src/rss/2.0.rd")
(find-rurima "--- ttl=" "== Instance Methods" "= reopen RSS::Rss::Channel " "refm/api/src/rss/2.0.rd")
(find-rurima "= reopen RSS::Rss::Channel::Item " "refm/api/src/rss/2.0.rd")
(find-rurima "== Instance Methods" "= reopen RSS::Rss::Channel::Item " "refm/api/src/rss/2.0.rd")
(find-rurima "--- author" "== Instance Methods" "= reopen RSS::Rss::Channel::Item " "refm/api/src/rss/2.0.rd")
(find-rurima "--- author=" "== Instance Methods" "= reopen RSS::Rss::Channel::Item " "refm/api/src/rss/2.0.rd")
(find-rurima "--- comments" "== Instance Methods" "= reopen RSS::Rss::Channel::Item " "refm/api/src/rss/2.0.rd")
(find-rurima "--- comments=" "== Instance Methods" "= reopen RSS::Rss::Channel::Item " "refm/api/src/rss/2.0.rd")
(find-rurima "--- pubDate" "== Instance Methods" "= reopen RSS::Rss::Channel::Item " "refm/api/src/rss/2.0.rd")
(find-rurima "--- pubDate=" "== Instance Methods" "= reopen RSS::Rss::Channel::Item " "refm/api/src/rss/2.0.rd")
(find-rurima "--- guid" "== Instance Methods" "= reopen RSS::Rss::Channel::Item " "refm/api/src/rss/2.0.rd")
(find-rurima "--- guid=" "== Instance Methods" "= reopen RSS::Rss::Channel::Item " "refm/api/src/rss/2.0.rd")
(find-rurima "= class RSS::Rss::Channel::Item::Guid < RSS::Element" "refm/api/src/rss/2.0.rd")
(find-rurima "== Instance Methods" "= class RSS::Rss::Channel::Item::Guid < RSS::Element" "refm/api/src/rss/2.0.rd")
(find-rurima "--- isPermaLink" "== Instance Methods" "= class RSS::Rss::Channel::Item::Guid < RSS::Element" "refm/api/src/rss/2.0.rd")
(find-rurima "= module Readline" "refm/api/src/readline.rd")
(find-rurima "== Module Functions" "= module Readline" "refm/api/src/readline.rd")
(find-rurima "--- readline(prompt = \"\", add_hist = false) -> String | nil" "== Module Functions" "= module Readline" "refm/api/src/readline.rd")
(find-rurima "== Singleton Methods" "= module Readline" "refm/api/src/readline.rd")
(find-rurima "--- input=(input)" "== Singleton Methods" "= module Readline" "refm/api/src/readline.rd")
(find-rurima "--- output=(output)" "== Singleton Methods" "= module Readline" "refm/api/src/readline.rd")
(find-rurima "--- completion_proc=(proc)" "== Singleton Methods" "= module Readline" "refm/api/src/readline.rd")
(find-rurima "--- completion_proc -> Proc" "== Singleton Methods" "= module Readline" "refm/api/src/readline.rd")
(find-rurima "--- completion_case_fold=(bool)" "== Singleton Methods" "= module Readline" "refm/api/src/readline.rd")
(find-rurima "--- completion_case_fold -> bool" "== Singleton Methods" "= module Readline" "refm/api/src/readline.rd")
(find-rurima "--- vi_editing_mode -> nil" "== Singleton Methods" "= module Readline" "refm/api/src/readline.rd")
(find-rurima "--- emacs_editing_mode -> nil" "== Singleton Methods" "= module Readline" "refm/api/src/readline.rd")
(find-rurima "--- completion_append_character=(string)" "== Singleton Methods" "= module Readline" "refm/api/src/readline.rd")
(find-rurima "--- completion_append_character -> String" "== Singleton Methods" "= module Readline" "refm/api/src/readline.rd")
(find-rurima "--- basic_word_break_characters=(string)" "== Singleton Methods" "= module Readline" "refm/api/src/readline.rd")
(find-rurima "--- basic_word_break_characters -> String" "== Singleton Methods" "= module Readline" "refm/api/src/readline.rd")
(find-rurima "--- completer_word_break_characters=(string)" "== Singleton Methods" "= module Readline" "refm/api/src/readline.rd")
(find-rurima "--- completer_word_break_characters -> String" "== Singleton Methods" "= module Readline" "refm/api/src/readline.rd")
(find-rurima "--- basic_quote_characters=(string)" "== Singleton Methods" "= module Readline" "refm/api/src/readline.rd")
(find-rurima "--- basic_quote_characters -> String" "== Singleton Methods" "= module Readline" "refm/api/src/readline.rd")
(find-rurima "--- completer_quote_characters=(string)" "== Singleton Methods" "= module Readline" "refm/api/src/readline.rd")
(find-rurima "--- completer_quote_characters -> String" "== Singleton Methods" "= module Readline" "refm/api/src/readline.rd")
(find-rurima "--- filename_quote_characters=(string)" "== Singleton Methods" "= module Readline" "refm/api/src/readline.rd")
(find-rurima "--- filename_quote_characters -> String" "== Singleton Methods" "= module Readline" "refm/api/src/readline.rd")
(find-rurima "== Constants" "= module Readline" "refm/api/src/readline.rd")
(find-rurima "--- VERSION -> String" "== Constants" "= module Readline" "refm/api/src/readline.rd")
(find-rurima "--- FILENAME_COMPLETION_PROC -> Proc" "== Constants" "= module Readline" "refm/api/src/readline.rd")
(find-rurima "--- USERNAME_COMPLETION_PROC -> Proc" "== Constants" "= module Readline" "refm/api/src/readline.rd")
(find-rurima "= object Readline::HISTORY" "refm/api/src/readline.rd")
(find-rurima "--- to_s -> \"HISTORY\"" "= object Readline::HISTORY" "refm/api/src/readline.rd")
(find-rurima "--- [](index) -> String" "= object Readline::HISTORY" "refm/api/src/readline.rd")
(find-rurima "--- []=(index, string)" "= object Readline::HISTORY" "refm/api/src/readline.rd")
(find-rurima "--- <<(string) -> self" "= object Readline::HISTORY" "refm/api/src/readline.rd")
(find-rurima "--- push(*string) -> self" "= object Readline::HISTORY" "refm/api/src/readline.rd")
(find-rurima "--- pop -> String" "= object Readline::HISTORY" "refm/api/src/readline.rd")
(find-rurima "--- shift -> String" "= object Readline::HISTORY" "refm/api/src/readline.rd")
(find-rurima "--- each -> Enumerator" "= object Readline::HISTORY" "refm/api/src/readline.rd")
(find-rurima "--- each {|string| ... }" "= object Readline::HISTORY" "refm/api/src/readline.rd")
(find-rurima "--- length -> Integer" "= object Readline::HISTORY" "refm/api/src/readline.rd")
(find-rurima "--- empty? -> bool" "= object Readline::HISTORY" "refm/api/src/readline.rd")
(find-rurima "--- delete_at(index) -> String | nil" "= object Readline::HISTORY" "refm/api/src/readline.rd")
(find-rurima "= class XMLRPC::CGIServer < XMLRPC::BasicServer" "refm/api/src/xmlrpc/CGIServer")
(find-rurima "== Class Methods" "= class XMLRPC::CGIServer < XMLRPC::BasicServer" "refm/api/src/xmlrpc/CGIServer")
(find-rurima "--- new( *a )" "== Class Methods" "= class XMLRPC::CGIServer < XMLRPC::BasicServer" "refm/api/src/xmlrpc/CGIServer")
(find-rurima "== Instance Methods" "= class XMLRPC::CGIServer < XMLRPC::BasicServer" "refm/api/src/xmlrpc/CGIServer")
(find-rurima "--- serve" "== Instance Methods" "= class XMLRPC::CGIServer < XMLRPC::BasicServer" "refm/api/src/xmlrpc/CGIServer")
(find-rurima "==== Client with XML-RPC fault-structure handling" "refm/api/src/xmlrpc/client.rd")
(find-rurima "===== by catching a XMLRPC::FaultException exception " "==== Client with XML-RPC fault-structure handling" "refm/api/src/xmlrpc/client.rd")
(find-rurima "===== by calling \"call2\" which returns a boolean" "==== Client with XML-RPC fault-structure handling" "refm/api/src/xmlrpc/client.rd")
(find-rurima "==== Client using Proxy" "refm/api/src/xmlrpc/client.rd")
(find-rurima "==== CGI-based Server" "refm/api/src/xmlrpc/server.rd")
(find-rurima "===== C/PHP-like (handler functions)" "==== CGI-based Server" "refm/api/src/xmlrpc/server.rd")
(find-rurima "===== Java-like (handler classes)" "==== CGI-based Server" "refm/api/src/xmlrpc/server.rd")
(find-rurima "====== Security Note" "===== Java-like (handler classes)" "==== CGI-based Server" "refm/api/src/xmlrpc/server.rd")
(find-rurima "===== With interface declarations" "==== CGI-based Server" "refm/api/src/xmlrpc/server.rd")
(find-rurima "==== Standalone server" "refm/api/src/xmlrpc/server.rd")
(find-rurima "= class XMLRPC::DateTime < Object" "refm/api/src/xmlrpc/datetime.rd")
(find-rurima "== Class Methods" "= class XMLRPC::DateTime < Object" "refm/api/src/xmlrpc/datetime.rd")
(find-rurima "--- new( year, month, day, hour, min, sec )" "== Class Methods" "= class XMLRPC::DateTime < Object" "refm/api/src/xmlrpc/datetime.rd")
(find-rurima "== Instance Methods" "= class XMLRPC::DateTime < Object" "refm/api/src/xmlrpc/datetime.rd")
(find-rurima "--- year" "== Instance Methods" "= class XMLRPC::DateTime < Object" "refm/api/src/xmlrpc/datetime.rd")
(find-rurima "--- month" "== Instance Methods" "= class XMLRPC::DateTime < Object" "refm/api/src/xmlrpc/datetime.rd")
(find-rurima "--- day" "== Instance Methods" "= class XMLRPC::DateTime < Object" "refm/api/src/xmlrpc/datetime.rd")
(find-rurima "--- hour" "== Instance Methods" "= class XMLRPC::DateTime < Object" "refm/api/src/xmlrpc/datetime.rd")
(find-rurima "--- min" "== Instance Methods" "= class XMLRPC::DateTime < Object" "refm/api/src/xmlrpc/datetime.rd")
(find-rurima "--- sec" "== Instance Methods" "= class XMLRPC::DateTime < Object" "refm/api/src/xmlrpc/datetime.rd")
(find-rurima "--- mon" "== Instance Methods" "= class XMLRPC::DateTime < Object" "refm/api/src/xmlrpc/datetime.rd")
(find-rurima "--- year=()" "== Instance Methods" "= class XMLRPC::DateTime < Object" "refm/api/src/xmlrpc/datetime.rd")
(find-rurima "--- month=()" "== Instance Methods" "= class XMLRPC::DateTime < Object" "refm/api/src/xmlrpc/datetime.rd")
(find-rurima "--- day=()" "== Instance Methods" "= class XMLRPC::DateTime < Object" "refm/api/src/xmlrpc/datetime.rd")
(find-rurima "--- hour=()" "== Instance Methods" "= class XMLRPC::DateTime < Object" "refm/api/src/xmlrpc/datetime.rd")
(find-rurima "--- min=()" "== Instance Methods" "= class XMLRPC::DateTime < Object" "refm/api/src/xmlrpc/datetime.rd")
(find-rurima "--- sec=()" "== Instance Methods" "= class XMLRPC::DateTime < Object" "refm/api/src/xmlrpc/datetime.rd")
(find-rurima "--- mon=()" "== Instance Methods" "= class XMLRPC::DateTime < Object" "refm/api/src/xmlrpc/datetime.rd")
(find-rurima "--- to_time" "== Instance Methods" "= class XMLRPC::DateTime < Object" "refm/api/src/xmlrpc/datetime.rd")
(find-rurima "--- to_date" "== Instance Methods" "= class XMLRPC::DateTime < Object" "refm/api/src/xmlrpc/datetime.rd")
(find-rurima "--- to_a" "== Instance Methods" "= class XMLRPC::DateTime < Object" "refm/api/src/xmlrpc/datetime.rd")
(find-rurima "= class XMLRPC::BasicServer < Object" "refm/api/src/xmlrpc/BasicServer")
(find-rurima "=== How the method to call is found" "= class XMLRPC::BasicServer < Object" "refm/api/src/xmlrpc/BasicServer")
(find-rurima "== Class Methods" "= class XMLRPC::BasicServer < Object" "refm/api/src/xmlrpc/BasicServer")
(find-rurima "--- new( class_delim=\".\" )" "== Class Methods" "= class XMLRPC::BasicServer < Object" "refm/api/src/xmlrpc/BasicServer")
(find-rurima "== Instance Methods" "= class XMLRPC::BasicServer < Object" "refm/api/src/xmlrpc/BasicServer")
(find-rurima "--- add_handler( name, signature=nil, help=nil ) { aBlock }" "== Instance Methods" "= class XMLRPC::BasicServer < Object" "refm/api/src/xmlrpc/BasicServer")
(find-rurima "--- add_handler( prefix, obj )" "== Instance Methods" "= class XMLRPC::BasicServer < Object" "refm/api/src/xmlrpc/BasicServer")
(find-rurima "--- add_handler( interface, obj )" "== Instance Methods" "= class XMLRPC::BasicServer < Object" "refm/api/src/xmlrpc/BasicServer")
(find-rurima "--- get_default_handler" "== Instance Methods" "= class XMLRPC::BasicServer < Object" "refm/api/src/xmlrpc/BasicServer")
(find-rurima "--- set_default_handler ( &handler )" "== Instance Methods" "= class XMLRPC::BasicServer < Object" "refm/api/src/xmlrpc/BasicServer")
(find-rurima "--- set_writer( writer )" "== Instance Methods" "= class XMLRPC::BasicServer < Object" "refm/api/src/xmlrpc/BasicServer")
(find-rurima "--- set_parser( parser )" "== Instance Methods" "= class XMLRPC::BasicServer < Object" "refm/api/src/xmlrpc/BasicServer")
(find-rurima "--- add_introspection" "== Instance Methods" "= class XMLRPC::BasicServer < Object" "refm/api/src/xmlrpc/BasicServer")
(find-rurima "--- add_multicall" "== Instance Methods" "= class XMLRPC::BasicServer < Object" "refm/api/src/xmlrpc/BasicServer")
(find-rurima "--- get_service_hook" "== Instance Methods" "= class XMLRPC::BasicServer < Object" "refm/api/src/xmlrpc/BasicServer")
(find-rurima "--- set_service_hook ( &handler )" "== Instance Methods" "= class XMLRPC::BasicServer < Object" "refm/api/src/xmlrpc/BasicServer")
(find-rurima "= class XMLRPC::Client::Proxy < XMLRPC::Client" "refm/api/src/xmlrpc/Client__Proxy")
(find-rurima "== Class Methods" "= class XMLRPC::Client::Proxy < XMLRPC::Client" "refm/api/src/xmlrpc/Client__Proxy")
(find-rurima "--- new( server, prefix, args=[], meth=:call, delim=\".\" )" "== Class Methods" "= class XMLRPC::Client::Proxy < XMLRPC::Client" "refm/api/src/xmlrpc/Client__Proxy")
(find-rurima "= class XMLRPC::Server < XMLRPC::WEBrickServlet" "refm/api/src/xmlrpc/Server")
(find-rurima "== Class Methods" "= class XMLRPC::Server < XMLRPC::WEBrickServlet" "refm/api/src/xmlrpc/Server")
(find-rurima "--- new( port=8080, host=\"127.0.0.1\", maxConnections=4, stdlog=$stdout, audit=true, debug=true, *a )" "== Class Methods" "= class XMLRPC::Server < XMLRPC::WEBrickServlet" "refm/api/src/xmlrpc/Server")
(find-rurima "== Instance Methods" "= class XMLRPC::Server < XMLRPC::WEBrickServlet" "refm/api/src/xmlrpc/Server")
(find-rurima "--- serve" "== Instance Methods" "= class XMLRPC::Server < XMLRPC::WEBrickServlet" "refm/api/src/xmlrpc/Server")
(find-rurima "--- shutdown" "== Instance Methods" "= class XMLRPC::Server < XMLRPC::WEBrickServlet" "refm/api/src/xmlrpc/Server")
(find-rurima "= class XMLRPC::Client < Object" "refm/api/src/xmlrpc/Client")
(find-rurima "== Class Methods" "= class XMLRPC::Client < Object" "refm/api/src/xmlrpc/Client")
(find-rurima "--- new( host=nil, path=nil, port=nil, proxy_host=nil, proxy_port=nil, user=nil, password=nil, use_ssl=false, timeout =nil)" "== Class Methods" "= class XMLRPC::Client < Object" "refm/api/src/xmlrpc/Client")
(find-rurima "--- new2( uri, proxy=nil, timeout=nil)" "== Class Methods" "= class XMLRPC::Client < Object" "refm/api/src/xmlrpc/Client")
(find-rurima "--- new_from_uri( uri, proxy=nil, timeout=nil)" "== Class Methods" "= class XMLRPC::Client < Object" "refm/api/src/xmlrpc/Client")
(find-rurima "--- new3( hash={} )" "== Class Methods" "= class XMLRPC::Client < Object" "refm/api/src/xmlrpc/Client")
(find-rurima "--- new_from_hash( hash={} )" "== Class Methods" "= class XMLRPC::Client < Object" "refm/api/src/xmlrpc/Client")
(find-rurima "== Instance Methods" "= class XMLRPC::Client < Object" "refm/api/src/xmlrpc/Client")
(find-rurima "--- call( method, *args )" "== Instance Methods" "= class XMLRPC::Client < Object" "refm/api/src/xmlrpc/Client")
(find-rurima "--- call2( method, *args )" "== Instance Methods" "= class XMLRPC::Client < Object" "refm/api/src/xmlrpc/Client")
(find-rurima "--- multicall( *methods )" "== Instance Methods" "= class XMLRPC::Client < Object" "refm/api/src/xmlrpc/Client")
(find-rurima "--- multicall2( *methods )" "== Instance Methods" "= class XMLRPC::Client < Object" "refm/api/src/xmlrpc/Client")
(find-rurima "--- proxy( prefix, *args )" "== Instance Methods" "= class XMLRPC::Client < Object" "refm/api/src/xmlrpc/Client")
(find-rurima "--- proxy2( prefix, *args )" "== Instance Methods" "= class XMLRPC::Client < Object" "refm/api/src/xmlrpc/Client")
(find-rurima "--- call_async(...)" "== Instance Methods" "= class XMLRPC::Client < Object" "refm/api/src/xmlrpc/Client")
(find-rurima "--- call2_async(...)" "== Instance Methods" "= class XMLRPC::Client < Object" "refm/api/src/xmlrpc/Client")
(find-rurima "--- multicall_async(...)" "== Instance Methods" "= class XMLRPC::Client < Object" "refm/api/src/xmlrpc/Client")
(find-rurima "--- multicall2_async(...)" "== Instance Methods" "= class XMLRPC::Client < Object" "refm/api/src/xmlrpc/Client")
(find-rurima "--- proxy_async(...)" "== Instance Methods" "= class XMLRPC::Client < Object" "refm/api/src/xmlrpc/Client")
(find-rurima "--- proxy2_async(...)" "== Instance Methods" "= class XMLRPC::Client < Object" "refm/api/src/xmlrpc/Client")
(find-rurima "--- timeout" "== Instance Methods" "= class XMLRPC::Client < Object" "refm/api/src/xmlrpc/Client")
(find-rurima "--- user" "== Instance Methods" "= class XMLRPC::Client < Object" "refm/api/src/xmlrpc/Client")
(find-rurima "--- password" "== Instance Methods" "= class XMLRPC::Client < Object" "refm/api/src/xmlrpc/Client")
(find-rurima "--- timeout=()" "== Instance Methods" "= class XMLRPC::Client < Object" "refm/api/src/xmlrpc/Client")
(find-rurima "--- user=()" "== Instance Methods" "= class XMLRPC::Client < Object" "refm/api/src/xmlrpc/Client")
(find-rurima "--- password=()" "== Instance Methods" "= class XMLRPC::Client < Object" "refm/api/src/xmlrpc/Client")
(find-rurima "--- set_writer( writer )" "== Instance Methods" "= class XMLRPC::Client < Object" "refm/api/src/xmlrpc/Client")
(find-rurima "--- set_parser( parser )" "== Instance Methods" "= class XMLRPC::Client < Object" "refm/api/src/xmlrpc/Client")
(find-rurima "--- cookie" "== Instance Methods" "= class XMLRPC::Client < Object" "refm/api/src/xmlrpc/Client")
(find-rurima "--- cookie=()" "== Instance Methods" "= class XMLRPC::Client < Object" "refm/api/src/xmlrpc/Client")
(find-rurima "--- http_header_extra=()" "== Instance Methods" "= class XMLRPC::Client < Object" "refm/api/src/xmlrpc/Client")
(find-rurima "--- http_header_extra" "== Instance Methods" "= class XMLRPC::Client < Object" "refm/api/src/xmlrpc/Client")
(find-rurima "--- http_last_response" "== Instance Methods" "= class XMLRPC::Client < Object" "refm/api/src/xmlrpc/Client")
(find-rurima "= module XMLRPC::Config" "refm/api/src/xmlrpc/config.rd")
(find-rurima "== Constants" "= module XMLRPC::Config" "refm/api/src/xmlrpc/config.rd")
(find-rurima "--- DEFAULT_WRITER" "== Constants" "= module XMLRPC::Config" "refm/api/src/xmlrpc/config.rd")
(find-rurima "--- DEFAULT_PARSER" "== Constants" "= module XMLRPC::Config" "refm/api/src/xmlrpc/config.rd")
(find-rurima "--- ENABLE_NIL_CREATE" "== Constants" "= module XMLRPC::Config" "refm/api/src/xmlrpc/config.rd")
(find-rurima "--- ENABLE_NIL_PARSER" "== Constants" "= module XMLRPC::Config" "refm/api/src/xmlrpc/config.rd")
(find-rurima "--- ENABLE_BIGINT" "== Constants" "= module XMLRPC::Config" "refm/api/src/xmlrpc/config.rd")
(find-rurima "--- ENABLE_MARSHALLING" "== Constants" "= module XMLRPC::Config" "refm/api/src/xmlrpc/config.rd")
(find-rurima "--- ENABLE_MULTICALL" "== Constants" "= module XMLRPC::Config" "refm/api/src/xmlrpc/config.rd")
(find-rurima "--- ENABLE_INTROSPECTION" "== Constants" "= module XMLRPC::Config" "refm/api/src/xmlrpc/config.rd")
(find-rurima "= class XMLRPC::ModRubyServer < XMLRPC::BasicServer" "refm/api/src/xmlrpc/ModRubyServer")
(find-rurima "== Class Methods" "= class XMLRPC::ModRubyServer < XMLRPC::BasicServer" "refm/api/src/xmlrpc/ModRubyServer")
(find-rurima "--- new(*args)" "== Class Methods" "= class XMLRPC::ModRubyServer < XMLRPC::BasicServer" "refm/api/src/xmlrpc/ModRubyServer")
(find-rurima "== Instance Methods" "= class XMLRPC::ModRubyServer < XMLRPC::BasicServer" "refm/api/src/xmlrpc/ModRubyServer")
(find-rurima "--- serve" "== Instance Methods" "= class XMLRPC::ModRubyServer < XMLRPC::BasicServer" "refm/api/src/xmlrpc/ModRubyServer")
(find-rurima "= class XMLRPC::WEBrickServlet < XMLRPC::BasicServer" "refm/api/src/xmlrpc/WEBrickServlet")
(find-rurima "== Instance Methods" "= class XMLRPC::WEBrickServlet < XMLRPC::BasicServer" "refm/api/src/xmlrpc/WEBrickServlet")
(find-rurima "--- set_valid_ip( *ip_addr )" "== Instance Methods" "= class XMLRPC::WEBrickServlet < XMLRPC::BasicServer" "refm/api/src/xmlrpc/WEBrickServlet")
(find-rurima "--- get_valid_ip" "== Instance Methods" "= class XMLRPC::WEBrickServlet < XMLRPC::BasicServer" "refm/api/src/xmlrpc/WEBrickServlet")
(find-rurima "=== 使い方" "refm/api/src/debug.rd")
(find-rurima "=== デバッグコマンド" "refm/api/src/debug.rd")
(find-rurima "=== 注意" "refm/api/src/debug.rd")
(find-rurima "= reopen Tracer" "refm/api/src/debug.rd")
(find-rurima "== class Methods" "= reopen Tracer" "refm/api/src/debug.rd")
(find-rurima "--- trace_func(*vars) -> object | nil" "== class Methods" "= reopen Tracer" "refm/api/src/debug.rd")
(find-rurima "= class DEBUGGER__" "refm/api/src/debug.rd")
(find-rurima "= module Fcntl" "refm/api/src/fcntl.rd")
(find-rurima "== Constants" "= module Fcntl" "refm/api/src/fcntl.rd")
(find-rurima "--- F_DUPFD -> Integer" "== Constants" "= module Fcntl" "refm/api/src/fcntl.rd")
(find-rurima "--- F_GETFD -> Integer" "== Constants" "= module Fcntl" "refm/api/src/fcntl.rd")
(find-rurima "--- F_GETLK -> Integer" "== Constants" "= module Fcntl" "refm/api/src/fcntl.rd")
(find-rurima "--- F_SETFD -> Integer" "== Constants" "= module Fcntl" "refm/api/src/fcntl.rd")
(find-rurima "--- F_GETFL -> Integer" "== Constants" "= module Fcntl" "refm/api/src/fcntl.rd")
(find-rurima "--- F_SETFL -> Integer" "== Constants" "= module Fcntl" "refm/api/src/fcntl.rd")
(find-rurima "--- F_SETLK -> Integer" "== Constants" "= module Fcntl" "refm/api/src/fcntl.rd")
(find-rurima "--- F_SETLKW -> Integer" "== Constants" "= module Fcntl" "refm/api/src/fcntl.rd")
(find-rurima "--- FD_CLOEXEC -> Integer" "== Constants" "= module Fcntl" "refm/api/src/fcntl.rd")
(find-rurima "--- F_RDLCK -> Integer" "== Constants" "= module Fcntl" "refm/api/src/fcntl.rd")
(find-rurima "--- F_UNLCK -> Integer" "== Constants" "= module Fcntl" "refm/api/src/fcntl.rd")
(find-rurima "--- F_WRLCK -> Integer" "== Constants" "= module Fcntl" "refm/api/src/fcntl.rd")
(find-rurima "--- O_CREAT -> Integer" "== Constants" "= module Fcntl" "refm/api/src/fcntl.rd")
(find-rurima "--- O_EXCL -> Integer" "== Constants" "= module Fcntl" "refm/api/src/fcntl.rd")
(find-rurima "--- O_NOCTTY -> Integer" "== Constants" "= module Fcntl" "refm/api/src/fcntl.rd")
(find-rurima "--- O_TRUNC -> Integer" "== Constants" "= module Fcntl" "refm/api/src/fcntl.rd")
(find-rurima "--- O_APPEND -> Integer" "== Constants" "= module Fcntl" "refm/api/src/fcntl.rd")
(find-rurima "--- O_NONBLOCK -> Integer" "== Constants" "= module Fcntl" "refm/api/src/fcntl.rd")
(find-rurima "--- O_NDELAY -> Integer" "== Constants" "= module Fcntl" "refm/api/src/fcntl.rd")
(find-rurima "--- O_RDONLY -> Integer" "== Constants" "= module Fcntl" "refm/api/src/fcntl.rd")
(find-rurima "--- O_RDWR -> Integer" "== Constants" "= module Fcntl" "refm/api/src/fcntl.rd")
(find-rurima "--- O_WRONLY -> Integer" "== Constants" "= module Fcntl" "refm/api/src/fcntl.rd")
(find-rurima "--- O_ACCMODE -> Integer" "== Constants" "= module Fcntl" "refm/api/src/fcntl.rd")
(find-rurima "= class ERB < Object" "refm/api/src/erb.rd")
(find-rurima "=== 使い方" "= class ERB < Object" "refm/api/src/erb.rd")
(find-rurima "=== trim_mode" "= class ERB < Object" "refm/api/src/erb.rd")
(find-rurima "== Class Methods" "= class ERB < Object" "refm/api/src/erb.rd")
(find-rurima "--- new(eruby_script, safe_level=nil, trim_mode=nil, eoutvar='_erbout') -> ERB" "== Class Methods" "= class ERB < Object" "refm/api/src/erb.rd")
(find-rurima "--- version -> String" "== Class Methods" "= class ERB < Object" "refm/api/src/erb.rd")
(find-rurima "== Instance Methods" "= class ERB < Object" "refm/api/src/erb.rd")
(find-rurima "--- run(b=TOPLEVEL_BINDING) -> nil" "== Instance Methods" "= class ERB < Object" "refm/api/src/erb.rd")
(find-rurima "--- result(b=TOPLEVEL_BINDING) -> String" "== Instance Methods" "= class ERB < Object" "refm/api/src/erb.rd")
(find-rurima "--- src -> String" "== Instance Methods" "= class ERB < Object" "refm/api/src/erb.rd")
(find-rurima "--- def_method(mod, methodname, fname='(ERB)') -> nil" "== Instance Methods" "= class ERB < Object" "refm/api/src/erb.rd")
(find-rurima "--- def_module(methodname='erb') -> Module" "== Instance Methods" "= class ERB < Object" "refm/api/src/erb.rd")
(find-rurima "--- def_class(superklass=Object, methodname='erb') -> Class" "== Instance Methods" "= class ERB < Object" "refm/api/src/erb.rd")
(find-rurima "--- set_eoutvar(compiler, eoutvar = '_erbout') -> Array" "== Instance Methods" "= class ERB < Object" "refm/api/src/erb.rd")
(find-rurima "--- filename -> String" "== Instance Methods" "= class ERB < Object" "refm/api/src/erb.rd")
(find-rurima "--- filename= -> String" "== Instance Methods" "= class ERB < Object" "refm/api/src/erb.rd")
(find-rurima "= module ERB::Util" "refm/api/src/erb.rd")
(find-rurima "== Module Functions" "= module ERB::Util" "refm/api/src/erb.rd")
(find-rurima "--- html_escape(s) -> String" "== Module Functions" "= module ERB::Util" "refm/api/src/erb.rd")
(find-rurima "--- h(s) -> String" "== Module Functions" "= module ERB::Util" "refm/api/src/erb.rd")
(find-rurima "--- url_encode(s)  -> String" "== Module Functions" "= module ERB::Util" "refm/api/src/erb.rd")
(find-rurima "--- u(s) -> String" "== Module Functions" "= module ERB::Util" "refm/api/src/erb.rd")
(find-rurima "= module ERB::DefMethod" "refm/api/src/erb.rd")
(find-rurima "== Module Functions" "= module ERB::DefMethod" "refm/api/src/erb.rd")
(find-rurima "--- def_erb_method(methodname, erb) -> nil" "== Module Functions" "= module ERB::DefMethod" "refm/api/src/erb.rd")
(find-rurima "= module CMath" "refm/api/src/cmath.rd")
(find-rurima "== Module Functions" "= module CMath" "refm/api/src/cmath.rd")
(find-rurima "--- exp!(x) -> Float" "== Module Functions" "= module CMath" "refm/api/src/cmath.rd")
(find-rurima "--- exp(z) -> Float | Complex" "== Module Functions" "= module CMath" "refm/api/src/cmath.rd")
(find-rurima "--- log!(x) -> Float" "== Module Functions" "= module CMath" "refm/api/src/cmath.rd")
(find-rurima "--- log!(x, b) -> Float" "== Module Functions" "= module CMath" "refm/api/src/cmath.rd")
(find-rurima "--- log(z) -> Float | Complex" "== Module Functions" "= module CMath" "refm/api/src/cmath.rd")
(find-rurima "--- log(z, b) -> Float | Complex" "== Module Functions" "= module CMath" "refm/api/src/cmath.rd")
(find-rurima "--- log2!(x) -> Float" "== Module Functions" "= module CMath" "refm/api/src/cmath.rd")
(find-rurima "--- log2(x) -> Float" "== Module Functions" "= module CMath" "refm/api/src/cmath.rd")
(find-rurima "--- log2(z) -> Float | Complex" "== Module Functions" "= module CMath" "refm/api/src/cmath.rd")
(find-rurima "--- log10!(x) -> Float" "== Module Functions" "= module CMath" "refm/api/src/cmath.rd")
(find-rurima "--- log10(z) -> Float | Complex" "== Module Functions" "= module CMath" "refm/api/src/cmath.rd")
(find-rurima "--- cbrt!(x) -> Float" "== Module Functions" "= module CMath" "refm/api/src/cmath.rd")
(find-rurima "--- cbrt(x) -> Float" "== Module Functions" "= module CMath" "refm/api/src/cmath.rd")
(find-rurima "--- cbrt(z) -> Float | Complex" "== Module Functions" "= module CMath" "refm/api/src/cmath.rd")
(find-rurima "--- sqrt!(x) -> Float" "== Module Functions" "= module CMath" "refm/api/src/cmath.rd")
(find-rurima "--- sqrt(z) -> Float | Complex" "== Module Functions" "= module CMath" "refm/api/src/cmath.rd")
(find-rurima "--- sin!(x) -> Float" "== Module Functions" "= module CMath" "refm/api/src/cmath.rd")
(find-rurima "--- sin(z) -> Float | Complex" "== Module Functions" "= module CMath" "refm/api/src/cmath.rd")
(find-rurima "--- cos!(x) -> Float" "== Module Functions" "= module CMath" "refm/api/src/cmath.rd")
(find-rurima "--- cos(z) -> Float | Complex" "== Module Functions" "= module CMath" "refm/api/src/cmath.rd")
(find-rurima "--- tan!(x) -> Float" "== Module Functions" "= module CMath" "refm/api/src/cmath.rd")
(find-rurima "--- tan(z) -> Float | Complex" "== Module Functions" "= module CMath" "refm/api/src/cmath.rd")
(find-rurima "--- sinh!(x) -> Float" "== Module Functions" "= module CMath" "refm/api/src/cmath.rd")
(find-rurima "--- sinh(z) -> Float | Complex" "== Module Functions" "= module CMath" "refm/api/src/cmath.rd")
(find-rurima "--- cosh!(x) -> Float" "== Module Functions" "= module CMath" "refm/api/src/cmath.rd")
(find-rurima "--- cosh(z) -> Float | Complex" "== Module Functions" "= module CMath" "refm/api/src/cmath.rd")
(find-rurima "--- tanh!(x) -> Float" "== Module Functions" "= module CMath" "refm/api/src/cmath.rd")
(find-rurima "--- tanh(z) -> Float | Complex" "== Module Functions" "= module CMath" "refm/api/src/cmath.rd")
(find-rurima "--- asin!(x) -> Float" "== Module Functions" "= module CMath" "refm/api/src/cmath.rd")
(find-rurima "--- asin(z) -> Float | Complex" "== Module Functions" "= module CMath" "refm/api/src/cmath.rd")
(find-rurima "--- acos!(x) -> Float" "== Module Functions" "= module CMath" "refm/api/src/cmath.rd")
(find-rurima "--- acos(z) -> Float | Complex" "== Module Functions" "= module CMath" "refm/api/src/cmath.rd")
(find-rurima "--- atan!(x) -> Float" "== Module Functions" "= module CMath" "refm/api/src/cmath.rd")
(find-rurima "--- atan(z) -> Float | Complex" "== Module Functions" "= module CMath" "refm/api/src/cmath.rd")
(find-rurima "--- atan2!(x, y) -> Float" "== Module Functions" "= module CMath" "refm/api/src/cmath.rd")
(find-rurima "--- atan2(x, y) -> Float | Complex" "== Module Functions" "= module CMath" "refm/api/src/cmath.rd")
(find-rurima "--- asinh!(x) -> Float" "== Module Functions" "= module CMath" "refm/api/src/cmath.rd")
(find-rurima "--- asinh(z) -> Float | Complex" "== Module Functions" "= module CMath" "refm/api/src/cmath.rd")
(find-rurima "--- acosh!(x) -> Float" "== Module Functions" "= module CMath" "refm/api/src/cmath.rd")
(find-rurima "--- acosh(z) -> Float | Complex" "== Module Functions" "= module CMath" "refm/api/src/cmath.rd")
(find-rurima "--- atanh!(x) -> Float" "== Module Functions" "= module CMath" "refm/api/src/cmath.rd")
(find-rurima "--- atanh(z) -> Float | Complex" "== Module Functions" "= module CMath" "refm/api/src/cmath.rd")
(find-rurima "= module Benchmark" "refm/api/src/benchmark.rd")
(find-rurima "== Module Functions" "= module Benchmark" "refm/api/src/benchmark.rd")
(find-rurima "--- measure(label = \"\") { ... }  -> Benchmark::Tms" "== Module Functions" "= module Benchmark" "refm/api/src/benchmark.rd")
(find-rurima "--- realtime { ... } -> Float" "== Module Functions" "= module Benchmark" "refm/api/src/benchmark.rd")
(find-rurima "--- bm(label_width = 0, *labels) {|rep| ... } -> bool" "== Module Functions" "= module Benchmark" "refm/api/src/benchmark.rd")
(find-rurima "--- bmbm(width = 0) {|job| ... } -> [Benchmark::Tms]" "== Module Functions" "= module Benchmark" "refm/api/src/benchmark.rd")
(find-rurima "--- benchmark(caption = \"\", label_width = nil, fmtstr = nil, *labels){|rep| ...} -> bool" "== Module Functions" "= module Benchmark" "refm/api/src/benchmark.rd")
(find-rurima "===== フォーマット文字列" "== Module Functions" "= module Benchmark" "refm/api/src/benchmark.rd")
(find-rurima "===== 例" "== Module Functions" "= module Benchmark" "refm/api/src/benchmark.rd")
(find-rurima "== Constants" "= module Benchmark" "refm/api/src/benchmark.rd")
(find-rurima "--- CAPTION" "== Constants" "= module Benchmark" "refm/api/src/benchmark.rd")
(find-rurima "--- FMTSTR" "== Constants" "= module Benchmark" "refm/api/src/benchmark.rd")
(find-rurima "--- BENCHMARK_VERSION" "== Constants" "= module Benchmark" "refm/api/src/benchmark.rd")
(find-rurima "= class Benchmark::Tms < Object" "refm/api/src/benchmark.rd")
(find-rurima "== Class Methods" "= class Benchmark::Tms < Object" "refm/api/src/benchmark.rd")
(find-rurima "--- new(utime = 0.0, stime = 0.0, cutime = 0.0, cstime = 0.0, real = 0.0, label = nil) -> Benchmark::Tms" "== Class Methods" "= class Benchmark::Tms < Object" "refm/api/src/benchmark.rd")
(find-rurima "== Instance Methods" "= class Benchmark::Tms < Object" "refm/api/src/benchmark.rd")
(find-rurima "--- *(x) -> Benchmark::Tms" "== Instance Methods" "= class Benchmark::Tms < Object" "refm/api/src/benchmark.rd")
(find-rurima "--- +(x) -> Benchmark::Tms" "== Instance Methods" "= class Benchmark::Tms < Object" "refm/api/src/benchmark.rd")
(find-rurima "--- -(x) -> Benchmark::Tms" "== Instance Methods" "= class Benchmark::Tms < Object" "refm/api/src/benchmark.rd")
(find-rurima "--- /(x) -> Benchmark::Tms" "== Instance Methods" "= class Benchmark::Tms < Object" "refm/api/src/benchmark.rd")
(find-rurima "--- add { ... } -> Benchmark::Tms" "== Instance Methods" "= class Benchmark::Tms < Object" "refm/api/src/benchmark.rd")
(find-rurima "--- add!{ ... } -> self" "== Instance Methods" "= class Benchmark::Tms < Object" "refm/api/src/benchmark.rd")
(find-rurima "--- format(fmtstr = nil, *args)" "== Instance Methods" "= class Benchmark::Tms < Object" "refm/api/src/benchmark.rd")
(find-rurima "--- to_a -> Array" "== Instance Methods" "= class Benchmark::Tms < Object" "refm/api/src/benchmark.rd")
(find-rurima "--- to_s -> String" "== Instance Methods" "= class Benchmark::Tms < Object" "refm/api/src/benchmark.rd")
(find-rurima "--- utime -> Float" "== Instance Methods" "= class Benchmark::Tms < Object" "refm/api/src/benchmark.rd")
(find-rurima "--- stime -> Float" "== Instance Methods" "= class Benchmark::Tms < Object" "refm/api/src/benchmark.rd")
(find-rurima "--- cutime -> Float" "== Instance Methods" "= class Benchmark::Tms < Object" "refm/api/src/benchmark.rd")
(find-rurima "--- cstime -> Float" "== Instance Methods" "= class Benchmark::Tms < Object" "refm/api/src/benchmark.rd")
(find-rurima "--- real -> Float" "== Instance Methods" "= class Benchmark::Tms < Object" "refm/api/src/benchmark.rd")
(find-rurima "--- total -> Float" "== Instance Methods" "= class Benchmark::Tms < Object" "refm/api/src/benchmark.rd")
(find-rurima "--- label -> String" "== Instance Methods" "= class Benchmark::Tms < Object" "refm/api/src/benchmark.rd")
(find-rurima "== Protected Instance Methods" "= class Benchmark::Tms < Object" "refm/api/src/benchmark.rd")
(find-rurima "--- memberwise(op, x) -> Benchmark::Tms" "== Protected Instance Methods" "= class Benchmark::Tms < Object" "refm/api/src/benchmark.rd")
(find-rurima "== Constants" "= class Benchmark::Tms < Object" "refm/api/src/benchmark.rd")
(find-rurima "--- CAPTION" "== Constants" "= class Benchmark::Tms < Object" "refm/api/src/benchmark.rd")
(find-rurima "--- FMTSTR" "== Constants" "= class Benchmark::Tms < Object" "refm/api/src/benchmark.rd")
(find-rurima "= class Benchmark::Job < Object" "refm/api/src/benchmark.rd")
(find-rurima "== Class Methods" "= class Benchmark::Job < Object" "refm/api/src/benchmark.rd")
(find-rurima "--- new(width) -> Benchmark::Job" "== Class Methods" "= class Benchmark::Job < Object" "refm/api/src/benchmark.rd")
(find-rurima "== Instance Methods" "= class Benchmark::Job < Object" "refm/api/src/benchmark.rd")
(find-rurima "--- item(label = \"\"){ ... } -> self" "== Instance Methods" "= class Benchmark::Job < Object" "refm/api/src/benchmark.rd")
(find-rurima "--- report(label = \"\"){ ... } -> self" "== Instance Methods" "= class Benchmark::Job < Object" "refm/api/src/benchmark.rd")
(find-rurima "--- list -> [String, Proc]" "== Instance Methods" "= class Benchmark::Job < Object" "refm/api/src/benchmark.rd")
(find-rurima "--- width -> Integer" "== Instance Methods" "= class Benchmark::Job < Object" "refm/api/src/benchmark.rd")
(find-rurima "= class Benchmark::Report < Object" "refm/api/src/benchmark.rd")
(find-rurima "== Class Methods" "= class Benchmark::Report < Object" "refm/api/src/benchmark.rd")
(find-rurima "--- new(width = 0, fmtstr = nil) -> Benchmark::Report" "== Class Methods" "= class Benchmark::Report < Object" "refm/api/src/benchmark.rd")
(find-rurima "== Instance Methods" "= class Benchmark::Report < Object" "refm/api/src/benchmark.rd")
(find-rurima "--- item(label = \"\", *fmt){ ... } -> Benchmark::Tms" "== Instance Methods" "= class Benchmark::Report < Object" "refm/api/src/benchmark.rd")
(find-rurima "--- report(label = \"\", *fmt){ ... } -> Benchmark::Tms" "== Instance Methods" "= class Benchmark::Report < Object" "refm/api/src/benchmark.rd")
(find-rurima "= class Zlib::GzipFile < Object" "refm/api/src/zlib/GzipFile")
(find-rurima "== Class Methods" "= class Zlib::GzipFile < Object" "refm/api/src/zlib/GzipFile")
(find-rurima "--- new(*args) -> ()" "== Class Methods" "= class Zlib::GzipFile < Object" "refm/api/src/zlib/GzipFile")
(find-rurima "--- wrap(*args) {|gz| ... } -> ()" "== Class Methods" "= class Zlib::GzipFile < Object" "refm/api/src/zlib/GzipFile")
(find-rurima "--- open(*args) {|gz| ... } -> ()" "== Class Methods" "= class Zlib::GzipFile < Object" "refm/api/src/zlib/GzipFile")
(find-rurima "== Instance Methods" "= class Zlib::GzipFile < Object" "refm/api/src/zlib/GzipFile")
(find-rurima "--- closed? -> bool" "== Instance Methods" "= class Zlib::GzipFile < Object" "refm/api/src/zlib/GzipFile")
(find-rurima "--- to_io -> IO" "== Instance Methods" "= class Zlib::GzipFile < Object" "refm/api/src/zlib/GzipFile")
(find-rurima "--- close -> IO" "== Instance Methods" "= class Zlib::GzipFile < Object" "refm/api/src/zlib/GzipFile")
(find-rurima "--- finish -> IO" "== Instance Methods" "= class Zlib::GzipFile < Object" "refm/api/src/zlib/GzipFile")
(find-rurima "--- crc -> Integer" "== Instance Methods" "= class Zlib::GzipFile < Object" "refm/api/src/zlib/GzipFile")
(find-rurima "--- level -> Integer" "== Instance Methods" "= class Zlib::GzipFile < Object" "refm/api/src/zlib/GzipFile")
(find-rurima "--- mtime -> Time" "== Instance Methods" "= class Zlib::GzipFile < Object" "refm/api/src/zlib/GzipFile")
(find-rurima "--- os_code -> Integer" "== Instance Methods" "= class Zlib::GzipFile < Object" "refm/api/src/zlib/GzipFile")
(find-rurima "--- orig_name -> String | nil" "== Instance Methods" "= class Zlib::GzipFile < Object" "refm/api/src/zlib/GzipFile")
(find-rurima "--- comment -> String | nil" "== Instance Methods" "= class Zlib::GzipFile < Object" "refm/api/src/zlib/GzipFile")
(find-rurima "--- sync -> bool" "== Instance Methods" "= class Zlib::GzipFile < Object" "refm/api/src/zlib/GzipFile")
(find-rurima "--- sync=(flag) " "== Instance Methods" "= class Zlib::GzipFile < Object" "refm/api/src/zlib/GzipFile")
(find-rurima "--- path -> String" "== Instance Methods" "= class Zlib::GzipFile < Object" "refm/api/src/zlib/GzipFile")
(find-rurima "= class Zlib::Inflate < Zlib::ZStream" "refm/api/src/zlib/Inflate")
(find-rurima "== Class Methods" "= class Zlib::Inflate < Zlib::ZStream" "refm/api/src/zlib/Inflate")
(find-rurima "--- inflate(string) -> String" "== Class Methods" "= class Zlib::Inflate < Zlib::ZStream" "refm/api/src/zlib/Inflate")
(find-rurima "--- new(window_bits = Zlib::MAX_WBITS) -> Zlib::Inflate" "== Class Methods" "= class Zlib::Inflate < Zlib::ZStream" "refm/api/src/zlib/Inflate")
(find-rurima "== Instance Methods" "= class Zlib::Inflate < Zlib::ZStream" "refm/api/src/zlib/Inflate")
(find-rurima "--- inflate(string) -> String" "== Instance Methods" "= class Zlib::Inflate < Zlib::ZStream" "refm/api/src/zlib/Inflate")
(find-rurima "--- <<(string) -> self" "== Instance Methods" "= class Zlib::Inflate < Zlib::ZStream" "refm/api/src/zlib/Inflate")
(find-rurima "--- finish -> String" "== Instance Methods" "= class Zlib::Inflate < Zlib::ZStream" "refm/api/src/zlib/Inflate")
(find-rurima "--- set_dictionary(string) -> String" "== Instance Methods" "= class Zlib::Inflate < Zlib::ZStream" "refm/api/src/zlib/Inflate")
(find-rurima "--- sync(string) -> bool" "== Instance Methods" "= class Zlib::Inflate < Zlib::ZStream" "refm/api/src/zlib/Inflate")
(find-rurima "--- sync_point? -> bool" "== Instance Methods" "= class Zlib::Inflate < Zlib::ZStream" "refm/api/src/zlib/Inflate")
(find-rurima "= class Zlib::Deflate < Zlib::ZStream" "refm/api/src/zlib/Deflate")
(find-rurima "== Class Methods" "= class Zlib::Deflate < Zlib::ZStream" "refm/api/src/zlib/Deflate")
(find-rurima "--- deflate(string, level = Zlib::DEFAULT_COMPRESSION ) -> String" "== Class Methods" "= class Zlib::Deflate < Zlib::ZStream" "refm/api/src/zlib/Deflate")
(find-rurima "--- new(level = Zlib::DEFAULT_COMPRESSION, windowBits = Zlib::MAX_WBITS, memlevel = Zlib::DEF_MEM_LEVEL, strategy = Zlib::DEFAULT_STRATEGY) -> Zlib::Deflate" "== Class Methods" "= class Zlib::Deflate < Zlib::ZStream" "refm/api/src/zlib/Deflate")
(find-rurima "== Instance Methods" "= class Zlib::Deflate < Zlib::ZStream" "refm/api/src/zlib/Deflate")
(find-rurima "--- clone -> self" "== Instance Methods" "= class Zlib::Deflate < Zlib::ZStream" "refm/api/src/zlib/Deflate")
(find-rurima "--- deflate(string, flush = Zlib::NO_FLUSH) -> String" "== Instance Methods" "= class Zlib::Deflate < Zlib::ZStream" "refm/api/src/zlib/Deflate")
(find-rurima "--- <<(string) -> self" "== Instance Methods" "= class Zlib::Deflate < Zlib::ZStream" "refm/api/src/zlib/Deflate")
(find-rurima "--- flush(flush = Zlib::SYNC_FLUSH) -> String" "== Instance Methods" "= class Zlib::Deflate < Zlib::ZStream" "refm/api/src/zlib/Deflate")
(find-rurima "--- finish -> String" "== Instance Methods" "= class Zlib::Deflate < Zlib::ZStream" "refm/api/src/zlib/Deflate")
(find-rurima "--- params(level, strategy) -> nil" "== Instance Methods" "= class Zlib::Deflate < Zlib::ZStream" "refm/api/src/zlib/Deflate")
(find-rurima "--- set_dictionary(string) -> String" "== Instance Methods" "= class Zlib::Deflate < Zlib::ZStream" "refm/api/src/zlib/Deflate")
(find-rurima "= class Zlib::GzipReader < Zlib::GzipFile" "refm/api/src/zlib/GzipReader")
(find-rurima "== Class Methods" "= class Zlib::GzipReader < Zlib::GzipFile" "refm/api/src/zlib/GzipReader")
(find-rurima "--- new(io) -> Zlib::GzipReader" "== Class Methods" "= class Zlib::GzipReader < Zlib::GzipFile" "refm/api/src/zlib/GzipReader")
(find-rurima "--- wrap(io) -> Zlib::GzipReader" "== Class Methods" "= class Zlib::GzipReader < Zlib::GzipFile" "refm/api/src/zlib/GzipReader")
(find-rurima "--- wrap(io) {|gz| ... } -> object" "== Class Methods" "= class Zlib::GzipReader < Zlib::GzipFile" "refm/api/src/zlib/GzipReader")
(find-rurima "--- open(filename) -> Zlib::GzipReader" "== Class Methods" "= class Zlib::GzipReader < Zlib::GzipFile" "refm/api/src/zlib/GzipReader")
(find-rurima "--- open(filename) {|gz| ... } -> object" "== Class Methods" "= class Zlib::GzipReader < Zlib::GzipFile" "refm/api/src/zlib/GzipReader")
(find-rurima "== Instance Methods" "= class Zlib::GzipReader < Zlib::GzipFile" "refm/api/src/zlib/GzipReader")
(find-rurima "--- eof -> bool" "== Instance Methods" "= class Zlib::GzipReader < Zlib::GzipFile" "refm/api/src/zlib/GzipReader")
(find-rurima "--- eof? -> bool" "== Instance Methods" "= class Zlib::GzipReader < Zlib::GzipFile" "refm/api/src/zlib/GzipReader")
(find-rurima "--- pos -> Fixnum" "== Instance Methods" "= class Zlib::GzipReader < Zlib::GzipFile" "refm/api/src/zlib/GzipReader")
(find-rurima "--- tell -> Fixnum" "== Instance Methods" "= class Zlib::GzipReader < Zlib::GzipFile" "refm/api/src/zlib/GzipReader")
(find-rurima "--- each(rs = $/){|line| ... } -> self" "== Instance Methods" "= class Zlib::GzipReader < Zlib::GzipFile" "refm/api/src/zlib/GzipReader")
(find-rurima "--- each_line(rs = $/){|line| ... } -> self" "== Instance Methods" "= class Zlib::GzipReader < Zlib::GzipFile" "refm/api/src/zlib/GzipReader")
(find-rurima "--- each(rs = $/) -> Enumerator" "== Instance Methods" "= class Zlib::GzipReader < Zlib::GzipFile" "refm/api/src/zlib/GzipReader")
(find-rurima "--- each_line(rs = $/) -> Enumerator" "== Instance Methods" "= class Zlib::GzipReader < Zlib::GzipFile" "refm/api/src/zlib/GzipReader")
(find-rurima "--- each_byte{|byte| ... } -> nil" "== Instance Methods" "= class Zlib::GzipReader < Zlib::GzipFile" "refm/api/src/zlib/GzipReader")
(find-rurima "--- each_byte -> Enumerator" "== Instance Methods" "= class Zlib::GzipReader < Zlib::GzipFile" "refm/api/src/zlib/GzipReader")
(find-rurima "--- gets(rs = $/) -> String | nil" "== Instance Methods" "= class Zlib::GzipReader < Zlib::GzipFile" "refm/api/src/zlib/GzipReader")
(find-rurima "--- getc -> Fixnum | nil" "== Instance Methods" "= class Zlib::GzipReader < Zlib::GzipFile" "refm/api/src/zlib/GzipReader")
(find-rurima "--- lineno -> Fixnum | Bignum" "== Instance Methods" "= class Zlib::GzipReader < Zlib::GzipFile" "refm/api/src/zlib/GzipReader")
(find-rurima "--- lineno=(num)" "== Instance Methods" "= class Zlib::GzipReader < Zlib::GzipFile" "refm/api/src/zlib/GzipReader")
(find-rurima "--- read(length = nil) -> String | nil" "== Instance Methods" "= class Zlib::GzipReader < Zlib::GzipFile" "refm/api/src/zlib/GzipReader")
(find-rurima "--- readchar -> Fixnum" "== Instance Methods" "= class Zlib::GzipReader < Zlib::GzipFile" "refm/api/src/zlib/GzipReader")
(find-rurima "--- readline(rs = $/) -> String" "== Instance Methods" "= class Zlib::GzipReader < Zlib::GzipFile" "refm/api/src/zlib/GzipReader")
(find-rurima "--- readlines(rs = $/) -> Array" "== Instance Methods" "= class Zlib::GzipReader < Zlib::GzipFile" "refm/api/src/zlib/GzipReader")
(find-rurima "--- readpartial(maxlen, outbuf = nil) -> String" "== Instance Methods" "= class Zlib::GzipReader < Zlib::GzipFile" "refm/api/src/zlib/GzipReader")
(find-rurima "--- ungetc(char) -> nil" "== Instance Methods" "= class Zlib::GzipReader < Zlib::GzipFile" "refm/api/src/zlib/GzipReader")
(find-rurima "--- rewind -> 0" "== Instance Methods" "= class Zlib::GzipReader < Zlib::GzipFile" "refm/api/src/zlib/GzipReader")
(find-rurima "--- unused -> String | nil" "== Instance Methods" "= class Zlib::GzipReader < Zlib::GzipFile" "refm/api/src/zlib/GzipReader")
(find-rurima "= class Zlib::GzipFile::Error < Zlib::Error" "refm/api/src/zlib/GzipFile__Error")
(find-rurima "= class Zlib::GzipFile::NoFooter < Zlib::GzipFile::Error" "refm/api/src/zlib/GzipFile__Error")
(find-rurima "= class Zlib::GzipFile::CRCError < Zlib::GzipFile::Error" "refm/api/src/zlib/GzipFile__Error")
(find-rurima "= class Zlib::GzipFile::LengthError < Zlib::GzipFile::Error" "refm/api/src/zlib/GzipFile__Error")
(find-rurima "= module Zlib" "refm/api/src/zlib/Zlib")
(find-rurima "== Module Functions" "= module Zlib" "refm/api/src/zlib/Zlib")
(find-rurima "--- zlib_version -> String" "== Module Functions" "= module Zlib" "refm/api/src/zlib/Zlib")
(find-rurima "--- adler32(string = nil, adler = nil) -> Integer" "== Module Functions" "= module Zlib" "refm/api/src/zlib/Zlib")
(find-rurima "--- crc32(string = nil, crc = nil) -> Integer" "== Module Functions" "= module Zlib" "refm/api/src/zlib/Zlib")
(find-rurima "--- crc_table -> Array" "== Module Functions" "= module Zlib" "refm/api/src/zlib/Zlib")
(find-rurima "--- adler32_combine(adler1, adler2, length) -> Integer" "== Module Functions" "= module Zlib" "refm/api/src/zlib/Zlib")
(find-rurima "--- crc32_combine(crc1, crc2, length) -> Ingeter" "== Module Functions" "= module Zlib" "refm/api/src/zlib/Zlib")
(find-rurima "--- deflate(string, level = Zlib::DEFAULT_COMPRESSION ) -> String" "== Module Functions" "= module Zlib" "refm/api/src/zlib/Zlib")
(find-rurima "--- Inflate(string) -> String" "== Module Functions" "= module Zlib" "refm/api/src/zlib/Zlib")
(find-rurima "== Constants" "= module Zlib" "refm/api/src/zlib/Zlib")
(find-rurima "--- VERSION -> String" "== Constants" "= module Zlib" "refm/api/src/zlib/Zlib")
(find-rurima "--- ZLIB_VERSION -> String" "== Constants" "= module Zlib" "refm/api/src/zlib/Zlib")
(find-rurima "--- BINARY -> Fixnum" "== Constants" "= module Zlib" "refm/api/src/zlib/Zlib")
(find-rurima "--- ASCII -> Fixnum" "== Constants" "= module Zlib" "refm/api/src/zlib/Zlib")
(find-rurima "--- UNKNOWN -> Fixnum" "== Constants" "= module Zlib" "refm/api/src/zlib/Zlib")
(find-rurima "--- NO_COMPRESSION -> Fixnum" "== Constants" "= module Zlib" "refm/api/src/zlib/Zlib")
(find-rurima "--- BEST_SPEED -> Fixnum" "== Constants" "= module Zlib" "refm/api/src/zlib/Zlib")
(find-rurima "--- BEST_COMPRESSION -> Fixnum" "== Constants" "= module Zlib" "refm/api/src/zlib/Zlib")
(find-rurima "--- DEFAULT_COMPRESSION -> Fixnum" "== Constants" "= module Zlib" "refm/api/src/zlib/Zlib")
(find-rurima "--- FILTERED -> Fixnum" "== Constants" "= module Zlib" "refm/api/src/zlib/Zlib")
(find-rurima "--- HUFFMAN_ONLY -> Fixnum" "== Constants" "= module Zlib" "refm/api/src/zlib/Zlib")
(find-rurima "--- DEFAULT_STRATEGY -> Fixnum" "== Constants" "= module Zlib" "refm/api/src/zlib/Zlib")
(find-rurima "--- DEF_MEM_LEVEL -> Fixnum" "== Constants" "= module Zlib" "refm/api/src/zlib/Zlib")
(find-rurima "--- MAX_MEM_LEVEL -> Fixnum" "== Constants" "= module Zlib" "refm/api/src/zlib/Zlib")
(find-rurima "--- MAX_WBITS" "== Constants" "= module Zlib" "refm/api/src/zlib/Zlib")
(find-rurima "--- NO_FLUSH -> Fixnum" "== Constants" "= module Zlib" "refm/api/src/zlib/Zlib")
(find-rurima "--- SYNC_FLUSH -> Fixnum" "== Constants" "= module Zlib" "refm/api/src/zlib/Zlib")
(find-rurima "--- FULL_FLUSH -> Fixnum" "== Constants" "= module Zlib" "refm/api/src/zlib/Zlib")
(find-rurima "--- FINISH -> Fixnum" "== Constants" "= module Zlib" "refm/api/src/zlib/Zlib")
(find-rurima "--- OS_CODE -> Fixnum" "== Constants" "= module Zlib" "refm/api/src/zlib/Zlib")
(find-rurima "--- OS_MSDOS -> Fixnum" "== Constants" "= module Zlib" "refm/api/src/zlib/Zlib")
(find-rurima "--- OS_AMIGA -> Fixnum" "== Constants" "= module Zlib" "refm/api/src/zlib/Zlib")
(find-rurima "--- OS_VMS -> Fixnum" "== Constants" "= module Zlib" "refm/api/src/zlib/Zlib")
(find-rurima "--- OS_UNIX -> Fixnum" "== Constants" "= module Zlib" "refm/api/src/zlib/Zlib")
(find-rurima "--- OS_VMCMS -> Fixnum" "== Constants" "= module Zlib" "refm/api/src/zlib/Zlib")
(find-rurima "--- OS_ATARI -> Fixnum" "== Constants" "= module Zlib" "refm/api/src/zlib/Zlib")
(find-rurima "--- OS_OS2 -> Fixnum" "== Constants" "= module Zlib" "refm/api/src/zlib/Zlib")
(find-rurima "--- OS_MACOS -> Fixnum" "== Constants" "= module Zlib" "refm/api/src/zlib/Zlib")
(find-rurima "--- OS_ZSYSTEM -> Fixnum" "== Constants" "= module Zlib" "refm/api/src/zlib/Zlib")
(find-rurima "--- OS_CPM -> Fixnum" "== Constants" "= module Zlib" "refm/api/src/zlib/Zlib")
(find-rurima "--- OS_TOPS20 -> Fixnum" "== Constants" "= module Zlib" "refm/api/src/zlib/Zlib")
(find-rurima "--- OS_WIN32 -> Fixnum" "== Constants" "= module Zlib" "refm/api/src/zlib/Zlib")
(find-rurima "--- OS_QDOS -> Fixnum" "== Constants" "= module Zlib" "refm/api/src/zlib/Zlib")
(find-rurima "--- OS_RISCOS -> Fixnum" "== Constants" "= module Zlib" "refm/api/src/zlib/Zlib")
(find-rurima "--- OS_UNKNOWN -> Fixnum" "== Constants" "= module Zlib" "refm/api/src/zlib/Zlib")
(find-rurima "= class Zlib::ZStream < Object" "refm/api/src/zlib/ZStream")
(find-rurima "== Class Methods" "= class Zlib::ZStream < Object" "refm/api/src/zlib/ZStream")
(find-rurima "--- new -> ()" "== Class Methods" "= class Zlib::ZStream < Object" "refm/api/src/zlib/ZStream")
(find-rurima "== Instance Methods" "= class Zlib::ZStream < Object" "refm/api/src/zlib/ZStream")
(find-rurima "--- avail_in -> Integer" "== Instance Methods" "= class Zlib::ZStream < Object" "refm/api/src/zlib/ZStream")
(find-rurima "--- avail_out -> Integer" "== Instance Methods" "= class Zlib::ZStream < Object" "refm/api/src/zlib/ZStream")
(find-rurima "--- avail_out=(size)" "== Instance Methods" "= class Zlib::ZStream < Object" "refm/api/src/zlib/ZStream")
(find-rurima "--- flush_next_in -> String" "== Instance Methods" "= class Zlib::ZStream < Object" "refm/api/src/zlib/ZStream")
(find-rurima "--- flush_next_out -> String" "== Instance Methods" "= class Zlib::ZStream < Object" "refm/api/src/zlib/ZStream")
(find-rurima "--- total_in -> Integer" "== Instance Methods" "= class Zlib::ZStream < Object" "refm/api/src/zlib/ZStream")
(find-rurima "--- total_out -> Integer" "== Instance Methods" "= class Zlib::ZStream < Object" "refm/api/src/zlib/ZStream")
(find-rurima "--- data_type -> Fixnum" "== Instance Methods" "= class Zlib::ZStream < Object" "refm/api/src/zlib/ZStream")
(find-rurima "--- adler -> Integer" "== Instance Methods" "= class Zlib::ZStream < Object" "refm/api/src/zlib/ZStream")
(find-rurima "--- reset -> nil" "== Instance Methods" "= class Zlib::ZStream < Object" "refm/api/src/zlib/ZStream")
(find-rurima "--- finish -> String" "== Instance Methods" "= class Zlib::ZStream < Object" "refm/api/src/zlib/ZStream")
(find-rurima "--- finished? -> bool" "== Instance Methods" "= class Zlib::ZStream < Object" "refm/api/src/zlib/ZStream")
(find-rurima "--- stream_end? -> bool" "== Instance Methods" "= class Zlib::ZStream < Object" "refm/api/src/zlib/ZStream")
(find-rurima "--- close -> nil" "== Instance Methods" "= class Zlib::ZStream < Object" "refm/api/src/zlib/ZStream")
(find-rurima "--- end -> nil" "== Instance Methods" "= class Zlib::ZStream < Object" "refm/api/src/zlib/ZStream")
(find-rurima "--- closed? -> bool" "== Instance Methods" "= class Zlib::ZStream < Object" "refm/api/src/zlib/ZStream")
(find-rurima "--- ended? -> bool" "== Instance Methods" "= class Zlib::ZStream < Object" "refm/api/src/zlib/ZStream")
(find-rurima "= class Zlib::Error < StandardError" "refm/api/src/zlib/Error")
(find-rurima "= class Zlib::StreamEnd < Zlib::Error" "refm/api/src/zlib/Error")
(find-rurima "= class Zlib::NeedDict < Zlib::Error" "refm/api/src/zlib/Error")
(find-rurima "= class Zlib::DataError < Zlib::Error" "refm/api/src/zlib/Error")
(find-rurima "= class Zlib::StreamError < Zlib::Error" "refm/api/src/zlib/Error")
(find-rurima "= class Zlib::MemError < Zlib::Error" "refm/api/src/zlib/Error")
(find-rurima "= class Zlib::BufError < Zlib::Error" "refm/api/src/zlib/Error")
(find-rurima "= class Zlib::VersionError < Zlib::Error" "refm/api/src/zlib/Error")
(find-rurima "= class Zlib::GzipWriter < Zlib::GzipFile" "refm/api/src/zlib/GzipWriter")
(find-rurima "== Class Methods" "= class Zlib::GzipWriter < Zlib::GzipFile" "refm/api/src/zlib/GzipWriter")
(find-rurima "--- new(io, level = Zlib::DEFAULT_COMPRESSION, strategy = Zlib::DEFAULT_STRATEGY) -> Zlib::GzipWriter" "== Class Methods" "= class Zlib::GzipWriter < Zlib::GzipFile" "refm/api/src/zlib/GzipWriter")
(find-rurima "--- wrap(io, level = Zlib::DEFAULT_COMPRESSION, strategy = Zlib::DEFAULT_STRATEGY) -> Zlib::GzipWriter" "== Class Methods" "= class Zlib::GzipWriter < Zlib::GzipFile" "refm/api/src/zlib/GzipWriter")
(find-rurima "--- wrap(io, level = Zlib::DEFAULT_COMPRESSION, strategy = Zlib::DEFAULT_STRATEGY) {|gz| ... } -> object" "== Class Methods" "= class Zlib::GzipWriter < Zlib::GzipFile" "refm/api/src/zlib/GzipWriter")
(find-rurima "--- open(filename, level = Zlib::DEFAULT_COMPRESSION, strategy = Zlib::DEFAULT_STRATEGY) -> Zlib::GzipWriter" "== Class Methods" "= class Zlib::GzipWriter < Zlib::GzipFile" "refm/api/src/zlib/GzipWriter")
(find-rurima "--- open(filename, level = Zlib::DEFAULT_COMPRESSION, strategy = Zlib::DEFAULT_STRATEGY) {|gz| ... } -> object" "== Class Methods" "= class Zlib::GzipWriter < Zlib::GzipFile" "refm/api/src/zlib/GzipWriter")
(find-rurima "== Instance Methods" "= class Zlib::GzipWriter < Zlib::GzipFile" "refm/api/src/zlib/GzipWriter")
(find-rurima "--- close -> File" "== Instance Methods" "= class Zlib::GzipWriter < Zlib::GzipFile" "refm/api/src/zlib/GzipWriter")
(find-rurima "--- finish -> File" "== Instance Methods" "= class Zlib::GzipWriter < Zlib::GzipFile" "refm/api/src/zlib/GzipWriter")
(find-rurima "--- pos -> Fixnum" "== Instance Methods" "= class Zlib::GzipWriter < Zlib::GzipFile" "refm/api/src/zlib/GzipWriter")
(find-rurima "--- tell -> Fixnum" "== Instance Methods" "= class Zlib::GzipWriter < Zlib::GzipFile" "refm/api/src/zlib/GzipWriter")
(find-rurima "--- <<(str) -> self" "== Instance Methods" "= class Zlib::GzipWriter < Zlib::GzipFile" "refm/api/src/zlib/GzipWriter")
(find-rurima "--- putc(ch) -> object" "== Instance Methods" "= class Zlib::GzipWriter < Zlib::GzipFile" "refm/api/src/zlib/GzipWriter")
(find-rurima "--- puts(*str) -> nil" "== Instance Methods" "= class Zlib::GzipWriter < Zlib::GzipFile" "refm/api/src/zlib/GzipWriter")
(find-rurima "--- print(*str) -> nil" "== Instance Methods" "= class Zlib::GzipWriter < Zlib::GzipFile" "refm/api/src/zlib/GzipWriter")
(find-rurima "--- printf(format, *args) -> nil" "== Instance Methods" "= class Zlib::GzipWriter < Zlib::GzipFile" "refm/api/src/zlib/GzipWriter")
(find-rurima "--- write(str) -> Integer" "== Instance Methods" "= class Zlib::GzipWriter < Zlib::GzipFile" "refm/api/src/zlib/GzipWriter")
(find-rurima "--- flush(flush = Zlib::SYNC_FLUSH) -> self" "== Instance Methods" "= class Zlib::GzipWriter < Zlib::GzipFile" "refm/api/src/zlib/GzipWriter")
(find-rurima "--- mtime=(time)" "== Instance Methods" "= class Zlib::GzipWriter < Zlib::GzipFile" "refm/api/src/zlib/GzipWriter")
(find-rurima "--- orig_name=(filename)" "== Instance Methods" "= class Zlib::GzipWriter < Zlib::GzipFile" "refm/api/src/zlib/GzipWriter")
(find-rurima "--- comment=(string)" "== Instance Methods" "= class Zlib::GzipWriter < Zlib::GzipFile" "refm/api/src/zlib/GzipWriter")
(find-rurima "= module Digest" "refm/api/src/digest.rd")
(find-rurima "== Module Functions" "= module Digest" "refm/api/src/digest.rd")
(find-rurima "--- hexencode(string) -> String" "== Module Functions" "= module Digest" "refm/api/src/digest.rd")
(find-rurima "= class Digest::Class < Object" "refm/api/src/digest.rd")
(find-rurima "= module Digest::Instance" "refm/api/src/digest.rd")
(find-rurima "= class Digest::Base < Digest::Class" "refm/api/src/digest.rd")
(find-rurima "= class Digest::Base < Object" "refm/api/src/digest.rd")
(find-rurima "== Class Methods" "= class Digest::Base < Object" "refm/api/src/digest.rd")
(find-rurima "--- new(str = nil)" "== Class Methods" "= class Digest::Base < Object" "refm/api/src/digest.rd")
(find-rurima "--- new" "== Class Methods" "= class Digest::Base < Object" "refm/api/src/digest.rd")
(find-rurima "--- digest(str) -> String" "== Class Methods" "= class Digest::Base < Object" "refm/api/src/digest.rd")
(find-rurima "--- hexdigest(str) -> String" "== Class Methods" "= class Digest::Base < Object" "refm/api/src/digest.rd")
(find-rurima "--- file(path) -> object" "== Class Methods" "= class Digest::Base < Object" "refm/api/src/digest.rd")
(find-rurima "== Instance Methods" "= class Digest::Base < Object" "refm/api/src/digest.rd")
(find-rurima "--- dup" "== Instance Methods" "= class Digest::Base < Object" "refm/api/src/digest.rd")
(find-rurima "--- clone" "== Instance Methods" "= class Digest::Base < Object" "refm/api/src/digest.rd")
(find-rurima "--- digest -> String" "== Instance Methods" "= class Digest::Base < Object" "refm/api/src/digest.rd")
(find-rurima "--- digest! -> String" "== Instance Methods" "= class Digest::Base < Object" "refm/api/src/digest.rd")
(find-rurima "--- hexdigest -> String" "== Instance Methods" "= class Digest::Base < Object" "refm/api/src/digest.rd")
(find-rurima "--- to_s -> String" "== Instance Methods" "= class Digest::Base < Object" "refm/api/src/digest.rd")
(find-rurima "--- hexdigest! -> String" "== Instance Methods" "= class Digest::Base < Object" "refm/api/src/digest.rd")
(find-rurima "--- update(str)" "== Instance Methods" "= class Digest::Base < Object" "refm/api/src/digest.rd")
(find-rurima "--- <<(str)" "== Instance Methods" "= class Digest::Base < Object" "refm/api/src/digest.rd")
(find-rurima "--- ==(md)" "== Instance Methods" "= class Digest::Base < Object" "refm/api/src/digest.rd")
(find-rurima "--- ==(str)" "== Instance Methods" "= class Digest::Base < Object" "refm/api/src/digest.rd")
(find-rurima "--- file(path) -> self" "== Instance Methods" "= class Digest::Base < Object" "refm/api/src/digest.rd")
(find-rurima "--- block_length -> Integer" "== Instance Methods" "= class Digest::Base < Object" "refm/api/src/digest.rd")
(find-rurima "--- digest_length -> Integer" "== Instance Methods" "= class Digest::Base < Object" "refm/api/src/digest.rd")
(find-rurima "--- length -> Integer" "== Instance Methods" "= class Digest::Base < Object" "refm/api/src/digest.rd")
(find-rurima "--- size -> Integer" "== Instance Methods" "= class Digest::Base < Object" "refm/api/src/digest.rd")
(find-rurima "--- reset -> self" "== Instance Methods" "= class Digest::Base < Object" "refm/api/src/digest.rd")
(find-rurima "= reopen Kernel" "refm/api/src/digest.rd")
(find-rurima "== Private Instance Methods" "= reopen Kernel" "refm/api/src/digest.rd")
(find-rurima "--- Digest(name) -> object" "== Private Instance Methods" "= reopen Kernel" "refm/api/src/digest.rd")
(find-rurima "=== 使い方" "refm/api/src/profile.rd")
(find-rurima "=== 出力の意味" "refm/api/src/profile.rd")
(find-rurima "= class Ripper" "refm/api/src/ripper.rd")
(find-rurima "== Class Methods" "= class Ripper" "refm/api/src/ripper.rd")
(find-rurima "--- new(src, filename = \"(ripper)\", lineno = 1) -> Ripper" "== Class Methods" "= class Ripper" "refm/api/src/ripper.rd")
(find-rurima "--- parse(src, filename = '(ripper)', lineno = 1) -> nil" "== Class Methods" "= class Ripper" "refm/api/src/ripper.rd")
(find-rurima "--- yydebug -> bool" "== Class Methods" "= class Ripper" "refm/api/src/ripper.rd")
(find-rurima "--- yydebug=(flag)" "== Class Methods" "= class Ripper" "refm/api/src/ripper.rd")
(find-rurima "== Instance Methods" "= class Ripper" "refm/api/src/ripper.rd")
(find-rurima "--- parse -> nil" "== Instance Methods" "= class Ripper" "refm/api/src/ripper.rd")
(find-rurima "--- column -> Integer | nil" "== Instance Methods" "= class Ripper" "refm/api/src/ripper.rd")
(find-rurima "--- filename -> String" "== Instance Methods" "= class Ripper" "refm/api/src/ripper.rd")
(find-rurima "--- lineno -> Integer | nil" "== Instance Methods" "= class Ripper" "refm/api/src/ripper.rd")
(find-rurima "--- end_seen? -> bool" "== Instance Methods" "= class Ripper" "refm/api/src/ripper.rd")
(find-rurima "--- encoding -> Encoding" "== Instance Methods" "= class Ripper" "refm/api/src/ripper.rd")
(find-rurima "== Private Instance Methods" "= class Ripper" "refm/api/src/ripper.rd")
(find-rurima "--- warn(fmt, *args) -> nil" "== Private Instance Methods" "= class Ripper" "refm/api/src/ripper.rd")
(find-rurima "--- warning(fmt, *args) -> nil" "== Private Instance Methods" "= class Ripper" "refm/api/src/ripper.rd")
(find-rurima "--- compile_error(msg) -> nil" "== Private Instance Methods" "= class Ripper" "refm/api/src/ripper.rd")
(find-rurima "== Constants" "= class Ripper" "refm/api/src/ripper.rd")
(find-rurima "--- Version -> String" "== Constants" "= class Ripper" "refm/api/src/ripper.rd")
(find-rurima "--- EVENTS -> [Symbol]" "== Constants" "= class Ripper" "refm/api/src/ripper.rd")
(find-rurima "--- PARSER_EVENTS -> [Symbol]" "== Constants" "= class Ripper" "refm/api/src/ripper.rd")
(find-rurima "--- PARSER_EVENT_TABLE -> {Symbol => Integer}" "== Constants" "= class Ripper" "refm/api/src/ripper.rd")
(find-rurima "--- SCANNER_EVENTS -> [Symbol]" "== Constants" "= class Ripper" "refm/api/src/ripper.rd")
(find-rurima "--- SCANNER_EVENT_TABLE -> {Symbol => Integer}" "== Constants" "= class Ripper" "refm/api/src/ripper.rd")
(find-rurima "= reopen Kernel" "refm/api/src/English.rd")
(find-rurima "== Special Variables" "= reopen Kernel" "refm/api/src/English.rd")
(find-rurima "--- $ERROR_INFO -> Exception" "== Special Variables" "= reopen Kernel" "refm/api/src/English.rd")
(find-rurima "--- $ERROR_POSITION -> [String] | nil" "== Special Variables" "= reopen Kernel" "refm/api/src/English.rd")
(find-rurima "--- $LOADED_FEATURES -> [String]" "== Special Variables" "= reopen Kernel" "refm/api/src/English.rd")
(find-rurima "--- $FS              -> String | nil" "== Special Variables" "= reopen Kernel" "refm/api/src/English.rd")
(find-rurima "--- $FIELD_SEPARATOR -> String | nil" "== Special Variables" "= reopen Kernel" "refm/api/src/English.rd")
(find-rurima "--- $OFS                    -> String | nil" "== Special Variables" "= reopen Kernel" "refm/api/src/English.rd")
(find-rurima "--- $OUTPUT_FIELD_SEPARATOR -> String | nil" "== Special Variables" "= reopen Kernel" "refm/api/src/English.rd")
(find-rurima "--- $RS                     -> String | nil" "== Special Variables" "= reopen Kernel" "refm/api/src/English.rd")
(find-rurima "--- $INPUT_RECORD_SEPARATOR -> String | nil" "== Special Variables" "= reopen Kernel" "refm/api/src/English.rd")
(find-rurima "--- $ORS                     -> String | nil" "== Special Variables" "= reopen Kernel" "refm/api/src/English.rd")
(find-rurima "--- $OUTPUT_RECORD_SEPARATOR -> String | nil" "== Special Variables" "= reopen Kernel" "refm/api/src/English.rd")
(find-rurima "--- $INPUT_LINE_NUMBER -> Fixnum" "== Special Variables" "= reopen Kernel" "refm/api/src/English.rd")
(find-rurima "--- $NR                -> Fixnum" "== Special Variables" "= reopen Kernel" "refm/api/src/English.rd")
(find-rurima "--- $LAST_READ_LINE -> String | nil" "== Special Variables" "= reopen Kernel" "refm/api/src/English.rd")
(find-rurima "--- $DEFAULT_OUTPUT -> IO" "== Special Variables" "= reopen Kernel" "refm/api/src/English.rd")
(find-rurima "--- $DEFAULT_INPUT -> IO" "== Special Variables" "= reopen Kernel" "refm/api/src/English.rd")
(find-rurima "--- $PID        -> Fixnum" "== Special Variables" "= reopen Kernel" "refm/api/src/English.rd")
(find-rurima "--- $PROCESS_ID -> Fixnum" "== Special Variables" "= reopen Kernel" "refm/api/src/English.rd")
(find-rurima "--- $CHILD_STATUS -> Process::Status | nil" "== Special Variables" "= reopen Kernel" "refm/api/src/English.rd")
(find-rurima "--- $LAST_MATCH_INFO -> MatchData" "== Special Variables" "= reopen Kernel" "refm/api/src/English.rd")
(find-rurima "--- $IGNORECASE -> bool" "== Special Variables" "= reopen Kernel" "refm/api/src/English.rd")
(find-rurima "--- $PROGRAM_NAME -> String" "== Special Variables" "= reopen Kernel" "refm/api/src/English.rd")
(find-rurima "--- $ARGV -> [String]" "== Special Variables" "= reopen Kernel" "refm/api/src/English.rd")
(find-rurima "--- $MATCH -> String | nil" "== Special Variables" "= reopen Kernel" "refm/api/src/English.rd")
(find-rurima "--- $PREMATCH -> String | nil" "== Special Variables" "= reopen Kernel" "refm/api/src/English.rd")
(find-rurima "--- $POSTMATCH -> String | nil" "== Special Variables" "= reopen Kernel" "refm/api/src/English.rd")
(find-rurima "--- $LAST_PAREN_MATCH -> String | nil" "== Special Variables" "= reopen Kernel" "refm/api/src/English.rd")
(find-rurima "= reopen Dir" "refm/api/src/tmpdir.rd")
(find-rurima "== Class Methods" "= reopen Dir" "refm/api/src/tmpdir.rd")
(find-rurima "--- mktmpdir(prefix_suffix = nil, tmpdir = nil)             -> String" "== Class Methods" "= reopen Dir" "refm/api/src/tmpdir.rd")
(find-rurima "--- mktmpdir(prefix_suffix = nil, tmpdir = nil){|dir| ... } -> object" "== Class Methods" "= reopen Dir" "refm/api/src/tmpdir.rd")
(find-rurima "--- tmpdir    -> String" "== Class Methods" "= reopen Dir" "refm/api/src/tmpdir.rd")
(find-rurima "= 添付ライブラリ" "refm/api/stdlibs.rd")
(find-rurima "== 添付ライブラリ一覧" "= 添付ライブラリ" "refm/api/stdlibs.rd")
(find-rurima "=== テキスト" "== 添付ライブラリ一覧" "= 添付ライブラリ" "refm/api/stdlibs.rd")
(find-rurima "=== ファイルフォーマット" "== 添付ライブラリ一覧" "= 添付ライブラリ" "refm/api/stdlibs.rd")
(find-rurima "=== ファイル" "== 添付ライブラリ一覧" "= 添付ライブラリ" "refm/api/stdlibs.rd")
(find-rurima "=== ネットワーク" "== 添付ライブラリ一覧" "= 添付ライブラリ" "refm/api/stdlibs.rd")
(find-rurima "=== 入出力" "== 添付ライブラリ一覧" "= 添付ライブラリ" "refm/api/stdlibs.rd")
(find-rurima "=== 文字コード" "== 添付ライブラリ一覧" "= 添付ライブラリ" "refm/api/stdlibs.rd")
(find-rurima "=== 数学" "== 添付ライブラリ一覧" "= 添付ライブラリ" "refm/api/stdlibs.rd")
(find-rurima "=== データベース" "== 添付ライブラリ一覧" "= 添付ライブラリ" "refm/api/stdlibs.rd")
(find-rurima "=== 画面制御・CUI" "== 添付ライブラリ一覧" "= 添付ライブラリ" "refm/api/stdlibs.rd")
(find-rurima "=== GUI" "== 添付ライブラリ一覧" "= 添付ライブラリ" "refm/api/stdlibs.rd")
(find-rurima "=== 日付・時間" "== 添付ライブラリ一覧" "= 添付ライブラリ" "refm/api/stdlibs.rd")
(find-rurima "=== マルチスレッド・同期" "== 添付ライブラリ一覧" "= 添付ライブラリ" "refm/api/stdlibs.rd")
(find-rurima "=== Unix" "== 添付ライブラリ一覧" "= 添付ライブラリ" "refm/api/stdlibs.rd")
(find-rurima "=== MS Windows" "== 添付ライブラリ一覧" "= 添付ライブラリ" "refm/api/stdlibs.rd")
(find-rurima "=== GC" "== 添付ライブラリ一覧" "= 添付ライブラリ" "refm/api/stdlibs.rd")
(find-rurima "=== デザインパターン" "== 添付ライブラリ一覧" "= 添付ライブラリ" "refm/api/stdlibs.rd")
(find-rurima "=== 開発ツール" "== 添付ライブラリ一覧" "= 添付ライブラリ" "refm/api/stdlibs.rd")
(find-rurima "=== コマンドライン" "== 添付ライブラリ一覧" "= 添付ライブラリ" "refm/api/stdlibs.rd")
(find-rurima "=== その他" "== 添付ライブラリ一覧" "= 添付ライブラリ" "refm/api/stdlibs.rd")
(find-rurima "=== obsolete" "== 添付ライブラリ一覧" "= 添付ライブラリ" "refm/api/stdlibs.rd")
(find-rurima "= このマニュアルのヘルプ" "refm/doc/help.rd")
(find-rurima "=== 検索" "= このマニュアルのヘルプ" "refm/doc/help.rd")
(find-rurima "=== 記号の説明" "= このマニュアルのヘルプ" "refm/doc/help.rd")
(find-rurima "==== 返り値の型の詳細" "=== 記号の説明" "= このマニュアルのヘルプ" "refm/doc/help.rd")
(find-rurima "=== お問い合わせ" "= このマニュアルのヘルプ" "refm/doc/help.rd")
(find-rurima "= os2_emx" "refm/doc/platform/os2_emx.rd")
(find-rurima "= mswin32" "refm/doc/platform/mswin32.rd")
(find-rurima "= BeOS" "refm/doc/platform/BeOS.rd")
(find-rurima "= emx" "refm/doc/platform/emx.rd")
(find-rurima "= DJGPP" "refm/doc/platform/DJGPP.rd")
(find-rurima "= Human68k" "refm/doc/platform/human68k.rd")
(find-rurima "== Rubyのバイナリ" "= Human68k" "refm/doc/platform/human68k.rd")
(find-rurima "== 参照" "= Human68k" "refm/doc/platform/human68k.rd")
(find-rurima "= WindowsCE" "refm/doc/platform/WindowsCE.rd")
(find-rurima "= mswince" "refm/doc/platform/mswince.rd")
(find-rurima "= VMS" "refm/doc/platform/VMS.rd")
(find-rurima "= Ruby が動作するプラットフォーム" "refm/doc/platform/index.rd")
(find-rurima "= GNU" "refm/doc/platform/GNU.rd")
(find-rurima "= Mac OS X" "refm/doc/platform/MacOSX.rd")
(find-rurima "= Mac" "refm/doc/platform/Mac.rd")
(find-rurima "= Win32" "refm/doc/platform/Win32.rd")
(find-rurima "= Win32ネイティブ版Rubyの互換性問題" "refm/doc/platform/mswin32-compat.rd")
(find-rurima "== プロセスの扱い" "= Win32ネイティブ版Rubyの互換性問題" "refm/doc/platform/mswin32-compat.rd")
(find-rurima "== 実行権限の扱い" "= Win32ネイティブ版Rubyの互換性問題" "refm/doc/platform/mswin32-compat.rd")
(find-rurima "== ファイルシステムの問題" "= Win32ネイティブ版Rubyの互換性問題" "refm/doc/platform/mswin32-compat.rd")
(find-rurima "== シェルの違いによる問題" "= Win32ネイティブ版Rubyの互換性問題" "refm/doc/platform/mswin32-compat.rd")
(find-rurima "== IO.popenの問題" "= Win32ネイティブ版Rubyの互換性問題" "refm/doc/platform/mswin32-compat.rd")
(find-rurima "== 1.7 系では解決している問題" "= Win32ネイティブ版Rubyの互換性問題" "refm/doc/platform/mswin32-compat.rd")
(find-rurima "== Windows のメッセージハンドラとRubyスレッドの併用時の問題" "= Win32ネイティブ版Rubyの互換性問題" "refm/doc/platform/mswin32-compat.rd")
(find-rurima "== IOとRubyスレッド併用時の問題" "= Win32ネイティブ版Rubyの互換性問題" "refm/doc/platform/mswin32-compat.rd")
(find-rurima "== その他" "= Win32ネイティブ版Rubyの互換性問題" "refm/doc/platform/mswin32-compat.rd")
(find-rurima "= mingw32" "refm/doc/platform/mingw32.rd")
(find-rurima "= MinGW" "refm/doc/platform/MinGW.rd")
(find-rurima "= bccwin32" "refm/doc/platform/bccwin32.rd")
(find-rurima "= Cygwin" "refm/doc/platform/Cygwin.rd")
(find-rurima "= DOSISH 対応" "refm/doc/platform/DOSISH-support.rd")
(find-rurima "= Unix" "refm/doc/platform/Unix.rd")
(find-rurima "= Win32ネイティブ版" "refm/doc/platform/Win32-native.rd")
(find-rurima "= GNU Hurd" "refm/doc/platform/GNU%20Hurd.rd")
(find-rurima "= OS2" "refm/doc/platform/OS2.rd")
(find-rurima "= 字句構造" "refm/doc/spec/lexical.rd")
(find-rurima "===[a:identifier] 識別子" "= 字句構造" "refm/doc/spec/lexical.rd")
(find-rurima "===[a:comment] コメント" "= 字句構造" "refm/doc/spec/lexical.rd")
(find-rurima "===[a:embed] 埋め込みドキュメント" "= 字句構造" "refm/doc/spec/lexical.rd")
(find-rurima "===[a:reserved] 予約語" "= 字句構造" "refm/doc/spec/lexical.rd")
(find-rurima "= Ruby プログラムの実行" "refm/doc/spec/eval.rd")
(find-rurima "=== Ruby プログラム" "= Ruby プログラムの実行" "refm/doc/spec/eval.rd")
(find-rurima "=== 文" "= Ruby プログラムの実行" "refm/doc/spec/eval.rd")
(find-rurima "==== if" "=== 文" "= Ruby プログラムの実行" "refm/doc/spec/eval.rd")
(find-rurima "==== until" "=== 文" "= Ruby プログラムの実行" "refm/doc/spec/eval.rd")
(find-rurima "==== if 修飾子" "=== 文" "= Ruby プログラムの実行" "refm/doc/spec/eval.rd")
(find-rurima "==== unless 修飾子" "=== 文" "= Ruby プログラムの実行" "refm/doc/spec/eval.rd")
(find-rurima "==== while" "=== 文" "= Ruby プログラムの実行" "refm/doc/spec/eval.rd")
(find-rurima "==== until" "=== 文" "= Ruby プログラムの実行" "refm/doc/spec/eval.rd")
(find-rurima "==== while 修飾子" "=== 文" "= Ruby プログラムの実行" "refm/doc/spec/eval.rd")
(find-rurima "==== until 修飾子" "=== 文" "= Ruby プログラムの実行" "refm/doc/spec/eval.rd")
(find-rurima "==== for" "=== 文" "= Ruby プログラムの実行" "refm/doc/spec/eval.rd")
(find-rurima "==== begin 〜 end" "=== 文" "= Ruby プログラムの実行" "refm/doc/spec/eval.rd")
(find-rurima "==== クラス定義文" "=== 文" "= Ruby プログラムの実行" "refm/doc/spec/eval.rd")
(find-rurima "==== モジュール定義文" "=== 文" "= Ruby プログラムの実行" "refm/doc/spec/eval.rd")
(find-rurima "==== 特異クラス定義文" "=== 文" "= Ruby プログラムの実行" "refm/doc/spec/eval.rd")
(find-rurima "==== メソッド定義文" "=== 文" "= Ruby プログラムの実行" "refm/doc/spec/eval.rd")
(find-rurima "==== 特異メソッド定義式" "=== 文" "= Ruby プログラムの実行" "refm/doc/spec/eval.rd")
(find-rurima "==== BEGIN" "=== 文" "= Ruby プログラムの実行" "refm/doc/spec/eval.rd")
(find-rurima "==== END" "=== 文" "= Ruby プログラムの実行" "refm/doc/spec/eval.rd")
(find-rurima "=== メソッド" "= Ruby プログラムの実行" "refm/doc/spec/eval.rd")
(find-rurima "==== メソッドの呼び出し" "=== メソッド" "= Ruby プログラムの実行" "refm/doc/spec/eval.rd")
(find-rurima "==== eval" "=== メソッド" "= Ruby プログラムの実行" "refm/doc/spec/eval.rd")
(find-rurima "==== メソッドの実行" "=== メソッド" "= Ruby プログラムの実行" "refm/doc/spec/eval.rd")
(find-rurima "==== ブロック付きメソッド呼び出し" "=== メソッド" "= Ruby プログラムの実行" "refm/doc/spec/eval.rd")
(find-rurima "==== eval, instance_eval, module_eval" "=== メソッド" "= Ruby プログラムの実行" "refm/doc/spec/eval.rd")
(find-rurima "=== 代入" "= Ruby プログラムの実行" "refm/doc/spec/eval.rd")
(find-rurima "==== 多重代入" "=== 代入" "= Ruby プログラムの実行" "refm/doc/spec/eval.rd")
(find-rurima "=== 変数と定数" "= Ruby プログラムの実行" "refm/doc/spec/eval.rd")
(find-rurima "==== ローカル変数" "=== 変数と定数" "= Ruby プログラムの実行" "refm/doc/spec/eval.rd")
(find-rurima "==== インスタンス変数" "=== 変数と定数" "= Ruby プログラムの実行" "refm/doc/spec/eval.rd")
(find-rurima "==== クラス変数" "=== 変数と定数" "= Ruby プログラムの実行" "refm/doc/spec/eval.rd")
(find-rurima "==== グローバル変数" "=== 変数と定数" "= Ruby プログラムの実行" "refm/doc/spec/eval.rd")
(find-rurima "==== 定数" "=== 変数と定数" "= Ruby プログラムの実行" "refm/doc/spec/eval.rd")
(find-rurima "=== 擬似変数" "= Ruby プログラムの実行" "refm/doc/spec/eval.rd")
(find-rurima "==== self" "=== 擬似変数" "= Ruby プログラムの実行" "refm/doc/spec/eval.rd")
(find-rurima "==== nil" "=== 擬似変数" "= Ruby プログラムの実行" "refm/doc/spec/eval.rd")
(find-rurima "==== true" "=== 擬似変数" "= Ruby プログラムの実行" "refm/doc/spec/eval.rd")
(find-rurima "==== false" "=== 擬似変数" "= Ruby プログラムの実行" "refm/doc/spec/eval.rd")
(find-rurima "= 正規表現" "refm/doc/spec/regexp.rd")
(find-rurima "===[a:regexp] 正規表現記号" "= 正規表現" "refm/doc/spec/regexp.rd")
(find-rurima "===[a:backref] 後方参照" "= 正規表現" "refm/doc/spec/regexp.rd")
(find-rurima "===[a:string] 文字クラス" "= 正規表現" "refm/doc/spec/regexp.rd")
(find-rurima "===[a:backtrack] バックトラック" "= 正規表現" "refm/doc/spec/regexp.rd")
(find-rurima "===[a:sample] サンプル" "= 正規表現" "refm/doc/spec/regexp.rd")
(find-rurima "==== 数値" "===[a:sample] サンプル" "= 正規表現" "refm/doc/spec/regexp.rd")
(find-rurima "==== 数字を 3 桁ずつコンマで区切る" "===[a:sample] サンプル" "= 正規表現" "refm/doc/spec/regexp.rd")
(find-rurima "= 演算子式" "refm/doc/spec/operator.rd")
(find-rurima "===[a:assign] 代入" "= 演算子式" "refm/doc/spec/operator.rd")
(find-rurima "====[a:selfassign] 自己代入" "===[a:assign] 代入" "= 演算子式" "refm/doc/spec/operator.rd")
(find-rurima "====[a:multiassign] 多重代入" "===[a:assign] 代入" "= 演算子式" "refm/doc/spec/operator.rd")
(find-rurima "===[a:range] 範囲式" "= 演算子式" "refm/doc/spec/operator.rd")
(find-rurima "====[a:range_cond] 条件式としての範囲式" "===[a:range] 範囲式" "= 演算子式" "refm/doc/spec/operator.rd")
(find-rurima "===[a:and] and" "= 演算子式" "refm/doc/spec/operator.rd")
(find-rurima "===[a:or] or" "= 演算子式" "refm/doc/spec/operator.rd")
(find-rurima "===[a:not] not" "= 演算子式" "refm/doc/spec/operator.rd")
(find-rurima "===[a:cond] 条件演算子" "= 演算子式" "refm/doc/spec/operator.rd")
(find-rurima "= Rubyの文法" "refm/doc/spec/grammar.rd")
(find-rurima "= 多言語化" "refm/doc/spec/m17n.rd")
(find-rurima "===[a:m17n_prog] M17N プログラミングの基本" "= 多言語化" "refm/doc/spec/m17n.rd")
(find-rurima "===[a:convert] エンコーディングの変更" "= 多言語化" "refm/doc/spec/m17n.rd")
(find-rurima "====[a:ruby18] Ruby 1.8 からの移行" "===[a:convert] エンコーディングの変更" "= 多言語化" "refm/doc/spec/m17n.rd")
(find-rurima "===[a:encoding] Ruby がサポートするエンコーディング" "= 多言語化" "refm/doc/spec/m17n.rd")
(find-rurima "====[a:ascii_compat] ASCII互換エンコーディング" "===[a:encoding] Ruby がサポートするエンコーディング" "= 多言語化" "refm/doc/spec/m17n.rd")
(find-rurima "====[a:7bit_clean] 7bit クリーンな文字列" "===[a:encoding] Ruby がサポートするエンコーディング" "= 多言語化" "refm/doc/spec/m17n.rd")
(find-rurima "====[a:binary] バイナリの取扱い" "===[a:encoding] Ruby がサポートするエンコーディング" "= 多言語化" "refm/doc/spec/m17n.rd")
(find-rurima "====[a:dummy] ダミーエンコーディング" "===[a:encoding] Ruby がサポートするエンコーディング" "= 多言語化" "refm/doc/spec/m17n.rd")
(find-rurima "===[a:script_encoding] スクリプトエンコーディング" "= 多言語化" "refm/doc/spec/m17n.rd")
(find-rurima "====[a:magic_comment] magic comment" "===[a:script_encoding] スクリプトエンコーディング" "= 多言語化" "refm/doc/spec/m17n.rd")
(find-rurima "====[a:incompat] 1.8 からのスクリプトエンコーディングに関する非互換性" "===[a:script_encoding] スクリプトエンコーディング" "= 多言語化" "refm/doc/spec/m17n.rd")
(find-rurima "====[a:literal] リテラルのエンコーディング" "===[a:script_encoding] スクリプトエンコーディング" "= 多言語化" "refm/doc/spec/m17n.rd")
(find-rurima "= 環境変数" "refm/doc/spec/envvars.rd")
(find-rurima "= リテラル" "refm/doc/spec/literal.rd")
(find-rurima "===[a:num] 数値リテラル" "= リテラル" "refm/doc/spec/literal.rd")
(find-rurima "===[a:string] 文字列リテラル" "= リテラル" "refm/doc/spec/literal.rd")
(find-rurima "====[a:backslash] バックスラッシュ記法" "===[a:string] 文字列リテラル" "= リテラル" "refm/doc/spec/literal.rd")
(find-rurima "====[a:exp] 式展開" "===[a:string] 文字列リテラル" "= リテラル" "refm/doc/spec/literal.rd")
(find-rurima "===[a:command] コマンド出力" "= リテラル" "refm/doc/spec/literal.rd")
(find-rurima "===[a:here] ヒアドキュメント (行指向文字列リテラル)" "= リテラル" "refm/doc/spec/literal.rd")
(find-rurima "===[a:regexp] 正規表現リテラル" "= リテラル" "refm/doc/spec/literal.rd")
(find-rurima "===[a:array] 配列式" "= リテラル" "refm/doc/spec/literal.rd")
(find-rurima "===[a:hash] ハッシュ式" "= リテラル" "refm/doc/spec/literal.rd")
(find-rurima "===[a:range] 範囲オブジェクト" "= リテラル" "refm/doc/spec/literal.rd")
(find-rurima "===[a:symbol] シンボル" "= リテラル" "refm/doc/spec/literal.rd")
(find-rurima "===[a:percent] %記法" "= リテラル" "refm/doc/spec/literal.rd")
(find-rurima "= メソッド呼び出し(super・ブロック付き・yield)" "refm/doc/spec/call.rd")
(find-rurima "===[a:super] super" "= メソッド呼び出し(super・ブロック付き・yield)" "refm/doc/spec/call.rd")
(find-rurima "===[a:block] ブロック付きメソッド呼び出し" "= メソッド呼び出し(super・ブロック付き・yield)" "refm/doc/spec/call.rd")
(find-rurima "===[a:yield] yield" "= メソッド呼び出し(super・ブロック付き・yield)" "refm/doc/spec/call.rd")
(find-rurima "====[a:block_arg] ブロックパラメータの挙動" "===[a:yield] yield" "= メソッド呼び出し(super・ブロック付き・yield)" "refm/doc/spec/call.rd")
(find-rurima "= スレッド" "refm/doc/spec/thread.rd")
(find-rurima "= セキュリティモデル" "refm/doc/spec/safelevel.rd")
(find-rurima "=== オブジェクトの汚染" "= セキュリティモデル" "refm/doc/spec/safelevel.rd")
(find-rurima "=== セーフレベル" "= セキュリティモデル" "refm/doc/spec/safelevel.rd")
(find-rurima "==== レベル 0" "=== セーフレベル" "= セキュリティモデル" "refm/doc/spec/safelevel.rd")
(find-rurima "===== 汚染されるオブジェクト" "==== レベル 0" "=== セーフレベル" "= セキュリティモデル" "refm/doc/spec/safelevel.rd")
(find-rurima "===== 禁止される操作" "==== レベル 0" "=== セーフレベル" "= セキュリティモデル" "refm/doc/spec/safelevel.rd")
(find-rurima "==== レベル 1" "=== セーフレベル" "= セキュリティモデル" "refm/doc/spec/safelevel.rd")
(find-rurima "===== 汚染されるオブジェクト" "==== レベル 1" "=== セーフレベル" "= セキュリティモデル" "refm/doc/spec/safelevel.rd")
(find-rurima "===== 禁止される操作" "==== レベル 1" "=== セーフレベル" "= セキュリティモデル" "refm/doc/spec/safelevel.rd")
(find-rurima "==== レベル 2" "=== セーフレベル" "= セキュリティモデル" "refm/doc/spec/safelevel.rd")
(find-rurima "===== 汚染されるオブジェクト" "==== レベル 2" "=== セーフレベル" "= セキュリティモデル" "refm/doc/spec/safelevel.rd")
(find-rurima "=====  禁止される操作" "==== レベル 2" "=== セーフレベル" "= セキュリティモデル" "refm/doc/spec/safelevel.rd")
(find-rurima "==== レベル 3" "=== セーフレベル" "= セキュリティモデル" "refm/doc/spec/safelevel.rd")
(find-rurima "===== 汚染されるオブジェクト" "==== レベル 3" "=== セーフレベル" "= セキュリティモデル" "refm/doc/spec/safelevel.rd")
(find-rurima "===== 禁止される操作" "==== レベル 3" "=== セーフレベル" "= セキュリティモデル" "refm/doc/spec/safelevel.rd")
(find-rurima "====[a:level4] レベル 4" "=== セーフレベル" "= セキュリティモデル" "refm/doc/spec/safelevel.rd")
(find-rurima "===== 汚染されるオブジェクト" "====[a:level4] レベル 4" "=== セーフレベル" "= セキュリティモデル" "refm/doc/spec/safelevel.rd")
(find-rurima "===== 禁止される操作" "====[a:level4] レベル 4" "=== セーフレベル" "= セキュリティモデル" "refm/doc/spec/safelevel.rd")
(find-rurima "=== セーフレベルに関するその他の詳細" "= セキュリティモデル" "refm/doc/spec/safelevel.rd")
(find-rurima "=== 使用例" "= セキュリティモデル" "refm/doc/spec/safelevel.rd")
(find-rurima "=== 拡張ライブラリでの扱い" "= セキュリティモデル" "refm/doc/spec/safelevel.rd")
(find-rurima "= 変数と定数" "refm/doc/spec/variables.rd")
(find-rurima "===[a:local] ローカル変数" "= 変数と定数" "refm/doc/spec/variables.rd")
(find-rurima "===[a:instance] インスタンス変数" "= 変数と定数" "refm/doc/spec/variables.rd")
(find-rurima "===[a:class] クラス変数" "= 変数と定数" "refm/doc/spec/variables.rd")
(find-rurima "====[a:class_var_scope] クラス変数のスコープ" "===[a:class] クラス変数" "= 変数と定数" "refm/doc/spec/variables.rd")
(find-rurima "===[a:global] グローバル変数" "= 変数と定数" "refm/doc/spec/variables.rd")
(find-rurima "====[a:builtin] 組み込み変数" "===[a:global] グローバル変数" "= 変数と定数" "refm/doc/spec/variables.rd")
(find-rurima "==== 識別子と分類" "===[a:global] グローバル変数" "= 変数と定数" "refm/doc/spec/variables.rd")
(find-rurima "==== スコープ" "===[a:global] グローバル変数" "= 変数と定数" "refm/doc/spec/variables.rd")
(find-rurima "===[a:pseudo] 疑似変数" "= 変数と定数" "refm/doc/spec/variables.rd")
(find-rurima "===[a:const] 定数" "= 変数と定数" "refm/doc/spec/variables.rd")
(find-rurima "====[a:prio] 定数参照の優先順位" "===[a:const] 定数" "= 変数と定数" "refm/doc/spec/variables.rd")
(find-rurima "= はじめに" "refm/doc/spec/intro.rd")
(find-rurima "= クラス" "refm/doc/spec/class.rd")
(find-rurima "=== クラスとオブジェクト" "= クラス" "refm/doc/spec/class.rd")
(find-rurima "=== モジュール" "= クラス" "refm/doc/spec/class.rd")
(find-rurima "=== 特異クラス" "= クラス" "refm/doc/spec/class.rd")
(find-rurima "= 終了処理" "refm/doc/spec/terminate.rd")
(find-rurima "= コマンド" "refm/doc/spec/commands.rd")
(find-rurima "= 手続きオブジェクトの挙動の詳細" "refm/doc/spec/lambda_proc.rd")
(find-rurima "===[a:def] 手続きオブジェクトとは" "= 手続きオブジェクトの挙動の詳細" "refm/doc/spec/lambda_proc.rd")
(find-rurima "= Rubyの起動" "refm/doc/spec/rubycmd.rd")
(find-rurima "===[a:cmd_option] コマンドラインオプション" "= Rubyの起動" "refm/doc/spec/rubycmd.rd")
(find-rurima "===[a:shebang] インタプリタ行の解釈" "= Rubyの起動" "refm/doc/spec/rubycmd.rd")
(find-rurima "= 疑似BNFによるRubyの文法" "refm/doc/spec/bnf.rd")
(find-rurima "= オブジェクト" "refm/doc/spec/object.rd")
(find-rurima "=== オブジェクトとは" "= オブジェクト" "refm/doc/spec/object.rd")
(find-rurima "=== クラス" "= オブジェクト" "refm/doc/spec/object.rd")
(find-rurima "==== モジュール" "=== クラス" "= オブジェクト" "refm/doc/spec/object.rd")
(find-rurima "=== メソッド" "= オブジェクト" "refm/doc/spec/object.rd")
(find-rurima "= クラス／メソッドの定義" "refm/doc/spec/def.rd")
(find-rurima "===[a:class] クラス定義" "= クラス／メソッドの定義" "refm/doc/spec/def.rd")
(find-rurima "===[a:singleton_class] 特異クラス定義" "= クラス／メソッドの定義" "refm/doc/spec/def.rd")
(find-rurima "===[a:module] モジュール定義" "= クラス／メソッドの定義" "refm/doc/spec/def.rd")
(find-rurima "===[a:method] メソッド定義" "= クラス／メソッドの定義" "refm/doc/spec/def.rd")
(find-rurima "====[a:operator] 演算子式の定義" "===[a:method] メソッド定義" "= クラス／メソッドの定義" "refm/doc/spec/def.rd")
(find-rurima "====[a:nest_method] メソッド定義のネスト" "===[a:method] メソッド定義" "= クラス／メソッドの定義" "refm/doc/spec/def.rd")
(find-rurima "====[a:eval_method] メソッドの評価" "===[a:method] メソッド定義" "= クラス／メソッドの定義" "refm/doc/spec/def.rd")
(find-rurima "===[a:singleton_method] 特異メソッド定義" "= クラス／メソッドの定義" "refm/doc/spec/def.rd")
(find-rurima "===[a:class_method] クラスメソッドの定義" "= クラス／メソッドの定義" "refm/doc/spec/def.rd")
(find-rurima "===[a:limit] 呼び出し制限" "= クラス／メソッドの定義" "refm/doc/spec/def.rd")
(find-rurima "=== 定義に関する操作" "= クラス／メソッドの定義" "refm/doc/spec/def.rd")
(find-rurima "====[a:alias] alias" "=== 定義に関する操作" "= クラス／メソッドの定義" "refm/doc/spec/def.rd")
(find-rurima "====[a:undef] undef" "=== 定義に関する操作" "= クラス／メソッドの定義" "refm/doc/spec/def.rd")
(find-rurima "====[a:defined] defined?" "=== 定義に関する操作" "= クラス／メソッドの定義" "refm/doc/spec/def.rd")
(find-rurima "= プログラム・文・式" "refm/doc/spec/program.rd")
(find-rurima "===[a:exp] 式" "= プログラム・文・式" "refm/doc/spec/program.rd")
(find-rurima "===[a:terminate] プログラムの終り" "= プログラム・文・式" "refm/doc/spec/program.rd")
(find-rurima "= 制御構造" "refm/doc/spec/control.rd")
(find-rurima "=== 条件分岐" "= 制御構造" "refm/doc/spec/control.rd")
(find-rurima "====[a:if] if" "=== 条件分岐" "= 制御構造" "refm/doc/spec/control.rd")
(find-rurima "==== if 修飾子" "=== 条件分岐" "= 制御構造" "refm/doc/spec/control.rd")
(find-rurima "====[a:unless] unless" "=== 条件分岐" "= 制御構造" "refm/doc/spec/control.rd")
(find-rurima "==== unless 修飾子" "=== 条件分岐" "= 制御構造" "refm/doc/spec/control.rd")
(find-rurima "====[a:case] case" "=== 条件分岐" "= 制御構造" "refm/doc/spec/control.rd")
(find-rurima "=== 繰り返し" "= 制御構造" "refm/doc/spec/control.rd")
(find-rurima "====[a:while] while" "=== 繰り返し" "= 制御構造" "refm/doc/spec/control.rd")
(find-rurima "==== while 修飾子" "=== 繰り返し" "= 制御構造" "refm/doc/spec/control.rd")
(find-rurima "====[a:until] until" "=== 繰り返し" "= 制御構造" "refm/doc/spec/control.rd")
(find-rurima "==== until修飾子" "=== 繰り返し" "= 制御構造" "refm/doc/spec/control.rd")
(find-rurima "====[a:for] for" "=== 繰り返し" "= 制御構造" "refm/doc/spec/control.rd")
(find-rurima "====[a:break] break" "=== 繰り返し" "= 制御構造" "refm/doc/spec/control.rd")
(find-rurima "====[a:next] next" "=== 繰り返し" "= 制御構造" "refm/doc/spec/control.rd")
(find-rurima "====[a:redo] redo" "=== 繰り返し" "= 制御構造" "refm/doc/spec/control.rd")
(find-rurima "====[a:retry] retry" "=== 繰り返し" "= 制御構造" "refm/doc/spec/control.rd")
(find-rurima "=== 例外処理" "= 制御構造" "refm/doc/spec/control.rd")
(find-rurima "====[a:raise] raise" "=== 例外処理" "= 制御構造" "refm/doc/spec/control.rd")
(find-rurima "====[a:begin] begin" "=== 例外処理" "= 制御構造" "refm/doc/spec/control.rd")
(find-rurima "==== rescue修飾子" "=== 例外処理" "= 制御構造" "refm/doc/spec/control.rd")
(find-rurima "=== その他" "= 制御構造" "refm/doc/spec/control.rd")
(find-rurima "====[a:return] return" "=== その他" "= 制御構造" "refm/doc/spec/control.rd")
(find-rurima "====[a:BEGIN] BEGIN" "=== その他" "= 制御構造" "refm/doc/spec/control.rd")
(find-rurima "====[a:END] END" "=== その他" "= 制御構造" "refm/doc/spec/control.rd")
(find-rurima "= ReFe" "refm/doc/ReFe.rd")
(find-rurima "=== Gems版" "= ReFe" "refm/doc/ReFe.rd")
(find-rurima "=== Ruby リファレンスマニュアルの検索ツール ReFe のデータ構築について" "= ReFe" "refm/doc/ReFe.rd")
(find-rurima "=== ReFe の Emacs インタフェースのインストール方法" "= ReFe" "refm/doc/ReFe.rd")
(find-rurima "= sprintf フォーマット" "refm/doc/print_format.rd")
(find-rurima "= pack テンプレート文字列" "refm/doc/pack_template.rd")
(find-rurima "= Marshalフォーマット" "refm/doc/marshal-format.rd")
(find-rurima "=== Marshal のバグ" "= Marshalフォーマット" "refm/doc/marshal-format.rd")
(find-rurima "= オブジェクト指向スクリプト言語 Ruby リファレンスマニュアル" "refm/doc/index.rd")
(find-rurima "=== 使用上の注意" "= オブジェクト指向スクリプト言語 Ruby リファレンスマニュアル" "refm/doc/index.rd")
(find-rurima "=== 目次" "= オブジェクト指向スクリプト言語 Ruby リファレンスマニュアル" "refm/doc/index.rd")
(find-rurima "==== Ruby 言語仕様" "=== 目次" "= オブジェクト指向スクリプト言語 Ruby リファレンスマニュアル" "refm/doc/index.rd")
(find-rurima "==== 組み込みライブラリ" "=== 目次" "= オブジェクト指向スクリプト言語 Ruby リファレンスマニュアル" "refm/doc/index.rd")
(find-rurima "==== 標準添付ライブラリ" "=== 目次" "= オブジェクト指向スクリプト言語 Ruby リファレンスマニュアル" "refm/doc/index.rd")
(find-rurima "==== C API" "=== 目次" "= オブジェクト指向スクリプト言語 Ruby リファレンスマニュアル" "refm/doc/index.rd")
(find-rurima "==== その他" "=== 目次" "= オブジェクト指向スクリプト言語 Ruby リファレンスマニュアル" "refm/doc/index.rd")
(find-rurima "= Ruby用語集" "refm/doc/glossary.rd")
(find-rurima "=== A" "= Ruby用語集" "refm/doc/glossary.rd")
(find-rurima "=== B" "= Ruby用語集" "refm/doc/glossary.rd")
(find-rurima "=== C" "= Ruby用語集" "refm/doc/glossary.rd")
(find-rurima "=== D" "= Ruby用語集" "refm/doc/glossary.rd")
(find-rurima "=== E" "= Ruby用語集" "refm/doc/glossary.rd")
(find-rurima "=== F" "= Ruby用語集" "refm/doc/glossary.rd")
(find-rurima "=== G" "= Ruby用語集" "refm/doc/glossary.rd")
(find-rurima "=== H" "= Ruby用語集" "refm/doc/glossary.rd")
(find-rurima "=== I" "= Ruby用語集" "refm/doc/glossary.rd")
(find-rurima "=== J" "= Ruby用語集" "refm/doc/glossary.rd")
(find-rurima "=== K" "= Ruby用語集" "refm/doc/glossary.rd")
(find-rurima "=== L" "= Ruby用語集" "refm/doc/glossary.rd")
(find-rurima "=== M" "= Ruby用語集" "refm/doc/glossary.rd")
(find-rurima "=== N" "= Ruby用語集" "refm/doc/glossary.rd")
(find-rurima "=== O" "= Ruby用語集" "refm/doc/glossary.rd")
(find-rurima "=== P" "= Ruby用語集" "refm/doc/glossary.rd")
(find-rurima "=== Q" "= Ruby用語集" "refm/doc/glossary.rd")
(find-rurima "=== R" "= Ruby用語集" "refm/doc/glossary.rd")
(find-rurima "=== S" "= Ruby用語集" "refm/doc/glossary.rd")
(find-rurima "=== T" "= Ruby用語集" "refm/doc/glossary.rd")
(find-rurima "=== U" "= Ruby用語集" "refm/doc/glossary.rd")
(find-rurima "=== V" "= Ruby用語集" "refm/doc/glossary.rd")
(find-rurima "=== W" "= Ruby用語集" "refm/doc/glossary.rd")
(find-rurima "=== X" "= Ruby用語集" "refm/doc/glossary.rd")
(find-rurima "=== Y" "= Ruby用語集" "refm/doc/glossary.rd")
(find-rurima "=== Z" "= Ruby用語集" "refm/doc/glossary.rd")
(find-rurima "=== あ" "= Ruby用語集" "refm/doc/glossary.rd")
(find-rurima "=== か" "= Ruby用語集" "refm/doc/glossary.rd")
(find-rurima "=== さ" "= Ruby用語集" "refm/doc/glossary.rd")
(find-rurima "=== た" "= Ruby用語集" "refm/doc/glossary.rd")
(find-rurima "=== な" "= Ruby用語集" "refm/doc/glossary.rd")
(find-rurima "=== は" "= Ruby用語集" "refm/doc/glossary.rd")
(find-rurima "=== ま" "= Ruby用語集" "refm/doc/glossary.rd")
(find-rurima "=== や" "= Ruby用語集" "refm/doc/glossary.rd")
(find-rurima "=== ら" "= Ruby用語集" "refm/doc/glossary.rd")
(find-rurima "=== わ" "= Ruby用語集" "refm/doc/glossary.rd")
(find-rurima "=== Symbol" "= Ruby用語集" "refm/doc/glossary.rd")
(find-rurima "= manual page" "refm/doc/manual-page.rd")
(find-rurima "= ruby 1.8.5 feature" "refm/doc/news/1.8.5.rd")
(find-rurima "== 1.8.4 (2005-12-24) -> ((<stable-snapshot|URL:ftp://ftp.ruby-lang.org/pub/ruby/stable-snapshot.tar.gz>))" "= ruby 1.8.5 feature" "refm/doc/news/1.8.5.rd")
(find-rurima "=== 2006-06-18" "== 1.8.4 (2005-12-24) -> ((<stable-snapshot|URL:ftp://ftp.ruby-lang.org/pub/ruby/stable-snapshot.tar.gz>))" "= ruby 1.8.5 feature" "refm/doc/news/1.8.5.rd")
(find-rurima "=== 2006-06-17" "== 1.8.4 (2005-12-24) -> ((<stable-snapshot|URL:ftp://ftp.ruby-lang.org/pub/ruby/stable-snapshot.tar.gz>))" "= ruby 1.8.5 feature" "refm/doc/news/1.8.5.rd")
(find-rurima "=== 2006-06-14" "== 1.8.4 (2005-12-24) -> ((<stable-snapshot|URL:ftp://ftp.ruby-lang.org/pub/ruby/stable-snapshot.tar.gz>))" "= ruby 1.8.5 feature" "refm/doc/news/1.8.5.rd")
(find-rurima "=== 2006-06-11" "== 1.8.4 (2005-12-24) -> ((<stable-snapshot|URL:ftp://ftp.ruby-lang.org/pub/ruby/stable-snapshot.tar.gz>))" "= ruby 1.8.5 feature" "refm/doc/news/1.8.5.rd")
(find-rurima "=== 2006-06-07" "== 1.8.4 (2005-12-24) -> ((<stable-snapshot|URL:ftp://ftp.ruby-lang.org/pub/ruby/stable-snapshot.tar.gz>))" "= ruby 1.8.5 feature" "refm/doc/news/1.8.5.rd")
(find-rurima "=== 2006-06-02" "== 1.8.4 (2005-12-24) -> ((<stable-snapshot|URL:ftp://ftp.ruby-lang.org/pub/ruby/stable-snapshot.tar.gz>))" "= ruby 1.8.5 feature" "refm/doc/news/1.8.5.rd")
(find-rurima "=== 2006-05-22" "== 1.8.4 (2005-12-24) -> ((<stable-snapshot|URL:ftp://ftp.ruby-lang.org/pub/ruby/stable-snapshot.tar.gz>))" "= ruby 1.8.5 feature" "refm/doc/news/1.8.5.rd")
(find-rurima "=== 2006-02-21" "== 1.8.4 (2005-12-24) -> ((<stable-snapshot|URL:ftp://ftp.ruby-lang.org/pub/ruby/stable-snapshot.tar.gz>))" "= ruby 1.8.5 feature" "refm/doc/news/1.8.5.rd")
(find-rurima "=== 2006-02-20" "== 1.8.4 (2005-12-24) -> ((<stable-snapshot|URL:ftp://ftp.ruby-lang.org/pub/ruby/stable-snapshot.tar.gz>))" "= ruby 1.8.5 feature" "refm/doc/news/1.8.5.rd")
(find-rurima "=== 2006-02-06" "== 1.8.4 (2005-12-24) -> ((<stable-snapshot|URL:ftp://ftp.ruby-lang.org/pub/ruby/stable-snapshot.tar.gz>))" "= ruby 1.8.5 feature" "refm/doc/news/1.8.5.rd")
(find-rurima "=== 2006-02-04" "== 1.8.4 (2005-12-24) -> ((<stable-snapshot|URL:ftp://ftp.ruby-lang.org/pub/ruby/stable-snapshot.tar.gz>))" "= ruby 1.8.5 feature" "refm/doc/news/1.8.5.rd")
(find-rurima "=== 2005-12-29" "== 1.8.4 (2005-12-24) -> ((<stable-snapshot|URL:ftp://ftp.ruby-lang.org/pub/ruby/stable-snapshot.tar.gz>))" "= ruby 1.8.5 feature" "refm/doc/news/1.8.5.rd")
(find-rurima "== 参考" "= ruby 1.8.5 feature" "refm/doc/news/1.8.5.rd")
(find-rurima "= ruby 1.8.2 feature" "refm/doc/news/1.8.2.rd")
(find-rurima "== 1.8.1 (2003-12-25) -> 1.8.2 (2004-12-25) " "= ruby 1.8.2 feature" "refm/doc/news/1.8.2.rd")
(find-rurima "=== 日時未詳" "== 1.8.1 (2003-12-25) -> 1.8.2 (2004-12-25) " "= ruby 1.8.2 feature" "refm/doc/news/1.8.2.rd")
(find-rurima "=== 2004-12-19" "== 1.8.1 (2003-12-25) -> 1.8.2 (2004-12-25) " "= ruby 1.8.2 feature" "refm/doc/news/1.8.2.rd")
(find-rurima "=== 2004-12-18" "== 1.8.1 (2003-12-25) -> 1.8.2 (2004-12-25) " "= ruby 1.8.2 feature" "refm/doc/news/1.8.2.rd")
(find-rurima "=== 2004-12-17" "== 1.8.1 (2003-12-25) -> 1.8.2 (2004-12-25) " "= ruby 1.8.2 feature" "refm/doc/news/1.8.2.rd")
(find-rurima "=== 2004-12-16" "== 1.8.1 (2003-12-25) -> 1.8.2 (2004-12-25) " "= ruby 1.8.2 feature" "refm/doc/news/1.8.2.rd")
(find-rurima "=== 2004-12-14" "== 1.8.1 (2003-12-25) -> 1.8.2 (2004-12-25) " "= ruby 1.8.2 feature" "refm/doc/news/1.8.2.rd")
(find-rurima "=== 2004-12-09" "== 1.8.1 (2003-12-25) -> 1.8.2 (2004-12-25) " "= ruby 1.8.2 feature" "refm/doc/news/1.8.2.rd")
(find-rurima "=== 2004-12-08" "== 1.8.1 (2003-12-25) -> 1.8.2 (2004-12-25) " "= ruby 1.8.2 feature" "refm/doc/news/1.8.2.rd")
(find-rurima "=== 2004-12-06 " "== 1.8.1 (2003-12-25) -> 1.8.2 (2004-12-25) " "= ruby 1.8.2 feature" "refm/doc/news/1.8.2.rd")
(find-rurima "=== 2004-12-05" "== 1.8.1 (2003-12-25) -> 1.8.2 (2004-12-25) " "= ruby 1.8.2 feature" "refm/doc/news/1.8.2.rd")
(find-rurima "=== 2004-12-04" "== 1.8.1 (2003-12-25) -> 1.8.2 (2004-12-25) " "= ruby 1.8.2 feature" "refm/doc/news/1.8.2.rd")
(find-rurima "=== 2004-11-20" "== 1.8.1 (2003-12-25) -> 1.8.2 (2004-12-25) " "= ruby 1.8.2 feature" "refm/doc/news/1.8.2.rd")
(find-rurima "=== 2004-11-18" "== 1.8.1 (2003-12-25) -> 1.8.2 (2004-12-25) " "= ruby 1.8.2 feature" "refm/doc/news/1.8.2.rd")
(find-rurima "=== 2004-11-16" "== 1.8.1 (2003-12-25) -> 1.8.2 (2004-12-25) " "= ruby 1.8.2 feature" "refm/doc/news/1.8.2.rd")
(find-rurima "=== 2004-11-10" "== 1.8.1 (2003-12-25) -> 1.8.2 (2004-12-25) " "= ruby 1.8.2 feature" "refm/doc/news/1.8.2.rd")
(find-rurima "=== 2004-10-27" "== 1.8.1 (2003-12-25) -> 1.8.2 (2004-12-25) " "= ruby 1.8.2 feature" "refm/doc/news/1.8.2.rd")
(find-rurima "=== 2004-10-21" "== 1.8.1 (2003-12-25) -> 1.8.2 (2004-12-25) " "= ruby 1.8.2 feature" "refm/doc/news/1.8.2.rd")
(find-rurima "=== 2004-10-20" "== 1.8.1 (2003-12-25) -> 1.8.2 (2004-12-25) " "= ruby 1.8.2 feature" "refm/doc/news/1.8.2.rd")
(find-rurima "=== 2004-10-19" "== 1.8.1 (2003-12-25) -> 1.8.2 (2004-12-25) " "= ruby 1.8.2 feature" "refm/doc/news/1.8.2.rd")
(find-rurima "=== 2004-10-18" "== 1.8.1 (2003-12-25) -> 1.8.2 (2004-12-25) " "= ruby 1.8.2 feature" "refm/doc/news/1.8.2.rd")
(find-rurima "=== 2004-09-03" "== 1.8.1 (2003-12-25) -> 1.8.2 (2004-12-25) " "= ruby 1.8.2 feature" "refm/doc/news/1.8.2.rd")
(find-rurima "=== 2004-08-24" "== 1.8.1 (2003-12-25) -> 1.8.2 (2004-12-25) " "= ruby 1.8.2 feature" "refm/doc/news/1.8.2.rd")
(find-rurima "=== 2004-08-23" "== 1.8.1 (2003-12-25) -> 1.8.2 (2004-12-25) " "= ruby 1.8.2 feature" "refm/doc/news/1.8.2.rd")
(find-rurima "=== 2004-08-14" "== 1.8.1 (2003-12-25) -> 1.8.2 (2004-12-25) " "= ruby 1.8.2 feature" "refm/doc/news/1.8.2.rd")
(find-rurima "=== 2004-08-07" "== 1.8.1 (2003-12-25) -> 1.8.2 (2004-12-25) " "= ruby 1.8.2 feature" "refm/doc/news/1.8.2.rd")
(find-rurima "=== 2004-07-28" "== 1.8.1 (2003-12-25) -> 1.8.2 (2004-12-25) " "= ruby 1.8.2 feature" "refm/doc/news/1.8.2.rd")
(find-rurima "=== 2004-07-23" "== 1.8.1 (2003-12-25) -> 1.8.2 (2004-12-25) " "= ruby 1.8.2 feature" "refm/doc/news/1.8.2.rd")
(find-rurima "=== 2004-07-16" "== 1.8.1 (2003-12-25) -> 1.8.2 (2004-12-25) " "= ruby 1.8.2 feature" "refm/doc/news/1.8.2.rd")
(find-rurima "=== 2004-07-05" "== 1.8.1 (2003-12-25) -> 1.8.2 (2004-12-25) " "= ruby 1.8.2 feature" "refm/doc/news/1.8.2.rd")
(find-rurima "=== 2004-07-01" "== 1.8.1 (2003-12-25) -> 1.8.2 (2004-12-25) " "= ruby 1.8.2 feature" "refm/doc/news/1.8.2.rd")
(find-rurima "=== 2004-07-01" "== 1.8.1 (2003-12-25) -> 1.8.2 (2004-12-25) " "= ruby 1.8.2 feature" "refm/doc/news/1.8.2.rd")
(find-rurima "=== 2004-06-29" "== 1.8.1 (2003-12-25) -> 1.8.2 (2004-12-25) " "= ruby 1.8.2 feature" "refm/doc/news/1.8.2.rd")
(find-rurima "=== 2004-06-23" "== 1.8.1 (2003-12-25) -> 1.8.2 (2004-12-25) " "= ruby 1.8.2 feature" "refm/doc/news/1.8.2.rd")
(find-rurima "=== 2004-06-16" "== 1.8.1 (2003-12-25) -> 1.8.2 (2004-12-25) " "= ruby 1.8.2 feature" "refm/doc/news/1.8.2.rd")
(find-rurima "=== 2004-06-04" "== 1.8.1 (2003-12-25) -> 1.8.2 (2004-12-25) " "= ruby 1.8.2 feature" "refm/doc/news/1.8.2.rd")
(find-rurima "=== 2004-05-27" "== 1.8.1 (2003-12-25) -> 1.8.2 (2004-12-25) " "= ruby 1.8.2 feature" "refm/doc/news/1.8.2.rd")
(find-rurima "=== 2004-05-16" "== 1.8.1 (2003-12-25) -> 1.8.2 (2004-12-25) " "= ruby 1.8.2 feature" "refm/doc/news/1.8.2.rd")
(find-rurima "=== 2004-05-13" "== 1.8.1 (2003-12-25) -> 1.8.2 (2004-12-25) " "= ruby 1.8.2 feature" "refm/doc/news/1.8.2.rd")
(find-rurima "=== 2004-05-10" "== 1.8.1 (2003-12-25) -> 1.8.2 (2004-12-25) " "= ruby 1.8.2 feature" "refm/doc/news/1.8.2.rd")
(find-rurima "=== 2004-04-19" "== 1.8.1 (2003-12-25) -> 1.8.2 (2004-12-25) " "= ruby 1.8.2 feature" "refm/doc/news/1.8.2.rd")
(find-rurima "=== 2004-04-16" "== 1.8.1 (2003-12-25) -> 1.8.2 (2004-12-25) " "= ruby 1.8.2 feature" "refm/doc/news/1.8.2.rd")
(find-rurima "=== 2004-04-15" "== 1.8.1 (2003-12-25) -> 1.8.2 (2004-12-25) " "= ruby 1.8.2 feature" "refm/doc/news/1.8.2.rd")
(find-rurima "=== 2004-04-11" "== 1.8.1 (2003-12-25) -> 1.8.2 (2004-12-25) " "= ruby 1.8.2 feature" "refm/doc/news/1.8.2.rd")
(find-rurima "=== 2004-03-8" "== 1.8.1 (2003-12-25) -> 1.8.2 (2004-12-25) " "= ruby 1.8.2 feature" "refm/doc/news/1.8.2.rd")
(find-rurima "=== 2004-02-24" "== 1.8.1 (2003-12-25) -> 1.8.2 (2004-12-25) " "= ruby 1.8.2 feature" "refm/doc/news/1.8.2.rd")
(find-rurima "=== 2004-02-20" "== 1.8.1 (2003-12-25) -> 1.8.2 (2004-12-25) " "= ruby 1.8.2 feature" "refm/doc/news/1.8.2.rd")
(find-rurima "=== 2004-02-18" "== 1.8.1 (2003-12-25) -> 1.8.2 (2004-12-25) " "= ruby 1.8.2 feature" "refm/doc/news/1.8.2.rd")
(find-rurima "=== 2004-02-10" "== 1.8.1 (2003-12-25) -> 1.8.2 (2004-12-25) " "= ruby 1.8.2 feature" "refm/doc/news/1.8.2.rd")
(find-rurima "=== 2004-02-09" "== 1.8.1 (2003-12-25) -> 1.8.2 (2004-12-25) " "= ruby 1.8.2 feature" "refm/doc/news/1.8.2.rd")
(find-rurima "=== 2004-02-06" "== 1.8.1 (2003-12-25) -> 1.8.2 (2004-12-25) " "= ruby 1.8.2 feature" "refm/doc/news/1.8.2.rd")
(find-rurima "=== 2004-02-05" "== 1.8.1 (2003-12-25) -> 1.8.2 (2004-12-25) " "= ruby 1.8.2 feature" "refm/doc/news/1.8.2.rd")
(find-rurima "=== 2004-01-29" "== 1.8.1 (2003-12-25) -> 1.8.2 (2004-12-25) " "= ruby 1.8.2 feature" "refm/doc/news/1.8.2.rd")
(find-rurima "=== 2004-01-26" "== 1.8.1 (2003-12-25) -> 1.8.2 (2004-12-25) " "= ruby 1.8.2 feature" "refm/doc/news/1.8.2.rd")
(find-rurima "=== 2004-01-08" "== 1.8.1 (2003-12-25) -> 1.8.2 (2004-12-25) " "= ruby 1.8.2 feature" "refm/doc/news/1.8.2.rd")
(find-rurima "=== 2003-12-31" "== 1.8.1 (2003-12-25) -> 1.8.2 (2004-12-25) " "= ruby 1.8.2 feature" "refm/doc/news/1.8.2.rd")
(find-rurima "=== 2003-12-27" "== 1.8.1 (2003-12-25) -> 1.8.2 (2004-12-25) " "= ruby 1.8.2 feature" "refm/doc/news/1.8.2.rd")
(find-rurima "=== 2003-12-26" "== 1.8.1 (2003-12-25) -> 1.8.2 (2004-12-25) " "= ruby 1.8.2 feature" "refm/doc/news/1.8.2.rd")
(find-rurima "= ruby 1.6 feature" "refm/doc/news/1.6.0.rd")
(find-rurima "== 1.6.8 (2002-12-24) -> stable-snapshot" "= ruby 1.6 feature" "refm/doc/news/1.6.0.rd")
(find-rurima "== 1.6.7 (2002-03-01) -> 1.6.8 (2002-12-24)" "= ruby 1.6 feature" "refm/doc/news/1.6.0.rd")
(find-rurima "== 1.6.6 (2001-12-26) -> 1.6.7 (2002-03-01)" "= ruby 1.6 feature" "refm/doc/news/1.6.0.rd")
(find-rurima "== 1.6.5 (2001-09-19) -> 1.6.6 (2001-09-19)" "= ruby 1.6 feature" "refm/doc/news/1.6.0.rd")
(find-rurima "== 1.6.4 (2001-06-04) -> 1.6.5 (2001-09-19)" "= ruby 1.6 feature" "refm/doc/news/1.6.0.rd")
(find-rurima "== 1.6.3 (2001-03-19) -> 1.6.4 (2001-06-04)" "= ruby 1.6 feature" "refm/doc/news/1.6.0.rd")
(find-rurima "== 1.6.2 -> 1.6.3 (2001-03-19)" "= ruby 1.6 feature" "refm/doc/news/1.6.0.rd")
(find-rurima "= Ruby変更履歴" "refm/doc/news/index.rd")
(find-rurima "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2006-09-16" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2006-09-14" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2006-09-13" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2006-09-12" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2006-09-11" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2006-08-31" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2006-07-26" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2006-07-21" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2006-06-22" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2006-06-17" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2006-06-13" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2006-06-11" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2006-06-10" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2006-05-22" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2006-03-21" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2006-03-03" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2006-02-15" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2006-02-03" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2006-01-26" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2006-01-10" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2005-12-15" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2005-10-21" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2005-09-16" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2005-09-05" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2005-08-30" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2005-06-09" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2005-06-08" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2005-06-02" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2005-05-08" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2005-04-02" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2005-03-09" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2005-03-04" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2005-03-04" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2005-03-02" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2005-02-04" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2005-02-03" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2005-02-02" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2005-01-15" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2005-01-01" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2004-12-26" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2004-12-14" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2004-12-07" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2004-12-03" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2004-11-14" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2004-10-30" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2004-10-20" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2004-10-05" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2004-09-26" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2004-09-22" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2004-09-20" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2004-09-13" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2004-08-27" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2004-08-19" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2004-08-17" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2004-08-12" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2004-07-17" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2004-07-16" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2004-07-14" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2004-05-25" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2004-05-14" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2004-04-15" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2004-04-08" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2004-04-06" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2004-03-31" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2004-03-24" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2004-03-19" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2004-03-12" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2004-03-10" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2004-03-07" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2004-03-05" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2004-02-16" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2004-02-06" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2004-01-29" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2004-01-23" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2004-01-22" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2004-01-17" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2004-01-14" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2004-01-13" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2004-01-12" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2004-01-10" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2004-01-06 " "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2004-01-05" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "=== 2004-01-02" "== 1.9.0" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "== 参考" "= ruby 1.9 feature" "refm/doc/news/1.9.0.rd")
(find-rurima "= ruby 1.8.4 feature" "refm/doc/news/1.8.4.rd")
(find-rurima "== 目次" "= ruby 1.8.4 feature" "refm/doc/news/1.8.4.rd")
(find-rurima "== Ruby本体" "= ruby 1.8.4 feature" "refm/doc/news/1.8.4.rd")
(find-rurima "== 組み込みライブラリ" "= ruby 1.8.4 feature" "refm/doc/news/1.8.4.rd")
(find-rurima "== 添付ライブラリ" "= ruby 1.8.4 feature" "refm/doc/news/1.8.4.rd")
(find-rurima "== 拡張ライブラリAPI" "= ruby 1.8.4 feature" "refm/doc/news/1.8.4.rd")
(find-rurima "== プラットフォーム固有" "= ruby 1.8.4 feature" "refm/doc/news/1.8.4.rd")
(find-rurima "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "== インタプリタの変更" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "== 追加されたクラス／モジュール" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== クラス階層" "== 追加されたクラス／モジュール" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "== 追加されたメソッド" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== 組み込み関数" "== 追加されたメソッド" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== ARGF" "== 追加されたメソッド" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== Array" "== 追加されたメソッド" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== Class" "== 追加されたメソッド" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== Dir" "== 追加されたメソッド" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== ENV" "== 追加されたメソッド" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== Enumerable" "== 追加されたメソッド" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== File" "== 追加されたメソッド" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== File::Stat" "== 追加されたメソッド" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== Float" "== 追加されたメソッド" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== Hash" "== 追加されたメソッド" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== IO" "== 追加されたメソッド" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== LocalJumpError" "== 追加されたメソッド" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== Marshal" "== 追加されたメソッド" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== MatchData" "== 追加されたメソッド" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== Math" "== 追加されたメソッド" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== Method" "== 追加されたメソッド" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== Module" "== 追加されたメソッド" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== NameError" "== 追加されたメソッド" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== NilClass" "== 追加されたメソッド" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== Numeric" "== 追加されたメソッド" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== NoMethodError" "== 追加されたメソッド" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== Object" "== 追加されたメソッド" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== Proc" "== 追加されたメソッド" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== Process" "== 追加されたメソッド" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== Range" "== 追加されたメソッド" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== Regexp" "== 追加されたメソッド" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== Socket" "== 追加されたメソッド" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== String" "== 追加されたメソッド" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== Struct" "== 追加されたメソッド" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== Symbol" "== 追加されたメソッド" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== SystemCallError" "== 追加されたメソッド" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== Thread" "== 追加されたメソッド" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== ThreadGroup" "== 追加されたメソッド" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== Time" "== 追加されたメソッド" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== その他" "== 追加されたメソッド" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "== 追加された定数" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "== 拡張されたクラス／メソッド(互換性のある変更)" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== 組み込み関数" "== 拡張されたクラス／メソッド(互換性のある変更)" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== Array" "== 拡張されたクラス／メソッド(互換性のある変更)" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== Class" "== 拡張されたクラス／メソッド(互換性のある変更)" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== Dir" "== 拡張されたクラス／メソッド(互換性のある変更)" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== ENV" "== 拡張されたクラス／メソッド(互換性のある変更)" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== Hash" "== 拡張されたクラス／メソッド(互換性のある変更)" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== IO" "== 拡張されたクラス／メソッド(互換性のある変更)" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== Method" "== 拡張されたクラス／メソッド(互換性のある変更)" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== Module" "== 拡張されたクラス／メソッド(互換性のある変更)" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== Numeric" "== 拡張されたクラス／メソッド(互換性のある変更)" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== Object" "== 拡張されたクラス／メソッド(互換性のある変更)" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== Proc" "== 拡張されたクラス／メソッド(互換性のある変更)" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== Regexp" "== 拡張されたクラス／メソッド(互換性のある変更)" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== String" "== 拡張されたクラス／メソッド(互換性のある変更)" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== Struct" "== 拡張されたクラス／メソッド(互換性のある変更)" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== Socket" "== 拡張されたクラス／メソッド(互換性のある変更)" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== Thread" "== 拡張されたクラス／メソッド(互換性のある変更)" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== Time" "== 拡張されたクラス／メソッド(互換性のある変更)" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== UnboundMethod" "== 拡張されたクラス／メソッド(互換性のある変更)" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== その他" "== 拡張されたクラス／メソッド(互換性のある変更)" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "== 変更されたクラス／メソッド(互換性のない変更)" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== 組み込み関数" "== 変更されたクラス／メソッド(互換性のない変更)" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== ARGF" "== 変更されたクラス／メソッド(互換性のない変更)" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== ARGV" "== 変更されたクラス／メソッド(互換性のない変更)" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== Array" "== 変更されたクラス／メソッド(互換性のない変更)" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== Comparable" "== 変更されたクラス／メソッド(互換性のない変更)" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== Dir" "== 変更されたクラス／メソッド(互換性のない変更)" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== Enumerable" "== 変更されたクラス／メソッド(互換性のない変更)" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== File" "== 変更されたクラス／メソッド(互換性のない変更)" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== Float" "== 変更されたクラス／メソッド(互換性のない変更)" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== Module" "== 変更されたクラス／メソッド(互換性のない変更)" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== Object" "== 変更されたクラス／メソッド(互換性のない変更)" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== Range" "== 変更されたクラス／メソッド(互換性のない変更)" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== Regexp" "== 変更されたクラス／メソッド(互換性のない変更)" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== String" "== 変更されたクラス／メソッド(互換性のない変更)" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== ThreadGroup" "== 変更されたクラス／メソッド(互換性のない変更)" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== Time" "== 変更されたクラス／メソッド(互換性のない変更)" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "== 文法の変更" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "== 正規表現" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "== Marshal" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "== Windows 対応" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "== 廃止された(される予定の)機能" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "== ライブラリ" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "== 拡張ライブラリAPI" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "== バグ修正" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "=== サポートプラットフォームの追加" "== バグ修正" "= 1.6.8から1.8.0への変更点(まとめ)" "refm/doc/news/1.8.0.rd")
(find-rurima "= ruby 1.8.1 feature" "refm/doc/news/1.8.1.rd")
(find-rurima "= ruby 1.8.3 feature" "refm/doc/news/1.8.3.rd")
(find-rurima "== 1.8.2 (2004-12-25) -> 1.8.3 (2005-09-21)" "= ruby 1.8.3 feature" "refm/doc/news/1.8.3.rd")
(find-rurima "=== 2005-09-19" "== 1.8.2 (2004-12-25) -> 1.8.3 (2005-09-21)" "= ruby 1.8.3 feature" "refm/doc/news/1.8.3.rd")
(find-rurima "=== 2005-09-16" "== 1.8.2 (2004-12-25) -> 1.8.3 (2005-09-21)" "= ruby 1.8.3 feature" "refm/doc/news/1.8.3.rd")
(find-rurima "=== 2005-09-16" "== 1.8.2 (2004-12-25) -> 1.8.3 (2005-09-21)" "= ruby 1.8.3 feature" "refm/doc/news/1.8.3.rd")
(find-rurima "=== 2005-09-13" "== 1.8.2 (2004-12-25) -> 1.8.3 (2005-09-21)" "= ruby 1.8.3 feature" "refm/doc/news/1.8.3.rd")
(find-rurima "=== 2005-09-13" "== 1.8.2 (2004-12-25) -> 1.8.3 (2005-09-21)" "= ruby 1.8.3 feature" "refm/doc/news/1.8.3.rd")
(find-rurima "=== 2005-09-10" "== 1.8.2 (2004-12-25) -> 1.8.3 (2005-09-21)" "= ruby 1.8.3 feature" "refm/doc/news/1.8.3.rd")
(find-rurima "=== 2005-09-10" "== 1.8.2 (2004-12-25) -> 1.8.3 (2005-09-21)" "= ruby 1.8.3 feature" "refm/doc/news/1.8.3.rd")
(find-rurima "=== 2005-09-09" "== 1.8.2 (2004-12-25) -> 1.8.3 (2005-09-21)" "= ruby 1.8.3 feature" "refm/doc/news/1.8.3.rd")
(find-rurima "=== 2005-09-09" "== 1.8.2 (2004-12-25) -> 1.8.3 (2005-09-21)" "= ruby 1.8.3 feature" "refm/doc/news/1.8.3.rd")
(find-rurima "=== 2005-08-29" "== 1.8.2 (2004-12-25) -> 1.8.3 (2005-09-21)" "= ruby 1.8.3 feature" "refm/doc/news/1.8.3.rd")
(find-rurima "=== 2005-08-20" "== 1.8.2 (2004-12-25) -> 1.8.3 (2005-09-21)" "= ruby 1.8.3 feature" "refm/doc/news/1.8.3.rd")
(find-rurima "=== 2005-08-07" "== 1.8.2 (2004-12-25) -> 1.8.3 (2005-09-21)" "= ruby 1.8.3 feature" "refm/doc/news/1.8.3.rd")
(find-rurima "=== 2005-07-27" "== 1.8.2 (2004-12-25) -> 1.8.3 (2005-09-21)" "= ruby 1.8.3 feature" "refm/doc/news/1.8.3.rd")
(find-rurima "=== 2005-07-11" "== 1.8.2 (2004-12-25) -> 1.8.3 (2005-09-21)" "= ruby 1.8.3 feature" "refm/doc/news/1.8.3.rd")
(find-rurima "=== 2005-06-30" "== 1.8.2 (2004-12-25) -> 1.8.3 (2005-09-21)" "= ruby 1.8.3 feature" "refm/doc/news/1.8.3.rd")
(find-rurima "=== 2005-06-20" "== 1.8.2 (2004-12-25) -> 1.8.3 (2005-09-21)" "= ruby 1.8.3 feature" "refm/doc/news/1.8.3.rd")
(find-rurima "=== 2005-06-16" "== 1.8.2 (2004-12-25) -> 1.8.3 (2005-09-21)" "= ruby 1.8.3 feature" "refm/doc/news/1.8.3.rd")
(find-rurima "=== 2005-06-08" "== 1.8.2 (2004-12-25) -> 1.8.3 (2005-09-21)" "= ruby 1.8.3 feature" "refm/doc/news/1.8.3.rd")
(find-rurima "=== 2005-06-08" "== 1.8.2 (2004-12-25) -> 1.8.3 (2005-09-21)" "= ruby 1.8.3 feature" "refm/doc/news/1.8.3.rd")
(find-rurima "=== 2005-06-07" "== 1.8.2 (2004-12-25) -> 1.8.3 (2005-09-21)" "= ruby 1.8.3 feature" "refm/doc/news/1.8.3.rd")
(find-rurima "=== 2005-05-28" "== 1.8.2 (2004-12-25) -> 1.8.3 (2005-09-21)" "= ruby 1.8.3 feature" "refm/doc/news/1.8.3.rd")
(find-rurima "=== 2005-05-27" "== 1.8.2 (2004-12-25) -> 1.8.3 (2005-09-21)" "= ruby 1.8.3 feature" "refm/doc/news/1.8.3.rd")
(find-rurima "=== 2005-05-24" "== 1.8.2 (2004-12-25) -> 1.8.3 (2005-09-21)" "= ruby 1.8.3 feature" "refm/doc/news/1.8.3.rd")
(find-rurima "=== 2005-05-22" "== 1.8.2 (2004-12-25) -> 1.8.3 (2005-09-21)" "= ruby 1.8.3 feature" "refm/doc/news/1.8.3.rd")
(find-rurima "=== 2005-05-19" "== 1.8.2 (2004-12-25) -> 1.8.3 (2005-09-21)" "= ruby 1.8.3 feature" "refm/doc/news/1.8.3.rd")
(find-rurima "=== 2005-05-16" "== 1.8.2 (2004-12-25) -> 1.8.3 (2005-09-21)" "= ruby 1.8.3 feature" "refm/doc/news/1.8.3.rd")
(find-rurima "=== 2005-05-15" "== 1.8.2 (2004-12-25) -> 1.8.3 (2005-09-21)" "= ruby 1.8.3 feature" "refm/doc/news/1.8.3.rd")
(find-rurima "=== 2005-05-14" "== 1.8.2 (2004-12-25) -> 1.8.3 (2005-09-21)" "= ruby 1.8.3 feature" "refm/doc/news/1.8.3.rd")
(find-rurima "=== 2005-05-11" "== 1.8.2 (2004-12-25) -> 1.8.3 (2005-09-21)" "= ruby 1.8.3 feature" "refm/doc/news/1.8.3.rd")
(find-rurima "=== 2005-05-11" "== 1.8.2 (2004-12-25) -> 1.8.3 (2005-09-21)" "= ruby 1.8.3 feature" "refm/doc/news/1.8.3.rd")
(find-rurima "=== 2005-05-01" "== 1.8.2 (2004-12-25) -> 1.8.3 (2005-09-21)" "= ruby 1.8.3 feature" "refm/doc/news/1.8.3.rd")
(find-rurima "=== 2005-04-18" "== 1.8.2 (2004-12-25) -> 1.8.3 (2005-09-21)" "= ruby 1.8.3 feature" "refm/doc/news/1.8.3.rd")
(find-rurima "=== 2005-04-10" "== 1.8.2 (2004-12-25) -> 1.8.3 (2005-09-21)" "= ruby 1.8.3 feature" "refm/doc/news/1.8.3.rd")
(find-rurima "=== 2005-04-09" "== 1.8.2 (2004-12-25) -> 1.8.3 (2005-09-21)" "= ruby 1.8.3 feature" "refm/doc/news/1.8.3.rd")
(find-rurima "=== 2005-03-07" "== 1.8.2 (2004-12-25) -> 1.8.3 (2005-09-21)" "= ruby 1.8.3 feature" "refm/doc/news/1.8.3.rd")
(find-rurima "=== 2005-03-06" "== 1.8.2 (2004-12-25) -> 1.8.3 (2005-09-21)" "= ruby 1.8.3 feature" "refm/doc/news/1.8.3.rd")
(find-rurima "=== 2005-02-23" "== 1.8.2 (2004-12-25) -> 1.8.3 (2005-09-21)" "= ruby 1.8.3 feature" "refm/doc/news/1.8.3.rd")
(find-rurima "=== 2005-02-17" "== 1.8.2 (2004-12-25) -> 1.8.3 (2005-09-21)" "= ruby 1.8.3 feature" "refm/doc/news/1.8.3.rd")
(find-rurima "=== 2005-02-17" "== 1.8.2 (2004-12-25) -> 1.8.3 (2005-09-21)" "= ruby 1.8.3 feature" "refm/doc/news/1.8.3.rd")
(find-rurima "=== 2005-02-14" "== 1.8.2 (2004-12-25) -> 1.8.3 (2005-09-21)" "= ruby 1.8.3 feature" "refm/doc/news/1.8.3.rd")
(find-rurima "=== 2005-02-13" "== 1.8.2 (2004-12-25) -> 1.8.3 (2005-09-21)" "= ruby 1.8.3 feature" "refm/doc/news/1.8.3.rd")
(find-rurima "=== 2005-02-12" "== 1.8.2 (2004-12-25) -> 1.8.3 (2005-09-21)" "= ruby 1.8.3 feature" "refm/doc/news/1.8.3.rd")
(find-rurima "=== 2005-02-11" "== 1.8.2 (2004-12-25) -> 1.8.3 (2005-09-21)" "= ruby 1.8.3 feature" "refm/doc/news/1.8.3.rd")
(find-rurima "=== 2005-02-06" "== 1.8.2 (2004-12-25) -> 1.8.3 (2005-09-21)" "= ruby 1.8.3 feature" "refm/doc/news/1.8.3.rd")
(find-rurima "=== 2005-02-04" "== 1.8.2 (2004-12-25) -> 1.8.3 (2005-09-21)" "= ruby 1.8.3 feature" "refm/doc/news/1.8.3.rd")
(find-rurima "=== 2005-02-03" "== 1.8.2 (2004-12-25) -> 1.8.3 (2005-09-21)" "= ruby 1.8.3 feature" "refm/doc/news/1.8.3.rd")
(find-rurima "=== 2005-01-29" "== 1.8.2 (2004-12-25) -> 1.8.3 (2005-09-21)" "= ruby 1.8.3 feature" "refm/doc/news/1.8.3.rd")
(find-rurima "=== 2005-01-26" "== 1.8.2 (2004-12-25) -> 1.8.3 (2005-09-21)" "= ruby 1.8.3 feature" "refm/doc/news/1.8.3.rd")
(find-rurima "=== 2005-01-25" "== 1.8.2 (2004-12-25) -> 1.8.3 (2005-09-21)" "= ruby 1.8.3 feature" "refm/doc/news/1.8.3.rd")
(find-rurima "=== 2005-01-17" "== 1.8.2 (2004-12-25) -> 1.8.3 (2005-09-21)" "= ruby 1.8.3 feature" "refm/doc/news/1.8.3.rd")
(find-rurima "=== 2005-01-15" "== 1.8.2 (2004-12-25) -> 1.8.3 (2005-09-21)" "= ruby 1.8.3 feature" "refm/doc/news/1.8.3.rd")
(find-rurima "=== 2005-01-12" "== 1.8.2 (2004-12-25) -> 1.8.3 (2005-09-21)" "= ruby 1.8.3 feature" "refm/doc/news/1.8.3.rd")
(find-rurima "=== 2005-01-09" "== 1.8.2 (2004-12-25) -> 1.8.3 (2005-09-21)" "= ruby 1.8.3 feature" "refm/doc/news/1.8.3.rd")
(find-rurima "=== 2005-01-05" "== 1.8.2 (2004-12-25) -> 1.8.3 (2005-09-21)" "= ruby 1.8.3 feature" "refm/doc/news/1.8.3.rd")
(find-rurima "=== 2005-01-03" "== 1.8.2 (2004-12-25) -> 1.8.3 (2005-09-21)" "= ruby 1.8.3 feature" "refm/doc/news/1.8.3.rd")
(find-rurima "= Rubyで使われる記号の意味（正規表現の複雑な記号は除く）" "refm/doc/symref.rd")
(find-rurima "===[a:ex] !" "= Rubyで使われる記号の意味（正規表現の複雑な記号は除く）" "refm/doc/symref.rd")
(find-rurima "===[a:q] ?" "= Rubyで使われる記号の意味（正規表現の複雑な記号は除く）" "refm/doc/symref.rd")
(find-rurima "===[a:num] #" "= Rubyで使われる記号の意味（正規表現の複雑な記号は除く）" "refm/doc/symref.rd")
(find-rurima "===[a:per] %" "= Rubyで使われる記号の意味（正規表現の複雑な記号は除く）" "refm/doc/symref.rd")
(find-rurima "===[a:and] &" "= Rubyで使われる記号の意味（正規表現の複雑な記号は除く）" "refm/doc/symref.rd")
(find-rurima "===[a:or] |" "= Rubyで使われる記号の意味（正規表現の複雑な記号は除く）" "refm/doc/symref.rd")
(find-rurima "===[a:plus] +" "= Rubyで使われる記号の意味（正規表現の複雑な記号は除く）" "refm/doc/symref.rd")
(find-rurima "===[a:minus] -" "= Rubyで使われる記号の意味（正規表現の複雑な記号は除く）" "refm/doc/symref.rd")
(find-rurima "===[a:ast] *" "= Rubyで使われる記号の意味（正規表現の複雑な記号は除く）" "refm/doc/symref.rd")
(find-rurima "===[a:slash] /" "= Rubyで使われる記号の意味（正規表現の複雑な記号は除く）" "refm/doc/symref.rd")
(find-rurima "===[a:hat] ^" "= Rubyで使われる記号の意味（正規表現の複雑な記号は除く）" "refm/doc/symref.rd")
(find-rurima "===[a:colon] :" "= Rubyで使われる記号の意味（正規表現の複雑な記号は除く）" "refm/doc/symref.rd")
(find-rurima "===[a:period] ." "= Rubyで使われる記号の意味（正規表現の複雑な記号は除く）" "refm/doc/symref.rd")
(find-rurima "===[a:comma] ," "= Rubyで使われる記号の意味（正規表現の複雑な記号は除く）" "refm/doc/symref.rd")
(find-rurima "===[a:langl] <" "= Rubyで使われる記号の意味（正規表現の複雑な記号は除く）" "refm/doc/symref.rd")
(find-rurima "===[a:rangl] >" "= Rubyで使われる記号の意味（正規表現の複雑な記号は除く）" "refm/doc/symref.rd")
(find-rurima "===[a:eq] =" "= Rubyで使われる記号の意味（正規表現の複雑な記号は除く）" "refm/doc/symref.rd")
(find-rurima "===[a:tilde] ~" "= Rubyで使われる記号の意味（正規表現の複雑な記号は除く）" "refm/doc/symref.rd")
(find-rurima "===[a:dollar] $" "= Rubyで使われる記号の意味（正規表現の複雑な記号は除く）" "refm/doc/symref.rd")
(find-rurima "===[a:at] @" "= Rubyで使われる記号の意味（正規表現の複雑な記号は除く）" "refm/doc/symref.rd")
(find-rurima "===[a:under] _" "= Rubyで使われる記号の意味（正規表現の複雑な記号は除く）" "refm/doc/symref.rd")
(find-rurima "===[a:lbra] {" "= Rubyで使われる記号の意味（正規表現の複雑な記号は除く）" "refm/doc/symref.rd")
(find-rurima "===[a:rbra] }" "= Rubyで使われる記号の意味（正規表現の複雑な記号は除く）" "refm/doc/symref.rd")
(find-rurima "===[a:lbra2] [" "= Rubyで使われる記号の意味（正規表現の複雑な記号は除く）" "refm/doc/symref.rd")
(find-rurima "===[a:rbra2] ]" "= Rubyで使われる記号の意味（正規表現の複雑な記号は除く）" "refm/doc/symref.rd")
(find-rurima "===[a:lbra3] (" "= Rubyで使われる記号の意味（正規表現の複雑な記号は除く）" "refm/doc/symref.rd")
(find-rurima "===[a:rbra3] )" "= Rubyで使われる記号の意味（正規表現の複雑な記号は除く）" "refm/doc/symref.rd")
(find-rurima "===[a:dq] \"" "= Rubyで使われる記号の意味（正規表現の複雑な記号は除く）" "refm/doc/symref.rd")
(find-rurima "===[a:sq] '" "= Rubyで使われる記号の意味（正規表現の複雑な記号は除く）" "refm/doc/symref.rd")
(find-rurima "===[a:ac] `" "= Rubyで使われる記号の意味（正規表現の複雑な記号は除く）" "refm/doc/symref.rd")
(find-rurima "===[a:backslash] \\" "= Rubyで使われる記号の意味（正規表現の複雑な記号は除く）" "refm/doc/symref.rd")
(find-rurima "===[a:semicolon] ;" "= Rubyで使われる記号の意味（正規表現の複雑な記号は除く）" "refm/doc/symref.rd")
(find-rurima "= 配布条件" "refm/doc/license.rd")
(find-rurima "= RD" "refm/old/RD.rd")
(find-rurima "= shim" "refm/old/shim.rd")
(find-rurima "== 背景" "= shim" "refm/old/shim.rd")
(find-rurima "== 目的" "= shim" "refm/old/shim.rd")
(find-rurima "== 名前" "= shim" "refm/old/shim.rd")
(find-rurima "== 方針" "= shim" "refm/old/shim.rd")
(find-rurima "=== 互換レイヤについて" "== 方針" "= shim" "refm/old/shim.rd")
(find-rurima "=== 追加モジュールについて" "== 方針" "= shim" "refm/old/shim.rd")
(find-rurima "== その他" "= shim" "refm/old/shim.rd")
(find-rurima "= 執筆者募集" "refm/old/about.rd")
(find-rurima "== 執筆の心得" "= 執筆者募集" "refm/old/about.rd")
(find-rurima "--- Array#each {|i| ... } " "== 執筆の心得" "= 執筆者募集" "refm/old/about.rd")
(find-rurima "== その他雑多なこと" "= 執筆者募集" "refm/old/about.rd")
(find-rurima "= 機能別索引" "refm/old/reverse-index.rd")
(find-rurima "= Rubyに関する書籍" "refm/old/books.rd")
(find-rurima "= 参考文献・サイト" "refm/old/reference.rd")
(find-rurima "== Ruby入門編" "= 参考文献・サイト" "refm/old/reference.rd")
(find-rurima "== Ruby上級編" "= 参考文献・サイト" "refm/old/reference.rd")
(find-rurima "== 特定カテゴリの解説" "= 参考文献・サイト" "refm/old/reference.rd")
(find-rurima "== プログラム入門編" "= 参考文献・サイト" "refm/old/reference.rd")
(find-rurima "== その他" "= 参考文献・サイト" "refm/old/reference.rd")
(find-rurima "= やること(やるかもしれないこと)" "refm/old/ToDo.rd")
(find-rurima "= (どなたかが)やったこと" "refm/old/ToDo.rd")
(find-rurima "--- void rb_p(VALUE obj)" "refm/capi/src/io.c.rd")
(find-rurima "--- int rb_io_mode_flags(const char *mode)" "refm/capi/src/io.c.rd")
(find-rurima "--- static int rb_io_mode_flags2(int mode)" "refm/capi/src/io.c.rd")
(find-rurima "--- static VALUE pipe_open(char *pname, char *mode)" "refm/capi/src/io.c.rd")
(find-rurima "--- static char *arg_defined(VALUE self, NODE *node, char *buf, char *type)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static void assign(VALUE self, NODE *lhs, VALUE val, int pcall)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE avalue_to_svalue(VALUE v)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE avalue_to_yvalue(VALUE v)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE backtrace(int lev)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE bind_clone(VALUE self)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static void blk_copy_prev(struct BLOCK *block)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static void blk_free(struct BLOCK *data)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static void blk_mark(struct BLOCK *data)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static int blk_orphan(struct BLOCK *data)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE block_pass(VALUE self, NODE *node)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static void bm_mark(struct METHOD *data)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE bmcall(VALUE args, VALUE method)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE call_cfunc(VALUE (*func)(), VALUE recv, int len, int argc, VALUE *argv)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static void call_end_proc(VALUE data)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static void call_trace_func(char *event, NODE *pos, VALUE self, ID id, VALUE klass)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE catch_i(ID tag)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static void catch_timer(int sig)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static NODE *compile(VALUE src, char *file, int line)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static void compile_error(const char *at)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static void copy_fds(fd_set *dst, fd_set *src, int max)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static NODE *copy_node_scope(NODE *node, VALUE rval)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE cvar_cbase(void)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static inline void dvar_asgn(ID id, VALUE value)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static inline void dvar_asgn_curr(ID id, VALUE value)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static void dvar_asgn_internal(ID id, VALUE value, int curr)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE errat_getter(ID id)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static void errat_setter(VALUE val, ID id, VALUE *var)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static void errinfo_setter(VALUE val, ID id, VALUE *var)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static int error_handle(int ex)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static void error_pos(void)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static void error_print(void)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE ev_const_defined(NODE *cref, ID id, VALUE self)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE ev_const_get(NODE *cref, ID id, VALUE self)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE eval(VALUE self, VALUE src, VALUE scope, char *file, int line)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE eval_node(VALUE self, NODE *node)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE eval_under(VALUE under, VALUE self, VALUE src, const char *file, int line)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE eval_under_i(VALUE *args)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE exec_under(VALUE (*func)(), VALUE under, VALUE cbase, void *args)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static int find_bad_fds(fd_set *dst, fd_set *src, int max)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static void frame_dup(struct FRAME *frame)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE get_backtrace(VALUE info)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static int handle_rescue(VALUE self, NODE *node)" "refm/capi/src/eval.c.rd")
(find-rurima "--- void Init_eval(void)" "refm/capi/src/eval.c.rd")
(find-rurima "--- void Init_load(void)" "refm/capi/src/eval.c.rd")
(find-rurima "--- void Init_Proc(void)" "refm/capi/src/eval.c.rd")
(find-rurima "--- void Init_Thread(void)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static int intersect_fds(fd_set *src, fd_set *dst, int max)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static char *is_defined(VALUE self, NODE *node, char *buf)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static void jump_tag_but_local_jump(int state)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static void localjump_error(const char *mesg, VALUE status)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE localjump_exitstatus(VALUE exc)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE make_backtrace(void)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE massign(VALUE self, NODE *node, VALUE val, int pcall)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static int match_fds(fd_set *dst, fd_set *src, int max)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE method_arity(VALUE method)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE method_call(int argc, VALUE *argv, VALUE method)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE method_clone(VALUE self)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE method_eq(VALUE method, VALUE other)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE method_inspect(VALUE method)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE method_proc(VALUE method)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE method_unbind(VALUE obj)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE mnew(VALUE klass, VALUE obj, ID id, VALUE mklass)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE module_setup(VALUE module, NODE *n)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE mproc(void)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE mvalue_to_svalue(VALUE v)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static struct BLOCKTAG *new_blktag(void)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static struct RVarmap *new_dvar(ID id, VALUE value, struct RVarmap *prev)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static void print_undef(VALUE klass, ID id)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE proc_arity(VALUE proc)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE proc_binding(VALUE proc)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE proc_call(VALUE proc, VALUE args)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE proc_eq(VALUE self, VALUE other)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static int proc_get_safe_level(VALUE data)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE proc_invoke(VALUE proc, VALUE args, int pcall, VALUE self)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE proc_new(VALUE klass)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE proc_s_new(int argc, VALUE *argv, VALUE klass)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static void proc_save_safe_level(VALUE data)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static void proc_set_safe_level(VALUE data)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE proc_to_proc(VALUE proc)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE proc_to_s(VALUE self, VALUE other)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE proc_yield(VALUE proc, VALUE args)" "refm/capi/src/eval.c.rd")
(find-rurima "--- void rb_add_method(VALUE klass, ID mid, NODE *node, int noex)" "refm/capi/src/eval.c.rd")
(find-rurima "--- void rb_alias(VALUE klass, ID name, ID def)" "refm/capi/src/eval.c.rd")
(find-rurima "--- VALUE rb_apply(VALUE recv, ID mid, VALUE args)" "refm/capi/src/eval.c.rd")
(find-rurima "--- void rb_attr(VALUE klass, ID id, int read, int write, int ex)" "refm/capi/src/eval.c.rd")
(find-rurima "--- void rb_backtrace(void)" "refm/capi/src/eval.c.rd")
(find-rurima "--- int rb_block_given_p(void)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_call(VALUE klass, VALUE recv, ID mid, int argc, const VALUE *argv, int scope)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_call0(VALUE klass, VALUE recv, ID id, int argc, VALUE *argv, NODE *body, int nosuper)" "refm/capi/src/eval.c.rd")
(find-rurima "--- VALUE rb_call_super(int argc, const VALUE *argv)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_callcc(VALUE self)" "refm/capi/src/eval.c.rd")
(find-rurima "--- VALUE rb_catch(const char *tag, VALUE (*proc)(), VALUE data)" "refm/capi/src/eval.c.rd")
(find-rurima "--- void rb_check_safe_str(VALUE x)" "refm/capi/src/eval.c.rd")
(find-rurima "--- void rb_clear_cache(void)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static void rb_clear_cache_by_class(VALUE klass)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static void rb_clear_cache_by_id(ID id)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_cont_call(int argc, VALUE *argv, VALUE cont)" "refm/capi/src/eval.c.rd")
(find-rurima "--- void rb_disable_super(VALUE klass, const char *name)" "refm/capi/src/eval.c.rd")
(find-rurima "--- VALUE rb_dvar_curr(ID id)" "refm/capi/src/eval.c.rd")
(find-rurima "--- VALUE rb_dvar_defined(ID id)" "refm/capi/src/eval.c.rd")
(find-rurima "--- void rb_dvar_push(ID id, VALUE value)" "refm/capi/src/eval.c.rd")
(find-rurima "--- VALUE rb_dvar_ref(ID id)" "refm/capi/src/eval.c.rd")
(find-rurima "--- void rb_enable_super(VALUE klass, const char *name)" "refm/capi/src/eval.c.rd")
(find-rurima "--- VALUE rb_ensure(VALUE (*body)(), VALUE data1, VALUE (*ensure)(), VALUE data2)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_eval(VALUE self, NODE *n)" "refm/capi/src/eval.c.rd")
(find-rurima "--- VALUE rb_eval_cmd(VALUE cmd, VALUE arg, int tcheck)" "refm/capi/src/eval.c.rd")
(find-rurima "--- VALUE rb_eval_string(const char *str)" "refm/capi/src/eval.c.rd")
(find-rurima "--- VALUE rb_eval_string_protect(const char *str, int *state)" "refm/capi/src/eval.c.rd")
(find-rurima "--- VALUE rb_eval_string_wrap(const char *str, int *state)" "refm/capi/src/eval.c.rd")
(find-rurima "--- void rb_exc_fatal(VALUE err)" "refm/capi/src/eval.c.rd")
(find-rurima "--- void rb_exc_raise(VALUE err)" "refm/capi/src/eval.c.rd")
(find-rurima "--- void rb_exec_end_proc(void)" "refm/capi/src/eval.c.rd")
(find-rurima "--- void rb_exit(int status)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static void rb_export_method(VALUE klass, ID name, ID noex)" "refm/capi/src/eval.c.rd")
(find-rurima "--- void rb_extend_object(VALUE obj, VALUE module)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_f_abort(int argc, VALUE *argv)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_f_at_exit(void)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_f_binding(VALUE self)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_f_block_given_p(void)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_f_caller(int argc, VALUE *argv)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_f_catch(VALUE dmy, VALUE tag)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static void rb_f_END(void)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_f_eval(int argc, VALUE *argv, VALUE self)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_f_exit(int argc, VALUE *argv, VALUE obj)" "refm/capi/src/eval.c.rd")
(find-rurima "--- VALUE rb_f_lambda(void)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_f_load(int argc, VALUE *argv)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_f_local_variables(void)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_f_loop(void)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_f_missing(int argc, VALUE *argv, VALUE obj)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_f_raise(int argc, VALUE *argv)" "refm/capi/src/eval.c.rd")
(find-rurima "--- VALUE rb_f_require(VALUE obj, VALUE fname)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_f_send(int argc, VALUE *argv, VALUE recv)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_f_throw(int argc, VALUE *argv)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static int rb_feature_p(const char *feature, int wait)" "refm/capi/src/eval.c.rd")
(find-rurima "--- ID rb_frame_last_func(void)" "refm/capi/src/eval.c.rd")
(find-rurima "--- void rb_frozen_class_p(VALUE klass)" "refm/capi/src/eval.c.rd")
(find-rurima "--- VALUE rb_funcall(VALUE recv, ID name, int nargs, ...)" "refm/capi/src/eval.c.rd")
(find-rurima "--- VALUE rb_funcall2(VALUE recv, ID name, int nargs, VALUE *args)" "refm/capi/src/eval.c.rd")
(find-rurima "--- VALUE rb_funcall3(VALUE recv, ID mid, int argc, const VALUE *argv)" "refm/capi/src/eval.c.rd")
(find-rurima "--- void rb_gc_mark_threads(void)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static NODE *rb_get_method_body(VALUE *klassp, ID *idp, int *noexp)" "refm/capi/src/eval.c.rd")
(find-rurima "--- void rb_interrupt(void)" "refm/capi/src/eval.c.rd")
(find-rurima "--- void rb_iter_break(void)" "refm/capi/src/eval.c.rd")
(find-rurima "--- VALUE rb_iterate(VALUE (*call_proc)(), VALUE date1, VALUE (*block_proc)(), date2)" "refm/capi/src/eval.c.rd")
(find-rurima "--- int rb_iterator_p()" "refm/capi/src/eval.c.rd")
(find-rurima "--- void rb_jump_tag(int tag)" "refm/capi/src/eval.c.rd")
(find-rurima "--- void rb_load(VALUE fname, int wrap)" "refm/capi/src/eval.c.rd")
(find-rurima "--- void rb_load_protect(VALUE fname, int wrap, int *state)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static void rb_longjmp(int tag, VALUE mesg)" "refm/capi/src/eval.c.rd")
(find-rurima "--- void rb_mark_end_proc(void)" "refm/capi/src/eval.c.rd")
(find-rurima "--- int rb_method_boundp(VALUE klass, ID id, int ex)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_mod_alias_method(VALUE mod, VALUE newname, VALUE oldname)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_mod_append_features(VALUE module, VALUE include)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_mod_define_method(int argc, VALUE *argv, VALUE mod)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_mod_extend_object(VALUE mod, VALUE obj)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_mod_include(int argc, VALUE *argv, VALUE module)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_mod_method(VALUE mod, VALUE vid)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_mod_method_defined(VALUE mod, VALUE mid)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_mod_modfunc(int argc, VALUE *argv, VALUE module)" "refm/capi/src/eval.c.rd")
(find-rurima "--- VALUE rb_mod_module_eval(int argc, VALUE *argv, VALUE mod)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_mod_nesting(void)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_mod_private(int argc, VALUE *argv, VALUE module)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_mod_private_method(int argc, VALUE *argv, VALUE obj)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_mod_protected(int argc, VALUE *argv, VALUE module)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_mod_public(int argc, VALUE *argv, VALUE module)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_mod_public_method(int argc, VALUE *argv, VALUE obj)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_mod_remove_method(VALUE mod, VALUE name)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_mod_s_constants(void)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_mod_undef_method(VALUE mod, VALUE name)" "refm/capi/src/eval.c.rd")
(find-rurima "--- void rb_obj_call_init(VALUE obj, int argc, VALUE *argv)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_obj_extend(int argc, VALUE *argv, VALUE obj)" "refm/capi/src/eval.c.rd")
(find-rurima "--- VALUE rb_obj_instance_eval(int argc, VALUE *argv, VALUE self)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_obj_is_block(VALUE block)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_obj_is_proc(VALUE proc)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_obj_method(VALUE obj, VALUE vid)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_obj_respond_to(int argc, VALUE *argv, VALUE obj)" "refm/capi/src/eval.c.rd")
(find-rurima "--- VALUE rb_proc_new(func, val)" "refm/capi/src/eval.c.rd")
(find-rurima "--- VALUE rb_protect(VALUE (*proc)(), VALUE data, int *state)" "refm/capi/src/eval.c.rd")
(find-rurima "--- void rb_provide(const char *feature)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static void rb_provide_feature(VALUE feature)" "refm/capi/src/eval.c.rd")
(find-rurima "--- int rb_provided(const char *feature)" "refm/capi/src/eval.c.rd")
(find-rurima "--- void rb_remove_method(VALUE klass, const char *name)" "refm/capi/src/eval.c.rd")
(find-rurima "--- VALUE rb_require(const char *fname)" "refm/capi/src/eval.c.rd")
(find-rurima "--- VALUE rb_rescue(VALUE (*b_proc)(), VALUE data1, VALUE (*r_proc)(), VALUE data2)" "refm/capi/src/eval.c.rd")
(find-rurima "--- VALUE rb_rescue2(VALUE (*b_proc)(), VALUE data1, VALUE (*r_proc)(), VALUE data2, ...)" "refm/capi/src/eval.c.rd")
(find-rurima "--- int rb_respond_to(VALUE obj, ID id)" "refm/capi/src/eval.c.rd")
(find-rurima "--- void rb_secure(int level)" "refm/capi/src/eval.c.rd")
(find-rurima "--- void rb_set_end_proc(void (*func)(VALUE), VALUE data)" "refm/capi/src/eval.c.rd")
(find-rurima "--- void rb_set_safe_level(int level)" "refm/capi/src/eval.c.rd")
(find-rurima "--- VALUE *rb_svar(int cnt)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_thread_abort_exc(VALUE thread)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_thread_abort_exc_set(VALUE thread, VALUE val)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_thread_alive_p(VALUE thread)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static rb_thread_t rb_thread_alloc(VALUE klass)" "refm/capi/src/eval.c.rd")
(find-rurima "--- int rb_thread_alone(void)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_thread_aref(VALUE thread, VALUE id)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_thread_aset(VALUE thread, VALUE id, VALUE val)" "refm/capi/src/eval.c.rd")
(find-rurima "--- void rb_thread_atfork(void)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static rb_thread_t rb_thread_check(VALUE data)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static void rb_thread_cleanup(void)" "refm/capi/src/eval.c.rd")
(find-rurima "--- VALUE rb_thread_create(fn, arg)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_thread_critical_get(void)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_thread_critical_set(VALUE obj, VALUE val)" "refm/capi/src/eval.c.rd")
(find-rurima "--- VALUE rb_thread_current(void)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static int rb_thread_dead(rb_thread_t th)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static void rb_thread_deadlock(void)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_thread_exit(void)" "refm/capi/src/eval.c.rd")
(find-rurima "--- void rb_thread_fd_close(int fd)" "refm/capi/src/eval.c.rd")
(find-rurima "--- int rb_thread_fd_writable(int fd)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_thread_initialize(VALUE thread, VALUE args)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_thread_inspect(VALUE thread)" "refm/capi/src/eval.c.rd")
(find-rurima "--- void rb_thread_interrupt(void)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static int rb_thread_join(rb_thread_t th, double limit)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_thread_join_m(int argc, VALUE *argv, VALUE thread)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_thread_key_p(VALUE thread, VALUE id)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_thread_keys(VALUE thread)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_thread_kill(VALUE thread)" "refm/capi/src/eval.c.rd")
(find-rurima "--- VALUE rb_thread_list(void)" "refm/capi/src/eval.c.rd")
(find-rurima "--- VALUE rb_thread_local_aref(VALUE thread, ID id)" "refm/capi/src/eval.c.rd")
(find-rurima "--- VALUE rb_thread_local_aset(VALUE thread, ID id, VALUE val)" "refm/capi/src/eval.c.rd")
(find-rurima "--- VALUE rb_thread_main(void)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_thread_pass(void)" "refm/capi/src/eval.c.rd")
(find-rurima "--- void rb_thread_polling(void)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_thread_priority(VALUE thread)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_thread_priority_set(VALUE thread, VALUE prio)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_thread_raise(int argc, VALUE *argv, rb_thread_t th)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_thread_raise_m(int argc, VALUE *argv, VALUE thread)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static void rb_thread_ready(rb_thread_t th)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static void rb_thread_remove(rb_thread_t th)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static void rb_thread_restore_context(rb_thread_t th, int exit)" "refm/capi/src/eval.c.rd")
(find-rurima "--- VALUE rb_thread_run(VALUE thread)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_thread_s_abort_exc(void)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_thread_s_abort_exc_set(VALUE self, VALUE val)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_thread_s_kill(VALUE obj, VALUE th)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_thread_s_new(int argc, VALUE *argv, VALUE klass)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_thread_safe_level(VALUE thread)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static void rb_thread_save_context(rb_thread_t th)" "refm/capi/src/eval.c.rd")
(find-rurima "--- void rb_thread_schedule(void)" "refm/capi/src/eval.c.rd")
(find-rurima "--- int rb_thread_select(int max, fd_set *read, fd_set *write, fd_set *except, struct timeval *timeout)" "refm/capi/src/eval.c.rd")
(find-rurima "--- void rb_thread_signal_raise(char *sig)" "refm/capi/src/eval.c.rd")
(find-rurima "--- void rb_thread_sleep(int sec)" "refm/capi/src/eval.c.rd")
(find-rurima "--- void rb_thread_sleep_forever(void)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_thread_start(VALUE klass, VALUE args)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_thread_start_0(VALUE (*fn)(), void *arg, rb_thread_t th_arg)" "refm/capi/src/eval.c.rd")
(find-rurima "--- void rb_thread_start_timer(void)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_thread_status(VALUE thread)" "refm/capi/src/eval.c.rd")
(find-rurima "--- VALUE rb_thread_stop(void)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_thread_stop_p(VALUE thread)" "refm/capi/src/eval.c.rd")
(find-rurima "--- void rb_thread_stop_timer(void)" "refm/capi/src/eval.c.rd")
(find-rurima "--- void rb_thread_trap_eval(VALUE cmd, int sig)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_thread_value(VALUE thread)" "refm/capi/src/eval.c.rd")
(find-rurima "--- void rb_thread_wait_fd(int fd)" "refm/capi/src/eval.c.rd")
(find-rurima "--- void rb_thread_wait_for(struct timeval time)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static void rb_thread_wait_other_threads(void)" "refm/capi/src/eval.c.rd")
(find-rurima "--- VALUE rb_thread_wakeup(VALUE thread)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_thread_yield(VALUE arg, rb_thread_t th)" "refm/capi/src/eval.c.rd")
(find-rurima "--- void rb_throw(const char *tag, VALUE val)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_trap_eval(VALUE cmd, int sig)" "refm/capi/src/eval.c.rd")
(find-rurima "--- void rb_undef(VALUE klass, ID id)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_undefined(VALUE obj, ID id, int argc, VALUE *argv, int call_status)" "refm/capi/src/eval.c.rd")
(find-rurima "--- VALUE rb_with_disable_interrupt(VALUE (*proc)(), data)" "refm/capi/src/eval.c.rd")
(find-rurima "--- VALUE rb_yield(VALUE val)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE rb_yield_0(VALUE val, VALUE self, VALUE klass, int pcall)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static void remove_method(VALUE klass, ID mid)" "refm/capi/src/eval.c.rd")
(find-rurima "--- void ruby_finalize(void)" "refm/capi/src/eval.c.rd")
(find-rurima "--- void ruby_init(void)" "refm/capi/src/eval.c.rd")
(find-rurima "--- void ruby_options(int argc, char **argv)" "refm/capi/src/eval.c.rd")
(find-rurima "--- void ruby_run(void)" "refm/capi/src/eval.c.rd")
(find-rurima "--- void ruby_stop(int ex)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE safe_getter(void)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static void safe_setter(VALUE val)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static void scope_dup(struct SCOPE *scope)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static NODE *search_method(VALUE klass, ID id, VALUE *origin)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static void secure_visibility(VALUE self)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static void set_backtrace(VALUE info, VALUE bt)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static void set_method_visibility(VALUE self, int argc, VALUE *argv, ID ex)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE set_trace_func(VALUE obj, VALUE trace)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE specific_eval(int argc, VALUE *argv, VALUE klass, VALUE self)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static void stack_check(void)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static void stack_extend(rb_thread_t th, int exit)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE superclass(VALUE self, NODE *node)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE svalue_to_avalue(VALUE v)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE svalue_to_mvalue(VALUE v)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static void terminate_process(int status, const char *mesg, int mlen)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE thgroup_add(VALUE group, VALUE thread)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE thgroup_list(VALUE group)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE thgroup_s_alloc(VALUE klass)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static void thread_free(rb_thread_t th)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static int thread_keys_i(ID key, VALUE value, VALUE ary)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static void thread_mark(rb_thread_t th)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static const char *thread_status_name(enum thread_status status)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static int thread_switch(int n)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static double timeofday(void)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE top_include(int argc, VALUE *argv)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE top_private(int argc, VALUE *argv)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE top_public(int argc, VALUE *argv)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE umcall(VALUE args, VALUE method)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE umethod_bind(VALUE method, VALUE recv)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE umethod_call(int argc, VALUE *argv, VALUE method)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE umethod_proc(VALUE method)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE umethod_unbind(VALUE obj)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE yield_under(VALUE under, VALUE self)" "refm/capi/src/eval.c.rd")
(find-rurima "--- static VALUE yield_under_i(VALUE self)" "refm/capi/src/eval.c.rd")
(find-rurima "--- MACRO type* ALLOC(type)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO type* ALLOC_N(type, n)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO type* ALLOCA_N(type, n)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO int BUILTIN_TYPE(VALUE obj)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- void Check_SafeStr(VALUE v)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- void Check_Type(VALUE val, int typeflag)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO VALUE CHR2FIX(char x)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO VALUE CLASS_OF(VALUE obj)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO void CLONESETUP(VALUE clone, VALUE obj)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO void Data_Get_Struct(VALUE obj, type, type *svar)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO VALUE Data_Make_Struct(VALUE klass, type, RUBY_DATA_FUNC mark, RUBY_DATA_FUNC free, type *svar)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO void *DATA_PTR(VALUE dta)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO VALUE Data_Wrap_Struct(VALUE klass, RUBY_DATA_FUNC mark, RUBY_DATA_FUNC free, void *sval)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO void DUPSETUP(dup, obj)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO int FIX2INT(VALUE x)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO long FIX2LONG(VALUE x)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO unsigned int FIX2UINT(VALUE x)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO unsigned long FIX2ULONG(VALUE x)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO int FIXABLE(long f)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO long FIXNUM_MAX" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO long FIXNUM_MIN" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO int FIXNUM_P(VALUE obj)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO int FL_ABLE(VALUE x)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO void FL_REVERSE(VALUE x, int f)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO void FL_SET(VALUE x, int f)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO int FL_TEST(VALUE x, int f)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO void FL_UNSET(VALUE x, int f)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO VALUE ID2SYM(ID id)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO int IMMEDIATE_P(VALUE obj)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO VALUE INT2FIX(int i)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO VALUE INT2NUM(int i)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO int ISALNUM(char c)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO int ISALPHA(char c)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO int ISASCII(char c)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO int ISDIGIT(char c)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO int ISLOWER(char c)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO int ISPRINT(char c)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO int ISSPACE(char c)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO int ISUPPER(char c)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO int ISXDIGIT(char c)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO VALUE LL2NUM(long long v)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO VALUE LONG2FIX(long i)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO VALUE LONG2NUM(long v)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO int MEMCMP(p1, p2, type, n)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO void MEMCPY(p1, p2, type, n)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO void MEMMOVE(p1, p2, type, n)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO void MEMZERO(p, type, n)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO int NEGFIXABLE(long f)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO void NEWOBJ(obj, int typeflag)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO int NIL_P(VALUE obj)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO char NUM2CHR(VALUE x)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO double NUM2DBL(VALUE x)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO int NUM2INT(VALUE x)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO long NUM2LONG(VALUE x)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO unsigned int NUM2UINT(VALUE x)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO unsigned long NUM2ULONG(VLAUE x)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO void OBJ_FREEZE(VALUE x)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO int OBJ_FROZEN(VALUE x)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO void OBJ_INFECT(VALUE dest, VALUE src)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO void OBJ_TAINT(VALUE x)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO int OBJ_TAINTED(VALUE x)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO void OBJSETUP(obj, VALUE klass, int typeflag)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO int POSFIXABLE(long f)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO struct RArray *RARRAY(VALUE obj)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- VALUE rb_fix_new(long v)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- VALUE rb_int_new(long v)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- int rb_safe_level(void)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- VALUE rb_uint_new(unsigned int v)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO struct RBasic *RBASIC(VALUE obj)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO struct RBignum *RBIGNUM(VALUE obj)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO struct RClass *RCLASS(VALUE obj)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO struct RData *RDATA(VALUE obj)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO type* REALLOC_N(var, type, n)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO struct RFile *RFILE(VALUE obj)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO struct RFloat *RFLOAT(VALUE obj)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO struct RHash *RHASH(VALUE obj)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO struct RClass *RMODULE(VALUE obj)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO struct RObject *ROBJECT(VALUE obj)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO struct RRegexp *RREGEXP(VALUE obj)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO struct RString *RSTRING(VALUE obj)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO struct RStruct *RSTRUCT(VALUE obj)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO int RTEST(VALUE obj)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO RUBY_DATA_FUNC(func)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO RUBY_METHOD_FUNC(func)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO SafeStringValue(v)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO int SPECIAL_CONST_P(VALUE obj)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO char *STR2CSTR(VALUE str)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO void StringValue(VALUE val)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO char *StringValuePtr(VALUE val)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO int SYM2ID(VALUE symbol)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO int SYMBOL_P(VALUE obj)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO int TYPE(VALUE obj)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO VALUE UINT2NUM(unsigned int i)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO VALUE ULL2NUM(unsigned long long n)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- MACRO VALUE ULONG2NUM(unsigned long n)" "refm/capi/src/ruby.h.rd")
(find-rurima "--- static VALUE boot_defclass(char *name, VALUE super)" "refm/capi/src/object.c.rd")
(find-rurima "--- static VALUE convert_type(VALUE val, const char *tname, const char *method, int raise)" "refm/capi/src/object.c.rd")
(find-rurima "--- static VALUE false_and(VALUE obj, VALUE obj2)" "refm/capi/src/object.c.rd")
(find-rurima "--- static VALUE false_or(VALUE obj, VALUE obj2)" "refm/capi/src/object.c.rd")
(find-rurima "--- static VALUE false_to_s(VALUE obj)" "refm/capi/src/object.c.rd")
(find-rurima "--- static VALUE false_xor(VALUE obj, VALUE obj2)" "refm/capi/src/object.c.rd")
(find-rurima "--- static int inspect_i(ID id, VALUE value, VALUE str)" "refm/capi/src/object.c.rd")
(find-rurima "--- static VALUE inspect_obj(VALUE obj, VALUE str)" "refm/capi/src/object.c.rd")
(find-rurima "--- static VALUE main_to_s(VALUE obj)" "refm/capi/src/object.c.rd")
(find-rurima "--- static VALUE nil_inspect(VALUE obj)" "refm/capi/src/object.c.rd")
(find-rurima "--- static VALUE nil_plus(VALUE x, VALUE y)" "refm/capi/src/object.c.rd")
(find-rurima "--- static VALUE nil_to_a(VALUE obj)" "refm/capi/src/object.c.rd")
(find-rurima "--- static VALUE nil_to_f(VALUE obj)" "refm/capi/src/object.c.rd")
(find-rurima "--- static VALUE nil_to_i(VALUE obj)" "refm/capi/src/object.c.rd")
(find-rurima "--- static VALUE nil_to_s(VALUE obj)" "refm/capi/src/object.c.rd")
(find-rurima "--- static VALUE rb_any_to_a(VALUE obj)" "refm/capi/src/object.c.rd")
(find-rurima "--- VALUE rb_any_to_s(VALUE obj)" "refm/capi/src/object.c.rd")
(find-rurima "--- VALUE rb_Array(VALUE obj)" "refm/capi/src/object.c.rd")
(find-rurima "--- VALUE rb_check_convert_type(VALUE val, int type, const char *tname, const char *method)" "refm/capi/src/object.c.rd")
(find-rurima "--- static VALUE rb_class_allocate_instance(VALUE klass)" "refm/capi/src/object.c.rd")
(find-rurima "--- static VALUE rb_class_initialize(int argc, VALUE *argv, VALUE klass)" "refm/capi/src/object.c.rd")
(find-rurima "--- VALUE rb_class_new_instance(int argc, VALUE *argv, VALUE klass)" "refm/capi/src/object.c.rd")
(find-rurima "--- VALUE rb_class_real(VALUE cl)" "refm/capi/src/object.c.rd")
(find-rurima "--- static VALUE rb_class_s_new(int argc, VALUE *argv)" "refm/capi/src/object.c.rd")
(find-rurima "--- static VALUE rb_class_superclass(VALUE klass)" "refm/capi/src/object.c.rd")
(find-rurima "--- VALUE rb_convert_type(VALUE val, int type, const char *tname, const char *method)" "refm/capi/src/object.c.rd")
(find-rurima "--- double rb_cstr_to_dbl(const char *p, int badcheck)" "refm/capi/src/object.c.rd")
(find-rurima "--- VALUE rb_eql(VALUE obj1, VALUE obj2)" "refm/capi/src/object.c.rd")
(find-rurima "--- VALUE rb_equal(VALUE obj1, VALUE obj2)" "refm/capi/src/object.c.rd")
(find-rurima "--- static VALUE rb_f_array(VALUE obj, VALUE arg)" "refm/capi/src/object.c.rd")
(find-rurima "--- static VALUE rb_f_float(VALUE obj, VALUE arg)" "refm/capi/src/object.c.rd")
(find-rurima "--- static VALUE rb_f_integer(VALUE obj, VALUE arg)" "refm/capi/src/object.c.rd")
(find-rurima "--- static VALUE rb_f_string(VALUE obj, VALUE arg)" "refm/capi/src/object.c.rd")
(find-rurima "--- static VALUE rb_false(VALUE obj)" "refm/capi/src/object.c.rd")
(find-rurima "--- VALUE rb_Float(VALUE val)" "refm/capi/src/object.c.rd")
(find-rurima "--- VALUE rb_inspect(VALUE obj)" "refm/capi/src/object.c.rd")
(find-rurima "--- VALUE rb_Integer(VALUE obj)" "refm/capi/src/object.c.rd")
(find-rurima "--- static VALUE rb_mod_attr(int argc, VALUE *argv, VALUE klass)" "refm/capi/src/object.c.rd")
(find-rurima "--- static VALUE rb_mod_attr_accessor(int argc, VALUE *argv, VALUE klass)" "refm/capi/src/object.c.rd")
(find-rurima "--- static VALUE rb_mod_attr_reader(int argc, VALUE *argv, VALUE klass)" "refm/capi/src/object.c.rd")
(find-rurima "--- static VALUE rb_mod_attr_writer(int argc, VALUE *argv, VALUE klass)" "refm/capi/src/object.c.rd")
(find-rurima "--- static VALUE rb_mod_cmp(VALUE mod, VALUE arg)" "refm/capi/src/object.c.rd")
(find-rurima "--- static VALUE rb_mod_const_defined(VALUE mod, VALUE name)" "refm/capi/src/object.c.rd")
(find-rurima "--- static VALUE rb_mod_const_get(VALUE mod, VALUE name)" "refm/capi/src/object.c.rd")
(find-rurima "--- static VALUE rb_mod_const_set(VALUE mod, VALUE name, VALUE value)" "refm/capi/src/object.c.rd")
(find-rurima "--- static VALUE rb_mod_eqq(VALUE mod, VALUE arg)" "refm/capi/src/object.c.rd")
(find-rurima "--- static VALUE rb_mod_ge(VALUE mod, VALUE arg)" "refm/capi/src/object.c.rd")
(find-rurima "--- static VALUE rb_mod_gt(VALUE mod, VALUE arg)" "refm/capi/src/object.c.rd")
(find-rurima "--- static VALUE rb_mod_initialize(VALUE module)" "refm/capi/src/object.c.rd")
(find-rurima "--- static VALUE rb_mod_le(VALUE mod, VALUE arg)" "refm/capi/src/object.c.rd")
(find-rurima "--- static VALUE rb_mod_lt(VALUE mod, VALUE arg)" "refm/capi/src/object.c.rd")
(find-rurima "--- static VALUE rb_mod_to_s(VALUE klass)" "refm/capi/src/object.c.rd")
(find-rurima "--- static VALUE rb_module_s_alloc(VALUE klass)" "refm/capi/src/object.c.rd")
(find-rurima "--- double rb_num2dbl(VALUE val)" "refm/capi/src/object.c.rd")
(find-rurima "--- VALUE rb_obj_alloc(VALUE klass)" "refm/capi/src/object.c.rd")
(find-rurima "--- VALUE rb_obj_class(VALUE obj)" "refm/capi/src/object.c.rd")
(find-rurima "--- VALUE rb_obj_clone(VALUE obj)" "refm/capi/src/object.c.rd")
(find-rurima "--- static VALUE rb_obj_dummy(void)" "refm/capi/src/object.c.rd")
(find-rurima "--- VALUE rb_obj_dup(VALUE obj)" "refm/capi/src/object.c.rd")
(find-rurima "--- static VALUE rb_obj_equal(VALUE obj1, VALUE obj2)" "refm/capi/src/object.c.rd")
(find-rurima "--- VALUE rb_obj_freeze(VALUE obj)" "refm/capi/src/object.c.rd")
(find-rurima "--- VALUE rb_obj_frozen_p(VALUE obj)" "refm/capi/src/object.c.rd")
(find-rurima "--- VALUE rb_obj_id(VALUE obj)" "refm/capi/src/object.c.rd")
(find-rurima "--- static VALUE rb_obj_inspect(VALUE obj)" "refm/capi/src/object.c.rd")
(find-rurima "--- VALUE rb_obj_is_instance_of(VALUE obj, VALUE klass)" "refm/capi/src/object.c.rd")
(find-rurima "--- VALUE rb_obj_is_kind_of(VALUE obj, VALUE klass)" "refm/capi/src/object.c.rd")
(find-rurima "--- static VALUE rb_obj_methods(VALUE obj)" "refm/capi/src/object.c.rd")
(find-rurima "--- static VALUE rb_obj_private_methods(VALUE obj)" "refm/capi/src/object.c.rd")
(find-rurima "--- static VALUE rb_obj_protected_methods(VALUE obj)" "refm/capi/src/object.c.rd")
(find-rurima "--- VALUE rb_obj_taint(VALUE obj)" "refm/capi/src/object.c.rd")
(find-rurima "--- VALUE rb_obj_tainted(VALUE obj)" "refm/capi/src/object.c.rd")
(find-rurima "--- VALUE rb_obj_untaint(VALUE obj)" "refm/capi/src/object.c.rd")
(find-rurima "--- char *rb_str2cstr(VALUE str, int *len)" "refm/capi/src/object.c.rd")
(find-rurima "--- double rb_str_to_dbl(VALUE str, int badcheck)" "refm/capi/src/object.c.rd")
(find-rurima "--- VALUE rb_String(VALUE val)" "refm/capi/src/object.c.rd")
(find-rurima "--- VALUE rb_to_id(VALUE name)" "refm/capi/src/object.c.rd")
(find-rurima "--- VALUE rb_to_int(VALUE val)" "refm/capi/src/object.c.rd")
(find-rurima "--- static VALUE rb_to_integer(VALUE val, char *method)" "refm/capi/src/object.c.rd")
(find-rurima "--- static VALUE rb_true(VALUE obj)" "refm/capi/src/object.c.rd")
(find-rurima "--- static VALUE sym_inspect(VALUE sym)" "refm/capi/src/object.c.rd")
(find-rurima "--- static VALUE sym_intern(VALUE sym)" "refm/capi/src/object.c.rd")
(find-rurima "--- static VALUE sym_to_i(VALUE sym)" "refm/capi/src/object.c.rd")
(find-rurima "--- static VALUE sym_to_s(VALUE sym)" "refm/capi/src/object.c.rd")
(find-rurima "--- static VALUE true_and(VALUE obj, VALUE obj2)" "refm/capi/src/object.c.rd")
(find-rurima "--- static VALUE true_or(VALUE obj, VALUE obj2)" "refm/capi/src/object.c.rd")
(find-rurima "--- static VALUE true_to_s(VALUE obj)" "refm/capi/src/object.c.rd")
(find-rurima "--- static VALUE true_xor(VALUE obj, VALUE obj2)" "refm/capi/src/object.c.rd")
(find-rurima "--- static int delete_never(char *key, char *value, char *never)" "refm/capi/src/st.c.rd")
(find-rurima "--- static int new_size(int size)" "refm/capi/src/st.c.rd")
(find-rurima "--- static int numcmp(long x, long y)" "refm/capi/src/st.c.rd")
(find-rurima "--- static int numhash(long n)" "refm/capi/src/st.c.rd")
(find-rurima "--- static void rehash(register st_table *table)" "refm/capi/src/st.c.rd")
(find-rurima "--- void st_add_direct(st_table *table, char *key, char *value)" "refm/capi/src/st.c.rd")
(find-rurima "--- void st_cleanup_safe(st_table *table, char *never)" "refm/capi/src/st.c.rd")
(find-rurima "--- st_table *st_copy(st_table *old_table)" "refm/capi/src/st.c.rd")
(find-rurima "--- int st_delete(register st_table *table, register char **key, char **value)" "refm/capi/src/st.c.rd")
(find-rurima "--- int st_delete_safe(register st_table *table, register char **key, char **value, char *never)" "refm/capi/src/st.c.rd")
(find-rurima "--- void st_foreach(st_table *table, enum st_retval (*func)(), char *arg)" "refm/capi/src/st.c.rd")
(find-rurima "--- void st_free_table(st_table *table)" "refm/capi/src/st.c.rd")
(find-rurima "--- st_table *st_init_numtable(void)" "refm/capi/src/st.c.rd")
(find-rurima "--- st_table *st_init_numtable_with_size(int size)" "refm/capi/src/st.c.rd")
(find-rurima "--- st_table *st_init_strtable(void)" "refm/capi/src/st.c.rd")
(find-rurima "--- st_table *st_init_strtable_with_size(int size)" "refm/capi/src/st.c.rd")
(find-rurima "--- st_table *st_init_table(struct st_hash_type *type)" "refm/capi/src/st.c.rd")
(find-rurima "--- st_table *st_init_table_with_size(struct st_hash_type *type, int size)" "refm/capi/src/st.c.rd")
(find-rurima "--- int st_insert(register st_table *table, register char *key, char *value)" "refm/capi/src/st.c.rd")
(find-rurima "--- int st_lookup(st_table *table, register char *key, char **value)" "refm/capi/src/st.c.rd")
(find-rurima "--- static void stat_col(void)" "refm/capi/src/st.c.rd")
(find-rurima "--- static int strhash(register char *string)" "refm/capi/src/st.c.rd")
(find-rurima "--- static NODE *arg_add(NODE *node1, NODE *node2)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static void arg_ambiguous(void)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static NODE *arg_blk_pass(NODE *node1, NODE *node2)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static NODE *arg_concat(NODE *node1, NODE *node2)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static NODE *arg_prepend(NODE *node1, NODE *node2)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static NODE *aryset(NODE *recv, NODE *idx)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static int assign_in_cond(NODE *node)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static NODE *assignable(ID id, NODE *val)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static NODE *attrset(NODE *recv, ID id)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static NODE *block_append(NODE *head, NODE *tail)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static NODE *call_op(NODE *recv, ID id, int narg, NODE *arg1)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static NODE *cond(NODE *node)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static NODE *cond0(NODE *node)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static int dyna_in_block(void)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static void dyna_pop(struct RVarmap *vars)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static struct RVarmap *dyna_push(void)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static int e_option_supplied(void)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static void fixpos(NODE *node, NODE *orig)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static NODE *gettable(ID id)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static int here_document(NODE *here)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static int heredoc_identifier(void)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static void heredoc_restore(NODE *here)" "refm/capi/src/parse.y.rd")
(find-rurima "--- void Init_sym(void)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static ID internal_id(void)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static VALUE lex_get_str(VALUE s)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static VALUE lex_getline(void)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static NODE *list_append(NODE *head, NODE *tail)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static NODE *list_concat(NODE *head, NODE *tail)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static NODE *literal_append(NODE *head, NODE *tail)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static NODE *literal_concat(NODE *head, NODE *tail)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static NODE *literal_concat_dstr(NODE *head, NODE *tail)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static NODE *literal_concat_list(NODE *head, NODE *tail)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static NODE *literal_concat_string(NODE *head, NODE *tail, VALUE str)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static int local_append(ID id)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static int local_cnt(ID id)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static int local_id(ID id)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static void local_pop(void)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static void local_push(int top)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static ID *local_tbl(void)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static NODE *logop(enum node_type type, NODE *left, NODE *right)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static NODE *match_gen(NODE *node1, NODE *node2)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static NODE *new_call(NODE *r, ID m, NODE *a)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static NODE *new_fcall(ID m, NODE *a)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static NODE *new_super(NODE *a)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static NODE *newline_node(NODE *node)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static char *newtok(void)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static int nextc(void)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static NODE *node_assign(NODE *lhs, NODE *rhs)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static int nodeline(NODE *node)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static enum node_type nodetype(node)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static int parse_string(NODE *quote)" "refm/capi/src/parse.y.rd")
(find-rurima "--- MACRO static int peek(int c)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static void pushback(int c)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static NODE *range_op(NODE *node)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static void rb_backref_error(NODE *node)" "refm/capi/src/parse.y.rd")
(find-rurima "--- VALUE rb_backref_get(void)" "refm/capi/src/parse.y.rd")
(find-rurima "--- void rb_backref_set(VALUE val)" "refm/capi/src/parse.y.rd")
(find-rurima "--- NODE *rb_compile_cstr(const char *f, const char *s, int len, int line)" "refm/capi/src/parse.y.rd")
(find-rurima "--- NODE *rb_compile_file(const char *f, VALUE file, int start)" "refm/capi/src/parse.y.rd")
(find-rurima "--- NODE *rb_compile_string(const char *f, VALUE s, int line)" "refm/capi/src/parse.y.rd")
(find-rurima "--- char *rb_id2name(ID id)" "refm/capi/src/parse.y.rd")
(find-rurima "--- ID rb_id_attrset(ID id)" "refm/capi/src/parse.y.rd")
(find-rurima "--- ID rb_intern(const char *name)" "refm/capi/src/parse.y.rd")
(find-rurima "--- int rb_is_class_id(ID id)" "refm/capi/src/parse.y.rd")
(find-rurima "--- int rb_is_const_id(ID id)" "refm/capi/src/parse.y.rd")
(find-rurima "--- int rb_is_instance_id(ID id)" "refm/capi/src/parse.y.rd")
(find-rurima "--- int rb_is_local_id(ID id)" "refm/capi/src/parse.y.rd")
(find-rurima "--- VALUE rb_lastline_get(void)" "refm/capi/src/parse.y.rd")
(find-rurima "--- void rb_lastline_set(VALUE val)" "refm/capi/src/parse.y.rd")
(find-rurima "--- NODE *rb_node_newnode(enum node_type type, NODE *a0, NODE *a1, NODE *a2)" "refm/capi/src/parse.y.rd")
(find-rurima "--- void rb_parser_append_print(void)" "refm/capi/src/parse.y.rd")
(find-rurima "--- void rb_parser_while_loop(int chop, int split)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static struct kwtable *rb_reserved_word(const char *str, unsigned int len)" "refm/capi/src/parse.y.rd")
(find-rurima "--- VALUE rb_sym_all_symbols(void)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static int read_escape(void)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static int regx_options(void)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static NODE *ret_args(NODE *node)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static void special_local_set(char c, VALUE val)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static int symbols_i(char *key, ID value, VALUE ary)" "refm/capi/src/parse.y.rd")
(find-rurima "--- MACRO static char *tok(void)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static void tokadd(char c)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static int tokadd_escape(int term)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static int tokadd_string(int func, int term, int paren)" "refm/capi/src/parse.y.rd")
(find-rurima "--- MACRO static void tokfix(void)" "refm/capi/src/parse.y.rd")
(find-rurima "--- MACRO static char* toklast(void)" "refm/capi/src/parse.y.rd")
(find-rurima "--- MACRO static int toklen(void)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static void top_local_init(void)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static void top_local_setup(void)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static int value_expr(NODE *node)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static void void_expr(NODE *node)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static void void_stmts(NODE *node)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static void warn_unless_e_option(const char *str)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static void warning_unless_e_option(const char *str)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static int whole_match_p(char *eos, int len, int indent)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static NODE *yycompile(char *f, int line)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static int yyerror(char *msg)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static int yylex(void)" "refm/capi/src/parse.y.rd")
(find-rurima "--- static int yyparse(void)" "refm/capi/src/parse.y.rd")
(find-rurima "--- VALUE rb_ary_new()" "refm/capi/src/array.c.rd")
(find-rurima "--- VALUE rb_ary_new2(long len)" "refm/capi/src/array.c.rd")
(find-rurima "--- VALUE rb_ary_new3(long n, VALUE i0, i1, i2, ...)" "refm/capi/src/array.c.rd")
(find-rurima "--- VALUE rb_assoc_new(VALUE a, VALUE b)" "refm/capi/src/array.c.rd")
(find-rurima "--- VALUE rb_ary_entry(VALUE ary, long offset)" "refm/capi/src/array.c.rd")
(find-rurima "--- VALUE rb_ary_aref(int argc, VALUE *argv, VALUE ary)" "refm/capi/src/array.c.rd")
(find-rurima "--- void rb_ary_store(VALUE ary, long idx, VALUE val)" "refm/capi/src/array.c.rd")
(find-rurima "--- VALUE rb_ary_push(VALUE ary, VALUE item)" "refm/capi/src/array.c.rd")
(find-rurima "--- VALUE rb_ary_pop(VALUE ary)" "refm/capi/src/array.c.rd")
(find-rurima "--- VALUE rb_ary_shift(VALUE ary)" "refm/capi/src/array.c.rd")
(find-rurima "--- VALUE rb_ary_unshift(VALUE ary, VALUE item)" "refm/capi/src/array.c.rd")
(find-rurima "--- VALUE rb_ary_to_s(VALUE ary)" "refm/capi/src/array.c.rd")
(find-rurima "--- VALUE rb_ary_sort(VALUE ary)" "refm/capi/src/array.c.rd")
(find-rurima "--- VALUE rb_ary_includes(ary, item)" "refm/capi/src/array.c.rd")
(find-rurima "--- VALUE rb_ary_delete(VALUE ary, VALUE item)" "refm/capi/src/array.c.rd")
(find-rurima "--- VALUE rb_ary_clear(VALUE ary)" "refm/capi/src/array.c.rd")
(find-rurima "--- VALUE rb_ary_concat(VALUE ary, VALUE x)" "refm/capi/src/array.c.rd")
(find-rurima "--- static int clone_method(ID mid, NODE *body, st_table *tbl)" "refm/capi/src/class.c.rd")
(find-rurima "--- static VALUE include_class_new(VALUE module, VALUE super)" "refm/capi/src/class.c.rd")
(find-rurima "--- static int ins_methods_i(ID key, NODE *body, VALUE ary)" "refm/capi/src/class.c.rd")
(find-rurima "--- static int ins_methods_priv_i(ID key, NODE *body, VALUE ary)" "refm/capi/src/class.c.rd")
(find-rurima "--- static int ins_methods_prot_i(ID key, NODE *body, VALUE ary)" "refm/capi/src/class.c.rd")
(find-rurima "--- static VALUE method_list(VALUE mod, int option, int (*func)())" "refm/capi/src/class.c.rd")
(find-rurima "--- VALUE rb_class_boot(VALUE super)" "refm/capi/src/class.c.rd")
(find-rurima "--- VALUE rb_class_inherited(VALUE super, VALUE klass)" "refm/capi/src/class.c.rd")
(find-rurima "--- VALUE rb_class_instance_methods(int argc, VALUE *argv, VALUE mod)" "refm/capi/src/class.c.rd")
(find-rurima "--- VALUE rb_class_new(VALUE super)" "refm/capi/src/class.c.rd")
(find-rurima "--- VALUE rb_class_private_instance_methods(int argc, VALUE *argv, VALUE mod)" "refm/capi/src/class.c.rd")
(find-rurima "--- VALUE rb_class_protected_instance_methods(int argc, VALUE *argv, VALUE mod)" "refm/capi/src/class.c.rd")
(find-rurima "--- void rb_define_alias(VALUE klass, const char *new, const char *old)" "refm/capi/src/class.c.rd")
(find-rurima "--- void rb_define_attr(VALUE klass, const char *name, int read, int write)" "refm/capi/src/class.c.rd")
(find-rurima "--- VALUE rb_define_class(const char *name, VALUE super)" "refm/capi/src/class.c.rd")
(find-rurima "--- VALUE rb_define_class_id(ID id, VALUE super)" "refm/capi/src/class.c.rd")
(find-rurima "--- VALUE rb_define_class_under(VALUE outer, const char *name, VALUE super)" "refm/capi/src/class.c.rd")
(find-rurima "--- void rb_define_global_function(const char *name, VALUE (*func)(), int argc)" "refm/capi/src/class.c.rd")
(find-rurima "--- void rb_define_method(VALUE klass, const char *name, VALUE(*func)(), int argc)" "refm/capi/src/class.c.rd")
(find-rurima "--- void rb_define_method_id(VALUE klass, ID name, VALUE (*func)(), int argc)" "refm/capi/src/class.c.rd")
(find-rurima "--- VALUE rb_define_module(const char *name)" "refm/capi/src/class.c.rd")
(find-rurima "--- void rb_define_module_function(VALUE module, const char *name, VALUE (*func)(), int argc)" "refm/capi/src/class.c.rd")
(find-rurima "--- VALUE rb_define_module_id(ID id)" "refm/capi/src/class.c.rd")
(find-rurima "--- VALUE rb_define_module_under(VALUE outer, const char *name)" "refm/capi/src/class.c.rd")
(find-rurima "--- void rb_define_private_method(VALUE klass, const char *name, VALUE(*func)(), int argc)" "refm/capi/src/class.c.rd")
(find-rurima "--- void rb_define_protected_method(VALUE klass, const char *name, VALUE (*func)(), int argc)" "refm/capi/src/class.c.rd")
(find-rurima "--- void rb_define_singleton_method(VALUE obj, const char *name, VALUE (*func)(), int argc)" "refm/capi/src/class.c.rd")
(find-rurima "--- void rb_include_module(VALUE klass, VALUE module)" "refm/capi/src/class.c.rd")
(find-rurima "--- VALUE rb_make_metaclass(VALUE obj, VALUE klass)" "refm/capi/src/class.c.rd")
(find-rurima "--- VALUE rb_mod_ancestors(VALUE mod)" "refm/capi/src/class.c.rd")
(find-rurima "--- VALUE rb_mod_clone(VALUE mod)" "refm/capi/src/class.c.rd")
(find-rurima "--- VALUE rb_mod_dup(VALUE mod)" "refm/capi/src/class.c.rd")
(find-rurima "--- VALUE rb_mod_include_p(VALUE mod, VALUE mod2)" "refm/capi/src/class.c.rd")
(find-rurima "--- VALUE rb_mod_included_modules(VALUE mod)" "refm/capi/src/class.c.rd")
(find-rurima "--- VALUE rb_module_new(void)" "refm/capi/src/class.c.rd")
(find-rurima "--- VALUE rb_obj_singleton_methods(int argc, VALUE *argv, VALUE obj)" "refm/capi/src/class.c.rd")
(find-rurima "--- int rb_scan_args(int argc, const VALUE *argv, const char *fmt, ...)" "refm/capi/src/class.c.rd")
(find-rurima "--- VALUE rb_singleton_class(VALUE obj)" "refm/capi/src/class.c.rd")
(find-rurima "--- void rb_singleton_class_attached(VALUE klass, VALUE obj)" "refm/capi/src/class.c.rd")
(find-rurima "--- VALUE rb_singleton_class_clone(VALUE klass)" "refm/capi/src/class.c.rd")
(find-rurima "--- VALUE rb_singleton_class_new(VALUE super)" "refm/capi/src/class.c.rd")
(find-rurima "--- void rb_undef_method(VALUE klass, const char *name)" "refm/capi/src/class.c.rd")
(find-rurima "--- static int autoload_i(ID key, const char *name, st_table *tbl)" "refm/capi/src/variable.c.rd")
(find-rurima "--- static VALUE classname(VALUE klass)" "refm/capi/src/variable.c.rd")
(find-rurima "--- static int cv_i(ID key, VALUE value, VALUE ary)" "refm/capi/src/variable.c.rd")
(find-rurima "--- static void cvar_override_check(VALUE id, VALUE a)" "refm/capi/src/variable.c.rd")
(find-rurima "--- static int fc_i(ID key, VALUE value, struct fc_result *res)" "refm/capi/src/variable.c.rd")
(find-rurima "--- static VALUE fc_path(struct fc_result *fc, ID name)" "refm/capi/src/variable.c.rd")
(find-rurima "--- static VALUE find_class_path(VALUE klass)" "refm/capi/src/variable.c.rd")
(find-rurima "--- static VALUE generic_ivar_defined(VALUE obj, ID id)" "refm/capi/src/variable.c.rd")
(find-rurima "--- static VALUE generic_ivar_get(VALUE obj, ID id)" "refm/capi/src/variable.c.rd")
(find-rurima "--- static int generic_ivar_remove(VALUE obj, ID id, VALUE *valp)" "refm/capi/src/variable.c.rd")
(find-rurima "--- static void generic_ivar_set(VALUE obj, ID id, VALUE val)" "refm/capi/src/variable.c.rd")
(find-rurima "--- static int givar_i(VALUE obj, st_table *tbl)" "refm/capi/src/variable.c.rd")
(find-rurima "--- static int givar_mark_i(ID key, VALUE value)" "refm/capi/src/variable.c.rd")
(find-rurima "--- static ID global_id(const char *name)" "refm/capi/src/variable.c.rd")
(find-rurima "--- static int gvar_i(ID key, struct global_entry *entry, VALUE ary)" "refm/capi/src/variable.c.rd")
(find-rurima "--- void Init_var_tables(void)" "refm/capi/src/variable.c.rd")
(find-rurima "--- static int ivar_i(ID key, struct global_entry *entry, VALUE ary)" "refm/capi/src/variable.c.rd")
(find-rurima "--- static int list_i(ID key, ID value, VALUE ary)" "refm/capi/src/variable.c.rd")
(find-rurima "--- static int mark_global_entry(ID key, struct global_entry *entry)" "refm/capi/src/variable.c.rd")
(find-rurima "--- static void mod_av_set(VALUE klass, ID id, VALUE val, int isconst)" "refm/capi/src/variable.c.rd")
(find-rurima "--- static VALUE original_module(VALUE c)" "refm/capi/src/variable.c.rd")
(find-rurima "--- void rb_alias_variable(ID name1, ID name2)" "refm/capi/src/variable.c.rd")
(find-rurima "--- void rb_autoload(const char *klass, const char *filename)" "refm/capi/src/variable.c.rd")
(find-rurima "--- int rb_autoload_defined(ID id)" "refm/capi/src/variable.c.rd")
(find-rurima "--- static void rb_autoload_id(ID id, const char *filename)" "refm/capi/src/variable.c.rd")
(find-rurima "--- void rb_autoload_load(ID id)" "refm/capi/src/variable.c.rd")
(find-rurima "--- char *rb_class2name(VALUE klass)" "refm/capi/src/variable.c.rd")
(find-rurima "--- VALUE rb_class_path(VALUE klass)" "refm/capi/src/variable.c.rd")
(find-rurima "--- void rb_const_assign(VALUE klass, ID id, VALUE val)" "refm/capi/src/variable.c.rd")
(find-rurima "--- int rb_const_defined(VALUE klass, ID id)" "refm/capi/src/variable.c.rd")
(find-rurima "--- int rb_const_defined_at(VALUE klass, ID id)" "refm/capi/src/variable.c.rd")
(find-rurima "--- VALUE rb_const_get(VALUE klass, ID name)" "refm/capi/src/variable.c.rd")
(find-rurima "--- VALUE rb_const_get_at(VALUE klass, ID name)" "refm/capi/src/variable.c.rd")
(find-rurima "--- VALUE rb_const_list(void *data)" "refm/capi/src/variable.c.rd")
(find-rurima "--- void rb_const_set(VALUE klass, ID name, VALUE val)" "refm/capi/src/variable.c.rd")
(find-rurima "--- void rb_copy_generic_ivar(VALUE clone, VALUE obj)" "refm/capi/src/variable.c.rd")
(find-rurima "--- VALUE rb_cv_get(VALUE klass, char *name)" "refm/capi/src/variable.c.rd")
(find-rurima "--- void rb_cv_set(VALUE klass, char *name, VALUE val)" "refm/capi/src/variable.c.rd")
(find-rurima "--- void rb_cvar_declear(VALUE klass, ID name, VALUE val)" "refm/capi/src/variable.c.rd")
(find-rurima "--- VALUE rb_cvar_defined(VALUE klass, ID id)" "refm/capi/src/variable.c.rd")
(find-rurima "--- VALUE rb_cvar_get(VALUE klass, ID name)" "refm/capi/src/variable.c.rd")
(find-rurima "--- void rb_cvar_set(VALUE klass, ID name, VALUE val)" "refm/capi/src/variable.c.rd")
(find-rurima "--- void rb_define_class_variable(VALUE klass, const char *name, VALUE val)" "refm/capi/src/variable.c.rd")
(find-rurima "--- void rb_define_const(VALUE klass, const char *name, VALUE val)" "refm/capi/src/variable.c.rd")
(find-rurima "--- void rb_define_global_const(const char *name, VALUE val)" "refm/capi/src/variable.c.rd")
(find-rurima "--- void rb_define_hooked_variable(const char *name, VALUE *var, VALUE (*getter)(), VALUE (*setter)())" "refm/capi/src/variable.c.rd")
(find-rurima "--- void rb_define_readonly_variable(const char *name, VALUE *var)" "refm/capi/src/variable.c.rd")
(find-rurima "--- void rb_define_variable(const char *name, VALUE *var)" "refm/capi/src/variable.c.rd")
(find-rurima "--- void rb_define_virtual_variable(const char *name, VALUE (*getter)(), VALUE (*setter)())" "refm/capi/src/variable.c.rd")
(find-rurima "--- VALUE rb_f_autoload(VALUE obj, VALUE klass, VALUE file)" "refm/capi/src/variable.c.rd")
(find-rurima "--- VALUE rb_f_global_variables(void)" "refm/capi/src/variable.c.rd")
(find-rurima "--- VALUE rb_f_trace_var(int argc, VALUE *argv)" "refm/capi/src/variable.c.rd")
(find-rurima "--- VALUE rb_f_untrace_var(int argc, VALUE *argv)" "refm/capi/src/variable.c.rd")
(find-rurima "--- void rb_free_generic_ivar(VALUE obj)" "refm/capi/src/variable.c.rd")
(find-rurima "--- void rb_gc_mark_global_tbl(void)" "refm/capi/src/variable.c.rd")
(find-rurima "--- st_table *rb_generic_ivar_table(VALUE obj)" "refm/capi/src/variable.c.rd")
(find-rurima "--- struct global_entry *rb_global_entry(ID id)" "refm/capi/src/variable.c.rd")
(find-rurima "--- VALUE rb_gv_get(const char *name)" "refm/capi/src/variable.c.rd")
(find-rurima "--- VALUE rb_gv_set(const char *name, VALUE val)" "refm/capi/src/variable.c.rd")
(find-rurima "--- VALUE rb_gvar_defined(struct global_entry *entry)" "refm/capi/src/variable.c.rd")
(find-rurima "--- VALUE rb_gvar_get(struct global_entry *entry)" "refm/capi/src/variable.c.rd")
(find-rurima "--- VALUE rb_gvar_set(struct global_entry *entry, VALUE val)" "refm/capi/src/variable.c.rd")
(find-rurima "--- VALUE rb_iv_get(VALUE obj, char *name)" "refm/capi/src/variable.c.rd")
(find-rurima "--- VALUE rb_iv_set(VALUE obj, char *name, VALUE val)" "refm/capi/src/variable.c.rd")
(find-rurima "--- VALUE rb_ivar_defined(VALUE obj, ID id)" "refm/capi/src/variable.c.rd")
(find-rurima "--- VALUE rb_ivar_get(VALUE obj, ID name)" "refm/capi/src/variable.c.rd")
(find-rurima "--- VALUE rb_ivar_set(VALUE obj, ID name, VALUE val)" "refm/capi/src/variable.c.rd")
(find-rurima "--- void rb_mark_generic_ivar(VALUE obj)" "refm/capi/src/variable.c.rd")
(find-rurima "--- void rb_mark_generic_ivar_tbl(void)" "refm/capi/src/variable.c.rd")
(find-rurima "--- VALUE rb_mod_class_variables(VALUE obj)" "refm/capi/src/variable.c.rd")
(find-rurima "--- void *rb_mod_const_at(VALUE mod, void *data)" "refm/capi/src/variable.c.rd")
(find-rurima "--- void *rb_mod_const_of(VALUE mod, void *data)" "refm/capi/src/variable.c.rd")
(find-rurima "--- VALUE rb_mod_constants(VALUE mod)" "refm/capi/src/variable.c.rd")
(find-rurima "--- VALUE rb_mod_name(VALUE mod)" "refm/capi/src/variable.c.rd")
(find-rurima "--- VALUE rb_mod_remove_const(VALUE mod, VALUE name)" "refm/capi/src/variable.c.rd")
(find-rurima "--- VALUE rb_mod_remove_cvar(VALUE mod, VALUE name)" "refm/capi/src/variable.c.rd")
(find-rurima "--- void rb_name_class(VALUE klass, ID id)" "refm/capi/src/variable.c.rd")
(find-rurima "--- VALUE rb_obj_instance_variables(VALUE obj)" "refm/capi/src/variable.c.rd")
(find-rurima "--- VALUE rb_obj_remove_instance_variable(VALUE obj, VALUE name)" "refm/capi/src/variable.c.rd")
(find-rurima "--- VALUE rb_path2class(const char *path)" "refm/capi/src/variable.c.rd")
(find-rurima "--- void rb_set_class_path(VALUE klass, VALUE under, const char *name)" "refm/capi/src/variable.c.rd")
(find-rurima "--- static void rb_trace_eval(VALUE cmd, VALUE val)" "refm/capi/src/variable.c.rd")
(find-rurima "--- static void readonly_setter(VALUE val, ID id, void *var)" "refm/capi/src/variable.c.rd")
(find-rurima "--- static void remove_trace(struct global_variable *var)" "refm/capi/src/variable.c.rd")
(find-rurima "--- static int sv_i(ID key, VALUE value, st_table *tbl)" "refm/capi/src/variable.c.rd")
(find-rurima "--- static int top_const_get(ID id, VALUE *klassp)" "refm/capi/src/variable.c.rd")
(find-rurima "--- static VALUE trace_en(struct global_variable *var)" "refm/capi/src/variable.c.rd")
(find-rurima "--- static VALUE trace_ev(struct trace_data *data)" "refm/capi/src/variable.c.rd")
(find-rurima "--- static VALUE undef_getter(ID id)" "refm/capi/src/variable.c.rd")
(find-rurima "--- static void undef_marker(void)" "refm/capi/src/variable.c.rd")
(find-rurima "--- static void undef_setter(VALUE val, ID id, void *data, struct global_variable *var)" "refm/capi/src/variable.c.rd")
(find-rurima "--- static VALUE val_getter(ID id, VALUE val)" "refm/capi/src/variable.c.rd")
(find-rurima "--- static void val_marker(VALUE data)" "refm/capi/src/variable.c.rd")
(find-rurima "--- static void val_setter(VALUE val, ID id, void *data, struct global_variable *var)" "refm/capi/src/variable.c.rd")
(find-rurima "--- static VALUE var_getter(ID id, VALUE *var)" "refm/capi/src/variable.c.rd")
(find-rurima "--- static void var_marker(VALUE *var)" "refm/capi/src/variable.c.rd")
(find-rurima "--- static void var_setter(VALUE val, ID id, VALUE *var)" "refm/capi/src/variable.c.rd")
(find-rurima "--- static VALUE add_final(VALUE os, VALUE proc)" "refm/capi/src/gc.c.rd")
(find-rurima "--- static void add_heap(void)" "refm/capi/src/gc.c.rd")
(find-rurima "--- static VALUE call_final(VALUE os, VALUE obj)" "refm/capi/src/gc.c.rd")
(find-rurima "--- static VALUE define_final(int argc, VALUE *argv, VALUE os)" "refm/capi/src/gc.c.rd")
(find-rurima "--- static VALUE finals(void)" "refm/capi/src/gc.c.rd")
(find-rurima "--- static void gc_mark_all(void)" "refm/capi/src/gc.c.rd")
(find-rurima "--- static void gc_mark_rest(void)" "refm/capi/src/gc.c.rd")
(find-rurima "--- static void gc_sweep(void)" "refm/capi/src/gc.c.rd")
(find-rurima "--- static VALUE id2ref(VALUE obj, VALUE id)" "refm/capi/src/gc.c.rd")
(find-rurima "--- void Init_heap(void)" "refm/capi/src/gc.c.rd")
(find-rurima "--- static void init_mark_stack(void)" "refm/capi/src/gc.c.rd")
(find-rurima "--- void Init_stack(VALUE *addr)" "refm/capi/src/gc.c.rd")
(find-rurima "--- static inline int is_pointer_to_heap(void *ptr)" "refm/capi/src/gc.c.rd")
(find-rurima "--- static int mark_entry(ID key, VALUE value)" "refm/capi/src/gc.c.rd")
(find-rurima "--- static int mark_hashentry(VALUE key, VALUE value)" "refm/capi/src/gc.c.rd")
(find-rurima "--- static void mark_locations_array(register VALUE *x, register long n)" "refm/capi/src/gc.c.rd")
(find-rurima "--- static void mark_source_filename(char *f)" "refm/capi/src/gc.c.rd")
(find-rurima "--- static void obj_free(VALUE obj)" "refm/capi/src/gc.c.rd")
(find-rurima "--- static VALUE os_each_obj(int argc, VALUE *argv)" "refm/capi/src/gc.c.rd")
(find-rurima "--- static VALUE os_live_obj(void)" "refm/capi/src/gc.c.rd")
(find-rurima "--- static VALUE os_obj_of(VALUE of)" "refm/capi/src/gc.c.rd")
(find-rurima "--- VALUE rb_data_object_alloc(VALUE klass, void *datap, RUBY_DATA_FUNC dmark, RUBY_DATA_FUNC dfree)" "refm/capi/src/gc.c.rd")
(find-rurima "--- VALUE rb_gc(void)" "refm/capi/src/gc.c.rd")
(find-rurima "--- void rb_gc_call_finalizer_at_exit(void)" "refm/capi/src/gc.c.rd")
(find-rurima "--- VALUE rb_gc_disable(void)" "refm/capi/src/gc.c.rd")
(find-rurima "--- VALUE rb_gc_enable(void)" "refm/capi/src/gc.c.rd")
(find-rurima "--- void rb_gc_force_recycle(VALUE p)" "refm/capi/src/gc.c.rd")
(find-rurima "--- void rb_gc_mark(VALUE v)" "refm/capi/src/gc.c.rd")
(find-rurima "--- void rb_gc_mark_children(VALUE ptr)" "refm/capi/src/gc.c.rd")
(find-rurima "--- void rb_gc_mark_frame(struct FRAME *frame)" "refm/capi/src/gc.c.rd")
(find-rurima "--- void rb_gc_mark_locations(VALUE *start, VALUE *end)" "refm/capi/src/gc.c.rd")
(find-rurima "--- void rb_gc_mark_maybe(VALUE v)" "refm/capi/src/gc.c.rd")
(find-rurima "--- void rb_gc_register_address(VALUE *addr)" "refm/capi/src/gc.c.rd")
(find-rurima "--- VALUE rb_gc_start(void)" "refm/capi/src/gc.c.rd")
(find-rurima "--- void rb_gc_unregister_address(VALUE *addr)" "refm/capi/src/gc.c.rd")
(find-rurima "--- void rb_global_variable(VALUE *var)" "refm/capi/src/gc.c.rd")
(find-rurima "--- void rb_mark_hash(st_table *tbl)" "refm/capi/src/gc.c.rd")
(find-rurima "--- void rb_mark_tbl(st_table *tbl)" "refm/capi/src/gc.c.rd")
(find-rurima "--- void rb_memerror(void)" "refm/capi/src/gc.c.rd")
(find-rurima "--- VALUE rb_newobj(void)" "refm/capi/src/gc.c.rd")
(find-rurima "--- char *rb_source_filename(const char *f)" "refm/capi/src/gc.c.rd")
(find-rurima "--- static VALUE rm_final(VALUE os, VALUE proc)" "refm/capi/src/gc.c.rd")
(find-rurima "--- int ruby_stack_check(void)" "refm/capi/src/gc.c.rd")
(find-rurima "--- int ruby_stack_length(VALUE **p)" "refm/capi/src/gc.c.rd")
(find-rurima "--- void *ruby_xcalloc(long n, long size)" "refm/capi/src/gc.c.rd")
(find-rurima "--- void ruby_xfree(void *x)" "refm/capi/src/gc.c.rd")
(find-rurima "--- void *ruby_xmalloc(long size)" "refm/capi/src/gc.c.rd")
(find-rurima "--- void *ruby_xrealloc(void *ptr, long size)" "refm/capi/src/gc.c.rd")
(find-rurima "--- static void run_final(VALUE obj)" "refm/capi/src/gc.c.rd")
(find-rurima "--- static VALUE run_single_final(VALUE *args)" "refm/capi/src/gc.c.rd")
(find-rurima "--- static enum st_retval sweep_source_filename(char *key, char *value)" "refm/capi/src/gc.c.rd")
(find-rurima "--- static VALUE undefine_final(VALUE os, VALUE obj)" "refm/capi/src/gc.c.rd")
(find-rurima "--- void rb_raise(VALUE err, const char *fmt, ...)" "refm/capi/src/error.c.rd")
(find-rurima "--- void rb_fatal(const char *fmt, ...)" "refm/capi/src/error.c.rd")
(find-rurima "--- VALUE rb_str_new(const char *ptr, long len)" "refm/capi/src/string.c.rd")
(find-rurima "--- VALUE rb_str_new2(const char *ptr)" "refm/capi/src/string.c.rd")
(find-rurima "--- VALUE rb_str_new4(VALUE orig)" "refm/capi/src/string.c.rd")
(find-rurima "--- VALUE rb_str_dup(VALUE str)" "refm/capi/src/string.c.rd")
(find-rurima "--- VALUE rb_str_substr(VALUE str, long beg, long len)" "refm/capi/src/string.c.rd")
(find-rurima "--- VALUE rb_str_cat(VALUE str, const char *ptr, long len)" "refm/capi/src/string.c.rd")
(find-rurima "--- VALUE rb_str_cat2(VALUE str, const char *ptr)" "refm/capi/src/string.c.rd")
(find-rurima "--- VALUE rb_str_concat(VALUE s1, VALUE s2)" "refm/capi/src/string.c.rd")
(find-rurima "= 9. ドキュメントされていない機能" "faq/undocumented.rd")
(find-rurima "= Rubyで使われる記号の意味" "faq/symbols.rd")
(find-rurima "==?<文字>" "= Rubyで使われる記号の意味" "faq/symbols.rd")
(find-rurima "==%<文字><区切り文字><文字列><区切り文字>" "= Rubyで使われる記号の意味" "faq/symbols.rd")
(find-rurima "== *がついた引数" "= Rubyで使われる記号の意味" "faq/symbols.rd")
(find-rurima "== &がついた引数" "= Rubyで使われる記号の意味" "faq/symbols.rd")
(find-rurima "== :exit等の:のついた識別子" "= Rubyで使われる記号の意味" "faq/symbols.rd")
(find-rurima "== a <二項演算子>= b" "= Rubyで使われる記号の意味" "faq/symbols.rd")
(find-rurima "== #!" "= Rubyで使われる記号の意味" "faq/symbols.rd")
(find-rurima "= 11 Ruby の処理系について" "faq/interpreter.rd")
(find-rurima "== 11.1 Ruby スクリプトをコンパイルすることはできますか？" "= 11 Ruby の処理系について" "faq/interpreter.rd")
(find-rurima "== 11.2 Java VM 上で動く Ruby ってありますか？" "= 11 Ruby の処理系について" "faq/interpreter.rd")
(find-rurima "== 11.3 オリジナル以外の Ruby の実装はありますか？" "= 11 Ruby の処理系について" "faq/interpreter.rd")
(find-rurima "== 11.4 Ruby 用の indent みたいなものはありますか？" "= 11 Ruby の処理系について" "faq/interpreter.rd")
(find-rurima "== 11.5 ネイティブスレッドを使った Ruby はない？" "= 11 Ruby の処理系について" "faq/interpreter.rd")
(find-rurima "== 11.6 GC が遅い！ どうにかならないの？" "= 11 Ruby の処理系について" "faq/interpreter.rd")
(find-rurima "== 11.7 Mac では Ruby は動かないの？" "= 11 Ruby の処理系について" "faq/interpreter.rd")
(find-rurima "= 5. メソッド" "faq/method.rd")
(find-rurima "== 5.1 オブジェクトにメッセージを送った時に実行されるメソッドはどのように捜されますか" "= 5. メソッド" "faq/method.rd")
(find-rurima "== 5.2 (({+}))や(({-}))は演算子ですか" "= 5. メソッド" "faq/method.rd")
(find-rurima "== 5.3 関数はありますか" "= 5. メソッド" "faq/method.rd")
(find-rurima "== 5.4 オブジェクトのインスタンス変数を外から参照できますか" "= 5. メソッド" "faq/method.rd")
(find-rurima "== 5.5 (({private}))と(({protected}))の違いが分かりません" "= 5. メソッド" "faq/method.rd")
(find-rurima "== 5.6 インスタンス変数をpublicにしたいのですが" "= 5. メソッド" "faq/method.rd")
(find-rurima "== 5.7 メソッドの可視性を指定したいのですが" "= 5. メソッド" "faq/method.rd")
(find-rurima "== 5.8 メソッド名に大文字で始まる識別子は使えますか" "= 5. メソッド" "faq/method.rd")
(find-rurima "== 5.9 (({super}))が((<ArgumentError>))になりますが" "= 5. メソッド" "faq/method.rd")
(find-rurima "== 5.10 2段階上の同名のメソッドを呼びたいのですが" "= 5. メソッド" "faq/method.rd")
(find-rurima "== 5.11 組み込み関数を再定義した時に、元の関数を呼びたい時はどうしますか" "= 5. メソッド" "faq/method.rd")
(find-rurima "== 5.12 破壊的メソッドとは何ですか" "= 5. メソッド" "faq/method.rd")
(find-rurima "== 5.13 副作用が起こるのはどんな時ですか" "= 5. メソッド" "faq/method.rd")
(find-rurima "== 5.14 メソッドから複数の戻り値を返すことはできますか" "= 5. メソッド" "faq/method.rd")
(find-rurima "== 5.15 今実行中のメソッドの名前を知りたいのですが" "= 5. メソッド" "faq/method.rd")
(find-rurima "= 10. 日本語の取り扱い" "faq/japanese.rd")
(find-rurima "== 10.1 漢字を含んだスクリプトが文字化けを出力したり、正しく実行できない場合があります" "= 10. 日本語の取り扱い" "faq/japanese.rd")
(find-rurima "== 10.2 オプション(({-K})) と (({$KCODE})) の違いはなんですか？" "= 10. 日本語の取り扱い" "faq/japanese.rd")
(find-rurima "== 10.3 日本語の識別子は使えますか" "= 10. 日本語の取り扱い" "faq/japanese.rd")
(find-rurima "== 10.4 日本語を含む文字列から1文字ずつ文字列を取り出すにはどうしますか" "= 10. 日本語の取り扱い" "faq/japanese.rd")
(find-rurima "== 10.5 tr(\"あ\",\"a\")がうまく動きません" "= 10. 日本語の取り扱い" "faq/japanese.rd")
(find-rurima "== 10.6 ひらがなをソートするにはどうしますか" "= 10. 日本語の取り扱い" "faq/japanese.rd")
(find-rurima "== 10.7 SJISの機種依存コード84BF から 889Fまでを空白に置き換えたいのですが" "= 10. 日本語の取り扱い" "faq/japanese.rd")
(find-rurima "== 10.8 いわゆる全角文字と半角文字の変換を行うにはどうするのがよいですか？" "= 10. 日本語の取り扱い" "faq/japanese.rd")
(find-rurima "== 10.9 いわゆる半角カナの扱い" "= 10. 日本語の取り扱い" "faq/japanese.rd")
(find-rurima "== 10.10 日本語を含む文字列から n バイトを切り出したいのですが" "= 10. 日本語の取り扱い" "faq/japanese.rd")
(find-rurima "== 10.11 日本語テキストを n 桁で折り返したいのですが" "= 10. 日本語の取り扱い" "faq/japanese.rd")
(find-rurima "== 10.12 UTF-8で書いたコードを正しく実行できません" "= 10. 日本語の取り扱い" "faq/japanese.rd")
(find-rurima "= 4. 構文" "faq/syntax.rd")
(find-rurima "== 4.1 (({:exit}))等の(({:}))のついた識別子は何ですか" "= 4. 構文" "faq/syntax.rd")
(find-rurima "== 4.2 シンボルと同名の変数の値を取り出すにはどうすればいいですか" "= 4. 構文" "faq/syntax.rd")
(find-rurima "== 4.3 (({loop}))は制御構造ですか" "= 4. 構文" "faq/syntax.rd")
(find-rurima "== 4.4 (({a +b}))がエラーになりますが" "= 4. 構文" "faq/syntax.rd")
(find-rurima "== 4.5 (({s = \"x\"; puts s *10})) がエラーになりますが" "= 4. 構文" "faq/syntax.rd")
(find-rurima "== 4.6 (({p {}}))で何も表示されません" "= 4. 構文" "faq/syntax.rd")
(find-rurima "== 4.7 pos=() という setter メソッドがあるのに、pos = 1 としてもなにも起こっていないように見える" "= 4. 構文" "faq/syntax.rd")
(find-rurima "== 4.8 (({'\\1'}))と(({'\\\\1'}))はどう違いますか" "= 4. 構文" "faq/syntax.rd")
(find-rurima "== 4.9 (({p true or true and false}))は(({true}))を表示するのに、(({a=true if true or true and false}))では、(({a}))に(({true}))が代入されません。" "= 4. 構文" "faq/syntax.rd")
(find-rurima "== 4.10 (({p(nil || \"\")})) はなんでもないのに、 (({p(nil or \"\")})) はパースエラーだと言われます" "= 4. 構文" "faq/syntax.rd")
(find-rurima "= Ruby FAQ" "faq/index.rd")
(find-rurima "== 一般的な質問" "= Ruby FAQ" "faq/index.rd")
(find-rurima "== 変数、定数、引数" "= Ruby FAQ" "faq/index.rd")
(find-rurima "== ブロック付きメソッド呼び出し" "= Ruby FAQ" "faq/index.rd")
(find-rurima "== 構文" "= Ruby FAQ" "faq/index.rd")
(find-rurima "== メソッド" "= Ruby FAQ" "faq/index.rd")
(find-rurima "== クラス、モジュール" "= Ruby FAQ" "faq/index.rd")
(find-rurima "== 組み込みライブラリ" "= Ruby FAQ" "faq/index.rd")
(find-rurima "== 拡張ライブラリ" "= Ruby FAQ" "faq/index.rd")
(find-rurima "== ドキュメントされていない機能" "= Ruby FAQ" "faq/index.rd")
(find-rurima "== 日本語の取り扱い" "= Ruby FAQ" "faq/index.rd")
(find-rurima "== Ruby の処理系について" "= Ruby FAQ" "faq/index.rd")
(find-rurima "= Canvasに関する質問" "faq/tk/canvas.rd")
(find-rurima "= はじめの一歩" "faq/tk/install.rd")
(find-rurima "= Ruby/Tk FAQ" "faq/tk/index.rd")
(find-rurima "= Ruby/Tk インストール" "faq/tk/reference.rd")
(find-rurima "== Ruby/Tk をソースからインストールするにはどうしたら良いですか？" "= Ruby/Tk インストール" "faq/tk/reference.rd")
(find-rurima "=== Cygwin 版の場合" "== Ruby/Tk をソースからインストールするにはどうしたら良いですか？" "= Ruby/Tk インストール" "faq/tk/reference.rd")
(find-rurima "== Ruby/Tk のバイナリはありますか？" "= Ruby/Tk インストール" "faq/tk/reference.rd")
(find-rurima "=== UNIX 系 OS の場合" "== Ruby/Tk のバイナリはありますか？" "= Ruby/Tk インストール" "faq/tk/reference.rd")
(find-rurima "=== Windows の場合" "== Ruby/Tk のバイナリはありますか？" "= Ruby/Tk インストール" "faq/tk/reference.rd")
(find-rurima "= Ruby/Tk 参考資料" "faq/tk/intro.rd")
(find-rurima "== Ruby/Tk のチュートリアルはありますか？" "= Ruby/Tk 参考資料" "faq/tk/intro.rd")
(find-rurima "== Ruby/Tk のマニュアルはありますか？" "= Ruby/Tk 参考資料" "faq/tk/intro.rd")
(find-rurima "== Widget Demo の Ruby/Tk 版はありますか？" "= Ruby/Tk 参考資料" "faq/tk/intro.rd")
(find-rurima "== インターネット上の Ruby/Tk のリソース" "= Ruby/Tk 参考資料" "faq/tk/intro.rd")
(find-rurima "== Ruby のマニュアル" "= Ruby/Tk 参考資料" "faq/tk/intro.rd")
(find-rurima "== Tcl/Tk のマニュアル" "= Ruby/Tk 参考資料" "faq/tk/intro.rd")
(find-rurima "== Perl/Tk のマニュアル" "= Ruby/Tk 参考資料" "faq/tk/intro.rd")
(find-rurima "== Python Tkinter のマニュアル" "= Ruby/Tk 参考資料" "faq/tk/intro.rd")
(find-rurima "= 表記に関する質問" "faq/tk/representation.rd")
(find-rurima "== => とか . とかの意味は？" "= 表記に関する質問" "faq/tk/representation.rd")
(find-rurima "== Tk*.new {} などの {} はなんですか？" "= 表記に関する質問" "faq/tk/representation.rd")
(find-rurima "== クラス名の規則はありますか？" "= 表記に関する質問" "faq/tk/representation.rd")
(find-rurima "== メソッド名の規則はありますか？" "= 表記に関する質問" "faq/tk/representation.rd")
(find-rurima "== proc をつけなくても良い場所はどういう場合ですか？" "= 表記に関する質問" "faq/tk/representation.rd")
(find-rurima "= 動作環境" "faq/tk/general.rd")
(find-rurima "== Windows では動作しますか？" "= 動作環境" "faq/tk/general.rd")
(find-rurima "== Mac OS では動作しますか？" "= 動作環境" "faq/tk/general.rd")
(find-rurima "= Ruby/Tk で書かれた主なアプリケーション" "faq/tk/application.rd")
(find-rurima "== Ruby/Tk で書かれたアプリケーションはありますか？" "= Ruby/Tk で書かれた主なアプリケーション" "faq/tk/application.rd")
(find-rurima "= Widgetに関する質問" "faq/tk/widget.rd")
(find-rurima "== ruby-1.6.x で font \"Helvetica 18\" を指定したら怒られてしまいました。なぜですか？" "= Widgetに関する質問" "faq/tk/widget.rd")
(find-rurima "== TkCanvas#type(tag) を実行したら ... なぜですか？" "= Widgetに関する質問" "faq/tk/widget.rd")
(find-rurima "= Ruby/Tk と Tcl/Tk, Perl/Tk, Python Tkinterなどとの違い" "faq/tk/rubytk.rd")
(find-rurima "== Ruby/Tk と Tcl/Tk との違いはどこですか？" "= Ruby/Tk と Tcl/Tk, Perl/Tk, Python Tkinterなどとの違い" "faq/tk/rubytk.rd")
(find-rurima "== Ruby/Tk と Tcl/Tk との違い一覧は？" "= Ruby/Tk と Tcl/Tk, Perl/Tk, Python Tkinterなどとの違い" "faq/tk/rubytk.rd")
(find-rurima "== Ruby/Tk と Perl/Tk との違いはどこですか？" "= Ruby/Tk と Tcl/Tk, Perl/Tk, Python Tkinterなどとの違い" "faq/tk/rubytk.rd")
(find-rurima "== Ruby/Tk と Perl/Tk との違い一覧は？" "= Ruby/Tk と Tcl/Tk, Perl/Tk, Python Tkinterなどとの違い" "faq/tk/rubytk.rd")
(find-rurima "== Ruby/Tk と Python Tkinter との違いはどこですか？" "= Ruby/Tk と Tcl/Tk, Perl/Tk, Python Tkinterなどとの違い" "faq/tk/rubytk.rd")
(find-rurima "== Ruby/Tk と Python Tkinter との違い一覧は？" "= Ruby/Tk と Tcl/Tk, Perl/Tk, Python Tkinterなどとの違い" "faq/tk/rubytk.rd")
(find-rurima "= 9. トラブルシューティング" "faq/tk/trouble-shooting.rd")
(find-rurima "== 9.1 " "= 9. トラブルシューティング" "faq/tk/trouble-shooting.rd")
(find-rurima "== 9.2 " "= 9. トラブルシューティング" "faq/tk/trouble-shooting.rd")
(find-rurima "= Rubyから使えるその他のツールキット" "faq/tk/other-toolkit.rd")
(find-rurima "= 1. 一般的な質問" "faq/tk/platform.rd")
(find-rurima "== 1.1 Ruby/Tk とは何ですか？" "= 1. 一般的な質問" "faq/tk/platform.rd")
(find-rurima "== 1.2 どんな OS で動作するのでしょうか？" "= 1. 一般的な質問" "faq/tk/platform.rd")
(find-rurima "== 1.3 Tcl/Tk でなく Ruby/Tk を使うと何がうれしいのですか？" "= 1. 一般的な質問" "faq/tk/platform.rd")
(find-rurima "== 1.4 Ruby/Tk と tcltk, tcltklib ライブラリの違いは何ですか？" "= 1. 一般的な質問" "faq/tk/platform.rd")
(find-rurima "== 1.5 Ruby/Gtk とは何が違うのですか？" "= 1. 一般的な質問" "faq/tk/platform.rd")
(find-rurima "== 1.6 Ruby/Qt とは何が違うのですか？" "= 1. 一般的な質問" "faq/tk/platform.rd")
(find-rurima "= 3. ブロック付きメソッド呼び出し" "faq/block.rd")
(find-rurima "== 3.1 ブロック付きメソッド呼び出しとは何ですか" "= 3. ブロック付きメソッド呼び出し" "faq/block.rd")
(find-rurima "== 3.2 ブロック付きメソッドにブロックを渡すにはどうすればいいですか" "= 3. ブロック付きメソッド呼び出し" "faq/block.rd")
(find-rurima "== 3.3 ブロックは呼び出したメソッドの中からどのように使われますか" "= 3. ブロック付きメソッド呼び出し" "faq/block.rd")
(find-rurima "== 3.4 (({Proc.new}))では手続きオブジェクトが作られませんが" "= 3. ブロック付きメソッド呼び出し" "faq/block.rd")
(find-rurima "= 6. クラス、モジュール" "faq/class.rd")
(find-rurima "== 6.1 クラス定義は、一度に行わなければなりませんか" "= 6. クラス、モジュール" "faq/class.rd")
(find-rurima "== 6.2 クラス変数はありますか" "= 6. クラス、モジュール" "faq/class.rd")
(find-rurima "== 6.3 クラスのインスタンス変数とは何ですか" "= 6. クラス、モジュール" "faq/class.rd")
(find-rurima "== 6.4 特異メソッドとは何ですか" "= 6. クラス、モジュール" "faq/class.rd")
(find-rurima "== 6.5 クラスメソッドはありますか" "= 6. クラス、モジュール" "faq/class.rd")
(find-rurima "== 6.6 特異クラスとは何ですか" "= 6. クラス、モジュール" "faq/class.rd")
(find-rurima "== 6.7 モジュール関数とは何ですか" "= 6. クラス、モジュール" "faq/class.rd")
(find-rurima "== 6.8 クラスとモジュールの違いは何ですか" "= 6. クラス、モジュール" "faq/class.rd")
(find-rurima "== 6.9 モジュールはサブクラスを作りますか" "= 6. クラス、モジュール" "faq/class.rd")
(find-rurima "== 6.10 クラス定義の中でクラスメソッドを定義するのと、トップレベルでクラスメソッドを定義する違いは何ですか" "= 6. クラス、モジュール" "faq/class.rd")
(find-rurima "== 6.11 (({load}))と(({require}))はどう違いますか" "= 6. クラス、モジュール" "faq/class.rd")
(find-rurima "== 6.12 (({include}))と(({extend}))はどう違いますか" "= 6. クラス、モジュール" "faq/class.rd")
(find-rurima "== 6.13 (({self})) というのは何ですか" "= 6. クラス、モジュール" "faq/class.rd")
(find-rurima "== 6.14 ((<MatchData>)) の (({begin}))、(({end})) は何を返しますか" "= 6. クラス、モジュール" "faq/class.rd")
(find-rurima "== 6.15 クラス名からクラスを得ることはできますか" "= 6. クラス、モジュール" "faq/class.rd")
(find-rurima "= 2. 変数、定数、引数" "faq/variable.rd")
(find-rurima "== 2.1 変数や定数への代入によりオブジェクトはコピーされますか" "= 2. 変数、定数、引数" "faq/variable.rd")
(find-rurima "== 2.2 ローカル変数のスコープはどのように決められていますか" "= 2. 変数、定数、引数" "faq/variable.rd")
(find-rurima "== 2.3 ローカル変数はいつ参照可能になるのでしょうか" "= 2. 変数、定数、引数" "faq/variable.rd")
(find-rurima "== 2.4 定数のスコープはどのように決められていますか" "= 2. 変数、定数、引数" "faq/variable.rd")
(find-rurima "== 2.5 実引数は仮引数にどのように渡されますか" "= 2. 変数、定数、引数" "faq/variable.rd")
(find-rurima "== 2.6 仮引数に代入すると実引数に影響を及ぼしますか" "= 2. 変数、定数、引数" "faq/variable.rd")
(find-rurima "== 2.7 仮引数の指すオブジェクトにメッセージを送るとどうなりますか" "= 2. 変数、定数、引数" "faq/variable.rd")
(find-rurima "== 2.8 (({*}))がついた引数は何ですか" "= 2. 変数、定数、引数" "faq/variable.rd")
(find-rurima "== 2.9 (({&}))がついた引数は何ですか" "= 2. 変数、定数、引数" "faq/variable.rd")
(find-rurima "== 2.10 仮引数にデフォルト値を指定できますか" "= 2. 変数、定数、引数" "faq/variable.rd")
(find-rurima "== 2.11 ブロックに引数を渡すにはどうしますか" "= 2. 変数、定数、引数" "faq/variable.rd")
(find-rurima "== 2.12 変数や定数の値が知らないうちに変化することがありますが" "= 2. 変数、定数、引数" "faq/variable.rd")
(find-rurima "== 2.13 定数は変更されませんか" "= 2. 変数、定数、引数" "faq/variable.rd")
(find-rurima "= 1. 一般的な質問" "faq/general.rd")
(find-rurima "== 1.1 Rubyとは何ですか" "= 1. 一般的な質問" "faq/general.rd")
(find-rurima "== 1.2 名前の由来を教えてください" "= 1. 一般的な質問" "faq/general.rd")
(find-rurima "== 1.3 Rubyの歴史を教えてください" "= 1. 一般的な質問" "faq/general.rd")
(find-rurima "== 1.4 どこで手に入りますか" "= 1. 一般的な質問" "faq/general.rd")
(find-rurima "== 1.5 Rubyのホームページを教えてください" "= 1. 一般的な質問" "faq/general.rd")
(find-rurima "== 1.6 Rubyのメーリングリストはありますか" "= 1. 一般的な質問" "faq/general.rd")
(find-rurima "== 1.7 メイリングリストの過去メールを調べたいのですが" "= 1. 一般的な質問" "faq/general.rd")
(find-rurima "== 1.8 rubyistとruby hackerの違いは" "= 1. 一般的な質問" "faq/general.rd")
(find-rurima "== 1.9 \"Ruby\"と\"ruby\"はどっちが正しいのですか" "= 1. 一般的な質問" "faq/general.rd")
(find-rurima "== 1.10 Rubyの参考書を教えてください" "= 1. 一般的な質問" "faq/general.rd")
(find-rurima "== 1.11 マニュアルを読んでも理解できないところがあるのですが" "= 1. 一般的な質問" "faq/general.rd")
(find-rurima "== 1.12 Ruby のキャラクターは羊？" "= 1. 一般的な質問" "faq/general.rd")
(find-rurima "== 1.13 バグ報告はどこへ行えばよいでしょう？" "= 1. 一般的な質問" "faq/general.rd")
(find-rurima "= String" "faq/trap/string.rd")
(find-rurima "= Socket" "faq/trap/socket.rd")
(find-rurima "= 引数" "faq/trap/argument.rd")
(find-rurima "= Time" "faq/trap/time.rd")
(find-rurima "== タイムゾーン" "= Time" "faq/trap/time.rd")
(find-rurima "= trap::File" "faq/trap/file.rd")
(find-rurima "= Regexp" "faq/trap/regexp.rd")
(find-rurima "= 空白文字による違い" "faq/trap/whitespace.rd")
(find-rurima "= timeout" "faq/trap/timeout.rd")
(find-rurima "= Hash" "faq/trap/hash.rd")
(find-rurima "= trap::Kconv" "faq/trap/kconv.rd")
(find-rurima "= IO" "faq/trap/io.rd")
(find-rurima "= 真偽値" "faq/trap/boolean.rd")
(find-rurima "== trueとfalse" "= 真偽値" "faq/trap/boolean.rd")
(find-rurima "= Rubyの落とし穴" "faq/trap/index.rd")
(find-rurima "== 文法" "= Rubyの落とし穴" "faq/trap/index.rd")
(find-rurima "== 組み込みクラス" "= Rubyの落とし穴" "faq/trap/index.rd")
(find-rurima "== ライブラリ" "= Rubyの落とし穴" "faq/trap/index.rd")
(find-rurima "= trap::NKF" "faq/trap/nkf.rd")
(find-rurima "= \\の影響" "faq/trap/backslash.rd")
(find-rurima "= ()で解決するもの" "faq/trap/precedence.rd")
(find-rurima "= Process" "faq/trap/process.rd")
(find-rurima "= Thread" "faq/trap/thread.rd")
(find-rurima "= Numeric" "faq/trap/numeric.rd")
(find-rurima "= ブロック付きメソッド呼び出し" "faq/trap/block.rd")
(find-rurima "= trap::NilClass" "faq/trap/nil.rd")
(find-rurima "--- self & other" "= trap::NilClass" "faq/trap/nil.rd")
(find-rurima "--- self | other" "= trap::NilClass" "faq/trap/nil.rd")
(find-rurima "--- self ^ other" "= trap::NilClass" "faq/trap/nil.rd")
(find-rurima "--- nil?" "= trap::NilClass" "faq/trap/nil.rd")
(find-rurima "--- to_a" "= trap::NilClass" "faq/trap/nil.rd")
(find-rurima "--- to_f        ((<ruby 1.7 feature>))" "= trap::NilClass" "faq/trap/nil.rd")
(find-rurima "--- to_i" "= trap::NilClass" "faq/trap/nil.rd")
(find-rurima "--- to_s" "= trap::NilClass" "faq/trap/nil.rd")
(find-rurima "= trap::CGI" "faq/trap/cgi.rd")
(find-rurima "= 型変換" "faq/trap/implicit-type-conversion.rd")
(find-rurima "= trap::Array" "faq/trap/array.rd")
(find-rurima "= trap::Dir" "faq/trap/dir.rd")
(find-rurima "= 暗黙の $_" "faq/trap/default-line.rd")
(find-rurima "= 破壊的メソッド" "faq/trap/destructive-modify.rd")
(find-rurima "= スコープ、制御構造" "faq/trap/control.rd")
(find-rurima "= 7. 組み込みライブラリ" "faq/builtin.rd")
(find-rurima "== 7.1 (({instance_methods(true)}))は何を返しますか" "= 7. 組み込みライブラリ" "faq/builtin.rd")
(find-rurima "== 7.2 (({rand}))がいつも同じ乱数列を出しますが" "= 7. 組み込みライブラリ" "faq/builtin.rd")
(find-rurima "== 7.3 0から51の中から重複のない5つをランダムに選ぶにはどうしますか" "= 7. 組み込みライブラリ" "faq/builtin.rd")
(find-rurima "== 7.4 ((<Fixnum>))、((<Symbol>))、(({true}))、(({nil}))、(({false}))が即値だということですが、参照との違いは何ですか" "= 7. 組み込みライブラリ" "faq/builtin.rd")
(find-rurima "== 7.5 (({nil}))と(({false}))はどう違いますか" "= 7. 組み込みライブラリ" "faq/builtin.rd")
(find-rurima "== 7.6 ファイルを読み込んで書き換えても変化しません" "= 7. 組み込みライブラリ" "faq/builtin.rd")
(find-rurima "== 7.7 同じ名前のファイルに書き戻したいのですが" "= 7. 組み込みライブラリ" "faq/builtin.rd")
(find-rurima "== 7.8 ファイルに書き込んでそのファイルをコピーしましたが、全部コピーされません" "= 7. 組み込みライブラリ" "faq/builtin.rd")
(find-rurima "== 7.9 パイプで(({less}))に文字列を渡したのですが、表示されません" "= 7. 組み込みライブラリ" "faq/builtin.rd")
(find-rurima "== 7.10 参照されない((<File>))オブジェクトはどうなりますか" "= 7. 組み込みライブラリ" "faq/builtin.rd")
(find-rurima "== 7.11 ファイルを(({close}))しないのは気持ちが悪いのですが" "= 7. 組み込みライブラリ" "faq/builtin.rd")
(find-rurima "== 7.12 ファイルを時間の新しい順にソートしたいのですが" "= 7. 組み込みライブラリ" "faq/builtin.rd")
(find-rurima "== 7.13 ファイル中の単語の出現頻度を調べたいのですが" "= 7. 組み込みライブラリ" "faq/builtin.rd")
(find-rurima "== 7.14 条件に文字列を使ったとき、文字列が空(\"\")の時にも(({true}))になります" "= 7. 組み込みライブラリ" "faq/builtin.rd")
(find-rurima "== 7.15 英語文字列の配列を辞書順にソートしたいのですが" "= 7. 組み込みライブラリ" "faq/builtin.rd")
(find-rurima "== 7.16 (({\"abcd\"[0]}))は、何を返しますか" "= 7. 組み込みライブラリ" "faq/builtin.rd")
(find-rurima "== 7.17 タブをスペースに展開したいのですが" "= 7. 組み込みライブラリ" "faq/builtin.rd")
(find-rurima "== 7.18 バックスラッシュをエスケープするにはどうしますか" "= 7. 組み込みライブラリ" "faq/builtin.rd")
(find-rurima "== 7.19 (({sub}))と(({sub!}))はどう違うのですか" "= 7. 組み込みライブラリ" "faq/builtin.rd")
(find-rurima "== 7.20 \\Zのマッチする場所はどこですか" "= 7. 組み込みライブラリ" "faq/builtin.rd")
(find-rurima "== 7.21 範囲オブジェクトのコンストラクタ(({..}))と(({...}))はどう違いますか" "= 7. 組み込みライブラリ" "faq/builtin.rd")
(find-rurima "== 7.22 関数ポインタはありますか" "= 7. 組み込みライブラリ" "faq/builtin.rd")
(find-rurima "== 7.23 スレッドとプロセスのフォークはどう使い分けるのですか" "= 7. 組み込みライブラリ" "faq/builtin.rd")
(find-rurima "== 7.24 Marshalの使い方を教えてください" "= 7. 組み込みライブラリ" "faq/builtin.rd")
(find-rurima "== 7.25 例外処理はありますか" "= 7. 組み込みライブラリ" "faq/builtin.rd")
(find-rurima "== 7.26 (({trap}))はどのように使いますか" "= 7. 組み込みライブラリ" "faq/builtin.rd")
(find-rurima "== 7.27 ファイルの行数を数えたいのですが" "= 7. 組み込みライブラリ" "faq/builtin.rd")
(find-rurima "== 7.28 配列からハッシュへの変換はどうすればできますか" "= 7. 組み込みライブラリ" "faq/builtin.rd")
(find-rurima "== 7.29 文字列からArrayを作るのは %w(...) でできますが、同じように文字列からHashを作るにはどうすればよいですか" "= 7. 組み込みライブラリ" "faq/builtin.rd")
(find-rurima "== 7.30 例外 NameError が捕捉できません" "= 7. 組み込みライブラリ" "faq/builtin.rd")
(find-rurima "== 7.31 succがあってprevがないのはなぜですか" "= 7. 組み込みライブラリ" "faq/builtin.rd")
(find-rurima "= 8. 拡張ライブラリ" "faq/stdlibs.rd")
(find-rurima "== 8.1 Rubyを対話型で使いたいのですが" "= 8. 拡張ライブラリ" "faq/stdlibs.rd")
(find-rurima "== 8.2 デバッガはありますか" "= 8. 拡張ライブラリ" "faq/stdlibs.rd")
(find-rurima "== 8.3 C言語で書かれたライブラリをRubyで使いたいのですが" "= 8. 拡張ライブラリ" "faq/stdlibs.rd")
(find-rurima "== 8.4 Tcl/Tkのインターフェースはありますか" "= 8. 拡張ライブラリ" "faq/stdlibs.rd")
(find-rurima "== 8.5 Tkが動かないのですが" "= 8. 拡張ライブラリ" "faq/stdlibs.rd")
(find-rurima "== 8.6 gtk+、xformsのインターフェースはありますか" "= 8. 拡張ライブラリ" "faq/stdlibs.rd")
(find-rurima "== 8.7 日付の計算をしたいのですが" "= 8. 拡張ライブラリ" "faq/stdlibs.rd")
